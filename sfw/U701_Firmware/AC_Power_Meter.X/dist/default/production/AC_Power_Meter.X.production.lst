

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 13 10:35:00 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   129                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   199                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   200  0000                     
   201                           ; Version 1.45 (B)
   202                           ; Generated 30/01/2018 GMT
   203                           ; 
   204                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   205                           ; All rights reserved.
   206                           ; 
   207                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   208                           ; 
   209                           ; Redistribution and use in source and binary forms, with or without modification, are
   210                           ; permitted provided that the following conditions are met:
   211                           ; 
   212                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   213                           ;        conditions and the following disclaimer.
   214                           ; 
   215                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   216                           ;        of conditions and the following disclaimer in the documentation and/or other
   217                           ;        materials provided with the distribution.
   218                           ; 
   219                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   220                           ;        software without specific prior written permission.
   221                           ; 
   222                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   223                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   224                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   225                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   226                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   227                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   228                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   229                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   230                           ; 
   231                           ; 
   232                           ; Code-generator required, PIC18LF67K40 Definitions
   233                           ; 
   234                           ; SFR Addresses
   235  0000                     
   236                           	psect	idataBANK0
   237  01B1CC                     __pidataBANK0:
   238                           	opt stack 0
   239                           
   240                           ;initializer for _dimming_period
   241  01B1CC  7FEE               	dw	32750
   242                           
   243                           ;initializer for _TRIAC_Firing_Angle
   244                           ;main.c: 74: volatile double FVR_ADC_Result;
   245                           ;main.c: 75: volatile double AVSS_ADC_Result;
   246                           ;main.c: 76: volatile double ADC_Result_Scaling;
   247                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   248                           ;main.c: 78: volatile double POS12_ADC_Result;
   249                           ;main.c: 79: volatile double Temp_ADC_Result;
   250                           ;main.c: 80: volatile double Temp_ADC_Offset = 612.085;
   251                           ;main.c: 81: double Vpk_const = 169.7056274847714;
   252                           ;main.c: 82: volatile double Vpk;
   253                           ;main.c: 83: volatile double Ipk;
   254                           ;main.c: 84: volatile double Imeas;
   255                           ;main.c: 85: double Irms_offset = -0.113;
   256  01B1CE  F5C3               	dw	62915
   257  01B1D0  3FC8               	dw	16328
   258                           
   259                           	psect	idataBANK2
   260  01AE30                     __pidataBANK2:
   261                           	opt stack 0
   262                           
   263                           ;initializer for getCauseOfResetString@strings
   264  01AE30  75                 	db	low STR_179
   265  01AE31  FD                 	db	high STR_179
   266  01AE32  E5                 	db	low STR_180
   267  01AE33  FD                 	db	high STR_180
   268  01AE34  85                 	db	low STR_181
   269  01AE35  FD                 	db	high STR_181
   270  01AE36  A3                 	db	low STR_182
   271  01AE37  FC                 	db	high STR_182
   272  01AE38  17                 	db	low (STR_184+9)
   273  01AE39  F8                 	db	high (STR_184+9)
   274  01AE3A  0E                 	db	low STR_184
   275  01AE3B  F8                 	db	high STR_184
   276  01AE3C  59                 	db	low STR_185
   277  01AE3D  FB                 	db	high STR_185
   278  01AE3E  50                 	db	low STR_186
   279  01AE3F  FC                 	db	high STR_186
   280  01AE40  3A                 	db	low STR_187
   281  01AE41  FC                 	db	high STR_187
   282                           
   283                           ;initializer for getDeviceIDString@F17550
   284  01AE42  EC                 	db	low STR_176
   285  01AE43  FE                 	db	high STR_176
   286  01AE44  77                 	db	low STR_177
   287  01AE45  FE                 	db	high STR_177
   288  01AE46  6A                 	db	low STR_178
   289  01AE47  FF                 	db	high STR_178
   290                           
   291                           ;initializer for _Irms_offset
   292  01AE48  6C8B               	dw	27787
   293  01AE4A  BDE7               	dw	48615
   294                           
   295                           ;initializer for _Vpk_const
   296                           ;main.c: 74: volatile double FVR_ADC_Result;
   297                           ;main.c: 75: volatile double AVSS_ADC_Result;
   298                           ;main.c: 76: volatile double ADC_Result_Scaling;
   299                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   300                           ;main.c: 78: volatile double POS12_ADC_Result;
   301                           ;main.c: 79: volatile double Temp_ADC_Result;
   302                           ;main.c: 80: volatile double Temp_ADC_Offset = 612.085;
   303  01AE4C  B4A4               	dw	46244
   304  01AE4E  4329               	dw	17193
   305                           
   306                           ;initializer for _Temp_ADC_Offset
   307                           ;main.c: 74: volatile double FVR_ADC_Result;
   308                           ;main.c: 75: volatile double AVSS_ADC_Result;
   309                           ;main.c: 76: volatile double ADC_Result_Scaling;
   310                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   311                           ;main.c: 78: volatile double POS12_ADC_Result;
   312                           ;main.c: 79: volatile double Temp_ADC_Result;
   313  01AE50  0571               	dw	1393
   314  01AE52  4419               	dw	17433
   315                           
   316                           ;initializer for _next_channel
   317  01AE54  3C                 	db	60
   318                           
   319                           	psect	mediumconst
   320  00CEA6                     __pmediumconst:
   321                           	opt stack 0
   322  00CEA6  00                 	db	0
   323  00CEA7                     __powers_:
   324                           	opt stack 0
   325  00CEA7  0000               	dw	0
   326  00CEA9  3F80               	dw	16256
   327  00CEAB  0000               	dw	0
   328  00CEAD  4120               	dw	16672
   329  00CEAF  0000               	dw	0
   330  00CEB1  42C8               	dw	17096
   331  00CEB3  0000               	dw	0
   332  00CEB5  447A               	dw	17530
   333  00CEB7  4000               	dw	16384
   334  00CEB9  461C               	dw	17948
   335  00CEBB  5000               	dw	20480
   336  00CEBD  47C3               	dw	18371
   337  00CEBF  2400               	dw	9216
   338  00CEC1  4974               	dw	18804
   339  00CEC3  9680               	dw	38528
   340  00CEC5  4B18               	dw	19224
   341  00CEC7  BC20               	dw	48160
   342  00CEC9  4CBE               	dw	19646
   343  00CECB  6B28               	dw	27432
   344  00CECD  4E6E               	dw	20078
   345  00CECF  02F9               	dw	761
   346  00CED1  5015               	dw	20501
   347  00CED3  78EC               	dw	30956
   348  00CED5  60AD               	dw	24749
   349  00CED7  F2CA               	dw	62154
   350  00CED9  7149               	dw	29001
   351  00CEDB                     __end_of__powers_:
   352                           	opt stack 0
   353  00CEDB                     __npowers_:
   354                           	opt stack 0
   355  00CEDB  0000               	dw	0
   356  00CEDD  3F80               	dw	16256
   357  00CEDF  CCCD               	dw	52429
   358  00CEE1  3DCC               	dw	15820
   359  00CEE3  D70A               	dw	55050
   360  00CEE5  3C23               	dw	15395
   361  00CEE7  126F               	dw	4719
   362  00CEE9  3A83               	dw	14979
   363  00CEEB  B717               	dw	46871
   364  00CEED  38D1               	dw	14545
   365  00CEEF  C5AC               	dw	50604
   366  00CEF1  3727               	dw	14119
   367  00CEF3  37BD               	dw	14269
   368  00CEF5  3586               	dw	13702
   369  00CEF7  BF95               	dw	49045
   370  00CEF9  33D6               	dw	13270
   371  00CEFB  CC77               	dw	52343
   372  00CEFD  322B               	dw	12843
   373  00CEFF  705F               	dw	28767
   374  00CF01  3089               	dw	12425
   375  00CF03  E6FF               	dw	59135
   376  00CF05  2EDB               	dw	11995
   377  00CF07  E508               	dw	58632
   378  00CF09  1E3C               	dw	7740
   379  00CF0B  4260               	dw	16992
   380  00CF0D  0DA2               	dw	3490
   381  00CF0F                     __end_of__npowers_:
   382                           	opt stack 0
   383  00CF0F                     _dpowers:
   384                           	opt stack 0
   385  00CF0F  0001               	dw	1
   386  00CF11  0000               	dw	0
   387  00CF13  000A               	dw	10
   388  00CF15  0000               	dw	0
   389  00CF17  0064               	dw	100
   390  00CF19  0000               	dw	0
   391  00CF1B  03E8               	dw	1000
   392  00CF1D  0000               	dw	0
   393  00CF1F  2710               	dw	10000
   394  00CF21  0000               	dw	0
   395  00CF23  86A0               	dw	34464
   396  00CF25  0001               	dw	1
   397  00CF27  4240               	dw	16960
   398  00CF29  000F               	dw	15
   399  00CF2B  9680               	dw	38528
   400  00CF2D  0098               	dw	152
   401  00CF2F  E100               	dw	57600
   402  00CF31  05F5               	dw	1525
   403  00CF33  CA00               	dw	51712
   404  00CF35  3B9A               	dw	15258
   405  00CF37                     __end_of_dpowers:
   406                           	opt stack 0
   407  00CF37                     _hexpowers:
   408                           	opt stack 0
   409  00CF37  0001               	dw	1
   410  00CF39  0000               	dw	0
   411  00CF3B  0010               	dw	16
   412  00CF3D  0000               	dw	0
   413  00CF3F  0100               	dw	256
   414  00CF41  0000               	dw	0
   415  00CF43  1000               	dw	4096
   416  00CF45  0000               	dw	0
   417  00CF47  0000               	dw	0
   418  00CF49  0001               	dw	1
   419  00CF4B  0000               	dw	0
   420  00CF4D  0010               	dw	16
   421  00CF4F  0000               	dw	0
   422  00CF51  0100               	dw	256
   423  00CF53  0000               	dw	0
   424  00CF55  1000               	dw	4096
   425  00CF57                     __end_of_hexpowers:
   426                           	opt stack 0
   427  00CF57                     _max_FVR_ADC_Result_address:
   428                           	opt stack 0
   429  00CF57  0014               	dw	20
   430  00CF59                     __end_of_max_FVR_ADC_Result_address:
   431                           	opt stack 0
   432  00CF59                     _max_Temp_ADC_Result_address:
   433                           	opt stack 0
   434  00CF59  0010               	dw	16
   435  00CF5B                     __end_of_max_Temp_ADC_Result_address:
   436                           	opt stack 0
   437  00CF5B                     _max_POS12_ADC_Result_address:
   438                           	opt stack 0
   439  00CF5B  000C               	dw	12
   440  00CF5D                     __end_of_max_POS12_ADC_Result_address:
   441                           	opt stack 0
   442  00CF5D                     _max_POS3P3_ADC_Result_address:
   443                           	opt stack 0
   444  00CF5D  0008               	dw	8
   445  00CF5F                     __end_of_max_POS3P3_ADC_Result_address:
   446                           	opt stack 0
   447  00CF5F                     _max_Power_address:
   448                           	opt stack 0
   449  00CF5F  0004               	dw	4
   450  00CF61                     __end_of_max_Power_address:
   451                           	opt stack 0
   452  00CF61                     _max_Irms_address:
   453                           	opt stack 0
   454  00CF61  0000               	dw	0
   455  00CF63                     __end_of_max_Irms_address:
   456                           	opt stack 0
   457  00CF63                     _Total_Energy_address:
   458                           	opt stack 0
   459  00CF63  0018               	dw	24
   460  00CF65                     __end_of_Total_Energy_address:
   461                           	opt stack 0
   462  00CF65                     _OledFont:
   463                           	opt stack 0
   464  00CF65  00                 	db	0
   465  00CF66  00                 	db	0
   466  00CF67  00                 	db	0
   467  00CF68  00                 	db	0
   468  00CF69  00                 	db	0
   469  00CF6A  00                 	db	0
   470  00CF6B  00                 	db	0
   471  00CF6C  00                 	db	0
   472  00CF6D  00                 	db	0
   473  00CF6E  00                 	db	0
   474  00CF6F  5F                 	db	95
   475  00CF70  00                 	db	0
   476  00CF71  00                 	db	0
   477  00CF72  00                 	db	0
   478  00CF73  00                 	db	0
   479  00CF74  00                 	db	0
   480  00CF75  00                 	db	0
   481  00CF76  00                 	db	0
   482  00CF77  07                 	db	7
   483  00CF78  00                 	db	0
   484  00CF79  07                 	db	7
   485  00CF7A  00                 	db	0
   486  00CF7B  00                 	db	0
   487  00CF7C  00                 	db	0
   488  00CF7D  00                 	db	0
   489  00CF7E  14                 	db	20
   490  00CF7F  7F                 	db	127
   491  00CF80  14                 	db	20
   492  00CF81  7F                 	db	127
   493  00CF82  14                 	db	20
   494  00CF83  00                 	db	0
   495  00CF84  00                 	db	0
   496  00CF85  00                 	db	0
   497  00CF86  24                 	db	36
   498  00CF87  2A                 	db	42
   499  00CF88  7F                 	db	127
   500  00CF89  2A                 	db	42
   501  00CF8A  12                 	db	18
   502  00CF8B  00                 	db	0
   503  00CF8C  00                 	db	0
   504  00CF8D  00                 	db	0
   505  00CF8E  23                 	db	35
   506  00CF8F  13                 	db	19
   507  00CF90  08                 	db	8
   508  00CF91  64                 	db	100
   509  00CF92  62                 	db	98
   510  00CF93  00                 	db	0
   511  00CF94  00                 	db	0
   512  00CF95  00                 	db	0
   513  00CF96  36                 	db	54
   514  00CF97  49                 	db	73
   515  00CF98  55                 	db	85
   516  00CF99  22                 	db	34
   517  00CF9A  50                 	db	80
   518  00CF9B  00                 	db	0
   519  00CF9C  00                 	db	0
   520  00CF9D  00                 	db	0
   521  00CF9E  00                 	db	0
   522  00CF9F  05                 	db	5
   523  00CFA0  03                 	db	3
   524  00CFA1  00                 	db	0
   525  00CFA2  00                 	db	0
   526  00CFA3  00                 	db	0
   527  00CFA4  00                 	db	0
   528  00CFA5  00                 	db	0
   529  00CFA6  1C                 	db	28
   530  00CFA7  22                 	db	34
   531  00CFA8  41                 	db	65
   532  00CFA9  00                 	db	0
   533  00CFAA  00                 	db	0
   534  00CFAB  00                 	db	0
   535  00CFAC  00                 	db	0
   536  00CFAD  00                 	db	0
   537  00CFAE  41                 	db	65
   538  00CFAF  22                 	db	34
   539  00CFB0  1C                 	db	28
   540  00CFB1  00                 	db	0
   541  00CFB2  00                 	db	0
   542  00CFB3  00                 	db	0
   543  00CFB4  00                 	db	0
   544  00CFB5  00                 	db	0
   545  00CFB6  08                 	db	8
   546  00CFB7  2A                 	db	42
   547  00CFB8  1C                 	db	28
   548  00CFB9  2A                 	db	42
   549  00CFBA  08                 	db	8
   550  00CFBB  00                 	db	0
   551  00CFBC  00                 	db	0
   552  00CFBD  00                 	db	0
   553  00CFBE  08                 	db	8
   554  00CFBF  08                 	db	8
   555  00CFC0  3E                 	db	62
   556  00CFC1  08                 	db	8
   557  00CFC2  08                 	db	8
   558  00CFC3  00                 	db	0
   559  00CFC4  00                 	db	0
   560  00CFC5  00                 	db	0
   561  00CFC6  A0                 	db	160
   562  00CFC7  60                 	db	96
   563  00CFC8  00                 	db	0
   564  00CFC9  00                 	db	0
   565  00CFCA  00                 	db	0
   566  00CFCB  00                 	db	0
   567  00CFCC  00                 	db	0
   568  00CFCD  00                 	db	0
   569  00CFCE  08                 	db	8
   570  00CFCF  08                 	db	8
   571  00CFD0  08                 	db	8
   572  00CFD1  08                 	db	8
   573  00CFD2  08                 	db	8
   574  00CFD3  00                 	db	0
   575  00CFD4  00                 	db	0
   576  00CFD5  00                 	db	0
   577  00CFD6  60                 	db	96
   578  00CFD7  60                 	db	96
   579  00CFD8  00                 	db	0
   580  00CFD9  00                 	db	0
   581  00CFDA  00                 	db	0
   582  00CFDB  00                 	db	0
   583  00CFDC  00                 	db	0
   584  00CFDD  00                 	db	0
   585  00CFDE  20                 	db	32
   586  00CFDF  10                 	db	16
   587  00CFE0  08                 	db	8
   588  00CFE1  04                 	db	4
   589  00CFE2  02                 	db	2
   590  00CFE3  00                 	db	0
   591  00CFE4  00                 	db	0
   592  00CFE5  00                 	db	0
   593  00CFE6  3E                 	db	62
   594  00CFE7  51                 	db	81
   595  00CFE8  49                 	db	73
   596  00CFE9  45                 	db	69
   597  00CFEA  3E                 	db	62
   598  00CFEB  00                 	db	0
   599  00CFEC  00                 	db	0
   600  00CFED  00                 	db	0
   601  00CFEE  00                 	db	0
   602  00CFEF  42                 	db	66
   603  00CFF0  7F                 	db	127
   604  00CFF1  40                 	db	64
   605  00CFF2  00                 	db	0
   606  00CFF3  00                 	db	0
   607  00CFF4  00                 	db	0
   608  00CFF5  00                 	db	0
   609  00CFF6  62                 	db	98
   610  00CFF7  51                 	db	81
   611  00CFF8  49                 	db	73
   612  00CFF9  49                 	db	73
   613  00CFFA  46                 	db	70
   614  00CFFB  00                 	db	0
   615  00CFFC  00                 	db	0
   616  00CFFD  00                 	db	0
   617  00CFFE  22                 	db	34
   618  00CFFF  41                 	db	65
   619  00D000  49                 	db	73
   620  00D001  49                 	db	73
   621  00D002  36                 	db	54
   622  00D003  00                 	db	0
   623  00D004  00                 	db	0
   624  00D005  00                 	db	0
   625  00D006  18                 	db	24
   626  00D007  14                 	db	20
   627  00D008  12                 	db	18
   628  00D009  7F                 	db	127
   629  00D00A  10                 	db	16
   630  00D00B  00                 	db	0
   631  00D00C  00                 	db	0
   632  00D00D  00                 	db	0
   633  00D00E  27                 	db	39
   634  00D00F  45                 	db	69
   635  00D010  45                 	db	69
   636  00D011  45                 	db	69
   637  00D012  39                 	db	57
   638  00D013  00                 	db	0
   639  00D014  00                 	db	0
   640  00D015  00                 	db	0
   641  00D016  3C                 	db	60
   642  00D017  4A                 	db	74
   643  00D018  49                 	db	73
   644  00D019  49                 	db	73
   645  00D01A  30                 	db	48
   646  00D01B  00                 	db	0
   647  00D01C  00                 	db	0
   648  00D01D  00                 	db	0
   649  00D01E  01                 	db	1
   650  00D01F  71                 	db	113
   651  00D020  09                 	db	9
   652  00D021  05                 	db	5
   653  00D022  03                 	db	3
   654  00D023  00                 	db	0
   655  00D024  00                 	db	0
   656  00D025  00                 	db	0
   657  00D026  36                 	db	54
   658  00D027  49                 	db	73
   659  00D028  49                 	db	73
   660  00D029  49                 	db	73
   661  00D02A  36                 	db	54
   662  00D02B  00                 	db	0
   663  00D02C  00                 	db	0
   664  00D02D  00                 	db	0
   665  00D02E  06                 	db	6
   666  00D02F  49                 	db	73
   667  00D030  49                 	db	73
   668  00D031  29                 	db	41
   669  00D032  1E                 	db	30
   670  00D033  00                 	db	0
   671  00D034  00                 	db	0
   672  00D035  00                 	db	0
   673  00D036  00                 	db	0
   674  00D037  36                 	db	54
   675  00D038  36                 	db	54
   676  00D039  00                 	db	0
   677  00D03A  00                 	db	0
   678  00D03B  00                 	db	0
   679  00D03C  00                 	db	0
   680  00D03D  00                 	db	0
   681  00D03E  00                 	db	0
   682  00D03F  AC                 	db	172
   683  00D040  6C                 	db	108
   684  00D041  00                 	db	0
   685  00D042  00                 	db	0
   686  00D043  00                 	db	0
   687  00D044  00                 	db	0
   688  00D045  00                 	db	0
   689  00D046  08                 	db	8
   690  00D047  14                 	db	20
   691  00D048  22                 	db	34
   692  00D049  41                 	db	65
   693  00D04A  00                 	db	0
   694  00D04B  00                 	db	0
   695  00D04C  00                 	db	0
   696  00D04D  00                 	db	0
   697  00D04E  14                 	db	20
   698  00D04F  14                 	db	20
   699  00D050  14                 	db	20
   700  00D051  14                 	db	20
   701  00D052  14                 	db	20
   702  00D053  00                 	db	0
   703  00D054  00                 	db	0
   704  00D055  00                 	db	0
   705  00D056  41                 	db	65
   706  00D057  22                 	db	34
   707  00D058  14                 	db	20
   708  00D059  08                 	db	8
   709  00D05A  00                 	db	0
   710  00D05B  00                 	db	0
   711  00D05C  00                 	db	0
   712  00D05D  00                 	db	0
   713  00D05E  02                 	db	2
   714  00D05F  01                 	db	1
   715  00D060  51                 	db	81
   716  00D061  09                 	db	9
   717  00D062  06                 	db	6
   718  00D063  00                 	db	0
   719  00D064  00                 	db	0
   720  00D065  00                 	db	0
   721  00D066  32                 	db	50
   722  00D067  49                 	db	73
   723  00D068  79                 	db	121
   724  00D069  41                 	db	65
   725  00D06A  3E                 	db	62
   726  00D06B  00                 	db	0
   727  00D06C  00                 	db	0
   728  00D06D  00                 	db	0
   729  00D06E  7E                 	db	126
   730  00D06F  09                 	db	9
   731  00D070  09                 	db	9
   732  00D071  09                 	db	9
   733  00D072  7E                 	db	126
   734  00D073  00                 	db	0
   735  00D074  00                 	db	0
   736  00D075  00                 	db	0
   737  00D076  7F                 	db	127
   738  00D077  49                 	db	73
   739  00D078  49                 	db	73
   740  00D079  49                 	db	73
   741  00D07A  36                 	db	54
   742  00D07B  00                 	db	0
   743  00D07C  00                 	db	0
   744  00D07D  00                 	db	0
   745  00D07E  3E                 	db	62
   746  00D07F  41                 	db	65
   747  00D080  41                 	db	65
   748  00D081  41                 	db	65
   749  00D082  22                 	db	34
   750  00D083  00                 	db	0
   751  00D084  00                 	db	0
   752  00D085  00                 	db	0
   753  00D086  7F                 	db	127
   754  00D087  41                 	db	65
   755  00D088  41                 	db	65
   756  00D089  22                 	db	34
   757  00D08A  1C                 	db	28
   758  00D08B  00                 	db	0
   759  00D08C  00                 	db	0
   760  00D08D  00                 	db	0
   761  00D08E  7F                 	db	127
   762  00D08F  49                 	db	73
   763  00D090  49                 	db	73
   764  00D091  49                 	db	73
   765  00D092  41                 	db	65
   766  00D093  00                 	db	0
   767  00D094  00                 	db	0
   768  00D095  00                 	db	0
   769  00D096  7F                 	db	127
   770  00D097  09                 	db	9
   771  00D098  09                 	db	9
   772  00D099  09                 	db	9
   773  00D09A  01                 	db	1
   774  00D09B  00                 	db	0
   775  00D09C  00                 	db	0
   776  00D09D  00                 	db	0
   777  00D09E  3E                 	db	62
   778  00D09F  41                 	db	65
   779  00D0A0  41                 	db	65
   780  00D0A1  51                 	db	81
   781  00D0A2  72                 	db	114
   782  00D0A3  00                 	db	0
   783  00D0A4  00                 	db	0
   784  00D0A5  00                 	db	0
   785  00D0A6  7F                 	db	127
   786  00D0A7  08                 	db	8
   787  00D0A8  08                 	db	8
   788  00D0A9  08                 	db	8
   789  00D0AA  7F                 	db	127
   790  00D0AB  00                 	db	0
   791  00D0AC  00                 	db	0
   792  00D0AD  00                 	db	0
   793  00D0AE  41                 	db	65
   794  00D0AF  7F                 	db	127
   795  00D0B0  41                 	db	65
   796  00D0B1  00                 	db	0
   797  00D0B2  00                 	db	0
   798  00D0B3  00                 	db	0
   799  00D0B4  00                 	db	0
   800  00D0B5  00                 	db	0
   801  00D0B6  20                 	db	32
   802  00D0B7  40                 	db	64
   803  00D0B8  41                 	db	65
   804  00D0B9  3F                 	db	63
   805  00D0BA  01                 	db	1
   806  00D0BB  00                 	db	0
   807  00D0BC  00                 	db	0
   808  00D0BD  00                 	db	0
   809  00D0BE  7F                 	db	127
   810  00D0BF  08                 	db	8
   811  00D0C0  14                 	db	20
   812  00D0C1  22                 	db	34
   813  00D0C2  41                 	db	65
   814  00D0C3  00                 	db	0
   815  00D0C4  00                 	db	0
   816  00D0C5  00                 	db	0
   817  00D0C6  7F                 	db	127
   818  00D0C7  40                 	db	64
   819  00D0C8  40                 	db	64
   820  00D0C9  40                 	db	64
   821  00D0CA  40                 	db	64
   822  00D0CB  00                 	db	0
   823  00D0CC  00                 	db	0
   824  00D0CD  00                 	db	0
   825  00D0CE  7F                 	db	127
   826  00D0CF  02                 	db	2
   827  00D0D0  0C                 	db	12
   828  00D0D1  02                 	db	2
   829  00D0D2  7F                 	db	127
   830  00D0D3  00                 	db	0
   831  00D0D4  00                 	db	0
   832  00D0D5  00                 	db	0
   833  00D0D6  7F                 	db	127
   834  00D0D7  04                 	db	4
   835  00D0D8  08                 	db	8
   836  00D0D9  10                 	db	16
   837  00D0DA  7F                 	db	127
   838  00D0DB  00                 	db	0
   839  00D0DC  00                 	db	0
   840  00D0DD  00                 	db	0
   841  00D0DE  3E                 	db	62
   842  00D0DF  41                 	db	65
   843  00D0E0  41                 	db	65
   844  00D0E1  41                 	db	65
   845  00D0E2  3E                 	db	62
   846  00D0E3  00                 	db	0
   847  00D0E4  00                 	db	0
   848  00D0E5  00                 	db	0
   849  00D0E6  7F                 	db	127
   850  00D0E7  09                 	db	9
   851  00D0E8  09                 	db	9
   852  00D0E9  09                 	db	9
   853  00D0EA  06                 	db	6
   854  00D0EB  00                 	db	0
   855  00D0EC  00                 	db	0
   856  00D0ED  00                 	db	0
   857  00D0EE  3E                 	db	62
   858  00D0EF  41                 	db	65
   859  00D0F0  51                 	db	81
   860  00D0F1  21                 	db	33
   861  00D0F2  5E                 	db	94
   862  00D0F3  00                 	db	0
   863  00D0F4  00                 	db	0
   864  00D0F5  00                 	db	0
   865  00D0F6  7F                 	db	127
   866  00D0F7  09                 	db	9
   867  00D0F8  19                 	db	25
   868  00D0F9  29                 	db	41
   869  00D0FA  46                 	db	70
   870  00D0FB  00                 	db	0
   871  00D0FC  00                 	db	0
   872  00D0FD  00                 	db	0
   873  00D0FE  26                 	db	38
   874  00D0FF  49                 	db	73
   875  00D100  49                 	db	73
   876  00D101  49                 	db	73
   877  00D102  46                 	db	70
   878  00D103  00                 	db	0
   879  00D104  00                 	db	0
   880  00D105  00                 	db	0
   881  00D106  01                 	db	1
   882  00D107  01                 	db	1
   883  00D108  7F                 	db	127
   884  00D109  01                 	db	1
   885  00D10A  01                 	db	1
   886  00D10B  00                 	db	0
   887  00D10C  00                 	db	0
   888  00D10D  00                 	db	0
   889  00D10E  3F                 	db	63
   890  00D10F  40                 	db	64
   891  00D110  40                 	db	64
   892  00D111  40                 	db	64
   893  00D112  3F                 	db	63
   894  00D113  00                 	db	0
   895  00D114  00                 	db	0
   896  00D115  00                 	db	0
   897  00D116  1F                 	db	31
   898  00D117  20                 	db	32
   899  00D118  40                 	db	64
   900  00D119  20                 	db	32
   901  00D11A  1F                 	db	31
   902  00D11B  00                 	db	0
   903  00D11C  00                 	db	0
   904  00D11D  00                 	db	0
   905  00D11E  3F                 	db	63
   906  00D11F  40                 	db	64
   907  00D120  38                 	db	56
   908  00D121  40                 	db	64
   909  00D122  3F                 	db	63
   910  00D123  00                 	db	0
   911  00D124  00                 	db	0
   912  00D125  00                 	db	0
   913  00D126  63                 	db	99
   914  00D127  14                 	db	20
   915  00D128  08                 	db	8
   916  00D129  14                 	db	20
   917  00D12A  63                 	db	99
   918  00D12B  00                 	db	0
   919  00D12C  00                 	db	0
   920  00D12D  00                 	db	0
   921  00D12E  03                 	db	3
   922  00D12F  04                 	db	4
   923  00D130  78                 	db	120
   924  00D131  04                 	db	4
   925  00D132  03                 	db	3
   926  00D133  00                 	db	0
   927  00D134  00                 	db	0
   928  00D135  00                 	db	0
   929  00D136  61                 	db	97
   930  00D137  51                 	db	81
   931  00D138  49                 	db	73
   932  00D139  45                 	db	69
   933  00D13A  43                 	db	67
   934  00D13B  00                 	db	0
   935  00D13C  00                 	db	0
   936  00D13D  00                 	db	0
   937  00D13E  7F                 	db	127
   938  00D13F  41                 	db	65
   939  00D140  41                 	db	65
   940  00D141  00                 	db	0
   941  00D142  00                 	db	0
   942  00D143  00                 	db	0
   943  00D144  00                 	db	0
   944  00D145  00                 	db	0
   945  00D146  02                 	db	2
   946  00D147  04                 	db	4
   947  00D148  08                 	db	8
   948  00D149  10                 	db	16
   949  00D14A  20                 	db	32
   950  00D14B  00                 	db	0
   951  00D14C  00                 	db	0
   952  00D14D  00                 	db	0
   953  00D14E  41                 	db	65
   954  00D14F  41                 	db	65
   955  00D150  7F                 	db	127
   956  00D151  00                 	db	0
   957  00D152  00                 	db	0
   958  00D153  00                 	db	0
   959  00D154  00                 	db	0
   960  00D155  00                 	db	0
   961  00D156  04                 	db	4
   962  00D157  02                 	db	2
   963  00D158  01                 	db	1
   964  00D159  02                 	db	2
   965  00D15A  04                 	db	4
   966  00D15B  00                 	db	0
   967  00D15C  00                 	db	0
   968  00D15D  00                 	db	0
   969  00D15E  80                 	db	128
   970  00D15F  80                 	db	128
   971  00D160  80                 	db	128
   972  00D161  80                 	db	128
   973  00D162  80                 	db	128
   974  00D163  00                 	db	0
   975  00D164  00                 	db	0
   976  00D165  00                 	db	0
   977  00D166  01                 	db	1
   978  00D167  02                 	db	2
   979  00D168  04                 	db	4
   980  00D169  00                 	db	0
   981  00D16A  00                 	db	0
   982  00D16B  00                 	db	0
   983  00D16C  00                 	db	0
   984  00D16D  00                 	db	0
   985  00D16E  20                 	db	32
   986  00D16F  54                 	db	84
   987  00D170  54                 	db	84
   988  00D171  54                 	db	84
   989  00D172  78                 	db	120
   990  00D173  00                 	db	0
   991  00D174  00                 	db	0
   992  00D175  00                 	db	0
   993  00D176  7F                 	db	127
   994  00D177  48                 	db	72
   995  00D178  44                 	db	68
   996  00D179  44                 	db	68
   997  00D17A  38                 	db	56
   998  00D17B  00                 	db	0
   999  00D17C  00                 	db	0
  1000  00D17D  00                 	db	0
  1001  00D17E  38                 	db	56
  1002  00D17F  44                 	db	68
  1003  00D180  44                 	db	68
  1004  00D181  28                 	db	40
  1005  00D182  00                 	db	0
  1006  00D183  00                 	db	0
  1007  00D184  00                 	db	0
  1008  00D185  00                 	db	0
  1009  00D186  38                 	db	56
  1010  00D187  44                 	db	68
  1011  00D188  44                 	db	68
  1012  00D189  48                 	db	72
  1013  00D18A  7F                 	db	127
  1014  00D18B  00                 	db	0
  1015  00D18C  00                 	db	0
  1016  00D18D  00                 	db	0
  1017  00D18E  38                 	db	56
  1018  00D18F  54                 	db	84
  1019  00D190  54                 	db	84
  1020  00D191  54                 	db	84
  1021  00D192  18                 	db	24
  1022  00D193  00                 	db	0
  1023  00D194  00                 	db	0
  1024  00D195  00                 	db	0
  1025  00D196  08                 	db	8
  1026  00D197  7E                 	db	126
  1027  00D198  09                 	db	9
  1028  00D199  02                 	db	2
  1029  00D19A  00                 	db	0
  1030  00D19B  00                 	db	0
  1031  00D19C  00                 	db	0
  1032  00D19D  00                 	db	0
  1033  00D19E  18                 	db	24
  1034  00D19F  A4                 	db	164
  1035  00D1A0  A4                 	db	164
  1036  00D1A1  A4                 	db	164
  1037  00D1A2  7C                 	db	124
  1038  00D1A3  00                 	db	0
  1039  00D1A4  00                 	db	0
  1040  00D1A5  00                 	db	0
  1041  00D1A6  7F                 	db	127
  1042  00D1A7  08                 	db	8
  1043  00D1A8  04                 	db	4
  1044  00D1A9  04                 	db	4
  1045  00D1AA  78                 	db	120
  1046  00D1AB  00                 	db	0
  1047  00D1AC  00                 	db	0
  1048  00D1AD  00                 	db	0
  1049  00D1AE  00                 	db	0
  1050  00D1AF  7D                 	db	125
  1051  00D1B0  00                 	db	0
  1052  00D1B1  00                 	db	0
  1053  00D1B2  00                 	db	0
  1054  00D1B3  00                 	db	0
  1055  00D1B4  00                 	db	0
  1056  00D1B5  00                 	db	0
  1057  00D1B6  80                 	db	128
  1058  00D1B7  84                 	db	132
  1059  00D1B8  7D                 	db	125
  1060  00D1B9  00                 	db	0
  1061  00D1BA  00                 	db	0
  1062  00D1BB  00                 	db	0
  1063  00D1BC  00                 	db	0
  1064  00D1BD  00                 	db	0
  1065  00D1BE  7F                 	db	127
  1066  00D1BF  10                 	db	16
  1067  00D1C0  28                 	db	40
  1068  00D1C1  44                 	db	68
  1069  00D1C2  00                 	db	0
  1070  00D1C3  00                 	db	0
  1071  00D1C4  00                 	db	0
  1072  00D1C5  00                 	db	0
  1073  00D1C6  41                 	db	65
  1074  00D1C7  7F                 	db	127
  1075  00D1C8  40                 	db	64
  1076  00D1C9  00                 	db	0
  1077  00D1CA  00                 	db	0
  1078  00D1CB  00                 	db	0
  1079  00D1CC  00                 	db	0
  1080  00D1CD  00                 	db	0
  1081  00D1CE  7C                 	db	124
  1082  00D1CF  04                 	db	4
  1083  00D1D0  18                 	db	24
  1084  00D1D1  04                 	db	4
  1085  00D1D2  78                 	db	120
  1086  00D1D3  00                 	db	0
  1087  00D1D4  00                 	db	0
  1088  00D1D5  00                 	db	0
  1089  00D1D6  7C                 	db	124
  1090  00D1D7  08                 	db	8
  1091  00D1D8  04                 	db	4
  1092  00D1D9  7C                 	db	124
  1093  00D1DA  00                 	db	0
  1094  00D1DB  00                 	db	0
  1095  00D1DC  00                 	db	0
  1096  00D1DD  00                 	db	0
  1097  00D1DE  38                 	db	56
  1098  00D1DF  44                 	db	68
  1099  00D1E0  44                 	db	68
  1100  00D1E1  38                 	db	56
  1101  00D1E2  00                 	db	0
  1102  00D1E3  00                 	db	0
  1103  00D1E4  00                 	db	0
  1104  00D1E5  00                 	db	0
  1105  00D1E6  FC                 	db	252
  1106  00D1E7  24                 	db	36
  1107  00D1E8  24                 	db	36
  1108  00D1E9  18                 	db	24
  1109  00D1EA  00                 	db	0
  1110  00D1EB  00                 	db	0
  1111  00D1EC  00                 	db	0
  1112  00D1ED  00                 	db	0
  1113  00D1EE  18                 	db	24
  1114  00D1EF  24                 	db	36
  1115  00D1F0  24                 	db	36
  1116  00D1F1  FC                 	db	252
  1117  00D1F2  00                 	db	0
  1118  00D1F3  00                 	db	0
  1119  00D1F4  00                 	db	0
  1120  00D1F5  00                 	db	0
  1121  00D1F6  00                 	db	0
  1122  00D1F7  7C                 	db	124
  1123  00D1F8  08                 	db	8
  1124  00D1F9  04                 	db	4
  1125  00D1FA  00                 	db	0
  1126  00D1FB  00                 	db	0
  1127  00D1FC  00                 	db	0
  1128  00D1FD  00                 	db	0
  1129  00D1FE  48                 	db	72
  1130  00D1FF  54                 	db	84
  1131  00D200  54                 	db	84
  1132  00D201  24                 	db	36
  1133  00D202  00                 	db	0
  1134  00D203  00                 	db	0
  1135  00D204  00                 	db	0
  1136  00D205  00                 	db	0
  1137  00D206  04                 	db	4
  1138  00D207  7F                 	db	127
  1139  00D208  44                 	db	68
  1140  00D209  00                 	db	0
  1141  00D20A  00                 	db	0
  1142  00D20B  00                 	db	0
  1143  00D20C  00                 	db	0
  1144  00D20D  00                 	db	0
  1145  00D20E  3C                 	db	60
  1146  00D20F  40                 	db	64
  1147  00D210  40                 	db	64
  1148  00D211  7C                 	db	124
  1149  00D212  00                 	db	0
  1150  00D213  00                 	db	0
  1151  00D214  00                 	db	0
  1152  00D215  00                 	db	0
  1153  00D216  1C                 	db	28
  1154  00D217  20                 	db	32
  1155  00D218  40                 	db	64
  1156  00D219  20                 	db	32
  1157  00D21A  1C                 	db	28
  1158  00D21B  00                 	db	0
  1159  00D21C  00                 	db	0
  1160  00D21D  00                 	db	0
  1161  00D21E  3C                 	db	60
  1162  00D21F  40                 	db	64
  1163  00D220  30                 	db	48
  1164  00D221  40                 	db	64
  1165  00D222  3C                 	db	60
  1166  00D223  00                 	db	0
  1167  00D224  00                 	db	0
  1168  00D225  00                 	db	0
  1169  00D226  44                 	db	68
  1170  00D227  28                 	db	40
  1171  00D228  10                 	db	16
  1172  00D229  28                 	db	40
  1173  00D22A  44                 	db	68
  1174  00D22B  00                 	db	0
  1175  00D22C  00                 	db	0
  1176  00D22D  00                 	db	0
  1177  00D22E  1C                 	db	28
  1178  00D22F  A0                 	db	160
  1179  00D230  A0                 	db	160
  1180  00D231  7C                 	db	124
  1181  00D232  00                 	db	0
  1182  00D233  00                 	db	0
  1183  00D234  00                 	db	0
  1184  00D235  00                 	db	0
  1185  00D236  44                 	db	68
  1186  00D237  64                 	db	100
  1187  00D238  54                 	db	84
  1188  00D239  4C                 	db	76
  1189  00D23A  44                 	db	68
  1190  00D23B  00                 	db	0
  1191  00D23C  00                 	db	0
  1192  00D23D  00                 	db	0
  1193  00D23E  08                 	db	8
  1194  00D23F  36                 	db	54
  1195  00D240  41                 	db	65
  1196  00D241  00                 	db	0
  1197  00D242  00                 	db	0
  1198  00D243  00                 	db	0
  1199  00D244  00                 	db	0
  1200  00D245  00                 	db	0
  1201  00D246  00                 	db	0
  1202  00D247  7F                 	db	127
  1203  00D248  00                 	db	0
  1204  00D249  00                 	db	0
  1205  00D24A  00                 	db	0
  1206  00D24B  00                 	db	0
  1207  00D24C  00                 	db	0
  1208  00D24D  00                 	db	0
  1209  00D24E  41                 	db	65
  1210  00D24F  36                 	db	54
  1211  00D250  08                 	db	8
  1212  00D251  00                 	db	0
  1213  00D252  00                 	db	0
  1214  00D253  00                 	db	0
  1215  00D254  00                 	db	0
  1216  00D255  00                 	db	0
  1217  00D256  02                 	db	2
  1218  00D257  01                 	db	1
  1219  00D258  01                 	db	1
  1220  00D259  02                 	db	2
  1221  00D25A  01                 	db	1
  1222  00D25B  00                 	db	0
  1223  00D25C  00                 	db	0
  1224  00D25D  00                 	db	0
  1225  00D25E  02                 	db	2
  1226  00D25F  05                 	db	5
  1227  00D260  05                 	db	5
  1228  00D261  02                 	db	2
  1229  00D262  00                 	db	0
  1230  00D263  00                 	db	0
  1231  00D264  00                 	db	0
  1232  00D265                     __end_of_OledFont:
  1233                           	opt stack 0
  1234  00D265                     atan@coeff_a:
  1235                           	opt stack 0
  1236  00D265  3C06               	dw	15366
  1237  00D267  4204               	dw	16900
  1238  00D269  9F7D               	dw	40829
  1239  00D26B  426A               	dw	17002
  1240  00D26D  905C               	dw	36956
  1241  00D26F  4201               	dw	16897
  1242  00D271  4D60               	dw	19808
  1243  00D273  40BB               	dw	16571
  1244  00D275  EC51               	dw	60497
  1245  00D277  3E47               	dw	15943
  1246  00D279  8DDE               	dw	36318
  1247  00D27B  BB1F               	dw	47903
  1248  00D27D                     __end_ofatan@coeff_a:
  1249                           	opt stack 0
  1250  00D27D                     sin@coeff_a:
  1251                           	opt stack 0
  1252  00D27D  F3EC               	dw	62444
  1253  00D27F  484A               	dw	18506
  1254  00D281  9535               	dw	38197
  1255  00D283  C795               	dw	51093
  1256  00D285  C117               	dw	49431
  1257  00D287  45DC               	dw	17884
  1258  00D289  DBFD               	dw	56317
  1259  00D28B  C36D               	dw	50029
  1260  00D28D  B372               	dw	45938
  1261  00D28F  4033               	dw	16435
  1262  00D291                     __end_ofsin@coeff_a:
  1263                           	opt stack 0
  1264  00D291                     atan@coeff_b:
  1265                           	opt stack 0
  1266  00D291  3C06               	dw	15366
  1267  00D293  4204               	dw	16900
  1268  00D295  59C0               	dw	22976
  1269  00D297  428B               	dw	17035
  1270  00D299  0474               	dw	1140
  1271  00D29B  4244               	dw	16964
  1272  00D29D  9BF9               	dw	39929
  1273  00D29F  414F               	dw	16719
  1274  00D2A1  0000               	dw	0
  1275  00D2A3  3F80               	dw	16256
  1276  00D2A5                     __end_ofatan@coeff_b:
  1277                           	opt stack 0
  1278  00D2A5                     sin@coeff_b:
  1279                           	opt stack 0
  1280  00D2A5  342B               	dw	13355
  1281  00D2A7  4801               	dw	18433
  1282  00D2A9  9D7F               	dw	40319
  1283  00D2AB  45B0               	dw	17840
  1284  00D2AD  FFE7               	dw	65511
  1285  00D2AF  42D9               	dw	17113
  1286  00D2B1  0000               	dw	0
  1287  00D2B3  3F80               	dw	16256
  1288  00D2B5                     __end_ofsin@coeff_b:
  1289                           	opt stack 0
  1290  00D2B5                     STR_162:
  1291  00D2B5  4C                 	db	76	;'L'
  1292  00D2B6  69                 	db	105	;'i'
  1293  00D2B7  73                 	db	115	;'s'
  1294  00D2B8  74                 	db	116	;'t'
  1295  00D2B9  20                 	db	32
  1296  00D2BA  6F                 	db	111	;'o'
  1297  00D2BB  66                 	db	102	;'f'
  1298  00D2BC  20                 	db	32
  1299  00D2BD  61                 	db	97	;'a'
  1300  00D2BE  6C                 	db	108	;'l'
  1301  00D2BF  6C                 	db	108	;'l'
  1302  00D2C0  20                 	db	32
  1303  00D2C1  73                 	db	115	;'s'
  1304  00D2C2  75                 	db	117	;'u'
  1305  00D2C3  70                 	db	112	;'p'
  1306  00D2C4  70                 	db	112	;'p'
  1307  00D2C5  6F                 	db	111	;'o'
  1308  00D2C6  72                 	db	114	;'r'
  1309  00D2C7  74                 	db	116	;'t'
  1310  00D2C8  65                 	db	101	;'e'
  1311  00D2C9  64                 	db	100	;'d'
  1312  00D2CA  20                 	db	32
  1313  00D2CB  63                 	db	99	;'c'
  1314  00D2CC  6F                 	db	111	;'o'
  1315  00D2CD  6D                 	db	109	;'m'
  1316  00D2CE  6D                 	db	109	;'m'
  1317  00D2CF  61                 	db	97	;'a'
  1318  00D2D0  6E                 	db	110	;'n'
  1319  00D2D1  64                 	db	100	;'d'
  1320  00D2D2  73                 	db	115	;'s'
  1321  00D2D3  3A                 	db	58	;':'
  1322  00D2D4  0A                 	db	10
  1323  00D2D5  0D                 	db	13
  1324  00D2D6  44                 	db	68	;'D'
  1325  00D2D7  65                 	db	101	;'e'
  1326  00D2D8  76                 	db	118	;'v'
  1327  00D2D9  69                 	db	105	;'i'
  1328  00D2DA  63                 	db	99	;'c'
  1329  00D2DB  65                 	db	101	;'e'
  1330  00D2DC  20                 	db	32
  1331  00D2DD  43                 	db	67	;'C'
  1332  00D2DE  6F                 	db	111	;'o'
  1333  00D2DF  6E                 	db	110	;'n'
  1334  00D2E0  74                 	db	116	;'t'
  1335  00D2E1  72                 	db	114	;'r'
  1336  00D2E2  6F                 	db	111	;'o'
  1337  00D2E3  6C                 	db	108	;'l'
  1338  00D2E4  20                 	db	32
  1339  00D2E5  43                 	db	67	;'C'
  1340  00D2E6  6F                 	db	111	;'o'
  1341  00D2E7  6D                 	db	109	;'m'
  1342  00D2E8  6D                 	db	109	;'m'
  1343  00D2E9  61                 	db	97	;'a'
  1344  00D2EA  6E                 	db	110	;'n'
  1345  00D2EB  64                 	db	100	;'d'
  1346  00D2EC  73                 	db	115	;'s'
  1347  00D2ED  3A                 	db	58	;':'
  1348  00D2EE  20                 	db	32
  1349  00D2EF  43                 	db	67	;'C'
  1350  00D2F0  6F                 	db	111	;'o'
  1351  00D2F1  6D                 	db	109	;'m'
  1352  00D2F2  6D                 	db	109	;'m'
  1353  00D2F3  61                 	db	97	;'a'
  1354  00D2F4  6E                 	db	110	;'n'
  1355  00D2F5  64                 	db	100	;'d'
  1356  00D2F6  73                 	db	115	;'s'
  1357  00D2F7  20                 	db	32
  1358  00D2F8  74                 	db	116	;'t'
  1359  00D2F9  6F                 	db	111	;'o'
  1360  00D2FA  20                 	db	32
  1361  00D2FB  76                 	db	118	;'v'
  1362  00D2FC  69                 	db	105	;'i'
  1363  00D2FD  65                 	db	101	;'e'
  1364  00D2FE  77                 	db	119	;'w'
  1365  00D2FF  20                 	db	32
  1366  00D300  61                 	db	97	;'a'
  1367  00D301  6E                 	db	110	;'n'
  1368  00D302  64                 	db	100	;'d'
  1369  00D303  20                 	db	32
  1370  00D304  63                 	db	99	;'c'
  1371  00D305  6F                 	db	111	;'o'
  1372  00D306  6E                 	db	110	;'n'
  1373  00D307  74                 	db	116	;'t'
  1374  00D308  72                 	db	114	;'r'
  1375  00D309  6F                 	db	111	;'o'
  1376  00D30A  6C                 	db	108	;'l'
  1377  00D30B  20                 	db	32
  1378  00D30C  6C                 	db	108	;'l'
  1379  00D30D  6F                 	db	111	;'o'
  1380  00D30E  77                 	db	119	;'w'
  1381  00D30F  20                 	db	32
  1382  00D310  6C                 	db	108	;'l'
  1383  00D311  65                 	db	101	;'e'
  1384  00D312  76                 	db	118	;'v'
  1385  00D313  65                 	db	101	;'e'
  1386  00D314  6C                 	db	108	;'l'
  1387  00D315  20                 	db	32
  1388  00D316  73                 	db	115	;'s'
  1389  00D317  79                 	db	121	;'y'
  1390  00D318  73                 	db	115	;'s'
  1391  00D319  74                 	db	116	;'t'
  1392  00D31A  65                 	db	101	;'e'
  1393  00D31B  6D                 	db	109	;'m'
  1394  00D31C  20                 	db	32
  1395  00D31D  66                 	db	102	;'f'
  1396  00D31E  75                 	db	117	;'u'
  1397  00D31F  6E                 	db	110	;'n'
  1398  00D320  63                 	db	99	;'c'
  1399  00D321  74                 	db	116	;'t'
  1400  00D322  69                 	db	105	;'i'
  1401  00D323  6F                 	db	111	;'o'
  1402  00D324  6E                 	db	110	;'n'
  1403  00D325  61                 	db	97	;'a'
  1404  00D326  6C                 	db	108	;'l'
  1405  00D327  69                 	db	105	;'i'
  1406  00D328  74                 	db	116	;'t'
  1407  00D329  79                 	db	121	;'y'
  1408  00D32A  0A                 	db	10
  1409  00D32B  0D                 	db	13
  1410  00D32C  20                 	db	32
  1411  00D32D  20                 	db	32
  1412  00D32E  20                 	db	32
  1413  00D32F  52                 	db	82	;'R'
  1414  00D330  65                 	db	101	;'e'
  1415  00D331  73                 	db	115	;'s'
  1416  00D332  65                 	db	101	;'e'
  1417  00D333  74                 	db	116	;'t'
  1418  00D334  3A                 	db	58	;':'
  1419  00D335  20                 	db	32
  1420  00D336  43                 	db	67	;'C'
  1421  00D337  6C                 	db	108	;'l'
  1422  00D338  65                 	db	101	;'e'
  1423  00D339  61                 	db	97	;'a'
  1424  00D33A  72                 	db	114	;'r'
  1425  00D33B  73                 	db	115	;'s'
  1426  00D33C  20                 	db	32
  1427  00D33D  74                 	db	116	;'t'
  1428  00D33E  68                 	db	104	;'h'
  1429  00D33F  65                 	db	101	;'e'
  1430  00D340  20                 	db	32
  1431  00D341  74                 	db	116	;'t'
  1432  00D342  65                 	db	101	;'e'
  1433  00D343  72                 	db	114	;'r'
  1434  00D344  6D                 	db	109	;'m'
  1435  00D345  69                 	db	105	;'i'
  1436  00D346  6E                 	db	110	;'n'
  1437  00D347  61                 	db	97	;'a'
  1438  00D348  6C                 	db	108	;'l'
  1439  00D349  20                 	db	32
  1440  00D34A  61                 	db	97	;'a'
  1441  00D34B  6E                 	db	110	;'n'
  1442  00D34C  64                 	db	100	;'d'
  1443  00D34D  20                 	db	32
  1444  00D34E  72                 	db	114	;'r'
  1445  00D34F  65                 	db	101	;'e'
  1446  00D350  73                 	db	115	;'s'
  1447  00D351  65                 	db	101	;'e'
  1448  00D352  74                 	db	116	;'t'
  1449  00D353  73                 	db	115	;'s'
  1450  00D354  20                 	db	32
  1451  00D355  74                 	db	116	;'t'
  1452  00D356  68                 	db	104	;'h'
  1453  00D357  65                 	db	101	;'e'
  1454  00D358  20                 	db	32
  1455  00D359  6D                 	db	109	;'m'
  1456  00D35A  69                 	db	105	;'i'
  1457  00D35B  63                 	db	99	;'c'
  1458  00D35C  72                 	db	114	;'r'
  1459  00D35D  6F                 	db	111	;'o'
  1460  00D35E  63                 	db	99	;'c'
  1461  00D35F  6F                 	db	111	;'o'
  1462  00D360  6E                 	db	110	;'n'
  1463  00D361  74                 	db	116	;'t'
  1464  00D362  72                 	db	114	;'r'
  1465  00D363  6F                 	db	111	;'o'
  1466  00D364  6C                 	db	108	;'l'
  1467  00D365  6C                 	db	108	;'l'
  1468  00D366  65                 	db	101	;'e'
  1469  00D367  72                 	db	114	;'r'
  1470  00D368  0A                 	db	10
  1471  00D369  0D                 	db	13
  1472  00D36A  20                 	db	32
  1473  00D36B  20                 	db	32
  1474  00D36C  20                 	db	32
  1475  00D36D  43                 	db	67	;'C'
  1476  00D36E  6C                 	db	108	;'l'
  1477  00D36F  65                 	db	101	;'e'
  1478  00D370  61                 	db	97	;'a'
  1479  00D371  72                 	db	114	;'r'
  1480  00D372  3A                 	db	58	;':'
  1481  00D373  20                 	db	32
  1482  00D374  43                 	db	67	;'C'
  1483  00D375  6C                 	db	108	;'l'
  1484  00D376  65                 	db	101	;'e'
  1485  00D377  61                 	db	97	;'a'
  1486  00D378  72                 	db	114	;'r'
  1487  00D379  73                 	db	115	;'s'
  1488  00D37A  20                 	db	32
  1489  00D37B  74                 	db	116	;'t'
  1490  00D37C  68                 	db	104	;'h'
  1491  00D37D  65                 	db	101	;'e'
  1492  00D37E  20                 	db	32
  1493  00D37F  74                 	db	116	;'t'
  1494  00D380  65                 	db	101	;'e'
  1495  00D381  72                 	db	114	;'r'
  1496  00D382  6D                 	db	109	;'m'
  1497  00D383  69                 	db	105	;'i'
  1498  00D384  6E                 	db	110	;'n'
  1499  00D385  61                 	db	97	;'a'
  1500  00D386  6C                 	db	108	;'l'
  1501  00D387  20                 	db	32
  1502  00D388  62                 	db	98	;'b'
  1503  00D389  75                 	db	117	;'u'
  1504  00D38A  74                 	db	116	;'t'
  1505  00D38B  20                 	db	32
  1506  00D38C  64                 	db	100	;'d'
  1507  00D38D  6F                 	db	111	;'o'
  1508  00D38E  65                 	db	101	;'e'
  1509  00D38F  73                 	db	115	;'s'
  1510  00D390  6E                 	db	110	;'n'
  1511  00D391  27                 	db	39
  1512  00D392  74                 	db	116	;'t'
  1513  00D393  20                 	db	32
  1514  00D394  72                 	db	114	;'r'
  1515  00D395  65                 	db	101	;'e'
  1516  00D396  73                 	db	115	;'s'
  1517  00D397  65                 	db	101	;'e'
  1518  00D398  74                 	db	116	;'t'
  1519  00D399  20                 	db	32
  1520  00D39A  74                 	db	116	;'t'
  1521  00D39B  68                 	db	104	;'h'
  1522  00D39C  65                 	db	101	;'e'
  1523  00D39D  20                 	db	32
  1524  00D39E  6D                 	db	109	;'m'
  1525  00D39F  69                 	db	105	;'i'
  1526  00D3A0  63                 	db	99	;'c'
  1527  00D3A1  72                 	db	114	;'r'
  1528  00D3A2  6F                 	db	111	;'o'
  1529  00D3A3  0A                 	db	10
  1530  00D3A4  0D                 	db	13
  1531  00D3A5  20                 	db	32
  1532  00D3A6  20                 	db	32
  1533  00D3A7  20                 	db	32
  1534  00D3A8  43                 	db	67	;'C'
  1535  00D3A9  61                 	db	97	;'a'
  1536  00D3AA  75                 	db	117	;'u'
  1537  00D3AB  73                 	db	115	;'s'
  1538  00D3AC  65                 	db	101	;'e'
  1539  00D3AD  20                 	db	32
  1540  00D3AE  6F                 	db	111	;'o'
  1541  00D3AF  66                 	db	102	;'f'
  1542  00D3B0  20                 	db	32
  1543  00D3B1  52                 	db	82	;'R'
  1544  00D3B2  65                 	db	101	;'e'
  1545  00D3B3  73                 	db	115	;'s'
  1546  00D3B4  65                 	db	101	;'e'
  1547  00D3B5  74                 	db	116	;'t'
  1548  00D3B6  3F                 	db	63	;'?'
  1549  00D3B7  3A                 	db	58	;':'
  1550  00D3B8  20                 	db	32
  1551  00D3B9  52                 	db	82	;'R'
  1552  00D3BA  65                 	db	101	;'e'
  1553  00D3BB  74                 	db	116	;'t'
  1554  00D3BC  75                 	db	117	;'u'
  1555  00D3BD  72                 	db	114	;'r'
  1556  00D3BE  6E                 	db	110	;'n'
  1557  00D3BF  73                 	db	115	;'s'
  1558  00D3C0  20                 	db	32
  1559  00D3C1  74                 	db	116	;'t'
  1560  00D3C2  68                 	db	104	;'h'
  1561  00D3C3  65                 	db	101	;'e'
  1562  00D3C4  20                 	db	32
  1563  00D3C5  63                 	db	99	;'c'
  1564  00D3C6  61                 	db	97	;'a'
  1565  00D3C7  75                 	db	117	;'u'
  1566  00D3C8  73                 	db	115	;'s'
  1567  00D3C9  65                 	db	101	;'e'
  1568  00D3CA  20                 	db	32
  1569  00D3CB  6F                 	db	111	;'o'
  1570  00D3CC  66                 	db	102	;'f'
  1571  00D3CD  20                 	db	32
  1572  00D3CE  74                 	db	116	;'t'
  1573  00D3CF  68                 	db	104	;'h'
  1574  00D3D0  65                 	db	101	;'e'
  1575  00D3D1  20                 	db	32
  1576  00D3D2  6D                 	db	109	;'m'
  1577  00D3D3  6F                 	db	111	;'o'
  1578  00D3D4  73                 	db	115	;'s'
  1579  00D3D5  74                 	db	116	;'t'
  1580  00D3D6  20                 	db	32
  1581  00D3D7  72                 	db	114	;'r'
  1582  00D3D8  65                 	db	101	;'e'
  1583  00D3D9  63                 	db	99	;'c'
  1584  00D3DA  65                 	db	101	;'e'
  1585  00D3DB  6E                 	db	110	;'n'
  1586  00D3DC  74                 	db	116	;'t'
  1587  00D3DD  20                 	db	32
  1588  00D3DE  64                 	db	100	;'d'
  1589  00D3DF  65                 	db	101	;'e'
  1590  00D3E0  76                 	db	118	;'v'
  1591  00D3E1  69                 	db	105	;'i'
  1592  00D3E2  63                 	db	99	;'c'
  1593  00D3E3  65                 	db	101	;'e'
  1594  00D3E4  20                 	db	32
  1595  00D3E5  72                 	db	114	;'r'
  1596  00D3E6  65                 	db	101	;'e'
  1597  00D3E7  73                 	db	115	;'s'
  1598  00D3E8  65                 	db	101	;'e'
  1599  00D3E9  74                 	db	116	;'t'
  1600  00D3EA  0A                 	db	10
  1601  00D3EB  0D                 	db	13
  1602  00D3EC  20                 	db	32
  1603  00D3ED  20                 	db	32
  1604  00D3EE  20                 	db	32
  1605  00D3EF  2A                 	db	42
  1606  00D3F0  49                 	db	73	;'I'
  1607  00D3F1  44                 	db	68	;'D'
  1608  00D3F2  4E                 	db	78	;'N'
  1609  00D3F3  3F                 	db	63	;'?'
  1610  00D3F4  3A                 	db	58	;':'
  1611  00D3F5  20                 	db	32
  1612  00D3F6  52                 	db	82	;'R'
  1613  00D3F7  65                 	db	101	;'e'
  1614  00D3F8  74                 	db	116	;'t'
  1615  00D3F9  75                 	db	117	;'u'
  1616  00D3FA  72                 	db	114	;'r'
  1617  00D3FB  6E                 	db	110	;'n'
  1618  00D3FC  73                 	db	115	;'s'
  1619  00D3FD  20                 	db	32
  1620  00D3FE  64                 	db	100	;'d'
  1621  00D3FF  65                 	db	101	;'e'
  1622  00D400  76                 	db	118	;'v'
  1623  00D401  69                 	db	105	;'i'
  1624  00D402  63                 	db	99	;'c'
  1625  00D403  65                 	db	101	;'e'
  1626  00D404  20                 	db	32
  1627  00D405  69                 	db	105	;'i'
  1628  00D406  64                 	db	100	;'d'
  1629  00D407  65                 	db	101	;'e'
  1630  00D408  6E                 	db	110	;'n'
  1631  00D409  74                 	db	116	;'t'
  1632  00D40A  69                 	db	105	;'i'
  1633  00D40B  66                 	db	102	;'f'
  1634  00D40C  69                 	db	105	;'i'
  1635  00D40D  63                 	db	99	;'c'
  1636  00D40E  61                 	db	97	;'a'
  1637  00D40F  74                 	db	116	;'t'
  1638  00D410  69                 	db	105	;'i'
  1639  00D411  6F                 	db	111	;'o'
  1640  00D412  6E                 	db	110	;'n'
  1641  00D413  20                 	db	32
  1642  00D414  73                 	db	115	;'s'
  1643  00D415  74                 	db	116	;'t'
  1644  00D416  72                 	db	114	;'r'
  1645  00D417  69                 	db	105	;'i'
  1646  00D418  6E                 	db	110	;'n'
  1647  00D419  67                 	db	103	;'g'
  1648  00D41A  0A                 	db	10
  1649  00D41B  0D                 	db	13
  1650  00D41C  20                 	db	32
  1651  00D41D  20                 	db	32
  1652  00D41E  20                 	db	32
  1653  00D41F  44                 	db	68	;'D'
  1654  00D420  65                 	db	101	;'e'
  1655  00D421  76                 	db	118	;'v'
  1656  00D422  69                 	db	105	;'i'
  1657  00D423  63                 	db	99	;'c'
  1658  00D424  65                 	db	101	;'e'
  1659  00D425  20                 	db	32
  1660  00D426  4F                 	db	79	;'O'
  1661  00D427  6E                 	db	110	;'n'
  1662  00D428  20                 	db	32
  1663  00D429  54                 	db	84	;'T'
  1664  00D42A  69                 	db	105	;'i'
  1665  00D42B  6D                 	db	109	;'m'
  1666  00D42C  65                 	db	101	;'e'
  1667  00D42D  3F                 	db	63	;'?'
  1668  00D42E  3A                 	db	58	;':'
  1669  00D42F  20                 	db	32
  1670  00D430  52                 	db	82	;'R'
  1671  00D431  65                 	db	101	;'e'
  1672  00D432  74                 	db	116	;'t'
  1673  00D433  75                 	db	117	;'u'
  1674  00D434  72                 	db	114	;'r'
  1675  00D435  6E                 	db	110	;'n'
  1676  00D436  73                 	db	115	;'s'
  1677  00D437  20                 	db	32
  1678  00D438  64                 	db	100	;'d'
  1679  00D439  65                 	db	101	;'e'
  1680  00D43A  76                 	db	118	;'v'
  1681  00D43B  69                 	db	105	;'i'
  1682  00D43C  63                 	db	99	;'c'
  1683  00D43D  65                 	db	101	;'e'
  1684  00D43E  20                 	db	32
  1685  00D43F  6F                 	db	111	;'o'
  1686  00D440  6E                 	db	110	;'n'
  1687  00D441  20                 	db	32
  1688  00D442  74                 	db	116	;'t'
  1689  00D443  69                 	db	105	;'i'
  1690  00D444  6D                 	db	109	;'m'
  1691  00D445  65                 	db	101	;'e'
  1692  00D446  20                 	db	32
  1693  00D447  73                 	db	115	;'s'
  1694  00D448  69                 	db	105	;'i'
  1695  00D449  6E                 	db	110	;'n'
  1696  00D44A  63                 	db	99	;'c'
  1697  00D44B  65                 	db	101	;'e'
  1698  00D44C  20                 	db	32
  1699  00D44D  6C                 	db	108	;'l'
  1700  00D44E  61                 	db	97	;'a'
  1701  00D44F  73                 	db	115	;'s'
  1702  00D450  74                 	db	116	;'t'
  1703  00D451  20                 	db	32
  1704  00D452  64                 	db	100	;'d'
  1705  00D453  65                 	db	101	;'e'
  1706  00D454  76                 	db	118	;'v'
  1707  00D455  69                 	db	105	;'i'
  1708  00D456  63                 	db	99	;'c'
  1709  00D457  65                 	db	101	;'e'
  1710  00D458  20                 	db	32
  1711  00D459  72                 	db	114	;'r'
  1712  00D45A  65                 	db	101	;'e'
  1713  00D45B  73                 	db	115	;'s'
  1714  00D45C  65                 	db	101	;'e'
  1715  00D45D  74                 	db	116	;'t'
  1716  00D45E  0A                 	db	10
  1717  00D45F  0D                 	db	13
  1718  00D460  20                 	db	32
  1719  00D461  20                 	db	32
  1720  00D462  20                 	db	32
  1721  00D463  44                 	db	68	;'D'
  1722  00D464  65                 	db	101	;'e'
  1723  00D465  76                 	db	118	;'v'
  1724  00D466  69                 	db	105	;'i'
  1725  00D467  63                 	db	99	;'c'
  1726  00D468  65                 	db	101	;'e'
  1727  00D469  20                 	db	32
  1728  00D46A  49                 	db	73	;'I'
  1729  00D46B  44                 	db	68	;'D'
  1730  00D46C  3F                 	db	63	;'?'
  1731  00D46D  3A                 	db	58	;':'
  1732  00D46E  20                 	db	32
  1733  00D46F  52                 	db	82	;'R'
  1734  00D470  65                 	db	101	;'e'
  1735  00D471  74                 	db	116	;'t'
  1736  00D472  75                 	db	117	;'u'
  1737  00D473  72                 	db	114	;'r'
  1738  00D474  6E                 	db	110	;'n'
  1739  00D475  73                 	db	115	;'s'
  1740  00D476  20                 	db	32
  1741  00D477  64                 	db	100	;'d'
  1742  00D478  65                 	db	101	;'e'
  1743  00D479  76                 	db	118	;'v'
  1744  00D47A  69                 	db	105	;'i'
  1745  00D47B  63                 	db	99	;'c'
  1746  00D47C  65                 	db	101	;'e'
  1747  00D47D  20                 	db	32
  1748  00D47E  49                 	db	73	;'I'
  1749  00D47F  44                 	db	68	;'D'
  1750  00D480  20                 	db	32
  1751  00D481  61                 	db	97	;'a'
  1752  00D482  73                 	db	115	;'s'
  1753  00D483  20                 	db	32
  1754  00D484  70                 	db	112	;'p'
  1755  00D485  72                 	db	114	;'r'
  1756  00D486  65                 	db	101	;'e'
  1757  00D487  2D                 	db	45
  1758  00D488  70                 	db	112	;'p'
  1759  00D489  72                 	db	114	;'r'
  1760  00D48A  6F                 	db	111	;'o'
  1761  00D48B  67                 	db	103	;'g'
  1762  00D48C  72                 	db	114	;'r'
  1763  00D48D  61                 	db	97	;'a'
  1764  00D48E  6D                 	db	109	;'m'
  1765  00D48F  6D                 	db	109	;'m'
  1766  00D490  65                 	db	101	;'e'
  1767  00D491  64                 	db	100	;'d'
  1768  00D492  20                 	db	32
  1769  00D493  69                 	db	105	;'i'
  1770  00D494  6E                 	db	110	;'n'
  1771  00D495  20                 	db	32
  1772  00D496  66                 	db	102	;'f'
  1773  00D497  6C                 	db	108	;'l'
  1774  00D498  61                 	db	97	;'a'
  1775  00D499  73                 	db	115	;'s'
  1776  00D49A  68                 	db	104	;'h'
  1777  00D49B  20                 	db	32
  1778  00D49C  6D                 	db	109	;'m'
  1779  00D49D  65                 	db	101	;'e'
  1780  00D49E  6D                 	db	109	;'m'
  1781  00D49F  6F                 	db	111	;'o'
  1782  00D4A0  72                 	db	114	;'r'
  1783  00D4A1  79                 	db	121	;'y'
  1784  00D4A2  0A                 	db	10
  1785  00D4A3  0D                 	db	13
  1786  00D4A4  20                 	db	32
  1787  00D4A5  20                 	db	32
  1788  00D4A6  20                 	db	32
  1789  00D4A7  52                 	db	82	;'R'
  1790  00D4A8  65                 	db	101	;'e'
  1791  00D4A9  76                 	db	118	;'v'
  1792  00D4AA  69                 	db	105	;'i'
  1793  00D4AB  73                 	db	115	;'s'
  1794  00D4AC  69                 	db	105	;'i'
  1795  00D4AD  6F                 	db	111	;'o'
  1796  00D4AE  6E                 	db	110	;'n'
  1797  00D4AF  20                 	db	32
  1798  00D4B0  49                 	db	73	;'I'
  1799  00D4B1  44                 	db	68	;'D'
  1800  00D4B2  3F                 	db	63	;'?'
  1801  00D4B3  3A                 	db	58	;':'
  1802  00D4B4  20                 	db	32
  1803  00D4B5  52                 	db	82	;'R'
  1804  00D4B6  65                 	db	101	;'e'
  1805  00D4B7  74                 	db	116	;'t'
  1806  00D4B8  75                 	db	117	;'u'
  1807  00D4B9  72                 	db	114	;'r'
  1808  00D4BA  6E                 	db	110	;'n'
  1809  00D4BB  73                 	db	115	;'s'
  1810  00D4BC  20                 	db	32
  1811  00D4BD  64                 	db	100	;'d'
  1812  00D4BE  65                 	db	101	;'e'
  1813  00D4BF  76                 	db	118	;'v'
  1814  00D4C0  69                 	db	105	;'i'
  1815  00D4C1  63                 	db	99	;'c'
  1816  00D4C2  65                 	db	101	;'e'
  1817  00D4C3  20                 	db	32
  1818  00D4C4  73                 	db	115	;'s'
  1819  00D4C5  69                 	db	105	;'i'
  1820  00D4C6  6C                 	db	108	;'l'
  1821  00D4C7  69                 	db	105	;'i'
  1822  00D4C8  63                 	db	99	;'c'
  1823  00D4C9  6F                 	db	111	;'o'
  1824  00D4CA  6E                 	db	110	;'n'
  1825  00D4CB  20                 	db	32
  1826  00D4CC  72                 	db	114	;'r'
  1827  00D4CD  65                 	db	101	;'e'
  1828  00D4CE  76                 	db	118	;'v'
  1829  00D4CF  69                 	db	105	;'i'
  1830  00D4D0  73                 	db	115	;'s'
  1831  00D4D1  69                 	db	105	;'i'
  1832  00D4D2  6F                 	db	111	;'o'
  1833  00D4D3  6E                 	db	110	;'n'
  1834  00D4D4  20                 	db	32
  1835  00D4D5  49                 	db	73	;'I'
  1836  00D4D6  44                 	db	68	;'D'
  1837  00D4D7  20                 	db	32
  1838  00D4D8  61                 	db	97	;'a'
  1839  00D4D9  73                 	db	115	;'s'
  1840  00D4DA  20                 	db	32
  1841  00D4DB  70                 	db	112	;'p'
  1842  00D4DC  72                 	db	114	;'r'
  1843  00D4DD  65                 	db	101	;'e'
  1844  00D4DE  2D                 	db	45
  1845  00D4DF  70                 	db	112	;'p'
  1846  00D4E0  72                 	db	114	;'r'
  1847  00D4E1  6F                 	db	111	;'o'
  1848  00D4E2  67                 	db	103	;'g'
  1849  00D4E3  72                 	db	114	;'r'
  1850  00D4E4  61                 	db	97	;'a'
  1851  00D4E5  6D                 	db	109	;'m'
  1852  00D4E6  6D                 	db	109	;'m'
  1853  00D4E7  65                 	db	101	;'e'
  1854  00D4E8  64                 	db	100	;'d'
  1855  00D4E9  20                 	db	32
  1856  00D4EA  69                 	db	105	;'i'
  1857  00D4EB  6E                 	db	110	;'n'
  1858  00D4EC  20                 	db	32
  1859  00D4ED  66                 	db	102	;'f'
  1860  00D4EE  6C                 	db	108	;'l'
  1861  00D4EF  61                 	db	97	;'a'
  1862  00D4F0  73                 	db	115	;'s'
  1863  00D4F1  68                 	db	104	;'h'
  1864  00D4F2  20                 	db	32
  1865  00D4F3  6D                 	db	109	;'m'
  1866  00D4F4  65                 	db	101	;'e'
  1867  00D4F5  6D                 	db	109	;'m'
  1868  00D4F6  6F                 	db	111	;'o'
  1869  00D4F7  72                 	db	114	;'r'
  1870  00D4F8  79                 	db	121	;'y'
  1871  00D4F9  0A                 	db	10
  1872  00D4FA  0D                 	db	13
  1873  00D4FB  20                 	db	32
  1874  00D4FC  20                 	db	32
  1875  00D4FD  20                 	db	32
  1876  00D4FE  55                 	db	85	;'U'
  1877  00D4FF  73                 	db	115	;'s'
  1878  00D500  65                 	db	101	;'e'
  1879  00D501  72                 	db	114	;'r'
  1880  00D502  20                 	db	32
  1881  00D503  49                 	db	73	;'I'
  1882  00D504  44                 	db	68	;'D'
  1883  00D505  73                 	db	115	;'s'
  1884  00D506  3F                 	db	63	;'?'
  1885  00D507  3A                 	db	58	;':'
  1886  00D508  20                 	db	32
  1887  00D509  52                 	db	82	;'R'
  1888  00D50A  65                 	db	101	;'e'
  1889  00D50B  74                 	db	116	;'t'
  1890  00D50C  75                 	db	117	;'u'
  1891  00D50D  72                 	db	114	;'r'
  1892  00D50E  6E                 	db	110	;'n'
  1893  00D50F  73                 	db	115	;'s'
  1894  00D510  20                 	db	32
  1895  00D511  61                 	db	97	;'a'
  1896  00D512  20                 	db	32
  1897  00D513  6C                 	db	108	;'l'
  1898  00D514  69                 	db	105	;'i'
  1899  00D515  73                 	db	115	;'s'
  1900  00D516  74                 	db	116	;'t'
  1901  00D517  20                 	db	32
  1902  00D518  6F                 	db	111	;'o'
  1903  00D519  66                 	db	102	;'f'
  1904  00D51A  20                 	db	32
  1905  00D51B  75                 	db	117	;'u'
  1906  00D51C  73                 	db	115	;'s'
  1907  00D51D  65                 	db	101	;'e'
  1908  00D51E  72                 	db	114	;'r'
  1909  00D51F  20                 	db	32
  1910  00D520  49                 	db	73	;'I'
  1911  00D521  44                 	db	68	;'D'
  1912  00D522  73                 	db	115	;'s'
  1913  00D523  20                 	db	32
  1914  00D524  28                 	db	40
  1915  00D525  64                 	db	100	;'d'
  1916  00D526  69                 	db	105	;'i'
  1917  00D527  73                 	db	115	;'s'
  1918  00D528  70                 	db	112	;'p'
  1919  00D529  6C                 	db	108	;'l'
  1920  00D52A  61                 	db	97	;'a'
  1921  00D52B  79                 	db	121	;'y'
  1922  00D52C  65                 	db	101	;'e'
  1923  00D52D  64                 	db	100	;'d'
  1924  00D52E  20                 	db	32
  1925  00D52F  69                 	db	105	;'i'
  1926  00D530  6E                 	db	110	;'n'
  1927  00D531  20                 	db	32
  1928  00D532  68                 	db	104	;'h'
  1929  00D533  65                 	db	101	;'e'
  1930  00D534  78                 	db	120	;'x'
  1931  00D535  29                 	db	41
  1932  00D536  20                 	db	32
  1933  00D537  61                 	db	97	;'a'
  1934  00D538  73                 	db	115	;'s'
  1935  00D539  20                 	db	32
  1936  00D53A  73                 	db	115	;'s'
  1937  00D53B  74                 	db	116	;'t'
  1938  00D53C  6F                 	db	111	;'o'
  1939  00D53D  72                 	db	114	;'r'
  1940  00D53E  65                 	db	101	;'e'
  1941  00D53F  64                 	db	100	;'d'
  1942  00D540  20                 	db	32
  1943  00D541  69                 	db	105	;'i'
  1944  00D542  6E                 	db	110	;'n'
  1945  00D543  20                 	db	32
  1946  00D544  66                 	db	102	;'f'
  1947  00D545  6C                 	db	108	;'l'
  1948  00D546  61                 	db	97	;'a'
  1949  00D547  73                 	db	115	;'s'
  1950  00D548  68                 	db	104	;'h'
  1951  00D549  20                 	db	32
  1952  00D54A  6D                 	db	109	;'m'
  1953  00D54B  65                 	db	101	;'e'
  1954  00D54C  6D                 	db	109	;'m'
  1955  00D54D  6F                 	db	111	;'o'
  1956  00D54E  72                 	db	114	;'r'
  1957  00D54F  79                 	db	121	;'y'
  1958  00D550  0A                 	db	10
  1959  00D551  0D                 	db	13
  1960  00D552  20                 	db	32
  1961  00D553  20                 	db	32
  1962  00D554  20                 	db	32
  1963  00D555  41                 	db	65	;'A'
  1964  00D556  44                 	db	68	;'D'
  1965  00D557  43                 	db	67	;'C'
  1966  00D558  20                 	db	32
  1967  00D559  45                 	db	69	;'E'
  1968  00D55A  72                 	db	114	;'r'
  1969  00D55B  72                 	db	114	;'r'
  1970  00D55C  6F                 	db	111	;'o'
  1971  00D55D  72                 	db	114	;'r'
  1972  00D55E  73                 	db	115	;'s'
  1973  00D55F  3F                 	db	63	;'?'
  1974  00D560  3A                 	db	58	;':'
  1975  00D561  20                 	db	32
  1976  00D562  52                 	db	82	;'R'
  1977  00D563  65                 	db	101	;'e'
  1978  00D564  74                 	db	116	;'t'
  1979  00D565  75                 	db	117	;'u'
  1980  00D566  72                 	db	114	;'r'
  1981  00D567  6E                 	db	110	;'n'
  1982  00D568  73                 	db	115	;'s'
  1983  00D569  20                 	db	32
  1984  00D56A  74                 	db	116	;'t'
  1985  00D56B  68                 	db	104	;'h'
  1986  00D56C  65                 	db	101	;'e'
  1987  00D56D  20                 	db	32
  1988  00D56E  63                 	db	99	;'c'
  1989  00D56F  61                 	db	97	;'a'
  1990  00D570  75                 	db	117	;'u'
  1991  00D571  73                 	db	115	;'s'
  1992  00D572  65                 	db	101	;'e'
  1993  00D573  20                 	db	32
  1994  00D574  6F                 	db	111	;'o'
  1995  00D575  66                 	db	102	;'f'
  1996  00D576  20                 	db	32
  1997  00D577  61                 	db	97	;'a'
  1998  00D578  6E                 	db	110	;'n'
  1999  00D579  20                 	db	32
  2000  00D57A  41                 	db	65	;'A'
  2001  00D57B  44                 	db	68	;'D'
  2002  00D57C  43                 	db	67	;'C'
  2003  00D57D  20                 	db	32
  2004  00D57E  65                 	db	101	;'e'
  2005  00D57F  72                 	db	114	;'r'
  2006  00D580  72                 	db	114	;'r'
  2007  00D581  6F                 	db	111	;'o'
  2008  00D582  72                 	db	114	;'r'
  2009  00D583  20                 	db	32
  2010  00D584  69                 	db	105	;'i'
  2011  00D585  66                 	db	102	;'f'
  2012  00D586  20                 	db	32
  2013  00D587  61                 	db	97	;'a'
  2014  00D588  6E                 	db	110	;'n'
  2015  00D589  20                 	db	32
  2016  00D58A  65                 	db	101	;'e'
  2017  00D58B  72                 	db	114	;'r'
  2018  00D58C  72                 	db	114	;'r'
  2019  00D58D  6F                 	db	111	;'o'
  2020  00D58E  72                 	db	114	;'r'
  2021  00D58F  20                 	db	32
  2022  00D590  6F                 	db	111	;'o'
  2023  00D591  63                 	db	99	;'c'
  2024  00D592  63                 	db	99	;'c'
  2025  00D593  75                 	db	117	;'u'
  2026  00D594  72                 	db	114	;'r'
  2027  00D595  72                 	db	114	;'r'
  2028  00D596  65                 	db	101	;'e'
  2029  00D597  64                 	db	100	;'d'
  2030  00D598  0A                 	db	10
  2031  00D599  0D                 	db	13
  2032  00D59A  20                 	db	32
  2033  00D59B  20                 	db	32
  2034  00D59C  20                 	db	32
  2035  00D59D  43                 	db	67	;'C'
  2036  00D59E  6C                 	db	108	;'l'
  2037  00D59F  65                 	db	101	;'e'
  2038  00D5A0  61                 	db	97	;'a'
  2039  00D5A1  72                 	db	114	;'r'
  2040  00D5A2  20                 	db	32
  2041  00D5A3  41                 	db	65	;'A'
  2042  00D5A4  44                 	db	68	;'D'
  2043  00D5A5  43                 	db	67	;'C'
  2044  00D5A6  20                 	db	32
  2045  00D5A7  45                 	db	69	;'E'
  2046  00D5A8  72                 	db	114	;'r'
  2047  00D5A9  72                 	db	114	;'r'
  2048  00D5AA  6F                 	db	111	;'o'
  2049  00D5AB  72                 	db	114	;'r'
  2050  00D5AC  73                 	db	115	;'s'
  2051  00D5AD  3A                 	db	58	;':'
  2052  00D5AE  20                 	db	32
  2053  00D5AF  43                 	db	67	;'C'
  2054  00D5B0  6C                 	db	108	;'l'
  2055  00D5B1  65                 	db	101	;'e'
  2056  00D5B2  61                 	db	97	;'a'
  2057  00D5B3  72                 	db	114	;'r'
  2058  00D5B4  73                 	db	115	;'s'
  2059  00D5B5  20                 	db	32
  2060  00D5B6  74                 	db	116	;'t'
  2061  00D5B7  68                 	db	104	;'h'
  2062  00D5B8  65                 	db	101	;'e'
  2063  00D5B9  20                 	db	32
  2064  00D5BA  41                 	db	65	;'A'
  2065  00D5BB  44                 	db	68	;'D'
  2066  00D5BC  43                 	db	67	;'C'
  2067  00D5BD  20                 	db	32
  2068  00D5BE  65                 	db	101	;'e'
  2069  00D5BF  72                 	db	114	;'r'
  2070  00D5C0  72                 	db	114	;'r'
  2071  00D5C1  6F                 	db	111	;'o'
  2072  00D5C2  72                 	db	114	;'r'
  2073  00D5C3  20                 	db	32
  2074  00D5C4  61                 	db	97	;'a'
  2075  00D5C5  6E                 	db	110	;'n'
  2076  00D5C6  64                 	db	100	;'d'
  2077  00D5C7  20                 	db	32
  2078  00D5C8  72                 	db	114	;'r'
  2079  00D5C9  65                 	db	101	;'e'
  2080  00D5CA  73                 	db	115	;'s'
  2081  00D5CB  75                 	db	117	;'u'
  2082  00D5CC  6D                 	db	109	;'m'
  2083  00D5CD  65                 	db	101	;'e'
  2084  00D5CE  73                 	db	115	;'s'
  2085  00D5CF  20                 	db	32
  2086  00D5D0  41                 	db	65	;'A'
  2087  00D5D1  44                 	db	68	;'D'
  2088  00D5D2  43                 	db	67	;'C'
  2089  00D5D3  20                 	db	32
  2090  00D5D4  63                 	db	99	;'c'
  2091  00D5D5  6F                 	db	111	;'o'
  2092  00D5D6  6E                 	db	110	;'n'
  2093  00D5D7  76                 	db	118	;'v'
  2094  00D5D8  65                 	db	101	;'e'
  2095  00D5D9  72                 	db	114	;'r'
  2096  00D5DA  73                 	db	115	;'s'
  2097  00D5DB  69                 	db	105	;'i'
  2098  00D5DC  6F                 	db	111	;'o'
  2099  00D5DD  6E                 	db	110	;'n'
  2100  00D5DE  73                 	db	115	;'s'
  2101  00D5DF  0A                 	db	10
  2102  00D5E0  0D                 	db	13
  2103  00D5E1  20                 	db	32
  2104  00D5E2  20                 	db	32
  2105  00D5E3  20                 	db	32
  2106  00D5E4  43                 	db	67	;'C'
  2107  00D5E5  6F                 	db	111	;'o'
  2108  00D5E6  6D                 	db	109	;'m'
  2109  00D5E7  6D                 	db	109	;'m'
  2110  00D5E8  20                 	db	32
  2111  00D5E9  45                 	db	69	;'E'
  2112  00D5EA  72                 	db	114	;'r'
  2113  00D5EB  72                 	db	114	;'r'
  2114  00D5EC  6F                 	db	111	;'o'
  2115  00D5ED  72                 	db	114	;'r'
  2116  00D5EE  73                 	db	115	;'s'
  2117  00D5EF  3F                 	db	63	;'?'
  2118  00D5F0  3A                 	db	58	;':'
  2119  00D5F1  20                 	db	32
  2120  00D5F2  52                 	db	82	;'R'
  2121  00D5F3  65                 	db	101	;'e'
  2122  00D5F4  74                 	db	116	;'t'
  2123  00D5F5  75                 	db	117	;'u'
  2124  00D5F6  72                 	db	114	;'r'
  2125  00D5F7  6E                 	db	110	;'n'
  2126  00D5F8  73                 	db	115	;'s'
  2127  00D5F9  20                 	db	32
  2128  00D5FA  69                 	db	105	;'i'
  2129  00D5FB  66                 	db	102	;'f'
  2130  00D5FC  20                 	db	32
  2131  00D5FD  61                 	db	97	;'a'
  2132  00D5FE  20                 	db	32
  2133  00D5FF  63                 	db	99	;'c'
  2134  00D600  6F                 	db	111	;'o'
  2135  00D601  6D                 	db	109	;'m'
  2136  00D602  6D                 	db	109	;'m'
  2137  00D603  75                 	db	117	;'u'
  2138  00D604  6E                 	db	110	;'n'
  2139  00D605  69                 	db	105	;'i'
  2140  00D606  63                 	db	99	;'c'
  2141  00D607  61                 	db	97	;'a'
  2142  00D608  74                 	db	116	;'t'
  2143  00D609  69                 	db	105	;'i'
  2144  00D60A  6F                 	db	111	;'o'
  2145  00D60B  6E                 	db	110	;'n'
  2146  00D60C  73                 	db	115	;'s'
  2147  00D60D  20                 	db	32
  2148  00D60E  65                 	db	101	;'e'
  2149  00D60F  72                 	db	114	;'r'
  2150  00D610  72                 	db	114	;'r'
  2151  00D611  6F                 	db	111	;'o'
  2152  00D612  72                 	db	114	;'r'
  2153  00D613  20                 	db	32
  2154  00D614  68                 	db	104	;'h'
  2155  00D615  61                 	db	97	;'a'
  2156  00D616  73                 	db	115	;'s'
  2157  00D617  20                 	db	32
  2158  00D618  6F                 	db	111	;'o'
  2159  00D619  63                 	db	99	;'c'
  2160  00D61A  63                 	db	99	;'c'
  2161  00D61B  75                 	db	117	;'u'
  2162  00D61C  72                 	db	114	;'r'
  2163  00D61D  72                 	db	114	;'r'
  2164  00D61E  65                 	db	101	;'e'
  2165  00D61F  64                 	db	100	;'d'
  2166  00D620  0A                 	db	10
  2167  00D621  0D                 	db	13
  2168  00D622  20                 	db	32
  2169  00D623  20                 	db	32
  2170  00D624  20                 	db	32
  2171  00D625  43                 	db	67	;'C'
  2172  00D626  6C                 	db	108	;'l'
  2173  00D627  65                 	db	101	;'e'
  2174  00D628  61                 	db	97	;'a'
  2175  00D629  72                 	db	114	;'r'
  2176  00D62A  20                 	db	32
  2177  00D62B  43                 	db	67	;'C'
  2178  00D62C  6F                 	db	111	;'o'
  2179  00D62D  6D                 	db	109	;'m'
  2180  00D62E  6D                 	db	109	;'m'
  2181  00D62F  20                 	db	32
  2182  00D630  45                 	db	69	;'E'
  2183  00D631  72                 	db	114	;'r'
  2184  00D632  72                 	db	114	;'r'
  2185  00D633  6F                 	db	111	;'o'
  2186  00D634  72                 	db	114	;'r'
  2187  00D635  73                 	db	115	;'s'
  2188  00D636  3A                 	db	58	;':'
  2189  00D637  20                 	db	32
  2190  00D638  43                 	db	67	;'C'
  2191  00D639  6C                 	db	108	;'l'
  2192  00D63A  65                 	db	101	;'e'
  2193  00D63B  61                 	db	97	;'a'
  2194  00D63C  72                 	db	114	;'r'
  2195  00D63D  73                 	db	115	;'s'
  2196  00D63E  20                 	db	32
  2197  00D63F  74                 	db	116	;'t'
  2198  00D640  68                 	db	104	;'h'
  2199  00D641  65                 	db	101	;'e'
  2200  00D642  20                 	db	32
  2201  00D643  63                 	db	99	;'c'
  2202  00D644  6F                 	db	111	;'o'
  2203  00D645  6D                 	db	109	;'m'
  2204  00D646  6D                 	db	109	;'m'
  2205  00D647  75                 	db	117	;'u'
  2206  00D648  6E                 	db	110	;'n'
  2207  00D649  69                 	db	105	;'i'
  2208  00D64A  63                 	db	99	;'c'
  2209  00D64B  61                 	db	97	;'a'
  2210  00D64C  74                 	db	116	;'t'
  2211  00D64D  69                 	db	105	;'i'
  2212  00D64E  6F                 	db	111	;'o'
  2213  00D64F  6E                 	db	110	;'n'
  2214  00D650  73                 	db	115	;'s'
  2215  00D651  20                 	db	32
  2216  00D652  65                 	db	101	;'e'
  2217  00D653  72                 	db	114	;'r'
  2218  00D654  72                 	db	114	;'r'
  2219  00D655  6F                 	db	111	;'o'
  2220  00D656  72                 	db	114	;'r'
  2221  00D657  0A                 	db	10
  2222  00D658  0D                 	db	13
  2223  00D659  20                 	db	32
  2224  00D65A  20                 	db	32
  2225  00D65B  20                 	db	32
  2226  00D65C  43                 	db	67	;'C'
  2227  00D65D  6C                 	db	108	;'l'
  2228  00D65E  65                 	db	101	;'e'
  2229  00D65F  61                 	db	97	;'a'
  2230  00D660  72                 	db	114	;'r'
  2231  00D661  20                 	db	32
  2232  00D662  4D                 	db	77	;'M'
  2233  00D663  61                 	db	97	;'a'
  2234  00D664  78                 	db	120	;'x'
  2235  00D665  20                 	db	32
  2236  00D666  56                 	db	86	;'V'
  2237  00D667  61                 	db	97	;'a'
  2238  00D668  6C                 	db	108	;'l'
  2239  00D669  75                 	db	117	;'u'
  2240  00D66A  65                 	db	101	;'e'
  2241  00D66B  73                 	db	115	;'s'
  2242  00D66C  3A                 	db	58	;':'
  2243  00D66D  20                 	db	32
  2244  00D66E  45                 	db	69	;'E'
  2245  00D66F  72                 	db	114	;'r'
  2246  00D670  61                 	db	97	;'a'
  2247  00D671  73                 	db	115	;'s'
  2248  00D672  65                 	db	101	;'e'
  2249  00D673  73                 	db	115	;'s'
  2250  00D674  20                 	db	32
  2251  00D675  6D                 	db	109	;'m'
  2252  00D676  61                 	db	97	;'a'
  2253  00D677  78                 	db	120	;'x'
  2254  00D678  69                 	db	105	;'i'
  2255  00D679  6D                 	db	109	;'m'
  2256  00D67A  75                 	db	117	;'u'
  2257  00D67B  6D                 	db	109	;'m'
  2258  00D67C  20                 	db	32
  2259  00D67D  72                 	db	114	;'r'
  2260  00D67E  65                 	db	101	;'e'
  2261  00D67F  63                 	db	99	;'c'
  2262  00D680  6F                 	db	111	;'o'
  2263  00D681  72                 	db	114	;'r'
  2264  00D682  64                 	db	100	;'d'
  2265  00D683  65                 	db	101	;'e'
  2266  00D684  64                 	db	100	;'d'
  2267  00D685  20                 	db	32
  2268  00D686  76                 	db	118	;'v'
  2269  00D687  61                 	db	97	;'a'
  2270  00D688  6C                 	db	108	;'l'
  2271  00D689  75                 	db	117	;'u'
  2272  00D68A  65                 	db	101	;'e'
  2273  00D68B  73                 	db	115	;'s'
  2274  00D68C  20                 	db	32
  2275  00D68D  66                 	db	102	;'f'
  2276  00D68E  72                 	db	114	;'r'
  2277  00D68F  6F                 	db	111	;'o'
  2278  00D690  6D                 	db	109	;'m'
  2279  00D691  20                 	db	32
  2280  00D692  45                 	db	69	;'E'
  2281  00D693  45                 	db	69	;'E'
  2282  00D694  50                 	db	80	;'P'
  2283  00D695  52                 	db	82	;'R'
  2284  00D696  4F                 	db	79	;'O'
  2285  00D697  4D                 	db	77	;'M'
  2286  00D698  0A                 	db	10
  2287  00D699  0D                 	db	13
  2288  00D69A  20                 	db	32
  2289  00D69B  20                 	db	32
  2290  00D69C  20                 	db	32
  2291  00D69D  48                 	db	72	;'H'
  2292  00D69E  65                 	db	101	;'e'
  2293  00D69F  6C                 	db	108	;'l'
  2294  00D6A0  70                 	db	112	;'p'
  2295  00D6A1  3A                 	db	58	;':'
  2296  00D6A2  20                 	db	32
  2297  00D6A3  54                 	db	84	;'T'
  2298  00D6A4  68                 	db	104	;'h'
  2299  00D6A5  69                 	db	105	;'i'
  2300  00D6A6  73                 	db	115	;'s'
  2301  00D6A7  20                 	db	32
  2302  00D6A8  6D                 	db	109	;'m'
  2303  00D6A9  65                 	db	101	;'e'
  2304  00D6AA  73                 	db	115	;'s'
  2305  00D6AB  73                 	db	115	;'s'
  2306  00D6AC  61                 	db	97	;'a'
  2307  00D6AD  67                 	db	103	;'g'
  2308  00D6AE  65                 	db	101	;'e'
  2309  00D6AF  2C                 	db	44
  2310  00D6B0  20                 	db	32
  2311  00D6B1  6C                 	db	108	;'l'
  2312  00D6B2  69                 	db	105	;'i'
  2313  00D6B3  73                 	db	115	;'s'
  2314  00D6B4  74                 	db	116	;'t'
  2315  00D6B5  73                 	db	115	;'s'
  2316  00D6B6  20                 	db	32
  2317  00D6B7  73                 	db	115	;'s'
  2318  00D6B8  75                 	db	117	;'u'
  2319  00D6B9  70                 	db	112	;'p'
  2320  00D6BA  70                 	db	112	;'p'
  2321  00D6BB  6F                 	db	111	;'o'
  2322  00D6BC  72                 	db	114	;'r'
  2323  00D6BD  74                 	db	116	;'t'
  2324  00D6BE  65                 	db	101	;'e'
  2325  00D6BF  64                 	db	100	;'d'
  2326  00D6C0  20                 	db	32
  2327  00D6C1  63                 	db	99	;'c'
  2328  00D6C2  6F                 	db	111	;'o'
  2329  00D6C3  6D                 	db	109	;'m'
  2330  00D6C4  6D                 	db	109	;'m'
  2331  00D6C5  61                 	db	97	;'a'
  2332  00D6C6  6E                 	db	110	;'n'
  2333  00D6C7  64                 	db	100	;'d'
  2334  00D6C8  73                 	db	115	;'s'
  2335  00D6C9  0A                 	db	10
  2336  00D6CA  0D                 	db	13
  2337  00D6CB  0A                 	db	10
  2338  00D6CC  0D                 	db	13
  2339  00D6CD  44                 	db	68	;'D'
  2340  00D6CE  65                 	db	101	;'e'
  2341  00D6CF  76                 	db	118	;'v'
  2342  00D6D0  69                 	db	105	;'i'
  2343  00D6D1  63                 	db	99	;'c'
  2344  00D6D2  65                 	db	101	;'e'
  2345  00D6D3  20                 	db	32
  2346  00D6D4  4D                 	db	77	;'M'
  2347  00D6D5  65                 	db	101	;'e'
  2348  00D6D6  61                 	db	97	;'a'
  2349  00D6D7  73                 	db	115	;'s'
  2350  00D6D8  75                 	db	117	;'u'
  2351  00D6D9  72                 	db	114	;'r'
  2352  00D6DA  65                 	db	101	;'e'
  2353  00D6DB  6D                 	db	109	;'m'
  2354  00D6DC  65                 	db	101	;'e'
  2355  00D6DD  6E                 	db	110	;'n'
  2356  00D6DE  74                 	db	116	;'t'
  2357  00D6DF  20                 	db	32
  2358  00D6E0  43                 	db	67	;'C'
  2359  00D6E1  6F                 	db	111	;'o'
  2360  00D6E2  6D                 	db	109	;'m'
  2361  00D6E3  6D                 	db	109	;'m'
  2362  00D6E4  61                 	db	97	;'a'
  2363  00D6E5  6E                 	db	110	;'n'
  2364  00D6E6  64                 	db	100	;'d'
  2365  00D6E7  73                 	db	115	;'s'
  2366  00D6E8  3A                 	db	58	;':'
  2367  00D6E9  20                 	db	32
  2368  00D6EA  56                 	db	86	;'V'
  2369  00D6EB  69                 	db	105	;'i'
  2370  00D6EC  65                 	db	101	;'e'
  2371  00D6ED  77                 	db	119	;'w'
  2372  00D6EE  20                 	db	32
  2373  00D6EF  6C                 	db	108	;'l'
  2374  00D6F0  6F                 	db	111	;'o'
  2375  00D6F1  77                 	db	119	;'w'
  2376  00D6F2  20                 	db	32
  2377  00D6F3  6C                 	db	108	;'l'
  2378  00D6F4  65                 	db	101	;'e'
  2379  00D6F5  76                 	db	118	;'v'
  2380  00D6F6  65                 	db	101	;'e'
  2381  00D6F7  6C                 	db	108	;'l'
  2382  00D6F8  20                 	db	32
  2383  00D6F9  73                 	db	115	;'s'
  2384  00D6FA  79                 	db	121	;'y'
  2385  00D6FB  73                 	db	115	;'s'
  2386  00D6FC  74                 	db	116	;'t'
  2387  00D6FD  65                 	db	101	;'e'
  2388  00D6FE  6D                 	db	109	;'m'
  2389  00D6FF  20                 	db	32
  2390  00D700  6D                 	db	109	;'m'
  2391  00D701  65                 	db	101	;'e'
  2392  00D702  61                 	db	97	;'a'
  2393  00D703  73                 	db	115	;'s'
  2394  00D704  75                 	db	117	;'u'
  2395  00D705  72                 	db	114	;'r'
  2396  00D706  65                 	db	101	;'e'
  2397  00D707  6D                 	db	109	;'m'
  2398  00D708  65                 	db	101	;'e'
  2399  00D709  6E                 	db	110	;'n'
  2400  00D70A  74                 	db	116	;'t'
  2401  00D70B  73                 	db	115	;'s'
  2402  00D70C  0A                 	db	10
  2403  00D70D  0D                 	db	13
  2404  00D70E  20                 	db	32
  2405  00D70F  20                 	db	32
  2406  00D710  20                 	db	32
  2407  00D711  4D                 	db	77	;'M'
  2408  00D712  65                 	db	101	;'e'
  2409  00D713  61                 	db	97	;'a'
  2410  00D714  73                 	db	115	;'s'
  2411  00D715  75                 	db	117	;'u'
  2412  00D716  72                 	db	114	;'r'
  2413  00D717  65                 	db	101	;'e'
  2414  00D718  20                 	db	32
  2415  00D719  50                 	db	80	;'P'
  2416  00D71A  4F                 	db	79	;'O'
  2417  00D71B  53                 	db	83	;'S'
  2418  00D71C  33                 	db	51	;'3'
  2419  00D71D  50                 	db	80	;'P'
  2420  00D71E  33                 	db	51	;'3'
  2421  00D71F  3F                 	db	63	;'?'
  2422  00D720  3A                 	db	58	;':'
  2423  00D721  20                 	db	32
  2424  00D722  52                 	db	82	;'R'
  2425  00D723  65                 	db	101	;'e'
  2426  00D724  74                 	db	116	;'t'
  2427  00D725  75                 	db	117	;'u'
  2428  00D726  72                 	db	114	;'r'
  2429  00D727  6E                 	db	110	;'n'
  2430  00D728  73                 	db	115	;'s'
  2431  00D729  20                 	db	32
  2432  00D72A  2B                 	db	43
  2433  00D72B  33                 	db	51	;'3'
  2434  00D72C  2E                 	db	46
  2435  00D72D  33                 	db	51	;'3'
  2436  00D72E  56                 	db	86	;'V'
  2437  00D72F  20                 	db	32
  2438  00D730  41                 	db	65	;'A'
  2439  00D731  44                 	db	68	;'D'
  2440  00D732  43                 	db	67	;'C'
  2441  00D733  20                 	db	32
  2442  00D734  43                 	db	67	;'C'
  2443  00D735  6F                 	db	111	;'o'
  2444  00D736  6E                 	db	110	;'n'
  2445  00D737  76                 	db	118	;'v'
  2446  00D738  65                 	db	101	;'e'
  2447  00D739  72                 	db	114	;'r'
  2448  00D73A  73                 	db	115	;'s'
  2449  00D73B  69                 	db	105	;'i'
  2450  00D73C  6F                 	db	111	;'o'
  2451  00D73D  6E                 	db	110	;'n'
  2452  00D73E  20                 	db	32
  2453  00D73F  69                 	db	105	;'i'
  2454  00D740  6E                 	db	110	;'n'
  2455  00D741  20                 	db	32
  2456  00D742  76                 	db	118	;'v'
  2457  00D743  6F                 	db	111	;'o'
  2458  00D744  6C                 	db	108	;'l'
  2459  00D745  74                 	db	116	;'t'
  2460  00D746  73                 	db	115	;'s'
  2461  00D747  0A                 	db	10
  2462  00D748  0D                 	db	13
  2463  00D749  20                 	db	32
  2464  00D74A  20                 	db	32
  2465  00D74B  20                 	db	32
  2466  00D74C  4D                 	db	77	;'M'
  2467  00D74D  65                 	db	101	;'e'
  2468  00D74E  61                 	db	97	;'a'
  2469  00D74F  73                 	db	115	;'s'
  2470  00D750  75                 	db	117	;'u'
  2471  00D751  72                 	db	114	;'r'
  2472  00D752  65                 	db	101	;'e'
  2473  00D753  20                 	db	32
  2474  00D754  50                 	db	80	;'P'
  2475  00D755  4F                 	db	79	;'O'
  2476  00D756  53                 	db	83	;'S'
  2477  00D757  31                 	db	49	;'1'
  2478  00D758  32                 	db	50	;'2'
  2479  00D759  3F                 	db	63	;'?'
  2480  00D75A  3A                 	db	58	;':'
  2481  00D75B  20                 	db	32
  2482  00D75C  52                 	db	82	;'R'
  2483  00D75D  65                 	db	101	;'e'
  2484  00D75E  74                 	db	116	;'t'
  2485  00D75F  75                 	db	117	;'u'
  2486  00D760  72                 	db	114	;'r'
  2487  00D761  6E                 	db	110	;'n'
  2488  00D762  73                 	db	115	;'s'
  2489  00D763  20                 	db	32
  2490  00D764  2B                 	db	43
  2491  00D765  31                 	db	49	;'1'
  2492  00D766  32                 	db	50	;'2'
  2493  00D767  56                 	db	86	;'V'
  2494  00D768  20                 	db	32
  2495  00D769  41                 	db	65	;'A'
  2496  00D76A  44                 	db	68	;'D'
  2497  00D76B  43                 	db	67	;'C'
  2498  00D76C  20                 	db	32
  2499  00D76D  43                 	db	67	;'C'
  2500  00D76E  6F                 	db	111	;'o'
  2501  00D76F  6E                 	db	110	;'n'
  2502  00D770  76                 	db	118	;'v'
  2503  00D771  65                 	db	101	;'e'
  2504  00D772  72                 	db	114	;'r'
  2505  00D773  73                 	db	115	;'s'
  2506  00D774  69                 	db	105	;'i'
  2507  00D775  6F                 	db	111	;'o'
  2508  00D776  6E                 	db	110	;'n'
  2509  00D777  20                 	db	32
  2510  00D778  69                 	db	105	;'i'
  2511  00D779  6E                 	db	110	;'n'
  2512  00D77A  20                 	db	32
  2513  00D77B  76                 	db	118	;'v'
  2514  00D77C  6F                 	db	111	;'o'
  2515  00D77D  6C                 	db	108	;'l'
  2516  00D77E  74                 	db	116	;'t'
  2517  00D77F  73                 	db	115	;'s'
  2518  00D780  0A                 	db	10
  2519  00D781  0D                 	db	13
  2520  00D782  20                 	db	32
  2521  00D783  20                 	db	32
  2522  00D784  20                 	db	32
  2523  00D785  4D                 	db	77	;'M'
  2524  00D786  65                 	db	101	;'e'
  2525  00D787  61                 	db	97	;'a'
  2526  00D788  73                 	db	115	;'s'
  2527  00D789  75                 	db	117	;'u'
  2528  00D78A  72                 	db	114	;'r'
  2529  00D78B  65                 	db	101	;'e'
  2530  00D78C  20                 	db	32
  2531  00D78D  44                 	db	68	;'D'
  2532  00D78E  69                 	db	105	;'i'
  2533  00D78F  65                 	db	101	;'e'
  2534  00D790  20                 	db	32
  2535  00D791  54                 	db	84	;'T'
  2536  00D792  65                 	db	101	;'e'
  2537  00D793  6D                 	db	109	;'m'
  2538  00D794  70                 	db	112	;'p'
  2539  00D795  3F                 	db	63	;'?'
  2540  00D796  3A                 	db	58	;':'
  2541  00D797  20                 	db	32
  2542  00D798  52                 	db	82	;'R'
  2543  00D799  65                 	db	101	;'e'
  2544  00D79A  74                 	db	116	;'t'
  2545  00D79B  75                 	db	117	;'u'
  2546  00D79C  72                 	db	114	;'r'
  2547  00D79D  6E                 	db	110	;'n'
  2548  00D79E  73                 	db	115	;'s'
  2549  00D79F  20                 	db	32
  2550  00D7A0  74                 	db	116	;'t'
  2551  00D7A1  68                 	db	104	;'h'
  2552  00D7A2  65                 	db	101	;'e'
  2553  00D7A3  20                 	db	32
  2554  00D7A4  6D                 	db	109	;'m'
  2555  00D7A5  69                 	db	105	;'i'
  2556  00D7A6  63                 	db	99	;'c'
  2557  00D7A7  72                 	db	114	;'r'
  2558  00D7A8  6F                 	db	111	;'o'
  2559  00D7A9  63                 	db	99	;'c'
  2560  00D7AA  6F                 	db	111	;'o'
  2561  00D7AB  6E                 	db	110	;'n'
  2562  00D7AC  74                 	db	116	;'t'
  2563  00D7AD  72                 	db	114	;'r'
  2564  00D7AE  6F                 	db	111	;'o'
  2565  00D7AF  6C                 	db	108	;'l'
  2566  00D7B0  6C                 	db	108	;'l'
  2567  00D7B1  65                 	db	101	;'e'
  2568  00D7B2  72                 	db	114	;'r'
  2569  00D7B3  20                 	db	32
  2570  00D7B4  64                 	db	100	;'d'
  2571  00D7B5  69                 	db	105	;'i'
  2572  00D7B6  65                 	db	101	;'e'
  2573  00D7B7  20                 	db	32
  2574  00D7B8  74                 	db	116	;'t'
  2575  00D7B9  65                 	db	101	;'e'
  2576  00D7BA  6D                 	db	109	;'m'
  2577  00D7BB  70                 	db	112	;'p'
  2578  00D7BC  65                 	db	101	;'e'
  2579  00D7BD  72                 	db	114	;'r'
  2580  00D7BE  61                 	db	97	;'a'
  2581  00D7BF  74                 	db	116	;'t'
  2582  00D7C0  75                 	db	117	;'u'
  2583  00D7C1  72                 	db	114	;'r'
  2584  00D7C2  65                 	db	101	;'e'
  2585  00D7C3  20                 	db	32
  2586  00D7C4  69                 	db	105	;'i'
  2587  00D7C5  6E                 	db	110	;'n'
  2588  00D7C6  20                 	db	32
  2589  00D7C7  64                 	db	100	;'d'
  2590  00D7C8  65                 	db	101	;'e'
  2591  00D7C9  67                 	db	103	;'g'
  2592  00D7CA  72                 	db	114	;'r'
  2593  00D7CB  65                 	db	101	;'e'
  2594  00D7CC  65                 	db	101	;'e'
  2595  00D7CD  73                 	db	115	;'s'
  2596  00D7CE  20                 	db	32
  2597  00D7CF  43                 	db	67	;'C'
  2598  00D7D0  0A                 	db	10
  2599  00D7D1  0D                 	db	13
  2600  00D7D2  20                 	db	32
  2601  00D7D3  20                 	db	32
  2602  00D7D4  20                 	db	32
  2603  00D7D5  4D                 	db	77	;'M'
  2604  00D7D6  65                 	db	101	;'e'
  2605  00D7D7  61                 	db	97	;'a'
  2606  00D7D8  73                 	db	115	;'s'
  2607  00D7D9  75                 	db	117	;'u'
  2608  00D7DA  72                 	db	114	;'r'
  2609  00D7DB  65                 	db	101	;'e'
  2610  00D7DC  20                 	db	32
  2611  00D7DD  46                 	db	70	;'F'
  2612  00D7DE  56                 	db	86	;'V'
  2613  00D7DF  52                 	db	82	;'R'
  2614  00D7E0  3F                 	db	63	;'?'
  2615  00D7E1  3A                 	db	58	;':'
  2616  00D7E2  20                 	db	32
  2617  00D7E3  52                 	db	82	;'R'
  2618  00D7E4  65                 	db	101	;'e'
  2619  00D7E5  74                 	db	116	;'t'
  2620  00D7E6  75                 	db	117	;'u'
  2621  00D7E7  72                 	db	114	;'r'
  2622  00D7E8  6E                 	db	110	;'n'
  2623  00D7E9  73                 	db	115	;'s'
  2624  00D7EA  20                 	db	32
  2625  00D7EB  74                 	db	116	;'t'
  2626  00D7EC  68                 	db	104	;'h'
  2627  00D7ED  65                 	db	101	;'e'
  2628  00D7EE  20                 	db	32
  2629  00D7EF  69                 	db	105	;'i'
  2630  00D7F0  6E                 	db	110	;'n'
  2631  00D7F1  74                 	db	116	;'t'
  2632  00D7F2  65                 	db	101	;'e'
  2633  00D7F3  72                 	db	114	;'r'
  2634  00D7F4  6E                 	db	110	;'n'
  2635  00D7F5  61                 	db	97	;'a'
  2636  00D7F6  6C                 	db	108	;'l'
  2637  00D7F7  20                 	db	32
  2638  00D7F8  66                 	db	102	;'f'
  2639  00D7F9  69                 	db	105	;'i'
  2640  00D7FA  78                 	db	120	;'x'
  2641  00D7FB  65                 	db	101	;'e'
  2642  00D7FC  64                 	db	100	;'d'
  2643  00D7FD  20                 	db	32
  2644  00D7FE  76                 	db	118	;'v'
  2645  00D7FF  6F                 	db	111	;'o'
  2646  00D800  6C                 	db	108	;'l'
  2647  00D801  74                 	db	116	;'t'
  2648  00D802  61                 	db	97	;'a'
  2649  00D803  67                 	db	103	;'g'
  2650  00D804  65                 	db	101	;'e'
  2651  00D805  20                 	db	32
  2652  00D806  72                 	db	114	;'r'
  2653  00D807  65                 	db	101	;'e'
  2654  00D808  66                 	db	102	;'f'
  2655  00D809  65                 	db	101	;'e'
  2656  00D80A  72                 	db	114	;'r'
  2657  00D80B  65                 	db	101	;'e'
  2658  00D80C  6E                 	db	110	;'n'
  2659  00D80D  63                 	db	99	;'c'
  2660  00D80E  65                 	db	101	;'e'
  2661  00D80F  20                 	db	32
  2662  00D810  62                 	db	98	;'b'
  2663  00D811  75                 	db	117	;'u'
  2664  00D812  66                 	db	102	;'f'
  2665  00D813  66                 	db	102	;'f'
  2666  00D814  65                 	db	101	;'e'
  2667  00D815  72                 	db	114	;'r'
  2668  00D816  20                 	db	32
  2669  00D817  31                 	db	49	;'1'
  2670  00D818  20                 	db	32
  2671  00D819  6F                 	db	111	;'o'
  2672  00D81A  75                 	db	117	;'u'
  2673  00D81B  74                 	db	116	;'t'
  2674  00D81C  70                 	db	112	;'p'
  2675  00D81D  75                 	db	117	;'u'
  2676  00D81E  74                 	db	116	;'t'
  2677  00D81F  20                 	db	32
  2678  00D820  69                 	db	105	;'i'
  2679  00D821  6E                 	db	110	;'n'
  2680  00D822  20                 	db	32
  2681  00D823  76                 	db	118	;'v'
  2682  00D824  6F                 	db	111	;'o'
  2683  00D825  6C                 	db	108	;'l'
  2684  00D826  74                 	db	116	;'t'
  2685  00D827  73                 	db	115	;'s'
  2686  00D828  0A                 	db	10
  2687  00D829  0D                 	db	13
  2688  00D82A  20                 	db	32
  2689  00D82B  20                 	db	32
  2690  00D82C  20                 	db	32
  2691  00D82D  4D                 	db	77	;'M'
  2692  00D82E  65                 	db	101	;'e'
  2693  00D82F  61                 	db	97	;'a'
  2694  00D830  73                 	db	115	;'s'
  2695  00D831  75                 	db	117	;'u'
  2696  00D832  72                 	db	114	;'r'
  2697  00D833  65                 	db	101	;'e'
  2698  00D834  20                 	db	32
  2699  00D835  41                 	db	65	;'A'
  2700  00D836  56                 	db	86	;'V'
  2701  00D837  53                 	db	83	;'S'
  2702  00D838  53                 	db	83	;'S'
  2703  00D839  3F                 	db	63	;'?'
  2704  00D83A  3A                 	db	58	;':'
  2705  00D83B  20                 	db	32
  2706  00D83C  52                 	db	82	;'R'
  2707  00D83D  65                 	db	101	;'e'
  2708  00D83E  74                 	db	116	;'t'
  2709  00D83F  75                 	db	117	;'u'
  2710  00D840  72                 	db	114	;'r'
  2711  00D841  6E                 	db	110	;'n'
  2712  00D842  73                 	db	115	;'s'
  2713  00D843  20                 	db	32
  2714  00D844  74                 	db	116	;'t'
  2715  00D845  68                 	db	104	;'h'
  2716  00D846  65                 	db	101	;'e'
  2717  00D847  20                 	db	32
  2718  00D848  6D                 	db	109	;'m'
  2719  00D849  65                 	db	101	;'e'
  2720  00D84A  61                 	db	97	;'a'
  2721  00D84B  73                 	db	115	;'s'
  2722  00D84C  75                 	db	117	;'u'
  2723  00D84D  72                 	db	114	;'r'
  2724  00D84E  65                 	db	101	;'e'
  2725  00D84F  64                 	db	100	;'d'
  2726  00D850  20                 	db	32
  2727  00D851  76                 	db	118	;'v'
  2728  00D852  61                 	db	97	;'a'
  2729  00D853  6C                 	db	108	;'l'
  2730  00D854  75                 	db	117	;'u'
  2731  00D855  65                 	db	101	;'e'
  2732  00D856  20                 	db	32
  2733  00D857  6F                 	db	111	;'o'
  2734  00D858  66                 	db	102	;'f'
  2735  00D859  20                 	db	32
  2736  00D85A  41                 	db	65	;'A'
  2737  00D85B  6E                 	db	110	;'n'
  2738  00D85C  61                 	db	97	;'a'
  2739  00D85D  6C                 	db	108	;'l'
  2740  00D85E  6F                 	db	111	;'o'
  2741  00D85F  67                 	db	103	;'g'
  2742  00D860  20                 	db	32
  2743  00D861  56                 	db	86	;'V'
  2744  00D862  53                 	db	83	;'S'
  2745  00D863  53                 	db	83	;'S'
  2746  00D864  20                 	db	32
  2747  00D865  69                 	db	105	;'i'
  2748  00D866  6E                 	db	110	;'n'
  2749  00D867  20                 	db	32
  2750  00D868  76                 	db	118	;'v'
  2751  00D869  6F                 	db	111	;'o'
  2752  00D86A  6C                 	db	108	;'l'
  2753  00D86B  74                 	db	116	;'t'
  2754  00D86C  73                 	db	115	;'s'
  2755  00D86D  0A                 	db	10
  2756  00D86E  0D                 	db	13
  2757  00D86F  20                 	db	32
  2758  00D870  20                 	db	32
  2759  00D871  20                 	db	32
  2760  00D872  4D                 	db	77	;'M'
  2761  00D873  61                 	db	97	;'a'
  2762  00D874  78                 	db	120	;'x'
  2763  00D875  20                 	db	32
  2764  00D876  50                 	db	80	;'P'
  2765  00D877  4F                 	db	79	;'O'
  2766  00D878  53                 	db	83	;'S'
  2767  00D879  33                 	db	51	;'3'
  2768  00D87A  50                 	db	80	;'P'
  2769  00D87B  33                 	db	51	;'3'
  2770  00D87C  20                 	db	32
  2771  00D87D  56                 	db	86	;'V'
  2772  00D87E  6F                 	db	111	;'o'
  2773  00D87F  6C                 	db	108	;'l'
  2774  00D880  74                 	db	116	;'t'
  2775  00D881  61                 	db	97	;'a'
  2776  00D882  67                 	db	103	;'g'
  2777  00D883  65                 	db	101	;'e'
  2778  00D884  3F                 	db	63	;'?'
  2779  00D885  3A                 	db	58	;':'
  2780  00D886  20                 	db	32
  2781  00D887  52                 	db	82	;'R'
  2782  00D888  65                 	db	101	;'e'
  2783  00D889  74                 	db	116	;'t'
  2784  00D88A  75                 	db	117	;'u'
  2785  00D88B  72                 	db	114	;'r'
  2786  00D88C  6E                 	db	110	;'n'
  2787  00D88D  73                 	db	115	;'s'
  2788  00D88E  20                 	db	32
  2789  00D88F  74                 	db	116	;'t'
  2790  00D890  68                 	db	104	;'h'
  2791  00D891  65                 	db	101	;'e'
  2792  00D892  20                 	db	32
  2793  00D893  6D                 	db	109	;'m'
  2794  00D894  61                 	db	97	;'a'
  2795  00D895  78                 	db	120	;'x'
  2796  00D896  69                 	db	105	;'i'
  2797  00D897  6D                 	db	109	;'m'
  2798  00D898  75                 	db	117	;'u'
  2799  00D899  6D                 	db	109	;'m'
  2800  00D89A  20                 	db	32
  2801  00D89B  72                 	db	114	;'r'
  2802  00D89C  65                 	db	101	;'e'
  2803  00D89D  63                 	db	99	;'c'
  2804  00D89E  6F                 	db	111	;'o'
  2805  00D89F  72                 	db	114	;'r'
  2806  00D8A0  64                 	db	100	;'d'
  2807  00D8A1  65                 	db	101	;'e'
  2808  00D8A2  64                 	db	100	;'d'
  2809  00D8A3  20                 	db	32
  2810  00D8A4  2B                 	db	43
  2811  00D8A5  33                 	db	51	;'3'
  2812  00D8A6  2E                 	db	46
  2813  00D8A7  33                 	db	51	;'3'
  2814  00D8A8  56                 	db	86	;'V'
  2815  00D8A9  20                 	db	32
  2816  00D8AA  52                 	db	82	;'R'
  2817  00D8AB  61                 	db	97	;'a'
  2818  00D8AC  69                 	db	105	;'i'
  2819  00D8AD  6C                 	db	108	;'l'
  2820  00D8AE  20                 	db	32
  2821  00D8AF  56                 	db	86	;'V'
  2822  00D8B0  6F                 	db	111	;'o'
  2823  00D8B1  6C                 	db	108	;'l'
  2824  00D8B2  74                 	db	116	;'t'
  2825  00D8B3  61                 	db	97	;'a'
  2826  00D8B4  67                 	db	103	;'g'
  2827  00D8B5  65                 	db	101	;'e'
  2828  00D8B6  20                 	db	32
  2829  00D8B7  6D                 	db	109	;'m'
  2830  00D8B8  65                 	db	101	;'e'
  2831  00D8B9  61                 	db	97	;'a'
  2832  00D8BA  73                 	db	115	;'s'
  2833  00D8BB  75                 	db	117	;'u'
  2834  00D8BC  72                 	db	114	;'r'
  2835  00D8BD  65                 	db	101	;'e'
  2836  00D8BE  64                 	db	100	;'d'
  2837  00D8BF  0A                 	db	10
  2838  00D8C0  0D                 	db	13
  2839  00D8C1  20                 	db	32
  2840  00D8C2  20                 	db	32
  2841  00D8C3  20                 	db	32
  2842  00D8C4  4D                 	db	77	;'M'
  2843  00D8C5  61                 	db	97	;'a'
  2844  00D8C6  78                 	db	120	;'x'
  2845  00D8C7  20                 	db	32
  2846  00D8C8  50                 	db	80	;'P'
  2847  00D8C9  4F                 	db	79	;'O'
  2848  00D8CA  53                 	db	83	;'S'
  2849  00D8CB  31                 	db	49	;'1'
  2850  00D8CC  32                 	db	50	;'2'
  2851  00D8CD  20                 	db	32
  2852  00D8CE  56                 	db	86	;'V'
  2853  00D8CF  6F                 	db	111	;'o'
  2854  00D8D0  6C                 	db	108	;'l'
  2855  00D8D1  74                 	db	116	;'t'
  2856  00D8D2  61                 	db	97	;'a'
  2857  00D8D3  67                 	db	103	;'g'
  2858  00D8D4  65                 	db	101	;'e'
  2859  00D8D5  3F                 	db	63	;'?'
  2860  00D8D6  3A                 	db	58	;':'
  2861  00D8D7  20                 	db	32
  2862  00D8D8  52                 	db	82	;'R'
  2863  00D8D9  65                 	db	101	;'e'
  2864  00D8DA  74                 	db	116	;'t'
  2865  00D8DB  75                 	db	117	;'u'
  2866  00D8DC  72                 	db	114	;'r'
  2867  00D8DD  6E                 	db	110	;'n'
  2868  00D8DE  73                 	db	115	;'s'
  2869  00D8DF  20                 	db	32
  2870  00D8E0  74                 	db	116	;'t'
  2871  00D8E1  68                 	db	104	;'h'
  2872  00D8E2  65                 	db	101	;'e'
  2873  00D8E3  20                 	db	32
  2874  00D8E4  6D                 	db	109	;'m'
  2875  00D8E5  61                 	db	97	;'a'
  2876  00D8E6  78                 	db	120	;'x'
  2877  00D8E7  69                 	db	105	;'i'
  2878  00D8E8  6D                 	db	109	;'m'
  2879  00D8E9  75                 	db	117	;'u'
  2880  00D8EA  6D                 	db	109	;'m'
  2881  00D8EB  20                 	db	32
  2882  00D8EC  72                 	db	114	;'r'
  2883  00D8ED  65                 	db	101	;'e'
  2884  00D8EE  63                 	db	99	;'c'
  2885  00D8EF  6F                 	db	111	;'o'
  2886  00D8F0  72                 	db	114	;'r'
  2887  00D8F1  64                 	db	100	;'d'
  2888  00D8F2  65                 	db	101	;'e'
  2889  00D8F3  64                 	db	100	;'d'
  2890  00D8F4  20                 	db	32
  2891  00D8F5  2B                 	db	43
  2892  00D8F6  31                 	db	49	;'1'
  2893  00D8F7  32                 	db	50	;'2'
  2894  00D8F8  56                 	db	86	;'V'
  2895  00D8F9  20                 	db	32
  2896  00D8FA  52                 	db	82	;'R'
  2897  00D8FB  61                 	db	97	;'a'
  2898  00D8FC  69                 	db	105	;'i'
  2899  00D8FD  6C                 	db	108	;'l'
  2900  00D8FE  20                 	db	32
  2901  00D8FF  56                 	db	86	;'V'
  2902  00D900  6F                 	db	111	;'o'
  2903  00D901  6C                 	db	108	;'l'
  2904  00D902  74                 	db	116	;'t'
  2905  00D903  61                 	db	97	;'a'
  2906  00D904  67                 	db	103	;'g'
  2907  00D905  65                 	db	101	;'e'
  2908  00D906  20                 	db	32
  2909  00D907  6D                 	db	109	;'m'
  2910  00D908  65                 	db	101	;'e'
  2911  00D909  61                 	db	97	;'a'
  2912  00D90A  73                 	db	115	;'s'
  2913  00D90B  75                 	db	117	;'u'
  2914  00D90C  72                 	db	114	;'r'
  2915  00D90D  65                 	db	101	;'e'
  2916  00D90E  64                 	db	100	;'d'
  2917  00D90F  0A                 	db	10
  2918  00D910  0D                 	db	13
  2919  00D911  20                 	db	32
  2920  00D912  20                 	db	32
  2921  00D913  20                 	db	32
  2922  00D914  4D                 	db	77	;'M'
  2923  00D915  61                 	db	97	;'a'
  2924  00D916  78                 	db	120	;'x'
  2925  00D917  20                 	db	32
  2926  00D918  44                 	db	68	;'D'
  2927  00D919  69                 	db	105	;'i'
  2928  00D91A  65                 	db	101	;'e'
  2929  00D91B  20                 	db	32
  2930  00D91C  54                 	db	84	;'T'
  2931  00D91D  65                 	db	101	;'e'
  2932  00D91E  6D                 	db	109	;'m'
  2933  00D91F  70                 	db	112	;'p'
  2934  00D920  3F                 	db	63	;'?'
  2935  00D921  3A                 	db	58	;':'
  2936  00D922  20                 	db	32
  2937  00D923  52                 	db	82	;'R'
  2938  00D924  65                 	db	101	;'e'
  2939  00D925  74                 	db	116	;'t'
  2940  00D926  75                 	db	117	;'u'
  2941  00D927  72                 	db	114	;'r'
  2942  00D928  6E                 	db	110	;'n'
  2943  00D929  73                 	db	115	;'s'
  2944  00D92A  20                 	db	32
  2945  00D92B  74                 	db	116	;'t'
  2946  00D92C  68                 	db	104	;'h'
  2947  00D92D  65                 	db	101	;'e'
  2948  00D92E  20                 	db	32
  2949  00D92F  6D                 	db	109	;'m'
  2950  00D930  61                 	db	97	;'a'
  2951  00D931  78                 	db	120	;'x'
  2952  00D932  69                 	db	105	;'i'
  2953  00D933  6D                 	db	109	;'m'
  2954  00D934  75                 	db	117	;'u'
  2955  00D935  6D                 	db	109	;'m'
  2956  00D936  20                 	db	32
  2957  00D937  72                 	db	114	;'r'
  2958  00D938  65                 	db	101	;'e'
  2959  00D939  63                 	db	99	;'c'
  2960  00D93A  6F                 	db	111	;'o'
  2961  00D93B  72                 	db	114	;'r'
  2962  00D93C  64                 	db	100	;'d'
  2963  00D93D  65                 	db	101	;'e'
  2964  00D93E  64                 	db	100	;'d'
  2965  00D93F  20                 	db	32
  2966  00D940  64                 	db	100	;'d'
  2967  00D941  69                 	db	105	;'i'
  2968  00D942  65                 	db	101	;'e'
  2969  00D943  20                 	db	32
  2970  00D944  74                 	db	116	;'t'
  2971  00D945  65                 	db	101	;'e'
  2972  00D946  6D                 	db	109	;'m'
  2973  00D947  70                 	db	112	;'p'
  2974  00D948  65                 	db	101	;'e'
  2975  00D949  72                 	db	114	;'r'
  2976  00D94A  61                 	db	97	;'a'
  2977  00D94B  74                 	db	116	;'t'
  2978  00D94C  75                 	db	117	;'u'
  2979  00D94D  72                 	db	114	;'r'
  2980  00D94E  65                 	db	101	;'e'
  2981  00D94F  20                 	db	32
  2982  00D950  6D                 	db	109	;'m'
  2983  00D951  65                 	db	101	;'e'
  2984  00D952  61                 	db	97	;'a'
  2985  00D953  73                 	db	115	;'s'
  2986  00D954  75                 	db	117	;'u'
  2987  00D955  72                 	db	114	;'r'
  2988  00D956  65                 	db	101	;'e'
  2989  00D957  64                 	db	100	;'d'
  2990  00D958  0A                 	db	10
  2991  00D959  0D                 	db	13
  2992  00D95A  20                 	db	32
  2993  00D95B  20                 	db	32
  2994  00D95C  20                 	db	32
  2995  00D95D  4D                 	db	77	;'M'
  2996  00D95E  61                 	db	97	;'a'
  2997  00D95F  78                 	db	120	;'x'
  2998  00D960  20                 	db	32
  2999  00D961  46                 	db	70	;'F'
  3000  00D962  56                 	db	86	;'V'
  3001  00D963  52                 	db	82	;'R'
  3002  00D964  20                 	db	32
  3003  00D965  56                 	db	86	;'V'
  3004  00D966  6F                 	db	111	;'o'
  3005  00D967  6C                 	db	108	;'l'
  3006  00D968  74                 	db	116	;'t'
  3007  00D969  61                 	db	97	;'a'
  3008  00D96A  67                 	db	103	;'g'
  3009  00D96B  65                 	db	101	;'e'
  3010  00D96C  3F                 	db	63	;'?'
  3011  00D96D  3A                 	db	58	;':'
  3012  00D96E  20                 	db	32
  3013  00D96F  52                 	db	82	;'R'
  3014  00D970  65                 	db	101	;'e'
  3015  00D971  74                 	db	116	;'t'
  3016  00D972  75                 	db	117	;'u'
  3017  00D973  72                 	db	114	;'r'
  3018  00D974  6E                 	db	110	;'n'
  3019  00D975  73                 	db	115	;'s'
  3020  00D976  20                 	db	32
  3021  00D977  74                 	db	116	;'t'
  3022  00D978  68                 	db	104	;'h'
  3023  00D979  65                 	db	101	;'e'
  3024  00D97A  20                 	db	32
  3025  00D97B  6D                 	db	109	;'m'
  3026  00D97C  61                 	db	97	;'a'
  3027  00D97D  78                 	db	120	;'x'
  3028  00D97E  69                 	db	105	;'i'
  3029  00D97F  6D                 	db	109	;'m'
  3030  00D980  75                 	db	117	;'u'
  3031  00D981  6D                 	db	109	;'m'
  3032  00D982  20                 	db	32
  3033  00D983  72                 	db	114	;'r'
  3034  00D984  65                 	db	101	;'e'
  3035  00D985  63                 	db	99	;'c'
  3036  00D986  6F                 	db	111	;'o'
  3037  00D987  72                 	db	114	;'r'
  3038  00D988  64                 	db	100	;'d'
  3039  00D989  65                 	db	101	;'e'
  3040  00D98A  64                 	db	100	;'d'
  3041  00D98B  20                 	db	32
  3042  00D98C  46                 	db	70	;'F'
  3043  00D98D  56                 	db	86	;'V'
  3044  00D98E  52                 	db	82	;'R'
  3045  00D98F  20                 	db	32
  3046  00D990  42                 	db	66	;'B'
  3047  00D991  75                 	db	117	;'u'
  3048  00D992  66                 	db	102	;'f'
  3049  00D993  66                 	db	102	;'f'
  3050  00D994  65                 	db	101	;'e'
  3051  00D995  72                 	db	114	;'r'
  3052  00D996  20                 	db	32
  3053  00D997  31                 	db	49	;'1'
  3054  00D998  20                 	db	32
  3055  00D999  56                 	db	86	;'V'
  3056  00D99A  6F                 	db	111	;'o'
  3057  00D99B  6C                 	db	108	;'l'
  3058  00D99C  74                 	db	116	;'t'
  3059  00D99D  61                 	db	97	;'a'
  3060  00D99E  67                 	db	103	;'g'
  3061  00D99F  65                 	db	101	;'e'
  3062  00D9A0  20                 	db	32
  3063  00D9A1  6D                 	db	109	;'m'
  3064  00D9A2  65                 	db	101	;'e'
  3065  00D9A3  61                 	db	97	;'a'
  3066  00D9A4  73                 	db	115	;'s'
  3067  00D9A5  75                 	db	117	;'u'
  3068  00D9A6  72                 	db	114	;'r'
  3069  00D9A7  65                 	db	101	;'e'
  3070  00D9A8  64                 	db	100	;'d'
  3071  00D9A9  0A                 	db	10
  3072  00D9AA  0D                 	db	13
  3073  00D9AB  0A                 	db	10
  3074  00D9AC  0D                 	db	13
  3075  00D9AD  50                 	db	80	;'P'
  3076  00D9AE  72                 	db	114	;'r'
  3077  00D9AF  69                 	db	105	;'i'
  3078  00D9B0  6D                 	db	109	;'m'
  3079  00D9B1  61                 	db	97	;'a'
  3080  00D9B2  72                 	db	114	;'r'
  3081  00D9B3  79                 	db	121	;'y'
  3082  00D9B4  20                 	db	32
  3083  00D9B5  4D                 	db	77	;'M'
  3084  00D9B6  65                 	db	101	;'e'
  3085  00D9B7  61                 	db	97	;'a'
  3086  00D9B8  73                 	db	115	;'s'
  3087  00D9B9  75                 	db	117	;'u'
  3088  00D9BA  72                 	db	114	;'r'
  3089  00D9BB  65                 	db	101	;'e'
  3090  00D9BC  6D                 	db	109	;'m'
  3091  00D9BD  65                 	db	101	;'e'
  3092  00D9BE  6E                 	db	110	;'n'
  3093  00D9BF  74                 	db	116	;'t'
  3094  00D9C0  20                 	db	32
  3095  00D9C1  43                 	db	67	;'C'
  3096  00D9C2  6F                 	db	111	;'o'
  3097  00D9C3  6D                 	db	109	;'m'
  3098  00D9C4  6D                 	db	109	;'m'
  3099  00D9C5  61                 	db	97	;'a'
  3100  00D9C6  6E                 	db	110	;'n'
  3101  00D9C7  64                 	db	100	;'d'
  3102  00D9C8  73                 	db	115	;'s'
  3103  00D9C9  3A                 	db	58	;':'
  3104  00D9CA  20                 	db	32
  3105  00D9CB  56                 	db	86	;'V'
  3106  00D9CC  69                 	db	105	;'i'
  3107  00D9CD  65                 	db	101	;'e'
  3108  00D9CE  77                 	db	119	;'w'
  3109  00D9CF  20                 	db	32
  3110  00D9D0  68                 	db	104	;'h'
  3111  00D9D1  69                 	db	105	;'i'
  3112  00D9D2  67                 	db	103	;'g'
  3113  00D9D3  68                 	db	104	;'h'
  3114  00D9D4  20                 	db	32
  3115  00D9D5  6C                 	db	108	;'l'
  3116  00D9D6  65                 	db	101	;'e'
  3117  00D9D7  76                 	db	118	;'v'
  3118  00D9D8  65                 	db	101	;'e'
  3119  00D9D9  6C                 	db	108	;'l'
  3120  00D9DA  20                 	db	32
  3121  00D9DB  6F                 	db	111	;'o'
  3122  00D9DC  75                 	db	117	;'u'
  3123  00D9DD  74                 	db	116	;'t'
  3124  00D9DE  70                 	db	112	;'p'
  3125  00D9DF  75                 	db	117	;'u'
  3126  00D9E0  74                 	db	116	;'t'
  3127  00D9E1  20                 	db	32
  3128  00D9E2  6D                 	db	109	;'m'
  3129  00D9E3  65                 	db	101	;'e'
  3130  00D9E4  61                 	db	97	;'a'
  3131  00D9E5  73                 	db	115	;'s'
  3132  00D9E6  75                 	db	117	;'u'
  3133  00D9E7  72                 	db	114	;'r'
  3134  00D9E8  65                 	db	101	;'e'
  3135  00D9E9  6D                 	db	109	;'m'
  3136  00D9EA  65                 	db	101	;'e'
  3137  00D9EB  6E                 	db	110	;'n'
  3138  00D9EC  74                 	db	116	;'t'
  3139  00D9ED  73                 	db	115	;'s'
  3140  00D9EE  20                 	db	32
  3141  00D9EF  61                 	db	97	;'a'
  3142  00D9F0  6E                 	db	110	;'n'
  3143  00D9F1  64                 	db	100	;'d'
  3144  00D9F2  20                 	db	32
  3145  00D9F3  63                 	db	99	;'c'
  3146  00D9F4  61                 	db	97	;'a'
  3147  00D9F5  6C                 	db	108	;'l'
  3148  00D9F6  63                 	db	99	;'c'
  3149  00D9F7  75                 	db	117	;'u'
  3150  00D9F8  6C                 	db	108	;'l'
  3151  00D9F9  61                 	db	97	;'a'
  3152  00D9FA  74                 	db	116	;'t'
  3153  00D9FB  69                 	db	105	;'i'
  3154  00D9FC  6F                 	db	111	;'o'
  3155  00D9FD  6E                 	db	110	;'n'
  3156  00D9FE  73                 	db	115	;'s'
  3157  00D9FF  0A                 	db	10
  3158  00DA00  0D                 	db	13
  3159  00DA01  20                 	db	32
  3160  00DA02  20                 	db	32
  3161  00DA03  20                 	db	32
  3162  00DA04  4D                 	db	77	;'M'
  3163  00DA05  65                 	db	101	;'e'
  3164  00DA06  61                 	db	97	;'a'
  3165  00DA07  73                 	db	115	;'s'
  3166  00DA08  75                 	db	117	;'u'
  3167  00DA09  72                 	db	114	;'r'
  3168  00DA0A  65                 	db	101	;'e'
  3169  00DA0B  20                 	db	32
  3170  00DA0C  44                 	db	68	;'D'
  3171  00DA0D  65                 	db	101	;'e'
  3172  00DA0E  74                 	db	116	;'t'
  3173  00DA0F  65                 	db	101	;'e'
  3174  00DA10  63                 	db	99	;'c'
  3175  00DA11  74                 	db	116	;'t'
  3176  00DA12  65                 	db	101	;'e'
  3177  00DA13  64                 	db	100	;'d'
  3178  00DA14  20                 	db	32
  3179  00DA15  43                 	db	67	;'C'
  3180  00DA16  75                 	db	117	;'u'
  3181  00DA17  72                 	db	114	;'r'
  3182  00DA18  72                 	db	114	;'r'
  3183  00DA19  65                 	db	101	;'e'
  3184  00DA1A  6E                 	db	110	;'n'
  3185  00DA1B  74                 	db	116	;'t'
  3186  00DA1C  3F                 	db	63	;'?'
  3187  00DA1D  3A                 	db	58	;':'
  3188  00DA1E  20                 	db	32
  3189  00DA1F  52                 	db	82	;'R'
  3190  00DA20  65                 	db	101	;'e'
  3191  00DA21  74                 	db	116	;'t'
  3192  00DA22  75                 	db	117	;'u'
  3193  00DA23  72                 	db	114	;'r'
  3194  00DA24  6E                 	db	110	;'n'
  3195  00DA25  73                 	db	115	;'s'
  3196  00DA26  20                 	db	32
  3197  00DA27  6D                 	db	109	;'m'
  3198  00DA28  65                 	db	101	;'e'
  3199  00DA29  61                 	db	97	;'a'
  3200  00DA2A  73                 	db	115	;'s'
  3201  00DA2B  75                 	db	117	;'u'
  3202  00DA2C  72                 	db	114	;'r'
  3203  00DA2D  65                 	db	101	;'e'
  3204  00DA2E  64                 	db	100	;'d'
  3205  00DA2F  20                 	db	32
  3206  00DA30  6F                 	db	111	;'o'
  3207  00DA31  75                 	db	117	;'u'
  3208  00DA32  74                 	db	116	;'t'
  3209  00DA33  70                 	db	112	;'p'
  3210  00DA34  75                 	db	117	;'u'
  3211  00DA35  74                 	db	116	;'t'
  3212  00DA36  20                 	db	32
  3213  00DA37  63                 	db	99	;'c'
  3214  00DA38  75                 	db	117	;'u'
  3215  00DA39  72                 	db	114	;'r'
  3216  00DA3A  72                 	db	114	;'r'
  3217  00DA3B  65                 	db	101	;'e'
  3218  00DA3C  6E                 	db	110	;'n'
  3219  00DA3D  74                 	db	116	;'t'
  3220  00DA3E  20                 	db	32
  3221  00DA3F  69                 	db	105	;'i'
  3222  00DA40  6E                 	db	110	;'n'
  3223  00DA41  20                 	db	32
  3224  00DA42  61                 	db	97	;'a'
  3225  00DA43  6D                 	db	109	;'m'
  3226  00DA44  70                 	db	112	;'p'
  3227  00DA45  73                 	db	115	;'s'
  3228  00DA46  20                 	db	32
  3229  00DA47  61                 	db	97	;'a'
  3230  00DA48  73                 	db	115	;'s'
  3231  00DA49  20                 	db	32
  3232  00DA4A  73                 	db	115	;'s'
  3233  00DA4B  65                 	db	101	;'e'
  3234  00DA4C  65                 	db	101	;'e'
  3235  00DA4D  6E                 	db	110	;'n'
  3236  00DA4E  20                 	db	32
  3237  00DA4F  62                 	db	98	;'b'
  3238  00DA50  79                 	db	121	;'y'
  3239  00DA51  20                 	db	32
  3240  00DA52  41                 	db	65	;'A'
  3241  00DA53  44                 	db	68	;'D'
  3242  00DA54  43                 	db	67	;'C'
  3243  00DA55  0A                 	db	10
  3244  00DA56  0D                 	db	13
  3245  00DA57  20                 	db	32
  3246  00DA58  20                 	db	32
  3247  00DA59  20                 	db	32
  3248  00DA5A  4D                 	db	77	;'M'
  3249  00DA5B  65                 	db	101	;'e'
  3250  00DA5C  61                 	db	97	;'a'
  3251  00DA5D  73                 	db	115	;'s'
  3252  00DA5E  75                 	db	117	;'u'
  3253  00DA5F  72                 	db	114	;'r'
  3254  00DA60  65                 	db	101	;'e'
  3255  00DA61  20                 	db	32
  3256  00DA62  52                 	db	82	;'R'
  3257  00DA63  4D                 	db	77	;'M'
  3258  00DA64  53                 	db	83	;'S'
  3259  00DA65  20                 	db	32
  3260  00DA66  43                 	db	67	;'C'
  3261  00DA67  75                 	db	117	;'u'
  3262  00DA68  72                 	db	114	;'r'
  3263  00DA69  72                 	db	114	;'r'
  3264  00DA6A  65                 	db	101	;'e'
  3265  00DA6B  6E                 	db	110	;'n'
  3266  00DA6C  74                 	db	116	;'t'
  3267  00DA6D  3F                 	db	63	;'?'
  3268  00DA6E  3A                 	db	58	;':'
  3269  00DA6F  20                 	db	32
  3270  00DA70  52                 	db	82	;'R'
  3271  00DA71  65                 	db	101	;'e'
  3272  00DA72  74                 	db	116	;'t'
  3273  00DA73  75                 	db	117	;'u'
  3274  00DA74  72                 	db	114	;'r'
  3275  00DA75  6E                 	db	110	;'n'
  3276  00DA76  73                 	db	115	;'s'
  3277  00DA77  20                 	db	32
  3278  00DA78  74                 	db	116	;'t'
  3279  00DA79  68                 	db	104	;'h'
  3280  00DA7A  65                 	db	101	;'e'
  3281  00DA7B  20                 	db	32
  3282  00DA7C  63                 	db	99	;'c'
  3283  00DA7D  61                 	db	97	;'a'
  3284  00DA7E  6C                 	db	108	;'l'
  3285  00DA7F  63                 	db	99	;'c'
  3286  00DA80  75                 	db	117	;'u'
  3287  00DA81  6C                 	db	108	;'l'
  3288  00DA82  61                 	db	97	;'a'
  3289  00DA83  74                 	db	116	;'t'
  3290  00DA84  65                 	db	101	;'e'
  3291  00DA85  64                 	db	100	;'d'
  3292  00DA86  20                 	db	32
  3293  00DA87  52                 	db	82	;'R'
  3294  00DA88  4D                 	db	77	;'M'
  3295  00DA89  53                 	db	83	;'S'
  3296  00DA8A  20                 	db	32
  3297  00DA8B  6F                 	db	111	;'o'
  3298  00DA8C  75                 	db	117	;'u'
  3299  00DA8D  74                 	db	116	;'t'
  3300  00DA8E  70                 	db	112	;'p'
  3301  00DA8F  75                 	db	117	;'u'
  3302  00DA90  74                 	db	116	;'t'
  3303  00DA91  20                 	db	32
  3304  00DA92  63                 	db	99	;'c'
  3305  00DA93  75                 	db	117	;'u'
  3306  00DA94  72                 	db	114	;'r'
  3307  00DA95  72                 	db	114	;'r'
  3308  00DA96  65                 	db	101	;'e'
  3309  00DA97  6E                 	db	110	;'n'
  3310  00DA98  74                 	db	116	;'t'
  3311  00DA99  20                 	db	32
  3312  00DA9A  66                 	db	102	;'f'
  3313  00DA9B  72                 	db	114	;'r'
  3314  00DA9C  6F                 	db	111	;'o'
  3315  00DA9D  6D                 	db	109	;'m'
  3316  00DA9E  20                 	db	32
  3317  00DA9F  6D                 	db	109	;'m'
  3318  00DAA0  65                 	db	101	;'e'
  3319  00DAA1  61                 	db	97	;'a'
  3320  00DAA2  73                 	db	115	;'s'
  3321  00DAA3  75                 	db	117	;'u'
  3322  00DAA4  72                 	db	114	;'r'
  3323  00DAA5  65                 	db	101	;'e'
  3324  00DAA6  6D                 	db	109	;'m'
  3325  00DAA7  65                 	db	101	;'e'
  3326  00DAA8  6E                 	db	110	;'n'
  3327  00DAA9  74                 	db	116	;'t'
  3328  00DAAA  73                 	db	115	;'s'
  3329  00DAAB  20                 	db	32
  3330  00DAAC  61                 	db	97	;'a'
  3331  00DAAD  6E                 	db	110	;'n'
  3332  00DAAE  64                 	db	100	;'d'
  3333  00DAAF  20                 	db	32
  3334  00DAB0  54                 	db	84	;'T'
  3335  00DAB1  52                 	db	82	;'R'
  3336  00DAB2  49                 	db	73	;'I'
  3337  00DAB3  41                 	db	65	;'A'
  3338  00DAB4  43                 	db	67	;'C'
  3339  00DAB5  20                 	db	32
  3340  00DAB6  66                 	db	102	;'f'
  3341  00DAB7  69                 	db	105	;'i'
  3342  00DAB8  72                 	db	114	;'r'
  3343  00DAB9  69                 	db	105	;'i'
  3344  00DABA  6E                 	db	110	;'n'
  3345  00DABB  67                 	db	103	;'g'
  3346  00DABC  20                 	db	32
  3347  00DABD  61                 	db	97	;'a'
  3348  00DABE  6E                 	db	110	;'n'
  3349  00DABF  67                 	db	103	;'g'
  3350  00DAC0  6C                 	db	108	;'l'
  3351  00DAC1  65                 	db	101	;'e'
  3352  00DAC2  0A                 	db	10
  3353  00DAC3  0D                 	db	13
  3354  00DAC4  20                 	db	32
  3355  00DAC5  20                 	db	32
  3356  00DAC6  20                 	db	32
  3357  00DAC7  4D                 	db	77	;'M'
  3358  00DAC8  65                 	db	101	;'e'
  3359  00DAC9  61                 	db	97	;'a'
  3360  00DACA  73                 	db	115	;'s'
  3361  00DACB  75                 	db	117	;'u'
  3362  00DACC  72                 	db	114	;'r'
  3363  00DACD  65                 	db	101	;'e'
  3364  00DACE  20                 	db	32
  3365  00DACF  52                 	db	82	;'R'
  3366  00DAD0  4D                 	db	77	;'M'
  3367  00DAD1  53                 	db	83	;'S'
  3368  00DAD2  20                 	db	32
  3369  00DAD3  56                 	db	86	;'V'
  3370  00DAD4  6F                 	db	111	;'o'
  3371  00DAD5  6C                 	db	108	;'l'
  3372  00DAD6  74                 	db	116	;'t'
  3373  00DAD7  61                 	db	97	;'a'
  3374  00DAD8  67                 	db	103	;'g'
  3375  00DAD9  65                 	db	101	;'e'
  3376  00DADA  3F                 	db	63	;'?'
  3377  00DADB  3A                 	db	58	;':'
  3378  00DADC  20                 	db	32
  3379  00DADD  52                 	db	82	;'R'
  3380  00DADE  65                 	db	101	;'e'
  3381  00DADF  74                 	db	116	;'t'
  3382  00DAE0  75                 	db	117	;'u'
  3383  00DAE1  72                 	db	114	;'r'
  3384  00DAE2  6E                 	db	110	;'n'
  3385  00DAE3  73                 	db	115	;'s'
  3386  00DAE4  20                 	db	32
  3387  00DAE5  74                 	db	116	;'t'
  3388  00DAE6  68                 	db	104	;'h'
  3389  00DAE7  65                 	db	101	;'e'
  3390  00DAE8  20                 	db	32
  3391  00DAE9  63                 	db	99	;'c'
  3392  00DAEA  61                 	db	97	;'a'
  3393  00DAEB  6C                 	db	108	;'l'
  3394  00DAEC  63                 	db	99	;'c'
  3395  00DAED  75                 	db	117	;'u'
  3396  00DAEE  6C                 	db	108	;'l'
  3397  00DAEF  61                 	db	97	;'a'
  3398  00DAF0  74                 	db	116	;'t'
  3399  00DAF1  65                 	db	101	;'e'
  3400  00DAF2  64                 	db	100	;'d'
  3401  00DAF3  20                 	db	32
  3402  00DAF4  52                 	db	82	;'R'
  3403  00DAF5  4D                 	db	77	;'M'
  3404  00DAF6  53                 	db	83	;'S'
  3405  00DAF7  20                 	db	32
  3406  00DAF8  6F                 	db	111	;'o'
  3407  00DAF9  75                 	db	117	;'u'
  3408  00DAFA  74                 	db	116	;'t'
  3409  00DAFB  70                 	db	112	;'p'
  3410  00DAFC  75                 	db	117	;'u'
  3411  00DAFD  74                 	db	116	;'t'
  3412  00DAFE  20                 	db	32
  3413  00DAFF  76                 	db	118	;'v'
  3414  00DB00  6F                 	db	111	;'o'
  3415  00DB01  6C                 	db	108	;'l'
  3416  00DB02  74                 	db	116	;'t'
  3417  00DB03  61                 	db	97	;'a'
  3418  00DB04  67                 	db	103	;'g'
  3419  00DB05  65                 	db	101	;'e'
  3420  00DB06  20                 	db	32
  3421  00DB07  66                 	db	102	;'f'
  3422  00DB08  72                 	db	114	;'r'
  3423  00DB09  6F                 	db	111	;'o'
  3424  00DB0A  6D                 	db	109	;'m'
  3425  00DB0B  20                 	db	32
  3426  00DB0C  54                 	db	84	;'T'
  3427  00DB0D  52                 	db	82	;'R'
  3428  00DB0E  49                 	db	73	;'I'
  3429  00DB0F  41                 	db	65	;'A'
  3430  00DB10  43                 	db	67	;'C'
  3431  00DB11  20                 	db	32
  3432  00DB12  66                 	db	102	;'f'
  3433  00DB13  69                 	db	105	;'i'
  3434  00DB14  72                 	db	114	;'r'
  3435  00DB15  69                 	db	105	;'i'
  3436  00DB16  6E                 	db	110	;'n'
  3437  00DB17  67                 	db	103	;'g'
  3438  00DB18  20                 	db	32
  3439  00DB19  61                 	db	97	;'a'
  3440  00DB1A  6E                 	db	110	;'n'
  3441  00DB1B  67                 	db	103	;'g'
  3442  00DB1C  6C                 	db	108	;'l'
  3443  00DB1D  65                 	db	101	;'e'
  3444  00DB1E  0A                 	db	10
  3445  00DB1F  0D                 	db	13
  3446  00DB20  20                 	db	32
  3447  00DB21  20                 	db	32
  3448  00DB22  20                 	db	32
  3449  00DB23  4D                 	db	77	;'M'
  3450  00DB24  65                 	db	101	;'e'
  3451  00DB25  61                 	db	97	;'a'
  3452  00DB26  73                 	db	115	;'s'
  3453  00DB27  75                 	db	117	;'u'
  3454  00DB28  72                 	db	114	;'r'
  3455  00DB29  65                 	db	101	;'e'
  3456  00DB2A  20                 	db	32
  3457  00DB2B  50                 	db	80	;'P'
  3458  00DB2C  6F                 	db	111	;'o'
  3459  00DB2D  77                 	db	119	;'w'
  3460  00DB2E  65                 	db	101	;'e'
  3461  00DB2F  72                 	db	114	;'r'
  3462  00DB30  3F                 	db	63	;'?'
  3463  00DB31  3A                 	db	58	;':'
  3464  00DB32  20                 	db	32
  3465  00DB33  52                 	db	82	;'R'
  3466  00DB34  65                 	db	101	;'e'
  3467  00DB35  74                 	db	116	;'t'
  3468  00DB36  75                 	db	117	;'u'
  3469  00DB37  72                 	db	114	;'r'
  3470  00DB38  6E                 	db	110	;'n'
  3471  00DB39  73                 	db	115	;'s'
  3472  00DB3A  20                 	db	32
  3473  00DB3B  74                 	db	116	;'t'
  3474  00DB3C  68                 	db	104	;'h'
  3475  00DB3D  65                 	db	101	;'e'
  3476  00DB3E  20                 	db	32
  3477  00DB3F  63                 	db	99	;'c'
  3478  00DB40  61                 	db	97	;'a'
  3479  00DB41  6C                 	db	108	;'l'
  3480  00DB42  63                 	db	99	;'c'
  3481  00DB43  75                 	db	117	;'u'
  3482  00DB44  6C                 	db	108	;'l'
  3483  00DB45  61                 	db	97	;'a'
  3484  00DB46  74                 	db	116	;'t'
  3485  00DB47  65                 	db	101	;'e'
  3486  00DB48  64                 	db	100	;'d'
  3487  00DB49  20                 	db	32
  3488  00DB4A  6F                 	db	111	;'o'
  3489  00DB4B  75                 	db	117	;'u'
  3490  00DB4C  74                 	db	116	;'t'
  3491  00DB4D  70                 	db	112	;'p'
  3492  00DB4E  75                 	db	117	;'u'
  3493  00DB4F  74                 	db	116	;'t'
  3494  00DB50  20                 	db	32
  3495  00DB51  70                 	db	112	;'p'
  3496  00DB52  6F                 	db	111	;'o'
  3497  00DB53  77                 	db	119	;'w'
  3498  00DB54  65                 	db	101	;'e'
  3499  00DB55  72                 	db	114	;'r'
  3500  00DB56  20                 	db	32
  3501  00DB57  69                 	db	105	;'i'
  3502  00DB58  6E                 	db	110	;'n'
  3503  00DB59  20                 	db	32
  3504  00DB5A  57                 	db	87	;'W'
  3505  00DB5B  61                 	db	97	;'a'
  3506  00DB5C  74                 	db	116	;'t'
  3507  00DB5D  74                 	db	116	;'t'
  3508  00DB5E  73                 	db	115	;'s'
  3509  00DB5F  0A                 	db	10
  3510  00DB60  0D                 	db	13
  3511  00DB61  20                 	db	32
  3512  00DB62  20                 	db	32
  3513  00DB63  20                 	db	32
  3514  00DB64  4D                 	db	77	;'M'
  3515  00DB65  65                 	db	101	;'e'
  3516  00DB66  61                 	db	97	;'a'
  3517  00DB67  73                 	db	115	;'s'
  3518  00DB68  75                 	db	117	;'u'
  3519  00DB69  72                 	db	114	;'r'
  3520  00DB6A  65                 	db	101	;'e'
  3521  00DB6B  20                 	db	32
  3522  00DB6C  45                 	db	69	;'E'
  3523  00DB6D  6E                 	db	110	;'n'
  3524  00DB6E  65                 	db	101	;'e'
  3525  00DB6F  72                 	db	114	;'r'
  3526  00DB70  67                 	db	103	;'g'
  3527  00DB71  79                 	db	121	;'y'
  3528  00DB72  3F                 	db	63	;'?'
  3529  00DB73  3A                 	db	58	;':'
  3530  00DB74  20                 	db	32
  3531  00DB75  52                 	db	82	;'R'
  3532  00DB76  65                 	db	101	;'e'
  3533  00DB77  74                 	db	116	;'t'
  3534  00DB78  75                 	db	117	;'u'
  3535  00DB79  72                 	db	114	;'r'
  3536  00DB7A  6E                 	db	110	;'n'
  3537  00DB7B  73                 	db	115	;'s'
  3538  00DB7C  20                 	db	32
  3539  00DB7D  6D                 	db	109	;'m'
  3540  00DB7E  65                 	db	101	;'e'
  3541  00DB7F  61                 	db	97	;'a'
  3542  00DB80  73                 	db	115	;'s'
  3543  00DB81  75                 	db	117	;'u'
  3544  00DB82  72                 	db	114	;'r'
  3545  00DB83  65                 	db	101	;'e'
  3546  00DB84  64                 	db	100	;'d'
  3547  00DB85  20                 	db	32
  3548  00DB86  65                 	db	101	;'e'
  3549  00DB87  6E                 	db	110	;'n'
  3550  00DB88  65                 	db	101	;'e'
  3551  00DB89  72                 	db	114	;'r'
  3552  00DB8A  67                 	db	103	;'g'
  3553  00DB8B  79                 	db	121	;'y'
  3554  00DB8C  20                 	db	32
  3555  00DB8D  73                 	db	115	;'s'
  3556  00DB8E  69                 	db	105	;'i'
  3557  00DB8F  6E                 	db	110	;'n'
  3558  00DB90  63                 	db	99	;'c'
  3559  00DB91  65                 	db	101	;'e'
  3560  00DB92  20                 	db	32
  3561  00DB93  6D                 	db	109	;'m'
  3562  00DB94  65                 	db	101	;'e'
  3563  00DB95  61                 	db	97	;'a'
  3564  00DB96  73                 	db	115	;'s'
  3565  00DB97  75                 	db	117	;'u'
  3566  00DB98  72                 	db	114	;'r'
  3567  00DB99  65                 	db	101	;'e'
  3568  00DB9A  6D                 	db	109	;'m'
  3569  00DB9B  65                 	db	101	;'e'
  3570  00DB9C  6E                 	db	110	;'n'
  3571  00DB9D  74                 	db	116	;'t'
  3572  00DB9E  20                 	db	32
  3573  00DB9F  72                 	db	114	;'r'
  3574  00DBA0  65                 	db	101	;'e'
  3575  00DBA1  73                 	db	115	;'s'
  3576  00DBA2  65                 	db	101	;'e'
  3577  00DBA3  74                 	db	116	;'t'
  3578  00DBA4  20                 	db	32
  3579  00DBA5  69                 	db	105	;'i'
  3580  00DBA6  6E                 	db	110	;'n'
  3581  00DBA7  20                 	db	32
  3582  00DBA8  57                 	db	87	;'W'
  3583  00DBA9  61                 	db	97	;'a'
  3584  00DBAA  74                 	db	116	;'t'
  3585  00DBAB  74                 	db	116	;'t'
  3586  00DBAC  20                 	db	32
  3587  00DBAD  48                 	db	72	;'H'
  3588  00DBAE  6F                 	db	111	;'o'
  3589  00DBAF  75                 	db	117	;'u'
  3590  00DBB0  72                 	db	114	;'r'
  3591  00DBB1  73                 	db	115	;'s'
  3592  00DBB2  0A                 	db	10
  3593  00DBB3  0D                 	db	13
  3594  00DBB4  20                 	db	32
  3595  00DBB5  20                 	db	32
  3596  00DBB6  20                 	db	32
  3597  00DBB7  43                 	db	67	;'C'
  3598  00DBB8  6C                 	db	108	;'l'
  3599  00DBB9  65                 	db	101	;'e'
  3600  00DBBA  61                 	db	97	;'a'
  3601  00DBBB  72                 	db	114	;'r'
  3602  00DBBC  20                 	db	32
  3603  00DBBD  45                 	db	69	;'E'
  3604  00DBBE  6E                 	db	110	;'n'
  3605  00DBBF  65                 	db	101	;'e'
  3606  00DBC0  72                 	db	114	;'r'
  3607  00DBC1  67                 	db	103	;'g'
  3608  00DBC2  79                 	db	121	;'y'
  3609  00DBC3  3A                 	db	58	;':'
  3610  00DBC4  20                 	db	32
  3611  00DBC5  52                 	db	82	;'R'
  3612  00DBC6  65                 	db	101	;'e'
  3613  00DBC7  73                 	db	115	;'s'
  3614  00DBC8  65                 	db	101	;'e'
  3615  00DBC9  74                 	db	116	;'t'
  3616  00DBCA  73                 	db	115	;'s'
  3617  00DBCB  20                 	db	32
  3618  00DBCC  74                 	db	116	;'t'
  3619  00DBCD  68                 	db	104	;'h'
  3620  00DBCE  65                 	db	101	;'e'
  3621  00DBCF  20                 	db	32
  3622  00DBD0  6D                 	db	109	;'m'
  3623  00DBD1  65                 	db	101	;'e'
  3624  00DBD2  61                 	db	97	;'a'
  3625  00DBD3  73                 	db	115	;'s'
  3626  00DBD4  75                 	db	117	;'u'
  3627  00DBD5  72                 	db	114	;'r'
  3628  00DBD6  65                 	db	101	;'e'
  3629  00DBD7  64                 	db	100	;'d'
  3630  00DBD8  20                 	db	32
  3631  00DBD9  6F                 	db	111	;'o'
  3632  00DBDA  75                 	db	117	;'u'
  3633  00DBDB  74                 	db	116	;'t'
  3634  00DBDC  70                 	db	112	;'p'
  3635  00DBDD  75                 	db	117	;'u'
  3636  00DBDE  74                 	db	116	;'t'
  3637  00DBDF  20                 	db	32
  3638  00DBE0  65                 	db	101	;'e'
  3639  00DBE1  6E                 	db	110	;'n'
  3640  00DBE2  65                 	db	101	;'e'
  3641  00DBE3  72                 	db	114	;'r'
  3642  00DBE4  67                 	db	103	;'g'
  3643  00DBE5  79                 	db	121	;'y'
  3644  00DBE6  20                 	db	32
  3645  00DBE7  74                 	db	116	;'t'
  3646  00DBE8  6F                 	db	111	;'o'
  3647  00DBE9  20                 	db	32
  3648  00DBEA  7A                 	db	122	;'z'
  3649  00DBEB  65                 	db	101	;'e'
  3650  00DBEC  72                 	db	114	;'r'
  3651  00DBED  6F                 	db	111	;'o'
  3652  00DBEE  0A                 	db	10
  3653  00DBEF  0D                 	db	13
  3654  00DBF0  20                 	db	32
  3655  00DBF1  20                 	db	32
  3656  00DBF2  20                 	db	32
  3657  00DBF3  4C                 	db	76	;'L'
  3658  00DBF4  6F                 	db	111	;'o'
  3659  00DBF5  61                 	db	97	;'a'
  3660  00DBF6  64                 	db	100	;'d'
  3661  00DBF7  20                 	db	32
  3662  00DBF8  4F                 	db	79	;'O'
  3663  00DBF9  6E                 	db	110	;'n'
  3664  00DBFA  20                 	db	32
  3665  00DBFB  54                 	db	84	;'T'
  3666  00DBFC  69                 	db	105	;'i'
  3667  00DBFD  6D                 	db	109	;'m'
  3668  00DBFE  65                 	db	101	;'e'
  3669  00DBFF  3F                 	db	63	;'?'
  3670  00DC00  3A                 	db	58	;':'
  3671  00DC01  20                 	db	32
  3672  00DC02  52                 	db	82	;'R'
  3673  00DC03  65                 	db	101	;'e'
  3674  00DC04  74                 	db	116	;'t'
  3675  00DC05  75                 	db	117	;'u'
  3676  00DC06  72                 	db	114	;'r'
  3677  00DC07  6E                 	db	110	;'n'
  3678  00DC08  73                 	db	115	;'s'
  3679  00DC09  20                 	db	32
  3680  00DC0A  6C                 	db	108	;'l'
  3681  00DC0B  6F                 	db	111	;'o'
  3682  00DC0C  61                 	db	97	;'a'
  3683  00DC0D  64                 	db	100	;'d'
  3684  00DC0E  20                 	db	32
  3685  00DC0F  6F                 	db	111	;'o'
  3686  00DC10  6E                 	db	110	;'n'
  3687  00DC11  20                 	db	32
  3688  00DC12  74                 	db	116	;'t'
  3689  00DC13  69                 	db	105	;'i'
  3690  00DC14  6D                 	db	109	;'m'
  3691  00DC15  65                 	db	101	;'e'
  3692  00DC16  20                 	db	32
  3693  00DC17  73                 	db	115	;'s'
  3694  00DC18  69                 	db	105	;'i'
  3695  00DC19  6E                 	db	110	;'n'
  3696  00DC1A  63                 	db	99	;'c'
  3697  00DC1B  65                 	db	101	;'e'
  3698  00DC1C  20                 	db	32
  3699  00DC1D  6C                 	db	108	;'l'
  3700  00DC1E  61                 	db	97	;'a'
  3701  00DC1F  73                 	db	115	;'s'
  3702  00DC20  74                 	db	116	;'t'
  3703  00DC21  20                 	db	32
  3704  00DC22  64                 	db	100	;'d'
  3705  00DC23  65                 	db	101	;'e'
  3706  00DC24  76                 	db	118	;'v'
  3707  00DC25  69                 	db	105	;'i'
  3708  00DC26  63                 	db	99	;'c'
  3709  00DC27  65                 	db	101	;'e'
  3710  00DC28  20                 	db	32
  3711  00DC29  72                 	db	114	;'r'
  3712  00DC2A  65                 	db	101	;'e'
  3713  00DC2B  73                 	db	115	;'s'
  3714  00DC2C  65                 	db	101	;'e'
  3715  00DC2D  74                 	db	116	;'t'
  3716  00DC2E  20                 	db	32
  3717  00DC2F  69                 	db	105	;'i'
  3718  00DC30  6E                 	db	110	;'n'
  3719  00DC31  20                 	db	32
  3720  00DC32  73                 	db	115	;'s'
  3721  00DC33  65                 	db	101	;'e'
  3722  00DC34  63                 	db	99	;'c'
  3723  00DC35  6F                 	db	111	;'o'
  3724  00DC36  6E                 	db	110	;'n'
  3725  00DC37  64                 	db	100	;'d'
  3726  00DC38  73                 	db	115	;'s'
  3727  00DC39  0A                 	db	10
  3728  00DC3A  0D                 	db	13
  3729  00DC3B  20                 	db	32
  3730  00DC3C  20                 	db	32
  3731  00DC3D  20                 	db	32
  3732  00DC3E  4D                 	db	77	;'M'
  3733  00DC3F  61                 	db	97	;'a'
  3734  00DC40  78                 	db	120	;'x'
  3735  00DC41  20                 	db	32
  3736  00DC42  52                 	db	82	;'R'
  3737  00DC43  4D                 	db	77	;'M'
  3738  00DC44  53                 	db	83	;'S'
  3739  00DC45  20                 	db	32
  3740  00DC46  43                 	db	67	;'C'
  3741  00DC47  75                 	db	117	;'u'
  3742  00DC48  72                 	db	114	;'r'
  3743  00DC49  72                 	db	114	;'r'
  3744  00DC4A  65                 	db	101	;'e'
  3745  00DC4B  6E                 	db	110	;'n'
  3746  00DC4C  74                 	db	116	;'t'
  3747  00DC4D  3F                 	db	63	;'?'
  3748  00DC4E  3A                 	db	58	;':'
  3749  00DC4F  20                 	db	32
  3750  00DC50  50                 	db	80	;'P'
  3751  00DC51  72                 	db	114	;'r'
  3752  00DC52  69                 	db	105	;'i'
  3753  00DC53  6E                 	db	110	;'n'
  3754  00DC54  74                 	db	116	;'t'
  3755  00DC55  73                 	db	115	;'s'
  3756  00DC56  20                 	db	32
  3757  00DC57  74                 	db	116	;'t'
  3758  00DC58  68                 	db	104	;'h'
  3759  00DC59  65                 	db	101	;'e'
  3760  00DC5A  20                 	db	32
  3761  00DC5B  6D                 	db	109	;'m'
  3762  00DC5C  61                 	db	97	;'a'
  3763  00DC5D  78                 	db	120	;'x'
  3764  00DC5E  69                 	db	105	;'i'
  3765  00DC5F  6D                 	db	109	;'m'
  3766  00DC60  75                 	db	117	;'u'
  3767  00DC61  6D                 	db	109	;'m'
  3768  00DC62  20                 	db	32
  3769  00DC63  72                 	db	114	;'r'
  3770  00DC64  65                 	db	101	;'e'
  3771  00DC65  63                 	db	99	;'c'
  3772  00DC66  6F                 	db	111	;'o'
  3773  00DC67  72                 	db	114	;'r'
  3774  00DC68  64                 	db	100	;'d'
  3775  00DC69  65                 	db	101	;'e'
  3776  00DC6A  64                 	db	100	;'d'
  3777  00DC6B  20                 	db	32
  3778  00DC6C  52                 	db	82	;'R'
  3779  00DC6D  4D                 	db	77	;'M'
  3780  00DC6E  53                 	db	83	;'S'
  3781  00DC6F  20                 	db	32
  3782  00DC70  6F                 	db	111	;'o'
  3783  00DC71  75                 	db	117	;'u'
  3784  00DC72  74                 	db	116	;'t'
  3785  00DC73  70                 	db	112	;'p'
  3786  00DC74  75                 	db	117	;'u'
  3787  00DC75  74                 	db	116	;'t'
  3788  00DC76  20                 	db	32
  3789  00DC77  63                 	db	99	;'c'
  3790  00DC78  75                 	db	117	;'u'
  3791  00DC79  72                 	db	114	;'r'
  3792  00DC7A  72                 	db	114	;'r'
  3793  00DC7B  65                 	db	101	;'e'
  3794  00DC7C  6E                 	db	110	;'n'
  3795  00DC7D  74                 	db	116	;'t'
  3796  00DC7E  0A                 	db	10
  3797  00DC7F  0D                 	db	13
  3798  00DC80  20                 	db	32
  3799  00DC81  20                 	db	32
  3800  00DC82  20                 	db	32
  3801  00DC83  4D                 	db	77	;'M'
  3802  00DC84  61                 	db	97	;'a'
  3803  00DC85  78                 	db	120	;'x'
  3804  00DC86  20                 	db	32
  3805  00DC87  50                 	db	80	;'P'
  3806  00DC88  6F                 	db	111	;'o'
  3807  00DC89  77                 	db	119	;'w'
  3808  00DC8A  65                 	db	101	;'e'
  3809  00DC8B  72                 	db	114	;'r'
  3810  00DC8C  3F                 	db	63	;'?'
  3811  00DC8D  3A                 	db	58	;':'
  3812  00DC8E  20                 	db	32
  3813  00DC8F  50                 	db	80	;'P'
  3814  00DC90  72                 	db	114	;'r'
  3815  00DC91  69                 	db	105	;'i'
  3816  00DC92  6E                 	db	110	;'n'
  3817  00DC93  74                 	db	116	;'t'
  3818  00DC94  73                 	db	115	;'s'
  3819  00DC95  20                 	db	32
  3820  00DC96  74                 	db	116	;'t'
  3821  00DC97  68                 	db	104	;'h'
  3822  00DC98  65                 	db	101	;'e'
  3823  00DC99  20                 	db	32
  3824  00DC9A  6D                 	db	109	;'m'
  3825  00DC9B  61                 	db	97	;'a'
  3826  00DC9C  78                 	db	120	;'x'
  3827  00DC9D  69                 	db	105	;'i'
  3828  00DC9E  6D                 	db	109	;'m'
  3829  00DC9F  75                 	db	117	;'u'
  3830  00DCA0  6D                 	db	109	;'m'
  3831  00DCA1  20                 	db	32
  3832  00DCA2  72                 	db	114	;'r'
  3833  00DCA3  65                 	db	101	;'e'
  3834  00DCA4  63                 	db	99	;'c'
  3835  00DCA5  6F                 	db	111	;'o'
  3836  00DCA6  72                 	db	114	;'r'
  3837  00DCA7  64                 	db	100	;'d'
  3838  00DCA8  65                 	db	101	;'e'
  3839  00DCA9  64                 	db	100	;'d'
  3840  00DCAA  20                 	db	32
  3841  00DCAB  6F                 	db	111	;'o'
  3842  00DCAC  75                 	db	117	;'u'
  3843  00DCAD  74                 	db	116	;'t'
  3844  00DCAE  70                 	db	112	;'p'
  3845  00DCAF  75                 	db	117	;'u'
  3846  00DCB0  74                 	db	116	;'t'
  3847  00DCB1  20                 	db	32
  3848  00DCB2  70                 	db	112	;'p'
  3849  00DCB3  6F                 	db	111	;'o'
  3850  00DCB4  77                 	db	119	;'w'
  3851  00DCB5  65                 	db	101	;'e'
  3852  00DCB6  72                 	db	114	;'r'
  3853  00DCB7  0A                 	db	10
  3854  00DCB8  0D                 	db	13
  3855  00DCB9  0A                 	db	10
  3856  00DCBA  0D                 	db	13
  3857  00DCBB  4F                 	db	79	;'O'
  3858  00DCBC  75                 	db	117	;'u'
  3859  00DCBD  74                 	db	116	;'t'
  3860  00DCBE  70                 	db	112	;'p'
  3861  00DCBF  75                 	db	117	;'u'
  3862  00DCC0  74                 	db	116	;'t'
  3863  00DCC1  20                 	db	32
  3864  00DCC2  43                 	db	67	;'C'
  3865  00DCC3  6F                 	db	111	;'o'
  3866  00DCC4  6E                 	db	110	;'n'
  3867  00DCC5  74                 	db	116	;'t'
  3868  00DCC6  72                 	db	114	;'r'
  3869  00DCC7  6F                 	db	111	;'o'
  3870  00DCC8  6C                 	db	108	;'l'
  3871  00DCC9  20                 	db	32
  3872  00DCCA  43                 	db	67	;'C'
  3873  00DCCB  6F                 	db	111	;'o'
  3874  00DCCC  6D                 	db	109	;'m'
  3875  00DCCD  6D                 	db	109	;'m'
  3876  00DCCE  61                 	db	97	;'a'
  3877  00DCCF  6E                 	db	110	;'n'
  3878  00DCD0  64                 	db	100	;'d'
  3879  00DCD1  73                 	db	115	;'s'
  3880  00DCD2  3A                 	db	58	;':'
  3881  00DCD3  20                 	db	32
  3882  00DCD4  43                 	db	67	;'C'
  3883  00DCD5  6F                 	db	111	;'o'
  3884  00DCD6  6E                 	db	110	;'n'
  3885  00DCD7  74                 	db	116	;'t'
  3886  00DCD8  72                 	db	114	;'r'
  3887  00DCD9  6F                 	db	111	;'o'
  3888  00DCDA  6C                 	db	108	;'l'
  3889  00DCDB  20                 	db	32
  3890  00DCDC  74                 	db	116	;'t'
  3891  00DCDD  68                 	db	104	;'h'
  3892  00DCDE  65                 	db	101	;'e'
  3893  00DCDF  20                 	db	32
  3894  00DCE0  6F                 	db	111	;'o'
  3895  00DCE1  75                 	db	117	;'u'
  3896  00DCE2  74                 	db	116	;'t'
  3897  00DCE3  70                 	db	112	;'p'
  3898  00DCE4  75                 	db	117	;'u'
  3899  00DCE5  74                 	db	116	;'t'
  3900  00DCE6  20                 	db	32
  3901  00DCE7  73                 	db	115	;'s'
  3902  00DCE8  74                 	db	116	;'t'
  3903  00DCE9  61                 	db	97	;'a'
  3904  00DCEA  74                 	db	116	;'t'
  3905  00DCEB  65                 	db	101	;'e'
  3906  00DCEC  20                 	db	32
  3907  00DCED  61                 	db	97	;'a'
  3908  00DCEE  6E                 	db	110	;'n'
  3909  00DCEF  64                 	db	100	;'d'
  3910  00DCF0  20                 	db	32
  3911  00DCF1  64                 	db	100	;'d'
  3912  00DCF2  69                 	db	105	;'i'
  3913  00DCF3  6D                 	db	109	;'m'
  3914  00DCF4  6D                 	db	109	;'m'
  3915  00DCF5  69                 	db	105	;'i'
  3916  00DCF6  6E                 	db	110	;'n'
  3917  00DCF7  67                 	db	103	;'g'
  3918  00DCF8  20                 	db	32
  3919  00DCF9  66                 	db	102	;'f'
  3920  00DCFA  65                 	db	101	;'e'
  3921  00DCFB  61                 	db	97	;'a'
  3922  00DCFC  74                 	db	116	;'t'
  3923  00DCFD  75                 	db	117	;'u'
  3924  00DCFE  72                 	db	114	;'r'
  3925  00DCFF  65                 	db	101	;'e'
  3926  00DD00  73                 	db	115	;'s'
  3927  00DD01  0A                 	db	10
  3928  00DD02  0D                 	db	13
  3929  00DD03  20                 	db	32
  3930  00DD04  20                 	db	32
  3931  00DD05  20                 	db	32
  3932  00DD06  45                 	db	69	;'E'
  3933  00DD07  6E                 	db	110	;'n'
  3934  00DD08  61                 	db	97	;'a'
  3935  00DD09  62                 	db	98	;'b'
  3936  00DD0A  6C                 	db	108	;'l'
  3937  00DD0B  65                 	db	101	;'e'
  3938  00DD0C  20                 	db	32
  3939  00DD0D  44                 	db	68	;'D'
  3940  00DD0E  69                 	db	105	;'i'
  3941  00DD0F  6D                 	db	109	;'m'
  3942  00DD10  6D                 	db	109	;'m'
  3943  00DD11  69                 	db	105	;'i'
  3944  00DD12  6E                 	db	110	;'n'
  3945  00DD13  67                 	db	103	;'g'
  3946  00DD14  3A                 	db	58	;':'
  3947  00DD15  20                 	db	32
  3948  00DD16  45                 	db	69	;'E'
  3949  00DD17  6E                 	db	110	;'n'
  3950  00DD18  61                 	db	97	;'a'
  3951  00DD19  62                 	db	98	;'b'
  3952  00DD1A  6C                 	db	108	;'l'
  3953  00DD1B  65                 	db	101	;'e'
  3954  00DD1C  20                 	db	32
  3955  00DD1D  54                 	db	84	;'T'
  3956  00DD1E  52                 	db	82	;'R'
  3957  00DD1F  49                 	db	73	;'I'
  3958  00DD20  41                 	db	65	;'A'
  3959  00DD21  43                 	db	67	;'C'
  3960  00DD22  20                 	db	32
  3961  00DD23  6F                 	db	111	;'o'
  3962  00DD24  75                 	db	117	;'u'
  3963  00DD25  74                 	db	116	;'t'
  3964  00DD26  70                 	db	112	;'p'
  3965  00DD27  75                 	db	117	;'u'
  3966  00DD28  74                 	db	116	;'t'
  3967  00DD29  20                 	db	32
  3968  00DD2A  64                 	db	100	;'d'
  3969  00DD2B  69                 	db	105	;'i'
  3970  00DD2C  6D                 	db	109	;'m'
  3971  00DD2D  6D                 	db	109	;'m'
  3972  00DD2E  69                 	db	105	;'i'
  3973  00DD2F  6E                 	db	110	;'n'
  3974  00DD30  67                 	db	103	;'g'
  3975  00DD31  0A                 	db	10
  3976  00DD32  0D                 	db	13
  3977  00DD33  20                 	db	32
  3978  00DD34  20                 	db	32
  3979  00DD35  20                 	db	32
  3980  00DD36  44                 	db	68	;'D'
  3981  00DD37  69                 	db	105	;'i'
  3982  00DD38  73                 	db	115	;'s'
  3983  00DD39  61                 	db	97	;'a'
  3984  00DD3A  62                 	db	98	;'b'
  3985  00DD3B  6C                 	db	108	;'l'
  3986  00DD3C  65                 	db	101	;'e'
  3987  00DD3D  20                 	db	32
  3988  00DD3E  44                 	db	68	;'D'
  3989  00DD3F  69                 	db	105	;'i'
  3990  00DD40  6D                 	db	109	;'m'
  3991  00DD41  6D                 	db	109	;'m'
  3992  00DD42  69                 	db	105	;'i'
  3993  00DD43  6E                 	db	110	;'n'
  3994  00DD44  67                 	db	103	;'g'
  3995  00DD45  3A                 	db	58	;':'
  3996  00DD46  20                 	db	32
  3997  00DD47  44                 	db	68	;'D'
  3998  00DD48  69                 	db	105	;'i'
  3999  00DD49  73                 	db	115	;'s'
  4000  00DD4A  61                 	db	97	;'a'
  4001  00DD4B  62                 	db	98	;'b'
  4002  00DD4C  6C                 	db	108	;'l'
  4003  00DD4D  65                 	db	101	;'e'
  4004  00DD4E  20                 	db	32
  4005  00DD4F  54                 	db	84	;'T'
  4006  00DD50  52                 	db	82	;'R'
  4007  00DD51  49                 	db	73	;'I'
  4008  00DD52  41                 	db	65	;'A'
  4009  00DD53  43                 	db	67	;'C'
  4010  00DD54  20                 	db	32
  4011  00DD55  6F                 	db	111	;'o'
  4012  00DD56  75                 	db	117	;'u'
  4013  00DD57  74                 	db	116	;'t'
  4014  00DD58  70                 	db	112	;'p'
  4015  00DD59  75                 	db	117	;'u'
  4016  00DD5A  74                 	db	116	;'t'
  4017  00DD5B  20                 	db	32
  4018  00DD5C  64                 	db	100	;'d'
  4019  00DD5D  69                 	db	105	;'i'
  4020  00DD5E  6D                 	db	109	;'m'
  4021  00DD5F  6D                 	db	109	;'m'
  4022  00DD60  69                 	db	105	;'i'
  4023  00DD61  6E                 	db	110	;'n'
  4024  00DD62  67                 	db	103	;'g'
  4025  00DD63  0A                 	db	10
  4026  00DD64  0D                 	db	13
  4027  00DD65  20                 	db	32
  4028  00DD66  20                 	db	32
  4029  00DD67  20                 	db	32
  4030  00DD68  45                 	db	69	;'E'
  4031  00DD69  6E                 	db	110	;'n'
  4032  00DD6A  61                 	db	97	;'a'
  4033  00DD6B  62                 	db	98	;'b'
  4034  00DD6C  6C                 	db	108	;'l'
  4035  00DD6D  65                 	db	101	;'e'
  4036  00DD6E  20                 	db	32
  4037  00DD6F  4C                 	db	76	;'L'
  4038  00DD70  6F                 	db	111	;'o'
  4039  00DD71  61                 	db	97	;'a'
  4040  00DD72  64                 	db	100	;'d'
  4041  00DD73  3A                 	db	58	;':'
  4042  00DD74  20                 	db	32
  4043  00DD75  45                 	db	69	;'E'
  4044  00DD76  6E                 	db	110	;'n'
  4045  00DD77  61                 	db	97	;'a'
  4046  00DD78  62                 	db	98	;'b'
  4047  00DD79  6C                 	db	108	;'l'
  4048  00DD7A  65                 	db	101	;'e'
  4049  00DD7B  73                 	db	115	;'s'
  4050  00DD7C  20                 	db	32
  4051  00DD7D  74                 	db	116	;'t'
  4052  00DD7E  68                 	db	104	;'h'
  4053  00DD7F  65                 	db	101	;'e'
  4054  00DD80  20                 	db	32
  4055  00DD81  6F                 	db	111	;'o'
  4056  00DD82  75                 	db	117	;'u'
  4057  00DD83  74                 	db	116	;'t'
  4058  00DD84  70                 	db	112	;'p'
  4059  00DD85  75                 	db	117	;'u'
  4060  00DD86  74                 	db	116	;'t'
  4061  00DD87  20                 	db	32
  4062  00DD88  54                 	db	84	;'T'
  4063  00DD89  52                 	db	82	;'R'
  4064  00DD8A  49                 	db	73	;'I'
  4065  00DD8B  41                 	db	65	;'A'
  4066  00DD8C  43                 	db	67	;'C'
  4067  00DD8D  20                 	db	32
  4068  00DD8E  77                 	db	119	;'w'
  4069  00DD8F  69                 	db	105	;'i'
  4070  00DD90  74                 	db	116	;'t'
  4071  00DD91  68                 	db	104	;'h'
  4072  00DD92  20                 	db	32
  4073  00DD93  64                 	db	100	;'d'
  4074  00DD94  69                 	db	105	;'i'
  4075  00DD95  6D                 	db	109	;'m'
  4076  00DD96  6D                 	db	109	;'m'
  4077  00DD97  69                 	db	105	;'i'
  4078  00DD98  6E                 	db	110	;'n'
  4079  00DD99  67                 	db	103	;'g'
  4080  00DD9A  20                 	db	32
  4081  00DD9B  64                 	db	100	;'d'
  4082  00DD9C  69                 	db	105	;'i'
  4083  00DD9D  73                 	db	115	;'s'
  4084  00DD9E  61                 	db	97	;'a'
  4085  00DD9F  62                 	db	98	;'b'
  4086  00DDA0  6C                 	db	108	;'l'
  4087  00DDA1  65                 	db	101	;'e'
  4088  00DDA2  64                 	db	100	;'d'
  4089  00DDA3  0A                 	db	10
  4090  00DDA4  0D                 	db	13
  4091  00DDA5  20                 	db	32
  4092  00DDA6  20                 	db	32
  4093  00DDA7  20                 	db	32
  4094  00DDA8  44                 	db	68	;'D'
  4095  00DDA9  69                 	db	105	;'i'
  4096  00DDAA  73                 	db	115	;'s'
  4097  00DDAB  61                 	db	97	;'a'
  4098  00DDAC  62                 	db	98	;'b'
  4099  00DDAD  6C                 	db	108	;'l'
  4100  00DDAE  65                 	db	101	;'e'
  4101  00DDAF  20                 	db	32
  4102  00DDB0  4C                 	db	76	;'L'
  4103  00DDB1  6F                 	db	111	;'o'
  4104  00DDB2  61                 	db	97	;'a'
  4105  00DDB3  64                 	db	100	;'d'
  4106  00DDB4  3A                 	db	58	;':'
  4107  00DDB5  20                 	db	32
  4108  00DDB6  44                 	db	68	;'D'
  4109  00DDB7  69                 	db	105	;'i'
  4110  00DDB8  73                 	db	115	;'s'
  4111  00DDB9  61                 	db	97	;'a'
  4112  00DDBA  62                 	db	98	;'b'
  4113  00DDBB  6C                 	db	108	;'l'
  4114  00DDBC  65                 	db	101	;'e'
  4115  00DDBD  73                 	db	115	;'s'
  4116  00DDBE  20                 	db	32
  4117  00DDBF  74                 	db	116	;'t'
  4118  00DDC0  68                 	db	104	;'h'
  4119  00DDC1  65                 	db	101	;'e'
  4120  00DDC2  20                 	db	32
  4121  00DDC3  6F                 	db	111	;'o'
  4122  00DDC4  75                 	db	117	;'u'
  4123  00DDC5  74                 	db	116	;'t'
  4124  00DDC6  70                 	db	112	;'p'
  4125  00DDC7  75                 	db	117	;'u'
  4126  00DDC8  74                 	db	116	;'t'
  4127  00DDC9  20                 	db	32
  4128  00DDCA  54                 	db	84	;'T'
  4129  00DDCB  52                 	db	82	;'R'
  4130  00DDCC  49                 	db	73	;'I'
  4131  00DDCD  41                 	db	65	;'A'
  4132  00DDCE  43                 	db	67	;'C'
  4133  00DDCF  20                 	db	32
  4134  00DDD0  63                 	db	99	;'c'
  4135  00DDD1  6F                 	db	111	;'o'
  4136  00DDD2  6D                 	db	109	;'m'
  4137  00DDD3  70                 	db	112	;'p'
  4138  00DDD4  6C                 	db	108	;'l'
  4139  00DDD5  65                 	db	101	;'e'
  4140  00DDD6  74                 	db	116	;'t'
  4141  00DDD7  65                 	db	101	;'e'
  4142  00DDD8  6C                 	db	108	;'l'
  4143  00DDD9  79                 	db	121	;'y'
  4144  00DDDA  0A                 	db	10
  4145  00DDDB  0D                 	db	13
  4146  00DDDC  20                 	db	32
  4147  00DDDD  20                 	db	32
  4148  00DDDE  20                 	db	32
  4149  00DDDF  4C                 	db	76	;'L'
  4150  00DDE0  6F                 	db	111	;'o'
  4151  00DDE1  61                 	db	97	;'a'
  4152  00DDE2  64                 	db	100	;'d'
  4153  00DDE3  20                 	db	32
  4154  00DDE4  45                 	db	69	;'E'
  4155  00DDE5  6E                 	db	110	;'n'
  4156  00DDE6  61                 	db	97	;'a'
  4157  00DDE7  62                 	db	98	;'b'
  4158  00DDE8  6C                 	db	108	;'l'
  4159  00DDE9  65                 	db	101	;'e'
  4160  00DDEA  64                 	db	100	;'d'
  4161  00DDEB  3F                 	db	63	;'?'
  4162  00DDEC  3A                 	db	58	;':'
  4163  00DDED  20                 	db	32
  4164  00DDEE  52                 	db	82	;'R'
  4165  00DDEF  65                 	db	101	;'e'
  4166  00DDF0  74                 	db	116	;'t'
  4167  00DDF1  75                 	db	117	;'u'
  4168  00DDF2  72                 	db	114	;'r'
  4169  00DDF3  6E                 	db	110	;'n'
  4170  00DDF4  73                 	db	115	;'s'
  4171  00DDF5  20                 	db	32
  4172  00DDF6  69                 	db	105	;'i'
  4173  00DDF7  66                 	db	102	;'f'
  4174  00DDF8  20                 	db	32
  4175  00DDF9  74                 	db	116	;'t'
  4176  00DDFA  68                 	db	104	;'h'
  4177  00DDFB  65                 	db	101	;'e'
  4178  00DDFC  20                 	db	32
  4179  00DDFD  6F                 	db	111	;'o'
  4180  00DDFE  75                 	db	117	;'u'
  4181  00DDFF  74                 	db	116	;'t'
  4182  00DE00  70                 	db	112	;'p'
  4183  00DE01  75                 	db	117	;'u'
  4184  00DE02  74                 	db	116	;'t'
  4185  00DE03  20                 	db	32
  4186  00DE04  6C                 	db	108	;'l'
  4187  00DE05  6F                 	db	111	;'o'
  4188  00DE06  61                 	db	97	;'a'
  4189  00DE07  64                 	db	100	;'d'
  4190  00DE08  20                 	db	32
  4191  00DE09  69                 	db	105	;'i'
  4192  00DE0A  73                 	db	115	;'s'
  4193  00DE0B  20                 	db	32
  4194  00DE0C  65                 	db	101	;'e'
  4195  00DE0D  6E                 	db	110	;'n'
  4196  00DE0E  61                 	db	97	;'a'
  4197  00DE0F  62                 	db	98	;'b'
  4198  00DE10  6C                 	db	108	;'l'
  4199  00DE11  65                 	db	101	;'e'
  4200  00DE12  64                 	db	100	;'d'
  4201  00DE13  20                 	db	32
  4202  00DE14  6F                 	db	111	;'o'
  4203  00DE15  72                 	db	114	;'r'
  4204  00DE16  20                 	db	32
  4205  00DE17  64                 	db	100	;'d'
  4206  00DE18  69                 	db	105	;'i'
  4207  00DE19  73                 	db	115	;'s'
  4208  00DE1A  61                 	db	97	;'a'
  4209  00DE1B  62                 	db	98	;'b'
  4210  00DE1C  6C                 	db	108	;'l'
  4211  00DE1D  65                 	db	101	;'e'
  4212  00DE1E  64                 	db	100	;'d'
  4213  00DE1F  0A                 	db	10
  4214  00DE20  0D                 	db	13
  4215  00DE21  20                 	db	32
  4216  00DE22  20                 	db	32
  4217  00DE23  20                 	db	32
  4218  00DE24  44                 	db	68	;'D'
  4219  00DE25  69                 	db	105	;'i'
  4220  00DE26  6D                 	db	109	;'m'
  4221  00DE27  6D                 	db	109	;'m'
  4222  00DE28  69                 	db	105	;'i'
  4223  00DE29  6E                 	db	110	;'n'
  4224  00DE2A  67                 	db	103	;'g'
  4225  00DE2B  20                 	db	32
  4226  00DE2C  45                 	db	69	;'E'
  4227  00DE2D  6E                 	db	110	;'n'
  4228  00DE2E  61                 	db	97	;'a'
  4229  00DE2F  62                 	db	98	;'b'
  4230  00DE30  6C                 	db	108	;'l'
  4231  00DE31  65                 	db	101	;'e'
  4232  00DE32  64                 	db	100	;'d'
  4233  00DE33  3F                 	db	63	;'?'
  4234  00DE34  3A                 	db	58	;':'
  4235  00DE35  20                 	db	32
  4236  00DE36  52                 	db	82	;'R'
  4237  00DE37  65                 	db	101	;'e'
  4238  00DE38  74                 	db	116	;'t'
  4239  00DE39  75                 	db	117	;'u'
  4240  00DE3A  72                 	db	114	;'r'
  4241  00DE3B  6E                 	db	110	;'n'
  4242  00DE3C  73                 	db	115	;'s'
  4243  00DE3D  20                 	db	32
  4244  00DE3E  69                 	db	105	;'i'
  4245  00DE3F  66                 	db	102	;'f'
  4246  00DE40  20                 	db	32
  4247  00DE41  64                 	db	100	;'d'
  4248  00DE42  69                 	db	105	;'i'
  4249  00DE43  6D                 	db	109	;'m'
  4250  00DE44  6D                 	db	109	;'m'
  4251  00DE45  69                 	db	105	;'i'
  4252  00DE46  6E                 	db	110	;'n'
  4253  00DE47  67                 	db	103	;'g'
  4254  00DE48  20                 	db	32
  4255  00DE49  6F                 	db	111	;'o'
  4256  00DE4A  66                 	db	102	;'f'
  4257  00DE4B  20                 	db	32
  4258  00DE4C  74                 	db	116	;'t'
  4259  00DE4D  68                 	db	104	;'h'
  4260  00DE4E  65                 	db	101	;'e'
  4261  00DE4F  20                 	db	32
  4262  00DE50  6F                 	db	111	;'o'
  4263  00DE51  75                 	db	117	;'u'
  4264  00DE52  74                 	db	116	;'t'
  4265  00DE53  70                 	db	112	;'p'
  4266  00DE54  75                 	db	117	;'u'
  4267  00DE55  74                 	db	116	;'t'
  4268  00DE56  20                 	db	32
  4269  00DE57  6C                 	db	108	;'l'
  4270  00DE58  6F                 	db	111	;'o'
  4271  00DE59  61                 	db	97	;'a'
  4272  00DE5A  64                 	db	100	;'d'
  4273  00DE5B  20                 	db	32
  4274  00DE5C  69                 	db	105	;'i'
  4275  00DE5D  73                 	db	115	;'s'
  4276  00DE5E  20                 	db	32
  4277  00DE5F  65                 	db	101	;'e'
  4278  00DE60  6E                 	db	110	;'n'
  4279  00DE61  61                 	db	97	;'a'
  4280  00DE62  62                 	db	98	;'b'
  4281  00DE63  6C                 	db	108	;'l'
  4282  00DE64  65                 	db	101	;'e'
  4283  00DE65  64                 	db	100	;'d'
  4284  00DE66  20                 	db	32
  4285  00DE67  6F                 	db	111	;'o'
  4286  00DE68  72                 	db	114	;'r'
  4287  00DE69  20                 	db	32
  4288  00DE6A  6E                 	db	110	;'n'
  4289  00DE6B  6F                 	db	111	;'o'
  4290  00DE6C  74                 	db	116	;'t'
  4291  00DE6D  0A                 	db	10
  4292  00DE6E  0D                 	db	13
  4293  00DE6F  20                 	db	32
  4294  00DE70  20                 	db	32
  4295  00DE71  20                 	db	32
  4296  00DE72  53                 	db	83	;'S'
  4297  00DE73  65                 	db	101	;'e'
  4298  00DE74  74                 	db	116	;'t'
  4299  00DE75  20                 	db	32
  4300  00DE76  44                 	db	68	;'D'
  4301  00DE77  69                 	db	105	;'i'
  4302  00DE78  6D                 	db	109	;'m'
  4303  00DE79  6D                 	db	109	;'m'
  4304  00DE7A  69                 	db	105	;'i'
  4305  00DE7B  6E                 	db	110	;'n'
  4306  00DE7C  67                 	db	103	;'g'
  4307  00DE7D  20                 	db	32
  4308  00DE7E  50                 	db	80	;'P'
  4309  00DE7F  65                 	db	101	;'e'
  4310  00DE80  72                 	db	114	;'r'
  4311  00DE81  63                 	db	99	;'c'
  4312  00DE82  65                 	db	101	;'e'
  4313  00DE83  6E                 	db	110	;'n'
  4314  00DE84  74                 	db	116	;'t'
  4315  00DE85  61                 	db	97	;'a'
  4316  00DE86  67                 	db	103	;'g'
  4317  00DE87  65                 	db	101	;'e'
  4318  00DE88  3A                 	db	58	;':'
  4319  00DE89  20                 	db	32
  4320  00DE8A  3C                 	db	60	;'<'
  4321  00DE8B  78                 	db	120	;'x'
  4322  00DE8C  3E                 	db	62	;'>'
  4323  00DE8D  3A                 	db	58	;':'
  4324  00DE8E  20                 	db	32
  4325  00DE8F  53                 	db	83	;'S'
  4326  00DE90  65                 	db	101	;'e'
  4327  00DE91  74                 	db	116	;'t'
  4328  00DE92  73                 	db	115	;'s'
  4329  00DE93  20                 	db	32
  4330  00DE94  74                 	db	116	;'t'
  4331  00DE95  68                 	db	104	;'h'
  4332  00DE96  65                 	db	101	;'e'
  4333  00DE97  20                 	db	32
  4334  00DE98  6F                 	db	111	;'o'
  4335  00DE99  75                 	db	117	;'u'
  4336  00DE9A  74                 	db	116	;'t'
  4337  00DE9B  70                 	db	112	;'p'
  4338  00DE9C  75                 	db	117	;'u'
  4339  00DE9D  74                 	db	116	;'t'
  4340  00DE9E  20                 	db	32
  4341  00DE9F  64                 	db	100	;'d'
  4342  00DEA0  69                 	db	105	;'i'
  4343  00DEA1  6D                 	db	109	;'m'
  4344  00DEA2  6D                 	db	109	;'m'
  4345  00DEA3  69                 	db	105	;'i'
  4346  00DEA4  6E                 	db	110	;'n'
  4347  00DEA5  67                 	db	103	;'g'
  4348  00DEA6  20                 	db	32
  4349  00DEA7  70                 	db	112	;'p'
  4350  00DEA8  65                 	db	101	;'e'
  4351  00DEA9  72                 	db	114	;'r'
  4352  00DEAA  63                 	db	99	;'c'
  4353  00DEAB  65                 	db	101	;'e'
  4354  00DEAC  6E                 	db	110	;'n'
  4355  00DEAD  74                 	db	116	;'t'
  4356  00DEAE  61                 	db	97	;'a'
  4357  00DEAF  67                 	db	103	;'g'
  4358  00DEB0  65                 	db	101	;'e'
  4359  00DEB1  20                 	db	32
  4360  00DEB2  61                 	db	97	;'a'
  4361  00DEB3  73                 	db	115	;'s'
  4362  00DEB4  20                 	db	32
  4363  00DEB5  78                 	db	120	;'x'
  4364  00DEB6  20                 	db	32
  4365  00DEB7  70                 	db	112	;'p'
  4366  00DEB8  65                 	db	101	;'e'
  4367  00DEB9  72                 	db	114	;'r'
  4368  00DEBA  63                 	db	99	;'c'
  4369  00DEBB  65                 	db	101	;'e'
  4370  00DEBC  6E                 	db	110	;'n'
  4371  00DEBD  74                 	db	116	;'t'
  4372  00DEBE  0A                 	db	10
  4373  00DEBF  0D                 	db	13
  4374  00DEC0  0A                 	db	10
  4375  00DEC1  0D                 	db	13
  4376  00DEC2  00                 	db	0
  4377  00DEC3                     STR_154:
  4378  00DEC3  4C                 	db	76	;'L'
  4379  00DEC4  69                 	db	105	;'i'
  4380  00DEC5  73                 	db	115	;'s'
  4381  00DEC6  74                 	db	116	;'t'
  4382  00DEC7  20                 	db	32
  4383  00DEC8  6F                 	db	111	;'o'
  4384  00DEC9  66                 	db	102	;'f'
  4385  00DECA  20                 	db	32
  4386  00DECB  73                 	db	115	;'s'
  4387  00DECC  75                 	db	117	;'u'
  4388  00DECD  70                 	db	112	;'p'
  4389  00DECE  70                 	db	112	;'p'
  4390  00DECF  6F                 	db	111	;'o'
  4391  00DED0  72                 	db	114	;'r'
  4392  00DED1  74                 	db	116	;'t'
  4393  00DED2  65                 	db	101	;'e'
  4394  00DED3  64                 	db	100	;'d'
  4395  00DED4  20                 	db	32
  4396  00DED5  44                 	db	68	;'D'
  4397  00DED6  65                 	db	101	;'e'
  4398  00DED7  76                 	db	118	;'v'
  4399  00DED8  69                 	db	105	;'i'
  4400  00DED9  63                 	db	99	;'c'
  4401  00DEDA  65                 	db	101	;'e'
  4402  00DEDB  20                 	db	32
  4403  00DEDC  43                 	db	67	;'C'
  4404  00DEDD  6F                 	db	111	;'o'
  4405  00DEDE  6E                 	db	110	;'n'
  4406  00DEDF  74                 	db	116	;'t'
  4407  00DEE0  72                 	db	114	;'r'
  4408  00DEE1  6F                 	db	111	;'o'
  4409  00DEE2  6C                 	db	108	;'l'
  4410  00DEE3  20                 	db	32
  4411  00DEE4  43                 	db	67	;'C'
  4412  00DEE5  6F                 	db	111	;'o'
  4413  00DEE6  6D                 	db	109	;'m'
  4414  00DEE7  6D                 	db	109	;'m'
  4415  00DEE8  61                 	db	97	;'a'
  4416  00DEE9  6E                 	db	110	;'n'
  4417  00DEEA  64                 	db	100	;'d'
  4418  00DEEB  73                 	db	115	;'s'
  4419  00DEEC  3A                 	db	58	;':'
  4420  00DEED  0A                 	db	10
  4421  00DEEE  0D                 	db	13
  4422  00DEEF  20                 	db	32
  4423  00DEF0  20                 	db	32
  4424  00DEF1  20                 	db	32
  4425  00DEF2  52                 	db	82	;'R'
  4426  00DEF3  65                 	db	101	;'e'
  4427  00DEF4  73                 	db	115	;'s'
  4428  00DEF5  65                 	db	101	;'e'
  4429  00DEF6  74                 	db	116	;'t'
  4430  00DEF7  3A                 	db	58	;':'
  4431  00DEF8  20                 	db	32
  4432  00DEF9  43                 	db	67	;'C'
  4433  00DEFA  6C                 	db	108	;'l'
  4434  00DEFB  65                 	db	101	;'e'
  4435  00DEFC  61                 	db	97	;'a'
  4436  00DEFD  72                 	db	114	;'r'
  4437  00DEFE  73                 	db	115	;'s'
  4438  00DEFF  20                 	db	32
  4439  00DF00  74                 	db	116	;'t'
  4440  00DF01  68                 	db	104	;'h'
  4441  00DF02  65                 	db	101	;'e'
  4442  00DF03  20                 	db	32
  4443  00DF04  74                 	db	116	;'t'
  4444  00DF05  65                 	db	101	;'e'
  4445  00DF06  72                 	db	114	;'r'
  4446  00DF07  6D                 	db	109	;'m'
  4447  00DF08  69                 	db	105	;'i'
  4448  00DF09  6E                 	db	110	;'n'
  4449  00DF0A  61                 	db	97	;'a'
  4450  00DF0B  6C                 	db	108	;'l'
  4451  00DF0C  20                 	db	32
  4452  00DF0D  61                 	db	97	;'a'
  4453  00DF0E  6E                 	db	110	;'n'
  4454  00DF0F  64                 	db	100	;'d'
  4455  00DF10  20                 	db	32
  4456  00DF11  72                 	db	114	;'r'
  4457  00DF12  65                 	db	101	;'e'
  4458  00DF13  73                 	db	115	;'s'
  4459  00DF14  65                 	db	101	;'e'
  4460  00DF15  74                 	db	116	;'t'
  4461  00DF16  73                 	db	115	;'s'
  4462  00DF17  20                 	db	32
  4463  00DF18  74                 	db	116	;'t'
  4464  00DF19  68                 	db	104	;'h'
  4465  00DF1A  65                 	db	101	;'e'
  4466  00DF1B  20                 	db	32
  4467  00DF1C  6D                 	db	109	;'m'
  4468  00DF1D  69                 	db	105	;'i'
  4469  00DF1E  63                 	db	99	;'c'
  4470  00DF1F  72                 	db	114	;'r'
  4471  00DF20  6F                 	db	111	;'o'
  4472  00DF21  63                 	db	99	;'c'
  4473  00DF22  6F                 	db	111	;'o'
  4474  00DF23  6E                 	db	110	;'n'
  4475  00DF24  74                 	db	116	;'t'
  4476  00DF25  72                 	db	114	;'r'
  4477  00DF26  6F                 	db	111	;'o'
  4478  00DF27  6C                 	db	108	;'l'
  4479  00DF28  6C                 	db	108	;'l'
  4480  00DF29  65                 	db	101	;'e'
  4481  00DF2A  72                 	db	114	;'r'
  4482  00DF2B  0A                 	db	10
  4483  00DF2C  0D                 	db	13
  4484  00DF2D  20                 	db	32
  4485  00DF2E  20                 	db	32
  4486  00DF2F  20                 	db	32
  4487  00DF30  43                 	db	67	;'C'
  4488  00DF31  6C                 	db	108	;'l'
  4489  00DF32  65                 	db	101	;'e'
  4490  00DF33  61                 	db	97	;'a'
  4491  00DF34  72                 	db	114	;'r'
  4492  00DF35  3A                 	db	58	;':'
  4493  00DF36  20                 	db	32
  4494  00DF37  43                 	db	67	;'C'
  4495  00DF38  6C                 	db	108	;'l'
  4496  00DF39  65                 	db	101	;'e'
  4497  00DF3A  61                 	db	97	;'a'
  4498  00DF3B  72                 	db	114	;'r'
  4499  00DF3C  73                 	db	115	;'s'
  4500  00DF3D  20                 	db	32
  4501  00DF3E  74                 	db	116	;'t'
  4502  00DF3F  68                 	db	104	;'h'
  4503  00DF40  65                 	db	101	;'e'
  4504  00DF41  20                 	db	32
  4505  00DF42  74                 	db	116	;'t'
  4506  00DF43  65                 	db	101	;'e'
  4507  00DF44  72                 	db	114	;'r'
  4508  00DF45  6D                 	db	109	;'m'
  4509  00DF46  69                 	db	105	;'i'
  4510  00DF47  6E                 	db	110	;'n'
  4511  00DF48  61                 	db	97	;'a'
  4512  00DF49  6C                 	db	108	;'l'
  4513  00DF4A  20                 	db	32
  4514  00DF4B  62                 	db	98	;'b'
  4515  00DF4C  75                 	db	117	;'u'
  4516  00DF4D  74                 	db	116	;'t'
  4517  00DF4E  20                 	db	32
  4518  00DF4F  64                 	db	100	;'d'
  4519  00DF50  6F                 	db	111	;'o'
  4520  00DF51  65                 	db	101	;'e'
  4521  00DF52  73                 	db	115	;'s'
  4522  00DF53  6E                 	db	110	;'n'
  4523  00DF54  27                 	db	39
  4524  00DF55  74                 	db	116	;'t'
  4525  00DF56  20                 	db	32
  4526  00DF57  72                 	db	114	;'r'
  4527  00DF58  65                 	db	101	;'e'
  4528  00DF59  73                 	db	115	;'s'
  4529  00DF5A  65                 	db	101	;'e'
  4530  00DF5B  74                 	db	116	;'t'
  4531  00DF5C  20                 	db	32
  4532  00DF5D  74                 	db	116	;'t'
  4533  00DF5E  68                 	db	104	;'h'
  4534  00DF5F  65                 	db	101	;'e'
  4535  00DF60  20                 	db	32
  4536  00DF61  6D                 	db	109	;'m'
  4537  00DF62  69                 	db	105	;'i'
  4538  00DF63  63                 	db	99	;'c'
  4539  00DF64  72                 	db	114	;'r'
  4540  00DF65  6F                 	db	111	;'o'
  4541  00DF66  0A                 	db	10
  4542  00DF67  0D                 	db	13
  4543  00DF68  20                 	db	32
  4544  00DF69  20                 	db	32
  4545  00DF6A  20                 	db	32
  4546  00DF6B  43                 	db	67	;'C'
  4547  00DF6C  61                 	db	97	;'a'
  4548  00DF6D  75                 	db	117	;'u'
  4549  00DF6E  73                 	db	115	;'s'
  4550  00DF6F  65                 	db	101	;'e'
  4551  00DF70  20                 	db	32
  4552  00DF71  6F                 	db	111	;'o'
  4553  00DF72  66                 	db	102	;'f'
  4554  00DF73  20                 	db	32
  4555  00DF74  52                 	db	82	;'R'
  4556  00DF75  65                 	db	101	;'e'
  4557  00DF76  73                 	db	115	;'s'
  4558  00DF77  65                 	db	101	;'e'
  4559  00DF78  74                 	db	116	;'t'
  4560  00DF79  3F                 	db	63	;'?'
  4561  00DF7A  3A                 	db	58	;':'
  4562  00DF7B  20                 	db	32
  4563  00DF7C  52                 	db	82	;'R'
  4564  00DF7D  65                 	db	101	;'e'
  4565  00DF7E  74                 	db	116	;'t'
  4566  00DF7F  75                 	db	117	;'u'
  4567  00DF80  72                 	db	114	;'r'
  4568  00DF81  6E                 	db	110	;'n'
  4569  00DF82  73                 	db	115	;'s'
  4570  00DF83  20                 	db	32
  4571  00DF84  74                 	db	116	;'t'
  4572  00DF85  68                 	db	104	;'h'
  4573  00DF86  65                 	db	101	;'e'
  4574  00DF87  20                 	db	32
  4575  00DF88  63                 	db	99	;'c'
  4576  00DF89  61                 	db	97	;'a'
  4577  00DF8A  75                 	db	117	;'u'
  4578  00DF8B  73                 	db	115	;'s'
  4579  00DF8C  65                 	db	101	;'e'
  4580  00DF8D  20                 	db	32
  4581  00DF8E  6F                 	db	111	;'o'
  4582  00DF8F  66                 	db	102	;'f'
  4583  00DF90  20                 	db	32
  4584  00DF91  74                 	db	116	;'t'
  4585  00DF92  68                 	db	104	;'h'
  4586  00DF93  65                 	db	101	;'e'
  4587  00DF94  20                 	db	32
  4588  00DF95  6D                 	db	109	;'m'
  4589  00DF96  6F                 	db	111	;'o'
  4590  00DF97  73                 	db	115	;'s'
  4591  00DF98  74                 	db	116	;'t'
  4592  00DF99  20                 	db	32
  4593  00DF9A  72                 	db	114	;'r'
  4594  00DF9B  65                 	db	101	;'e'
  4595  00DF9C  63                 	db	99	;'c'
  4596  00DF9D  65                 	db	101	;'e'
  4597  00DF9E  6E                 	db	110	;'n'
  4598  00DF9F  74                 	db	116	;'t'
  4599  00DFA0  20                 	db	32
  4600  00DFA1  64                 	db	100	;'d'
  4601  00DFA2  65                 	db	101	;'e'
  4602  00DFA3  76                 	db	118	;'v'
  4603  00DFA4  69                 	db	105	;'i'
  4604  00DFA5  63                 	db	99	;'c'
  4605  00DFA6  65                 	db	101	;'e'
  4606  00DFA7  20                 	db	32
  4607  00DFA8  72                 	db	114	;'r'
  4608  00DFA9  65                 	db	101	;'e'
  4609  00DFAA  73                 	db	115	;'s'
  4610  00DFAB  65                 	db	101	;'e'
  4611  00DFAC  74                 	db	116	;'t'
  4612  00DFAD  0A                 	db	10
  4613  00DFAE  0D                 	db	13
  4614  00DFAF  20                 	db	32
  4615  00DFB0  20                 	db	32
  4616  00DFB1  20                 	db	32
  4617  00DFB2  2A                 	db	42
  4618  00DFB3  49                 	db	73	;'I'
  4619  00DFB4  44                 	db	68	;'D'
  4620  00DFB5  4E                 	db	78	;'N'
  4621  00DFB6  3F                 	db	63	;'?'
  4622  00DFB7  3A                 	db	58	;':'
  4623  00DFB8  20                 	db	32
  4624  00DFB9  52                 	db	82	;'R'
  4625  00DFBA  65                 	db	101	;'e'
  4626  00DFBB  74                 	db	116	;'t'
  4627  00DFBC  75                 	db	117	;'u'
  4628  00DFBD  72                 	db	114	;'r'
  4629  00DFBE  6E                 	db	110	;'n'
  4630  00DFBF  73                 	db	115	;'s'
  4631  00DFC0  20                 	db	32
  4632  00DFC1  64                 	db	100	;'d'
  4633  00DFC2  65                 	db	101	;'e'
  4634  00DFC3  76                 	db	118	;'v'
  4635  00DFC4  69                 	db	105	;'i'
  4636  00DFC5  63                 	db	99	;'c'
  4637  00DFC6  65                 	db	101	;'e'
  4638  00DFC7  20                 	db	32
  4639  00DFC8  69                 	db	105	;'i'
  4640  00DFC9  64                 	db	100	;'d'
  4641  00DFCA  65                 	db	101	;'e'
  4642  00DFCB  6E                 	db	110	;'n'
  4643  00DFCC  74                 	db	116	;'t'
  4644  00DFCD  69                 	db	105	;'i'
  4645  00DFCE  66                 	db	102	;'f'
  4646  00DFCF  69                 	db	105	;'i'
  4647  00DFD0  63                 	db	99	;'c'
  4648  00DFD1  61                 	db	97	;'a'
  4649  00DFD2  74                 	db	116	;'t'
  4650  00DFD3  69                 	db	105	;'i'
  4651  00DFD4  6F                 	db	111	;'o'
  4652  00DFD5  6E                 	db	110	;'n'
  4653  00DFD6  20                 	db	32
  4654  00DFD7  73                 	db	115	;'s'
  4655  00DFD8  74                 	db	116	;'t'
  4656  00DFD9  72                 	db	114	;'r'
  4657  00DFDA  69                 	db	105	;'i'
  4658  00DFDB  6E                 	db	110	;'n'
  4659  00DFDC  67                 	db	103	;'g'
  4660  00DFDD  0A                 	db	10
  4661  00DFDE  0D                 	db	13
  4662  00DFDF  20                 	db	32
  4663  00DFE0  20                 	db	32
  4664  00DFE1  20                 	db	32
  4665  00DFE2  44                 	db	68	;'D'
  4666  00DFE3  65                 	db	101	;'e'
  4667  00DFE4  76                 	db	118	;'v'
  4668  00DFE5  69                 	db	105	;'i'
  4669  00DFE6  63                 	db	99	;'c'
  4670  00DFE7  65                 	db	101	;'e'
  4671  00DFE8  20                 	db	32
  4672  00DFE9  4F                 	db	79	;'O'
  4673  00DFEA  6E                 	db	110	;'n'
  4674  00DFEB  20                 	db	32
  4675  00DFEC  54                 	db	84	;'T'
  4676  00DFED  69                 	db	105	;'i'
  4677  00DFEE  6D                 	db	109	;'m'
  4678  00DFEF  65                 	db	101	;'e'
  4679  00DFF0  3F                 	db	63	;'?'
  4680  00DFF1  3A                 	db	58	;':'
  4681  00DFF2  20                 	db	32
  4682  00DFF3  52                 	db	82	;'R'
  4683  00DFF4  65                 	db	101	;'e'
  4684  00DFF5  74                 	db	116	;'t'
  4685  00DFF6  75                 	db	117	;'u'
  4686  00DFF7  72                 	db	114	;'r'
  4687  00DFF8  6E                 	db	110	;'n'
  4688  00DFF9  73                 	db	115	;'s'
  4689  00DFFA  20                 	db	32
  4690  00DFFB  64                 	db	100	;'d'
  4691  00DFFC  65                 	db	101	;'e'
  4692  00DFFD  76                 	db	118	;'v'
  4693  00DFFE  69                 	db	105	;'i'
  4694  00DFFF  63                 	db	99	;'c'
  4695  00E000  65                 	db	101	;'e'
  4696  00E001  20                 	db	32
  4697  00E002  6F                 	db	111	;'o'
  4698  00E003  6E                 	db	110	;'n'
  4699  00E004  20                 	db	32
  4700  00E005  74                 	db	116	;'t'
  4701  00E006  69                 	db	105	;'i'
  4702  00E007  6D                 	db	109	;'m'
  4703  00E008  65                 	db	101	;'e'
  4704  00E009  20                 	db	32
  4705  00E00A  73                 	db	115	;'s'
  4706  00E00B  69                 	db	105	;'i'
  4707  00E00C  6E                 	db	110	;'n'
  4708  00E00D  63                 	db	99	;'c'
  4709  00E00E  65                 	db	101	;'e'
  4710  00E00F  20                 	db	32
  4711  00E010  6C                 	db	108	;'l'
  4712  00E011  61                 	db	97	;'a'
  4713  00E012  73                 	db	115	;'s'
  4714  00E013  74                 	db	116	;'t'
  4715  00E014  20                 	db	32
  4716  00E015  64                 	db	100	;'d'
  4717  00E016  65                 	db	101	;'e'
  4718  00E017  76                 	db	118	;'v'
  4719  00E018  69                 	db	105	;'i'
  4720  00E019  63                 	db	99	;'c'
  4721  00E01A  65                 	db	101	;'e'
  4722  00E01B  20                 	db	32
  4723  00E01C  72                 	db	114	;'r'
  4724  00E01D  65                 	db	101	;'e'
  4725  00E01E  73                 	db	115	;'s'
  4726  00E01F  65                 	db	101	;'e'
  4727  00E020  74                 	db	116	;'t'
  4728  00E021  0A                 	db	10
  4729  00E022  0D                 	db	13
  4730  00E023  20                 	db	32
  4731  00E024  20                 	db	32
  4732  00E025  20                 	db	32
  4733  00E026  44                 	db	68	;'D'
  4734  00E027  65                 	db	101	;'e'
  4735  00E028  76                 	db	118	;'v'
  4736  00E029  69                 	db	105	;'i'
  4737  00E02A  63                 	db	99	;'c'
  4738  00E02B  65                 	db	101	;'e'
  4739  00E02C  20                 	db	32
  4740  00E02D  49                 	db	73	;'I'
  4741  00E02E  44                 	db	68	;'D'
  4742  00E02F  3F                 	db	63	;'?'
  4743  00E030  3A                 	db	58	;':'
  4744  00E031  20                 	db	32
  4745  00E032  52                 	db	82	;'R'
  4746  00E033  65                 	db	101	;'e'
  4747  00E034  74                 	db	116	;'t'
  4748  00E035  75                 	db	117	;'u'
  4749  00E036  72                 	db	114	;'r'
  4750  00E037  6E                 	db	110	;'n'
  4751  00E038  73                 	db	115	;'s'
  4752  00E039  20                 	db	32
  4753  00E03A  64                 	db	100	;'d'
  4754  00E03B  65                 	db	101	;'e'
  4755  00E03C  76                 	db	118	;'v'
  4756  00E03D  69                 	db	105	;'i'
  4757  00E03E  63                 	db	99	;'c'
  4758  00E03F  65                 	db	101	;'e'
  4759  00E040  20                 	db	32
  4760  00E041  49                 	db	73	;'I'
  4761  00E042  44                 	db	68	;'D'
  4762  00E043  20                 	db	32
  4763  00E044  61                 	db	97	;'a'
  4764  00E045  73                 	db	115	;'s'
  4765  00E046  20                 	db	32
  4766  00E047  70                 	db	112	;'p'
  4767  00E048  72                 	db	114	;'r'
  4768  00E049  65                 	db	101	;'e'
  4769  00E04A  2D                 	db	45
  4770  00E04B  70                 	db	112	;'p'
  4771  00E04C  72                 	db	114	;'r'
  4772  00E04D  6F                 	db	111	;'o'
  4773  00E04E  67                 	db	103	;'g'
  4774  00E04F  72                 	db	114	;'r'
  4775  00E050  61                 	db	97	;'a'
  4776  00E051  6D                 	db	109	;'m'
  4777  00E052  6D                 	db	109	;'m'
  4778  00E053  65                 	db	101	;'e'
  4779  00E054  64                 	db	100	;'d'
  4780  00E055  20                 	db	32
  4781  00E056  69                 	db	105	;'i'
  4782  00E057  6E                 	db	110	;'n'
  4783  00E058  20                 	db	32
  4784  00E059  66                 	db	102	;'f'
  4785  00E05A  6C                 	db	108	;'l'
  4786  00E05B  61                 	db	97	;'a'
  4787  00E05C  73                 	db	115	;'s'
  4788  00E05D  68                 	db	104	;'h'
  4789  00E05E  20                 	db	32
  4790  00E05F  6D                 	db	109	;'m'
  4791  00E060  65                 	db	101	;'e'
  4792  00E061  6D                 	db	109	;'m'
  4793  00E062  6F                 	db	111	;'o'
  4794  00E063  72                 	db	114	;'r'
  4795  00E064  79                 	db	121	;'y'
  4796  00E065  0A                 	db	10
  4797  00E066  0D                 	db	13
  4798  00E067  20                 	db	32
  4799  00E068  20                 	db	32
  4800  00E069  20                 	db	32
  4801  00E06A  52                 	db	82	;'R'
  4802  00E06B  65                 	db	101	;'e'
  4803  00E06C  76                 	db	118	;'v'
  4804  00E06D  69                 	db	105	;'i'
  4805  00E06E  73                 	db	115	;'s'
  4806  00E06F  69                 	db	105	;'i'
  4807  00E070  6F                 	db	111	;'o'
  4808  00E071  6E                 	db	110	;'n'
  4809  00E072  20                 	db	32
  4810  00E073  49                 	db	73	;'I'
  4811  00E074  44                 	db	68	;'D'
  4812  00E075  3F                 	db	63	;'?'
  4813  00E076  3A                 	db	58	;':'
  4814  00E077  20                 	db	32
  4815  00E078  52                 	db	82	;'R'
  4816  00E079  65                 	db	101	;'e'
  4817  00E07A  74                 	db	116	;'t'
  4818  00E07B  75                 	db	117	;'u'
  4819  00E07C  72                 	db	114	;'r'
  4820  00E07D  6E                 	db	110	;'n'
  4821  00E07E  73                 	db	115	;'s'
  4822  00E07F  20                 	db	32
  4823  00E080  64                 	db	100	;'d'
  4824  00E081  65                 	db	101	;'e'
  4825  00E082  76                 	db	118	;'v'
  4826  00E083  69                 	db	105	;'i'
  4827  00E084  63                 	db	99	;'c'
  4828  00E085  65                 	db	101	;'e'
  4829  00E086  20                 	db	32
  4830  00E087  73                 	db	115	;'s'
  4831  00E088  69                 	db	105	;'i'
  4832  00E089  6C                 	db	108	;'l'
  4833  00E08A  69                 	db	105	;'i'
  4834  00E08B  63                 	db	99	;'c'
  4835  00E08C  6F                 	db	111	;'o'
  4836  00E08D  6E                 	db	110	;'n'
  4837  00E08E  20                 	db	32
  4838  00E08F  72                 	db	114	;'r'
  4839  00E090  65                 	db	101	;'e'
  4840  00E091  76                 	db	118	;'v'
  4841  00E092  69                 	db	105	;'i'
  4842  00E093  73                 	db	115	;'s'
  4843  00E094  69                 	db	105	;'i'
  4844  00E095  6F                 	db	111	;'o'
  4845  00E096  6E                 	db	110	;'n'
  4846  00E097  20                 	db	32
  4847  00E098  49                 	db	73	;'I'
  4848  00E099  44                 	db	68	;'D'
  4849  00E09A  20                 	db	32
  4850  00E09B  61                 	db	97	;'a'
  4851  00E09C  73                 	db	115	;'s'
  4852  00E09D  20                 	db	32
  4853  00E09E  70                 	db	112	;'p'
  4854  00E09F  72                 	db	114	;'r'
  4855  00E0A0  65                 	db	101	;'e'
  4856  00E0A1  2D                 	db	45
  4857  00E0A2  70                 	db	112	;'p'
  4858  00E0A3  72                 	db	114	;'r'
  4859  00E0A4  6F                 	db	111	;'o'
  4860  00E0A5  67                 	db	103	;'g'
  4861  00E0A6  72                 	db	114	;'r'
  4862  00E0A7  61                 	db	97	;'a'
  4863  00E0A8  6D                 	db	109	;'m'
  4864  00E0A9  6D                 	db	109	;'m'
  4865  00E0AA  65                 	db	101	;'e'
  4866  00E0AB  64                 	db	100	;'d'
  4867  00E0AC  20                 	db	32
  4868  00E0AD  69                 	db	105	;'i'
  4869  00E0AE  6E                 	db	110	;'n'
  4870  00E0AF  20                 	db	32
  4871  00E0B0  66                 	db	102	;'f'
  4872  00E0B1  6C                 	db	108	;'l'
  4873  00E0B2  61                 	db	97	;'a'
  4874  00E0B3  73                 	db	115	;'s'
  4875  00E0B4  68                 	db	104	;'h'
  4876  00E0B5  20                 	db	32
  4877  00E0B6  6D                 	db	109	;'m'
  4878  00E0B7  65                 	db	101	;'e'
  4879  00E0B8  6D                 	db	109	;'m'
  4880  00E0B9  6F                 	db	111	;'o'
  4881  00E0BA  72                 	db	114	;'r'
  4882  00E0BB  79                 	db	121	;'y'
  4883  00E0BC  0A                 	db	10
  4884  00E0BD  0D                 	db	13
  4885  00E0BE  20                 	db	32
  4886  00E0BF  20                 	db	32
  4887  00E0C0  20                 	db	32
  4888  00E0C1  55                 	db	85	;'U'
  4889  00E0C2  73                 	db	115	;'s'
  4890  00E0C3  65                 	db	101	;'e'
  4891  00E0C4  72                 	db	114	;'r'
  4892  00E0C5  20                 	db	32
  4893  00E0C6  49                 	db	73	;'I'
  4894  00E0C7  44                 	db	68	;'D'
  4895  00E0C8  73                 	db	115	;'s'
  4896  00E0C9  3F                 	db	63	;'?'
  4897  00E0CA  3A                 	db	58	;':'
  4898  00E0CB  20                 	db	32
  4899  00E0CC  52                 	db	82	;'R'
  4900  00E0CD  65                 	db	101	;'e'
  4901  00E0CE  74                 	db	116	;'t'
  4902  00E0CF  75                 	db	117	;'u'
  4903  00E0D0  72                 	db	114	;'r'
  4904  00E0D1  6E                 	db	110	;'n'
  4905  00E0D2  73                 	db	115	;'s'
  4906  00E0D3  20                 	db	32
  4907  00E0D4  61                 	db	97	;'a'
  4908  00E0D5  20                 	db	32
  4909  00E0D6  6C                 	db	108	;'l'
  4910  00E0D7  69                 	db	105	;'i'
  4911  00E0D8  73                 	db	115	;'s'
  4912  00E0D9  74                 	db	116	;'t'
  4913  00E0DA  20                 	db	32
  4914  00E0DB  6F                 	db	111	;'o'
  4915  00E0DC  66                 	db	102	;'f'
  4916  00E0DD  20                 	db	32
  4917  00E0DE  75                 	db	117	;'u'
  4918  00E0DF  73                 	db	115	;'s'
  4919  00E0E0  65                 	db	101	;'e'
  4920  00E0E1  72                 	db	114	;'r'
  4921  00E0E2  20                 	db	32
  4922  00E0E3  49                 	db	73	;'I'
  4923  00E0E4  44                 	db	68	;'D'
  4924  00E0E5  73                 	db	115	;'s'
  4925  00E0E6  20                 	db	32
  4926  00E0E7  28                 	db	40
  4927  00E0E8  64                 	db	100	;'d'
  4928  00E0E9  69                 	db	105	;'i'
  4929  00E0EA  73                 	db	115	;'s'
  4930  00E0EB  70                 	db	112	;'p'
  4931  00E0EC  6C                 	db	108	;'l'
  4932  00E0ED  61                 	db	97	;'a'
  4933  00E0EE  79                 	db	121	;'y'
  4934  00E0EF  65                 	db	101	;'e'
  4935  00E0F0  64                 	db	100	;'d'
  4936  00E0F1  20                 	db	32
  4937  00E0F2  69                 	db	105	;'i'
  4938  00E0F3  6E                 	db	110	;'n'
  4939  00E0F4  20                 	db	32
  4940  00E0F5  68                 	db	104	;'h'
  4941  00E0F6  65                 	db	101	;'e'
  4942  00E0F7  78                 	db	120	;'x'
  4943  00E0F8  29                 	db	41
  4944  00E0F9  20                 	db	32
  4945  00E0FA  61                 	db	97	;'a'
  4946  00E0FB  73                 	db	115	;'s'
  4947  00E0FC  20                 	db	32
  4948  00E0FD  73                 	db	115	;'s'
  4949  00E0FE  74                 	db	116	;'t'
  4950  00E0FF  6F                 	db	111	;'o'
  4951  00E100  72                 	db	114	;'r'
  4952  00E101  65                 	db	101	;'e'
  4953  00E102  64                 	db	100	;'d'
  4954  00E103  20                 	db	32
  4955  00E104  69                 	db	105	;'i'
  4956  00E105  6E                 	db	110	;'n'
  4957  00E106  20                 	db	32
  4958  00E107  66                 	db	102	;'f'
  4959  00E108  6C                 	db	108	;'l'
  4960  00E109  61                 	db	97	;'a'
  4961  00E10A  73                 	db	115	;'s'
  4962  00E10B  68                 	db	104	;'h'
  4963  00E10C  20                 	db	32
  4964  00E10D  6D                 	db	109	;'m'
  4965  00E10E  65                 	db	101	;'e'
  4966  00E10F  6D                 	db	109	;'m'
  4967  00E110  6F                 	db	111	;'o'
  4968  00E111  72                 	db	114	;'r'
  4969  00E112  79                 	db	121	;'y'
  4970  00E113  0A                 	db	10
  4971  00E114  0D                 	db	13
  4972  00E115  20                 	db	32
  4973  00E116  20                 	db	32
  4974  00E117  20                 	db	32
  4975  00E118  41                 	db	65	;'A'
  4976  00E119  44                 	db	68	;'D'
  4977  00E11A  43                 	db	67	;'C'
  4978  00E11B  20                 	db	32
  4979  00E11C  45                 	db	69	;'E'
  4980  00E11D  72                 	db	114	;'r'
  4981  00E11E  72                 	db	114	;'r'
  4982  00E11F  6F                 	db	111	;'o'
  4983  00E120  72                 	db	114	;'r'
  4984  00E121  73                 	db	115	;'s'
  4985  00E122  3F                 	db	63	;'?'
  4986  00E123  3A                 	db	58	;':'
  4987  00E124  20                 	db	32
  4988  00E125  52                 	db	82	;'R'
  4989  00E126  65                 	db	101	;'e'
  4990  00E127  74                 	db	116	;'t'
  4991  00E128  75                 	db	117	;'u'
  4992  00E129  72                 	db	114	;'r'
  4993  00E12A  6E                 	db	110	;'n'
  4994  00E12B  73                 	db	115	;'s'
  4995  00E12C  20                 	db	32
  4996  00E12D  74                 	db	116	;'t'
  4997  00E12E  68                 	db	104	;'h'
  4998  00E12F  65                 	db	101	;'e'
  4999  00E130  20                 	db	32
  5000  00E131  63                 	db	99	;'c'
  5001  00E132  61                 	db	97	;'a'
  5002  00E133  75                 	db	117	;'u'
  5003  00E134  73                 	db	115	;'s'
  5004  00E135  65                 	db	101	;'e'
  5005  00E136  20                 	db	32
  5006  00E137  6F                 	db	111	;'o'
  5007  00E138  66                 	db	102	;'f'
  5008  00E139  20                 	db	32
  5009  00E13A  61                 	db	97	;'a'
  5010  00E13B  6E                 	db	110	;'n'
  5011  00E13C  20                 	db	32
  5012  00E13D  41                 	db	65	;'A'
  5013  00E13E  44                 	db	68	;'D'
  5014  00E13F  43                 	db	67	;'C'
  5015  00E140  20                 	db	32
  5016  00E141  65                 	db	101	;'e'
  5017  00E142  72                 	db	114	;'r'
  5018  00E143  72                 	db	114	;'r'
  5019  00E144  6F                 	db	111	;'o'
  5020  00E145  72                 	db	114	;'r'
  5021  00E146  20                 	db	32
  5022  00E147  69                 	db	105	;'i'
  5023  00E148  66                 	db	102	;'f'
  5024  00E149  20                 	db	32
  5025  00E14A  61                 	db	97	;'a'
  5026  00E14B  6E                 	db	110	;'n'
  5027  00E14C  20                 	db	32
  5028  00E14D  65                 	db	101	;'e'
  5029  00E14E  72                 	db	114	;'r'
  5030  00E14F  72                 	db	114	;'r'
  5031  00E150  6F                 	db	111	;'o'
  5032  00E151  72                 	db	114	;'r'
  5033  00E152  20                 	db	32
  5034  00E153  6F                 	db	111	;'o'
  5035  00E154  63                 	db	99	;'c'
  5036  00E155  63                 	db	99	;'c'
  5037  00E156  75                 	db	117	;'u'
  5038  00E157  72                 	db	114	;'r'
  5039  00E158  72                 	db	114	;'r'
  5040  00E159  65                 	db	101	;'e'
  5041  00E15A  64                 	db	100	;'d'
  5042  00E15B  0A                 	db	10
  5043  00E15C  0D                 	db	13
  5044  00E15D  20                 	db	32
  5045  00E15E  20                 	db	32
  5046  00E15F  20                 	db	32
  5047  00E160  43                 	db	67	;'C'
  5048  00E161  6C                 	db	108	;'l'
  5049  00E162  65                 	db	101	;'e'
  5050  00E163  61                 	db	97	;'a'
  5051  00E164  72                 	db	114	;'r'
  5052  00E165  20                 	db	32
  5053  00E166  41                 	db	65	;'A'
  5054  00E167  44                 	db	68	;'D'
  5055  00E168  43                 	db	67	;'C'
  5056  00E169  20                 	db	32
  5057  00E16A  45                 	db	69	;'E'
  5058  00E16B  72                 	db	114	;'r'
  5059  00E16C  72                 	db	114	;'r'
  5060  00E16D  6F                 	db	111	;'o'
  5061  00E16E  72                 	db	114	;'r'
  5062  00E16F  73                 	db	115	;'s'
  5063  00E170  3A                 	db	58	;':'
  5064  00E171  20                 	db	32
  5065  00E172  43                 	db	67	;'C'
  5066  00E173  6C                 	db	108	;'l'
  5067  00E174  65                 	db	101	;'e'
  5068  00E175  61                 	db	97	;'a'
  5069  00E176  72                 	db	114	;'r'
  5070  00E177  73                 	db	115	;'s'
  5071  00E178  20                 	db	32
  5072  00E179  74                 	db	116	;'t'
  5073  00E17A  68                 	db	104	;'h'
  5074  00E17B  65                 	db	101	;'e'
  5075  00E17C  20                 	db	32
  5076  00E17D  41                 	db	65	;'A'
  5077  00E17E  44                 	db	68	;'D'
  5078  00E17F  43                 	db	67	;'C'
  5079  00E180  20                 	db	32
  5080  00E181  65                 	db	101	;'e'
  5081  00E182  72                 	db	114	;'r'
  5082  00E183  72                 	db	114	;'r'
  5083  00E184  6F                 	db	111	;'o'
  5084  00E185  72                 	db	114	;'r'
  5085  00E186  20                 	db	32
  5086  00E187  61                 	db	97	;'a'
  5087  00E188  6E                 	db	110	;'n'
  5088  00E189  64                 	db	100	;'d'
  5089  00E18A  20                 	db	32
  5090  00E18B  72                 	db	114	;'r'
  5091  00E18C  65                 	db	101	;'e'
  5092  00E18D  73                 	db	115	;'s'
  5093  00E18E  75                 	db	117	;'u'
  5094  00E18F  6D                 	db	109	;'m'
  5095  00E190  65                 	db	101	;'e'
  5096  00E191  73                 	db	115	;'s'
  5097  00E192  20                 	db	32
  5098  00E193  41                 	db	65	;'A'
  5099  00E194  44                 	db	68	;'D'
  5100  00E195  43                 	db	67	;'C'
  5101  00E196  20                 	db	32
  5102  00E197  63                 	db	99	;'c'
  5103  00E198  6F                 	db	111	;'o'
  5104  00E199  6E                 	db	110	;'n'
  5105  00E19A  76                 	db	118	;'v'
  5106  00E19B  65                 	db	101	;'e'
  5107  00E19C  72                 	db	114	;'r'
  5108  00E19D  73                 	db	115	;'s'
  5109  00E19E  69                 	db	105	;'i'
  5110  00E19F  6F                 	db	111	;'o'
  5111  00E1A0  6E                 	db	110	;'n'
  5112  00E1A1  73                 	db	115	;'s'
  5113  00E1A2  0A                 	db	10
  5114  00E1A3  0D                 	db	13
  5115  00E1A4  20                 	db	32
  5116  00E1A5  20                 	db	32
  5117  00E1A6  20                 	db	32
  5118  00E1A7  43                 	db	67	;'C'
  5119  00E1A8  6F                 	db	111	;'o'
  5120  00E1A9  6D                 	db	109	;'m'
  5121  00E1AA  6D                 	db	109	;'m'
  5122  00E1AB  20                 	db	32
  5123  00E1AC  45                 	db	69	;'E'
  5124  00E1AD  72                 	db	114	;'r'
  5125  00E1AE  72                 	db	114	;'r'
  5126  00E1AF  6F                 	db	111	;'o'
  5127  00E1B0  72                 	db	114	;'r'
  5128  00E1B1  73                 	db	115	;'s'
  5129  00E1B2  3F                 	db	63	;'?'
  5130  00E1B3  3A                 	db	58	;':'
  5131  00E1B4  20                 	db	32
  5132  00E1B5  52                 	db	82	;'R'
  5133  00E1B6  65                 	db	101	;'e'
  5134  00E1B7  74                 	db	116	;'t'
  5135  00E1B8  75                 	db	117	;'u'
  5136  00E1B9  72                 	db	114	;'r'
  5137  00E1BA  6E                 	db	110	;'n'
  5138  00E1BB  73                 	db	115	;'s'
  5139  00E1BC  20                 	db	32
  5140  00E1BD  69                 	db	105	;'i'
  5141  00E1BE  66                 	db	102	;'f'
  5142  00E1BF  20                 	db	32
  5143  00E1C0  61                 	db	97	;'a'
  5144  00E1C1  20                 	db	32
  5145  00E1C2  63                 	db	99	;'c'
  5146  00E1C3  6F                 	db	111	;'o'
  5147  00E1C4  6D                 	db	109	;'m'
  5148  00E1C5  6D                 	db	109	;'m'
  5149  00E1C6  75                 	db	117	;'u'
  5150  00E1C7  6E                 	db	110	;'n'
  5151  00E1C8  69                 	db	105	;'i'
  5152  00E1C9  63                 	db	99	;'c'
  5153  00E1CA  61                 	db	97	;'a'
  5154  00E1CB  74                 	db	116	;'t'
  5155  00E1CC  69                 	db	105	;'i'
  5156  00E1CD  6F                 	db	111	;'o'
  5157  00E1CE  6E                 	db	110	;'n'
  5158  00E1CF  73                 	db	115	;'s'
  5159  00E1D0  20                 	db	32
  5160  00E1D1  65                 	db	101	;'e'
  5161  00E1D2  72                 	db	114	;'r'
  5162  00E1D3  72                 	db	114	;'r'
  5163  00E1D4  6F                 	db	111	;'o'
  5164  00E1D5  72                 	db	114	;'r'
  5165  00E1D6  20                 	db	32
  5166  00E1D7  68                 	db	104	;'h'
  5167  00E1D8  61                 	db	97	;'a'
  5168  00E1D9  73                 	db	115	;'s'
  5169  00E1DA  20                 	db	32
  5170  00E1DB  6F                 	db	111	;'o'
  5171  00E1DC  63                 	db	99	;'c'
  5172  00E1DD  63                 	db	99	;'c'
  5173  00E1DE  75                 	db	117	;'u'
  5174  00E1DF  72                 	db	114	;'r'
  5175  00E1E0  72                 	db	114	;'r'
  5176  00E1E1  65                 	db	101	;'e'
  5177  00E1E2  64                 	db	100	;'d'
  5178  00E1E3  0A                 	db	10
  5179  00E1E4  0D                 	db	13
  5180  00E1E5  20                 	db	32
  5181  00E1E6  20                 	db	32
  5182  00E1E7  20                 	db	32
  5183  00E1E8  43                 	db	67	;'C'
  5184  00E1E9  6C                 	db	108	;'l'
  5185  00E1EA  65                 	db	101	;'e'
  5186  00E1EB  61                 	db	97	;'a'
  5187  00E1EC  72                 	db	114	;'r'
  5188  00E1ED  20                 	db	32
  5189  00E1EE  43                 	db	67	;'C'
  5190  00E1EF  6F                 	db	111	;'o'
  5191  00E1F0  6D                 	db	109	;'m'
  5192  00E1F1  6D                 	db	109	;'m'
  5193  00E1F2  20                 	db	32
  5194  00E1F3  45                 	db	69	;'E'
  5195  00E1F4  72                 	db	114	;'r'
  5196  00E1F5  72                 	db	114	;'r'
  5197  00E1F6  6F                 	db	111	;'o'
  5198  00E1F7  72                 	db	114	;'r'
  5199  00E1F8  73                 	db	115	;'s'
  5200  00E1F9  3A                 	db	58	;':'
  5201  00E1FA  20                 	db	32
  5202  00E1FB  43                 	db	67	;'C'
  5203  00E1FC  6C                 	db	108	;'l'
  5204  00E1FD  65                 	db	101	;'e'
  5205  00E1FE  61                 	db	97	;'a'
  5206  00E1FF  72                 	db	114	;'r'
  5207  00E200  73                 	db	115	;'s'
  5208  00E201  20                 	db	32
  5209  00E202  74                 	db	116	;'t'
  5210  00E203  68                 	db	104	;'h'
  5211  00E204  65                 	db	101	;'e'
  5212  00E205  20                 	db	32
  5213  00E206  63                 	db	99	;'c'
  5214  00E207  6F                 	db	111	;'o'
  5215  00E208  6D                 	db	109	;'m'
  5216  00E209  6D                 	db	109	;'m'
  5217  00E20A  75                 	db	117	;'u'
  5218  00E20B  6E                 	db	110	;'n'
  5219  00E20C  69                 	db	105	;'i'
  5220  00E20D  63                 	db	99	;'c'
  5221  00E20E  61                 	db	97	;'a'
  5222  00E20F  74                 	db	116	;'t'
  5223  00E210  69                 	db	105	;'i'
  5224  00E211  6F                 	db	111	;'o'
  5225  00E212  6E                 	db	110	;'n'
  5226  00E213  73                 	db	115	;'s'
  5227  00E214  20                 	db	32
  5228  00E215  65                 	db	101	;'e'
  5229  00E216  72                 	db	114	;'r'
  5230  00E217  72                 	db	114	;'r'
  5231  00E218  6F                 	db	111	;'o'
  5232  00E219  72                 	db	114	;'r'
  5233  00E21A  0A                 	db	10
  5234  00E21B  0D                 	db	13
  5235  00E21C  20                 	db	32
  5236  00E21D  20                 	db	32
  5237  00E21E  20                 	db	32
  5238  00E21F  43                 	db	67	;'C'
  5239  00E220  6C                 	db	108	;'l'
  5240  00E221  65                 	db	101	;'e'
  5241  00E222  61                 	db	97	;'a'
  5242  00E223  72                 	db	114	;'r'
  5243  00E224  20                 	db	32
  5244  00E225  4D                 	db	77	;'M'
  5245  00E226  61                 	db	97	;'a'
  5246  00E227  78                 	db	120	;'x'
  5247  00E228  20                 	db	32
  5248  00E229  56                 	db	86	;'V'
  5249  00E22A  61                 	db	97	;'a'
  5250  00E22B  6C                 	db	108	;'l'
  5251  00E22C  75                 	db	117	;'u'
  5252  00E22D  65                 	db	101	;'e'
  5253  00E22E  73                 	db	115	;'s'
  5254  00E22F  3A                 	db	58	;':'
  5255  00E230  20                 	db	32
  5256  00E231  45                 	db	69	;'E'
  5257  00E232  72                 	db	114	;'r'
  5258  00E233  61                 	db	97	;'a'
  5259  00E234  73                 	db	115	;'s'
  5260  00E235  65                 	db	101	;'e'
  5261  00E236  73                 	db	115	;'s'
  5262  00E237  20                 	db	32
  5263  00E238  6D                 	db	109	;'m'
  5264  00E239  61                 	db	97	;'a'
  5265  00E23A  78                 	db	120	;'x'
  5266  00E23B  69                 	db	105	;'i'
  5267  00E23C  6D                 	db	109	;'m'
  5268  00E23D  75                 	db	117	;'u'
  5269  00E23E  6D                 	db	109	;'m'
  5270  00E23F  20                 	db	32
  5271  00E240  72                 	db	114	;'r'
  5272  00E241  65                 	db	101	;'e'
  5273  00E242  63                 	db	99	;'c'
  5274  00E243  6F                 	db	111	;'o'
  5275  00E244  72                 	db	114	;'r'
  5276  00E245  64                 	db	100	;'d'
  5277  00E246  65                 	db	101	;'e'
  5278  00E247  64                 	db	100	;'d'
  5279  00E248  20                 	db	32
  5280  00E249  76                 	db	118	;'v'
  5281  00E24A  61                 	db	97	;'a'
  5282  00E24B  6C                 	db	108	;'l'
  5283  00E24C  75                 	db	117	;'u'
  5284  00E24D  65                 	db	101	;'e'
  5285  00E24E  73                 	db	115	;'s'
  5286  00E24F  20                 	db	32
  5287  00E250  66                 	db	102	;'f'
  5288  00E251  72                 	db	114	;'r'
  5289  00E252  6F                 	db	111	;'o'
  5290  00E253  6D                 	db	109	;'m'
  5291  00E254  20                 	db	32
  5292  00E255  45                 	db	69	;'E'
  5293  00E256  45                 	db	69	;'E'
  5294  00E257  50                 	db	80	;'P'
  5295  00E258  52                 	db	82	;'R'
  5296  00E259  4F                 	db	79	;'O'
  5297  00E25A  4D                 	db	77	;'M'
  5298  00E25B  0A                 	db	10
  5299  00E25C  0D                 	db	13
  5300  00E25D  20                 	db	32
  5301  00E25E  20                 	db	32
  5302  00E25F  20                 	db	32
  5303  00E260  48                 	db	72	;'H'
  5304  00E261  65                 	db	101	;'e'
  5305  00E262  6C                 	db	108	;'l'
  5306  00E263  70                 	db	112	;'p'
  5307  00E264  3A                 	db	58	;':'
  5308  00E265  20                 	db	32
  5309  00E266  54                 	db	84	;'T'
  5310  00E267  68                 	db	104	;'h'
  5311  00E268  69                 	db	105	;'i'
  5312  00E269  73                 	db	115	;'s'
  5313  00E26A  20                 	db	32
  5314  00E26B  6D                 	db	109	;'m'
  5315  00E26C  65                 	db	101	;'e'
  5316  00E26D  73                 	db	115	;'s'
  5317  00E26E  73                 	db	115	;'s'
  5318  00E26F  61                 	db	97	;'a'
  5319  00E270  67                 	db	103	;'g'
  5320  00E271  65                 	db	101	;'e'
  5321  00E272  2C                 	db	44
  5322  00E273  20                 	db	32
  5323  00E274  6C                 	db	108	;'l'
  5324  00E275  69                 	db	105	;'i'
  5325  00E276  73                 	db	115	;'s'
  5326  00E277  74                 	db	116	;'t'
  5327  00E278  73                 	db	115	;'s'
  5328  00E279  20                 	db	32
  5329  00E27A  73                 	db	115	;'s'
  5330  00E27B  75                 	db	117	;'u'
  5331  00E27C  70                 	db	112	;'p'
  5332  00E27D  70                 	db	112	;'p'
  5333  00E27E  6F                 	db	111	;'o'
  5334  00E27F  72                 	db	114	;'r'
  5335  00E280  74                 	db	116	;'t'
  5336  00E281  65                 	db	101	;'e'
  5337  00E282  64                 	db	100	;'d'
  5338  00E283  20                 	db	32
  5339  00E284  63                 	db	99	;'c'
  5340  00E285  6F                 	db	111	;'o'
  5341  00E286  6D                 	db	109	;'m'
  5342  00E287  6D                 	db	109	;'m'
  5343  00E288  61                 	db	97	;'a'
  5344  00E289  6E                 	db	110	;'n'
  5345  00E28A  64                 	db	100	;'d'
  5346  00E28B  73                 	db	115	;'s'
  5347  00E28C  0A                 	db	10
  5348  00E28D  0D                 	db	13
  5349  00E28E  0A                 	db	10
  5350  00E28F  0D                 	db	13
  5351  00E290  00                 	db	0
  5352  00E291                     STR_158:
  5353  00E291  4C                 	db	76	;'L'
  5354  00E292  69                 	db	105	;'i'
  5355  00E293  73                 	db	115	;'s'
  5356  00E294  74                 	db	116	;'t'
  5357  00E295  20                 	db	32
  5358  00E296  6F                 	db	111	;'o'
  5359  00E297  66                 	db	102	;'f'
  5360  00E298  20                 	db	32
  5361  00E299  73                 	db	115	;'s'
  5362  00E29A  75                 	db	117	;'u'
  5363  00E29B  70                 	db	112	;'p'
  5364  00E29C  70                 	db	112	;'p'
  5365  00E29D  6F                 	db	111	;'o'
  5366  00E29E  72                 	db	114	;'r'
  5367  00E29F  74                 	db	116	;'t'
  5368  00E2A0  65                 	db	101	;'e'
  5369  00E2A1  64                 	db	100	;'d'
  5370  00E2A2  20                 	db	32
  5371  00E2A3  50                 	db	80	;'P'
  5372  00E2A4  72                 	db	114	;'r'
  5373  00E2A5  69                 	db	105	;'i'
  5374  00E2A6  6D                 	db	109	;'m'
  5375  00E2A7  61                 	db	97	;'a'
  5376  00E2A8  72                 	db	114	;'r'
  5377  00E2A9  79                 	db	121	;'y'
  5378  00E2AA  20                 	db	32
  5379  00E2AB  4D                 	db	77	;'M'
  5380  00E2AC  65                 	db	101	;'e'
  5381  00E2AD  61                 	db	97	;'a'
  5382  00E2AE  73                 	db	115	;'s'
  5383  00E2AF  75                 	db	117	;'u'
  5384  00E2B0  72                 	db	114	;'r'
  5385  00E2B1  65                 	db	101	;'e'
  5386  00E2B2  6D                 	db	109	;'m'
  5387  00E2B3  65                 	db	101	;'e'
  5388  00E2B4  6E                 	db	110	;'n'
  5389  00E2B5  74                 	db	116	;'t'
  5390  00E2B6  20                 	db	32
  5391  00E2B7  43                 	db	67	;'C'
  5392  00E2B8  6F                 	db	111	;'o'
  5393  00E2B9  6D                 	db	109	;'m'
  5394  00E2BA  6D                 	db	109	;'m'
  5395  00E2BB  61                 	db	97	;'a'
  5396  00E2BC  6E                 	db	110	;'n'
  5397  00E2BD  64                 	db	100	;'d'
  5398  00E2BE  73                 	db	115	;'s'
  5399  00E2BF  3A                 	db	58	;':'
  5400  00E2C0  0A                 	db	10
  5401  00E2C1  0D                 	db	13
  5402  00E2C2  20                 	db	32
  5403  00E2C3  20                 	db	32
  5404  00E2C4  20                 	db	32
  5405  00E2C5  4D                 	db	77	;'M'
  5406  00E2C6  65                 	db	101	;'e'
  5407  00E2C7  61                 	db	97	;'a'
  5408  00E2C8  73                 	db	115	;'s'
  5409  00E2C9  75                 	db	117	;'u'
  5410  00E2CA  72                 	db	114	;'r'
  5411  00E2CB  65                 	db	101	;'e'
  5412  00E2CC  20                 	db	32
  5413  00E2CD  44                 	db	68	;'D'
  5414  00E2CE  65                 	db	101	;'e'
  5415  00E2CF  74                 	db	116	;'t'
  5416  00E2D0  65                 	db	101	;'e'
  5417  00E2D1  63                 	db	99	;'c'
  5418  00E2D2  74                 	db	116	;'t'
  5419  00E2D3  65                 	db	101	;'e'
  5420  00E2D4  64                 	db	100	;'d'
  5421  00E2D5  20                 	db	32
  5422  00E2D6  43                 	db	67	;'C'
  5423  00E2D7  75                 	db	117	;'u'
  5424  00E2D8  72                 	db	114	;'r'
  5425  00E2D9  72                 	db	114	;'r'
  5426  00E2DA  65                 	db	101	;'e'
  5427  00E2DB  6E                 	db	110	;'n'
  5428  00E2DC  74                 	db	116	;'t'
  5429  00E2DD  3F                 	db	63	;'?'
  5430  00E2DE  3A                 	db	58	;':'
  5431  00E2DF  20                 	db	32
  5432  00E2E0  52                 	db	82	;'R'
  5433  00E2E1  65                 	db	101	;'e'
  5434  00E2E2  74                 	db	116	;'t'
  5435  00E2E3  75                 	db	117	;'u'
  5436  00E2E4  72                 	db	114	;'r'
  5437  00E2E5  6E                 	db	110	;'n'
  5438  00E2E6  73                 	db	115	;'s'
  5439  00E2E7  20                 	db	32
  5440  00E2E8  6D                 	db	109	;'m'
  5441  00E2E9  65                 	db	101	;'e'
  5442  00E2EA  61                 	db	97	;'a'
  5443  00E2EB  73                 	db	115	;'s'
  5444  00E2EC  75                 	db	117	;'u'
  5445  00E2ED  72                 	db	114	;'r'
  5446  00E2EE  65                 	db	101	;'e'
  5447  00E2EF  64                 	db	100	;'d'
  5448  00E2F0  20                 	db	32
  5449  00E2F1  6F                 	db	111	;'o'
  5450  00E2F2  75                 	db	117	;'u'
  5451  00E2F3  74                 	db	116	;'t'
  5452  00E2F4  70                 	db	112	;'p'
  5453  00E2F5  75                 	db	117	;'u'
  5454  00E2F6  74                 	db	116	;'t'
  5455  00E2F7  20                 	db	32
  5456  00E2F8  63                 	db	99	;'c'
  5457  00E2F9  75                 	db	117	;'u'
  5458  00E2FA  72                 	db	114	;'r'
  5459  00E2FB  72                 	db	114	;'r'
  5460  00E2FC  65                 	db	101	;'e'
  5461  00E2FD  6E                 	db	110	;'n'
  5462  00E2FE  74                 	db	116	;'t'
  5463  00E2FF  20                 	db	32
  5464  00E300  69                 	db	105	;'i'
  5465  00E301  6E                 	db	110	;'n'
  5466  00E302  20                 	db	32
  5467  00E303  61                 	db	97	;'a'
  5468  00E304  6D                 	db	109	;'m'
  5469  00E305  70                 	db	112	;'p'
  5470  00E306  73                 	db	115	;'s'
  5471  00E307  20                 	db	32
  5472  00E308  61                 	db	97	;'a'
  5473  00E309  73                 	db	115	;'s'
  5474  00E30A  20                 	db	32
  5475  00E30B  73                 	db	115	;'s'
  5476  00E30C  65                 	db	101	;'e'
  5477  00E30D  65                 	db	101	;'e'
  5478  00E30E  6E                 	db	110	;'n'
  5479  00E30F  20                 	db	32
  5480  00E310  62                 	db	98	;'b'
  5481  00E311  79                 	db	121	;'y'
  5482  00E312  20                 	db	32
  5483  00E313  41                 	db	65	;'A'
  5484  00E314  44                 	db	68	;'D'
  5485  00E315  43                 	db	67	;'C'
  5486  00E316  0A                 	db	10
  5487  00E317  0D                 	db	13
  5488  00E318  20                 	db	32
  5489  00E319  20                 	db	32
  5490  00E31A  20                 	db	32
  5491  00E31B  4D                 	db	77	;'M'
  5492  00E31C  65                 	db	101	;'e'
  5493  00E31D  61                 	db	97	;'a'
  5494  00E31E  73                 	db	115	;'s'
  5495  00E31F  75                 	db	117	;'u'
  5496  00E320  72                 	db	114	;'r'
  5497  00E321  65                 	db	101	;'e'
  5498  00E322  20                 	db	32
  5499  00E323  52                 	db	82	;'R'
  5500  00E324  4D                 	db	77	;'M'
  5501  00E325  53                 	db	83	;'S'
  5502  00E326  20                 	db	32
  5503  00E327  43                 	db	67	;'C'
  5504  00E328  75                 	db	117	;'u'
  5505  00E329  72                 	db	114	;'r'
  5506  00E32A  72                 	db	114	;'r'
  5507  00E32B  65                 	db	101	;'e'
  5508  00E32C  6E                 	db	110	;'n'
  5509  00E32D  74                 	db	116	;'t'
  5510  00E32E  3F                 	db	63	;'?'
  5511  00E32F  3A                 	db	58	;':'
  5512  00E330  20                 	db	32
  5513  00E331  52                 	db	82	;'R'
  5514  00E332  65                 	db	101	;'e'
  5515  00E333  74                 	db	116	;'t'
  5516  00E334  75                 	db	117	;'u'
  5517  00E335  72                 	db	114	;'r'
  5518  00E336  6E                 	db	110	;'n'
  5519  00E337  73                 	db	115	;'s'
  5520  00E338  20                 	db	32
  5521  00E339  74                 	db	116	;'t'
  5522  00E33A  68                 	db	104	;'h'
  5523  00E33B  65                 	db	101	;'e'
  5524  00E33C  20                 	db	32
  5525  00E33D  63                 	db	99	;'c'
  5526  00E33E  61                 	db	97	;'a'
  5527  00E33F  6C                 	db	108	;'l'
  5528  00E340  63                 	db	99	;'c'
  5529  00E341  75                 	db	117	;'u'
  5530  00E342  6C                 	db	108	;'l'
  5531  00E343  61                 	db	97	;'a'
  5532  00E344  74                 	db	116	;'t'
  5533  00E345  65                 	db	101	;'e'
  5534  00E346  64                 	db	100	;'d'
  5535  00E347  20                 	db	32
  5536  00E348  52                 	db	82	;'R'
  5537  00E349  4D                 	db	77	;'M'
  5538  00E34A  53                 	db	83	;'S'
  5539  00E34B  20                 	db	32
  5540  00E34C  6F                 	db	111	;'o'
  5541  00E34D  75                 	db	117	;'u'
  5542  00E34E  74                 	db	116	;'t'
  5543  00E34F  70                 	db	112	;'p'
  5544  00E350  75                 	db	117	;'u'
  5545  00E351  74                 	db	116	;'t'
  5546  00E352  20                 	db	32
  5547  00E353  63                 	db	99	;'c'
  5548  00E354  75                 	db	117	;'u'
  5549  00E355  72                 	db	114	;'r'
  5550  00E356  72                 	db	114	;'r'
  5551  00E357  65                 	db	101	;'e'
  5552  00E358  6E                 	db	110	;'n'
  5553  00E359  74                 	db	116	;'t'
  5554  00E35A  20                 	db	32
  5555  00E35B  66                 	db	102	;'f'
  5556  00E35C  72                 	db	114	;'r'
  5557  00E35D  6F                 	db	111	;'o'
  5558  00E35E  6D                 	db	109	;'m'
  5559  00E35F  20                 	db	32
  5560  00E360  6D                 	db	109	;'m'
  5561  00E361  65                 	db	101	;'e'
  5562  00E362  61                 	db	97	;'a'
  5563  00E363  73                 	db	115	;'s'
  5564  00E364  75                 	db	117	;'u'
  5565  00E365  72                 	db	114	;'r'
  5566  00E366  65                 	db	101	;'e'
  5567  00E367  6D                 	db	109	;'m'
  5568  00E368  65                 	db	101	;'e'
  5569  00E369  6E                 	db	110	;'n'
  5570  00E36A  74                 	db	116	;'t'
  5571  00E36B  73                 	db	115	;'s'
  5572  00E36C  20                 	db	32
  5573  00E36D  61                 	db	97	;'a'
  5574  00E36E  6E                 	db	110	;'n'
  5575  00E36F  64                 	db	100	;'d'
  5576  00E370  20                 	db	32
  5577  00E371  54                 	db	84	;'T'
  5578  00E372  52                 	db	82	;'R'
  5579  00E373  49                 	db	73	;'I'
  5580  00E374  41                 	db	65	;'A'
  5581  00E375  43                 	db	67	;'C'
  5582  00E376  20                 	db	32
  5583  00E377  66                 	db	102	;'f'
  5584  00E378  69                 	db	105	;'i'
  5585  00E379  72                 	db	114	;'r'
  5586  00E37A  69                 	db	105	;'i'
  5587  00E37B  6E                 	db	110	;'n'
  5588  00E37C  67                 	db	103	;'g'
  5589  00E37D  20                 	db	32
  5590  00E37E  61                 	db	97	;'a'
  5591  00E37F  6E                 	db	110	;'n'
  5592  00E380  67                 	db	103	;'g'
  5593  00E381  6C                 	db	108	;'l'
  5594  00E382  65                 	db	101	;'e'
  5595  00E383  0A                 	db	10
  5596  00E384  0D                 	db	13
  5597  00E385  20                 	db	32
  5598  00E386  20                 	db	32
  5599  00E387  20                 	db	32
  5600  00E388  4D                 	db	77	;'M'
  5601  00E389  65                 	db	101	;'e'
  5602  00E38A  61                 	db	97	;'a'
  5603  00E38B  73                 	db	115	;'s'
  5604  00E38C  75                 	db	117	;'u'
  5605  00E38D  72                 	db	114	;'r'
  5606  00E38E  65                 	db	101	;'e'
  5607  00E38F  20                 	db	32
  5608  00E390  52                 	db	82	;'R'
  5609  00E391  4D                 	db	77	;'M'
  5610  00E392  53                 	db	83	;'S'
  5611  00E393  20                 	db	32
  5612  00E394  56                 	db	86	;'V'
  5613  00E395  6F                 	db	111	;'o'
  5614  00E396  6C                 	db	108	;'l'
  5615  00E397  74                 	db	116	;'t'
  5616  00E398  61                 	db	97	;'a'
  5617  00E399  67                 	db	103	;'g'
  5618  00E39A  65                 	db	101	;'e'
  5619  00E39B  3F                 	db	63	;'?'
  5620  00E39C  3A                 	db	58	;':'
  5621  00E39D  20                 	db	32
  5622  00E39E  52                 	db	82	;'R'
  5623  00E39F  65                 	db	101	;'e'
  5624  00E3A0  74                 	db	116	;'t'
  5625  00E3A1  75                 	db	117	;'u'
  5626  00E3A2  72                 	db	114	;'r'
  5627  00E3A3  6E                 	db	110	;'n'
  5628  00E3A4  73                 	db	115	;'s'
  5629  00E3A5  20                 	db	32
  5630  00E3A6  74                 	db	116	;'t'
  5631  00E3A7  68                 	db	104	;'h'
  5632  00E3A8  65                 	db	101	;'e'
  5633  00E3A9  20                 	db	32
  5634  00E3AA  63                 	db	99	;'c'
  5635  00E3AB  61                 	db	97	;'a'
  5636  00E3AC  6C                 	db	108	;'l'
  5637  00E3AD  63                 	db	99	;'c'
  5638  00E3AE  75                 	db	117	;'u'
  5639  00E3AF  6C                 	db	108	;'l'
  5640  00E3B0  61                 	db	97	;'a'
  5641  00E3B1  74                 	db	116	;'t'
  5642  00E3B2  65                 	db	101	;'e'
  5643  00E3B3  64                 	db	100	;'d'
  5644  00E3B4  20                 	db	32
  5645  00E3B5  52                 	db	82	;'R'
  5646  00E3B6  4D                 	db	77	;'M'
  5647  00E3B7  53                 	db	83	;'S'
  5648  00E3B8  20                 	db	32
  5649  00E3B9  6F                 	db	111	;'o'
  5650  00E3BA  75                 	db	117	;'u'
  5651  00E3BB  74                 	db	116	;'t'
  5652  00E3BC  70                 	db	112	;'p'
  5653  00E3BD  75                 	db	117	;'u'
  5654  00E3BE  74                 	db	116	;'t'
  5655  00E3BF  20                 	db	32
  5656  00E3C0  76                 	db	118	;'v'
  5657  00E3C1  6F                 	db	111	;'o'
  5658  00E3C2  6C                 	db	108	;'l'
  5659  00E3C3  74                 	db	116	;'t'
  5660  00E3C4  61                 	db	97	;'a'
  5661  00E3C5  67                 	db	103	;'g'
  5662  00E3C6  65                 	db	101	;'e'
  5663  00E3C7  20                 	db	32
  5664  00E3C8  66                 	db	102	;'f'
  5665  00E3C9  72                 	db	114	;'r'
  5666  00E3CA  6F                 	db	111	;'o'
  5667  00E3CB  6D                 	db	109	;'m'
  5668  00E3CC  20                 	db	32
  5669  00E3CD  54                 	db	84	;'T'
  5670  00E3CE  52                 	db	82	;'R'
  5671  00E3CF  49                 	db	73	;'I'
  5672  00E3D0  41                 	db	65	;'A'
  5673  00E3D1  43                 	db	67	;'C'
  5674  00E3D2  20                 	db	32
  5675  00E3D3  66                 	db	102	;'f'
  5676  00E3D4  69                 	db	105	;'i'
  5677  00E3D5  72                 	db	114	;'r'
  5678  00E3D6  69                 	db	105	;'i'
  5679  00E3D7  6E                 	db	110	;'n'
  5680  00E3D8  67                 	db	103	;'g'
  5681  00E3D9  20                 	db	32
  5682  00E3DA  61                 	db	97	;'a'
  5683  00E3DB  6E                 	db	110	;'n'
  5684  00E3DC  67                 	db	103	;'g'
  5685  00E3DD  6C                 	db	108	;'l'
  5686  00E3DE  65                 	db	101	;'e'
  5687  00E3DF  0A                 	db	10
  5688  00E3E0  0D                 	db	13
  5689  00E3E1  20                 	db	32
  5690  00E3E2  20                 	db	32
  5691  00E3E3  20                 	db	32
  5692  00E3E4  4D                 	db	77	;'M'
  5693  00E3E5  65                 	db	101	;'e'
  5694  00E3E6  61                 	db	97	;'a'
  5695  00E3E7  73                 	db	115	;'s'
  5696  00E3E8  75                 	db	117	;'u'
  5697  00E3E9  72                 	db	114	;'r'
  5698  00E3EA  65                 	db	101	;'e'
  5699  00E3EB  20                 	db	32
  5700  00E3EC  50                 	db	80	;'P'
  5701  00E3ED  6F                 	db	111	;'o'
  5702  00E3EE  77                 	db	119	;'w'
  5703  00E3EF  65                 	db	101	;'e'
  5704  00E3F0  72                 	db	114	;'r'
  5705  00E3F1  3F                 	db	63	;'?'
  5706  00E3F2  3A                 	db	58	;':'
  5707  00E3F3  20                 	db	32
  5708  00E3F4  52                 	db	82	;'R'
  5709  00E3F5  65                 	db	101	;'e'
  5710  00E3F6  74                 	db	116	;'t'
  5711  00E3F7  75                 	db	117	;'u'
  5712  00E3F8  72                 	db	114	;'r'
  5713  00E3F9  6E                 	db	110	;'n'
  5714  00E3FA  73                 	db	115	;'s'
  5715  00E3FB  20                 	db	32
  5716  00E3FC  74                 	db	116	;'t'
  5717  00E3FD  68                 	db	104	;'h'
  5718  00E3FE  65                 	db	101	;'e'
  5719  00E3FF  20                 	db	32
  5720  00E400  63                 	db	99	;'c'
  5721  00E401  61                 	db	97	;'a'
  5722  00E402  6C                 	db	108	;'l'
  5723  00E403  63                 	db	99	;'c'
  5724  00E404  75                 	db	117	;'u'
  5725  00E405  6C                 	db	108	;'l'
  5726  00E406  61                 	db	97	;'a'
  5727  00E407  74                 	db	116	;'t'
  5728  00E408  65                 	db	101	;'e'
  5729  00E409  64                 	db	100	;'d'
  5730  00E40A  20                 	db	32
  5731  00E40B  6F                 	db	111	;'o'
  5732  00E40C  75                 	db	117	;'u'
  5733  00E40D  74                 	db	116	;'t'
  5734  00E40E  70                 	db	112	;'p'
  5735  00E40F  75                 	db	117	;'u'
  5736  00E410  74                 	db	116	;'t'
  5737  00E411  20                 	db	32
  5738  00E412  70                 	db	112	;'p'
  5739  00E413  6F                 	db	111	;'o'
  5740  00E414  77                 	db	119	;'w'
  5741  00E415  65                 	db	101	;'e'
  5742  00E416  72                 	db	114	;'r'
  5743  00E417  20                 	db	32
  5744  00E418  69                 	db	105	;'i'
  5745  00E419  6E                 	db	110	;'n'
  5746  00E41A  20                 	db	32
  5747  00E41B  57                 	db	87	;'W'
  5748  00E41C  61                 	db	97	;'a'
  5749  00E41D  74                 	db	116	;'t'
  5750  00E41E  74                 	db	116	;'t'
  5751  00E41F  73                 	db	115	;'s'
  5752  00E420  0A                 	db	10
  5753  00E421  0D                 	db	13
  5754  00E422  20                 	db	32
  5755  00E423  20                 	db	32
  5756  00E424  20                 	db	32
  5757  00E425  4D                 	db	77	;'M'
  5758  00E426  65                 	db	101	;'e'
  5759  00E427  61                 	db	97	;'a'
  5760  00E428  73                 	db	115	;'s'
  5761  00E429  75                 	db	117	;'u'
  5762  00E42A  72                 	db	114	;'r'
  5763  00E42B  65                 	db	101	;'e'
  5764  00E42C  20                 	db	32
  5765  00E42D  45                 	db	69	;'E'
  5766  00E42E  6E                 	db	110	;'n'
  5767  00E42F  65                 	db	101	;'e'
  5768  00E430  72                 	db	114	;'r'
  5769  00E431  67                 	db	103	;'g'
  5770  00E432  79                 	db	121	;'y'
  5771  00E433  3F                 	db	63	;'?'
  5772  00E434  3A                 	db	58	;':'
  5773  00E435  20                 	db	32
  5774  00E436  52                 	db	82	;'R'
  5775  00E437  65                 	db	101	;'e'
  5776  00E438  74                 	db	116	;'t'
  5777  00E439  75                 	db	117	;'u'
  5778  00E43A  72                 	db	114	;'r'
  5779  00E43B  6E                 	db	110	;'n'
  5780  00E43C  73                 	db	115	;'s'
  5781  00E43D  20                 	db	32
  5782  00E43E  6D                 	db	109	;'m'
  5783  00E43F  65                 	db	101	;'e'
  5784  00E440  61                 	db	97	;'a'
  5785  00E441  73                 	db	115	;'s'
  5786  00E442  75                 	db	117	;'u'
  5787  00E443  72                 	db	114	;'r'
  5788  00E444  65                 	db	101	;'e'
  5789  00E445  64                 	db	100	;'d'
  5790  00E446  20                 	db	32
  5791  00E447  65                 	db	101	;'e'
  5792  00E448  6E                 	db	110	;'n'
  5793  00E449  65                 	db	101	;'e'
  5794  00E44A  72                 	db	114	;'r'
  5795  00E44B  67                 	db	103	;'g'
  5796  00E44C  79                 	db	121	;'y'
  5797  00E44D  20                 	db	32
  5798  00E44E  73                 	db	115	;'s'
  5799  00E44F  69                 	db	105	;'i'
  5800  00E450  6E                 	db	110	;'n'
  5801  00E451  63                 	db	99	;'c'
  5802  00E452  65                 	db	101	;'e'
  5803  00E453  20                 	db	32
  5804  00E454  6D                 	db	109	;'m'
  5805  00E455  65                 	db	101	;'e'
  5806  00E456  61                 	db	97	;'a'
  5807  00E457  73                 	db	115	;'s'
  5808  00E458  75                 	db	117	;'u'
  5809  00E459  72                 	db	114	;'r'
  5810  00E45A  65                 	db	101	;'e'
  5811  00E45B  6D                 	db	109	;'m'
  5812  00E45C  65                 	db	101	;'e'
  5813  00E45D  6E                 	db	110	;'n'
  5814  00E45E  74                 	db	116	;'t'
  5815  00E45F  20                 	db	32
  5816  00E460  72                 	db	114	;'r'
  5817  00E461  65                 	db	101	;'e'
  5818  00E462  73                 	db	115	;'s'
  5819  00E463  65                 	db	101	;'e'
  5820  00E464  74                 	db	116	;'t'
  5821  00E465  20                 	db	32
  5822  00E466  69                 	db	105	;'i'
  5823  00E467  6E                 	db	110	;'n'
  5824  00E468  20                 	db	32
  5825  00E469  57                 	db	87	;'W'
  5826  00E46A  61                 	db	97	;'a'
  5827  00E46B  74                 	db	116	;'t'
  5828  00E46C  74                 	db	116	;'t'
  5829  00E46D  20                 	db	32
  5830  00E46E  48                 	db	72	;'H'
  5831  00E46F  6F                 	db	111	;'o'
  5832  00E470  75                 	db	117	;'u'
  5833  00E471  72                 	db	114	;'r'
  5834  00E472  73                 	db	115	;'s'
  5835  00E473  0A                 	db	10
  5836  00E474  0D                 	db	13
  5837  00E475  20                 	db	32
  5838  00E476  20                 	db	32
  5839  00E477  20                 	db	32
  5840  00E478  43                 	db	67	;'C'
  5841  00E479  6C                 	db	108	;'l'
  5842  00E47A  65                 	db	101	;'e'
  5843  00E47B  61                 	db	97	;'a'
  5844  00E47C  72                 	db	114	;'r'
  5845  00E47D  20                 	db	32
  5846  00E47E  45                 	db	69	;'E'
  5847  00E47F  6E                 	db	110	;'n'
  5848  00E480  65                 	db	101	;'e'
  5849  00E481  72                 	db	114	;'r'
  5850  00E482  67                 	db	103	;'g'
  5851  00E483  79                 	db	121	;'y'
  5852  00E484  3A                 	db	58	;':'
  5853  00E485  20                 	db	32
  5854  00E486  52                 	db	82	;'R'
  5855  00E487  65                 	db	101	;'e'
  5856  00E488  73                 	db	115	;'s'
  5857  00E489  65                 	db	101	;'e'
  5858  00E48A  74                 	db	116	;'t'
  5859  00E48B  73                 	db	115	;'s'
  5860  00E48C  20                 	db	32
  5861  00E48D  74                 	db	116	;'t'
  5862  00E48E  68                 	db	104	;'h'
  5863  00E48F  65                 	db	101	;'e'
  5864  00E490  20                 	db	32
  5865  00E491  6D                 	db	109	;'m'
  5866  00E492  65                 	db	101	;'e'
  5867  00E493  61                 	db	97	;'a'
  5868  00E494  73                 	db	115	;'s'
  5869  00E495  75                 	db	117	;'u'
  5870  00E496  72                 	db	114	;'r'
  5871  00E497  65                 	db	101	;'e'
  5872  00E498  64                 	db	100	;'d'
  5873  00E499  20                 	db	32
  5874  00E49A  6F                 	db	111	;'o'
  5875  00E49B  75                 	db	117	;'u'
  5876  00E49C  74                 	db	116	;'t'
  5877  00E49D  70                 	db	112	;'p'
  5878  00E49E  75                 	db	117	;'u'
  5879  00E49F  74                 	db	116	;'t'
  5880  00E4A0  20                 	db	32
  5881  00E4A1  65                 	db	101	;'e'
  5882  00E4A2  6E                 	db	110	;'n'
  5883  00E4A3  65                 	db	101	;'e'
  5884  00E4A4  72                 	db	114	;'r'
  5885  00E4A5  67                 	db	103	;'g'
  5886  00E4A6  79                 	db	121	;'y'
  5887  00E4A7  20                 	db	32
  5888  00E4A8  74                 	db	116	;'t'
  5889  00E4A9  6F                 	db	111	;'o'
  5890  00E4AA  20                 	db	32
  5891  00E4AB  7A                 	db	122	;'z'
  5892  00E4AC  65                 	db	101	;'e'
  5893  00E4AD  72                 	db	114	;'r'
  5894  00E4AE  6F                 	db	111	;'o'
  5895  00E4AF  0A                 	db	10
  5896  00E4B0  0D                 	db	13
  5897  00E4B1  20                 	db	32
  5898  00E4B2  20                 	db	32
  5899  00E4B3  20                 	db	32
  5900  00E4B4  4C                 	db	76	;'L'
  5901  00E4B5  6F                 	db	111	;'o'
  5902  00E4B6  61                 	db	97	;'a'
  5903  00E4B7  64                 	db	100	;'d'
  5904  00E4B8  20                 	db	32
  5905  00E4B9  4F                 	db	79	;'O'
  5906  00E4BA  6E                 	db	110	;'n'
  5907  00E4BB  20                 	db	32
  5908  00E4BC  54                 	db	84	;'T'
  5909  00E4BD  69                 	db	105	;'i'
  5910  00E4BE  6D                 	db	109	;'m'
  5911  00E4BF  65                 	db	101	;'e'
  5912  00E4C0  3F                 	db	63	;'?'
  5913  00E4C1  3A                 	db	58	;':'
  5914  00E4C2  20                 	db	32
  5915  00E4C3  52                 	db	82	;'R'
  5916  00E4C4  65                 	db	101	;'e'
  5917  00E4C5  74                 	db	116	;'t'
  5918  00E4C6  75                 	db	117	;'u'
  5919  00E4C7  72                 	db	114	;'r'
  5920  00E4C8  6E                 	db	110	;'n'
  5921  00E4C9  73                 	db	115	;'s'
  5922  00E4CA  20                 	db	32
  5923  00E4CB  6C                 	db	108	;'l'
  5924  00E4CC  6F                 	db	111	;'o'
  5925  00E4CD  61                 	db	97	;'a'
  5926  00E4CE  64                 	db	100	;'d'
  5927  00E4CF  20                 	db	32
  5928  00E4D0  6F                 	db	111	;'o'
  5929  00E4D1  6E                 	db	110	;'n'
  5930  00E4D2  20                 	db	32
  5931  00E4D3  74                 	db	116	;'t'
  5932  00E4D4  69                 	db	105	;'i'
  5933  00E4D5  6D                 	db	109	;'m'
  5934  00E4D6  65                 	db	101	;'e'
  5935  00E4D7  20                 	db	32
  5936  00E4D8  73                 	db	115	;'s'
  5937  00E4D9  69                 	db	105	;'i'
  5938  00E4DA  6E                 	db	110	;'n'
  5939  00E4DB  63                 	db	99	;'c'
  5940  00E4DC  65                 	db	101	;'e'
  5941  00E4DD  20                 	db	32
  5942  00E4DE  6C                 	db	108	;'l'
  5943  00E4DF  61                 	db	97	;'a'
  5944  00E4E0  73                 	db	115	;'s'
  5945  00E4E1  74                 	db	116	;'t'
  5946  00E4E2  20                 	db	32
  5947  00E4E3  64                 	db	100	;'d'
  5948  00E4E4  65                 	db	101	;'e'
  5949  00E4E5  76                 	db	118	;'v'
  5950  00E4E6  69                 	db	105	;'i'
  5951  00E4E7  63                 	db	99	;'c'
  5952  00E4E8  65                 	db	101	;'e'
  5953  00E4E9  20                 	db	32
  5954  00E4EA  72                 	db	114	;'r'
  5955  00E4EB  65                 	db	101	;'e'
  5956  00E4EC  73                 	db	115	;'s'
  5957  00E4ED  65                 	db	101	;'e'
  5958  00E4EE  74                 	db	116	;'t'
  5959  00E4EF  20                 	db	32
  5960  00E4F0  69                 	db	105	;'i'
  5961  00E4F1  6E                 	db	110	;'n'
  5962  00E4F2  20                 	db	32
  5963  00E4F3  73                 	db	115	;'s'
  5964  00E4F4  65                 	db	101	;'e'
  5965  00E4F5  63                 	db	99	;'c'
  5966  00E4F6  6F                 	db	111	;'o'
  5967  00E4F7  6E                 	db	110	;'n'
  5968  00E4F8  64                 	db	100	;'d'
  5969  00E4F9  73                 	db	115	;'s'
  5970  00E4FA  0A                 	db	10
  5971  00E4FB  0D                 	db	13
  5972  00E4FC  20                 	db	32
  5973  00E4FD  20                 	db	32
  5974  00E4FE  20                 	db	32
  5975  00E4FF  4D                 	db	77	;'M'
  5976  00E500  61                 	db	97	;'a'
  5977  00E501  78                 	db	120	;'x'
  5978  00E502  20                 	db	32
  5979  00E503  52                 	db	82	;'R'
  5980  00E504  4D                 	db	77	;'M'
  5981  00E505  53                 	db	83	;'S'
  5982  00E506  20                 	db	32
  5983  00E507  43                 	db	67	;'C'
  5984  00E508  75                 	db	117	;'u'
  5985  00E509  72                 	db	114	;'r'
  5986  00E50A  72                 	db	114	;'r'
  5987  00E50B  65                 	db	101	;'e'
  5988  00E50C  6E                 	db	110	;'n'
  5989  00E50D  74                 	db	116	;'t'
  5990  00E50E  3F                 	db	63	;'?'
  5991  00E50F  3A                 	db	58	;':'
  5992  00E510  20                 	db	32
  5993  00E511  50                 	db	80	;'P'
  5994  00E512  72                 	db	114	;'r'
  5995  00E513  69                 	db	105	;'i'
  5996  00E514  6E                 	db	110	;'n'
  5997  00E515  74                 	db	116	;'t'
  5998  00E516  73                 	db	115	;'s'
  5999  00E517  20                 	db	32
  6000  00E518  74                 	db	116	;'t'
  6001  00E519  68                 	db	104	;'h'
  6002  00E51A  65                 	db	101	;'e'
  6003  00E51B  20                 	db	32
  6004  00E51C  6D                 	db	109	;'m'
  6005  00E51D  61                 	db	97	;'a'
  6006  00E51E  78                 	db	120	;'x'
  6007  00E51F  69                 	db	105	;'i'
  6008  00E520  6D                 	db	109	;'m'
  6009  00E521  75                 	db	117	;'u'
  6010  00E522  6D                 	db	109	;'m'
  6011  00E523  20                 	db	32
  6012  00E524  72                 	db	114	;'r'
  6013  00E525  65                 	db	101	;'e'
  6014  00E526  63                 	db	99	;'c'
  6015  00E527  6F                 	db	111	;'o'
  6016  00E528  72                 	db	114	;'r'
  6017  00E529  64                 	db	100	;'d'
  6018  00E52A  65                 	db	101	;'e'
  6019  00E52B  64                 	db	100	;'d'
  6020  00E52C  20                 	db	32
  6021  00E52D  52                 	db	82	;'R'
  6022  00E52E  4D                 	db	77	;'M'
  6023  00E52F  53                 	db	83	;'S'
  6024  00E530  20                 	db	32
  6025  00E531  6F                 	db	111	;'o'
  6026  00E532  75                 	db	117	;'u'
  6027  00E533  74                 	db	116	;'t'
  6028  00E534  70                 	db	112	;'p'
  6029  00E535  75                 	db	117	;'u'
  6030  00E536  74                 	db	116	;'t'
  6031  00E537  20                 	db	32
  6032  00E538  63                 	db	99	;'c'
  6033  00E539  75                 	db	117	;'u'
  6034  00E53A  72                 	db	114	;'r'
  6035  00E53B  72                 	db	114	;'r'
  6036  00E53C  65                 	db	101	;'e'
  6037  00E53D  6E                 	db	110	;'n'
  6038  00E53E  74                 	db	116	;'t'
  6039  00E53F  0A                 	db	10
  6040  00E540  0D                 	db	13
  6041  00E541  20                 	db	32
  6042  00E542  20                 	db	32
  6043  00E543  20                 	db	32
  6044  00E544  4D                 	db	77	;'M'
  6045  00E545  61                 	db	97	;'a'
  6046  00E546  78                 	db	120	;'x'
  6047  00E547  20                 	db	32
  6048  00E548  50                 	db	80	;'P'
  6049  00E549  6F                 	db	111	;'o'
  6050  00E54A  77                 	db	119	;'w'
  6051  00E54B  65                 	db	101	;'e'
  6052  00E54C  72                 	db	114	;'r'
  6053  00E54D  3F                 	db	63	;'?'
  6054  00E54E  3A                 	db	58	;':'
  6055  00E54F  20                 	db	32
  6056  00E550  50                 	db	80	;'P'
  6057  00E551  72                 	db	114	;'r'
  6058  00E552  69                 	db	105	;'i'
  6059  00E553  6E                 	db	110	;'n'
  6060  00E554  74                 	db	116	;'t'
  6061  00E555  73                 	db	115	;'s'
  6062  00E556  20                 	db	32
  6063  00E557  74                 	db	116	;'t'
  6064  00E558  68                 	db	104	;'h'
  6065  00E559  65                 	db	101	;'e'
  6066  00E55A  20                 	db	32
  6067  00E55B  6D                 	db	109	;'m'
  6068  00E55C  61                 	db	97	;'a'
  6069  00E55D  78                 	db	120	;'x'
  6070  00E55E  69                 	db	105	;'i'
  6071  00E55F  6D                 	db	109	;'m'
  6072  00E560  75                 	db	117	;'u'
  6073  00E561  6D                 	db	109	;'m'
  6074  00E562  20                 	db	32
  6075  00E563  72                 	db	114	;'r'
  6076  00E564  65                 	db	101	;'e'
  6077  00E565  63                 	db	99	;'c'
  6078  00E566  6F                 	db	111	;'o'
  6079  00E567  72                 	db	114	;'r'
  6080  00E568  64                 	db	100	;'d'
  6081  00E569  65                 	db	101	;'e'
  6082  00E56A  64                 	db	100	;'d'
  6083  00E56B  20                 	db	32
  6084  00E56C  6F                 	db	111	;'o'
  6085  00E56D  75                 	db	117	;'u'
  6086  00E56E  74                 	db	116	;'t'
  6087  00E56F  70                 	db	112	;'p'
  6088  00E570  75                 	db	117	;'u'
  6089  00E571  74                 	db	116	;'t'
  6090  00E572  20                 	db	32
  6091  00E573  70                 	db	112	;'p'
  6092  00E574  6F                 	db	111	;'o'
  6093  00E575  77                 	db	119	;'w'
  6094  00E576  65                 	db	101	;'e'
  6095  00E577  72                 	db	114	;'r'
  6096  00E578  0A                 	db	10
  6097  00E579  0D                 	db	13
  6098  00E57A  0A                 	db	10
  6099  00E57B  0D                 	db	13
  6100  00E57C  00                 	db	0
  6101  00E57D                     STR_156:
  6102  00E57D  4C                 	db	76	;'L'
  6103  00E57E  69                 	db	105	;'i'
  6104  00E57F  73                 	db	115	;'s'
  6105  00E580  74                 	db	116	;'t'
  6106  00E581  20                 	db	32
  6107  00E582  6F                 	db	111	;'o'
  6108  00E583  66                 	db	102	;'f'
  6109  00E584  20                 	db	32
  6110  00E585  73                 	db	115	;'s'
  6111  00E586  75                 	db	117	;'u'
  6112  00E587  70                 	db	112	;'p'
  6113  00E588  70                 	db	112	;'p'
  6114  00E589  6F                 	db	111	;'o'
  6115  00E58A  72                 	db	114	;'r'
  6116  00E58B  74                 	db	116	;'t'
  6117  00E58C  65                 	db	101	;'e'
  6118  00E58D  64                 	db	100	;'d'
  6119  00E58E  20                 	db	32
  6120  00E58F  44                 	db	68	;'D'
  6121  00E590  65                 	db	101	;'e'
  6122  00E591  76                 	db	118	;'v'
  6123  00E592  69                 	db	105	;'i'
  6124  00E593  63                 	db	99	;'c'
  6125  00E594  65                 	db	101	;'e'
  6126  00E595  20                 	db	32
  6127  00E596  4D                 	db	77	;'M'
  6128  00E597  65                 	db	101	;'e'
  6129  00E598  61                 	db	97	;'a'
  6130  00E599  73                 	db	115	;'s'
  6131  00E59A  75                 	db	117	;'u'
  6132  00E59B  72                 	db	114	;'r'
  6133  00E59C  65                 	db	101	;'e'
  6134  00E59D  6D                 	db	109	;'m'
  6135  00E59E  65                 	db	101	;'e'
  6136  00E59F  6E                 	db	110	;'n'
  6137  00E5A0  74                 	db	116	;'t'
  6138  00E5A1  20                 	db	32
  6139  00E5A2  43                 	db	67	;'C'
  6140  00E5A3  6F                 	db	111	;'o'
  6141  00E5A4  6D                 	db	109	;'m'
  6142  00E5A5  6D                 	db	109	;'m'
  6143  00E5A6  61                 	db	97	;'a'
  6144  00E5A7  6E                 	db	110	;'n'
  6145  00E5A8  64                 	db	100	;'d'
  6146  00E5A9  73                 	db	115	;'s'
  6147  00E5AA  3A                 	db	58	;':'
  6148  00E5AB  0A                 	db	10
  6149  00E5AC  0D                 	db	13
  6150  00E5AD  20                 	db	32
  6151  00E5AE  20                 	db	32
  6152  00E5AF  20                 	db	32
  6153  00E5B0  4D                 	db	77	;'M'
  6154  00E5B1  65                 	db	101	;'e'
  6155  00E5B2  61                 	db	97	;'a'
  6156  00E5B3  73                 	db	115	;'s'
  6157  00E5B4  75                 	db	117	;'u'
  6158  00E5B5  72                 	db	114	;'r'
  6159  00E5B6  65                 	db	101	;'e'
  6160  00E5B7  20                 	db	32
  6161  00E5B8  50                 	db	80	;'P'
  6162  00E5B9  4F                 	db	79	;'O'
  6163  00E5BA  53                 	db	83	;'S'
  6164  00E5BB  33                 	db	51	;'3'
  6165  00E5BC  50                 	db	80	;'P'
  6166  00E5BD  33                 	db	51	;'3'
  6167  00E5BE  3F                 	db	63	;'?'
  6168  00E5BF  3A                 	db	58	;':'
  6169  00E5C0  20                 	db	32
  6170  00E5C1  52                 	db	82	;'R'
  6171  00E5C2  65                 	db	101	;'e'
  6172  00E5C3  74                 	db	116	;'t'
  6173  00E5C4  75                 	db	117	;'u'
  6174  00E5C5  72                 	db	114	;'r'
  6175  00E5C6  6E                 	db	110	;'n'
  6176  00E5C7  73                 	db	115	;'s'
  6177  00E5C8  20                 	db	32
  6178  00E5C9  2B                 	db	43
  6179  00E5CA  33                 	db	51	;'3'
  6180  00E5CB  2E                 	db	46
  6181  00E5CC  33                 	db	51	;'3'
  6182  00E5CD  56                 	db	86	;'V'
  6183  00E5CE  20                 	db	32
  6184  00E5CF  41                 	db	65	;'A'
  6185  00E5D0  44                 	db	68	;'D'
  6186  00E5D1  43                 	db	67	;'C'
  6187  00E5D2  20                 	db	32
  6188  00E5D3  43                 	db	67	;'C'
  6189  00E5D4  6F                 	db	111	;'o'
  6190  00E5D5  6E                 	db	110	;'n'
  6191  00E5D6  76                 	db	118	;'v'
  6192  00E5D7  65                 	db	101	;'e'
  6193  00E5D8  72                 	db	114	;'r'
  6194  00E5D9  73                 	db	115	;'s'
  6195  00E5DA  69                 	db	105	;'i'
  6196  00E5DB  6F                 	db	111	;'o'
  6197  00E5DC  6E                 	db	110	;'n'
  6198  00E5DD  20                 	db	32
  6199  00E5DE  69                 	db	105	;'i'
  6200  00E5DF  6E                 	db	110	;'n'
  6201  00E5E0  20                 	db	32
  6202  00E5E1  76                 	db	118	;'v'
  6203  00E5E2  6F                 	db	111	;'o'
  6204  00E5E3  6C                 	db	108	;'l'
  6205  00E5E4  74                 	db	116	;'t'
  6206  00E5E5  73                 	db	115	;'s'
  6207  00E5E6  0A                 	db	10
  6208  00E5E7  0D                 	db	13
  6209  00E5E8  20                 	db	32
  6210  00E5E9  20                 	db	32
  6211  00E5EA  20                 	db	32
  6212  00E5EB  4D                 	db	77	;'M'
  6213  00E5EC  65                 	db	101	;'e'
  6214  00E5ED  61                 	db	97	;'a'
  6215  00E5EE  73                 	db	115	;'s'
  6216  00E5EF  75                 	db	117	;'u'
  6217  00E5F0  72                 	db	114	;'r'
  6218  00E5F1  65                 	db	101	;'e'
  6219  00E5F2  20                 	db	32
  6220  00E5F3  50                 	db	80	;'P'
  6221  00E5F4  4F                 	db	79	;'O'
  6222  00E5F5  53                 	db	83	;'S'
  6223  00E5F6  31                 	db	49	;'1'
  6224  00E5F7  32                 	db	50	;'2'
  6225  00E5F8  3F                 	db	63	;'?'
  6226  00E5F9  3A                 	db	58	;':'
  6227  00E5FA  20                 	db	32
  6228  00E5FB  52                 	db	82	;'R'
  6229  00E5FC  65                 	db	101	;'e'
  6230  00E5FD  74                 	db	116	;'t'
  6231  00E5FE  75                 	db	117	;'u'
  6232  00E5FF  72                 	db	114	;'r'
  6233  00E600  6E                 	db	110	;'n'
  6234  00E601  73                 	db	115	;'s'
  6235  00E602  20                 	db	32
  6236  00E603  2B                 	db	43
  6237  00E604  31                 	db	49	;'1'
  6238  00E605  32                 	db	50	;'2'
  6239  00E606  56                 	db	86	;'V'
  6240  00E607  20                 	db	32
  6241  00E608  41                 	db	65	;'A'
  6242  00E609  44                 	db	68	;'D'
  6243  00E60A  43                 	db	67	;'C'
  6244  00E60B  20                 	db	32
  6245  00E60C  43                 	db	67	;'C'
  6246  00E60D  6F                 	db	111	;'o'
  6247  00E60E  6E                 	db	110	;'n'
  6248  00E60F  76                 	db	118	;'v'
  6249  00E610  65                 	db	101	;'e'
  6250  00E611  72                 	db	114	;'r'
  6251  00E612  73                 	db	115	;'s'
  6252  00E613  69                 	db	105	;'i'
  6253  00E614  6F                 	db	111	;'o'
  6254  00E615  6E                 	db	110	;'n'
  6255  00E616  20                 	db	32
  6256  00E617  69                 	db	105	;'i'
  6257  00E618  6E                 	db	110	;'n'
  6258  00E619  20                 	db	32
  6259  00E61A  76                 	db	118	;'v'
  6260  00E61B  6F                 	db	111	;'o'
  6261  00E61C  6C                 	db	108	;'l'
  6262  00E61D  74                 	db	116	;'t'
  6263  00E61E  73                 	db	115	;'s'
  6264  00E61F  0A                 	db	10
  6265  00E620  0D                 	db	13
  6266  00E621  20                 	db	32
  6267  00E622  20                 	db	32
  6268  00E623  20                 	db	32
  6269  00E624  4D                 	db	77	;'M'
  6270  00E625  65                 	db	101	;'e'
  6271  00E626  61                 	db	97	;'a'
  6272  00E627  73                 	db	115	;'s'
  6273  00E628  75                 	db	117	;'u'
  6274  00E629  72                 	db	114	;'r'
  6275  00E62A  65                 	db	101	;'e'
  6276  00E62B  20                 	db	32
  6277  00E62C  44                 	db	68	;'D'
  6278  00E62D  69                 	db	105	;'i'
  6279  00E62E  65                 	db	101	;'e'
  6280  00E62F  20                 	db	32
  6281  00E630  54                 	db	84	;'T'
  6282  00E631  65                 	db	101	;'e'
  6283  00E632  6D                 	db	109	;'m'
  6284  00E633  70                 	db	112	;'p'
  6285  00E634  3F                 	db	63	;'?'
  6286  00E635  3A                 	db	58	;':'
  6287  00E636  20                 	db	32
  6288  00E637  52                 	db	82	;'R'
  6289  00E638  65                 	db	101	;'e'
  6290  00E639  74                 	db	116	;'t'
  6291  00E63A  75                 	db	117	;'u'
  6292  00E63B  72                 	db	114	;'r'
  6293  00E63C  6E                 	db	110	;'n'
  6294  00E63D  73                 	db	115	;'s'
  6295  00E63E  20                 	db	32
  6296  00E63F  74                 	db	116	;'t'
  6297  00E640  68                 	db	104	;'h'
  6298  00E641  65                 	db	101	;'e'
  6299  00E642  20                 	db	32
  6300  00E643  6D                 	db	109	;'m'
  6301  00E644  69                 	db	105	;'i'
  6302  00E645  63                 	db	99	;'c'
  6303  00E646  72                 	db	114	;'r'
  6304  00E647  6F                 	db	111	;'o'
  6305  00E648  63                 	db	99	;'c'
  6306  00E649  6F                 	db	111	;'o'
  6307  00E64A  6E                 	db	110	;'n'
  6308  00E64B  74                 	db	116	;'t'
  6309  00E64C  72                 	db	114	;'r'
  6310  00E64D  6F                 	db	111	;'o'
  6311  00E64E  6C                 	db	108	;'l'
  6312  00E64F  6C                 	db	108	;'l'
  6313  00E650  65                 	db	101	;'e'
  6314  00E651  72                 	db	114	;'r'
  6315  00E652  20                 	db	32
  6316  00E653  64                 	db	100	;'d'
  6317  00E654  69                 	db	105	;'i'
  6318  00E655  65                 	db	101	;'e'
  6319  00E656  20                 	db	32
  6320  00E657  74                 	db	116	;'t'
  6321  00E658  65                 	db	101	;'e'
  6322  00E659  6D                 	db	109	;'m'
  6323  00E65A  70                 	db	112	;'p'
  6324  00E65B  65                 	db	101	;'e'
  6325  00E65C  72                 	db	114	;'r'
  6326  00E65D  61                 	db	97	;'a'
  6327  00E65E  74                 	db	116	;'t'
  6328  00E65F  75                 	db	117	;'u'
  6329  00E660  72                 	db	114	;'r'
  6330  00E661  65                 	db	101	;'e'
  6331  00E662  20                 	db	32
  6332  00E663  69                 	db	105	;'i'
  6333  00E664  6E                 	db	110	;'n'
  6334  00E665  20                 	db	32
  6335  00E666  64                 	db	100	;'d'
  6336  00E667  65                 	db	101	;'e'
  6337  00E668  67                 	db	103	;'g'
  6338  00E669  72                 	db	114	;'r'
  6339  00E66A  65                 	db	101	;'e'
  6340  00E66B  65                 	db	101	;'e'
  6341  00E66C  73                 	db	115	;'s'
  6342  00E66D  20                 	db	32
  6343  00E66E  43                 	db	67	;'C'
  6344  00E66F  0A                 	db	10
  6345  00E670  0D                 	db	13
  6346  00E671  20                 	db	32
  6347  00E672  20                 	db	32
  6348  00E673  20                 	db	32
  6349  00E674  4D                 	db	77	;'M'
  6350  00E675  65                 	db	101	;'e'
  6351  00E676  61                 	db	97	;'a'
  6352  00E677  73                 	db	115	;'s'
  6353  00E678  75                 	db	117	;'u'
  6354  00E679  72                 	db	114	;'r'
  6355  00E67A  65                 	db	101	;'e'
  6356  00E67B  20                 	db	32
  6357  00E67C  46                 	db	70	;'F'
  6358  00E67D  56                 	db	86	;'V'
  6359  00E67E  52                 	db	82	;'R'
  6360  00E67F  3F                 	db	63	;'?'
  6361  00E680  3A                 	db	58	;':'
  6362  00E681  20                 	db	32
  6363  00E682  52                 	db	82	;'R'
  6364  00E683  65                 	db	101	;'e'
  6365  00E684  74                 	db	116	;'t'
  6366  00E685  75                 	db	117	;'u'
  6367  00E686  72                 	db	114	;'r'
  6368  00E687  6E                 	db	110	;'n'
  6369  00E688  73                 	db	115	;'s'
  6370  00E689  20                 	db	32
  6371  00E68A  74                 	db	116	;'t'
  6372  00E68B  68                 	db	104	;'h'
  6373  00E68C  65                 	db	101	;'e'
  6374  00E68D  20                 	db	32
  6375  00E68E  69                 	db	105	;'i'
  6376  00E68F  6E                 	db	110	;'n'
  6377  00E690  74                 	db	116	;'t'
  6378  00E691  65                 	db	101	;'e'
  6379  00E692  72                 	db	114	;'r'
  6380  00E693  6E                 	db	110	;'n'
  6381  00E694  61                 	db	97	;'a'
  6382  00E695  6C                 	db	108	;'l'
  6383  00E696  20                 	db	32
  6384  00E697  66                 	db	102	;'f'
  6385  00E698  69                 	db	105	;'i'
  6386  00E699  78                 	db	120	;'x'
  6387  00E69A  65                 	db	101	;'e'
  6388  00E69B  64                 	db	100	;'d'
  6389  00E69C  20                 	db	32
  6390  00E69D  76                 	db	118	;'v'
  6391  00E69E  6F                 	db	111	;'o'
  6392  00E69F  6C                 	db	108	;'l'
  6393  00E6A0  74                 	db	116	;'t'
  6394  00E6A1  61                 	db	97	;'a'
  6395  00E6A2  67                 	db	103	;'g'
  6396  00E6A3  65                 	db	101	;'e'
  6397  00E6A4  20                 	db	32
  6398  00E6A5  72                 	db	114	;'r'
  6399  00E6A6  65                 	db	101	;'e'
  6400  00E6A7  66                 	db	102	;'f'
  6401  00E6A8  65                 	db	101	;'e'
  6402  00E6A9  72                 	db	114	;'r'
  6403  00E6AA  65                 	db	101	;'e'
  6404  00E6AB  6E                 	db	110	;'n'
  6405  00E6AC  63                 	db	99	;'c'
  6406  00E6AD  65                 	db	101	;'e'
  6407  00E6AE  20                 	db	32
  6408  00E6AF  62                 	db	98	;'b'
  6409  00E6B0  75                 	db	117	;'u'
  6410  00E6B1  66                 	db	102	;'f'
  6411  00E6B2  66                 	db	102	;'f'
  6412  00E6B3  65                 	db	101	;'e'
  6413  00E6B4  72                 	db	114	;'r'
  6414  00E6B5  20                 	db	32
  6415  00E6B6  31                 	db	49	;'1'
  6416  00E6B7  20                 	db	32
  6417  00E6B8  6F                 	db	111	;'o'
  6418  00E6B9  75                 	db	117	;'u'
  6419  00E6BA  74                 	db	116	;'t'
  6420  00E6BB  70                 	db	112	;'p'
  6421  00E6BC  75                 	db	117	;'u'
  6422  00E6BD  74                 	db	116	;'t'
  6423  00E6BE  20                 	db	32
  6424  00E6BF  69                 	db	105	;'i'
  6425  00E6C0  6E                 	db	110	;'n'
  6426  00E6C1  20                 	db	32
  6427  00E6C2  76                 	db	118	;'v'
  6428  00E6C3  6F                 	db	111	;'o'
  6429  00E6C4  6C                 	db	108	;'l'
  6430  00E6C5  74                 	db	116	;'t'
  6431  00E6C6  73                 	db	115	;'s'
  6432  00E6C7  0A                 	db	10
  6433  00E6C8  0D                 	db	13
  6434  00E6C9  20                 	db	32
  6435  00E6CA  20                 	db	32
  6436  00E6CB  20                 	db	32
  6437  00E6CC  4D                 	db	77	;'M'
  6438  00E6CD  65                 	db	101	;'e'
  6439  00E6CE  61                 	db	97	;'a'
  6440  00E6CF  73                 	db	115	;'s'
  6441  00E6D0  75                 	db	117	;'u'
  6442  00E6D1  72                 	db	114	;'r'
  6443  00E6D2  65                 	db	101	;'e'
  6444  00E6D3  20                 	db	32
  6445  00E6D4  41                 	db	65	;'A'
  6446  00E6D5  56                 	db	86	;'V'
  6447  00E6D6  53                 	db	83	;'S'
  6448  00E6D7  53                 	db	83	;'S'
  6449  00E6D8  3F                 	db	63	;'?'
  6450  00E6D9  3A                 	db	58	;':'
  6451  00E6DA  20                 	db	32
  6452  00E6DB  52                 	db	82	;'R'
  6453  00E6DC  65                 	db	101	;'e'
  6454  00E6DD  74                 	db	116	;'t'
  6455  00E6DE  75                 	db	117	;'u'
  6456  00E6DF  72                 	db	114	;'r'
  6457  00E6E0  6E                 	db	110	;'n'
  6458  00E6E1  73                 	db	115	;'s'
  6459  00E6E2  20                 	db	32
  6460  00E6E3  74                 	db	116	;'t'
  6461  00E6E4  68                 	db	104	;'h'
  6462  00E6E5  65                 	db	101	;'e'
  6463  00E6E6  20                 	db	32
  6464  00E6E7  6D                 	db	109	;'m'
  6465  00E6E8  65                 	db	101	;'e'
  6466  00E6E9  61                 	db	97	;'a'
  6467  00E6EA  73                 	db	115	;'s'
  6468  00E6EB  75                 	db	117	;'u'
  6469  00E6EC  72                 	db	114	;'r'
  6470  00E6ED  65                 	db	101	;'e'
  6471  00E6EE  64                 	db	100	;'d'
  6472  00E6EF  20                 	db	32
  6473  00E6F0  76                 	db	118	;'v'
  6474  00E6F1  61                 	db	97	;'a'
  6475  00E6F2  6C                 	db	108	;'l'
  6476  00E6F3  75                 	db	117	;'u'
  6477  00E6F4  65                 	db	101	;'e'
  6478  00E6F5  20                 	db	32
  6479  00E6F6  6F                 	db	111	;'o'
  6480  00E6F7  66                 	db	102	;'f'
  6481  00E6F8  20                 	db	32
  6482  00E6F9  41                 	db	65	;'A'
  6483  00E6FA  6E                 	db	110	;'n'
  6484  00E6FB  61                 	db	97	;'a'
  6485  00E6FC  6C                 	db	108	;'l'
  6486  00E6FD  6F                 	db	111	;'o'
  6487  00E6FE  67                 	db	103	;'g'
  6488  00E6FF  20                 	db	32
  6489  00E700  56                 	db	86	;'V'
  6490  00E701  53                 	db	83	;'S'
  6491  00E702  53                 	db	83	;'S'
  6492  00E703  20                 	db	32
  6493  00E704  69                 	db	105	;'i'
  6494  00E705  6E                 	db	110	;'n'
  6495  00E706  20                 	db	32
  6496  00E707  76                 	db	118	;'v'
  6497  00E708  6F                 	db	111	;'o'
  6498  00E709  6C                 	db	108	;'l'
  6499  00E70A  74                 	db	116	;'t'
  6500  00E70B  73                 	db	115	;'s'
  6501  00E70C  0A                 	db	10
  6502  00E70D  0D                 	db	13
  6503  00E70E  20                 	db	32
  6504  00E70F  20                 	db	32
  6505  00E710  20                 	db	32
  6506  00E711  4D                 	db	77	;'M'
  6507  00E712  61                 	db	97	;'a'
  6508  00E713  78                 	db	120	;'x'
  6509  00E714  20                 	db	32
  6510  00E715  50                 	db	80	;'P'
  6511  00E716  4F                 	db	79	;'O'
  6512  00E717  53                 	db	83	;'S'
  6513  00E718  33                 	db	51	;'3'
  6514  00E719  50                 	db	80	;'P'
  6515  00E71A  33                 	db	51	;'3'
  6516  00E71B  20                 	db	32
  6517  00E71C  56                 	db	86	;'V'
  6518  00E71D  6F                 	db	111	;'o'
  6519  00E71E  6C                 	db	108	;'l'
  6520  00E71F  74                 	db	116	;'t'
  6521  00E720  61                 	db	97	;'a'
  6522  00E721  67                 	db	103	;'g'
  6523  00E722  65                 	db	101	;'e'
  6524  00E723  3F                 	db	63	;'?'
  6525  00E724  3A                 	db	58	;':'
  6526  00E725  20                 	db	32
  6527  00E726  52                 	db	82	;'R'
  6528  00E727  65                 	db	101	;'e'
  6529  00E728  74                 	db	116	;'t'
  6530  00E729  75                 	db	117	;'u'
  6531  00E72A  72                 	db	114	;'r'
  6532  00E72B  6E                 	db	110	;'n'
  6533  00E72C  73                 	db	115	;'s'
  6534  00E72D  20                 	db	32
  6535  00E72E  74                 	db	116	;'t'
  6536  00E72F  68                 	db	104	;'h'
  6537  00E730  65                 	db	101	;'e'
  6538  00E731  20                 	db	32
  6539  00E732  6D                 	db	109	;'m'
  6540  00E733  61                 	db	97	;'a'
  6541  00E734  78                 	db	120	;'x'
  6542  00E735  69                 	db	105	;'i'
  6543  00E736  6D                 	db	109	;'m'
  6544  00E737  75                 	db	117	;'u'
  6545  00E738  6D                 	db	109	;'m'
  6546  00E739  20                 	db	32
  6547  00E73A  72                 	db	114	;'r'
  6548  00E73B  65                 	db	101	;'e'
  6549  00E73C  63                 	db	99	;'c'
  6550  00E73D  6F                 	db	111	;'o'
  6551  00E73E  72                 	db	114	;'r'
  6552  00E73F  64                 	db	100	;'d'
  6553  00E740  65                 	db	101	;'e'
  6554  00E741  64                 	db	100	;'d'
  6555  00E742  20                 	db	32
  6556  00E743  2B                 	db	43
  6557  00E744  33                 	db	51	;'3'
  6558  00E745  2E                 	db	46
  6559  00E746  33                 	db	51	;'3'
  6560  00E747  56                 	db	86	;'V'
  6561  00E748  20                 	db	32
  6562  00E749  52                 	db	82	;'R'
  6563  00E74A  61                 	db	97	;'a'
  6564  00E74B  69                 	db	105	;'i'
  6565  00E74C  6C                 	db	108	;'l'
  6566  00E74D  20                 	db	32
  6567  00E74E  56                 	db	86	;'V'
  6568  00E74F  6F                 	db	111	;'o'
  6569  00E750  6C                 	db	108	;'l'
  6570  00E751  74                 	db	116	;'t'
  6571  00E752  61                 	db	97	;'a'
  6572  00E753  67                 	db	103	;'g'
  6573  00E754  65                 	db	101	;'e'
  6574  00E755  20                 	db	32
  6575  00E756  6D                 	db	109	;'m'
  6576  00E757  65                 	db	101	;'e'
  6577  00E758  61                 	db	97	;'a'
  6578  00E759  73                 	db	115	;'s'
  6579  00E75A  75                 	db	117	;'u'
  6580  00E75B  72                 	db	114	;'r'
  6581  00E75C  65                 	db	101	;'e'
  6582  00E75D  64                 	db	100	;'d'
  6583  00E75E  0A                 	db	10
  6584  00E75F  0D                 	db	13
  6585  00E760  20                 	db	32
  6586  00E761  20                 	db	32
  6587  00E762  20                 	db	32
  6588  00E763  4D                 	db	77	;'M'
  6589  00E764  61                 	db	97	;'a'
  6590  00E765  78                 	db	120	;'x'
  6591  00E766  20                 	db	32
  6592  00E767  50                 	db	80	;'P'
  6593  00E768  4F                 	db	79	;'O'
  6594  00E769  53                 	db	83	;'S'
  6595  00E76A  31                 	db	49	;'1'
  6596  00E76B  32                 	db	50	;'2'
  6597  00E76C  20                 	db	32
  6598  00E76D  56                 	db	86	;'V'
  6599  00E76E  6F                 	db	111	;'o'
  6600  00E76F  6C                 	db	108	;'l'
  6601  00E770  74                 	db	116	;'t'
  6602  00E771  61                 	db	97	;'a'
  6603  00E772  67                 	db	103	;'g'
  6604  00E773  65                 	db	101	;'e'
  6605  00E774  3F                 	db	63	;'?'
  6606  00E775  3A                 	db	58	;':'
  6607  00E776  20                 	db	32
  6608  00E777  52                 	db	82	;'R'
  6609  00E778  65                 	db	101	;'e'
  6610  00E779  74                 	db	116	;'t'
  6611  00E77A  75                 	db	117	;'u'
  6612  00E77B  72                 	db	114	;'r'
  6613  00E77C  6E                 	db	110	;'n'
  6614  00E77D  73                 	db	115	;'s'
  6615  00E77E  20                 	db	32
  6616  00E77F  74                 	db	116	;'t'
  6617  00E780  68                 	db	104	;'h'
  6618  00E781  65                 	db	101	;'e'
  6619  00E782  20                 	db	32
  6620  00E783  6D                 	db	109	;'m'
  6621  00E784  61                 	db	97	;'a'
  6622  00E785  78                 	db	120	;'x'
  6623  00E786  69                 	db	105	;'i'
  6624  00E787  6D                 	db	109	;'m'
  6625  00E788  75                 	db	117	;'u'
  6626  00E789  6D                 	db	109	;'m'
  6627  00E78A  20                 	db	32
  6628  00E78B  72                 	db	114	;'r'
  6629  00E78C  65                 	db	101	;'e'
  6630  00E78D  63                 	db	99	;'c'
  6631  00E78E  6F                 	db	111	;'o'
  6632  00E78F  72                 	db	114	;'r'
  6633  00E790  64                 	db	100	;'d'
  6634  00E791  65                 	db	101	;'e'
  6635  00E792  64                 	db	100	;'d'
  6636  00E793  20                 	db	32
  6637  00E794  2B                 	db	43
  6638  00E795  31                 	db	49	;'1'
  6639  00E796  32                 	db	50	;'2'
  6640  00E797  56                 	db	86	;'V'
  6641  00E798  20                 	db	32
  6642  00E799  52                 	db	82	;'R'
  6643  00E79A  61                 	db	97	;'a'
  6644  00E79B  69                 	db	105	;'i'
  6645  00E79C  6C                 	db	108	;'l'
  6646  00E79D  20                 	db	32
  6647  00E79E  56                 	db	86	;'V'
  6648  00E79F  6F                 	db	111	;'o'
  6649  00E7A0  6C                 	db	108	;'l'
  6650  00E7A1  74                 	db	116	;'t'
  6651  00E7A2  61                 	db	97	;'a'
  6652  00E7A3  67                 	db	103	;'g'
  6653  00E7A4  65                 	db	101	;'e'
  6654  00E7A5  20                 	db	32
  6655  00E7A6  6D                 	db	109	;'m'
  6656  00E7A7  65                 	db	101	;'e'
  6657  00E7A8  61                 	db	97	;'a'
  6658  00E7A9  73                 	db	115	;'s'
  6659  00E7AA  75                 	db	117	;'u'
  6660  00E7AB  72                 	db	114	;'r'
  6661  00E7AC  65                 	db	101	;'e'
  6662  00E7AD  64                 	db	100	;'d'
  6663  00E7AE  0A                 	db	10
  6664  00E7AF  0D                 	db	13
  6665  00E7B0  20                 	db	32
  6666  00E7B1  20                 	db	32
  6667  00E7B2  20                 	db	32
  6668  00E7B3  4D                 	db	77	;'M'
  6669  00E7B4  61                 	db	97	;'a'
  6670  00E7B5  78                 	db	120	;'x'
  6671  00E7B6  20                 	db	32
  6672  00E7B7  44                 	db	68	;'D'
  6673  00E7B8  69                 	db	105	;'i'
  6674  00E7B9  65                 	db	101	;'e'
  6675  00E7BA  20                 	db	32
  6676  00E7BB  54                 	db	84	;'T'
  6677  00E7BC  65                 	db	101	;'e'
  6678  00E7BD  6D                 	db	109	;'m'
  6679  00E7BE  70                 	db	112	;'p'
  6680  00E7BF  3F                 	db	63	;'?'
  6681  00E7C0  3A                 	db	58	;':'
  6682  00E7C1  20                 	db	32
  6683  00E7C2  52                 	db	82	;'R'
  6684  00E7C3  65                 	db	101	;'e'
  6685  00E7C4  74                 	db	116	;'t'
  6686  00E7C5  75                 	db	117	;'u'
  6687  00E7C6  72                 	db	114	;'r'
  6688  00E7C7  6E                 	db	110	;'n'
  6689  00E7C8  73                 	db	115	;'s'
  6690  00E7C9  20                 	db	32
  6691  00E7CA  74                 	db	116	;'t'
  6692  00E7CB  68                 	db	104	;'h'
  6693  00E7CC  65                 	db	101	;'e'
  6694  00E7CD  20                 	db	32
  6695  00E7CE  6D                 	db	109	;'m'
  6696  00E7CF  61                 	db	97	;'a'
  6697  00E7D0  78                 	db	120	;'x'
  6698  00E7D1  69                 	db	105	;'i'
  6699  00E7D2  6D                 	db	109	;'m'
  6700  00E7D3  75                 	db	117	;'u'
  6701  00E7D4  6D                 	db	109	;'m'
  6702  00E7D5  20                 	db	32
  6703  00E7D6  72                 	db	114	;'r'
  6704  00E7D7  65                 	db	101	;'e'
  6705  00E7D8  63                 	db	99	;'c'
  6706  00E7D9  6F                 	db	111	;'o'
  6707  00E7DA  72                 	db	114	;'r'
  6708  00E7DB  64                 	db	100	;'d'
  6709  00E7DC  65                 	db	101	;'e'
  6710  00E7DD  64                 	db	100	;'d'
  6711  00E7DE  20                 	db	32
  6712  00E7DF  64                 	db	100	;'d'
  6713  00E7E0  69                 	db	105	;'i'
  6714  00E7E1  65                 	db	101	;'e'
  6715  00E7E2  20                 	db	32
  6716  00E7E3  74                 	db	116	;'t'
  6717  00E7E4  65                 	db	101	;'e'
  6718  00E7E5  6D                 	db	109	;'m'
  6719  00E7E6  70                 	db	112	;'p'
  6720  00E7E7  65                 	db	101	;'e'
  6721  00E7E8  72                 	db	114	;'r'
  6722  00E7E9  61                 	db	97	;'a'
  6723  00E7EA  74                 	db	116	;'t'
  6724  00E7EB  75                 	db	117	;'u'
  6725  00E7EC  72                 	db	114	;'r'
  6726  00E7ED  65                 	db	101	;'e'
  6727  00E7EE  20                 	db	32
  6728  00E7EF  6D                 	db	109	;'m'
  6729  00E7F0  65                 	db	101	;'e'
  6730  00E7F1  61                 	db	97	;'a'
  6731  00E7F2  73                 	db	115	;'s'
  6732  00E7F3  75                 	db	117	;'u'
  6733  00E7F4  72                 	db	114	;'r'
  6734  00E7F5  65                 	db	101	;'e'
  6735  00E7F6  64                 	db	100	;'d'
  6736  00E7F7  0A                 	db	10
  6737  00E7F8  0D                 	db	13
  6738  00E7F9  20                 	db	32
  6739  00E7FA  20                 	db	32
  6740  00E7FB  20                 	db	32
  6741  00E7FC  4D                 	db	77	;'M'
  6742  00E7FD  61                 	db	97	;'a'
  6743  00E7FE  78                 	db	120	;'x'
  6744  00E7FF  20                 	db	32
  6745  00E800  46                 	db	70	;'F'
  6746  00E801  56                 	db	86	;'V'
  6747  00E802  52                 	db	82	;'R'
  6748  00E803  20                 	db	32
  6749  00E804  56                 	db	86	;'V'
  6750  00E805  6F                 	db	111	;'o'
  6751  00E806  6C                 	db	108	;'l'
  6752  00E807  74                 	db	116	;'t'
  6753  00E808  61                 	db	97	;'a'
  6754  00E809  67                 	db	103	;'g'
  6755  00E80A  65                 	db	101	;'e'
  6756  00E80B  3F                 	db	63	;'?'
  6757  00E80C  3A                 	db	58	;':'
  6758  00E80D  20                 	db	32
  6759  00E80E  52                 	db	82	;'R'
  6760  00E80F  65                 	db	101	;'e'
  6761  00E810  74                 	db	116	;'t'
  6762  00E811  75                 	db	117	;'u'
  6763  00E812  72                 	db	114	;'r'
  6764  00E813  6E                 	db	110	;'n'
  6765  00E814  73                 	db	115	;'s'
  6766  00E815  20                 	db	32
  6767  00E816  74                 	db	116	;'t'
  6768  00E817  68                 	db	104	;'h'
  6769  00E818  65                 	db	101	;'e'
  6770  00E819  20                 	db	32
  6771  00E81A  6D                 	db	109	;'m'
  6772  00E81B  61                 	db	97	;'a'
  6773  00E81C  78                 	db	120	;'x'
  6774  00E81D  69                 	db	105	;'i'
  6775  00E81E  6D                 	db	109	;'m'
  6776  00E81F  75                 	db	117	;'u'
  6777  00E820  6D                 	db	109	;'m'
  6778  00E821  20                 	db	32
  6779  00E822  72                 	db	114	;'r'
  6780  00E823  65                 	db	101	;'e'
  6781  00E824  63                 	db	99	;'c'
  6782  00E825  6F                 	db	111	;'o'
  6783  00E826  72                 	db	114	;'r'
  6784  00E827  64                 	db	100	;'d'
  6785  00E828  65                 	db	101	;'e'
  6786  00E829  64                 	db	100	;'d'
  6787  00E82A  20                 	db	32
  6788  00E82B  46                 	db	70	;'F'
  6789  00E82C  56                 	db	86	;'V'
  6790  00E82D  52                 	db	82	;'R'
  6791  00E82E  20                 	db	32
  6792  00E82F  42                 	db	66	;'B'
  6793  00E830  75                 	db	117	;'u'
  6794  00E831  66                 	db	102	;'f'
  6795  00E832  66                 	db	102	;'f'
  6796  00E833  65                 	db	101	;'e'
  6797  00E834  72                 	db	114	;'r'
  6798  00E835  20                 	db	32
  6799  00E836  31                 	db	49	;'1'
  6800  00E837  20                 	db	32
  6801  00E838  56                 	db	86	;'V'
  6802  00E839  6F                 	db	111	;'o'
  6803  00E83A  6C                 	db	108	;'l'
  6804  00E83B  74                 	db	116	;'t'
  6805  00E83C  61                 	db	97	;'a'
  6806  00E83D  67                 	db	103	;'g'
  6807  00E83E  65                 	db	101	;'e'
  6808  00E83F  20                 	db	32
  6809  00E840  6D                 	db	109	;'m'
  6810  00E841  65                 	db	101	;'e'
  6811  00E842  61                 	db	97	;'a'
  6812  00E843  73                 	db	115	;'s'
  6813  00E844  75                 	db	117	;'u'
  6814  00E845  72                 	db	114	;'r'
  6815  00E846  65                 	db	101	;'e'
  6816  00E847  64                 	db	100	;'d'
  6817  00E848  0A                 	db	10
  6818  00E849  0D                 	db	13
  6819  00E84A  0A                 	db	10
  6820  00E84B  0D                 	db	13
  6821  00E84C  00                 	db	0
  6822  00E84D                     STR_160:
  6823  00E84D  4C                 	db	76	;'L'
  6824  00E84E  69                 	db	105	;'i'
  6825  00E84F  73                 	db	115	;'s'
  6826  00E850  74                 	db	116	;'t'
  6827  00E851  20                 	db	32
  6828  00E852  6F                 	db	111	;'o'
  6829  00E853  66                 	db	102	;'f'
  6830  00E854  20                 	db	32
  6831  00E855  73                 	db	115	;'s'
  6832  00E856  75                 	db	117	;'u'
  6833  00E857  70                 	db	112	;'p'
  6834  00E858  70                 	db	112	;'p'
  6835  00E859  6F                 	db	111	;'o'
  6836  00E85A  72                 	db	114	;'r'
  6837  00E85B  74                 	db	116	;'t'
  6838  00E85C  65                 	db	101	;'e'
  6839  00E85D  64                 	db	100	;'d'
  6840  00E85E  20                 	db	32
  6841  00E85F  4F                 	db	79	;'O'
  6842  00E860  75                 	db	117	;'u'
  6843  00E861  74                 	db	116	;'t'
  6844  00E862  70                 	db	112	;'p'
  6845  00E863  75                 	db	117	;'u'
  6846  00E864  74                 	db	116	;'t'
  6847  00E865  20                 	db	32
  6848  00E866  43                 	db	67	;'C'
  6849  00E867  6F                 	db	111	;'o'
  6850  00E868  6E                 	db	110	;'n'
  6851  00E869  74                 	db	116	;'t'
  6852  00E86A  72                 	db	114	;'r'
  6853  00E86B  6F                 	db	111	;'o'
  6854  00E86C  6C                 	db	108	;'l'
  6855  00E86D  20                 	db	32
  6856  00E86E  43                 	db	67	;'C'
  6857  00E86F  6F                 	db	111	;'o'
  6858  00E870  6D                 	db	109	;'m'
  6859  00E871  6D                 	db	109	;'m'
  6860  00E872  61                 	db	97	;'a'
  6861  00E873  6E                 	db	110	;'n'
  6862  00E874  64                 	db	100	;'d'
  6863  00E875  73                 	db	115	;'s'
  6864  00E876  3A                 	db	58	;':'
  6865  00E877  0A                 	db	10
  6866  00E878  0D                 	db	13
  6867  00E879  20                 	db	32
  6868  00E87A  20                 	db	32
  6869  00E87B  20                 	db	32
  6870  00E87C  45                 	db	69	;'E'
  6871  00E87D  6E                 	db	110	;'n'
  6872  00E87E  61                 	db	97	;'a'
  6873  00E87F  62                 	db	98	;'b'
  6874  00E880  6C                 	db	108	;'l'
  6875  00E881  65                 	db	101	;'e'
  6876  00E882  20                 	db	32
  6877  00E883  44                 	db	68	;'D'
  6878  00E884  69                 	db	105	;'i'
  6879  00E885  6D                 	db	109	;'m'
  6880  00E886  6D                 	db	109	;'m'
  6881  00E887  69                 	db	105	;'i'
  6882  00E888  6E                 	db	110	;'n'
  6883  00E889  67                 	db	103	;'g'
  6884  00E88A  3A                 	db	58	;':'
  6885  00E88B  20                 	db	32
  6886  00E88C  45                 	db	69	;'E'
  6887  00E88D  6E                 	db	110	;'n'
  6888  00E88E  61                 	db	97	;'a'
  6889  00E88F  62                 	db	98	;'b'
  6890  00E890  6C                 	db	108	;'l'
  6891  00E891  65                 	db	101	;'e'
  6892  00E892  20                 	db	32
  6893  00E893  54                 	db	84	;'T'
  6894  00E894  52                 	db	82	;'R'
  6895  00E895  49                 	db	73	;'I'
  6896  00E896  41                 	db	65	;'A'
  6897  00E897  43                 	db	67	;'C'
  6898  00E898  20                 	db	32
  6899  00E899  6F                 	db	111	;'o'
  6900  00E89A  75                 	db	117	;'u'
  6901  00E89B  74                 	db	116	;'t'
  6902  00E89C  70                 	db	112	;'p'
  6903  00E89D  75                 	db	117	;'u'
  6904  00E89E  74                 	db	116	;'t'
  6905  00E89F  20                 	db	32
  6906  00E8A0  64                 	db	100	;'d'
  6907  00E8A1  69                 	db	105	;'i'
  6908  00E8A2  6D                 	db	109	;'m'
  6909  00E8A3  6D                 	db	109	;'m'
  6910  00E8A4  69                 	db	105	;'i'
  6911  00E8A5  6E                 	db	110	;'n'
  6912  00E8A6  67                 	db	103	;'g'
  6913  00E8A7  0A                 	db	10
  6914  00E8A8  0D                 	db	13
  6915  00E8A9  20                 	db	32
  6916  00E8AA  20                 	db	32
  6917  00E8AB  20                 	db	32
  6918  00E8AC  44                 	db	68	;'D'
  6919  00E8AD  69                 	db	105	;'i'
  6920  00E8AE  73                 	db	115	;'s'
  6921  00E8AF  61                 	db	97	;'a'
  6922  00E8B0  62                 	db	98	;'b'
  6923  00E8B1  6C                 	db	108	;'l'
  6924  00E8B2  65                 	db	101	;'e'
  6925  00E8B3  20                 	db	32
  6926  00E8B4  44                 	db	68	;'D'
  6927  00E8B5  69                 	db	105	;'i'
  6928  00E8B6  6D                 	db	109	;'m'
  6929  00E8B7  6D                 	db	109	;'m'
  6930  00E8B8  69                 	db	105	;'i'
  6931  00E8B9  6E                 	db	110	;'n'
  6932  00E8BA  67                 	db	103	;'g'
  6933  00E8BB  3A                 	db	58	;':'
  6934  00E8BC  20                 	db	32
  6935  00E8BD  44                 	db	68	;'D'
  6936  00E8BE  69                 	db	105	;'i'
  6937  00E8BF  73                 	db	115	;'s'
  6938  00E8C0  61                 	db	97	;'a'
  6939  00E8C1  62                 	db	98	;'b'
  6940  00E8C2  6C                 	db	108	;'l'
  6941  00E8C3  65                 	db	101	;'e'
  6942  00E8C4  20                 	db	32
  6943  00E8C5  54                 	db	84	;'T'
  6944  00E8C6  52                 	db	82	;'R'
  6945  00E8C7  49                 	db	73	;'I'
  6946  00E8C8  41                 	db	65	;'A'
  6947  00E8C9  43                 	db	67	;'C'
  6948  00E8CA  20                 	db	32
  6949  00E8CB  6F                 	db	111	;'o'
  6950  00E8CC  75                 	db	117	;'u'
  6951  00E8CD  74                 	db	116	;'t'
  6952  00E8CE  70                 	db	112	;'p'
  6953  00E8CF  75                 	db	117	;'u'
  6954  00E8D0  74                 	db	116	;'t'
  6955  00E8D1  20                 	db	32
  6956  00E8D2  64                 	db	100	;'d'
  6957  00E8D3  69                 	db	105	;'i'
  6958  00E8D4  6D                 	db	109	;'m'
  6959  00E8D5  6D                 	db	109	;'m'
  6960  00E8D6  69                 	db	105	;'i'
  6961  00E8D7  6E                 	db	110	;'n'
  6962  00E8D8  67                 	db	103	;'g'
  6963  00E8D9  0A                 	db	10
  6964  00E8DA  0D                 	db	13
  6965  00E8DB  20                 	db	32
  6966  00E8DC  20                 	db	32
  6967  00E8DD  20                 	db	32
  6968  00E8DE  45                 	db	69	;'E'
  6969  00E8DF  6E                 	db	110	;'n'
  6970  00E8E0  61                 	db	97	;'a'
  6971  00E8E1  62                 	db	98	;'b'
  6972  00E8E2  6C                 	db	108	;'l'
  6973  00E8E3  65                 	db	101	;'e'
  6974  00E8E4  20                 	db	32
  6975  00E8E5  4C                 	db	76	;'L'
  6976  00E8E6  6F                 	db	111	;'o'
  6977  00E8E7  61                 	db	97	;'a'
  6978  00E8E8  64                 	db	100	;'d'
  6979  00E8E9  3A                 	db	58	;':'
  6980  00E8EA  20                 	db	32
  6981  00E8EB  45                 	db	69	;'E'
  6982  00E8EC  6E                 	db	110	;'n'
  6983  00E8ED  61                 	db	97	;'a'
  6984  00E8EE  62                 	db	98	;'b'
  6985  00E8EF  6C                 	db	108	;'l'
  6986  00E8F0  65                 	db	101	;'e'
  6987  00E8F1  73                 	db	115	;'s'
  6988  00E8F2  20                 	db	32
  6989  00E8F3  74                 	db	116	;'t'
  6990  00E8F4  68                 	db	104	;'h'
  6991  00E8F5  65                 	db	101	;'e'
  6992  00E8F6  20                 	db	32
  6993  00E8F7  6F                 	db	111	;'o'
  6994  00E8F8  75                 	db	117	;'u'
  6995  00E8F9  74                 	db	116	;'t'
  6996  00E8FA  70                 	db	112	;'p'
  6997  00E8FB  75                 	db	117	;'u'
  6998  00E8FC  74                 	db	116	;'t'
  6999  00E8FD  20                 	db	32
  7000  00E8FE  54                 	db	84	;'T'
  7001  00E8FF  52                 	db	82	;'R'
  7002  00E900  49                 	db	73	;'I'
  7003  00E901  41                 	db	65	;'A'
  7004  00E902  43                 	db	67	;'C'
  7005  00E903  20                 	db	32
  7006  00E904  77                 	db	119	;'w'
  7007  00E905  69                 	db	105	;'i'
  7008  00E906  74                 	db	116	;'t'
  7009  00E907  68                 	db	104	;'h'
  7010  00E908  20                 	db	32
  7011  00E909  64                 	db	100	;'d'
  7012  00E90A  69                 	db	105	;'i'
  7013  00E90B  6D                 	db	109	;'m'
  7014  00E90C  6D                 	db	109	;'m'
  7015  00E90D  69                 	db	105	;'i'
  7016  00E90E  6E                 	db	110	;'n'
  7017  00E90F  67                 	db	103	;'g'
  7018  00E910  20                 	db	32
  7019  00E911  64                 	db	100	;'d'
  7020  00E912  69                 	db	105	;'i'
  7021  00E913  73                 	db	115	;'s'
  7022  00E914  61                 	db	97	;'a'
  7023  00E915  62                 	db	98	;'b'
  7024  00E916  6C                 	db	108	;'l'
  7025  00E917  65                 	db	101	;'e'
  7026  00E918  64                 	db	100	;'d'
  7027  00E919  0A                 	db	10
  7028  00E91A  0D                 	db	13
  7029  00E91B  20                 	db	32
  7030  00E91C  20                 	db	32
  7031  00E91D  20                 	db	32
  7032  00E91E  44                 	db	68	;'D'
  7033  00E91F  69                 	db	105	;'i'
  7034  00E920  73                 	db	115	;'s'
  7035  00E921  61                 	db	97	;'a'
  7036  00E922  62                 	db	98	;'b'
  7037  00E923  6C                 	db	108	;'l'
  7038  00E924  65                 	db	101	;'e'
  7039  00E925  20                 	db	32
  7040  00E926  4C                 	db	76	;'L'
  7041  00E927  6F                 	db	111	;'o'
  7042  00E928  61                 	db	97	;'a'
  7043  00E929  64                 	db	100	;'d'
  7044  00E92A  3A                 	db	58	;':'
  7045  00E92B  20                 	db	32
  7046  00E92C  44                 	db	68	;'D'
  7047  00E92D  69                 	db	105	;'i'
  7048  00E92E  73                 	db	115	;'s'
  7049  00E92F  61                 	db	97	;'a'
  7050  00E930  62                 	db	98	;'b'
  7051  00E931  6C                 	db	108	;'l'
  7052  00E932  65                 	db	101	;'e'
  7053  00E933  73                 	db	115	;'s'
  7054  00E934  20                 	db	32
  7055  00E935  74                 	db	116	;'t'
  7056  00E936  68                 	db	104	;'h'
  7057  00E937  65                 	db	101	;'e'
  7058  00E938  20                 	db	32
  7059  00E939  6F                 	db	111	;'o'
  7060  00E93A  75                 	db	117	;'u'
  7061  00E93B  74                 	db	116	;'t'
  7062  00E93C  70                 	db	112	;'p'
  7063  00E93D  75                 	db	117	;'u'
  7064  00E93E  74                 	db	116	;'t'
  7065  00E93F  20                 	db	32
  7066  00E940  54                 	db	84	;'T'
  7067  00E941  52                 	db	82	;'R'
  7068  00E942  49                 	db	73	;'I'
  7069  00E943  41                 	db	65	;'A'
  7070  00E944  43                 	db	67	;'C'
  7071  00E945  20                 	db	32
  7072  00E946  63                 	db	99	;'c'
  7073  00E947  6F                 	db	111	;'o'
  7074  00E948  6D                 	db	109	;'m'
  7075  00E949  70                 	db	112	;'p'
  7076  00E94A  6C                 	db	108	;'l'
  7077  00E94B  65                 	db	101	;'e'
  7078  00E94C  74                 	db	116	;'t'
  7079  00E94D  65                 	db	101	;'e'
  7080  00E94E  6C                 	db	108	;'l'
  7081  00E94F  79                 	db	121	;'y'
  7082  00E950  0A                 	db	10
  7083  00E951  0D                 	db	13
  7084  00E952  20                 	db	32
  7085  00E953  20                 	db	32
  7086  00E954  20                 	db	32
  7087  00E955  4C                 	db	76	;'L'
  7088  00E956  6F                 	db	111	;'o'
  7089  00E957  61                 	db	97	;'a'
  7090  00E958  64                 	db	100	;'d'
  7091  00E959  20                 	db	32
  7092  00E95A  45                 	db	69	;'E'
  7093  00E95B  6E                 	db	110	;'n'
  7094  00E95C  61                 	db	97	;'a'
  7095  00E95D  62                 	db	98	;'b'
  7096  00E95E  6C                 	db	108	;'l'
  7097  00E95F  65                 	db	101	;'e'
  7098  00E960  64                 	db	100	;'d'
  7099  00E961  3F                 	db	63	;'?'
  7100  00E962  3A                 	db	58	;':'
  7101  00E963  20                 	db	32
  7102  00E964  52                 	db	82	;'R'
  7103  00E965  65                 	db	101	;'e'
  7104  00E966  74                 	db	116	;'t'
  7105  00E967  75                 	db	117	;'u'
  7106  00E968  72                 	db	114	;'r'
  7107  00E969  6E                 	db	110	;'n'
  7108  00E96A  73                 	db	115	;'s'
  7109  00E96B  20                 	db	32
  7110  00E96C  69                 	db	105	;'i'
  7111  00E96D  66                 	db	102	;'f'
  7112  00E96E  20                 	db	32
  7113  00E96F  74                 	db	116	;'t'
  7114  00E970  68                 	db	104	;'h'
  7115  00E971  65                 	db	101	;'e'
  7116  00E972  20                 	db	32
  7117  00E973  6F                 	db	111	;'o'
  7118  00E974  75                 	db	117	;'u'
  7119  00E975  74                 	db	116	;'t'
  7120  00E976  70                 	db	112	;'p'
  7121  00E977  75                 	db	117	;'u'
  7122  00E978  74                 	db	116	;'t'
  7123  00E979  20                 	db	32
  7124  00E97A  6C                 	db	108	;'l'
  7125  00E97B  6F                 	db	111	;'o'
  7126  00E97C  61                 	db	97	;'a'
  7127  00E97D  64                 	db	100	;'d'
  7128  00E97E  20                 	db	32
  7129  00E97F  69                 	db	105	;'i'
  7130  00E980  73                 	db	115	;'s'
  7131  00E981  20                 	db	32
  7132  00E982  65                 	db	101	;'e'
  7133  00E983  6E                 	db	110	;'n'
  7134  00E984  61                 	db	97	;'a'
  7135  00E985  62                 	db	98	;'b'
  7136  00E986  6C                 	db	108	;'l'
  7137  00E987  65                 	db	101	;'e'
  7138  00E988  64                 	db	100	;'d'
  7139  00E989  20                 	db	32
  7140  00E98A  6F                 	db	111	;'o'
  7141  00E98B  72                 	db	114	;'r'
  7142  00E98C  20                 	db	32
  7143  00E98D  64                 	db	100	;'d'
  7144  00E98E  69                 	db	105	;'i'
  7145  00E98F  73                 	db	115	;'s'
  7146  00E990  61                 	db	97	;'a'
  7147  00E991  62                 	db	98	;'b'
  7148  00E992  6C                 	db	108	;'l'
  7149  00E993  65                 	db	101	;'e'
  7150  00E994  64                 	db	100	;'d'
  7151  00E995  0A                 	db	10
  7152  00E996  0D                 	db	13
  7153  00E997  20                 	db	32
  7154  00E998  20                 	db	32
  7155  00E999  20                 	db	32
  7156  00E99A  44                 	db	68	;'D'
  7157  00E99B  69                 	db	105	;'i'
  7158  00E99C  6D                 	db	109	;'m'
  7159  00E99D  6D                 	db	109	;'m'
  7160  00E99E  69                 	db	105	;'i'
  7161  00E99F  6E                 	db	110	;'n'
  7162  00E9A0  67                 	db	103	;'g'
  7163  00E9A1  20                 	db	32
  7164  00E9A2  45                 	db	69	;'E'
  7165  00E9A3  6E                 	db	110	;'n'
  7166  00E9A4  61                 	db	97	;'a'
  7167  00E9A5  62                 	db	98	;'b'
  7168  00E9A6  6C                 	db	108	;'l'
  7169  00E9A7  65                 	db	101	;'e'
  7170  00E9A8  64                 	db	100	;'d'
  7171  00E9A9  3F                 	db	63	;'?'
  7172  00E9AA  3A                 	db	58	;':'
  7173  00E9AB  20                 	db	32
  7174  00E9AC  52                 	db	82	;'R'
  7175  00E9AD  65                 	db	101	;'e'
  7176  00E9AE  74                 	db	116	;'t'
  7177  00E9AF  75                 	db	117	;'u'
  7178  00E9B0  72                 	db	114	;'r'
  7179  00E9B1  6E                 	db	110	;'n'
  7180  00E9B2  73                 	db	115	;'s'
  7181  00E9B3  20                 	db	32
  7182  00E9B4  69                 	db	105	;'i'
  7183  00E9B5  66                 	db	102	;'f'
  7184  00E9B6  20                 	db	32
  7185  00E9B7  64                 	db	100	;'d'
  7186  00E9B8  69                 	db	105	;'i'
  7187  00E9B9  6D                 	db	109	;'m'
  7188  00E9BA  6D                 	db	109	;'m'
  7189  00E9BB  69                 	db	105	;'i'
  7190  00E9BC  6E                 	db	110	;'n'
  7191  00E9BD  67                 	db	103	;'g'
  7192  00E9BE  20                 	db	32
  7193  00E9BF  6F                 	db	111	;'o'
  7194  00E9C0  66                 	db	102	;'f'
  7195  00E9C1  20                 	db	32
  7196  00E9C2  74                 	db	116	;'t'
  7197  00E9C3  68                 	db	104	;'h'
  7198  00E9C4  65                 	db	101	;'e'
  7199  00E9C5  20                 	db	32
  7200  00E9C6  6F                 	db	111	;'o'
  7201  00E9C7  75                 	db	117	;'u'
  7202  00E9C8  74                 	db	116	;'t'
  7203  00E9C9  70                 	db	112	;'p'
  7204  00E9CA  75                 	db	117	;'u'
  7205  00E9CB  74                 	db	116	;'t'
  7206  00E9CC  20                 	db	32
  7207  00E9CD  6C                 	db	108	;'l'
  7208  00E9CE  6F                 	db	111	;'o'
  7209  00E9CF  61                 	db	97	;'a'
  7210  00E9D0  64                 	db	100	;'d'
  7211  00E9D1  20                 	db	32
  7212  00E9D2  69                 	db	105	;'i'
  7213  00E9D3  73                 	db	115	;'s'
  7214  00E9D4  20                 	db	32
  7215  00E9D5  65                 	db	101	;'e'
  7216  00E9D6  6E                 	db	110	;'n'
  7217  00E9D7  61                 	db	97	;'a'
  7218  00E9D8  62                 	db	98	;'b'
  7219  00E9D9  6C                 	db	108	;'l'
  7220  00E9DA  65                 	db	101	;'e'
  7221  00E9DB  64                 	db	100	;'d'
  7222  00E9DC  20                 	db	32
  7223  00E9DD  6F                 	db	111	;'o'
  7224  00E9DE  72                 	db	114	;'r'
  7225  00E9DF  20                 	db	32
  7226  00E9E0  6E                 	db	110	;'n'
  7227  00E9E1  6F                 	db	111	;'o'
  7228  00E9E2  74                 	db	116	;'t'
  7229  00E9E3  0A                 	db	10
  7230  00E9E4  0D                 	db	13
  7231  00E9E5  20                 	db	32
  7232  00E9E6  20                 	db	32
  7233  00E9E7  20                 	db	32
  7234  00E9E8  53                 	db	83	;'S'
  7235  00E9E9  65                 	db	101	;'e'
  7236  00E9EA  74                 	db	116	;'t'
  7237  00E9EB  20                 	db	32
  7238  00E9EC  44                 	db	68	;'D'
  7239  00E9ED  69                 	db	105	;'i'
  7240  00E9EE  6D                 	db	109	;'m'
  7241  00E9EF  6D                 	db	109	;'m'
  7242  00E9F0  69                 	db	105	;'i'
  7243  00E9F1  6E                 	db	110	;'n'
  7244  00E9F2  67                 	db	103	;'g'
  7245  00E9F3  20                 	db	32
  7246  00E9F4  50                 	db	80	;'P'
  7247  00E9F5  65                 	db	101	;'e'
  7248  00E9F6  72                 	db	114	;'r'
  7249  00E9F7  63                 	db	99	;'c'
  7250  00E9F8  65                 	db	101	;'e'
  7251  00E9F9  6E                 	db	110	;'n'
  7252  00E9FA  74                 	db	116	;'t'
  7253  00E9FB  61                 	db	97	;'a'
  7254  00E9FC  67                 	db	103	;'g'
  7255  00E9FD  65                 	db	101	;'e'
  7256  00E9FE  3A                 	db	58	;':'
  7257  00E9FF  20                 	db	32
  7258  00EA00  3C                 	db	60	;'<'
  7259  00EA01  78                 	db	120	;'x'
  7260  00EA02  3E                 	db	62	;'>'
  7261  00EA03  3A                 	db	58	;':'
  7262  00EA04  20                 	db	32
  7263  00EA05  53                 	db	83	;'S'
  7264  00EA06  65                 	db	101	;'e'
  7265  00EA07  74                 	db	116	;'t'
  7266  00EA08  73                 	db	115	;'s'
  7267  00EA09  20                 	db	32
  7268  00EA0A  74                 	db	116	;'t'
  7269  00EA0B  68                 	db	104	;'h'
  7270  00EA0C  65                 	db	101	;'e'
  7271  00EA0D  20                 	db	32
  7272  00EA0E  6F                 	db	111	;'o'
  7273  00EA0F  75                 	db	117	;'u'
  7274  00EA10  74                 	db	116	;'t'
  7275  00EA11  70                 	db	112	;'p'
  7276  00EA12  75                 	db	117	;'u'
  7277  00EA13  74                 	db	116	;'t'
  7278  00EA14  20                 	db	32
  7279  00EA15  64                 	db	100	;'d'
  7280  00EA16  69                 	db	105	;'i'
  7281  00EA17  6D                 	db	109	;'m'
  7282  00EA18  6D                 	db	109	;'m'
  7283  00EA19  69                 	db	105	;'i'
  7284  00EA1A  6E                 	db	110	;'n'
  7285  00EA1B  67                 	db	103	;'g'
  7286  00EA1C  20                 	db	32
  7287  00EA1D  70                 	db	112	;'p'
  7288  00EA1E  65                 	db	101	;'e'
  7289  00EA1F  72                 	db	114	;'r'
  7290  00EA20  63                 	db	99	;'c'
  7291  00EA21  65                 	db	101	;'e'
  7292  00EA22  6E                 	db	110	;'n'
  7293  00EA23  74                 	db	116	;'t'
  7294  00EA24  61                 	db	97	;'a'
  7295  00EA25  67                 	db	103	;'g'
  7296  00EA26  65                 	db	101	;'e'
  7297  00EA27  20                 	db	32
  7298  00EA28  61                 	db	97	;'a'
  7299  00EA29  73                 	db	115	;'s'
  7300  00EA2A  20                 	db	32
  7301  00EA2B  78                 	db	120	;'x'
  7302  00EA2C  20                 	db	32
  7303  00EA2D  70                 	db	112	;'p'
  7304  00EA2E  65                 	db	101	;'e'
  7305  00EA2F  72                 	db	114	;'r'
  7306  00EA30  63                 	db	99	;'c'
  7307  00EA31  65                 	db	101	;'e'
  7308  00EA32  6E                 	db	110	;'n'
  7309  00EA33  74                 	db	116	;'t'
  7310  00EA34  0A                 	db	10
  7311  00EA35  0D                 	db	13
  7312  00EA36  0A                 	db	10
  7313  00EA37  0D                 	db	13
  7314  00EA38  00                 	db	0
  7315  00EA39                     STR_164:
  7316  00EA39  50                 	db	80	;'P'
  7317  00EA3A  6C                 	db	108	;'l'
  7318  00EA3B  65                 	db	101	;'e'
  7319  00EA3C  61                 	db	97	;'a'
  7320  00EA3D  73                 	db	115	;'s'
  7321  00EA3E  65                 	db	101	;'e'
  7322  00EA3F  20                 	db	32
  7323  00EA40  73                 	db	115	;'s'
  7324  00EA41  70                 	db	112	;'p'
  7325  00EA42  65                 	db	101	;'e'
  7326  00EA43  63                 	db	99	;'c'
  7327  00EA44  69                 	db	105	;'i'
  7328  00EA45  66                 	db	102	;'f'
  7329  00EA46  79                 	db	121	;'y'
  7330  00EA47  20                 	db	32
  7331  00EA48  77                 	db	119	;'w'
  7332  00EA49  68                 	db	104	;'h'
  7333  00EA4A  61                 	db	97	;'a'
  7334  00EA4B  74                 	db	116	;'t'
  7335  00EA4C  20                 	db	32
  7336  00EA4D  74                 	db	116	;'t'
  7337  00EA4E  79                 	db	121	;'y'
  7338  00EA4F  70                 	db	112	;'p'
  7339  00EA50  65                 	db	101	;'e'
  7340  00EA51  20                 	db	32
  7341  00EA52  6F                 	db	111	;'o'
  7342  00EA53  66                 	db	102	;'f'
  7343  00EA54  20                 	db	32
  7344  00EA55  63                 	db	99	;'c'
  7345  00EA56  6F                 	db	111	;'o'
  7346  00EA57  6D                 	db	109	;'m'
  7347  00EA58  6D                 	db	109	;'m'
  7348  00EA59  61                 	db	97	;'a'
  7349  00EA5A  6E                 	db	110	;'n'
  7350  00EA5B  64                 	db	100	;'d'
  7351  00EA5C  73                 	db	115	;'s'
  7352  00EA5D  20                 	db	32
  7353  00EA5E  79                 	db	121	;'y'
  7354  00EA5F  6F                 	db	111	;'o'
  7355  00EA60  75                 	db	117	;'u'
  7356  00EA61  27                 	db	39
  7357  00EA62  64                 	db	100	;'d'
  7358  00EA63  20                 	db	32
  7359  00EA64  6C                 	db	108	;'l'
  7360  00EA65  69                 	db	105	;'i'
  7361  00EA66  6B                 	db	107	;'k'
  7362  00EA67  65                 	db	101	;'e'
  7363  00EA68  20                 	db	32
  7364  00EA69  68                 	db	104	;'h'
  7365  00EA6A  65                 	db	101	;'e'
  7366  00EA6B  6C                 	db	108	;'l'
  7367  00EA6C  70                 	db	112	;'p'
  7368  00EA6D  20                 	db	32
  7369  00EA6E  77                 	db	119	;'w'
  7370  00EA6F  69                 	db	105	;'i'
  7371  00EA70  74                 	db	116	;'t'
  7372  00EA71  68                 	db	104	;'h'
  7373  00EA72  3A                 	db	58	;':'
  7374  00EA73  0A                 	db	10
  7375  00EA74  0D                 	db	13
  7376  00EA75  54                 	db	84	;'T'
  7377  00EA76  72                 	db	114	;'r'
  7378  00EA77  79                 	db	121	;'y'
  7379  00EA78  20                 	db	32
  7380  00EA79  27                 	db	39
  7381  00EA7A  48                 	db	72	;'H'
  7382  00EA7B  65                 	db	101	;'e'
  7383  00EA7C  6C                 	db	108	;'l'
  7384  00EA7D  70                 	db	112	;'p'
  7385  00EA7E  20                 	db	32
  7386  00EA7F  3C                 	db	60	;'<'
  7387  00EA80  63                 	db	99	;'c'
  7388  00EA81  6F                 	db	111	;'o'
  7389  00EA82  6D                 	db	109	;'m'
  7390  00EA83  6D                 	db	109	;'m'
  7391  00EA84  61                 	db	97	;'a'
  7392  00EA85  6E                 	db	110	;'n'
  7393  00EA86  64                 	db	100	;'d'
  7394  00EA87  20                 	db	32
  7395  00EA88  73                 	db	115	;'s'
  7396  00EA89  65                 	db	101	;'e'
  7397  00EA8A  74                 	db	116	;'t'
  7398  00EA8B  3E                 	db	62	;'>'
  7399  00EA8C  27                 	db	39
  7400  00EA8D  0A                 	db	10
  7401  00EA8E  0D                 	db	13
  7402  00EA8F  0A                 	db	10
  7403  00EA90  0D                 	db	13
  7404  00EA91  53                 	db	83	;'S'
  7405  00EA92  75                 	db	117	;'u'
  7406  00EA93  70                 	db	112	;'p'
  7407  00EA94  70                 	db	112	;'p'
  7408  00EA95  6F                 	db	111	;'o'
  7409  00EA96  72                 	db	114	;'r'
  7410  00EA97  74                 	db	116	;'t'
  7411  00EA98  65                 	db	101	;'e'
  7412  00EA99  64                 	db	100	;'d'
  7413  00EA9A  20                 	db	32
  7414  00EA9B  43                 	db	67	;'C'
  7415  00EA9C  6F                 	db	111	;'o'
  7416  00EA9D  6D                 	db	109	;'m'
  7417  00EA9E  6D                 	db	109	;'m'
  7418  00EA9F  61                 	db	97	;'a'
  7419  00EAA0  6E                 	db	110	;'n'
  7420  00EAA1  64                 	db	100	;'d'
  7421  00EAA2  20                 	db	32
  7422  00EAA3  53                 	db	83	;'S'
  7423  00EAA4  65                 	db	101	;'e'
  7424  00EAA5  74                 	db	116	;'t'
  7425  00EAA6  73                 	db	115	;'s'
  7426  00EAA7  3A                 	db	58	;':'
  7427  00EAA8  0A                 	db	10
  7428  00EAA9  0D                 	db	13
  7429  00EAAA  20                 	db	32
  7430  00EAAB  20                 	db	32
  7431  00EAAC  20                 	db	32
  7432  00EAAD  44                 	db	68	;'D'
  7433  00EAAE  65                 	db	101	;'e'
  7434  00EAAF  76                 	db	118	;'v'
  7435  00EAB0  69                 	db	105	;'i'
  7436  00EAB1  63                 	db	99	;'c'
  7437  00EAB2  65                 	db	101	;'e'
  7438  00EAB3  20                 	db	32
  7439  00EAB4  43                 	db	67	;'C'
  7440  00EAB5  6F                 	db	111	;'o'
  7441  00EAB6  6E                 	db	110	;'n'
  7442  00EAB7  74                 	db	116	;'t'
  7443  00EAB8  72                 	db	114	;'r'
  7444  00EAB9  6F                 	db	111	;'o'
  7445  00EABA  6C                 	db	108	;'l'
  7446  00EABB  20                 	db	32
  7447  00EABC  43                 	db	67	;'C'
  7448  00EABD  6F                 	db	111	;'o'
  7449  00EABE  6D                 	db	109	;'m'
  7450  00EABF  6D                 	db	109	;'m'
  7451  00EAC0  61                 	db	97	;'a'
  7452  00EAC1  6E                 	db	110	;'n'
  7453  00EAC2  64                 	db	100	;'d'
  7454  00EAC3  73                 	db	115	;'s'
  7455  00EAC4  3A                 	db	58	;':'
  7456  00EAC5  20                 	db	32
  7457  00EAC6  43                 	db	67	;'C'
  7458  00EAC7  6F                 	db	111	;'o'
  7459  00EAC8  6D                 	db	109	;'m'
  7460  00EAC9  6D                 	db	109	;'m'
  7461  00EACA  61                 	db	97	;'a'
  7462  00EACB  6E                 	db	110	;'n'
  7463  00EACC  64                 	db	100	;'d'
  7464  00EACD  73                 	db	115	;'s'
  7465  00EACE  20                 	db	32
  7466  00EACF  74                 	db	116	;'t'
  7467  00EAD0  6F                 	db	111	;'o'
  7468  00EAD1  20                 	db	32
  7469  00EAD2  76                 	db	118	;'v'
  7470  00EAD3  69                 	db	105	;'i'
  7471  00EAD4  65                 	db	101	;'e'
  7472  00EAD5  77                 	db	119	;'w'
  7473  00EAD6  20                 	db	32
  7474  00EAD7  61                 	db	97	;'a'
  7475  00EAD8  6E                 	db	110	;'n'
  7476  00EAD9  64                 	db	100	;'d'
  7477  00EADA  20                 	db	32
  7478  00EADB  63                 	db	99	;'c'
  7479  00EADC  6F                 	db	111	;'o'
  7480  00EADD  6E                 	db	110	;'n'
  7481  00EADE  74                 	db	116	;'t'
  7482  00EADF  72                 	db	114	;'r'
  7483  00EAE0  6F                 	db	111	;'o'
  7484  00EAE1  6C                 	db	108	;'l'
  7485  00EAE2  20                 	db	32
  7486  00EAE3  6C                 	db	108	;'l'
  7487  00EAE4  6F                 	db	111	;'o'
  7488  00EAE5  77                 	db	119	;'w'
  7489  00EAE6  20                 	db	32
  7490  00EAE7  6C                 	db	108	;'l'
  7491  00EAE8  65                 	db	101	;'e'
  7492  00EAE9  76                 	db	118	;'v'
  7493  00EAEA  65                 	db	101	;'e'
  7494  00EAEB  6C                 	db	108	;'l'
  7495  00EAEC  20                 	db	32
  7496  00EAED  73                 	db	115	;'s'
  7497  00EAEE  79                 	db	121	;'y'
  7498  00EAEF  73                 	db	115	;'s'
  7499  00EAF0  74                 	db	116	;'t'
  7500  00EAF1  65                 	db	101	;'e'
  7501  00EAF2  6D                 	db	109	;'m'
  7502  00EAF3  20                 	db	32
  7503  00EAF4  66                 	db	102	;'f'
  7504  00EAF5  75                 	db	117	;'u'
  7505  00EAF6  6E                 	db	110	;'n'
  7506  00EAF7  63                 	db	99	;'c'
  7507  00EAF8  74                 	db	116	;'t'
  7508  00EAF9  69                 	db	105	;'i'
  7509  00EAFA  6F                 	db	111	;'o'
  7510  00EAFB  6E                 	db	110	;'n'
  7511  00EAFC  61                 	db	97	;'a'
  7512  00EAFD  6C                 	db	108	;'l'
  7513  00EAFE  69                 	db	105	;'i'
  7514  00EAFF  74                 	db	116	;'t'
  7515  00EB00  79                 	db	121	;'y'
  7516  00EB01  0A                 	db	10
  7517  00EB02  0D                 	db	13
  7518  00EB03  20                 	db	32
  7519  00EB04  20                 	db	32
  7520  00EB05  20                 	db	32
  7521  00EB06  44                 	db	68	;'D'
  7522  00EB07  65                 	db	101	;'e'
  7523  00EB08  76                 	db	118	;'v'
  7524  00EB09  69                 	db	105	;'i'
  7525  00EB0A  63                 	db	99	;'c'
  7526  00EB0B  65                 	db	101	;'e'
  7527  00EB0C  20                 	db	32
  7528  00EB0D  4D                 	db	77	;'M'
  7529  00EB0E  65                 	db	101	;'e'
  7530  00EB0F  61                 	db	97	;'a'
  7531  00EB10  73                 	db	115	;'s'
  7532  00EB11  75                 	db	117	;'u'
  7533  00EB12  72                 	db	114	;'r'
  7534  00EB13  65                 	db	101	;'e'
  7535  00EB14  6D                 	db	109	;'m'
  7536  00EB15  65                 	db	101	;'e'
  7537  00EB16  6E                 	db	110	;'n'
  7538  00EB17  74                 	db	116	;'t'
  7539  00EB18  20                 	db	32
  7540  00EB19  43                 	db	67	;'C'
  7541  00EB1A  6F                 	db	111	;'o'
  7542  00EB1B  6D                 	db	109	;'m'
  7543  00EB1C  6D                 	db	109	;'m'
  7544  00EB1D  61                 	db	97	;'a'
  7545  00EB1E  6E                 	db	110	;'n'
  7546  00EB1F  64                 	db	100	;'d'
  7547  00EB20  73                 	db	115	;'s'
  7548  00EB21  3A                 	db	58	;':'
  7549  00EB22  20                 	db	32
  7550  00EB23  56                 	db	86	;'V'
  7551  00EB24  69                 	db	105	;'i'
  7552  00EB25  65                 	db	101	;'e'
  7553  00EB26  77                 	db	119	;'w'
  7554  00EB27  20                 	db	32
  7555  00EB28  6C                 	db	108	;'l'
  7556  00EB29  6F                 	db	111	;'o'
  7557  00EB2A  77                 	db	119	;'w'
  7558  00EB2B  20                 	db	32
  7559  00EB2C  6C                 	db	108	;'l'
  7560  00EB2D  65                 	db	101	;'e'
  7561  00EB2E  76                 	db	118	;'v'
  7562  00EB2F  65                 	db	101	;'e'
  7563  00EB30  6C                 	db	108	;'l'
  7564  00EB31  20                 	db	32
  7565  00EB32  73                 	db	115	;'s'
  7566  00EB33  79                 	db	121	;'y'
  7567  00EB34  73                 	db	115	;'s'
  7568  00EB35  74                 	db	116	;'t'
  7569  00EB36  65                 	db	101	;'e'
  7570  00EB37  6D                 	db	109	;'m'
  7571  00EB38  20                 	db	32
  7572  00EB39  6D                 	db	109	;'m'
  7573  00EB3A  65                 	db	101	;'e'
  7574  00EB3B  61                 	db	97	;'a'
  7575  00EB3C  73                 	db	115	;'s'
  7576  00EB3D  75                 	db	117	;'u'
  7577  00EB3E  72                 	db	114	;'r'
  7578  00EB3F  65                 	db	101	;'e'
  7579  00EB40  6D                 	db	109	;'m'
  7580  00EB41  65                 	db	101	;'e'
  7581  00EB42  6E                 	db	110	;'n'
  7582  00EB43  74                 	db	116	;'t'
  7583  00EB44  73                 	db	115	;'s'
  7584  00EB45  0A                 	db	10
  7585  00EB46  0D                 	db	13
  7586  00EB47  20                 	db	32
  7587  00EB48  20                 	db	32
  7588  00EB49  20                 	db	32
  7589  00EB4A  50                 	db	80	;'P'
  7590  00EB4B  72                 	db	114	;'r'
  7591  00EB4C  69                 	db	105	;'i'
  7592  00EB4D  6D                 	db	109	;'m'
  7593  00EB4E  61                 	db	97	;'a'
  7594  00EB4F  72                 	db	114	;'r'
  7595  00EB50  79                 	db	121	;'y'
  7596  00EB51  20                 	db	32
  7597  00EB52  4D                 	db	77	;'M'
  7598  00EB53  65                 	db	101	;'e'
  7599  00EB54  61                 	db	97	;'a'
  7600  00EB55  73                 	db	115	;'s'
  7601  00EB56  75                 	db	117	;'u'
  7602  00EB57  72                 	db	114	;'r'
  7603  00EB58  65                 	db	101	;'e'
  7604  00EB59  6D                 	db	109	;'m'
  7605  00EB5A  65                 	db	101	;'e'
  7606  00EB5B  6E                 	db	110	;'n'
  7607  00EB5C  74                 	db	116	;'t'
  7608  00EB5D  20                 	db	32
  7609  00EB5E  43                 	db	67	;'C'
  7610  00EB5F  6F                 	db	111	;'o'
  7611  00EB60  6D                 	db	109	;'m'
  7612  00EB61  6D                 	db	109	;'m'
  7613  00EB62  61                 	db	97	;'a'
  7614  00EB63  6E                 	db	110	;'n'
  7615  00EB64  64                 	db	100	;'d'
  7616  00EB65  73                 	db	115	;'s'
  7617  00EB66  3A                 	db	58	;':'
  7618  00EB67  20                 	db	32
  7619  00EB68  56                 	db	86	;'V'
  7620  00EB69  69                 	db	105	;'i'
  7621  00EB6A  65                 	db	101	;'e'
  7622  00EB6B  77                 	db	119	;'w'
  7623  00EB6C  20                 	db	32
  7624  00EB6D  68                 	db	104	;'h'
  7625  00EB6E  69                 	db	105	;'i'
  7626  00EB6F  67                 	db	103	;'g'
  7627  00EB70  68                 	db	104	;'h'
  7628  00EB71  20                 	db	32
  7629  00EB72  6C                 	db	108	;'l'
  7630  00EB73  65                 	db	101	;'e'
  7631  00EB74  76                 	db	118	;'v'
  7632  00EB75  65                 	db	101	;'e'
  7633  00EB76  6C                 	db	108	;'l'
  7634  00EB77  20                 	db	32
  7635  00EB78  6F                 	db	111	;'o'
  7636  00EB79  75                 	db	117	;'u'
  7637  00EB7A  74                 	db	116	;'t'
  7638  00EB7B  70                 	db	112	;'p'
  7639  00EB7C  75                 	db	117	;'u'
  7640  00EB7D  74                 	db	116	;'t'
  7641  00EB7E  20                 	db	32
  7642  00EB7F  6D                 	db	109	;'m'
  7643  00EB80  65                 	db	101	;'e'
  7644  00EB81  61                 	db	97	;'a'
  7645  00EB82  73                 	db	115	;'s'
  7646  00EB83  75                 	db	117	;'u'
  7647  00EB84  72                 	db	114	;'r'
  7648  00EB85  65                 	db	101	;'e'
  7649  00EB86  6D                 	db	109	;'m'
  7650  00EB87  65                 	db	101	;'e'
  7651  00EB88  6E                 	db	110	;'n'
  7652  00EB89  74                 	db	116	;'t'
  7653  00EB8A  73                 	db	115	;'s'
  7654  00EB8B  20                 	db	32
  7655  00EB8C  61                 	db	97	;'a'
  7656  00EB8D  6E                 	db	110	;'n'
  7657  00EB8E  64                 	db	100	;'d'
  7658  00EB8F  20                 	db	32
  7659  00EB90  63                 	db	99	;'c'
  7660  00EB91  61                 	db	97	;'a'
  7661  00EB92  6C                 	db	108	;'l'
  7662  00EB93  63                 	db	99	;'c'
  7663  00EB94  75                 	db	117	;'u'
  7664  00EB95  6C                 	db	108	;'l'
  7665  00EB96  61                 	db	97	;'a'
  7666  00EB97  74                 	db	116	;'t'
  7667  00EB98  69                 	db	105	;'i'
  7668  00EB99  6F                 	db	111	;'o'
  7669  00EB9A  6E                 	db	110	;'n'
  7670  00EB9B  73                 	db	115	;'s'
  7671  00EB9C  0A                 	db	10
  7672  00EB9D  0D                 	db	13
  7673  00EB9E  20                 	db	32
  7674  00EB9F  20                 	db	32
  7675  00EBA0  20                 	db	32
  7676  00EBA1  4F                 	db	79	;'O'
  7677  00EBA2  75                 	db	117	;'u'
  7678  00EBA3  74                 	db	116	;'t'
  7679  00EBA4  70                 	db	112	;'p'
  7680  00EBA5  75                 	db	117	;'u'
  7681  00EBA6  74                 	db	116	;'t'
  7682  00EBA7  20                 	db	32
  7683  00EBA8  43                 	db	67	;'C'
  7684  00EBA9  6F                 	db	111	;'o'
  7685  00EBAA  6E                 	db	110	;'n'
  7686  00EBAB  74                 	db	116	;'t'
  7687  00EBAC  72                 	db	114	;'r'
  7688  00EBAD  6F                 	db	111	;'o'
  7689  00EBAE  6C                 	db	108	;'l'
  7690  00EBAF  20                 	db	32
  7691  00EBB0  43                 	db	67	;'C'
  7692  00EBB1  6F                 	db	111	;'o'
  7693  00EBB2  6D                 	db	109	;'m'
  7694  00EBB3  6D                 	db	109	;'m'
  7695  00EBB4  61                 	db	97	;'a'
  7696  00EBB5  6E                 	db	110	;'n'
  7697  00EBB6  64                 	db	100	;'d'
  7698  00EBB7  73                 	db	115	;'s'
  7699  00EBB8  3A                 	db	58	;':'
  7700  00EBB9  20                 	db	32
  7701  00EBBA  43                 	db	67	;'C'
  7702  00EBBB  6F                 	db	111	;'o'
  7703  00EBBC  6E                 	db	110	;'n'
  7704  00EBBD  74                 	db	116	;'t'
  7705  00EBBE  72                 	db	114	;'r'
  7706  00EBBF  6F                 	db	111	;'o'
  7707  00EBC0  6C                 	db	108	;'l'
  7708  00EBC1  20                 	db	32
  7709  00EBC2  74                 	db	116	;'t'
  7710  00EBC3  68                 	db	104	;'h'
  7711  00EBC4  65                 	db	101	;'e'
  7712  00EBC5  20                 	db	32
  7713  00EBC6  6F                 	db	111	;'o'
  7714  00EBC7  75                 	db	117	;'u'
  7715  00EBC8  74                 	db	116	;'t'
  7716  00EBC9  70                 	db	112	;'p'
  7717  00EBCA  75                 	db	117	;'u'
  7718  00EBCB  74                 	db	116	;'t'
  7719  00EBCC  20                 	db	32
  7720  00EBCD  73                 	db	115	;'s'
  7721  00EBCE  74                 	db	116	;'t'
  7722  00EBCF  61                 	db	97	;'a'
  7723  00EBD0  74                 	db	116	;'t'
  7724  00EBD1  65                 	db	101	;'e'
  7725  00EBD2  20                 	db	32
  7726  00EBD3  61                 	db	97	;'a'
  7727  00EBD4  6E                 	db	110	;'n'
  7728  00EBD5  64                 	db	100	;'d'
  7729  00EBD6  20                 	db	32
  7730  00EBD7  64                 	db	100	;'d'
  7731  00EBD8  69                 	db	105	;'i'
  7732  00EBD9  6D                 	db	109	;'m'
  7733  00EBDA  6D                 	db	109	;'m'
  7734  00EBDB  69                 	db	105	;'i'
  7735  00EBDC  6E                 	db	110	;'n'
  7736  00EBDD  67                 	db	103	;'g'
  7737  00EBDE  20                 	db	32
  7738  00EBDF  66                 	db	102	;'f'
  7739  00EBE0  65                 	db	101	;'e'
  7740  00EBE1  61                 	db	97	;'a'
  7741  00EBE2  74                 	db	116	;'t'
  7742  00EBE3  75                 	db	117	;'u'
  7743  00EBE4  72                 	db	114	;'r'
  7744  00EBE5  65                 	db	101	;'e'
  7745  00EBE6  73                 	db	115	;'s'
  7746  00EBE7  0A                 	db	10
  7747  00EBE8  0D                 	db	13
  7748  00EBE9  0A                 	db	10
  7749  00EBEA  0D                 	db	13
  7750  00EBEB  27                 	db	39
  7751  00EBEC  48                 	db	72	;'H'
  7752  00EBED  65                 	db	101	;'e'
  7753  00EBEE  6C                 	db	108	;'l'
  7754  00EBEF  70                 	db	112	;'p'
  7755  00EBF0  20                 	db	32
  7756  00EBF1  41                 	db	65	;'A'
  7757  00EBF2  6C                 	db	108	;'l'
  7758  00EBF3  6C                 	db	108	;'l'
  7759  00EBF4  27                 	db	39
  7760  00EBF5  20                 	db	32
  7761  00EBF6  77                 	db	119	;'w'
  7762  00EBF7  69                 	db	105	;'i'
  7763  00EBF8  6C                 	db	108	;'l'
  7764  00EBF9  6C                 	db	108	;'l'
  7765  00EBFA  20                 	db	32
  7766  00EBFB  6C                 	db	108	;'l'
  7767  00EBFC  69                 	db	105	;'i'
  7768  00EBFD  73                 	db	115	;'s'
  7769  00EBFE  74                 	db	116	;'t'
  7770  00EBFF  20                 	db	32
  7771  00EC00  61                 	db	97	;'a'
  7772  00EC01  6C                 	db	108	;'l'
  7773  00EC02  6C                 	db	108	;'l'
  7774  00EC03  20                 	db	32
  7775  00EC04  63                 	db	99	;'c'
  7776  00EC05  6F                 	db	111	;'o'
  7777  00EC06  6D                 	db	109	;'m'
  7778  00EC07  6D                 	db	109	;'m'
  7779  00EC08  61                 	db	97	;'a'
  7780  00EC09  6E                 	db	110	;'n'
  7781  00EC0A  64                 	db	100	;'d'
  7782  00EC0B  73                 	db	115	;'s'
  7783  00EC0C  0A                 	db	10
  7784  00EC0D  0D                 	db	13
  7785  00EC0E  00                 	db	0
  7786  00EC0F                     STR_171:
  7787  00EC0F  20                 	db	32
  7788  00EC10  20                 	db	32
  7789  00EC11  20                 	db	32
  7790  00EC12  20                 	db	32
  7791  00EC13  5F                 	db	95	;'_'
  7792  00EC14  20                 	db	32
  7793  00EC15  20                 	db	32
  7794  00EC16  20                 	db	32
  7795  00EC17  5F                 	db	95	;'_'
  7796  00EC18  5F                 	db	95	;'_'
  7797  00EC19  5F                 	db	95	;'_'
  7798  00EC1A  20                 	db	32
  7799  00EC1B  20                 	db	32
  7800  00EC1C  20                 	db	32
  7801  00EC1D  5F                 	db	95	;'_'
  7802  00EC1E  5F                 	db	95	;'_'
  7803  00EC1F  5F                 	db	95	;'_'
  7804  00EC20  20                 	db	32
  7805  00EC21  20                 	db	32
  7806  00EC22  20                 	db	32
  7807  00EC23  20                 	db	32
  7808  00EC24  20                 	db	32
  7809  00EC25  20                 	db	32
  7810  00EC26  20                 	db	32
  7811  00EC27  20                 	db	32
  7812  00EC28  20                 	db	32
  7813  00EC29  20                 	db	32
  7814  00EC2A  20                 	db	32
  7815  00EC2B  20                 	db	32
  7816  00EC2C  20                 	db	32
  7817  00EC2D  20                 	db	32
  7818  00EC2E  20                 	db	32
  7819  00EC2F  20                 	db	32
  7820  00EC30  20                 	db	32
  7821  00EC31  20                 	db	32
  7822  00EC32  20                 	db	32
  7823  00EC33  20                 	db	32
  7824  00EC34  20                 	db	32
  7825  00EC35  20                 	db	32
  7826  00EC36  5F                 	db	95	;'_'
  7827  00EC37  5F                 	db	95	;'_'
  7828  00EC38  20                 	db	32
  7829  00EC39  20                 	db	32
  7830  00EC3A  5F                 	db	95	;'_'
  7831  00EC3B  5F                 	db	95	;'_'
  7832  00EC3C  20                 	db	32
  7833  00EC3D  20                 	db	32
  7834  00EC3E  20                 	db	32
  7835  00EC3F  20                 	db	32
  7836  00EC40  20                 	db	32
  7837  00EC41  5F                 	db	95	;'_'
  7838  00EC42  20                 	db	32
  7839  00EC43  20                 	db	32
  7840  00EC44  20                 	db	32
  7841  00EC45  20                 	db	32
  7842  00EC46  20                 	db	32
  7843  00EC47  20                 	db	32
  7844  00EC48  20                 	db	32
  7845  00EC49  20                 	db	32
  7846  00EC4A  20                 	db	32
  7847  00EC4B  20                 	db	32
  7848  00EC4C  20                 	db	32
  7849  00EC4D  20                 	db	32
  7850  00EC4E  20                 	db	32
  7851  00EC4F  20                 	db	32
  7852  00EC50  20                 	db	32
  7853  00EC51  20                 	db	32
  7854  00EC52  20                 	db	32
  7855  00EC53  20                 	db	32
  7856  00EC54  20                 	db	32
  7857  00EC55  20                 	db	32
  7858  00EC56  20                 	db	32
  7859  00EC57  20                 	db	32
  7860  00EC58  20                 	db	32
  7861  00EC59  20                 	db	32
  7862  00EC5A  20                 	db	32
  7863  00EC5B  20                 	db	32
  7864  00EC5C  5F                 	db	95	;'_'
  7865  00EC5D  20                 	db	32
  7866  00EC5E  20                 	db	32
  7867  00EC5F  20                 	db	32
  7868  00EC60  5F                 	db	95	;'_'
  7869  00EC61  5F                 	db	95	;'_'
  7870  00EC62  5F                 	db	95	;'_'
  7871  00EC63  20                 	db	32
  7872  00EC64  20                 	db	32
  7873  00EC65  5F                 	db	95	;'_'
  7874  00EC66  20                 	db	32
  7875  00EC67  20                 	db	32
  7876  00EC68  20                 	db	32
  7877  00EC69  20                 	db	32
  7878  00EC6A  20                 	db	32
  7879  00EC6B  20                 	db	32
  7880  00EC6C  0A                 	db	10
  7881  00EC6D  0D                 	db	13
  7882  00EC6E  20                 	db	32
  7883  00EC6F  20                 	db	32
  7884  00EC70  20                 	db	32
  7885  00EC71  2F                 	db	47
  7886  00EC72  5F                 	db	95	;'_'
  7887  00EC73  5C                 	db	92	;'\'
  7888  00EC74  20                 	db	32
  7889  00EC75  2F                 	db	47
  7890  00EC76  20                 	db	32
  7891  00EC77  5F                 	db	95	;'_'
  7892  00EC78  5F                 	db	95	;'_'
  7893  00EC79  7C                 	db	124
  7894  00EC7A  20                 	db	32
  7895  00EC7B  7C                 	db	124
  7896  00EC7C  20                 	db	32
  7897  00EC7D  5F                 	db	95	;'_'
  7898  00EC7E  20                 	db	32
  7899  00EC7F  5C                 	db	92	;'\'
  7900  00EC80  5F                 	db	95	;'_'
  7901  00EC81  5F                 	db	95	;'_'
  7902  00EC82  5F                 	db	95	;'_'
  7903  00EC83  5F                 	db	95	;'_'
  7904  00EC84  5F                 	db	95	;'_'
  7905  00EC85  20                 	db	32
  7906  00EC86  5F                 	db	95	;'_'
  7907  00EC87  5F                 	db	95	;'_'
  7908  00EC88  20                 	db	32
  7909  00EC89  5F                 	db	95	;'_'
  7910  00EC8A  5F                 	db	95	;'_'
  7911  00EC8B  5F                 	db	95	;'_'
  7912  00EC8C  5F                 	db	95	;'_'
  7913  00EC8D  5F                 	db	95	;'_'
  7914  00EC8E  20                 	db	32
  7915  00EC8F  5F                 	db	95	;'_'
  7916  00EC90  20                 	db	32
  7917  00EC91  5F                 	db	95	;'_'
  7918  00EC92  20                 	db	32
  7919  00EC93  20                 	db	32
  7920  00EC94  7C                 	db	124
  7921  00EC95  20                 	db	32
  7922  00EC96  20                 	db	32
  7923  00EC97  5C                 	db	92	;'\'
  7924  00EC98  2F                 	db	47
  7925  00EC99  20                 	db	32
  7926  00EC9A  20                 	db	32
  7927  00EC9B  7C                 	db	124
  7928  00EC9C  5F                 	db	95	;'_'
  7929  00EC9D  5F                 	db	95	;'_'
  7930  00EC9E  5F                 	db	95	;'_'
  7931  00EC9F  7C                 	db	124
  7932  00ECA0  20                 	db	32
  7933  00ECA1  7C                 	db	124
  7934  00ECA2  5F                 	db	95	;'_'
  7935  00ECA3  20                 	db	32
  7936  00ECA4  5F                 	db	95	;'_'
  7937  00ECA5  5F                 	db	95	;'_'
  7938  00ECA6  5F                 	db	95	;'_'
  7939  00ECA7  20                 	db	32
  7940  00ECA8  5F                 	db	95	;'_'
  7941  00ECA9  20                 	db	32
  7942  00ECAA  5F                 	db	95	;'_'
  7943  00ECAB  20                 	db	32
  7944  00ECAC  20                 	db	32
  7945  00ECAD  20                 	db	32
  7946  00ECAE  5F                 	db	95	;'_'
  7947  00ECAF  5F                 	db	95	;'_'
  7948  00ECB0  20                 	db	32
  7949  00ECB1  5F                 	db	95	;'_'
  7950  00ECB2  20                 	db	32
  7951  00ECB3  5F                 	db	95	;'_'
  7952  00ECB4  20                 	db	32
  7953  00ECB5  5F                 	db	95	;'_'
  7954  00ECB6  20                 	db	32
  7955  00ECB7  20                 	db	32
  7956  00ECB8  5F                 	db	95	;'_'
  7957  00ECB9  5F                 	db	95	;'_'
  7958  00ECBA  7C                 	db	124
  7959  00ECBB  20                 	db	32
  7960  00ECBC  7C                 	db	124
  7961  00ECBD  20                 	db	32
  7962  00ECBE  7C                 	db	124
  7963  00ECBF  20                 	db	32
  7964  00ECC0  20                 	db	32
  7965  00ECC1  20                 	db	32
  7966  00ECC2  5C                 	db	92	;'\'
  7967  00ECC3  28                 	db	40
  7968  00ECC4  5F                 	db	95	;'_'
  7969  00ECC5  29                 	db	41
  7970  00ECC6  5F                 	db	95	;'_'
  7971  00ECC7  20                 	db	32
  7972  00ECC8  5F                 	db	95	;'_'
  7973  00ECC9  5F                 	db	95	;'_'
  7974  00ECCA  20                 	db	32
  7975  00ECCB  20                 	db	32
  7976  00ECCC  5F                 	db	95	;'_'
  7977  00ECCD  20                 	db	32
  7978  00ECCE  5F                 	db	95	;'_'
  7979  00ECCF  5F                 	db	95	;'_'
  7980  00ECD0  20                 	db	32
  7981  00ECD1  20                 	db	32
  7982  00ECD2  5F                 	db	95	;'_'
  7983  00ECD3  5F                 	db	95	;'_'
  7984  00ECD4  5F                 	db	95	;'_'
  7985  00ECD5  20                 	db	32
  7986  00ECD6  5F                 	db	95	;'_'
  7987  00ECD7  20                 	db	32
  7988  00ECD8  5F                 	db	95	;'_'
  7989  00ECD9  20                 	db	32
  7990  00ECDA  0A                 	db	10
  7991  00ECDB  0D                 	db	13
  7992  00ECDC  20                 	db	32
  7993  00ECDD  20                 	db	32
  7994  00ECDE  2F                 	db	47
  7995  00ECDF  20                 	db	32
  7996  00ECE0  5F                 	db	95	;'_'
  7997  00ECE1  20                 	db	32
  7998  00ECE2  5C                 	db	92	;'\'
  7999  00ECE3  20                 	db	32
  8000  00ECE4  28                 	db	40
  8001  00ECE5  5F                 	db	95	;'_'
  8002  00ECE6  5F                 	db	95	;'_'
  8003  00ECE7  20                 	db	32
  8004  00ECE8  20                 	db	32
  8005  00ECE9  7C                 	db	124
  8006  00ECEA  20                 	db	32
  8007  00ECEB  20                 	db	32
  8008  00ECEC  5F                 	db	95	;'_'
  8009  00ECED  2F                 	db	47
  8010  00ECEE  20                 	db	32
  8011  00ECEF  5F                 	db	95	;'_'
  8012  00ECF0  20                 	db	32
  8013  00ECF1  5C                 	db	92	;'\'
  8014  00ECF2  20                 	db	32
  8015  00ECF3  56                 	db	86	;'V'
  8016  00ECF4  20                 	db	32
  8017  00ECF5  20                 	db	32
  8018  00ECF6  56                 	db	86	;'V'
  8019  00ECF7  20                 	db	32
  8020  00ECF8  2F                 	db	47
  8021  00ECF9  20                 	db	32
  8022  00ECFA  2D                 	db	45
  8023  00ECFB  5F                 	db	95	;'_'
  8024  00ECFC  29                 	db	41
  8025  00ECFD  20                 	db	32
  8026  00ECFE  27                 	db	39
  8027  00ECFF  5F                 	db	95	;'_'
  8028  00ED00  7C                 	db	124
  8029  00ED01  20                 	db	32
  8030  00ED02  7C                 	db	124
  8031  00ED03  20                 	db	32
  8032  00ED04  7C                 	db	124
  8033  00ED05  5C                 	db	92	;'\'
  8034  00ED06  2F                 	db	47
  8035  00ED07  7C                 	db	124
  8036  00ED08  20                 	db	32
  8037  00ED09  2F                 	db	47
  8038  00ED0A  20                 	db	32
  8039  00ED0B  2D                 	db	45
  8040  00ED0C  5F                 	db	95	;'_'
  8041  00ED0D  29                 	db	41
  8042  00ED0E  20                 	db	32
  8043  00ED0F  20                 	db	32
  8044  00ED10  5F                 	db	95	;'_'
  8045  00ED11  2F                 	db	47
  8046  00ED12  20                 	db	32
  8047  00ED13  2D                 	db	45
  8048  00ED14  5F                 	db	95	;'_'
  8049  00ED15  29                 	db	41
  8050  00ED16  20                 	db	32
  8051  00ED17  27                 	db	39
  8052  00ED18  5F                 	db	95	;'_'
  8053  00ED19  7C                 	db	124
  8054  00ED1A  20                 	db	32
  8055  00ED1B  2F                 	db	47
  8056  00ED1C  20                 	db	32
  8057  00ED1D  5F                 	db	95	;'_'
  8058  00ED1E  60                 	db	96	;'`'
  8059  00ED1F  20                 	db	32
  8060  00ED20  7C                 	db	124
  8061  00ED21  20                 	db	32
  8062  00ED22  27                 	db	39
  8063  00ED23  20                 	db	32
  8064  00ED24  5C                 	db	92	;'\'
  8065  00ED25  2F                 	db	47
  8066  00ED26  20                 	db	32
  8067  00ED27  5F                 	db	95	;'_'
  8068  00ED28  60                 	db	96	;'`'
  8069  00ED29  20                 	db	32
  8070  00ED2A  7C                 	db	124
  8071  00ED2B  20                 	db	32
  8072  00ED2C  7C                 	db	124
  8073  00ED2D  20                 	db	32
  8074  00ED2E  7C                 	db	124
  8075  00ED2F  29                 	db	41
  8076  00ED30  20                 	db	32
  8077  00ED31  7C                 	db	124
  8078  00ED32  20                 	db	32
  8079  00ED33  7C                 	db	124
  8080  00ED34  20                 	db	32
  8081  00ED35  27                 	db	39
  8082  00ED36  20                 	db	32
  8083  00ED37  20                 	db	32
  8084  00ED38  5C                 	db	92	;'\'
  8085  00ED39  7C                 	db	124
  8086  00ED3A  20                 	db	32
  8087  00ED3B  27                 	db	39
  8088  00ED3C  20                 	db	32
  8089  00ED3D  20                 	db	32
  8090  00ED3E  5C                 	db	92	;'\'
  8091  00ED3F  2F                 	db	47
  8092  00ED40  20                 	db	32
  8093  00ED41  2D                 	db	45
  8094  00ED42  5F                 	db	95	;'_'
  8095  00ED43  29                 	db	41
  8096  00ED44  20                 	db	32
  8097  00ED45  27                 	db	39
  8098  00ED46  5F                 	db	95	;'_'
  8099  00ED47  7C                 	db	124
  8100  00ED48  0A                 	db	10
  8101  00ED49  0D                 	db	13
  8102  00ED4A  20                 	db	32
  8103  00ED4B  2F                 	db	47
  8104  00ED4C  5F                 	db	95	;'_'
  8105  00ED4D  2F                 	db	47
  8106  00ED4E  20                 	db	32
  8107  00ED4F  5C                 	db	92	;'\'
  8108  00ED50  5F                 	db	95	;'_'
  8109  00ED51  5C                 	db	92	;'\'
  8110  00ED52  5F                 	db	95	;'_'
  8111  00ED53  5F                 	db	95	;'_'
  8112  00ED54  5F                 	db	95	;'_'
  8113  00ED55  7C                 	db	124
  8114  00ED56  20                 	db	32
  8115  00ED57  7C                 	db	124
  8116  00ED58  5F                 	db	95	;'_'
  8117  00ED59  7C                 	db	124
  8118  00ED5A  20                 	db	32
  8119  00ED5B  5C                 	db	92	;'\'
  8120  00ED5C  5F                 	db	95	;'_'
  8121  00ED5D  5F                 	db	95	;'_'
  8122  00ED5E  5F                 	db	95	;'_'
  8123  00ED5F  2F                 	db	47
  8124  00ED60  5C                 	db	92	;'\'
  8125  00ED61  5F                 	db	95	;'_'
  8126  00ED62  2F                 	db	47
  8127  00ED63  5C                 	db	92	;'\'
  8128  00ED64  5F                 	db	95	;'_'
  8129  00ED65  2F                 	db	47
  8130  00ED66  5C                 	db	92	;'\'
  8131  00ED67  5F                 	db	95	;'_'
  8132  00ED68  5F                 	db	95	;'_'
  8133  00ED69  5F                 	db	95	;'_'
  8134  00ED6A  7C                 	db	124
  8135  00ED6B  5F                 	db	95	;'_'
  8136  00ED6C  7C                 	db	124
  8137  00ED6D  20                 	db	32
  8138  00ED6E  20                 	db	32
  8139  00ED6F  20                 	db	32
  8140  00ED70  7C                 	db	124
  8141  00ED71  5F                 	db	95	;'_'
  8142  00ED72  7C                 	db	124
  8143  00ED73  20                 	db	32
  8144  00ED74  20                 	db	32
  8145  00ED75  7C                 	db	124
  8146  00ED76  5F                 	db	95	;'_'
  8147  00ED77  5C                 	db	92	;'\'
  8148  00ED78  5F                 	db	95	;'_'
  8149  00ED79  5F                 	db	95	;'_'
  8150  00ED7A  5F                 	db	95	;'_'
  8151  00ED7B  7C                 	db	124
  8152  00ED7C  5C                 	db	92	;'\'
  8153  00ED7D  5F                 	db	95	;'_'
  8154  00ED7E  5F                 	db	95	;'_'
  8155  00ED7F  5C                 	db	92	;'\'
  8156  00ED80  5F                 	db	95	;'_'
  8157  00ED81  5F                 	db	95	;'_'
  8158  00ED82  5F                 	db	95	;'_'
  8159  00ED83  7C                 	db	124
  8160  00ED84  5F                 	db	95	;'_'
  8161  00ED85  7C                 	db	124
  8162  00ED86  20                 	db	32
  8163  00ED87  20                 	db	32
  8164  00ED88  20                 	db	32
  8165  00ED89  5C                 	db	92	;'\'
  8166  00ED8A  5F                 	db	95	;'_'
  8167  00ED8B  5F                 	db	95	;'_'
  8168  00ED8C  2C                 	db	44
  8169  00ED8D  5F                 	db	95	;'_'
  8170  00ED8E  7C                 	db	124
  8171  00ED8F  5F                 	db	95	;'_'
  8172  00ED90  7C                 	db	124
  8173  00ED91  7C                 	db	124
  8174  00ED92  5F                 	db	95	;'_'
  8175  00ED93  5C                 	db	92	;'\'
  8176  00ED94  5F                 	db	95	;'_'
  8177  00ED95  5F                 	db	95	;'_'
  8178  00ED96  2C                 	db	44
  8179  00ED97  5F                 	db	95	;'_'
  8180  00ED98  7C                 	db	124
  8181  00ED99  20                 	db	32
  8182  00ED9A  7C                 	db	124
  8183  00ED9B  5F                 	db	95	;'_'
  8184  00ED9C  5F                 	db	95	;'_'
  8185  00ED9D  5F                 	db	95	;'_'
  8186  00ED9E  2F                 	db	47
  8187  00ED9F  7C                 	db	124
  8188  00EDA0  5F                 	db	95	;'_'
  8189  00EDA1  7C                 	db	124
  8190  00EDA2  5F                 	db	95	;'_'
  8191  00EDA3  7C                 	db	124
  8192  00EDA4  5F                 	db	95	;'_'
  8193  00EDA5  7C                 	db	124
  8194  00EDA6  5F                 	db	95	;'_'
  8195  00EDA7  7C                 	db	124
  8196  00EDA8  5F                 	db	95	;'_'
  8197  00EDA9  7C                 	db	124
  8198  00EDAA  5F                 	db	95	;'_'
  8199  00EDAB  7C                 	db	124
  8200  00EDAC  5F                 	db	95	;'_'
  8201  00EDAD  5C                 	db	92	;'\'
  8202  00EDAE  5F                 	db	95	;'_'
  8203  00EDAF  5F                 	db	95	;'_'
  8204  00EDB0  5F                 	db	95	;'_'
  8205  00EDB1  7C                 	db	124
  8206  00EDB2  5F                 	db	95	;'_'
  8207  00EDB3  7C                 	db	124
  8208  00EDB4  20                 	db	32
  8209  00EDB5  20                 	db	32
  8210  00EDB6  0A                 	db	10
  8211  00EDB7  0D                 	db	13
  8212  00EDB8  00                 	db	0
  8213  00EDB9  20                 	db	32
  8214  00EDBA  20                 	db	32
  8215  00EDBB  20                 	db	32
  8216  00EDBC  20                 	db	32
  8217  00EDBD  42                 	db	66	;'B'
  8218  00EDBE  6F                 	db	111	;'o'
  8219  00EDBF  6F                 	db	111	;'o'
  8220  00EDC0  74                 	db	116	;'t'
  8221  00EDC1  20                 	db	32
  8222  00EDC2  63                 	db	99	;'c'
  8223  00EDC3  6F                 	db	111	;'o'
  8224  00EDC4  6D                 	db	109	;'m'
  8225  00EDC5  70                 	db	112	;'p'
  8226  00EDC6  6C                 	db	108	;'l'
  8227  00EDC7  65                 	db	101	;'e'
  8228  00EDC8  74                 	db	116	;'t'
  8229  00EDC9  65                 	db	101	;'e'
  8230  00EDCA  0A                 	db	10
  8231  00EDCB  0D                 	db	13
  8232  00EDCC  20                 	db	32
  8233  00EDCD  20                 	db	32
  8234  00EDCE  20                 	db	32
  8235  00EDCF  20                 	db	32
  8236  00EDD0  50                 	db	80	;'P'
  8237  00EDD1  49                 	db	73	;'I'
  8238  00EDD2  43                 	db	67	;'C'
  8239  00EDD3  31                 	db	49	;'1'
  8240  00EDD4  38                 	db	56	;'8'
  8241  00EDD5  46                 	db	70	;'F'
  8242  00EDD6  36                 	db	54	;'6'
  8243  00EDD7  37                 	db	55	;'7'
  8244  00EDD8  4B                 	db	75	;'K'
  8245  00EDD9  34                 	db	52	;'4'
  8246  00EDDA  30                 	db	48	;'0'
  8247  00EDDB  20                 	db	32
  8248  00EDDC  6D                 	db	109	;'m'
  8249  00EDDD  54                 	db	84	;'T'
  8250  00EDDE  6F                 	db	111	;'o'
  8251  00EDDF  75                 	db	117	;'u'
  8252  00EDE0  63                 	db	99	;'c'
  8253  00EDE1  68                 	db	104	;'h'
  8254  00EDE2  20                 	db	32
  8255  00EDE3  54                 	db	84	;'T'
  8256  00EDE4  65                 	db	101	;'e'
  8257  00EDE5  73                 	db	115	;'s'
  8258  00EDE6  74                 	db	116	;'t'
  8259  00EDE7  20                 	db	32
  8260  00EDE8  42                 	db	66	;'B'
  8261  00EDE9  6F                 	db	111	;'o'
  8262  00EDEA  61                 	db	97	;'a'
  8263  00EDEB  72                 	db	114	;'r'
  8264  00EDEC  64                 	db	100	;'d'
  8265  00EDED  0A                 	db	10
  8266  00EDEE  0D                 	db	13
  8267  00EDEF  20                 	db	32
  8268  00EDF0  20                 	db	32
  8269  00EDF1  20                 	db	32
  8270  00EDF2  20                 	db	32
  8271  00EDF3  45                 	db	69	;'E'
  8272  00EDF4  76                 	db	118	;'v'
  8273  00EDF5  61                 	db	97	;'a'
  8274  00EDF6  6C                 	db	108	;'l'
  8275  00EDF7  75                 	db	117	;'u'
  8276  00EDF8  61                 	db	97	;'a'
  8277  00EDF9  74                 	db	116	;'t'
  8278  00EDFA  65                 	db	101	;'e'
  8279  00EDFB  73                 	db	115	;'s'
  8280  00EDFC  20                 	db	32
  8281  00EDFD  74                 	db	116	;'t'
  8282  00EDFE  68                 	db	104	;'h'
  8283  00EDFF  65                 	db	101	;'e'
  8284  00EE00  20                 	db	32
  8285  00EE01  6D                 	db	109	;'m'
  8286  00EE02  54                 	db	84	;'T'
  8287  00EE03  6F                 	db	111	;'o'
  8288  00EE04  75                 	db	117	;'u'
  8289  00EE05  63                 	db	99	;'c'
  8290  00EE06  68                 	db	104	;'h'
  8291  00EE07  20                 	db	32
  8292  00EE08  63                 	db	99	;'c'
  8293  00EE09  61                 	db	97	;'a'
  8294  00EE0A  70                 	db	112	;'p'
  8295  00EE0B  61                 	db	97	;'a'
  8296  00EE0C  63                 	db	99	;'c'
  8297  00EE0D  69                 	db	105	;'i'
  8298  00EE0E  74                 	db	116	;'t'
  8299  00EE0F  69                 	db	105	;'i'
  8300  00EE10  76                 	db	118	;'v'
  8301  00EE11  65                 	db	101	;'e'
  8302  00EE12  20                 	db	32
  8303  00EE13  74                 	db	116	;'t'
  8304  00EE14  6F                 	db	111	;'o'
  8305  00EE15  75                 	db	117	;'u'
  8306  00EE16  63                 	db	99	;'c'
  8307  00EE17  68                 	db	104	;'h'
  8308  00EE18  20                 	db	32
  8309  00EE19  6C                 	db	108	;'l'
  8310  00EE1A  69                 	db	105	;'i'
  8311  00EE1B  62                 	db	98	;'b'
  8312  00EE1C  72                 	db	114	;'r'
  8313  00EE1D  61                 	db	97	;'a'
  8314  00EE1E  72                 	db	114	;'r'
  8315  00EE1F  79                 	db	121	;'y'
  8316  00EE20  20                 	db	32
  8317  00EE21  64                 	db	100	;'d'
  8318  00EE22  69                 	db	105	;'i'
  8319  00EE23  73                 	db	115	;'s'
  8320  00EE24  74                 	db	116	;'t'
  8321  00EE25  72                 	db	114	;'r'
  8322  00EE26  69                 	db	105	;'i'
  8323  00EE27  62                 	db	98	;'b'
  8324  00EE28  75                 	db	117	;'u'
  8325  00EE29  74                 	db	116	;'t'
  8326  00EE2A  65                 	db	101	;'e'
  8327  00EE2B  64                 	db	100	;'d'
  8328  00EE2C  20                 	db	32
  8329  00EE2D  62                 	db	98	;'b'
  8330  00EE2E  79                 	db	121	;'y'
  8331  00EE2F  20                 	db	32
  8332  00EE30  4D                 	db	77	;'M'
  8333  00EE31  69                 	db	105	;'i'
  8334  00EE32  63                 	db	99	;'c'
  8335  00EE33  72                 	db	114	;'r'
  8336  00EE34  6F                 	db	111	;'o'
  8337  00EE35  63                 	db	99	;'c'
  8338  00EE36  68                 	db	104	;'h'
  8339  00EE37  69                 	db	105	;'i'
  8340  00EE38  70                 	db	112	;'p'
  8341  00EE39  0A                 	db	10
  8342  00EE3A  0D                 	db	13
  8343  00EE3B  20                 	db	32
  8344  00EE3C  20                 	db	32
  8345  00EE3D  20                 	db	32
  8346  00EE3E  20                 	db	32
  8347  00EE3F  53                 	db	83	;'S'
  8348  00EE40  65                 	db	101	;'e'
  8349  00EE41  74                 	db	116	;'t'
  8350  00EE42  73                 	db	115	;'s'
  8351  00EE43  20                 	db	32
  8352  00EE44  74                 	db	116	;'t'
  8353  00EE45  68                 	db	104	;'h'
  8354  00EE46  65                 	db	101	;'e'
  8355  00EE47  20                 	db	32
  8356  00EE48  73                 	db	115	;'s'
  8357  00EE49  74                 	db	116	;'t'
  8358  00EE4A  61                 	db	97	;'a'
  8359  00EE4B  74                 	db	116	;'t'
  8360  00EE4C  65                 	db	101	;'e'
  8361  00EE4D  20                 	db	32
  8362  00EE4E  6F                 	db	111	;'o'
  8363  00EE4F  66                 	db	102	;'f'
  8364  00EE50  20                 	db	32
  8365  00EE51  66                 	db	102	;'f'
  8366  00EE52  69                 	db	105	;'i'
  8367  00EE53  76                 	db	118	;'v'
  8368  00EE54  65                 	db	101	;'e'
  8369  00EE55  20                 	db	32
  8370  00EE56  4C                 	db	76	;'L'
  8371  00EE57  45                 	db	69	;'E'
  8372  00EE58  44                 	db	68	;'D'
  8373  00EE59  73                 	db	115	;'s'
  8374  00EE5A  20                 	db	32
  8375  00EE5B  62                 	db	98	;'b'
  8376  00EE5C  61                 	db	97	;'a'
  8377  00EE5D  73                 	db	115	;'s'
  8378  00EE5E  65                 	db	101	;'e'
  8379  00EE5F  64                 	db	100	;'d'
  8380  00EE60  20                 	db	32
  8381  00EE61  6F                 	db	111	;'o'
  8382  00EE62  6E                 	db	110	;'n'
  8383  00EE63  20                 	db	32
  8384  00EE64  6D                 	db	109	;'m'
  8385  00EE65  54                 	db	84	;'T'
  8386  00EE66  6F                 	db	111	;'o'
  8387  00EE67  75                 	db	117	;'u'
  8388  00EE68  63                 	db	99	;'c'
  8389  00EE69  68                 	db	104	;'h'
  8390  00EE6A  20                 	db	32
  8391  00EE6B  63                 	db	99	;'c'
  8392  00EE6C  61                 	db	97	;'a'
  8393  00EE6D  70                 	db	112	;'p'
  8394  00EE6E  61                 	db	97	;'a'
  8395  00EE6F  63                 	db	99	;'c'
  8396  00EE70  69                 	db	105	;'i'
  8397  00EE71  74                 	db	116	;'t'
  8398  00EE72  69                 	db	105	;'i'
  8399  00EE73  76                 	db	118	;'v'
  8400  00EE74  65                 	db	101	;'e'
  8401  00EE75  20                 	db	32
  8402  00EE76  70                 	db	112	;'p'
  8403  00EE77  75                 	db	117	;'u'
  8404  00EE78  73                 	db	115	;'s'
  8405  00EE79  68                 	db	104	;'h'
  8406  00EE7A  62                 	db	98	;'b'
  8407  00EE7B  75                 	db	117	;'u'
  8408  00EE7C  74                 	db	116	;'t'
  8409  00EE7D  74                 	db	116	;'t'
  8410  00EE7E  6F                 	db	111	;'o'
  8411  00EE7F  6E                 	db	110	;'n'
  8412  00EE80  73                 	db	115	;'s'
  8413  00EE81  0A                 	db	10
  8414  00EE82  0D                 	db	13
  8415  00EE83  20                 	db	32
  8416  00EE84  20                 	db	32
  8417  00EE85  20                 	db	32
  8418  00EE86  20                 	db	32
  8419  00EE87  42                 	db	66	;'B'
  8420  00EE88  61                 	db	97	;'a'
  8421  00EE89  75                 	db	117	;'u'
  8422  00EE8A  64                 	db	100	;'d'
  8423  00EE8B  20                 	db	32
  8424  00EE8C  72                 	db	114	;'r'
  8425  00EE8D  61                 	db	97	;'a'
  8426  00EE8E  74                 	db	116	;'t'
  8427  00EE8F  65                 	db	101	;'e'
  8428  00EE90  3A                 	db	58	;':'
  8429  00EE91  20                 	db	32
  8430  00EE92  31                 	db	49	;'1'
  8431  00EE93  31                 	db	49	;'1'
  8432  00EE94  35                 	db	53	;'5'
  8433  00EE95  32                 	db	50	;'2'
  8434  00EE96  30                 	db	48	;'0'
  8435  00EE97  30                 	db	48	;'0'
  8436  00EE98  20                 	db	32
  8437  00EE99  62                 	db	98	;'b'
  8438  00EE9A  70                 	db	112	;'p'
  8439  00EE9B  73                 	db	115	;'s'
  8440  00EE9C  0A                 	db	10
  8441  00EE9D  0D                 	db	13
  8442  00EE9E  20                 	db	32
  8443  00EE9F  20                 	db	32
  8444  00EEA0  20                 	db	32
  8445  00EEA1  20                 	db	32
  8446  00EEA2  4E                 	db	78	;'N'
  8447  00EEA3  6F                 	db	111	;'o'
  8448  00EEA4  20                 	db	32
  8449  00EEA5  70                 	db	112	;'p'
  8450  00EEA6  61                 	db	97	;'a'
  8451  00EEA7  72                 	db	114	;'r'
  8452  00EEA8  69                 	db	105	;'i'
  8453  00EEA9  74                 	db	116	;'t'
  8454  00EEAA  79                 	db	121	;'y'
  8455  00EEAB  2C                 	db	44
  8456  00EEAC  20                 	db	32
  8457  00EEAD  38                 	db	56	;'8'
  8458  00EEAE  20                 	db	32
  8459  00EEAF  62                 	db	98	;'b'
  8460  00EEB0  69                 	db	105	;'i'
  8461  00EEB1  74                 	db	116	;'t'
  8462  00EEB2  73                 	db	115	;'s'
  8463  00EEB3  2C                 	db	44
  8464  00EEB4  20                 	db	32
  8465  00EEB5  6E                 	db	110	;'n'
  8466  00EEB6  6F                 	db	111	;'o'
  8467  00EEB7  20                 	db	32
  8468  00EEB8  66                 	db	102	;'f'
  8469  00EEB9  6C                 	db	108	;'l'
  8470  00EEBA  6F                 	db	111	;'o'
  8471  00EEBB  77                 	db	119	;'w'
  8472  00EEBC  20                 	db	32
  8473  00EEBD  63                 	db	99	;'c'
  8474  00EEBE  6F                 	db	111	;'o'
  8475  00EEBF  6E                 	db	110	;'n'
  8476  00EEC0  74                 	db	116	;'t'
  8477  00EEC1  72                 	db	114	;'r'
  8478  00EEC2  6F                 	db	111	;'o'
  8479  00EEC3  6C                 	db	108	;'l'
  8480  00EEC4  2C                 	db	44
  8481  00EEC5  20                 	db	32
  8482  00EEC6  31                 	db	49	;'1'
  8483  00EEC7  20                 	db	32
  8484  00EEC8  73                 	db	115	;'s'
  8485  00EEC9  74                 	db	116	;'t'
  8486  00EECA  6F                 	db	111	;'o'
  8487  00EECB  70                 	db	112	;'p'
  8488  00EECC  20                 	db	32
  8489  00EECD  62                 	db	98	;'b'
  8490  00EECE  69                 	db	105	;'i'
  8491  00EECF  74                 	db	116	;'t'
  8492  00EED0  0A                 	db	10
  8493  00EED1  0D                 	db	13
  8494  00EED2  20                 	db	32
  8495  00EED3  20                 	db	32
  8496  00EED4  20                 	db	32
  8497  00EED5  20                 	db	32
  8498  00EED6  43                 	db	67	;'C'
  8499  00EED7  6F                 	db	111	;'o'
  8500  00EED8  6D                 	db	109	;'m'
  8501  00EED9  6D                 	db	109	;'m'
  8502  00EEDA  61                 	db	97	;'a'
  8503  00EEDB  6E                 	db	110	;'n'
  8504  00EEDC  64                 	db	100	;'d'
  8505  00EEDD  73                 	db	115	;'s'
  8506  00EEDE  20                 	db	32
  8507  00EEDF  61                 	db	97	;'a'
  8508  00EEE0  72                 	db	114	;'r'
  8509  00EEE1  65                 	db	101	;'e'
  8510  00EEE2  20                 	db	32
  8511  00EEE3  63                 	db	99	;'c'
  8512  00EEE4  61                 	db	97	;'a'
  8513  00EEE5  73                 	db	115	;'s'
  8514  00EEE6  65                 	db	101	;'e'
  8515  00EEE7  20                 	db	32
  8516  00EEE8  73                 	db	115	;'s'
  8517  00EEE9  65                 	db	101	;'e'
  8518  00EEEA  6E                 	db	110	;'n'
  8519  00EEEB  73                 	db	115	;'s'
  8520  00EEEC  69                 	db	105	;'i'
  8521  00EEED  74                 	db	116	;'t'
  8522  00EEEE  69                 	db	105	;'i'
  8523  00EEEF  76                 	db	118	;'v'
  8524  00EEF0  65                 	db	101	;'e'
  8525  00EEF1  0A                 	db	10
  8526  00EEF2  0D                 	db	13
  8527  00EEF3  20                 	db	32
  8528  00EEF4  20                 	db	32
  8529  00EEF5  20                 	db	32
  8530  00EEF6  20                 	db	32
  8531  00EEF7  45                 	db	69	;'E'
  8532  00EEF8  6E                 	db	110	;'n'
  8533  00EEF9  74                 	db	116	;'t'
  8534  00EEFA  65                 	db	101	;'e'
  8535  00EEFB  72                 	db	114	;'r'
  8536  00EEFC  20                 	db	32
  8537  00EEFD  61                 	db	97	;'a'
  8538  00EEFE  20                 	db	32
  8539  00EEFF  63                 	db	99	;'c'
  8540  00EF00  6F                 	db	111	;'o'
  8541  00EF01  6D                 	db	109	;'m'
  8542  00EF02  6D                 	db	109	;'m'
  8543  00EF03  61                 	db	97	;'a'
  8544  00EF04  6E                 	db	110	;'n'
  8545  00EF05  64                 	db	100	;'d'
  8546  00EF06  2C                 	db	44
  8547  00EF07  20                 	db	32
  8548  00EF08  6F                 	db	111	;'o'
  8549  00EF09  72                 	db	114	;'r'
  8550  00EF0A  20                 	db	32
  8551  00EF0B  65                 	db	101	;'e'
  8552  00EF0C  6E                 	db	110	;'n'
  8553  00EF0D  74                 	db	116	;'t'
  8554  00EF0E  65                 	db	101	;'e'
  8555  00EF0F  72                 	db	114	;'r'
  8556  00EF10  20                 	db	32
  8557  00EF11  48                 	db	72	;'H'
  8558  00EF12  65                 	db	101	;'e'
  8559  00EF13  6C                 	db	108	;'l'
  8560  00EF14  70                 	db	112	;'p'
  8561  00EF15  20                 	db	32
  8562  00EF16  66                 	db	102	;'f'
  8563  00EF17  6F                 	db	111	;'o'
  8564  00EF18  72                 	db	114	;'r'
  8565  00EF19  20                 	db	32
  8566  00EF1A  6C                 	db	108	;'l'
  8567  00EF1B  69                 	db	105	;'i'
  8568  00EF1C  73                 	db	115	;'s'
  8569  00EF1D  74                 	db	116	;'t'
  8570  00EF1E  20                 	db	32
  8571  00EF1F  6F                 	db	111	;'o'
  8572  00EF20  66                 	db	102	;'f'
  8573  00EF21  20                 	db	32
  8574  00EF22  63                 	db	99	;'c'
  8575  00EF23  6F                 	db	111	;'o'
  8576  00EF24  6D                 	db	109	;'m'
  8577  00EF25  6D                 	db	109	;'m'
  8578  00EF26  61                 	db	97	;'a'
  8579  00EF27  6E                 	db	110	;'n'
  8580  00EF28  64                 	db	100	;'d'
  8581  00EF29  73                 	db	115	;'s'
  8582  00EF2A  0A                 	db	10
  8583  00EF2B  0D                 	db	13
  8584  00EF2C  00                 	db	0
  8585  00EF2D                     STR_109:
  8586  00EF2D  57                 	db	87	;'W'
  8587  00EF2E  41                 	db	65	;'A'
  8588  00EF2F  52                 	db	82	;'R'
  8589  00EF30  4E                 	db	78	;'N'
  8590  00EF31  49                 	db	73	;'I'
  8591  00EF32  4E                 	db	78	;'N'
  8592  00EF33  47                 	db	71	;'G'
  8593  00EF34  3A                 	db	58	;':'
  8594  00EF35  20                 	db	32
  8595  00EF36  55                 	db	85	;'U'
  8596  00EF37  73                 	db	115	;'s'
  8597  00EF38  69                 	db	105	;'i'
  8598  00EF39  6E                 	db	110	;'n'
  8599  00EF3A  67                 	db	103	;'g'
  8600  00EF3B  20                 	db	32
  8601  00EF3C  74                 	db	116	;'t'
  8602  00EF3D  68                 	db	104	;'h'
  8603  00EF3E  65                 	db	101	;'e'
  8604  00EF3F  20                 	db	32
  8605  00EF40  64                 	db	100	;'d'
  8606  00EF41  69                 	db	105	;'i'
  8607  00EF42  6D                 	db	109	;'m'
  8608  00EF43  6D                 	db	109	;'m'
  8609  00EF44  69                 	db	105	;'i'
  8610  00EF45  6E                 	db	110	;'n'
  8611  00EF46  67                 	db	103	;'g'
  8612  00EF47  20                 	db	32
  8613  00EF48  66                 	db	102	;'f'
  8614  00EF49  65                 	db	101	;'e'
  8615  00EF4A  61                 	db	97	;'a'
  8616  00EF4B  74                 	db	116	;'t'
  8617  00EF4C  75                 	db	117	;'u'
  8618  00EF4D  72                 	db	114	;'r'
  8619  00EF4E  65                 	db	101	;'e'
  8620  00EF4F  20                 	db	32
  8621  00EF50  77                 	db	119	;'w'
  8622  00EF51  69                 	db	105	;'i'
  8623  00EF52  74                 	db	116	;'t'
  8624  00EF53  68                 	db	104	;'h'
  8625  00EF54  20                 	db	32
  8626  00EF55  6C                 	db	108	;'l'
  8627  00EF56  6F                 	db	111	;'o'
  8628  00EF57  61                 	db	97	;'a'
  8629  00EF58  64                 	db	100	;'d'
  8630  00EF59  20                 	db	32
  8631  00EF5A  64                 	db	100	;'d'
  8632  00EF5B  65                 	db	101	;'e'
  8633  00EF5C  76                 	db	118	;'v'
  8634  00EF5D  69                 	db	105	;'i'
  8635  00EF5E  63                 	db	99	;'c'
  8636  00EF5F  65                 	db	101	;'e'
  8637  00EF60  73                 	db	115	;'s'
  8638  00EF61  20                 	db	32
  8639  00EF62  6F                 	db	111	;'o'
  8640  00EF63  74                 	db	116	;'t'
  8641  00EF64  68                 	db	104	;'h'
  8642  00EF65  65                 	db	101	;'e'
  8643  00EF66  72                 	db	114	;'r'
  8644  00EF67  20                 	db	32
  8645  00EF68  74                 	db	116	;'t'
  8646  00EF69  68                 	db	104	;'h'
  8647  00EF6A  61                 	db	97	;'a'
  8648  00EF6B  6E                 	db	110	;'n'
  8649  00EF6C  20                 	db	32
  8650  00EF6D  61                 	db	97	;'a'
  8651  00EF6E  20                 	db	32
  8652  00EF6F  6C                 	db	108	;'l'
  8653  00EF70  69                 	db	105	;'i'
  8654  00EF71  67                 	db	103	;'g'
  8655  00EF72  68                 	db	104	;'h'
  8656  00EF73  74                 	db	116	;'t'
  8657  00EF74  20                 	db	32
  8658  00EF75  62                 	db	98	;'b'
  8659  00EF76  75                 	db	117	;'u'
  8660  00EF77  6C                 	db	108	;'l'
  8661  00EF78  62                 	db	98	;'b'
  8662  00EF79  20                 	db	32
  8663  00EF7A  63                 	db	99	;'c'
  8664  00EF7B  61                 	db	97	;'a'
  8665  00EF7C  6E                 	db	110	;'n'
  8666  00EF7D  20                 	db	32
  8667  00EF7E  72                 	db	114	;'r'
  8668  00EF7F  65                 	db	101	;'e'
  8669  00EF80  73                 	db	115	;'s'
  8670  00EF81  75                 	db	117	;'u'
  8671  00EF82  6C                 	db	108	;'l'
  8672  00EF83  74                 	db	116	;'t'
  8673  00EF84  20                 	db	32
  8674  00EF85  69                 	db	105	;'i'
  8675  00EF86  6E                 	db	110	;'n'
  8676  00EF87  20                 	db	32
  8677  00EF88  64                 	db	100	;'d'
  8678  00EF89  65                 	db	101	;'e'
  8679  00EF8A  76                 	db	118	;'v'
  8680  00EF8B  69                 	db	105	;'i'
  8681  00EF8C  63                 	db	99	;'c'
  8682  00EF8D  65                 	db	101	;'e'
  8683  00EF8E  20                 	db	32
  8684  00EF8F  64                 	db	100	;'d'
  8685  00EF90  61                 	db	97	;'a'
  8686  00EF91  6D                 	db	109	;'m'
  8687  00EF92  61                 	db	97	;'a'
  8688  00EF93  67                 	db	103	;'g'
  8689  00EF94  65                 	db	101	;'e'
  8690  00EF95  00                 	db	0
  8691  00EF96                     STR_110:
  8692  00EF96  4F                 	db	79	;'O'
  8693  00EF97  6E                 	db	110	;'n'
  8694  00EF98  6C                 	db	108	;'l'
  8695  00EF99  79                 	db	121	;'y'
  8696  00EF9A  20                 	db	32
  8697  00EF9B  65                 	db	101	;'e'
  8698  00EF9C  6E                 	db	110	;'n'
  8699  00EF9D  61                 	db	97	;'a'
  8700  00EF9E  62                 	db	98	;'b'
  8701  00EF9F  6C                 	db	108	;'l'
  8702  00EFA0  65                 	db	101	;'e'
  8703  00EFA1  20                 	db	32
  8704  00EFA2  64                 	db	100	;'d'
  8705  00EFA3  69                 	db	105	;'i'
  8706  00EFA4  6D                 	db	109	;'m'
  8707  00EFA5  6D                 	db	109	;'m'
  8708  00EFA6  69                 	db	105	;'i'
  8709  00EFA7  6E                 	db	110	;'n'
  8710  00EFA8  67                 	db	103	;'g'
  8711  00EFA9  20                 	db	32
  8712  00EFAA  69                 	db	105	;'i'
  8713  00EFAB  66                 	db	102	;'f'
  8714  00EFAC  20                 	db	32
  8715  00EFAD  79                 	db	121	;'y'
  8716  00EFAE  6F                 	db	111	;'o'
  8717  00EFAF  75                 	db	117	;'u'
  8718  00EFB0  20                 	db	32
  8719  00EFB1  61                 	db	97	;'a'
  8720  00EFB2  72                 	db	114	;'r'
  8721  00EFB3  65                 	db	101	;'e'
  8722  00EFB4  20                 	db	32
  8723  00EFB5  63                 	db	99	;'c'
  8724  00EFB6  6F                 	db	111	;'o'
  8725  00EFB7  6D                 	db	109	;'m'
  8726  00EFB8  70                 	db	112	;'p'
  8727  00EFB9  6C                 	db	108	;'l'
  8728  00EFBA  65                 	db	101	;'e'
  8729  00EFBB  74                 	db	116	;'t'
  8730  00EFBC  65                 	db	101	;'e'
  8731  00EFBD  6C                 	db	108	;'l'
  8732  00EFBE  79                 	db	121	;'y'
  8733  00EFBF  20                 	db	32
  8734  00EFC0  73                 	db	115	;'s'
  8735  00EFC1  75                 	db	117	;'u'
  8736  00EFC2  72                 	db	114	;'r'
  8737  00EFC3  65                 	db	101	;'e'
  8738  00EFC4  20                 	db	32
  8739  00EFC5  74                 	db	116	;'t'
  8740  00EFC6  68                 	db	104	;'h'
  8741  00EFC7  65                 	db	101	;'e'
  8742  00EFC8  20                 	db	32
  8743  00EFC9  6C                 	db	108	;'l'
  8744  00EFCA  6F                 	db	111	;'o'
  8745  00EFCB  61                 	db	97	;'a'
  8746  00EFCC  64                 	db	100	;'d'
  8747  00EFCD  20                 	db	32
  8748  00EFCE  69                 	db	105	;'i'
  8749  00EFCF  73                 	db	115	;'s'
  8750  00EFD0  20                 	db	32
  8751  00EFD1  63                 	db	99	;'c'
  8752  00EFD2  6F                 	db	111	;'o'
  8753  00EFD3  6D                 	db	109	;'m'
  8754  00EFD4  70                 	db	112	;'p'
  8755  00EFD5  61                 	db	97	;'a'
  8756  00EFD6  74                 	db	116	;'t'
  8757  00EFD7  69                 	db	105	;'i'
  8758  00EFD8  62                 	db	98	;'b'
  8759  00EFD9  6C                 	db	108	;'l'
  8760  00EFDA  65                 	db	101	;'e'
  8761  00EFDB  20                 	db	32
  8762  00EFDC  77                 	db	119	;'w'
  8763  00EFDD  69                 	db	105	;'i'
  8764  00EFDE  74                 	db	116	;'t'
  8765  00EFDF  68                 	db	104	;'h'
  8766  00EFE0  20                 	db	32
  8767  00EFE1  61                 	db	97	;'a'
  8768  00EFE2  20                 	db	32
  8769  00EFE3  73                 	db	115	;'s'
  8770  00EFE4  6F                 	db	111	;'o'
  8771  00EFE5  6C                 	db	108	;'l'
  8772  00EFE6  69                 	db	105	;'i'
  8773  00EFE7  64                 	db	100	;'d'
  8774  00EFE8  20                 	db	32
  8775  00EFE9  73                 	db	115	;'s'
  8776  00EFEA  74                 	db	116	;'t'
  8777  00EFEB  61                 	db	97	;'a'
  8778  00EFEC  74                 	db	116	;'t'
  8779  00EFED  65                 	db	101	;'e'
  8780  00EFEE  20                 	db	32
  8781  00EFEF  64                 	db	100	;'d'
  8782  00EFF0  69                 	db	105	;'i'
  8783  00EFF1  6D                 	db	109	;'m'
  8784  00EFF2  6D                 	db	109	;'m'
  8785  00EFF3  69                 	db	105	;'i'
  8786  00EFF4  6E                 	db	110	;'n'
  8787  00EFF5  67                 	db	103	;'g'
  8788  00EFF6  20                 	db	32
  8789  00EFF7  63                 	db	99	;'c'
  8790  00EFF8  69                 	db	105	;'i'
  8791  00EFF9  72                 	db	114	;'r'
  8792  00EFFA  63                 	db	99	;'c'
  8793  00EFFB  75                 	db	117	;'u'
  8794  00EFFC  69                 	db	105	;'i'
  8795  00EFFD  74                 	db	116	;'t'
  8796  00EFFE  00                 	db	0
  8797  00EFFF                     STR_130:
  8798  00EFFF  49                 	db	73	;'I'
  8799  00F000  66                 	db	102	;'f'
  8800  00F001  20                 	db	32
  8801  00F002  79                 	db	121	;'y'
  8802  00F003  6F                 	db	111	;'o'
  8803  00F004  75                 	db	117	;'u'
  8804  00F005  27                 	db	39
  8805  00F006  64                 	db	100	;'d'
  8806  00F007  20                 	db	32
  8807  00F008  6C                 	db	108	;'l'
  8808  00F009  69                 	db	105	;'i'
  8809  00F00A  6B                 	db	107	;'k'
  8810  00F00B  65                 	db	101	;'e'
  8811  00F00C  20                 	db	32
  8812  00F00D  74                 	db	116	;'t'
  8813  00F00E  6F                 	db	111	;'o'
  8814  00F00F  20                 	db	32
  8815  00F010  63                 	db	99	;'c'
  8816  00F011  6F                 	db	111	;'o'
  8817  00F012  6D                 	db	109	;'m'
  8818  00F013  70                 	db	112	;'p'
  8819  00F014  6C                 	db	108	;'l'
  8820  00F015  65                 	db	101	;'e'
  8821  00F016  74                 	db	116	;'t'
  8822  00F017  65                 	db	101	;'e'
  8823  00F018  6C                 	db	108	;'l'
  8824  00F019  79                 	db	121	;'y'
  8825  00F01A  20                 	db	32
  8826  00F01B  65                 	db	101	;'e'
  8827  00F01C  6E                 	db	110	;'n'
  8828  00F01D  61                 	db	97	;'a'
  8829  00F01E  62                 	db	98	;'b'
  8830  00F01F  6C                 	db	108	;'l'
  8831  00F020  65                 	db	101	;'e'
  8832  00F021  20                 	db	32
  8833  00F022  6F                 	db	111	;'o'
  8834  00F023  72                 	db	114	;'r'
  8835  00F024  20                 	db	32
  8836  00F025  64                 	db	100	;'d'
  8837  00F026  69                 	db	105	;'i'
  8838  00F027  73                 	db	115	;'s'
  8839  00F028  61                 	db	97	;'a'
  8840  00F029  62                 	db	98	;'b'
  8841  00F02A  6C                 	db	108	;'l'
  8842  00F02B  65                 	db	101	;'e'
  8843  00F02C  20                 	db	32
  8844  00F02D  74                 	db	116	;'t'
  8845  00F02E  68                 	db	104	;'h'
  8846  00F02F  65                 	db	101	;'e'
  8847  00F030  20                 	db	32
  8848  00F031  6C                 	db	108	;'l'
  8849  00F032  6F                 	db	111	;'o'
  8850  00F033  61                 	db	97	;'a'
  8851  00F034  64                 	db	100	;'d'
  8852  00F035  2C                 	db	44
  8853  00F036  20                 	db	32
  8854  00F037  64                 	db	100	;'d'
  8855  00F038  69                 	db	105	;'i'
  8856  00F039  73                 	db	115	;'s'
  8857  00F03A  61                 	db	97	;'a'
  8858  00F03B  62                 	db	98	;'b'
  8859  00F03C  6C                 	db	108	;'l'
  8860  00F03D  65                 	db	101	;'e'
  8861  00F03E  20                 	db	32
  8862  00F03F  64                 	db	100	;'d'
  8863  00F040  69                 	db	105	;'i'
  8864  00F041  6D                 	db	109	;'m'
  8865  00F042  6D                 	db	109	;'m'
  8866  00F043  69                 	db	105	;'i'
  8867  00F044  6E                 	db	110	;'n'
  8868  00F045  67                 	db	103	;'g'
  8869  00F046  20                 	db	32
  8870  00F047  61                 	db	97	;'a'
  8871  00F048  6E                 	db	110	;'n'
  8872  00F049  64                 	db	100	;'d'
  8873  00F04A  20                 	db	32
  8874  00F04B  75                 	db	117	;'u'
  8875  00F04C  73                 	db	115	;'s'
  8876  00F04D  65                 	db	101	;'e'
  8877  00F04E  20                 	db	32
  8878  00F04F  72                 	db	114	;'r'
  8879  00F050  65                 	db	101	;'e'
  8880  00F051  73                 	db	115	;'s'
  8881  00F052  70                 	db	112	;'p'
  8882  00F053  65                 	db	101	;'e'
  8883  00F054  63                 	db	99	;'c'
  8884  00F055  74                 	db	116	;'t'
  8885  00F056  69                 	db	105	;'i'
  8886  00F057  76                 	db	118	;'v'
  8887  00F058  65                 	db	101	;'e'
  8888  00F059  20                 	db	32
  8889  00F05A  63                 	db	99	;'c'
  8890  00F05B  6F                 	db	111	;'o'
  8891  00F05C  6D                 	db	109	;'m'
  8892  00F05D  6D                 	db	109	;'m'
  8893  00F05E  61                 	db	97	;'a'
  8894  00F05F  6E                 	db	110	;'n'
  8895  00F060  64                 	db	100	;'d'
  8896  00F061  73                 	db	115	;'s'
  8897  00F062  0A                 	db	10
  8898  00F063  0D                 	db	13
  8899  00F064  00                 	db	0
  8900  00F065                     STR_129:
  8901  00F065  45                 	db	69	;'E'
  8902  00F066  52                 	db	82	;'R'
  8903  00F067  52                 	db	82	;'R'
  8904  00F068  4F                 	db	79	;'O'
  8905  00F069  52                 	db	82	;'R'
  8906  00F06A  3A                 	db	58	;':'
  8907  00F06B  20                 	db	32
  8908  00F06C  50                 	db	80	;'P'
  8909  00F06D  6C                 	db	108	;'l'
  8910  00F06E  65                 	db	101	;'e'
  8911  00F06F  61                 	db	97	;'a'
  8912  00F070  73                 	db	115	;'s'
  8913  00F071  65                 	db	101	;'e'
  8914  00F072  20                 	db	32
  8915  00F073  73                 	db	115	;'s'
  8916  00F074  65                 	db	101	;'e'
  8917  00F075  74                 	db	116	;'t'
  8918  00F076  20                 	db	32
  8919  00F077  64                 	db	100	;'d'
  8920  00F078  69                 	db	105	;'i'
  8921  00F079  6D                 	db	109	;'m'
  8922  00F07A  6D                 	db	109	;'m'
  8923  00F07B  69                 	db	105	;'i'
  8924  00F07C  6E                 	db	110	;'n'
  8925  00F07D  67                 	db	103	;'g'
  8926  00F07E  20                 	db	32
  8927  00F07F  70                 	db	112	;'p'
  8928  00F080  65                 	db	101	;'e'
  8929  00F081  72                 	db	114	;'r'
  8930  00F082  63                 	db	99	;'c'
  8931  00F083  65                 	db	101	;'e'
  8932  00F084  6E                 	db	110	;'n'
  8933  00F085  74                 	db	116	;'t'
  8934  00F086  61                 	db	97	;'a'
  8935  00F087  67                 	db	103	;'g'
  8936  00F088  65                 	db	101	;'e'
  8937  00F089  20                 	db	32
  8938  00F08A  74                 	db	116	;'t'
  8939  00F08B  6F                 	db	111	;'o'
  8940  00F08C  20                 	db	32
  8941  00F08D  61                 	db	97	;'a'
  8942  00F08E  6E                 	db	110	;'n'
  8943  00F08F  20                 	db	32
  8944  00F090  69                 	db	105	;'i'
  8945  00F091  6E                 	db	110	;'n'
  8946  00F092  74                 	db	116	;'t'
  8947  00F093  65                 	db	101	;'e'
  8948  00F094  67                 	db	103	;'g'
  8949  00F095  65                 	db	101	;'e'
  8950  00F096  72                 	db	114	;'r'
  8951  00F097  20                 	db	32
  8952  00F098  67                 	db	103	;'g'
  8953  00F099  72                 	db	114	;'r'
  8954  00F09A  65                 	db	101	;'e'
  8955  00F09B  61                 	db	97	;'a'
  8956  00F09C  74                 	db	116	;'t'
  8957  00F09D  65                 	db	101	;'e'
  8958  00F09E  72                 	db	114	;'r'
  8959  00F09F  20                 	db	32
  8960  00F0A0  74                 	db	116	;'t'
  8961  00F0A1  68                 	db	104	;'h'
  8962  00F0A2  61                 	db	97	;'a'
  8963  00F0A3  6E                 	db	110	;'n'
  8964  00F0A4  20                 	db	32
  8965  00F0A5  30                 	db	48	;'0'
  8966  00F0A6  20                 	db	32
  8967  00F0A7  61                 	db	97	;'a'
  8968  00F0A8  6E                 	db	110	;'n'
  8969  00F0A9  64                 	db	100	;'d'
  8970  00F0AA  20                 	db	32
  8971  00F0AB  6C                 	db	108	;'l'
  8972  00F0AC  65                 	db	101	;'e'
  8973  00F0AD  73                 	db	115	;'s'
  8974  00F0AE  73                 	db	115	;'s'
  8975  00F0AF  20                 	db	32
  8976  00F0B0  74                 	db	116	;'t'
  8977  00F0B1  68                 	db	104	;'h'
  8978  00F0B2  61                 	db	97	;'a'
  8979  00F0B3  6E                 	db	110	;'n'
  8980  00F0B4  20                 	db	32
  8981  00F0B5  31                 	db	49	;'1'
  8982  00F0B6  30                 	db	48	;'0'
  8983  00F0B7  30                 	db	48	;'0'
  8984  00F0B8  0A                 	db	10
  8985  00F0B9  0D                 	db	13
  8986  00F0BA  00                 	db	0
  8987  00F0BB                     STR_58:
  8988  00F0BB  44                 	db	68	;'D'
  8989  00F0BC  65                 	db	101	;'e'
  8990  00F0BD  76                 	db	118	;'v'
  8991  00F0BE  69                 	db	105	;'i'
  8992  00F0BF  63                 	db	99	;'c'
  8993  00F0C0  65                 	db	101	;'e'
  8994  00F0C1  20                 	db	32
  8995  00F0C2  49                 	db	73	;'I'
  8996  00F0C3  44                 	db	68	;'D'
  8997  00F0C4  20                 	db	32
  8998  00F0C5  73                 	db	115	;'s'
  8999  00F0C6  74                 	db	116	;'t'
  9000  00F0C7  6F                 	db	111	;'o'
  9001  00F0C8  72                 	db	114	;'r'
  9002  00F0C9  65                 	db	101	;'e'
  9003  00F0CA  64                 	db	100	;'d'
  9004  00F0CB  20                 	db	32
  9005  00F0CC  69                 	db	105	;'i'
  9006  00F0CD  6E                 	db	110	;'n'
  9007  00F0CE  20                 	db	32
  9008  00F0CF  46                 	db	70	;'F'
  9009  00F0D0  6C                 	db	108	;'l'
  9010  00F0D1  61                 	db	97	;'a'
  9011  00F0D2  73                 	db	115	;'s'
  9012  00F0D3  68                 	db	104	;'h'
  9013  00F0D4  20                 	db	32
  9014  00F0D5  69                 	db	105	;'i'
  9015  00F0D6  73                 	db	115	;'s'
  9016  00F0D7  3A                 	db	58	;':'
  9017  00F0D8  20                 	db	32
  9018  00F0D9  30                 	db	48	;'0'
  9019  00F0DA  78                 	db	120	;'x'
  9020  00F0DB  25                 	db	37
  9021  00F0DC  58                 	db	88	;'X'
  9022  00F0DD  2E                 	db	46
  9023  00F0DE  20                 	db	32
  9024  00F0DF  54                 	db	84	;'T'
  9025  00F0E0  68                 	db	104	;'h'
  9026  00F0E1  69                 	db	105	;'i'
  9027  00F0E2  73                 	db	115	;'s'
  9028  00F0E3  20                 	db	32
  9029  00F0E4  63                 	db	99	;'c'
  9030  00F0E5  6F                 	db	111	;'o'
  9031  00F0E6  72                 	db	114	;'r'
  9032  00F0E7  72                 	db	114	;'r'
  9033  00F0E8  65                 	db	101	;'e'
  9034  00F0E9  73                 	db	115	;'s'
  9035  00F0EA  70                 	db	112	;'p'
  9036  00F0EB  6F                 	db	111	;'o'
  9037  00F0EC  6E                 	db	110	;'n'
  9038  00F0ED  64                 	db	100	;'d'
  9039  00F0EE  73                 	db	115	;'s'
  9040  00F0EF  20                 	db	32
  9041  00F0F0  74                 	db	116	;'t'
  9042  00F0F1  6F                 	db	111	;'o'
  9043  00F0F2  20                 	db	32
  9044  00F0F3  61                 	db	97	;'a'
  9045  00F0F4  20                 	db	32
  9046  00F0F5  64                 	db	100	;'d'
  9047  00F0F6  65                 	db	101	;'e'
  9048  00F0F7  76                 	db	118	;'v'
  9049  00F0F8  69                 	db	105	;'i'
  9050  00F0F9  63                 	db	99	;'c'
  9051  00F0FA  65                 	db	101	;'e'
  9052  00F0FB  20                 	db	32
  9053  00F0FC  70                 	db	112	;'p'
  9054  00F0FD  61                 	db	97	;'a'
  9055  00F0FE  72                 	db	114	;'r'
  9056  00F0FF  74                 	db	116	;'t'
  9057  00F100  20                 	db	32
  9058  00F101  6E                 	db	110	;'n'
  9059  00F102  75                 	db	117	;'u'
  9060  00F103  6D                 	db	109	;'m'
  9061  00F104  62                 	db	98	;'b'
  9062  00F105  65                 	db	101	;'e'
  9063  00F106  72                 	db	114	;'r'
  9064  00F107  20                 	db	32
  9065  00F108  6F                 	db	111	;'o'
  9066  00F109  66                 	db	102	;'f'
  9067  00F10A  20                 	db	32
  9068  00F10B  25                 	db	37
  9069  00F10C  73                 	db	115	;'s'
  9070  00F10D  0A                 	db	10
  9071  00F10E  0D                 	db	13
  9072  00F10F  00                 	db	0
  9073  00F110                     STR_105:
  9074  00F110  4D                 	db	77	;'M'
  9075  00F111  65                 	db	101	;'e'
  9076  00F112  61                 	db	97	;'a'
  9077  00F113  73                 	db	115	;'s'
  9078  00F114  75                 	db	117	;'u'
  9079  00F115  72                 	db	114	;'r'
  9080  00F116  65                 	db	101	;'e'
  9081  00F117  64                 	db	100	;'d'
  9082  00F118  20                 	db	32
  9083  00F119  6F                 	db	111	;'o'
  9084  00F11A  75                 	db	117	;'u'
  9085  00F11B  74                 	db	116	;'t'
  9086  00F11C  70                 	db	112	;'p'
  9087  00F11D  75                 	db	117	;'u'
  9088  00F11E  74                 	db	116	;'t'
  9089  00F11F  20                 	db	32
  9090  00F120  65                 	db	101	;'e'
  9091  00F121  6E                 	db	110	;'n'
  9092  00F122  65                 	db	101	;'e'
  9093  00F123  72                 	db	114	;'r'
  9094  00F124  67                 	db	103	;'g'
  9095  00F125  79                 	db	121	;'y'
  9096  00F126  20                 	db	32
  9097  00F127  73                 	db	115	;'s'
  9098  00F128  69                 	db	105	;'i'
  9099  00F129  6E                 	db	110	;'n'
  9100  00F12A  63                 	db	99	;'c'
  9101  00F12B  65                 	db	101	;'e'
  9102  00F12C  20                 	db	32
  9103  00F12D  6C                 	db	108	;'l'
  9104  00F12E  61                 	db	97	;'a'
  9105  00F12F  73                 	db	115	;'s'
  9106  00F130  74                 	db	116	;'t'
  9107  00F131  20                 	db	32
  9108  00F132  6D                 	db	109	;'m'
  9109  00F133  65                 	db	101	;'e'
  9110  00F134  61                 	db	97	;'a'
  9111  00F135  73                 	db	115	;'s'
  9112  00F136  75                 	db	117	;'u'
  9113  00F137  72                 	db	114	;'r'
  9114  00F138  65                 	db	101	;'e'
  9115  00F139  6D                 	db	109	;'m'
  9116  00F13A  65                 	db	101	;'e'
  9117  00F13B  6E                 	db	110	;'n'
  9118  00F13C  74                 	db	116	;'t'
  9119  00F13D  20                 	db	32
  9120  00F13E  72                 	db	114	;'r'
  9121  00F13F  65                 	db	101	;'e'
  9122  00F140  73                 	db	115	;'s'
  9123  00F141  65                 	db	101	;'e'
  9124  00F142  74                 	db	116	;'t'
  9125  00F143  20                 	db	32
  9126  00F144  69                 	db	105	;'i'
  9127  00F145  73                 	db	115	;'s'
  9128  00F146  20                 	db	32
  9129  00F147  25                 	db	37
  9130  00F148  2E                 	db	46
  9131  00F149  33                 	db	51	;'3'
  9132  00F14A  66                 	db	102	;'f'
  9133  00F14B  20                 	db	32
  9134  00F14C  57                 	db	87	;'W'
  9135  00F14D  61                 	db	97	;'a'
  9136  00F14E  74                 	db	116	;'t'
  9137  00F14F  74                 	db	116	;'t'
  9138  00F150  20                 	db	32
  9139  00F151  48                 	db	72	;'H'
  9140  00F152  6F                 	db	111	;'o'
  9141  00F153  75                 	db	117	;'u'
  9142  00F154  72                 	db	114	;'r'
  9143  00F155  73                 	db	115	;'s'
  9144  00F156  0A                 	db	10
  9145  00F157  0D                 	db	13
  9146  00F158  00                 	db	0
  9147  00F159                     STR_134:
  9148  00F159  54                 	db	84	;'T'
  9149  00F15A  68                 	db	104	;'h'
  9150  00F15B  69                 	db	105	;'i'
  9151  00F15C  73                 	db	115	;'s'
  9152  00F15D  20                 	db	32
  9153  00F15E  63                 	db	99	;'c'
  9154  00F15F  6F                 	db	111	;'o'
  9155  00F160  72                 	db	114	;'r'
  9156  00F161  72                 	db	114	;'r'
  9157  00F162  65                 	db	101	;'e'
  9158  00F163  73                 	db	115	;'s'
  9159  00F164  70                 	db	112	;'p'
  9160  00F165  6F                 	db	111	;'o'
  9161  00F166  6E                 	db	110	;'n'
  9162  00F167  64                 	db	100	;'d'
  9163  00F168  73                 	db	115	;'s'
  9164  00F169  20                 	db	32
  9165  00F16A  74                 	db	116	;'t'
  9166  00F16B  6F                 	db	111	;'o'
  9167  00F16C  20                 	db	32
  9168  00F16D  61                 	db	97	;'a'
  9169  00F16E  20                 	db	32
  9170  00F16F  31                 	db	49	;'1'
  9171  00F170  36                 	db	54	;'6'
  9172  00F171  20                 	db	32
  9173  00F172  62                 	db	98	;'b'
  9174  00F173  69                 	db	105	;'i'
  9175  00F174  74                 	db	116	;'t'
  9176  00F175  20                 	db	32
  9177  00F176  74                 	db	116	;'t'
  9178  00F177  69                 	db	105	;'i'
  9179  00F178  6D                 	db	109	;'m'
  9180  00F179  65                 	db	101	;'e'
  9181  00F17A  72                 	db	114	;'r'
  9182  00F17B  20                 	db	32
  9183  00F17C  70                 	db	112	;'p'
  9184  00F17D  72                 	db	114	;'r'
  9185  00F17E  65                 	db	101	;'e'
  9186  00F17F  2D                 	db	45
  9187  00F180  6C                 	db	108	;'l'
  9188  00F181  6F                 	db	111	;'o'
  9189  00F182  61                 	db	97	;'a'
  9190  00F183  64                 	db	100	;'d'
  9191  00F184  20                 	db	32
  9192  00F185  76                 	db	118	;'v'
  9193  00F186  61                 	db	97	;'a'
  9194  00F187  6C                 	db	108	;'l'
  9195  00F188  75                 	db	117	;'u'
  9196  00F189  65                 	db	101	;'e'
  9197  00F18A  20                 	db	32
  9198  00F18B  6F                 	db	111	;'o'
  9199  00F18C  66                 	db	102	;'f'
  9200  00F18D  20                 	db	32
  9201  00F18E  30                 	db	48	;'0'
  9202  00F18F  78                 	db	120	;'x'
  9203  00F190  25                 	db	37
  9204  00F191  58                 	db	88	;'X'
  9205  00F192  20                 	db	32
  9206  00F193  28                 	db	40
  9207  00F194  25                 	db	37
  9208  00F195  75                 	db	117	;'u'
  9209  00F196  20                 	db	32
  9210  00F197  4C                 	db	76	;'L'
  9211  00F198  53                 	db	83	;'S'
  9212  00F199  42                 	db	66	;'B'
  9213  00F19A  73                 	db	115	;'s'
  9214  00F19B  29                 	db	41
  9215  00F19C  20                 	db	32
  9216  00F19D  0A                 	db	10
  9217  00F19E  0D                 	db	13
  9218  00F19F  00                 	db	0
  9219  00F1A0                     STR_79:
  9220  00F1A0  43                 	db	67	;'C'
  9221  00F1A1  6F                 	db	111	;'o'
  9222  00F1A2  6D                 	db	109	;'m'
  9223  00F1A3  6D                 	db	109	;'m'
  9224  00F1A4  75                 	db	117	;'u'
  9225  00F1A5  6E                 	db	110	;'n'
  9226  00F1A6  69                 	db	105	;'i'
  9227  00F1A7  63                 	db	99	;'c'
  9228  00F1A8  61                 	db	97	;'a'
  9229  00F1A9  74                 	db	116	;'t'
  9230  00F1AA  69                 	db	105	;'i'
  9231  00F1AB  6F                 	db	111	;'o'
  9232  00F1AC  6E                 	db	110	;'n'
  9233  00F1AD  73                 	db	115	;'s'
  9234  00F1AE  20                 	db	32
  9235  00F1AF  65                 	db	101	;'e'
  9236  00F1B0  72                 	db	114	;'r'
  9237  00F1B1  72                 	db	114	;'r'
  9238  00F1B2  6F                 	db	111	;'o'
  9239  00F1B3  72                 	db	114	;'r'
  9240  00F1B4  28                 	db	40
  9241  00F1B5  73                 	db	115	;'s'
  9242  00F1B6  29                 	db	41
  9243  00F1B7  20                 	db	32
  9244  00F1B8  64                 	db	100	;'d'
  9245  00F1B9  65                 	db	101	;'e'
  9246  00F1BA  74                 	db	116	;'t'
  9247  00F1BB  65                 	db	101	;'e'
  9248  00F1BC  63                 	db	99	;'c'
  9249  00F1BD  74                 	db	116	;'t'
  9250  00F1BE  65                 	db	101	;'e'
  9251  00F1BF  64                 	db	100	;'d'
  9252  00F1C0  21                 	db	33
  9253  00F1C1  20                 	db	32
  9254  00F1C2  49                 	db	73	;'I'
  9255  00F1C3  6E                 	db	110	;'n'
  9256  00F1C4  74                 	db	116	;'t'
  9257  00F1C5  65                 	db	101	;'e'
  9258  00F1C6  72                 	db	114	;'r'
  9259  00F1C7  66                 	db	102	;'f'
  9260  00F1C8  61                 	db	97	;'a'
  9261  00F1C9  63                 	db	99	;'c'
  9262  00F1CA  65                 	db	101	;'e'
  9263  00F1CB  73                 	db	115	;'s'
  9264  00F1CC  20                 	db	32
  9265  00F1CD  63                 	db	99	;'c'
  9266  00F1CE  61                 	db	97	;'a'
  9267  00F1CF  75                 	db	117	;'u'
  9268  00F1D0  73                 	db	115	;'s'
  9269  00F1D1  69                 	db	105	;'i'
  9270  00F1D2  6E                 	db	110	;'n'
  9271  00F1D3  67                 	db	103	;'g'
  9272  00F1D4  20                 	db	32
  9273  00F1D5  65                 	db	101	;'e'
  9274  00F1D6  72                 	db	114	;'r'
  9275  00F1D7  72                 	db	114	;'r'
  9276  00F1D8  6F                 	db	111	;'o'
  9277  00F1D9  72                 	db	114	;'r'
  9278  00F1DA  28                 	db	40
  9279  00F1DB  73                 	db	115	;'s'
  9280  00F1DC  29                 	db	41
  9281  00F1DD  3A                 	db	58	;':'
  9282  00F1DE  0A                 	db	10
  9283  00F1DF  0D                 	db	13
  9284  00F1E0  00                 	db	0
  9285  00F1E1                     STR_62:
  9286  00F1E1  54                 	db	84	;'T'
  9287  00F1E2  68                 	db	104	;'h'
  9288  00F1E3  65                 	db	101	;'e'
  9289  00F1E4  20                 	db	32
  9290  00F1E5  66                 	db	102	;'f'
  9291  00F1E6  6F                 	db	111	;'o'
  9292  00F1E7  6C                 	db	108	;'l'
  9293  00F1E8  6C                 	db	108	;'l'
  9294  00F1E9  6F                 	db	111	;'o'
  9295  00F1EA  77                 	db	119	;'w'
  9296  00F1EB  69                 	db	105	;'i'
  9297  00F1EC  6E                 	db	110	;'n'
  9298  00F1ED  67                 	db	103	;'g'
  9299  00F1EE  20                 	db	32
  9300  00F1EF  55                 	db	85	;'U'
  9301  00F1F0  73                 	db	115	;'s'
  9302  00F1F1  65                 	db	101	;'e'
  9303  00F1F2  72                 	db	114	;'r'
  9304  00F1F3  20                 	db	32
  9305  00F1F4  49                 	db	73	;'I'
  9306  00F1F5  44                 	db	68	;'D'
  9307  00F1F6  73                 	db	115	;'s'
  9308  00F1F7  20                 	db	32
  9309  00F1F8  68                 	db	104	;'h'
  9310  00F1F9  61                 	db	97	;'a'
  9311  00F1FA  76                 	db	118	;'v'
  9312  00F1FB  65                 	db	101	;'e'
  9313  00F1FC  20                 	db	32
  9314  00F1FD  62                 	db	98	;'b'
  9315  00F1FE  65                 	db	101	;'e'
  9316  00F1FF  65                 	db	101	;'e'
  9317  00F200  6E                 	db	110	;'n'
  9318  00F201  20                 	db	32
  9319  00F202  72                 	db	114	;'r'
  9320  00F203  65                 	db	101	;'e'
  9321  00F204  74                 	db	116	;'t'
  9322  00F205  72                 	db	114	;'r'
  9323  00F206  69                 	db	105	;'i'
  9324  00F207  65                 	db	101	;'e'
  9325  00F208  76                 	db	118	;'v'
  9326  00F209  65                 	db	101	;'e'
  9327  00F20A  64                 	db	100	;'d'
  9328  00F20B  20                 	db	32
  9329  00F20C  66                 	db	102	;'f'
  9330  00F20D  72                 	db	114	;'r'
  9331  00F20E  6F                 	db	111	;'o'
  9332  00F20F  6D                 	db	109	;'m'
  9333  00F210  20                 	db	32
  9334  00F211  66                 	db	102	;'f'
  9335  00F212  6C                 	db	108	;'l'
  9336  00F213  61                 	db	97	;'a'
  9337  00F214  73                 	db	115	;'s'
  9338  00F215  68                 	db	104	;'h'
  9339  00F216  20                 	db	32
  9340  00F217  6D                 	db	109	;'m'
  9341  00F218  65                 	db	101	;'e'
  9342  00F219  6D                 	db	109	;'m'
  9343  00F21A  6F                 	db	111	;'o'
  9344  00F21B  72                 	db	114	;'r'
  9345  00F21C  79                 	db	121	;'y'
  9346  00F21D  3A                 	db	58	;':'
  9347  00F21E  0A                 	db	10
  9348  00F21F  0D                 	db	13
  9349  00F220  00                 	db	0
  9350  00F221                     STR_133:
  9351  00F221  43                 	db	67	;'C'
  9352  00F222  61                 	db	97	;'a'
  9353  00F223  6C                 	db	108	;'l'
  9354  00F224  63                 	db	99	;'c'
  9355  00F225  75                 	db	117	;'u'
  9356  00F226  6C                 	db	108	;'l'
  9357  00F227  61                 	db	97	;'a'
  9358  00F228  74                 	db	116	;'t'
  9359  00F229  65                 	db	101	;'e'
  9360  00F22A  64                 	db	100	;'d'
  9361  00F22B  20                 	db	32
  9362  00F22C  54                 	db	84	;'T'
  9363  00F22D  52                 	db	82	;'R'
  9364  00F22E  49                 	db	73	;'I'
  9365  00F22F  41                 	db	65	;'A'
  9366  00F230  43                 	db	67	;'C'
  9367  00F231  20                 	db	32
  9368  00F232  66                 	db	102	;'f'
  9369  00F233  69                 	db	105	;'i'
  9370  00F234  72                 	db	114	;'r'
  9371  00F235  69                 	db	105	;'i'
  9372  00F236  6E                 	db	110	;'n'
  9373  00F237  67                 	db	103	;'g'
  9374  00F238  20                 	db	32
  9375  00F239  61                 	db	97	;'a'
  9376  00F23A  6E                 	db	110	;'n'
  9377  00F23B  67                 	db	103	;'g'
  9378  00F23C  6C                 	db	108	;'l'
  9379  00F23D  65                 	db	101	;'e'
  9380  00F23E  20                 	db	32
  9381  00F23F  69                 	db	105	;'i'
  9382  00F240  73                 	db	115	;'s'
  9383  00F241  20                 	db	32
  9384  00F242  25                 	db	37
  9385  00F243  2E                 	db	46
  9386  00F244  33                 	db	51	;'3'
  9387  00F245  66                 	db	102	;'f'
  9388  00F246  20                 	db	32
  9389  00F247  72                 	db	114	;'r'
  9390  00F248  61                 	db	97	;'a'
  9391  00F249  64                 	db	100	;'d'
  9392  00F24A  69                 	db	105	;'i'
  9393  00F24B  61                 	db	97	;'a'
  9394  00F24C  6E                 	db	110	;'n'
  9395  00F24D  73                 	db	115	;'s'
  9396  00F24E  20                 	db	32
  9397  00F24F  28                 	db	40
  9398  00F250  25                 	db	37
  9399  00F251  2E                 	db	46
  9400  00F252  33                 	db	51	;'3'
  9401  00F253  66                 	db	102	;'f'
  9402  00F254  20                 	db	32
  9403  00F255  64                 	db	100	;'d'
  9404  00F256  65                 	db	101	;'e'
  9405  00F257  67                 	db	103	;'g'
  9406  00F258  72                 	db	114	;'r'
  9407  00F259  65                 	db	101	;'e'
  9408  00F25A  65                 	db	101	;'e'
  9409  00F25B  73                 	db	115	;'s'
  9410  00F25C  29                 	db	41
  9411  00F25D  0A                 	db	10
  9412  00F25E  0D                 	db	13
  9413  00F25F  00                 	db	0
  9414  00F260                     STR_166:
  9415  00F260  53                 	db	83	;'S'
  9416  00F261  79                 	db	121	;'y'
  9417  00F262  73                 	db	115	;'s'
  9418  00F263  74                 	db	116	;'t'
  9419  00F264  65                 	db	101	;'e'
  9420  00F265  6D                 	db	109	;'m'
  9421  00F266  20                 	db	32
  9422  00F267  70                 	db	112	;'p'
  9423  00F268  61                 	db	97	;'a'
  9424  00F269  72                 	db	114	;'r'
  9425  00F26A  61                 	db	97	;'a'
  9426  00F26B  6D                 	db	109	;'m'
  9427  00F26C  65                 	db	101	;'e'
  9428  00F26D  74                 	db	116	;'t'
  9429  00F26E  65                 	db	101	;'e'
  9430  00F26F  72                 	db	114	;'r'
  9431  00F270  73                 	db	115	;'s'
  9432  00F271  20                 	db	32
  9433  00F272  61                 	db	97	;'a'
  9434  00F273  6E                 	db	110	;'n'
  9435  00F274  64                 	db	100	;'d'
  9436  00F275  20                 	db	32
  9437  00F276  61                 	db	97	;'a'
  9438  00F277  66                 	db	102	;'f'
  9439  00F278  66                 	db	102	;'f'
  9440  00F279  69                 	db	105	;'i'
  9441  00F27A  72                 	db	114	;'r'
  9442  00F27B  6D                 	db	109	;'m'
  9443  00F27C  61                 	db	97	;'a'
  9444  00F27D  74                 	db	116	;'t'
  9445  00F27E  69                 	db	105	;'i'
  9446  00F27F  76                 	db	118	;'v'
  9447  00F280  65                 	db	101	;'e'
  9448  00F281  20                 	db	32
  9449  00F282  72                 	db	114	;'r'
  9450  00F283  65                 	db	101	;'e'
  9451  00F284  73                 	db	115	;'s'
  9452  00F285  70                 	db	112	;'p'
  9453  00F286  6F                 	db	111	;'o'
  9454  00F287  6E                 	db	110	;'n'
  9455  00F288  73                 	db	115	;'s'
  9456  00F289  65                 	db	101	;'e'
  9457  00F28A  73                 	db	115	;'s'
  9458  00F28B  20                 	db	32
  9459  00F28C  61                 	db	97	;'a'
  9460  00F28D  70                 	db	112	;'p'
  9461  00F28E  70                 	db	112	;'p'
  9462  00F28F  65                 	db	101	;'e'
  9463  00F290  61                 	db	97	;'a'
  9464  00F291  72                 	db	114	;'r'
  9465  00F292  20                 	db	32
  9466  00F293  69                 	db	105	;'i'
  9467  00F294  6E                 	db	110	;'n'
  9468  00F295  20                 	db	32
  9469  00F296  67                 	db	103	;'g'
  9470  00F297  72                 	db	114	;'r'
  9471  00F298  65                 	db	101	;'e'
  9472  00F299  65                 	db	101	;'e'
  9473  00F29A  6E                 	db	110	;'n'
  9474  00F29B  0A                 	db	10
  9475  00F29C  0D                 	db	13
  9476  00F29D  00                 	db	0
  9477  00F29E                     STR_82:
  9478  00F29E  43                 	db	67	;'C'
  9479  00F29F  61                 	db	97	;'a'
  9480  00F2A0  6C                 	db	108	;'l'
  9481  00F2A1  6C                 	db	108	;'l'
  9482  00F2A2  20                 	db	32
  9483  00F2A3  27                 	db	39
  9484  00F2A4  43                 	db	67	;'C'
  9485  00F2A5  6C                 	db	108	;'l'
  9486  00F2A6  65                 	db	101	;'e'
  9487  00F2A7  61                 	db	97	;'a'
  9488  00F2A8  72                 	db	114	;'r'
  9489  00F2A9  20                 	db	32
  9490  00F2AA  43                 	db	67	;'C'
  9491  00F2AB  4F                 	db	79	;'O'
  9492  00F2AC  4D                 	db	77	;'M'
  9493  00F2AD  4D                 	db	77	;'M'
  9494  00F2AE  20                 	db	32
  9495  00F2AF  45                 	db	69	;'E'
  9496  00F2B0  72                 	db	114	;'r'
  9497  00F2B1  72                 	db	114	;'r'
  9498  00F2B2  6F                 	db	111	;'o'
  9499  00F2B3  72                 	db	114	;'r'
  9500  00F2B4  73                 	db	115	;'s'
  9501  00F2B5  27                 	db	39
  9502  00F2B6  20                 	db	32
  9503  00F2B7  74                 	db	116	;'t'
  9504  00F2B8  6F                 	db	111	;'o'
  9505  00F2B9  20                 	db	32
  9506  00F2BA  63                 	db	99	;'c'
  9507  00F2BB  6C                 	db	108	;'l'
  9508  00F2BC  65                 	db	101	;'e'
  9509  00F2BD  61                 	db	97	;'a'
  9510  00F2BE  72                 	db	114	;'r'
  9511  00F2BF  20                 	db	32
  9512  00F2C0  63                 	db	99	;'c'
  9513  00F2C1  6F                 	db	111	;'o'
  9514  00F2C2  6D                 	db	109	;'m'
  9515  00F2C3  6D                 	db	109	;'m'
  9516  00F2C4  75                 	db	117	;'u'
  9517  00F2C5  6E                 	db	110	;'n'
  9518  00F2C6  69                 	db	105	;'i'
  9519  00F2C7  63                 	db	99	;'c'
  9520  00F2C8  61                 	db	97	;'a'
  9521  00F2C9  74                 	db	116	;'t'
  9522  00F2CA  69                 	db	105	;'i'
  9523  00F2CB  6F                 	db	111	;'o'
  9524  00F2CC  6E                 	db	110	;'n'
  9525  00F2CD  73                 	db	115	;'s'
  9526  00F2CE  20                 	db	32
  9527  00F2CF  65                 	db	101	;'e'
  9528  00F2D0  72                 	db	114	;'r'
  9529  00F2D1  72                 	db	114	;'r'
  9530  00F2D2  6F                 	db	111	;'o'
  9531  00F2D3  72                 	db	114	;'r'
  9532  00F2D4  28                 	db	40
  9533  00F2D5  73                 	db	115	;'s'
  9534  00F2D6  29                 	db	41
  9535  00F2D7  0A                 	db	10
  9536  00F2D8  0D                 	db	13
  9537  00F2D9  00                 	db	0
  9538  00F2DA                     STR_60:
  9539  00F2DA  44                 	db	68	;'D'
  9540  00F2DB  65                 	db	101	;'e'
  9541  00F2DC  76                 	db	118	;'v'
  9542  00F2DD  69                 	db	105	;'i'
  9543  00F2DE  63                 	db	99	;'c'
  9544  00F2DF  65                 	db	101	;'e'
  9545  00F2E0  20                 	db	32
  9546  00F2E1  73                 	db	115	;'s'
  9547  00F2E2  69                 	db	105	;'i'
  9548  00F2E3  6C                 	db	108	;'l'
  9549  00F2E4  69                 	db	105	;'i'
  9550  00F2E5  63                 	db	99	;'c'
  9551  00F2E6  6F                 	db	111	;'o'
  9552  00F2E7  6E                 	db	110	;'n'
  9553  00F2E8  20                 	db	32
  9554  00F2E9  72                 	db	114	;'r'
  9555  00F2EA  65                 	db	101	;'e'
  9556  00F2EB  76                 	db	118	;'v'
  9557  00F2EC  69                 	db	105	;'i'
  9558  00F2ED  73                 	db	115	;'s'
  9559  00F2EE  69                 	db	105	;'i'
  9560  00F2EF  6F                 	db	111	;'o'
  9561  00F2F0  6E                 	db	110	;'n'
  9562  00F2F1  20                 	db	32
  9563  00F2F2  49                 	db	73	;'I'
  9564  00F2F3  44                 	db	68	;'D'
  9565  00F2F4  20                 	db	32
  9566  00F2F5  61                 	db	97	;'a'
  9567  00F2F6  73                 	db	115	;'s'
  9568  00F2F7  20                 	db	32
  9569  00F2F8  73                 	db	115	;'s'
  9570  00F2F9  74                 	db	116	;'t'
  9571  00F2FA  6F                 	db	111	;'o'
  9572  00F2FB  72                 	db	114	;'r'
  9573  00F2FC  65                 	db	101	;'e'
  9574  00F2FD  64                 	db	100	;'d'
  9575  00F2FE  20                 	db	32
  9576  00F2FF  69                 	db	105	;'i'
  9577  00F300  6E                 	db	110	;'n'
  9578  00F301  20                 	db	32
  9579  00F302  46                 	db	70	;'F'
  9580  00F303  6C                 	db	108	;'l'
  9581  00F304  61                 	db	97	;'a'
  9582  00F305  73                 	db	115	;'s'
  9583  00F306  68                 	db	104	;'h'
  9584  00F307  20                 	db	32
  9585  00F308  69                 	db	105	;'i'
  9586  00F309  73                 	db	115	;'s'
  9587  00F30A  3A                 	db	58	;':'
  9588  00F30B  20                 	db	32
  9589  00F30C  25                 	db	37
  9590  00F30D  63                 	db	99	;'c'
  9591  00F30E  25                 	db	37
  9592  00F30F  30                 	db	48	;'0'
  9593  00F310  33                 	db	51	;'3'
  9594  00F311  64                 	db	100	;'d'
  9595  00F312  0A                 	db	10
  9596  00F313  0D                 	db	13
  9597  00F314  00                 	db	0
  9598  00F315                     STR_107:
  9599  00F315  4D                 	db	77	;'M'
  9600  00F316  65                 	db	101	;'e'
  9601  00F317  61                 	db	97	;'a'
  9602  00F318  73                 	db	115	;'s'
  9603  00F319  75                 	db	117	;'u'
  9604  00F31A  72                 	db	114	;'r'
  9605  00F31B  65                 	db	101	;'e'
  9606  00F31C  64                 	db	100	;'d'
  9607  00F31D  20                 	db	32
  9608  00F31E  6F                 	db	111	;'o'
  9609  00F31F  75                 	db	117	;'u'
  9610  00F320  74                 	db	116	;'t'
  9611  00F321  70                 	db	112	;'p'
  9612  00F322  75                 	db	117	;'u'
  9613  00F323  74                 	db	116	;'t'
  9614  00F324  20                 	db	32
  9615  00F325  65                 	db	101	;'e'
  9616  00F326  6E                 	db	110	;'n'
  9617  00F327  65                 	db	101	;'e'
  9618  00F328  72                 	db	114	;'r'
  9619  00F329  67                 	db	103	;'g'
  9620  00F32A  79                 	db	121	;'y'
  9621  00F32B  20                 	db	32
  9622  00F32C  68                 	db	104	;'h'
  9623  00F32D  61                 	db	97	;'a'
  9624  00F32E  73                 	db	115	;'s'
  9625  00F32F  20                 	db	32
  9626  00F330  62                 	db	98	;'b'
  9627  00F331  65                 	db	101	;'e'
  9628  00F332  65                 	db	101	;'e'
  9629  00F333  6E                 	db	110	;'n'
  9630  00F334  20                 	db	32
  9631  00F335  72                 	db	114	;'r'
  9632  00F336  65                 	db	101	;'e'
  9633  00F337  73                 	db	115	;'s'
  9634  00F338  65                 	db	101	;'e'
  9635  00F339  74                 	db	116	;'t'
  9636  00F33A  20                 	db	32
  9637  00F33B  74                 	db	116	;'t'
  9638  00F33C  6F                 	db	111	;'o'
  9639  00F33D  20                 	db	32
  9640  00F33E  7A                 	db	122	;'z'
  9641  00F33F  65                 	db	101	;'e'
  9642  00F340  72                 	db	114	;'r'
  9643  00F341  6F                 	db	111	;'o'
  9644  00F342  20                 	db	32
  9645  00F343  57                 	db	87	;'W'
  9646  00F344  61                 	db	97	;'a'
  9647  00F345  74                 	db	116	;'t'
  9648  00F346  74                 	db	116	;'t'
  9649  00F347  20                 	db	32
  9650  00F348  48                 	db	72	;'H'
  9651  00F349  6F                 	db	111	;'o'
  9652  00F34A  75                 	db	117	;'u'
  9653  00F34B  72                 	db	114	;'r'
  9654  00F34C  73                 	db	115	;'s'
  9655  00F34D  0A                 	db	10
  9656  00F34E  0D                 	db	13
  9657  00F34F  00                 	db	0
  9658  00F350                     STR_136:
  9659  00F350  44                 	db	68	;'D'
  9660  00F351  65                 	db	101	;'e'
  9661  00F352  76                 	db	118	;'v'
  9662  00F353  69                 	db	105	;'i'
  9663  00F354  63                 	db	99	;'c'
  9664  00F355  65                 	db	101	;'e'
  9665  00F356  20                 	db	32
  9666  00F357  6F                 	db	111	;'o'
  9667  00F358  6E                 	db	110	;'n'
  9668  00F359  20                 	db	32
  9669  00F35A  74                 	db	116	;'t'
  9670  00F35B  69                 	db	105	;'i'
  9671  00F35C  6D                 	db	109	;'m'
  9672  00F35D  65                 	db	101	;'e'
  9673  00F35E  20                 	db	32
  9674  00F35F  73                 	db	115	;'s'
  9675  00F360  69                 	db	105	;'i'
  9676  00F361  6E                 	db	110	;'n'
  9677  00F362  63                 	db	99	;'c'
  9678  00F363  65                 	db	101	;'e'
  9679  00F364  20                 	db	32
  9680  00F365  6C                 	db	108	;'l'
  9681  00F366  61                 	db	97	;'a'
  9682  00F367  73                 	db	115	;'s'
  9683  00F368  74                 	db	116	;'t'
  9684  00F369  20                 	db	32
  9685  00F36A  72                 	db	114	;'r'
  9686  00F36B  65                 	db	101	;'e'
  9687  00F36C  73                 	db	115	;'s'
  9688  00F36D  65                 	db	101	;'e'
  9689  00F36E  74                 	db	116	;'t'
  9690  00F36F  20                 	db	32
  9691  00F370  63                 	db	99	;'c'
  9692  00F371  6F                 	db	111	;'o'
  9693  00F372  6E                 	db	110	;'n'
  9694  00F373  64                 	db	100	;'d'
  9695  00F374  69                 	db	105	;'i'
  9696  00F375  74                 	db	116	;'t'
  9697  00F376  69                 	db	105	;'i'
  9698  00F377  6F                 	db	111	;'o'
  9699  00F378  6E                 	db	110	;'n'
  9700  00F379  20                 	db	32
  9701  00F37A  69                 	db	105	;'i'
  9702  00F37B  73                 	db	115	;'s'
  9703  00F37C  20                 	db	32
  9704  00F37D  25                 	db	37
  9705  00F37E  64                 	db	100	;'d'
  9706  00F37F  20                 	db	32
  9707  00F380  73                 	db	115	;'s'
  9708  00F381  65                 	db	101	;'e'
  9709  00F382  63                 	db	99	;'c'
  9710  00F383  6F                 	db	111	;'o'
  9711  00F384  6E                 	db	110	;'n'
  9712  00F385  64                 	db	100	;'d'
  9713  00F386  73                 	db	115	;'s'
  9714  00F387  0A                 	db	10
  9715  00F388  0D                 	db	13
  9716  00F389  00                 	db	0
  9717  00F38A                     STR_93:
  9718  00F38A  46                 	db	70	;'F'
  9719  00F38B  69                 	db	105	;'i'
  9720  00F38C  78                 	db	120	;'x'
  9721  00F38D  65                 	db	101	;'e'
  9722  00F38E  64                 	db	100	;'d'
  9723  00F38F  20                 	db	32
  9724  00F390  56                 	db	86	;'V'
  9725  00F391  6F                 	db	111	;'o'
  9726  00F392  6C                 	db	108	;'l'
  9727  00F393  74                 	db	116	;'t'
  9728  00F394  61                 	db	97	;'a'
  9729  00F395  67                 	db	103	;'g'
  9730  00F396  65                 	db	101	;'e'
  9731  00F397  20                 	db	32
  9732  00F398  52                 	db	82	;'R'
  9733  00F399  65                 	db	101	;'e'
  9734  00F39A  66                 	db	102	;'f'
  9735  00F39B  65                 	db	101	;'e'
  9736  00F39C  72                 	db	114	;'r'
  9737  00F39D  65                 	db	101	;'e'
  9738  00F39E  6E                 	db	110	;'n'
  9739  00F39F  63                 	db	99	;'c'
  9740  00F3A0  65                 	db	101	;'e'
  9741  00F3A1  20                 	db	32
  9742  00F3A2  42                 	db	66	;'B'
  9743  00F3A3  75                 	db	117	;'u'
  9744  00F3A4  66                 	db	102	;'f'
  9745  00F3A5  66                 	db	102	;'f'
  9746  00F3A6  65                 	db	101	;'e'
  9747  00F3A7  72                 	db	114	;'r'
  9748  00F3A8  20                 	db	32
  9749  00F3A9  31                 	db	49	;'1'
  9750  00F3AA  20                 	db	32
  9751  00F3AB  6D                 	db	109	;'m'
  9752  00F3AC  65                 	db	101	;'e'
  9753  00F3AD  61                 	db	97	;'a'
  9754  00F3AE  73                 	db	115	;'s'
  9755  00F3AF  75                 	db	117	;'u'
  9756  00F3B0  72                 	db	114	;'r'
  9757  00F3B1  65                 	db	101	;'e'
  9758  00F3B2  64                 	db	100	;'d'
  9759  00F3B3  20                 	db	32
  9760  00F3B4  61                 	db	97	;'a'
  9761  00F3B5  73                 	db	115	;'s'
  9762  00F3B6  20                 	db	32
  9763  00F3B7  25                 	db	37
  9764  00F3B8  2E                 	db	46
  9765  00F3B9  33                 	db	51	;'3'
  9766  00F3BA  66                 	db	102	;'f'
  9767  00F3BB  20                 	db	32
  9768  00F3BC  56                 	db	86	;'V'
  9769  00F3BD  6F                 	db	111	;'o'
  9770  00F3BE  6C                 	db	108	;'l'
  9771  00F3BF  74                 	db	116	;'t'
  9772  00F3C0  73                 	db	115	;'s'
  9773  00F3C1  0A                 	db	10
  9774  00F3C2  0D                 	db	13
  9775  00F3C3  00                 	db	0
  9776  00F3C4                     STR_103:
  9777  00F3C4  4F                 	db	79	;'O'
  9778  00F3C5  75                 	db	117	;'u'
  9779  00F3C6  74                 	db	116	;'t'
  9780  00F3C7  70                 	db	112	;'p'
  9781  00F3C8  75                 	db	117	;'u'
  9782  00F3C9  74                 	db	116	;'t'
  9783  00F3CA  20                 	db	32
  9784  00F3CB  70                 	db	112	;'p'
  9785  00F3CC  6F                 	db	111	;'o'
  9786  00F3CD  77                 	db	119	;'w'
  9787  00F3CE  65                 	db	101	;'e'
  9788  00F3CF  72                 	db	114	;'r'
  9789  00F3D0  20                 	db	32
  9790  00F3D1  63                 	db	99	;'c'
  9791  00F3D2  61                 	db	97	;'a'
  9792  00F3D3  6C                 	db	108	;'l'
  9793  00F3D4  63                 	db	99	;'c'
  9794  00F3D5  75                 	db	117	;'u'
  9795  00F3D6  6C                 	db	108	;'l'
  9796  00F3D7  61                 	db	97	;'a'
  9797  00F3D8  74                 	db	116	;'t'
  9798  00F3D9  65                 	db	101	;'e'
  9799  00F3DA  64                 	db	100	;'d'
  9800  00F3DB  20                 	db	32
  9801  00F3DC  61                 	db	97	;'a'
  9802  00F3DD  73                 	db	115	;'s'
  9803  00F3DE  20                 	db	32
  9804  00F3DF  25                 	db	37
  9805  00F3E0  2E                 	db	46
  9806  00F3E1  33                 	db	51	;'3'
  9807  00F3E2  66                 	db	102	;'f'
  9808  00F3E3  20                 	db	32
  9809  00F3E4  57                 	db	87	;'W'
  9810  00F3E5  61                 	db	97	;'a'
  9811  00F3E6  74                 	db	116	;'t'
  9812  00F3E7  74                 	db	116	;'t'
  9813  00F3E8  73                 	db	115	;'s'
  9814  00F3E9  20                 	db	32
  9815  00F3EA  66                 	db	102	;'f'
  9816  00F3EB  72                 	db	114	;'r'
  9817  00F3EC  6F                 	db	111	;'o'
  9818  00F3ED  6D                 	db	109	;'m'
  9819  00F3EE  20                 	db	32
  9820  00F3EF  52                 	db	82	;'R'
  9821  00F3F0  4D                 	db	77	;'M'
  9822  00F3F1  53                 	db	83	;'S'
  9823  00F3F2  20                 	db	32
  9824  00F3F3  76                 	db	118	;'v'
  9825  00F3F4  61                 	db	97	;'a'
  9826  00F3F5  6C                 	db	108	;'l'
  9827  00F3F6  75                 	db	117	;'u'
  9828  00F3F7  65                 	db	101	;'e'
  9829  00F3F8  73                 	db	115	;'s'
  9830  00F3F9  0A                 	db	10
  9831  00F3FA  0D                 	db	13
  9832  00F3FB  00                 	db	0
  9833  00F3FC                     STR_165:
  9834  00F3FC  48                 	db	72	;'H'
  9835  00F3FD  65                 	db	101	;'e'
  9836  00F3FE  6C                 	db	108	;'l'
  9837  00F3FF  70                 	db	112	;'p'
  9838  00F400  20                 	db	32
  9839  00F401  6D                 	db	109	;'m'
  9840  00F402  65                 	db	101	;'e'
  9841  00F403  73                 	db	115	;'s'
  9842  00F404  73                 	db	115	;'s'
  9843  00F405  61                 	db	97	;'a'
  9844  00F406  67                 	db	103	;'g'
  9845  00F407  65                 	db	101	;'e'
  9846  00F408  73                 	db	115	;'s'
  9847  00F409  20                 	db	32
  9848  00F40A  61                 	db	97	;'a'
  9849  00F40B  6E                 	db	110	;'n'
  9850  00F40C  64                 	db	100	;'d'
  9851  00F40D  20                 	db	32
  9852  00F40E  6E                 	db	110	;'n'
  9853  00F40F  65                 	db	101	;'e'
  9854  00F410  75                 	db	117	;'u'
  9855  00F411  74                 	db	116	;'t'
  9856  00F412  72                 	db	114	;'r'
  9857  00F413  61                 	db	97	;'a'
  9858  00F414  6C                 	db	108	;'l'
  9859  00F415  20                 	db	32
  9860  00F416  72                 	db	114	;'r'
  9861  00F417  65                 	db	101	;'e'
  9862  00F418  73                 	db	115	;'s'
  9863  00F419  70                 	db	112	;'p'
  9864  00F41A  6F                 	db	111	;'o'
  9865  00F41B  6E                 	db	110	;'n'
  9866  00F41C  73                 	db	115	;'s'
  9867  00F41D  65                 	db	101	;'e'
  9868  00F41E  73                 	db	115	;'s'
  9869  00F41F  20                 	db	32
  9870  00F420  61                 	db	97	;'a'
  9871  00F421  70                 	db	112	;'p'
  9872  00F422  70                 	db	112	;'p'
  9873  00F423  65                 	db	101	;'e'
  9874  00F424  61                 	db	97	;'a'
  9875  00F425  72                 	db	114	;'r'
  9876  00F426  20                 	db	32
  9877  00F427  69                 	db	105	;'i'
  9878  00F428  6E                 	db	110	;'n'
  9879  00F429  20                 	db	32
  9880  00F42A  79                 	db	121	;'y'
  9881  00F42B  65                 	db	101	;'e'
  9882  00F42C  6C                 	db	108	;'l'
  9883  00F42D  6C                 	db	108	;'l'
  9884  00F42E  6F                 	db	111	;'o'
  9885  00F42F  77                 	db	119	;'w'
  9886  00F430  0A                 	db	10
  9887  00F431  0D                 	db	13
  9888  00F432  00                 	db	0
  9889  00F433                     STR_152:
  9890  00F433  4D                 	db	77	;'M'
  9891  00F434  61                 	db	97	;'a'
  9892  00F435  78                 	db	120	;'x'
  9893  00F436  69                 	db	105	;'i'
  9894  00F437  6D                 	db	109	;'m'
  9895  00F438  75                 	db	117	;'u'
  9896  00F439  6D                 	db	109	;'m'
  9897  00F43A  20                 	db	32
  9898  00F43B  72                 	db	114	;'r'
  9899  00F43C  65                 	db	101	;'e'
  9900  00F43D  63                 	db	99	;'c'
  9901  00F43E  6F                 	db	111	;'o'
  9902  00F43F  72                 	db	114	;'r'
  9903  00F440  64                 	db	100	;'d'
  9904  00F441  65                 	db	101	;'e'
  9905  00F442  64                 	db	100	;'d'
  9906  00F443  20                 	db	32
  9907  00F444  76                 	db	118	;'v'
  9908  00F445  61                 	db	97	;'a'
  9909  00F446  6C                 	db	108	;'l'
  9910  00F447  75                 	db	117	;'u'
  9911  00F448  65                 	db	101	;'e'
  9912  00F449  73                 	db	115	;'s'
  9913  00F44A  20                 	db	32
  9914  00F44B  65                 	db	101	;'e'
  9915  00F44C  72                 	db	114	;'r'
  9916  00F44D  61                 	db	97	;'a'
  9917  00F44E  73                 	db	115	;'s'
  9918  00F44F  65                 	db	101	;'e'
  9919  00F450  64                 	db	100	;'d'
  9920  00F451  20                 	db	32
  9921  00F452  66                 	db	102	;'f'
  9922  00F453  72                 	db	114	;'r'
  9923  00F454  6F                 	db	111	;'o'
  9924  00F455  6D                 	db	109	;'m'
  9925  00F456  20                 	db	32
  9926  00F457  53                 	db	83	;'S'
  9927  00F458  52                 	db	82	;'R'
  9928  00F459  41                 	db	65	;'A'
  9929  00F45A  4D                 	db	77	;'M'
  9930  00F45B  20                 	db	32
  9931  00F45C  61                 	db	97	;'a'
  9932  00F45D  6E                 	db	110	;'n'
  9933  00F45E  64                 	db	100	;'d'
  9934  00F45F  20                 	db	32
  9935  00F460  45                 	db	69	;'E'
  9936  00F461  45                 	db	69	;'E'
  9937  00F462  50                 	db	80	;'P'
  9938  00F463  52                 	db	82	;'R'
  9939  00F464  4F                 	db	79	;'O'
  9940  00F465  4D                 	db	77	;'M'
  9941  00F466  0A                 	db	10
  9942  00F467  0D                 	db	13
  9943  00F468  00                 	db	0
  9944  00F469                     STR_63:
  9945  00F469  20                 	db	32
  9946  00F46A  20                 	db	32
  9947  00F46B  20                 	db	32
  9948  00F46C  20                 	db	32
  9949  00F46D  55                 	db	85	;'U'
  9950  00F46E  73                 	db	115	;'s'
  9951  00F46F  65                 	db	101	;'e'
  9952  00F470  72                 	db	114	;'r'
  9953  00F471  20                 	db	32
  9954  00F472  49                 	db	73	;'I'
  9955  00F473  44                 	db	68	;'D'
  9956  00F474  20                 	db	32
  9957  00F475  57                 	db	87	;'W'
  9958  00F476  6F                 	db	111	;'o'
  9959  00F477  72                 	db	114	;'r'
  9960  00F478  64                 	db	100	;'d'
  9961  00F479  20                 	db	32
  9962  00F47A  25                 	db	37
  9963  00F47B  64                 	db	100	;'d'
  9964  00F47C  20                 	db	32
  9965  00F47D  28                 	db	40
  9966  00F47E  46                 	db	70	;'F'
  9967  00F47F  6C                 	db	108	;'l'
  9968  00F480  61                 	db	97	;'a'
  9969  00F481  73                 	db	115	;'s'
  9970  00F482  68                 	db	104	;'h'
  9971  00F483  20                 	db	32
  9972  00F484  61                 	db	97	;'a'
  9973  00F485  64                 	db	100	;'d'
  9974  00F486  64                 	db	100	;'d'
  9975  00F487  72                 	db	114	;'r'
  9976  00F488  65                 	db	101	;'e'
  9977  00F489  73                 	db	115	;'s'
  9978  00F48A  73                 	db	115	;'s'
  9979  00F48B  20                 	db	32
  9980  00F48C  30                 	db	48	;'0'
  9981  00F48D  78                 	db	120	;'x'
  9982  00F48E  32                 	db	50	;'2'
  9983  00F48F  30                 	db	48	;'0'
  9984  00F490  30                 	db	48	;'0'
  9985  00F491  30                 	db	48	;'0'
  9986  00F492  30                 	db	48	;'0'
  9987  00F493  25                 	db	37
  9988  00F494  58                 	db	88	;'X'
  9989  00F495  29                 	db	41
  9990  00F496  3A                 	db	58	;':'
  9991  00F497  20                 	db	32
  9992  00F498  30                 	db	48	;'0'
  9993  00F499  78                 	db	120	;'x'
  9994  00F49A  25                 	db	37
  9995  00F49B  58                 	db	88	;'X'
  9996  00F49C  0A                 	db	10
  9997  00F49D  0D                 	db	13
  9998  00F49E  00                 	db	0
  9999  00F49F                     STR_150:
 10000  00F49F  4D                 	db	77	;'M'
 10001  00F4A0  61                 	db	97	;'a'
 10002  00F4A1  78                 	db	120	;'x'
 10003  00F4A2  69                 	db	105	;'i'
 10004  00F4A3  6D                 	db	109	;'m'
 10005  00F4A4  75                 	db	117	;'u'
 10006  00F4A5  6D                 	db	109	;'m'
 10007  00F4A6  20                 	db	32
 10008  00F4A7  72                 	db	114	;'r'
 10009  00F4A8  65                 	db	101	;'e'
 10010  00F4A9  63                 	db	99	;'c'
 10011  00F4AA  6F                 	db	111	;'o'
 10012  00F4AB  72                 	db	114	;'r'
 10013  00F4AC  64                 	db	100	;'d'
 10014  00F4AD  65                 	db	101	;'e'
 10015  00F4AE  64                 	db	100	;'d'
 10016  00F4AF  20                 	db	32
 10017  00F4B0  46                 	db	70	;'F'
 10018  00F4B1  56                 	db	86	;'V'
 10019  00F4B2  52                 	db	82	;'R'
 10020  00F4B3  20                 	db	32
 10021  00F4B4  62                 	db	98	;'b'
 10022  00F4B5  75                 	db	117	;'u'
 10023  00F4B6  66                 	db	102	;'f'
 10024  00F4B7  66                 	db	102	;'f'
 10025  00F4B8  65                 	db	101	;'e'
 10026  00F4B9  72                 	db	114	;'r'
 10027  00F4BA  20                 	db	32
 10028  00F4BB  31                 	db	49	;'1'
 10029  00F4BC  20                 	db	32
 10030  00F4BD  76                 	db	118	;'v'
 10031  00F4BE  6F                 	db	111	;'o'
 10032  00F4BF  6C                 	db	108	;'l'
 10033  00F4C0  74                 	db	116	;'t'
 10034  00F4C1  61                 	db	97	;'a'
 10035  00F4C2  67                 	db	103	;'g'
 10036  00F4C3  65                 	db	101	;'e'
 10037  00F4C4  20                 	db	32
 10038  00F4C5  69                 	db	105	;'i'
 10039  00F4C6  73                 	db	115	;'s'
 10040  00F4C7  20                 	db	32
 10041  00F4C8  25                 	db	37
 10042  00F4C9  2E                 	db	46
 10043  00F4CA  33                 	db	51	;'3'
 10044  00F4CB  66                 	db	102	;'f'
 10045  00F4CC  20                 	db	32
 10046  00F4CD  56                 	db	86	;'V'
 10047  00F4CE  6F                 	db	111	;'o'
 10048  00F4CF  6C                 	db	108	;'l'
 10049  00F4D0  74                 	db	116	;'t'
 10050  00F4D1  73                 	db	115	;'s'
 10051  00F4D2  0A                 	db	10
 10052  00F4D3  0D                 	db	13
 10053  00F4D4  00                 	db	0
 10054  00F4D5                     STR_112:
 10055  00F4D5  49                 	db	73	;'I'
 10056  00F4D6  66                 	db	102	;'f'
 10057  00F4D7  20                 	db	32
 10058  00F4D8  79                 	db	121	;'y'
 10059  00F4D9  65                 	db	101	;'e'
 10060  00F4DA  73                 	db	115	;'s'
 10061  00F4DB  2C                 	db	44
 10062  00F4DC  20                 	db	32
 10063  00F4DD  72                 	db	114	;'r'
 10064  00F4DE  65                 	db	101	;'e'
 10065  00F4DF  70                 	db	112	;'p'
 10066  00F4E0  6C                 	db	108	;'l'
 10067  00F4E1  79                 	db	121	;'y'
 10068  00F4E2  20                 	db	32
 10069  00F4E3  27                 	db	39
 10070  00F4E4  45                 	db	69	;'E'
 10071  00F4E5  6E                 	db	110	;'n'
 10072  00F4E6  61                 	db	97	;'a'
 10073  00F4E7  62                 	db	98	;'b'
 10074  00F4E8  6C                 	db	108	;'l'
 10075  00F4E9  65                 	db	101	;'e'
 10076  00F4EA  20                 	db	32
 10077  00F4EB  44                 	db	68	;'D'
 10078  00F4EC  69                 	db	105	;'i'
 10079  00F4ED  6D                 	db	109	;'m'
 10080  00F4EE  6D                 	db	109	;'m'
 10081  00F4EF  69                 	db	105	;'i'
 10082  00F4F0  6E                 	db	110	;'n'
 10083  00F4F1  67                 	db	103	;'g'
 10084  00F4F2  20                 	db	32
 10085  00F4F3  59                 	db	89	;'Y'
 10086  00F4F4  27                 	db	39
 10087  00F4F5  20                 	db	32
 10088  00F4F6  6F                 	db	111	;'o'
 10089  00F4F7  6E                 	db	110	;'n'
 10090  00F4F8  20                 	db	32
 10091  00F4F9  74                 	db	116	;'t'
 10092  00F4FA  68                 	db	104	;'h'
 10093  00F4FB  65                 	db	101	;'e'
 10094  00F4FC  20                 	db	32
 10095  00F4FD  6E                 	db	110	;'n'
 10096  00F4FE  65                 	db	101	;'e'
 10097  00F4FF  78                 	db	120	;'x'
 10098  00F500  74                 	db	116	;'t'
 10099  00F501  20                 	db	32
 10100  00F502  6C                 	db	108	;'l'
 10101  00F503  69                 	db	105	;'i'
 10102  00F504  6E                 	db	110	;'n'
 10103  00F505  65                 	db	101	;'e'
 10104  00F506  3A                 	db	58	;':'
 10105  00F507  0A                 	db	10
 10106  00F508  0D                 	db	13
 10107  00F509  00                 	db	0
 10108  00F50A                     STR_124:
 10109  00F50A  4C                 	db	76	;'L'
 10110  00F50B  6F                 	db	111	;'o'
 10111  00F50C  61                 	db	97	;'a'
 10112  00F50D  64                 	db	100	;'d'
 10113  00F50E  20                 	db	32
 10114  00F50F  69                 	db	105	;'i'
 10115  00F510  73                 	db	115	;'s'
 10116  00F511  20                 	db	32
 10117  00F512  63                 	db	99	;'c'
 10118  00F513  75                 	db	117	;'u'
 10119  00F514  72                 	db	114	;'r'
 10120  00F515  72                 	db	114	;'r'
 10121  00F516  65                 	db	101	;'e'
 10122  00F517  6E                 	db	110	;'n'
 10123  00F518  74                 	db	116	;'t'
 10124  00F519  6C                 	db	108	;'l'
 10125  00F51A  79                 	db	121	;'y'
 10126  00F51B  20                 	db	32
 10127  00F51C  65                 	db	101	;'e'
 10128  00F51D  6E                 	db	110	;'n'
 10129  00F51E  61                 	db	97	;'a'
 10130  00F51F  62                 	db	98	;'b'
 10131  00F520  6C                 	db	108	;'l'
 10132  00F521  65                 	db	101	;'e'
 10133  00F522  64                 	db	100	;'d'
 10134  00F523  2C                 	db	44
 10135  00F524  20                 	db	32
 10136  00F525  62                 	db	98	;'b'
 10137  00F526  75                 	db	117	;'u'
 10138  00F527  74                 	db	116	;'t'
 10139  00F528  20                 	db	32
 10140  00F529  64                 	db	100	;'d'
 10141  00F52A  69                 	db	105	;'i'
 10142  00F52B  6D                 	db	109	;'m'
 10143  00F52C  6D                 	db	109	;'m'
 10144  00F52D  69                 	db	105	;'i'
 10145  00F52E  6E                 	db	110	;'n'
 10146  00F52F  67                 	db	103	;'g'
 10147  00F530  20                 	db	32
 10148  00F531  69                 	db	105	;'i'
 10149  00F532  73                 	db	115	;'s'
 10150  00F533  20                 	db	32
 10151  00F534  64                 	db	100	;'d'
 10152  00F535  69                 	db	105	;'i'
 10153  00F536  73                 	db	115	;'s'
 10154  00F537  61                 	db	97	;'a'
 10155  00F538  62                 	db	98	;'b'
 10156  00F539  6C                 	db	108	;'l'
 10157  00F53A  65                 	db	101	;'e'
 10158  00F53B  64                 	db	100	;'d'
 10159  00F53C  0A                 	db	10
 10160  00F53D  0D                 	db	13
 10161  00F53E  00                 	db	0
 10162  00F53F                     STR_138:
 10163  00F53F  4C                 	db	76	;'L'
 10164  00F540  6F                 	db	111	;'o'
 10165  00F541  61                 	db	97	;'a'
 10166  00F542  64                 	db	100	;'d'
 10167  00F543  20                 	db	32
 10168  00F544  6F                 	db	111	;'o'
 10169  00F545  6E                 	db	110	;'n'
 10170  00F546  20                 	db	32
 10171  00F547  74                 	db	116	;'t'
 10172  00F548  69                 	db	105	;'i'
 10173  00F549  6D                 	db	109	;'m'
 10174  00F54A  65                 	db	101	;'e'
 10175  00F54B  20                 	db	32
 10176  00F54C  73                 	db	115	;'s'
 10177  00F54D  69                 	db	105	;'i'
 10178  00F54E  6E                 	db	110	;'n'
 10179  00F54F  63                 	db	99	;'c'
 10180  00F550  65                 	db	101	;'e'
 10181  00F551  20                 	db	32
 10182  00F552  6C                 	db	108	;'l'
 10183  00F553  61                 	db	97	;'a'
 10184  00F554  73                 	db	115	;'s'
 10185  00F555  74                 	db	116	;'t'
 10186  00F556  20                 	db	32
 10187  00F557  64                 	db	100	;'d'
 10188  00F558  65                 	db	101	;'e'
 10189  00F559  76                 	db	118	;'v'
 10190  00F55A  69                 	db	105	;'i'
 10191  00F55B  63                 	db	99	;'c'
 10192  00F55C  65                 	db	101	;'e'
 10193  00F55D  20                 	db	32
 10194  00F55E  72                 	db	114	;'r'
 10195  00F55F  65                 	db	101	;'e'
 10196  00F560  73                 	db	115	;'s'
 10197  00F561  65                 	db	101	;'e'
 10198  00F562  74                 	db	116	;'t'
 10199  00F563  20                 	db	32
 10200  00F564  69                 	db	105	;'i'
 10201  00F565  73                 	db	115	;'s'
 10202  00F566  20                 	db	32
 10203  00F567  25                 	db	37
 10204  00F568  64                 	db	100	;'d'
 10205  00F569  20                 	db	32
 10206  00F56A  73                 	db	115	;'s'
 10207  00F56B  65                 	db	101	;'e'
 10208  00F56C  63                 	db	99	;'c'
 10209  00F56D  6F                 	db	111	;'o'
 10210  00F56E  6E                 	db	110	;'n'
 10211  00F56F  64                 	db	100	;'d'
 10212  00F570  73                 	db	115	;'s'
 10213  00F571  0A                 	db	10
 10214  00F572  0D                 	db	13
 10215  00F573  00                 	db	0
 10216  00F574                     STR_111:
 10217  00F574  41                 	db	65	;'A'
 10218  00F575  72                 	db	114	;'r'
 10219  00F576  65                 	db	101	;'e'
 10220  00F577  20                 	db	32
 10221  00F578  79                 	db	121	;'y'
 10222  00F579  6F                 	db	111	;'o'
 10223  00F57A  75                 	db	117	;'u'
 10224  00F57B  20                 	db	32
 10225  00F57C  73                 	db	115	;'s'
 10226  00F57D  75                 	db	117	;'u'
 10227  00F57E  72                 	db	114	;'r'
 10228  00F57F  65                 	db	101	;'e'
 10229  00F580  20                 	db	32
 10230  00F581  79                 	db	121	;'y'
 10231  00F582  6F                 	db	111	;'o'
 10232  00F583  75                 	db	117	;'u'
 10233  00F584  27                 	db	39
 10234  00F585  64                 	db	100	;'d'
 10235  00F586  20                 	db	32
 10236  00F587  6C                 	db	108	;'l'
 10237  00F588  69                 	db	105	;'i'
 10238  00F589  6B                 	db	107	;'k'
 10239  00F58A  65                 	db	101	;'e'
 10240  00F58B  20                 	db	32
 10241  00F58C  74                 	db	116	;'t'
 10242  00F58D  6F                 	db	111	;'o'
 10243  00F58E  20                 	db	32
 10244  00F58F  65                 	db	101	;'e'
 10245  00F590  6E                 	db	110	;'n'
 10246  00F591  61                 	db	97	;'a'
 10247  00F592  62                 	db	98	;'b'
 10248  00F593  6C                 	db	108	;'l'
 10249  00F594  65                 	db	101	;'e'
 10250  00F595  20                 	db	32
 10251  00F596  6F                 	db	111	;'o'
 10252  00F597  75                 	db	117	;'u'
 10253  00F598  74                 	db	116	;'t'
 10254  00F599  70                 	db	112	;'p'
 10255  00F59A  75                 	db	117	;'u'
 10256  00F59B  74                 	db	116	;'t'
 10257  00F59C  20                 	db	32
 10258  00F59D  64                 	db	100	;'d'
 10259  00F59E  69                 	db	105	;'i'
 10260  00F59F  6D                 	db	109	;'m'
 10261  00F5A0  6D                 	db	109	;'m'
 10262  00F5A1  69                 	db	105	;'i'
 10263  00F5A2  6E                 	db	110	;'n'
 10264  00F5A3  67                 	db	103	;'g'
 10265  00F5A4  3F                 	db	63	;'?'
 10266  00F5A5  0A                 	db	10
 10267  00F5A6  0D                 	db	13
 10268  00F5A7  00                 	db	0
 10269  00F5A8                     STR_52:
 10270  00F5A8  54                 	db	84	;'T'
 10271  00F5A9  68                 	db	104	;'h'
 10272  00F5AA  65                 	db	101	;'e'
 10273  00F5AB  20                 	db	32
 10274  00F5AC  63                 	db	99	;'c'
 10275  00F5AD  61                 	db	97	;'a'
 10276  00F5AE  75                 	db	117	;'u'
 10277  00F5AF  73                 	db	115	;'s'
 10278  00F5B0  65                 	db	101	;'e'
 10279  00F5B1  20                 	db	32
 10280  00F5B2  6F                 	db	111	;'o'
 10281  00F5B3  66                 	db	102	;'f'
 10282  00F5B4  20                 	db	32
 10283  00F5B5  74                 	db	116	;'t'
 10284  00F5B6  68                 	db	104	;'h'
 10285  00F5B7  65                 	db	101	;'e'
 10286  00F5B8  20                 	db	32
 10287  00F5B9  6D                 	db	109	;'m'
 10288  00F5BA  6F                 	db	111	;'o'
 10289  00F5BB  73                 	db	115	;'s'
 10290  00F5BC  74                 	db	116	;'t'
 10291  00F5BD  20                 	db	32
 10292  00F5BE  72                 	db	114	;'r'
 10293  00F5BF  65                 	db	101	;'e'
 10294  00F5C0  63                 	db	99	;'c'
 10295  00F5C1  65                 	db	101	;'e'
 10296  00F5C2  6E                 	db	110	;'n'
 10297  00F5C3  74                 	db	116	;'t'
 10298  00F5C4  20                 	db	32
 10299  00F5C5  64                 	db	100	;'d'
 10300  00F5C6  65                 	db	101	;'e'
 10301  00F5C7  76                 	db	118	;'v'
 10302  00F5C8  69                 	db	105	;'i'
 10303  00F5C9  63                 	db	99	;'c'
 10304  00F5CA  65                 	db	101	;'e'
 10305  00F5CB  20                 	db	32
 10306  00F5CC  72                 	db	114	;'r'
 10307  00F5CD  65                 	db	101	;'e'
 10308  00F5CE  73                 	db	115	;'s'
 10309  00F5CF  65                 	db	101	;'e'
 10310  00F5D0  74                 	db	116	;'t'
 10311  00F5D1  20                 	db	32
 10312  00F5D2  77                 	db	119	;'w'
 10313  00F5D3  61                 	db	97	;'a'
 10314  00F5D4  73                 	db	115	;'s'
 10315  00F5D5  3A                 	db	58	;':'
 10316  00F5D6  20                 	db	32
 10317  00F5D7  25                 	db	37
 10318  00F5D8  73                 	db	115	;'s'
 10319  00F5D9  0A                 	db	10
 10320  00F5DA  0D                 	db	13
 10321  00F5DB  00                 	db	0
 10322  00F5DC                     STR_144:
 10323  00F5DC  4D                 	db	77	;'M'
 10324  00F5DD  61                 	db	97	;'a'
 10325  00F5DE  78                 	db	120	;'x'
 10326  00F5DF  69                 	db	105	;'i'
 10327  00F5E0  6D                 	db	109	;'m'
 10328  00F5E1  75                 	db	117	;'u'
 10329  00F5E2  6D                 	db	109	;'m'
 10330  00F5E3  20                 	db	32
 10331  00F5E4  72                 	db	114	;'r'
 10332  00F5E5  65                 	db	101	;'e'
 10333  00F5E6  63                 	db	99	;'c'
 10334  00F5E7  6F                 	db	111	;'o'
 10335  00F5E8  72                 	db	114	;'r'
 10336  00F5E9  64                 	db	100	;'d'
 10337  00F5EA  65                 	db	101	;'e'
 10338  00F5EB  64                 	db	100	;'d'
 10339  00F5EC  20                 	db	32
 10340  00F5ED  2B                 	db	43
 10341  00F5EE  33                 	db	51	;'3'
 10342  00F5EF  2E                 	db	46
 10343  00F5F0  33                 	db	51	;'3'
 10344  00F5F1  56                 	db	86	;'V'
 10345  00F5F2  20                 	db	32
 10346  00F5F3  72                 	db	114	;'r'
 10347  00F5F4  61                 	db	97	;'a'
 10348  00F5F5  69                 	db	105	;'i'
 10349  00F5F6  6C                 	db	108	;'l'
 10350  00F5F7  20                 	db	32
 10351  00F5F8  76                 	db	118	;'v'
 10352  00F5F9  6F                 	db	111	;'o'
 10353  00F5FA  6C                 	db	108	;'l'
 10354  00F5FB  74                 	db	116	;'t'
 10355  00F5FC  61                 	db	97	;'a'
 10356  00F5FD  67                 	db	103	;'g'
 10357  00F5FE  65                 	db	101	;'e'
 10358  00F5FF  20                 	db	32
 10359  00F600  69                 	db	105	;'i'
 10360  00F601  73                 	db	115	;'s'
 10361  00F602  20                 	db	32
 10362  00F603  25                 	db	37
 10363  00F604  2E                 	db	46
 10364  00F605  33                 	db	51	;'3'
 10365  00F606  66                 	db	102	;'f'
 10366  00F607  20                 	db	32
 10367  00F608  56                 	db	86	;'V'
 10368  00F609  6F                 	db	111	;'o'
 10369  00F60A  6C                 	db	108	;'l'
 10370  00F60B  74                 	db	116	;'t'
 10371  00F60C  73                 	db	115	;'s'
 10372  00F60D  0A                 	db	10
 10373  00F60E  0D                 	db	13
 10374  00F60F  00                 	db	0
 10375  00F610                     STR_140:
 10376  00F610  4D                 	db	77	;'M'
 10377  00F611  61                 	db	97	;'a'
 10378  00F612  78                 	db	120	;'x'
 10379  00F613  69                 	db	105	;'i'
 10380  00F614  6D                 	db	109	;'m'
 10381  00F615  75                 	db	117	;'u'
 10382  00F616  6D                 	db	109	;'m'
 10383  00F617  20                 	db	32
 10384  00F618  72                 	db	114	;'r'
 10385  00F619  65                 	db	101	;'e'
 10386  00F61A  63                 	db	99	;'c'
 10387  00F61B  6F                 	db	111	;'o'
 10388  00F61C  72                 	db	114	;'r'
 10389  00F61D  64                 	db	100	;'d'
 10390  00F61E  65                 	db	101	;'e'
 10391  00F61F  64                 	db	100	;'d'
 10392  00F620  20                 	db	32
 10393  00F621  52                 	db	82	;'R'
 10394  00F622  4D                 	db	77	;'M'
 10395  00F623  53                 	db	83	;'S'
 10396  00F624  20                 	db	32
 10397  00F625  6F                 	db	111	;'o'
 10398  00F626  75                 	db	117	;'u'
 10399  00F627  74                 	db	116	;'t'
 10400  00F628  70                 	db	112	;'p'
 10401  00F629  75                 	db	117	;'u'
 10402  00F62A  74                 	db	116	;'t'
 10403  00F62B  20                 	db	32
 10404  00F62C  63                 	db	99	;'c'
 10405  00F62D  75                 	db	117	;'u'
 10406  00F62E  72                 	db	114	;'r'
 10407  00F62F  72                 	db	114	;'r'
 10408  00F630  65                 	db	101	;'e'
 10409  00F631  6E                 	db	110	;'n'
 10410  00F632  74                 	db	116	;'t'
 10411  00F633  20                 	db	32
 10412  00F634  69                 	db	105	;'i'
 10413  00F635  73                 	db	115	;'s'
 10414  00F636  20                 	db	32
 10415  00F637  25                 	db	37
 10416  00F638  2E                 	db	46
 10417  00F639  33                 	db	51	;'3'
 10418  00F63A  66                 	db	102	;'f'
 10419  00F63B  20                 	db	32
 10420  00F63C  41                 	db	65	;'A'
 10421  00F63D  72                 	db	114	;'r'
 10422  00F63E  6D                 	db	109	;'m'
 10423  00F63F  73                 	db	115	;'s'
 10424  00F640  0A                 	db	10
 10425  00F641  0D                 	db	13
 10426  00F642  00                 	db	0
 10427  00F643                     STR_146:
 10428  00F643  4D                 	db	77	;'M'
 10429  00F644  61                 	db	97	;'a'
 10430  00F645  78                 	db	120	;'x'
 10431  00F646  69                 	db	105	;'i'
 10432  00F647  6D                 	db	109	;'m'
 10433  00F648  75                 	db	117	;'u'
 10434  00F649  6D                 	db	109	;'m'
 10435  00F64A  20                 	db	32
 10436  00F64B  72                 	db	114	;'r'
 10437  00F64C  65                 	db	101	;'e'
 10438  00F64D  63                 	db	99	;'c'
 10439  00F64E  6F                 	db	111	;'o'
 10440  00F64F  72                 	db	114	;'r'
 10441  00F650  64                 	db	100	;'d'
 10442  00F651  65                 	db	101	;'e'
 10443  00F652  64                 	db	100	;'d'
 10444  00F653  20                 	db	32
 10445  00F654  2B                 	db	43
 10446  00F655  31                 	db	49	;'1'
 10447  00F656  32                 	db	50	;'2'
 10448  00F657  56                 	db	86	;'V'
 10449  00F658  20                 	db	32
 10450  00F659  72                 	db	114	;'r'
 10451  00F65A  61                 	db	97	;'a'
 10452  00F65B  69                 	db	105	;'i'
 10453  00F65C  6C                 	db	108	;'l'
 10454  00F65D  20                 	db	32
 10455  00F65E  76                 	db	118	;'v'
 10456  00F65F  6F                 	db	111	;'o'
 10457  00F660  6C                 	db	108	;'l'
 10458  00F661  74                 	db	116	;'t'
 10459  00F662  61                 	db	97	;'a'
 10460  00F663  67                 	db	103	;'g'
 10461  00F664  65                 	db	101	;'e'
 10462  00F665  20                 	db	32
 10463  00F666  69                 	db	105	;'i'
 10464  00F667  73                 	db	115	;'s'
 10465  00F668  20                 	db	32
 10466  00F669  25                 	db	37
 10467  00F66A  2E                 	db	46
 10468  00F66B  33                 	db	51	;'3'
 10469  00F66C  66                 	db	102	;'f'
 10470  00F66D  20                 	db	32
 10471  00F66E  56                 	db	86	;'V'
 10472  00F66F  6F                 	db	111	;'o'
 10473  00F670  6C                 	db	108	;'l'
 10474  00F671  74                 	db	116	;'t'
 10475  00F672  73                 	db	115	;'s'
 10476  00F673  0A                 	db	10
 10477  00F674  0D                 	db	13
 10478  00F675  00                 	db	0
 10479  00F676                     STR_74:
 10480  00F676  43                 	db	67	;'C'
 10481  00F677  61                 	db	97	;'a'
 10482  00F678  6C                 	db	108	;'l'
 10483  00F679  6C                 	db	108	;'l'
 10484  00F67A  20                 	db	32
 10485  00F67B  27                 	db	39
 10486  00F67C  43                 	db	67	;'C'
 10487  00F67D  6C                 	db	108	;'l'
 10488  00F67E  65                 	db	101	;'e'
 10489  00F67F  61                 	db	97	;'a'
 10490  00F680  72                 	db	114	;'r'
 10491  00F681  20                 	db	32
 10492  00F682  41                 	db	65	;'A'
 10493  00F683  44                 	db	68	;'D'
 10494  00F684  43                 	db	67	;'C'
 10495  00F685  20                 	db	32
 10496  00F686  45                 	db	69	;'E'
 10497  00F687  72                 	db	114	;'r'
 10498  00F688  72                 	db	114	;'r'
 10499  00F689  6F                 	db	111	;'o'
 10500  00F68A  72                 	db	114	;'r'
 10501  00F68B  73                 	db	115	;'s'
 10502  00F68C  27                 	db	39
 10503  00F68D  20                 	db	32
 10504  00F68E  74                 	db	116	;'t'
 10505  00F68F  6F                 	db	111	;'o'
 10506  00F690  20                 	db	32
 10507  00F691  63                 	db	99	;'c'
 10508  00F692  6C                 	db	108	;'l'
 10509  00F693  65                 	db	101	;'e'
 10510  00F694  61                 	db	97	;'a'
 10511  00F695  72                 	db	114	;'r'
 10512  00F696  20                 	db	32
 10513  00F697  41                 	db	65	;'A'
 10514  00F698  44                 	db	68	;'D'
 10515  00F699  43                 	db	67	;'C'
 10516  00F69A  20                 	db	32
 10517  00F69B  65                 	db	101	;'e'
 10518  00F69C  72                 	db	114	;'r'
 10519  00F69D  72                 	db	114	;'r'
 10520  00F69E  6F                 	db	111	;'o'
 10521  00F69F  72                 	db	114	;'r'
 10522  00F6A0  28                 	db	40
 10523  00F6A1  73                 	db	115	;'s'
 10524  00F6A2  29                 	db	41
 10525  00F6A3  0A                 	db	10
 10526  00F6A4  0D                 	db	13
 10527  00F6A5  00                 	db	0
 10528  00F6A6                     STR_56:
 10529  00F6A6  4D                 	db	77	;'M'
 10530  00F6A7  61                 	db	97	;'a'
 10531  00F6A8  72                 	db	114	;'r'
 10532  00F6A9  71                 	db	113	;'q'
 10533  00F6AA  75                 	db	117	;'u'
 10534  00F6AB  65                 	db	101	;'e'
 10535  00F6AC  74                 	db	116	;'t'
 10536  00F6AD  74                 	db	116	;'t'
 10537  00F6AE  65                 	db	101	;'e'
 10538  00F6AF  20                 	db	32
 10539  00F6B0  55                 	db	85	;'U'
 10540  00F6B1  6E                 	db	110	;'n'
 10541  00F6B2  69                 	db	105	;'i'
 10542  00F6B3  76                 	db	118	;'v'
 10543  00F6B4  65                 	db	101	;'e'
 10544  00F6B5  72                 	db	114	;'r'
 10545  00F6B6  73                 	db	115	;'s'
 10546  00F6B7  69                 	db	105	;'i'
 10547  00F6B8  74                 	db	116	;'t'
 10548  00F6B9  79                 	db	121	;'y'
 10549  00F6BA  20                 	db	32
 10550  00F6BB  45                 	db	69	;'E'
 10551  00F6BC  4C                 	db	76	;'L'
 10552  00F6BD  45                 	db	69	;'E'
 10553  00F6BE  4E                 	db	78	;'N'
 10554  00F6BF  20                 	db	32
 10555  00F6C0  33                 	db	51	;'3'
 10556  00F6C1  30                 	db	48	;'0'
 10557  00F6C2  33                 	db	51	;'3'
 10558  00F6C3  35                 	db	53	;'5'
 10559  00F6C4  20                 	db	32
 10560  00F6C5  46                 	db	70	;'F'
 10561  00F6C6  69                 	db	105	;'i'
 10562  00F6C7  6E                 	db	110	;'n'
 10563  00F6C8  61                 	db	97	;'a'
 10564  00F6C9  6C                 	db	108	;'l'
 10565  00F6CA  20                 	db	32
 10566  00F6CB  50                 	db	80	;'P'
 10567  00F6CC  72                 	db	114	;'r'
 10568  00F6CD  6F                 	db	111	;'o'
 10569  00F6CE  6A                 	db	106	;'j'
 10570  00F6CF  65                 	db	101	;'e'
 10571  00F6D0  63                 	db	99	;'c'
 10572  00F6D1  74                 	db	116	;'t'
 10573  00F6D2  0A                 	db	10
 10574  00F6D3  0D                 	db	13
 10575  00F6D4  00                 	db	0
 10576  00F6D5                     STR_66:
 10577  00F6D5  54                 	db	84	;'T'
 10578  00F6D6  68                 	db	104	;'h'
 10579  00F6D7  65                 	db	101	;'e'
 10580  00F6D8  20                 	db	32
 10581  00F6D9  66                 	db	102	;'f'
 10582  00F6DA  6F                 	db	111	;'o'
 10583  00F6DB  6C                 	db	108	;'l'
 10584  00F6DC  6C                 	db	108	;'l'
 10585  00F6DD  6F                 	db	111	;'o'
 10586  00F6DE  77                 	db	119	;'w'
 10587  00F6DF  69                 	db	105	;'i'
 10588  00F6E0  6E                 	db	110	;'n'
 10589  00F6E1  67                 	db	103	;'g'
 10590  00F6E2  20                 	db	32
 10591  00F6E3  63                 	db	99	;'c'
 10592  00F6E4  68                 	db	104	;'h'
 10593  00F6E5  61                 	db	97	;'a'
 10594  00F6E6  6E                 	db	110	;'n'
 10595  00F6E7  6E                 	db	110	;'n'
 10596  00F6E8  65                 	db	101	;'e'
 10597  00F6E9  6C                 	db	108	;'l'
 10598  00F6EA  73                 	db	115	;'s'
 10599  00F6EB  20                 	db	32
 10600  00F6EC  63                 	db	99	;'c'
 10601  00F6ED  61                 	db	97	;'a'
 10602  00F6EE  75                 	db	117	;'u'
 10603  00F6EF  73                 	db	115	;'s'
 10604  00F6F0  65                 	db	101	;'e'
 10605  00F6F1  64                 	db	100	;'d'
 10606  00F6F2  20                 	db	32
 10607  00F6F3  61                 	db	97	;'a'
 10608  00F6F4  6E                 	db	110	;'n'
 10609  00F6F5  20                 	db	32
 10610  00F6F6  41                 	db	65	;'A'
 10611  00F6F7  44                 	db	68	;'D'
 10612  00F6F8  43                 	db	67	;'C'
 10613  00F6F9  20                 	db	32
 10614  00F6FA  65                 	db	101	;'e'
 10615  00F6FB  72                 	db	114	;'r'
 10616  00F6FC  72                 	db	114	;'r'
 10617  00F6FD  6F                 	db	111	;'o'
 10618  00F6FE  72                 	db	114	;'r'
 10619  00F6FF  3A                 	db	58	;':'
 10620  00F700  0A                 	db	10
 10621  00F701  0D                 	db	13
 10622  00F702  00                 	db	0
 10623  00F703                     STR_168:
 10624  00F703  45                 	db	69	;'E'
 10625  00F704  72                 	db	114	;'r'
 10626  00F705  72                 	db	114	;'r'
 10627  00F706  6F                 	db	111	;'o'
 10628  00F707  72                 	db	114	;'r'
 10629  00F708  73                 	db	115	;'s'
 10630  00F709  20                 	db	32
 10631  00F70A  61                 	db	97	;'a'
 10632  00F70B  6E                 	db	110	;'n'
 10633  00F70C  64                 	db	100	;'d'
 10634  00F70D  20                 	db	32
 10635  00F70E  6E                 	db	110	;'n'
 10636  00F70F  65                 	db	101	;'e'
 10637  00F710  67                 	db	103	;'g'
 10638  00F711  61                 	db	97	;'a'
 10639  00F712  74                 	db	116	;'t'
 10640  00F713  69                 	db	105	;'i'
 10641  00F714  76                 	db	118	;'v'
 10642  00F715  65                 	db	101	;'e'
 10643  00F716  20                 	db	32
 10644  00F717  72                 	db	114	;'r'
 10645  00F718  65                 	db	101	;'e'
 10646  00F719  73                 	db	115	;'s'
 10647  00F71A  70                 	db	112	;'p'
 10648  00F71B  6F                 	db	111	;'o'
 10649  00F71C  6E                 	db	110	;'n'
 10650  00F71D  73                 	db	115	;'s'
 10651  00F71E  65                 	db	101	;'e'
 10652  00F71F  73                 	db	115	;'s'
 10653  00F720  20                 	db	32
 10654  00F721  61                 	db	97	;'a'
 10655  00F722  70                 	db	112	;'p'
 10656  00F723  70                 	db	112	;'p'
 10657  00F724  65                 	db	101	;'e'
 10658  00F725  61                 	db	97	;'a'
 10659  00F726  72                 	db	114	;'r'
 10660  00F727  20                 	db	32
 10661  00F728  69                 	db	105	;'i'
 10662  00F729  6E                 	db	110	;'n'
 10663  00F72A  20                 	db	32
 10664  00F72B  72                 	db	114	;'r'
 10665  00F72C  65                 	db	101	;'e'
 10666  00F72D  64                 	db	100	;'d'
 10667  00F72E  0A                 	db	10
 10668  00F72F  0D                 	db	13
 10669  00F730  00                 	db	0
 10670  00F731                     STR_131:
 10671  00F731  45                 	db	69	;'E'
 10672  00F732  6E                 	db	110	;'n'
 10673  00F733  74                 	db	116	;'t'
 10674  00F734  65                 	db	101	;'e'
 10675  00F735  72                 	db	114	;'r'
 10676  00F736  20                 	db	32
 10677  00F737  27                 	db	39
 10678  00F738  48                 	db	72	;'H'
 10679  00F739  65                 	db	101	;'e'
 10680  00F73A  6C                 	db	108	;'l'
 10681  00F73B  70                 	db	112	;'p'
 10682  00F73C  27                 	db	39
 10683  00F73D  20                 	db	32
 10684  00F73E  66                 	db	102	;'f'
 10685  00F73F  6F                 	db	111	;'o'
 10686  00F740  72                 	db	114	;'r'
 10687  00F741  20                 	db	32
 10688  00F742  6C                 	db	108	;'l'
 10689  00F743  69                 	db	105	;'i'
 10690  00F744  73                 	db	115	;'s'
 10691  00F745  74                 	db	116	;'t'
 10692  00F746  20                 	db	32
 10693  00F747  6F                 	db	111	;'o'
 10694  00F748  66                 	db	102	;'f'
 10695  00F749  20                 	db	32
 10696  00F74A  61                 	db	97	;'a'
 10697  00F74B  76                 	db	118	;'v'
 10698  00F74C  61                 	db	97	;'a'
 10699  00F74D  69                 	db	105	;'i'
 10700  00F74E  6C                 	db	108	;'l'
 10701  00F74F  61                 	db	97	;'a'
 10702  00F750  62                 	db	98	;'b'
 10703  00F751  6C                 	db	108	;'l'
 10704  00F752  65                 	db	101	;'e'
 10705  00F753  20                 	db	32
 10706  00F754  63                 	db	99	;'c'
 10707  00F755  6F                 	db	111	;'o'
 10708  00F756  6D                 	db	109	;'m'
 10709  00F757  6D                 	db	109	;'m'
 10710  00F758  61                 	db	97	;'a'
 10711  00F759  6E                 	db	110	;'n'
 10712  00F75A  64                 	db	100	;'d'
 10713  00F75B  73                 	db	115	;'s'
 10714  00F75C  0A                 	db	10
 10715  00F75D  0D                 	db	13
 10716  00F75E  00                 	db	0
 10717  00F75F                     STR_142:
 10718  00F75F  4D                 	db	77	;'M'
 10719  00F760  61                 	db	97	;'a'
 10720  00F761  78                 	db	120	;'x'
 10721  00F762  69                 	db	105	;'i'
 10722  00F763  6D                 	db	109	;'m'
 10723  00F764  75                 	db	117	;'u'
 10724  00F765  6D                 	db	109	;'m'
 10725  00F766  20                 	db	32
 10726  00F767  72                 	db	114	;'r'
 10727  00F768  65                 	db	101	;'e'
 10728  00F769  63                 	db	99	;'c'
 10729  00F76A  6F                 	db	111	;'o'
 10730  00F76B  72                 	db	114	;'r'
 10731  00F76C  64                 	db	100	;'d'
 10732  00F76D  65                 	db	101	;'e'
 10733  00F76E  64                 	db	100	;'d'
 10734  00F76F  20                 	db	32
 10735  00F770  6F                 	db	111	;'o'
 10736  00F771  75                 	db	117	;'u'
 10737  00F772  74                 	db	116	;'t'
 10738  00F773  70                 	db	112	;'p'
 10739  00F774  75                 	db	117	;'u'
 10740  00F775  74                 	db	116	;'t'
 10741  00F776  20                 	db	32
 10742  00F777  70                 	db	112	;'p'
 10743  00F778  6F                 	db	111	;'o'
 10744  00F779  77                 	db	119	;'w'
 10745  00F77A  65                 	db	101	;'e'
 10746  00F77B  72                 	db	114	;'r'
 10747  00F77C  20                 	db	32
 10748  00F77D  69                 	db	105	;'i'
 10749  00F77E  73                 	db	115	;'s'
 10750  00F77F  20                 	db	32
 10751  00F780  25                 	db	37
 10752  00F781  2E                 	db	46
 10753  00F782  33                 	db	51	;'3'
 10754  00F783  66                 	db	102	;'f'
 10755  00F784  20                 	db	32
 10756  00F785  57                 	db	87	;'W'
 10757  00F786  61                 	db	97	;'a'
 10758  00F787  74                 	db	116	;'t'
 10759  00F788  74                 	db	116	;'t'
 10760  00F789  73                 	db	115	;'s'
 10761  00F78A  0A                 	db	10
 10762  00F78B  0D                 	db	13
 10763  00F78C  00                 	db	0
 10764  00F78D                     STR_148:
 10765  00F78D  4D                 	db	77	;'M'
 10766  00F78E  61                 	db	97	;'a'
 10767  00F78F  78                 	db	120	;'x'
 10768  00F790  69                 	db	105	;'i'
 10769  00F791  6D                 	db	109	;'m'
 10770  00F792  75                 	db	117	;'u'
 10771  00F793  6D                 	db	109	;'m'
 10772  00F794  20                 	db	32
 10773  00F795  72                 	db	114	;'r'
 10774  00F796  65                 	db	101	;'e'
 10775  00F797  63                 	db	99	;'c'
 10776  00F798  6F                 	db	111	;'o'
 10777  00F799  72                 	db	114	;'r'
 10778  00F79A  64                 	db	100	;'d'
 10779  00F79B  65                 	db	101	;'e'
 10780  00F79C  64                 	db	100	;'d'
 10781  00F79D  20                 	db	32
 10782  00F79E  64                 	db	100	;'d'
 10783  00F79F  69                 	db	105	;'i'
 10784  00F7A0  65                 	db	101	;'e'
 10785  00F7A1  20                 	db	32
 10786  00F7A2  74                 	db	116	;'t'
 10787  00F7A3  65                 	db	101	;'e'
 10788  00F7A4  6D                 	db	109	;'m'
 10789  00F7A5  70                 	db	112	;'p'
 10790  00F7A6  65                 	db	101	;'e'
 10791  00F7A7  72                 	db	114	;'r'
 10792  00F7A8  61                 	db	97	;'a'
 10793  00F7A9  74                 	db	116	;'t'
 10794  00F7AA  75                 	db	117	;'u'
 10795  00F7AB  72                 	db	114	;'r'
 10796  00F7AC  65                 	db	101	;'e'
 10797  00F7AD  20                 	db	32
 10798  00F7AE  69                 	db	105	;'i'
 10799  00F7AF  73                 	db	115	;'s'
 10800  00F7B0  20                 	db	32
 10801  00F7B1  25                 	db	37
 10802  00F7B2  2E                 	db	46
 10803  00F7B3  33                 	db	51	;'3'
 10804  00F7B4  66                 	db	102	;'f'
 10805  00F7B5  20                 	db	32
 10806  00F7B6  43                 	db	67	;'C'
 10807  00F7B7  0A                 	db	10
 10808  00F7B8  0D                 	db	13
 10809  00F7B9  00                 	db	0
 10810  00F7BA                     STR_118:
 10811  00F7BA  4C                 	db	76	;'L'
 10812  00F7BB  6F                 	db	111	;'o'
 10813  00F7BC  61                 	db	97	;'a'
 10814  00F7BD  64                 	db	100	;'d'
 10815  00F7BE  20                 	db	32
 10816  00F7BF  68                 	db	104	;'h'
 10817  00F7C0  61                 	db	97	;'a'
 10818  00F7C1  73                 	db	115	;'s'
 10819  00F7C2  20                 	db	32
 10820  00F7C3  62                 	db	98	;'b'
 10821  00F7C4  65                 	db	101	;'e'
 10822  00F7C5  65                 	db	101	;'e'
 10823  00F7C6  6E                 	db	110	;'n'
 10824  00F7C7  20                 	db	32
 10825  00F7C8  65                 	db	101	;'e'
 10826  00F7C9  6E                 	db	110	;'n'
 10827  00F7CA  61                 	db	97	;'a'
 10828  00F7CB  62                 	db	98	;'b'
 10829  00F7CC  6C                 	db	108	;'l'
 10830  00F7CD  65                 	db	101	;'e'
 10831  00F7CE  64                 	db	100	;'d'
 10832  00F7CF  2C                 	db	44
 10833  00F7D0  20                 	db	32
 10834  00F7D1  64                 	db	100	;'d'
 10835  00F7D2  69                 	db	105	;'i'
 10836  00F7D3  6D                 	db	109	;'m'
 10837  00F7D4  6D                 	db	109	;'m'
 10838  00F7D5  69                 	db	105	;'i'
 10839  00F7D6  6E                 	db	110	;'n'
 10840  00F7D7  67                 	db	103	;'g'
 10841  00F7D8  20                 	db	32
 10842  00F7D9  64                 	db	100	;'d'
 10843  00F7DA  69                 	db	105	;'i'
 10844  00F7DB  73                 	db	115	;'s'
 10845  00F7DC  61                 	db	97	;'a'
 10846  00F7DD  62                 	db	98	;'b'
 10847  00F7DE  6C                 	db	108	;'l'
 10848  00F7DF  65                 	db	101	;'e'
 10849  00F7E0  64                 	db	100	;'d'
 10850  00F7E1  0A                 	db	10
 10851  00F7E2  0D                 	db	13
 10852  00F7E3  00                 	db	0
 10853  00F7E4                     STR_125:
 10854  00F7E4  4C                 	db	76	;'L'
 10855  00F7E5  6F                 	db	111	;'o'
 10856  00F7E6  61                 	db	97	;'a'
 10857  00F7E7  64                 	db	100	;'d'
 10858  00F7E8  20                 	db	32
 10859  00F7E9  61                 	db	97	;'a'
 10860  00F7EA  6E                 	db	110	;'n'
 10861  00F7EB  64                 	db	100	;'d'
 10862  00F7EC  20                 	db	32
 10863  00F7ED  64                 	db	100	;'d'
 10864  00F7EE  69                 	db	105	;'i'
 10865  00F7EF  6D                 	db	109	;'m'
 10866  00F7F0  6D                 	db	109	;'m'
 10867  00F7F1  69                 	db	105	;'i'
 10868  00F7F2  6E                 	db	110	;'n'
 10869  00F7F3  67                 	db	103	;'g'
 10870  00F7F4  20                 	db	32
 10871  00F7F5  61                 	db	97	;'a'
 10872  00F7F6  72                 	db	114	;'r'
 10873  00F7F7  65                 	db	101	;'e'
 10874  00F7F8  20                 	db	32
 10875  00F7F9  63                 	db	99	;'c'
 10876  00F7FA  75                 	db	117	;'u'
 10877  00F7FB  72                 	db	114	;'r'
 10878  00F7FC  72                 	db	114	;'r'
 10879  00F7FD  65                 	db	101	;'e'
 10880  00F7FE  6E                 	db	110	;'n'
 10881  00F7FF  74                 	db	116	;'t'
 10882  00F800  6C                 	db	108	;'l'
 10883  00F801  79                 	db	121	;'y'
 10884  00F802  20                 	db	32
 10885  00F803  64                 	db	100	;'d'
 10886  00F804  69                 	db	105	;'i'
 10887  00F805  73                 	db	115	;'s'
 10888  00F806  61                 	db	97	;'a'
 10889  00F807  62                 	db	98	;'b'
 10890  00F808  6C                 	db	108	;'l'
 10891  00F809  65                 	db	101	;'e'
 10892  00F80A  64                 	db	100	;'d'
 10893  00F80B  0A                 	db	10
 10894  00F80C  0D                 	db	13
 10895  00F80D  00                 	db	0
 10896  00F80E                     STR_184:
 10897  00F80E  57                 	db	87	;'W'
 10898  00F80F  69                 	db	105	;'i'
 10899  00F810  6E                 	db	110	;'n'
 10900  00F811  64                 	db	100	;'d'
 10901  00F812  6F                 	db	111	;'o'
 10902  00F813  77                 	db	119	;'w'
 10903  00F814  65                 	db	101	;'e'
 10904  00F815  64                 	db	100	;'d'
 10905  00F816  20                 	db	32
 10906  00F817  57                 	db	87	;'W'
 10907  00F818  61                 	db	97	;'a'
 10908  00F819  74                 	db	116	;'t'
 10909  00F81A  63                 	db	99	;'c'
 10910  00F81B  68                 	db	104	;'h'
 10911  00F81C  20                 	db	32
 10912  00F81D  44                 	db	68	;'D'
 10913  00F81E  6F                 	db	111	;'o'
 10914  00F81F  67                 	db	103	;'g'
 10915  00F820  20                 	db	32
 10916  00F821  54                 	db	84	;'T'
 10917  00F822  69                 	db	105	;'i'
 10918  00F823  6D                 	db	109	;'m'
 10919  00F824  65                 	db	101	;'e'
 10920  00F825  72                 	db	114	;'r'
 10921  00F826  20                 	db	32
 10922  00F827  56                 	db	86	;'V'
 10923  00F828  69                 	db	105	;'i'
 10924  00F829  6F                 	db	111	;'o'
 10925  00F82A  6C                 	db	108	;'l'
 10926  00F82B  61                 	db	97	;'a'
 10927  00F82C  74                 	db	116	;'t'
 10928  00F82D  69                 	db	105	;'i'
 10929  00F82E  6F                 	db	111	;'o'
 10930  00F82F  6E                 	db	110	;'n'
 10931  00F830  20                 	db	32
 10932  00F831  52                 	db	82	;'R'
 10933  00F832  65                 	db	101	;'e'
 10934  00F833  73                 	db	115	;'s'
 10935  00F834  65                 	db	101	;'e'
 10936  00F835  74                 	db	116	;'t'
 10937  00F836  00                 	db	0
 10938  00F837                     STR_116:
 10939  00F837  54                 	db	84	;'T'
 10940  00F838  52                 	db	82	;'R'
 10941  00F839  49                 	db	73	;'I'
 10942  00F83A  41                 	db	65	;'A'
 10943  00F83B  43                 	db	67	;'C'
 10944  00F83C  20                 	db	32
 10945  00F83D  6F                 	db	111	;'o'
 10946  00F83E  75                 	db	117	;'u'
 10947  00F83F  74                 	db	116	;'t'
 10948  00F840  70                 	db	112	;'p'
 10949  00F841  75                 	db	117	;'u'
 10950  00F842  74                 	db	116	;'t'
 10951  00F843  20                 	db	32
 10952  00F844  64                 	db	100	;'d'
 10953  00F845  69                 	db	105	;'i'
 10954  00F846  6D                 	db	109	;'m'
 10955  00F847  6D                 	db	109	;'m'
 10956  00F848  69                 	db	105	;'i'
 10957  00F849  6E                 	db	110	;'n'
 10958  00F84A  67                 	db	103	;'g'
 10959  00F84B  20                 	db	32
 10960  00F84C  68                 	db	104	;'h'
 10961  00F84D  61                 	db	97	;'a'
 10962  00F84E  73                 	db	115	;'s'
 10963  00F84F  20                 	db	32
 10964  00F850  62                 	db	98	;'b'
 10965  00F851  65                 	db	101	;'e'
 10966  00F852  65                 	db	101	;'e'
 10967  00F853  6E                 	db	110	;'n'
 10968  00F854  20                 	db	32
 10969  00F855  64                 	db	100	;'d'
 10970  00F856  69                 	db	105	;'i'
 10971  00F857  73                 	db	115	;'s'
 10972  00F858  61                 	db	97	;'a'
 10973  00F859  62                 	db	98	;'b'
 10974  00F85A  6C                 	db	108	;'l'
 10975  00F85B  65                 	db	101	;'e'
 10976  00F85C  64                 	db	100	;'d'
 10977  00F85D  0A                 	db	10
 10978  00F85E  0D                 	db	13
 10979  00F85F  00                 	db	0
 10980  00F860                     STR_167:
 10981  00F860  4D                 	db	77	;'M'
 10982  00F861  65                 	db	101	;'e'
 10983  00F862  61                 	db	97	;'a'
 10984  00F863  73                 	db	115	;'s'
 10985  00F864  75                 	db	117	;'u'
 10986  00F865  72                 	db	114	;'r'
 10987  00F866  65                 	db	101	;'e'
 10988  00F867  6D                 	db	109	;'m'
 10989  00F868  65                 	db	101	;'e'
 10990  00F869  6E                 	db	110	;'n'
 10991  00F86A  74                 	db	116	;'t'
 10992  00F86B  20                 	db	32
 10993  00F86C  72                 	db	114	;'r'
 10994  00F86D  65                 	db	101	;'e'
 10995  00F86E  73                 	db	115	;'s'
 10996  00F86F  70                 	db	112	;'p'
 10997  00F870  6F                 	db	111	;'o'
 10998  00F871  6E                 	db	110	;'n'
 10999  00F872  73                 	db	115	;'s'
 11000  00F873  65                 	db	101	;'e'
 11001  00F874  73                 	db	115	;'s'
 11002  00F875  20                 	db	32
 11003  00F876  61                 	db	97	;'a'
 11004  00F877  70                 	db	112	;'p'
 11005  00F878  70                 	db	112	;'p'
 11006  00F879  65                 	db	101	;'e'
 11007  00F87A  61                 	db	97	;'a'
 11008  00F87B  72                 	db	114	;'r'
 11009  00F87C  20                 	db	32
 11010  00F87D  69                 	db	105	;'i'
 11011  00F87E  6E                 	db	110	;'n'
 11012  00F87F  20                 	db	32
 11013  00F880  63                 	db	99	;'c'
 11014  00F881  79                 	db	121	;'y'
 11015  00F882  61                 	db	97	;'a'
 11016  00F883  6E                 	db	110	;'n'
 11017  00F884  0A                 	db	10
 11018  00F885  0D                 	db	13
 11019  00F886  00                 	db	0
 11020  00F887                     STR_83:
 11021  00F887  4E                 	db	78	;'N'
 11022  00F888  6F                 	db	111	;'o'
 11023  00F889  20                 	db	32
 11024  00F88A  63                 	db	99	;'c'
 11025  00F88B  6F                 	db	111	;'o'
 11026  00F88C  6D                 	db	109	;'m'
 11027  00F88D  6D                 	db	109	;'m'
 11028  00F88E  75                 	db	117	;'u'
 11029  00F88F  6E                 	db	110	;'n'
 11030  00F890  69                 	db	105	;'i'
 11031  00F891  63                 	db	99	;'c'
 11032  00F892  61                 	db	97	;'a'
 11033  00F893  74                 	db	116	;'t'
 11034  00F894  69                 	db	105	;'i'
 11035  00F895  6F                 	db	111	;'o'
 11036  00F896  6E                 	db	110	;'n'
 11037  00F897  73                 	db	115	;'s'
 11038  00F898  20                 	db	32
 11039  00F899  65                 	db	101	;'e'
 11040  00F89A  72                 	db	114	;'r'
 11041  00F89B  72                 	db	114	;'r'
 11042  00F89C  6F                 	db	111	;'o'
 11043  00F89D  72                 	db	114	;'r'
 11044  00F89E  28                 	db	40
 11045  00F89F  73                 	db	115	;'s'
 11046  00F8A0  29                 	db	41
 11047  00F8A1  20                 	db	32
 11048  00F8A2  64                 	db	100	;'d'
 11049  00F8A3  65                 	db	101	;'e'
 11050  00F8A4  74                 	db	116	;'t'
 11051  00F8A5  65                 	db	101	;'e'
 11052  00F8A6  63                 	db	99	;'c'
 11053  00F8A7  74                 	db	116	;'t'
 11054  00F8A8  65                 	db	101	;'e'
 11055  00F8A9  64                 	db	100	;'d'
 11056  00F8AA  0A                 	db	10
 11057  00F8AB  0D                 	db	13
 11058  00F8AC  00                 	db	0
 11059  00F8AD                     STR_95:
 11060  00F8AD  41                 	db	65	;'A'
 11061  00F8AE  56                 	db	86	;'V'
 11062  00F8AF  53                 	db	83	;'S'
 11063  00F8B0  53                 	db	83	;'S'
 11064  00F8B1  20                 	db	32
 11065  00F8B2  6D                 	db	109	;'m'
 11066  00F8B3  65                 	db	101	;'e'
 11067  00F8B4  61                 	db	97	;'a'
 11068  00F8B5  73                 	db	115	;'s'
 11069  00F8B6  75                 	db	117	;'u'
 11070  00F8B7  72                 	db	114	;'r'
 11071  00F8B8  65                 	db	101	;'e'
 11072  00F8B9  64                 	db	100	;'d'
 11073  00F8BA  20                 	db	32
 11074  00F8BB  61                 	db	97	;'a'
 11075  00F8BC  73                 	db	115	;'s'
 11076  00F8BD  20                 	db	32
 11077  00F8BE  25                 	db	37
 11078  00F8BF  2E                 	db	46
 11079  00F8C0  33                 	db	51	;'3'
 11080  00F8C1  66                 	db	102	;'f'
 11081  00F8C2  20                 	db	32
 11082  00F8C3  56                 	db	86	;'V'
 11083  00F8C4  6F                 	db	111	;'o'
 11084  00F8C5  6C                 	db	108	;'l'
 11085  00F8C6  74                 	db	116	;'t'
 11086  00F8C7  73                 	db	115	;'s'
 11087  00F8C8  20                 	db	32
 11088  00F8C9  62                 	db	98	;'b'
 11089  00F8CA  79                 	db	121	;'y'
 11090  00F8CB  20                 	db	32
 11091  00F8CC  41                 	db	65	;'A'
 11092  00F8CD  44                 	db	68	;'D'
 11093  00F8CE  43                 	db	67	;'C'
 11094  00F8CF  0A                 	db	10
 11095  00F8D0  0D                 	db	13
 11096  00F8D1  00                 	db	0
 11097  00F8D2                     STR_87:
 11098  00F8D2  2B                 	db	43
 11099  00F8D3  33                 	db	51	;'3'
 11100  00F8D4  2E                 	db	46
 11101  00F8D5  33                 	db	51	;'3'
 11102  00F8D6  56                 	db	86	;'V'
 11103  00F8D7  20                 	db	32
 11104  00F8D8  72                 	db	114	;'r'
 11105  00F8D9  61                 	db	97	;'a'
 11106  00F8DA  69                 	db	105	;'i'
 11107  00F8DB  6C                 	db	108	;'l'
 11108  00F8DC  20                 	db	32
 11109  00F8DD  6D                 	db	109	;'m'
 11110  00F8DE  65                 	db	101	;'e'
 11111  00F8DF  61                 	db	97	;'a'
 11112  00F8E0  73                 	db	115	;'s'
 11113  00F8E1  75                 	db	117	;'u'
 11114  00F8E2  72                 	db	114	;'r'
 11115  00F8E3  65                 	db	101	;'e'
 11116  00F8E4  64                 	db	100	;'d'
 11117  00F8E5  20                 	db	32
 11118  00F8E6  61                 	db	97	;'a'
 11119  00F8E7  73                 	db	115	;'s'
 11120  00F8E8  20                 	db	32
 11121  00F8E9  2B                 	db	43
 11122  00F8EA  25                 	db	37
 11123  00F8EB  2E                 	db	46
 11124  00F8EC  33                 	db	51	;'3'
 11125  00F8ED  66                 	db	102	;'f'
 11126  00F8EE  20                 	db	32
 11127  00F8EF  56                 	db	86	;'V'
 11128  00F8F0  6F                 	db	111	;'o'
 11129  00F8F1  6C                 	db	108	;'l'
 11130  00F8F2  74                 	db	116	;'t'
 11131  00F8F3  73                 	db	115	;'s'
 11132  00F8F4  0A                 	db	10
 11133  00F8F5  0D                 	db	13
 11134  00F8F6  00                 	db	0
 11135  00F8F7                     STR_132:
 11136  00F8F7  44                 	db	68	;'D'
 11137  00F8F8  69                 	db	105	;'i'
 11138  00F8F9  6D                 	db	109	;'m'
 11139  00F8FA  6D                 	db	109	;'m'
 11140  00F8FB  69                 	db	105	;'i'
 11141  00F8FC  6E                 	db	110	;'n'
 11142  00F8FD  67                 	db	103	;'g'
 11143  00F8FE  20                 	db	32
 11144  00F8FF  68                 	db	104	;'h'
 11145  00F900  61                 	db	97	;'a'
 11146  00F901  73                 	db	115	;'s'
 11147  00F902  20                 	db	32
 11148  00F903  62                 	db	98	;'b'
 11149  00F904  65                 	db	101	;'e'
 11150  00F905  65                 	db	101	;'e'
 11151  00F906  6E                 	db	110	;'n'
 11152  00F907  20                 	db	32
 11153  00F908  73                 	db	115	;'s'
 11154  00F909  65                 	db	101	;'e'
 11155  00F90A  74                 	db	116	;'t'
 11156  00F90B  20                 	db	32
 11157  00F90C  74                 	db	116	;'t'
 11158  00F90D  6F                 	db	111	;'o'
 11159  00F90E  20                 	db	32
 11160  00F90F  25                 	db	37
 11161  00F910  64                 	db	100	;'d'
 11162  00F911  20                 	db	32
 11163  00F912  70                 	db	112	;'p'
 11164  00F913  65                 	db	101	;'e'
 11165  00F914  72                 	db	114	;'r'
 11166  00F915  63                 	db	99	;'c'
 11167  00F916  65                 	db	101	;'e'
 11168  00F917  6E                 	db	110	;'n'
 11169  00F918  74                 	db	116	;'t'
 11170  00F919  0A                 	db	10
 11171  00F91A  0D                 	db	13
 11172  00F91B  00                 	db	0
 11173  00F91C                     STR_91:
 11174  00F91C  44                 	db	68	;'D'
 11175  00F91D  69                 	db	105	;'i'
 11176  00F91E  65                 	db	101	;'e'
 11177  00F91F  20                 	db	32
 11178  00F920  54                 	db	84	;'T'
 11179  00F921  65                 	db	101	;'e'
 11180  00F922  6D                 	db	109	;'m'
 11181  00F923  70                 	db	112	;'p'
 11182  00F924  65                 	db	101	;'e'
 11183  00F925  72                 	db	114	;'r'
 11184  00F926  61                 	db	97	;'a'
 11185  00F927  74                 	db	116	;'t'
 11186  00F928  75                 	db	117	;'u'
 11187  00F929  72                 	db	114	;'r'
 11188  00F92A  65                 	db	101	;'e'
 11189  00F92B  20                 	db	32
 11190  00F92C  6D                 	db	109	;'m'
 11191  00F92D  65                 	db	101	;'e'
 11192  00F92E  61                 	db	97	;'a'
 11193  00F92F  73                 	db	115	;'s'
 11194  00F930  75                 	db	117	;'u'
 11195  00F931  72                 	db	114	;'r'
 11196  00F932  65                 	db	101	;'e'
 11197  00F933  64                 	db	100	;'d'
 11198  00F934  20                 	db	32
 11199  00F935  61                 	db	97	;'a'
 11200  00F936  73                 	db	115	;'s'
 11201  00F937  20                 	db	32
 11202  00F938  25                 	db	37
 11203  00F939  2E                 	db	46
 11204  00F93A  33                 	db	51	;'3'
 11205  00F93B  66                 	db	102	;'f'
 11206  00F93C  43                 	db	67	;'C'
 11207  00F93D  0A                 	db	10
 11208  00F93E  0D                 	db	13
 11209  00F93F  00                 	db	0
 11210  00F940                     STR_89:
 11211  00F940  2B                 	db	43
 11212  00F941  31                 	db	49	;'1'
 11213  00F942  32                 	db	50	;'2'
 11214  00F943  56                 	db	86	;'V'
 11215  00F944  20                 	db	32
 11216  00F945  72                 	db	114	;'r'
 11217  00F946  61                 	db	97	;'a'
 11218  00F947  69                 	db	105	;'i'
 11219  00F948  6C                 	db	108	;'l'
 11220  00F949  20                 	db	32
 11221  00F94A  6D                 	db	109	;'m'
 11222  00F94B  65                 	db	101	;'e'
 11223  00F94C  61                 	db	97	;'a'
 11224  00F94D  73                 	db	115	;'s'
 11225  00F94E  75                 	db	117	;'u'
 11226  00F94F  72                 	db	114	;'r'
 11227  00F950  65                 	db	101	;'e'
 11228  00F951  64                 	db	100	;'d'
 11229  00F952  20                 	db	32
 11230  00F953  61                 	db	97	;'a'
 11231  00F954  73                 	db	115	;'s'
 11232  00F955  20                 	db	32
 11233  00F956  2B                 	db	43
 11234  00F957  25                 	db	37
 11235  00F958  2E                 	db	46
 11236  00F959  33                 	db	51	;'3'
 11237  00F95A  66                 	db	102	;'f'
 11238  00F95B  20                 	db	32
 11239  00F95C  56                 	db	86	;'V'
 11240  00F95D  6F                 	db	111	;'o'
 11241  00F95E  6C                 	db	108	;'l'
 11242  00F95F  74                 	db	116	;'t'
 11243  00F960  73                 	db	115	;'s'
 11244  00F961  0A                 	db	10
 11245  00F962  0D                 	db	13
 11246  00F963  00                 	db	0
 11247  00F964                     STR_114:
 11248  00F964  4F                 	db	79	;'O'
 11249  00F965  75                 	db	117	;'u'
 11250  00F966  74                 	db	116	;'t'
 11251  00F967  70                 	db	112	;'p'
 11252  00F968  75                 	db	117	;'u'
 11253  00F969  74                 	db	116	;'t'
 11254  00F96A  20                 	db	32
 11255  00F96B  64                 	db	100	;'d'
 11256  00F96C  69                 	db	105	;'i'
 11257  00F96D  6D                 	db	109	;'m'
 11258  00F96E  6D                 	db	109	;'m'
 11259  00F96F  69                 	db	105	;'i'
 11260  00F970  6E                 	db	110	;'n'
 11261  00F971  67                 	db	103	;'g'
 11262  00F972  20                 	db	32
 11263  00F973  68                 	db	104	;'h'
 11264  00F974  61                 	db	97	;'a'
 11265  00F975  73                 	db	115	;'s'
 11266  00F976  20                 	db	32
 11267  00F977  62                 	db	98	;'b'
 11268  00F978  65                 	db	101	;'e'
 11269  00F979  65                 	db	101	;'e'
 11270  00F97A  6E                 	db	110	;'n'
 11271  00F97B  20                 	db	32
 11272  00F97C  65                 	db	101	;'e'
 11273  00F97D  6E                 	db	110	;'n'
 11274  00F97E  61                 	db	97	;'a'
 11275  00F97F  62                 	db	98	;'b'
 11276  00F980  6C                 	db	108	;'l'
 11277  00F981  65                 	db	101	;'e'
 11278  00F982  64                 	db	100	;'d'
 11279  00F983  0A                 	db	10
 11280  00F984  0D                 	db	13
 11281  00F985  00                 	db	0
 11282  00F986                     STR_85:
 11283  00F986  43                 	db	67	;'C'
 11284  00F987  6F                 	db	111	;'o'
 11285  00F988  6D                 	db	109	;'m'
 11286  00F989  6D                 	db	109	;'m'
 11287  00F98A  75                 	db	117	;'u'
 11288  00F98B  6E                 	db	110	;'n'
 11289  00F98C  69                 	db	105	;'i'
 11290  00F98D  63                 	db	99	;'c'
 11291  00F98E  61                 	db	97	;'a'
 11292  00F98F  74                 	db	116	;'t'
 11293  00F990  69                 	db	105	;'i'
 11294  00F991  6F                 	db	111	;'o'
 11295  00F992  6E                 	db	110	;'n'
 11296  00F993  73                 	db	115	;'s'
 11297  00F994  20                 	db	32
 11298  00F995  65                 	db	101	;'e'
 11299  00F996  72                 	db	114	;'r'
 11300  00F997  72                 	db	114	;'r'
 11301  00F998  6F                 	db	111	;'o'
 11302  00F999  72                 	db	114	;'r'
 11303  00F99A  28                 	db	40
 11304  00F99B  73                 	db	115	;'s'
 11305  00F99C  29                 	db	41
 11306  00F99D  20                 	db	32
 11307  00F99E  63                 	db	99	;'c'
 11308  00F99F  6C                 	db	108	;'l'
 11309  00F9A0  65                 	db	101	;'e'
 11310  00F9A1  61                 	db	97	;'a'
 11311  00F9A2  72                 	db	114	;'r'
 11312  00F9A3  65                 	db	101	;'e'
 11313  00F9A4  64                 	db	100	;'d'
 11314  00F9A5  0A                 	db	10
 11315  00F9A6  0D                 	db	13
 11316  00F9A7  00                 	db	0
 11317  00F9A8                     STR_99:
 11318  00F9A8  52                 	db	82	;'R'
 11319  00F9A9  4D                 	db	77	;'M'
 11320  00F9AA  53                 	db	83	;'S'
 11321  00F9AB  20                 	db	32
 11322  00F9AC  4F                 	db	79	;'O'
 11323  00F9AD  75                 	db	117	;'u'
 11324  00F9AE  74                 	db	116	;'t'
 11325  00F9AF  70                 	db	112	;'p'
 11326  00F9B0  75                 	db	117	;'u'
 11327  00F9B1  74                 	db	116	;'t'
 11328  00F9B2  20                 	db	32
 11329  00F9B3  43                 	db	67	;'C'
 11330  00F9B4  75                 	db	117	;'u'
 11331  00F9B5  72                 	db	114	;'r'
 11332  00F9B6  72                 	db	114	;'r'
 11333  00F9B7  65                 	db	101	;'e'
 11334  00F9B8  6E                 	db	110	;'n'
 11335  00F9B9  74                 	db	116	;'t'
 11336  00F9BA  20                 	db	32
 11337  00F9BB  69                 	db	105	;'i'
 11338  00F9BC  73                 	db	115	;'s'
 11339  00F9BD  20                 	db	32
 11340  00F9BE  25                 	db	37
 11341  00F9BF  2E                 	db	46
 11342  00F9C0  33                 	db	51	;'3'
 11343  00F9C1  66                 	db	102	;'f'
 11344  00F9C2  20                 	db	32
 11345  00F9C3  41                 	db	65	;'A'
 11346  00F9C4  72                 	db	114	;'r'
 11347  00F9C5  6D                 	db	109	;'m'
 11348  00F9C6  73                 	db	115	;'s'
 11349  00F9C7  0A                 	db	10
 11350  00F9C8  0D                 	db	13
 11351  00F9C9  00                 	db	0
 11352  00F9CA                     STR_101:
 11353  00F9CA  52                 	db	82	;'R'
 11354  00F9CB  4D                 	db	77	;'M'
 11355  00F9CC  53                 	db	83	;'S'
 11356  00F9CD  20                 	db	32
 11357  00F9CE  4F                 	db	79	;'O'
 11358  00F9CF  75                 	db	117	;'u'
 11359  00F9D0  74                 	db	116	;'t'
 11360  00F9D1  70                 	db	112	;'p'
 11361  00F9D2  75                 	db	117	;'u'
 11362  00F9D3  74                 	db	116	;'t'
 11363  00F9D4  20                 	db	32
 11364  00F9D5  56                 	db	86	;'V'
 11365  00F9D6  6F                 	db	111	;'o'
 11366  00F9D7  6C                 	db	108	;'l'
 11367  00F9D8  74                 	db	116	;'t'
 11368  00F9D9  61                 	db	97	;'a'
 11369  00F9DA  67                 	db	103	;'g'
 11370  00F9DB  65                 	db	101	;'e'
 11371  00F9DC  20                 	db	32
 11372  00F9DD  69                 	db	105	;'i'
 11373  00F9DE  73                 	db	115	;'s'
 11374  00F9DF  20                 	db	32
 11375  00F9E0  25                 	db	37
 11376  00F9E1  2E                 	db	46
 11377  00F9E2  33                 	db	51	;'3'
 11378  00F9E3  66                 	db	102	;'f'
 11379  00F9E4  20                 	db	32
 11380  00F9E5  56                 	db	86	;'V'
 11381  00F9E6  72                 	db	114	;'r'
 11382  00F9E7  6D                 	db	109	;'m'
 11383  00F9E8  73                 	db	115	;'s'
 11384  00F9E9  0A                 	db	10
 11385  00F9EA  0D                 	db	13
 11386  00F9EB  00                 	db	0
 11387  00F9EC                     STR_157:
 11388  00F9EC  48                 	db	72	;'H'
 11389  00F9ED  65                 	db	101	;'e'
 11390  00F9EE  6C                 	db	108	;'l'
 11391  00F9EF  70                 	db	112	;'p'
 11392  00F9F0  20                 	db	32
 11393  00F9F1  50                 	db	80	;'P'
 11394  00F9F2  72                 	db	114	;'r'
 11395  00F9F3  69                 	db	105	;'i'
 11396  00F9F4  6D                 	db	109	;'m'
 11397  00F9F5  61                 	db	97	;'a'
 11398  00F9F6  72                 	db	114	;'r'
 11399  00F9F7  79                 	db	121	;'y'
 11400  00F9F8  20                 	db	32
 11401  00F9F9  4D                 	db	77	;'M'
 11402  00F9FA  65                 	db	101	;'e'
 11403  00F9FB  61                 	db	97	;'a'
 11404  00F9FC  73                 	db	115	;'s'
 11405  00F9FD  75                 	db	117	;'u'
 11406  00F9FE  72                 	db	114	;'r'
 11407  00F9FF  65                 	db	101	;'e'
 11408  00FA00  6D                 	db	109	;'m'
 11409  00FA01  65                 	db	101	;'e'
 11410  00FA02  6E                 	db	110	;'n'
 11411  00FA03  74                 	db	116	;'t'
 11412  00FA04  20                 	db	32
 11413  00FA05  43                 	db	67	;'C'
 11414  00FA06  6F                 	db	111	;'o'
 11415  00FA07  6D                 	db	109	;'m'
 11416  00FA08  6D                 	db	109	;'m'
 11417  00FA09  61                 	db	97	;'a'
 11418  00FA0A  6E                 	db	110	;'n'
 11419  00FA0B  64                 	db	100	;'d'
 11420  00FA0C  73                 	db	115	;'s'
 11421  00FA0D  00                 	db	0
 11422  00FA0E                     STR_155:
 11423  00FA0E  48                 	db	72	;'H'
 11424  00FA0F  65                 	db	101	;'e'
 11425  00FA10  6C                 	db	108	;'l'
 11426  00FA11  70                 	db	112	;'p'
 11427  00FA12  20                 	db	32
 11428  00FA13  44                 	db	68	;'D'
 11429  00FA14  65                 	db	101	;'e'
 11430  00FA15  76                 	db	118	;'v'
 11431  00FA16  69                 	db	105	;'i'
 11432  00FA17  63                 	db	99	;'c'
 11433  00FA18  65                 	db	101	;'e'
 11434  00FA19  20                 	db	32
 11435  00FA1A  4D                 	db	77	;'M'
 11436  00FA1B  65                 	db	101	;'e'
 11437  00FA1C  61                 	db	97	;'a'
 11438  00FA1D  73                 	db	115	;'s'
 11439  00FA1E  75                 	db	117	;'u'
 11440  00FA1F  72                 	db	114	;'r'
 11441  00FA20  65                 	db	101	;'e'
 11442  00FA21  6D                 	db	109	;'m'
 11443  00FA22  65                 	db	101	;'e'
 11444  00FA23  6E                 	db	110	;'n'
 11445  00FA24  74                 	db	116	;'t'
 11446  00FA25  20                 	db	32
 11447  00FA26  43                 	db	67	;'C'
 11448  00FA27  6F                 	db	111	;'o'
 11449  00FA28  6D                 	db	109	;'m'
 11450  00FA29  6D                 	db	109	;'m'
 11451  00FA2A  61                 	db	97	;'a'
 11452  00FA2B  6E                 	db	110	;'n'
 11453  00FA2C  64                 	db	100	;'d'
 11454  00FA2D  73                 	db	115	;'s'
 11455  00FA2E  00                 	db	0
 11456  00FA2F                     STR_97:
 11457  00FA2F  4D                 	db	77	;'M'
 11458  00FA30  65                 	db	101	;'e'
 11459  00FA31  61                 	db	97	;'a'
 11460  00FA32  73                 	db	115	;'s'
 11461  00FA33  75                 	db	117	;'u'
 11462  00FA34  72                 	db	114	;'r'
 11463  00FA35  65                 	db	101	;'e'
 11464  00FA36  64                 	db	100	;'d'
 11465  00FA37  20                 	db	32
 11466  00FA38  43                 	db	67	;'C'
 11467  00FA39  75                 	db	117	;'u'
 11468  00FA3A  72                 	db	114	;'r'
 11469  00FA3B  72                 	db	114	;'r'
 11470  00FA3C  65                 	db	101	;'e'
 11471  00FA3D  6E                 	db	110	;'n'
 11472  00FA3E  74                 	db	116	;'t'
 11473  00FA3F  20                 	db	32
 11474  00FA40  69                 	db	105	;'i'
 11475  00FA41  73                 	db	115	;'s'
 11476  00FA42  20                 	db	32
 11477  00FA43  25                 	db	37
 11478  00FA44  2E                 	db	46
 11479  00FA45  33                 	db	51	;'3'
 11480  00FA46  66                 	db	102	;'f'
 11481  00FA47  20                 	db	32
 11482  00FA48  41                 	db	65	;'A'
 11483  00FA49  6D                 	db	109	;'m'
 11484  00FA4A  70                 	db	112	;'p'
 11485  00FA4B  73                 	db	115	;'s'
 11486  00FA4C  0A                 	db	10
 11487  00FA4D  0D                 	db	13
 11488  00FA4E  00                 	db	0
 11489  00FA4F                     STR_123:
 11490  00FA4F  44                 	db	68	;'D'
 11491  00FA50  69                 	db	105	;'i'
 11492  00FA51  6D                 	db	109	;'m'
 11493  00FA52  6D                 	db	109	;'m'
 11494  00FA53  69                 	db	105	;'i'
 11495  00FA54  6E                 	db	110	;'n'
 11496  00FA55  67                 	db	103	;'g'
 11497  00FA56  20                 	db	32
 11498  00FA57  69                 	db	105	;'i'
 11499  00FA58  73                 	db	115	;'s'
 11500  00FA59  20                 	db	32
 11501  00FA5A  63                 	db	99	;'c'
 11502  00FA5B  75                 	db	117	;'u'
 11503  00FA5C  72                 	db	114	;'r'
 11504  00FA5D  72                 	db	114	;'r'
 11505  00FA5E  65                 	db	101	;'e'
 11506  00FA5F  6E                 	db	110	;'n'
 11507  00FA60  74                 	db	116	;'t'
 11508  00FA61  6C                 	db	108	;'l'
 11509  00FA62  79                 	db	121	;'y'
 11510  00FA63  20                 	db	32
 11511  00FA64  65                 	db	101	;'e'
 11512  00FA65  6E                 	db	110	;'n'
 11513  00FA66  61                 	db	97	;'a'
 11514  00FA67  62                 	db	98	;'b'
 11515  00FA68  6C                 	db	108	;'l'
 11516  00FA69  65                 	db	101	;'e'
 11517  00FA6A  64                 	db	100	;'d'
 11518  00FA6B  0A                 	db	10
 11519  00FA6C  0D                 	db	13
 11520  00FA6D  00                 	db	0
 11521  00FA6E                     STR_81:
 11522  00FA6E  20                 	db	32
 11523  00FA6F  20                 	db	32
 11524  00FA70  20                 	db	32
 11525  00FA71  20                 	db	32
 11526  00FA72  55                 	db	85	;'U'
 11527  00FA73  53                 	db	83	;'S'
 11528  00FA74  42                 	db	66	;'B'
 11529  00FA75  20                 	db	32
 11530  00FA76  55                 	db	85	;'U'
 11531  00FA77  41                 	db	65	;'A'
 11532  00FA78  52                 	db	82	;'R'
 11533  00FA79  54                 	db	84	;'T'
 11534  00FA7A  20                 	db	32
 11535  00FA7B  28                 	db	40
 11536  00FA7C  74                 	db	116	;'t'
 11537  00FA7D  68                 	db	104	;'h'
 11538  00FA7E  69                 	db	105	;'i'
 11539  00FA7F  73                 	db	115	;'s'
 11540  00FA80  20                 	db	32
 11541  00FA81  69                 	db	105	;'i'
 11542  00FA82  6E                 	db	110	;'n'
 11543  00FA83  74                 	db	116	;'t'
 11544  00FA84  65                 	db	101	;'e'
 11545  00FA85  72                 	db	114	;'r'
 11546  00FA86  66                 	db	102	;'f'
 11547  00FA87  61                 	db	97	;'a'
 11548  00FA88  63                 	db	99	;'c'
 11549  00FA89  65                 	db	101	;'e'
 11550  00FA8A  0A                 	db	10
 11551  00FA8B  0D                 	db	13
 11552  00FA8C  00                 	db	0
 11553  00FA8D                     STR_174:
 11554  00FA8D  44                 	db	68	;'D'
 11555  00FA8E  72                 	db	114	;'r'
 11556  00FA8F  65                 	db	101	;'e'
 11557  00FA90  77                 	db	119	;'w'
 11558  00FA91  20                 	db	32
 11559  00FA92  4D                 	db	77	;'M'
 11560  00FA93  61                 	db	97	;'a'
 11561  00FA94  61                 	db	97	;'a'
 11562  00FA95  74                 	db	116	;'t'
 11563  00FA96  6D                 	db	109	;'m'
 11564  00FA97  61                 	db	97	;'a'
 11565  00FA98  6E                 	db	110	;'n'
 11566  00FA99  20                 	db	32
 11567  00FA9A  61                 	db	97	;'a'
 11568  00FA9B  6E                 	db	110	;'n'
 11569  00FA9C  64                 	db	100	;'d'
 11570  00FA9D  20                 	db	32
 11571  00FA9E  47                 	db	71	;'G'
 11572  00FA9F  61                 	db	97	;'a'
 11573  00FAA0  62                 	db	98	;'b'
 11574  00FAA1  65                 	db	101	;'e'
 11575  00FAA2  20                 	db	32
 11576  00FAA3  54                 	db	84	;'T'
 11577  00FAA4  68                 	db	104	;'h'
 11578  00FAA5  61                 	db	97	;'a'
 11579  00FAA6  6C                 	db	108	;'l'
 11580  00FAA7  6A                 	db	106	;'j'
 11581  00FAA8  69                 	db	105	;'i'
 11582  00FAA9  0A                 	db	10
 11583  00FAAA  0D                 	db	13
 11584  00FAAB  00                 	db	0
 11585  00FAAC                     STR_169:
 11586  00FAAC  55                 	db	85	;'U'
 11587  00FAAD  73                 	db	115	;'s'
 11588  00FAAE  65                 	db	101	;'e'
 11589  00FAAF  72                 	db	114	;'r'
 11590  00FAB0  20                 	db	32
 11591  00FAB1  69                 	db	105	;'i'
 11592  00FAB2  6E                 	db	110	;'n'
 11593  00FAB3  70                 	db	112	;'p'
 11594  00FAB4  75                 	db	117	;'u'
 11595  00FAB5  74                 	db	116	;'t'
 11596  00FAB6  20                 	db	32
 11597  00FAB7  61                 	db	97	;'a'
 11598  00FAB8  70                 	db	112	;'p'
 11599  00FAB9  70                 	db	112	;'p'
 11600  00FABA  65                 	db	101	;'e'
 11601  00FABB  61                 	db	97	;'a'
 11602  00FABC  72                 	db	114	;'r'
 11603  00FABD  73                 	db	115	;'s'
 11604  00FABE  20                 	db	32
 11605  00FABF  69                 	db	105	;'i'
 11606  00FAC0  6E                 	db	110	;'n'
 11607  00FAC1  20                 	db	32
 11608  00FAC2  77                 	db	119	;'w'
 11609  00FAC3  68                 	db	104	;'h'
 11610  00FAC4  69                 	db	105	;'i'
 11611  00FAC5  74                 	db	116	;'t'
 11612  00FAC6  65                 	db	101	;'e'
 11613  00FAC7  0A                 	db	10
 11614  00FAC8  0D                 	db	13
 11615  00FAC9  00                 	db	0
 11616  00FACA                     STR_121:
 11617  00FACA  4C                 	db	76	;'L'
 11618  00FACB  6F                 	db	111	;'o'
 11619  00FACC  61                 	db	97	;'a'
 11620  00FACD  64                 	db	100	;'d'
 11621  00FACE  20                 	db	32
 11622  00FACF  69                 	db	105	;'i'
 11623  00FAD0  73                 	db	115	;'s'
 11624  00FAD1  20                 	db	32
 11625  00FAD2  63                 	db	99	;'c'
 11626  00FAD3  75                 	db	117	;'u'
 11627  00FAD4  72                 	db	114	;'r'
 11628  00FAD5  72                 	db	114	;'r'
 11629  00FAD6  65                 	db	101	;'e'
 11630  00FAD7  6E                 	db	110	;'n'
 11631  00FAD8  74                 	db	116	;'t'
 11632  00FAD9  6C                 	db	108	;'l'
 11633  00FADA  79                 	db	121	;'y'
 11634  00FADB  20                 	db	32
 11635  00FADC  64                 	db	100	;'d'
 11636  00FADD  69                 	db	105	;'i'
 11637  00FADE  73                 	db	115	;'s'
 11638  00FADF  61                 	db	97	;'a'
 11639  00FAE0  62                 	db	98	;'b'
 11640  00FAE1  6C                 	db	108	;'l'
 11641  00FAE2  65                 	db	101	;'e'
 11642  00FAE3  64                 	db	100	;'d'
 11643  00FAE4  0A                 	db	10
 11644  00FAE5  0D                 	db	13
 11645  00FAE6  00                 	db	0
 11646  00FAE7                     STR_153:
 11647  00FAE7  48                 	db	72	;'H'
 11648  00FAE8  65                 	db	101	;'e'
 11649  00FAE9  6C                 	db	108	;'l'
 11650  00FAEA  70                 	db	112	;'p'
 11651  00FAEB  20                 	db	32
 11652  00FAEC  44                 	db	68	;'D'
 11653  00FAED  65                 	db	101	;'e'
 11654  00FAEE  76                 	db	118	;'v'
 11655  00FAEF  69                 	db	105	;'i'
 11656  00FAF0  63                 	db	99	;'c'
 11657  00FAF1  65                 	db	101	;'e'
 11658  00FAF2  20                 	db	32
 11659  00FAF3  43                 	db	67	;'C'
 11660  00FAF4  6F                 	db	111	;'o'
 11661  00FAF5  6E                 	db	110	;'n'
 11662  00FAF6  74                 	db	116	;'t'
 11663  00FAF7  72                 	db	114	;'r'
 11664  00FAF8  6F                 	db	111	;'o'
 11665  00FAF9  6C                 	db	108	;'l'
 11666  00FAFA  20                 	db	32
 11667  00FAFB  43                 	db	67	;'C'
 11668  00FAFC  6F                 	db	111	;'o'
 11669  00FAFD  6D                 	db	109	;'m'
 11670  00FAFE  6D                 	db	109	;'m'
 11671  00FAFF  61                 	db	97	;'a'
 11672  00FB00  6E                 	db	110	;'n'
 11673  00FB01  64                 	db	100	;'d'
 11674  00FB02  73                 	db	115	;'s'
 11675  00FB03  00                 	db	0
 11676  00FB04                     STR_159:
 11677  00FB04  48                 	db	72	;'H'
 11678  00FB05  65                 	db	101	;'e'
 11679  00FB06  6C                 	db	108	;'l'
 11680  00FB07  70                 	db	112	;'p'
 11681  00FB08  20                 	db	32
 11682  00FB09  4F                 	db	79	;'O'
 11683  00FB0A  75                 	db	117	;'u'
 11684  00FB0B  74                 	db	116	;'t'
 11685  00FB0C  70                 	db	112	;'p'
 11686  00FB0D  75                 	db	117	;'u'
 11687  00FB0E  74                 	db	116	;'t'
 11688  00FB0F  20                 	db	32
 11689  00FB10  43                 	db	67	;'C'
 11690  00FB11  6F                 	db	111	;'o'
 11691  00FB12  6E                 	db	110	;'n'
 11692  00FB13  74                 	db	116	;'t'
 11693  00FB14  72                 	db	114	;'r'
 11694  00FB15  6F                 	db	111	;'o'
 11695  00FB16  6C                 	db	108	;'l'
 11696  00FB17  20                 	db	32
 11697  00FB18  43                 	db	67	;'C'
 11698  00FB19  6F                 	db	111	;'o'
 11699  00FB1A  6D                 	db	109	;'m'
 11700  00FB1B  6D                 	db	109	;'m'
 11701  00FB1C  61                 	db	97	;'a'
 11702  00FB1D  6E                 	db	110	;'n'
 11703  00FB1E  64                 	db	100	;'d'
 11704  00FB1F  73                 	db	115	;'s'
 11705  00FB20  00                 	db	0
 11706  00FB21                     STR_172:
 11707  00FB21  4D                 	db	77	;'M'
 11708  00FB22  61                 	db	97	;'a'
 11709  00FB23  72                 	db	114	;'r'
 11710  00FB24  71                 	db	113	;'q'
 11711  00FB25  75                 	db	117	;'u'
 11712  00FB26  65                 	db	101	;'e'
 11713  00FB27  74                 	db	116	;'t'
 11714  00FB28  74                 	db	116	;'t'
 11715  00FB29  65                 	db	101	;'e'
 11716  00FB2A  20                 	db	32
 11717  00FB2B  55                 	db	85	;'U'
 11718  00FB2C  6E                 	db	110	;'n'
 11719  00FB2D  69                 	db	105	;'i'
 11720  00FB2E  76                 	db	118	;'v'
 11721  00FB2F  65                 	db	101	;'e'
 11722  00FB30  72                 	db	114	;'r'
 11723  00FB31  73                 	db	115	;'s'
 11724  00FB32  69                 	db	105	;'i'
 11725  00FB33  74                 	db	116	;'t'
 11726  00FB34  79                 	db	121	;'y'
 11727  00FB35  20                 	db	32
 11728  00FB36  45                 	db	69	;'E'
 11729  00FB37  45                 	db	69	;'E'
 11730  00FB38  43                 	db	67	;'C'
 11731  00FB39  45                 	db	69	;'E'
 11732  00FB3A  0A                 	db	10
 11733  00FB3B  0D                 	db	13
 11734  00FB3C  00                 	db	0
 11735  00FB3D                     STR_120:
 11736  00FB3D  4C                 	db	76	;'L'
 11737  00FB3E  6F                 	db	111	;'o'
 11738  00FB3F  61                 	db	97	;'a'
 11739  00FB40  64                 	db	100	;'d'
 11740  00FB41  20                 	db	32
 11741  00FB42  69                 	db	105	;'i'
 11742  00FB43  73                 	db	115	;'s'
 11743  00FB44  20                 	db	32
 11744  00FB45  63                 	db	99	;'c'
 11745  00FB46  75                 	db	117	;'u'
 11746  00FB47  72                 	db	114	;'r'
 11747  00FB48  72                 	db	114	;'r'
 11748  00FB49  65                 	db	101	;'e'
 11749  00FB4A  6E                 	db	110	;'n'
 11750  00FB4B  74                 	db	116	;'t'
 11751  00FB4C  6C                 	db	108	;'l'
 11752  00FB4D  79                 	db	121	;'y'
 11753  00FB4E  20                 	db	32
 11754  00FB4F  65                 	db	101	;'e'
 11755  00FB50  6E                 	db	110	;'n'
 11756  00FB51  61                 	db	97	;'a'
 11757  00FB52  62                 	db	98	;'b'
 11758  00FB53  6C                 	db	108	;'l'
 11759  00FB54  65                 	db	101	;'e'
 11760  00FB55  64                 	db	100	;'d'
 11761  00FB56  0A                 	db	10
 11762  00FB57  0D                 	db	13
 11763  00FB58  00                 	db	0
 11764  00FB59                     STR_185:
 11765  00FB59  52                 	db	82	;'R'
 11766  00FB5A  45                 	db	69	;'E'
 11767  00FB5B  53                 	db	83	;'S'
 11768  00FB5C  45                 	db	69	;'E'
 11769  00FB5D  54                 	db	84	;'T'
 11770  00FB5E  20                 	db	32
 11771  00FB5F  49                 	db	73	;'I'
 11772  00FB60  6E                 	db	110	;'n'
 11773  00FB61  73                 	db	115	;'s'
 11774  00FB62  74                 	db	116	;'t'
 11775  00FB63  72                 	db	114	;'r'
 11776  00FB64  75                 	db	117	;'u'
 11777  00FB65  63                 	db	99	;'c'
 11778  00FB66  74                 	db	116	;'t'
 11779  00FB67  69                 	db	105	;'i'
 11780  00FB68  6F                 	db	111	;'o'
 11781  00FB69  6E                 	db	110	;'n'
 11782  00FB6A  20                 	db	32
 11783  00FB6B  45                 	db	69	;'E'
 11784  00FB6C  78                 	db	120	;'x'
 11785  00FB6D  65                 	db	101	;'e'
 11786  00FB6E  63                 	db	99	;'c'
 11787  00FB6F  75                 	db	117	;'u'
 11788  00FB70  74                 	db	116	;'t'
 11789  00FB71  65                 	db	101	;'e'
 11790  00FB72  64                 	db	100	;'d'
 11791  00FB73  00                 	db	0
 11792  00FB74                     STR_75:
 11793  00FB74  4E                 	db	78	;'N'
 11794  00FB75  6F                 	db	111	;'o'
 11795  00FB76  20                 	db	32
 11796  00FB77  41                 	db	65	;'A'
 11797  00FB78  44                 	db	68	;'D'
 11798  00FB79  43                 	db	67	;'C'
 11799  00FB7A  20                 	db	32
 11800  00FB7B  65                 	db	101	;'e'
 11801  00FB7C  72                 	db	114	;'r'
 11802  00FB7D  72                 	db	114	;'r'
 11803  00FB7E  6F                 	db	111	;'o'
 11804  00FB7F  72                 	db	114	;'r'
 11805  00FB80  28                 	db	40
 11806  00FB81  73                 	db	115	;'s'
 11807  00FB82  29                 	db	41
 11808  00FB83  20                 	db	32
 11809  00FB84  64                 	db	100	;'d'
 11810  00FB85  65                 	db	101	;'e'
 11811  00FB86  74                 	db	116	;'t'
 11812  00FB87  65                 	db	101	;'e'
 11813  00FB88  63                 	db	99	;'c'
 11814  00FB89  74                 	db	116	;'t'
 11815  00FB8A  65                 	db	101	;'e'
 11816  00FB8B  64                 	db	100	;'d'
 11817  00FB8C  0A                 	db	10
 11818  00FB8D  0D                 	db	13
 11819  00FB8E  00                 	db	0
 11820  00FB8F                     STR_96:
 11821  00FB8F  4D                 	db	77	;'M'
 11822  00FB90  65                 	db	101	;'e'
 11823  00FB91  61                 	db	97	;'a'
 11824  00FB92  73                 	db	115	;'s'
 11825  00FB93  75                 	db	117	;'u'
 11826  00FB94  72                 	db	114	;'r'
 11827  00FB95  65                 	db	101	;'e'
 11828  00FB96  20                 	db	32
 11829  00FB97  44                 	db	68	;'D'
 11830  00FB98  65                 	db	101	;'e'
 11831  00FB99  74                 	db	116	;'t'
 11832  00FB9A  65                 	db	101	;'e'
 11833  00FB9B  63                 	db	99	;'c'
 11834  00FB9C  74                 	db	116	;'t'
 11835  00FB9D  65                 	db	101	;'e'
 11836  00FB9E  64                 	db	100	;'d'
 11837  00FB9F  20                 	db	32
 11838  00FBA0  43                 	db	67	;'C'
 11839  00FBA1  75                 	db	117	;'u'
 11840  00FBA2  72                 	db	114	;'r'
 11841  00FBA3  72                 	db	114	;'r'
 11842  00FBA4  65                 	db	101	;'e'
 11843  00FBA5  6E                 	db	110	;'n'
 11844  00FBA6  74                 	db	116	;'t'
 11845  00FBA7  3F                 	db	63	;'?'
 11846  00FBA8  00                 	db	0
 11847  00FBA9                     STR_65:
 11848  00FBA9  41                 	db	65	;'A'
 11849  00FBAA  44                 	db	68	;'D'
 11850  00FBAB  43                 	db	67	;'C'
 11851  00FBAC  20                 	db	32
 11852  00FBAD  65                 	db	101	;'e'
 11853  00FBAE  72                 	db	114	;'r'
 11854  00FBAF  72                 	db	114	;'r'
 11855  00FBB0  6F                 	db	111	;'o'
 11856  00FBB1  72                 	db	114	;'r'
 11857  00FBB2  28                 	db	40
 11858  00FBB3  73                 	db	115	;'s'
 11859  00FBB4  29                 	db	41
 11860  00FBB5  20                 	db	32
 11861  00FBB6  64                 	db	100	;'d'
 11862  00FBB7  65                 	db	101	;'e'
 11863  00FBB8  74                 	db	116	;'t'
 11864  00FBB9  65                 	db	101	;'e'
 11865  00FBBA  63                 	db	99	;'c'
 11866  00FBBB  74                 	db	116	;'t'
 11867  00FBBC  65                 	db	101	;'e'
 11868  00FBBD  64                 	db	100	;'d'
 11869  00FBBE  21                 	db	33
 11870  00FBBF  0A                 	db	10
 11871  00FBC0  0D                 	db	13
 11872  00FBC1  00                 	db	0
 11873  00FBC2                     STR_127:
 11874  00FBC2  4C                 	db	76	;'L'
 11875  00FBC3  6F                 	db	111	;'o'
 11876  00FBC4  61                 	db	97	;'a'
 11877  00FBC5  64                 	db	100	;'d'
 11878  00FBC6  20                 	db	32
 11879  00FBC7  68                 	db	104	;'h'
 11880  00FBC8  61                 	db	97	;'a'
 11881  00FBC9  73                 	db	115	;'s'
 11882  00FBCA  20                 	db	32
 11883  00FBCB  62                 	db	98	;'b'
 11884  00FBCC  65                 	db	101	;'e'
 11885  00FBCD  65                 	db	101	;'e'
 11886  00FBCE  6E                 	db	110	;'n'
 11887  00FBCF  20                 	db	32
 11888  00FBD0  64                 	db	100	;'d'
 11889  00FBD1  69                 	db	105	;'i'
 11890  00FBD2  73                 	db	115	;'s'
 11891  00FBD3  61                 	db	97	;'a'
 11892  00FBD4  62                 	db	98	;'b'
 11893  00FBD5  6C                 	db	108	;'l'
 11894  00FBD6  65                 	db	101	;'e'
 11895  00FBD7  64                 	db	100	;'d'
 11896  00FBD8  0A                 	db	10
 11897  00FBD9  0D                 	db	13
 11898  00FBDA  00                 	db	0
 11899  00FBDB                     STR_128:
 11900  00FBDB  53                 	db	83	;'S'
 11901  00FBDC  65                 	db	101	;'e'
 11902  00FBDD  74                 	db	116	;'t'
 11903  00FBDE  20                 	db	32
 11904  00FBDF  44                 	db	68	;'D'
 11905  00FBE0  69                 	db	105	;'i'
 11906  00FBE1  6D                 	db	109	;'m'
 11907  00FBE2  6D                 	db	109	;'m'
 11908  00FBE3  69                 	db	105	;'i'
 11909  00FBE4  6E                 	db	110	;'n'
 11910  00FBE5  67                 	db	103	;'g'
 11911  00FBE6  20                 	db	32
 11912  00FBE7  50                 	db	80	;'P'
 11913  00FBE8  65                 	db	101	;'e'
 11914  00FBE9  72                 	db	114	;'r'
 11915  00FBEA  63                 	db	99	;'c'
 11916  00FBEB  65                 	db	101	;'e'
 11917  00FBEC  6E                 	db	110	;'n'
 11918  00FBED  74                 	db	116	;'t'
 11919  00FBEE  61                 	db	97	;'a'
 11920  00FBEF  67                 	db	103	;'g'
 11921  00FBF0  65                 	db	101	;'e'
 11922  00FBF1  3A                 	db	58	;':'
 11923  00FBF2  20                 	db	32
 11924  00FBF3  00                 	db	0
 11925  00FBF4                     STR_67:
 11926  00FBF4  20                 	db	32
 11927  00FBF5  20                 	db	32
 11928  00FBF6  20                 	db	32
 11929  00FBF7  20                 	db	32
 11930  00FBF8  47                 	db	71	;'G'
 11931  00FBF9  65                 	db	101	;'e'
 11932  00FBFA  6E                 	db	110	;'n'
 11933  00FBFB  65                 	db	101	;'e'
 11934  00FBFC  72                 	db	114	;'r'
 11935  00FBFD  61                 	db	97	;'a'
 11936  00FBFE  6C                 	db	108	;'l'
 11937  00FBFF  20                 	db	32
 11938  00FC00  41                 	db	65	;'A'
 11939  00FC01  44                 	db	68	;'D'
 11940  00FC02  43                 	db	67	;'C'
 11941  00FC03  20                 	db	32
 11942  00FC04  65                 	db	101	;'e'
 11943  00FC05  72                 	db	114	;'r'
 11944  00FC06  72                 	db	114	;'r'
 11945  00FC07  6F                 	db	111	;'o'
 11946  00FC08  72                 	db	114	;'r'
 11947  00FC09  0A                 	db	10
 11948  00FC0A  0D                 	db	13
 11949  00FC0B  00                 	db	0
 11950  00FC0C                     STR_80:
 11951  00FC0C  20                 	db	32
 11952  00FC0D  20                 	db	32
 11953  00FC0E  20                 	db	32
 11954  00FC0F  20                 	db	32
 11955  00FC10  4F                 	db	79	;'O'
 11956  00FC11  4C                 	db	76	;'L'
 11957  00FC12  45                 	db	69	;'E'
 11958  00FC13  44                 	db	68	;'D'
 11959  00FC14  20                 	db	32
 11960  00FC15  44                 	db	68	;'D'
 11961  00FC16  69                 	db	105	;'i'
 11962  00FC17  73                 	db	115	;'s'
 11963  00FC18  70                 	db	112	;'p'
 11964  00FC19  6C                 	db	108	;'l'
 11965  00FC1A  61                 	db	97	;'a'
 11966  00FC1B  79                 	db	121	;'y'
 11967  00FC1C  20                 	db	32
 11968  00FC1D  49                 	db	73	;'I'
 11969  00FC1E  32                 	db	50	;'2'
 11970  00FC1F  43                 	db	67	;'C'
 11971  00FC20  0A                 	db	10
 11972  00FC21  0D                 	db	13
 11973  00FC22  00                 	db	0
 11974  00FC23                     STR_77:
 11975  00FC23  41                 	db	65	;'A'
 11976  00FC24  44                 	db	68	;'D'
 11977  00FC25  43                 	db	67	;'C'
 11978  00FC26  20                 	db	32
 11979  00FC27  45                 	db	69	;'E'
 11980  00FC28  72                 	db	114	;'r'
 11981  00FC29  72                 	db	114	;'r'
 11982  00FC2A  6F                 	db	111	;'o'
 11983  00FC2B  72                 	db	114	;'r'
 11984  00FC2C  28                 	db	40
 11985  00FC2D  73                 	db	115	;'s'
 11986  00FC2E  29                 	db	41
 11987  00FC2F  20                 	db	32
 11988  00FC30  63                 	db	99	;'c'
 11989  00FC31  6C                 	db	108	;'l'
 11990  00FC32  65                 	db	101	;'e'
 11991  00FC33  61                 	db	97	;'a'
 11992  00FC34  72                 	db	114	;'r'
 11993  00FC35  65                 	db	101	;'e'
 11994  00FC36  64                 	db	100	;'d'
 11995  00FC37  0A                 	db	10
 11996  00FC38  0D                 	db	13
 11997  00FC39  00                 	db	0
 11998  00FC3A                     STR_187:
 11999  00FC3A  53                 	db	83	;'S'
 12000  00FC3B  74                 	db	116	;'t'
 12001  00FC3C  61                 	db	97	;'a'
 12002  00FC3D  63                 	db	99	;'c'
 12003  00FC3E  6B                 	db	107	;'k'
 12004  00FC3F  20                 	db	32
 12005  00FC40  55                 	db	85	;'U'
 12006  00FC41  6E                 	db	110	;'n'
 12007  00FC42  64                 	db	100	;'d'
 12008  00FC43  65                 	db	101	;'e'
 12009  00FC44  72                 	db	114	;'r'
 12010  00FC45  66                 	db	102	;'f'
 12011  00FC46  6C                 	db	108	;'l'
 12012  00FC47  6F                 	db	111	;'o'
 12013  00FC48  77                 	db	119	;'w'
 12014  00FC49  20                 	db	32
 12015  00FC4A  52                 	db	82	;'R'
 12016  00FC4B  65                 	db	101	;'e'
 12017  00FC4C  73                 	db	115	;'s'
 12018  00FC4D  65                 	db	101	;'e'
 12019  00FC4E  74                 	db	116	;'t'
 12020  00FC4F  00                 	db	0
 12021  00FC50                     STR_186:
 12022  00FC50  53                 	db	83	;'S'
 12023  00FC51  74                 	db	116	;'t'
 12024  00FC52  61                 	db	97	;'a'
 12025  00FC53  63                 	db	99	;'c'
 12026  00FC54  6B                 	db	107	;'k'
 12027  00FC55  20                 	db	32
 12028  00FC56  4F                 	db	79	;'O'
 12029  00FC57  76                 	db	118	;'v'
 12030  00FC58  65                 	db	101	;'e'
 12031  00FC59  72                 	db	114	;'r'
 12032  00FC5A  66                 	db	102	;'f'
 12033  00FC5B  6C                 	db	108	;'l'
 12034  00FC5C  6F                 	db	111	;'o'
 12035  00FC5D  77                 	db	119	;'w'
 12036  00FC5E  20                 	db	32
 12037  00FC5F  52                 	db	82	;'R'
 12038  00FC60  65                 	db	101	;'e'
 12039  00FC61  73                 	db	115	;'s'
 12040  00FC62  65                 	db	101	;'e'
 12041  00FC63  74                 	db	116	;'t'
 12042  00FC64  00                 	db	0
 12043  00FC65                     STR_100:
 12044  00FC65  4D                 	db	77	;'M'
 12045  00FC66  65                 	db	101	;'e'
 12046  00FC67  61                 	db	97	;'a'
 12047  00FC68  73                 	db	115	;'s'
 12048  00FC69  75                 	db	117	;'u'
 12049  00FC6A  72                 	db	114	;'r'
 12050  00FC6B  65                 	db	101	;'e'
 12051  00FC6C  20                 	db	32
 12052  00FC6D  52                 	db	82	;'R'
 12053  00FC6E  4D                 	db	77	;'M'
 12054  00FC6F  53                 	db	83	;'S'
 12055  00FC70  20                 	db	32
 12056  00FC71  56                 	db	86	;'V'
 12057  00FC72  6F                 	db	111	;'o'
 12058  00FC73  6C                 	db	108	;'l'
 12059  00FC74  74                 	db	116	;'t'
 12060  00FC75  61                 	db	97	;'a'
 12061  00FC76  67                 	db	103	;'g'
 12062  00FC77  65                 	db	101	;'e'
 12063  00FC78  3F                 	db	63	;'?'
 12064  00FC79  00                 	db	0
 12065  00FC7A                     STR_98:
 12066  00FC7A  4D                 	db	77	;'M'
 12067  00FC7B  65                 	db	101	;'e'
 12068  00FC7C  61                 	db	97	;'a'
 12069  00FC7D  73                 	db	115	;'s'
 12070  00FC7E  75                 	db	117	;'u'
 12071  00FC7F  72                 	db	114	;'r'
 12072  00FC80  65                 	db	101	;'e'
 12073  00FC81  20                 	db	32
 12074  00FC82  52                 	db	82	;'R'
 12075  00FC83  4D                 	db	77	;'M'
 12076  00FC84  53                 	db	83	;'S'
 12077  00FC85  20                 	db	32
 12078  00FC86  43                 	db	67	;'C'
 12079  00FC87  75                 	db	117	;'u'
 12080  00FC88  72                 	db	114	;'r'
 12081  00FC89  72                 	db	114	;'r'
 12082  00FC8A  65                 	db	101	;'e'
 12083  00FC8B  6E                 	db	110	;'n'
 12084  00FC8C  74                 	db	116	;'t'
 12085  00FC8D  3F                 	db	63	;'?'
 12086  00FC8E  00                 	db	0
 12087  00FC8F                     STR_143:
 12088  00FC8F  4D                 	db	77	;'M'
 12089  00FC90  61                 	db	97	;'a'
 12090  00FC91  78                 	db	120	;'x'
 12091  00FC92  20                 	db	32
 12092  00FC93  50                 	db	80	;'P'
 12093  00FC94  4F                 	db	79	;'O'
 12094  00FC95  53                 	db	83	;'S'
 12095  00FC96  33                 	db	51	;'3'
 12096  00FC97  50                 	db	80	;'P'
 12097  00FC98  33                 	db	51	;'3'
 12098  00FC99  20                 	db	32
 12099  00FC9A  56                 	db	86	;'V'
 12100  00FC9B  6F                 	db	111	;'o'
 12101  00FC9C  6C                 	db	108	;'l'
 12102  00FC9D  74                 	db	116	;'t'
 12103  00FC9E  61                 	db	97	;'a'
 12104  00FC9F  67                 	db	103	;'g'
 12105  00FCA0  65                 	db	101	;'e'
 12106  00FCA1  3F                 	db	63	;'?'
 12107  00FCA2  00                 	db	0
 12108  00FCA3                     STR_182:
 12109  00FCA3  4D                 	db	77	;'M'
 12110  00FCA4  61                 	db	97	;'a'
 12111  00FCA5  73                 	db	115	;'s'
 12112  00FCA6  74                 	db	116	;'t'
 12113  00FCA7  65                 	db	101	;'e'
 12114  00FCA8  72                 	db	114	;'r'
 12115  00FCA9  20                 	db	32
 12116  00FCAA  43                 	db	67	;'C'
 12117  00FCAB  6C                 	db	108	;'l'
 12118  00FCAC  65                 	db	101	;'e'
 12119  00FCAD  61                 	db	97	;'a'
 12120  00FCAE  72                 	db	114	;'r'
 12121  00FCAF  20                 	db	32
 12122  00FCB0  52                 	db	82	;'R'
 12123  00FCB1  65                 	db	101	;'e'
 12124  00FCB2  73                 	db	115	;'s'
 12125  00FCB3  65                 	db	101	;'e'
 12126  00FCB4  74                 	db	116	;'t'
 12127  00FCB5  00                 	db	0
 12128  00FCB6                     STR_145:
 12129  00FCB6  4D                 	db	77	;'M'
 12130  00FCB7  61                 	db	97	;'a'
 12131  00FCB8  78                 	db	120	;'x'
 12132  00FCB9  20                 	db	32
 12133  00FCBA  50                 	db	80	;'P'
 12134  00FCBB  4F                 	db	79	;'O'
 12135  00FCBC  53                 	db	83	;'S'
 12136  00FCBD  31                 	db	49	;'1'
 12137  00FCBE  32                 	db	50	;'2'
 12138  00FCBF  20                 	db	32
 12139  00FCC0  56                 	db	86	;'V'
 12140  00FCC1  6F                 	db	111	;'o'
 12141  00FCC2  6C                 	db	108	;'l'
 12142  00FCC3  74                 	db	116	;'t'
 12143  00FCC4  61                 	db	97	;'a'
 12144  00FCC5  67                 	db	103	;'g'
 12145  00FCC6  65                 	db	101	;'e'
 12146  00FCC7  3F                 	db	63	;'?'
 12147  00FCC8  00                 	db	0
 12148  00FCC9                     STR_90:
 12149  00FCC9  4D                 	db	77	;'M'
 12150  00FCCA  65                 	db	101	;'e'
 12151  00FCCB  61                 	db	97	;'a'
 12152  00FCCC  73                 	db	115	;'s'
 12153  00FCCD  75                 	db	117	;'u'
 12154  00FCCE  72                 	db	114	;'r'
 12155  00FCCF  65                 	db	101	;'e'
 12156  00FCD0  20                 	db	32
 12157  00FCD1  44                 	db	68	;'D'
 12158  00FCD2  69                 	db	105	;'i'
 12159  00FCD3  65                 	db	101	;'e'
 12160  00FCD4  20                 	db	32
 12161  00FCD5  54                 	db	84	;'T'
 12162  00FCD6  65                 	db	101	;'e'
 12163  00FCD7  6D                 	db	109	;'m'
 12164  00FCD8  70                 	db	112	;'p'
 12165  00FCD9  3F                 	db	63	;'?'
 12166  00FCDA  00                 	db	0
 12167  00FCDB                     STR_84:
 12168  00FCDB  43                 	db	67	;'C'
 12169  00FCDC  6C                 	db	108	;'l'
 12170  00FCDD  65                 	db	101	;'e'
 12171  00FCDE  61                 	db	97	;'a'
 12172  00FCDF  72                 	db	114	;'r'
 12173  00FCE0  20                 	db	32
 12174  00FCE1  43                 	db	67	;'C'
 12175  00FCE2  6F                 	db	111	;'o'
 12176  00FCE3  6D                 	db	109	;'m'
 12177  00FCE4  6D                 	db	109	;'m'
 12178  00FCE5  20                 	db	32
 12179  00FCE6  45                 	db	69	;'E'
 12180  00FCE7  72                 	db	114	;'r'
 12181  00FCE8  72                 	db	114	;'r'
 12182  00FCE9  6F                 	db	111	;'o'
 12183  00FCEA  72                 	db	114	;'r'
 12184  00FCEB  73                 	db	115	;'s'
 12185  00FCEC  00                 	db	0
 12186  00FCED                     STR_192:
 12187  00FCED  30                 	db	48	;'0'
 12188  00FCEE  31                 	db	49	;'1'
 12189  00FCEF  32                 	db	50	;'2'
 12190  00FCF0  33                 	db	51	;'3'
 12191  00FCF1  34                 	db	52	;'4'
 12192  00FCF2  35                 	db	53	;'5'
 12193  00FCF3  36                 	db	54	;'6'
 12194  00FCF4  37                 	db	55	;'7'
 12195  00FCF5  38                 	db	56	;'8'
 12196  00FCF6  39                 	db	57	;'9'
 12197  00FCF7  41                 	db	65	;'A'
 12198  00FCF8  42                 	db	66	;'B'
 12199  00FCF9  43                 	db	67	;'C'
 12200  00FCFA  44                 	db	68	;'D'
 12201  00FCFB  45                 	db	69	;'E'
 12202  00FCFC  46                 	db	70	;'F'
 12203  00FCFD  00                 	db	0
 12204  00FCFE                     STR_55:
 12205  00FCFE  41                 	db	65	;'A'
 12206  00FCFF  43                 	db	67	;'C'
 12207  00FD00  20                 	db	32
 12208  00FD01  50                 	db	80	;'P'
 12209  00FD02  6F                 	db	111	;'o'
 12210  00FD03  77                 	db	119	;'w'
 12211  00FD04  65                 	db	101	;'e'
 12212  00FD05  72                 	db	114	;'r'
 12213  00FD06  20                 	db	32
 12214  00FD07  4D                 	db	77	;'M'
 12215  00FD08  65                 	db	101	;'e'
 12216  00FD09  74                 	db	116	;'t'
 12217  00FD0A  65                 	db	101	;'e'
 12218  00FD0B  72                 	db	114	;'r'
 12219  00FD0C  0A                 	db	10
 12220  00FD0D  0D                 	db	13
 12221  00FD0E  00                 	db	0
 12222  00FD0F                     STR_122:
 12223  00FD0F  44                 	db	68	;'D'
 12224  00FD10  69                 	db	105	;'i'
 12225  00FD11  6D                 	db	109	;'m'
 12226  00FD12  6D                 	db	109	;'m'
 12227  00FD13  69                 	db	105	;'i'
 12228  00FD14  6E                 	db	110	;'n'
 12229  00FD15  67                 	db	103	;'g'
 12230  00FD16  20                 	db	32
 12231  00FD17  45                 	db	69	;'E'
 12232  00FD18  6E                 	db	110	;'n'
 12233  00FD19  61                 	db	97	;'a'
 12234  00FD1A  62                 	db	98	;'b'
 12235  00FD1B  6C                 	db	108	;'l'
 12236  00FD1C  65                 	db	101	;'e'
 12237  00FD1D  64                 	db	100	;'d'
 12238  00FD1E  3F                 	db	63	;'?'
 12239  00FD1F  00                 	db	0
 12240  00FD20                     STR_149:
 12241  00FD20  4D                 	db	77	;'M'
 12242  00FD21  61                 	db	97	;'a'
 12243  00FD22  78                 	db	120	;'x'
 12244  00FD23  20                 	db	32
 12245  00FD24  46                 	db	70	;'F'
 12246  00FD25  56                 	db	86	;'V'
 12247  00FD26  52                 	db	82	;'R'
 12248  00FD27  20                 	db	32
 12249  00FD28  56                 	db	86	;'V'
 12250  00FD29  6F                 	db	111	;'o'
 12251  00FD2A  6C                 	db	108	;'l'
 12252  00FD2B  74                 	db	116	;'t'
 12253  00FD2C  61                 	db	97	;'a'
 12254  00FD2D  67                 	db	103	;'g'
 12255  00FD2E  65                 	db	101	;'e'
 12256  00FD2F  3F                 	db	63	;'?'
 12257  00FD30  00                 	db	0
 12258  00FD31                     STR_139:
 12259  00FD31  4D                 	db	77	;'M'
 12260  00FD32  61                 	db	97	;'a'
 12261  00FD33  78                 	db	120	;'x'
 12262  00FD34  20                 	db	32
 12263  00FD35  52                 	db	82	;'R'
 12264  00FD36  4D                 	db	77	;'M'
 12265  00FD37  53                 	db	83	;'S'
 12266  00FD38  20                 	db	32
 12267  00FD39  43                 	db	67	;'C'
 12268  00FD3A  75                 	db	117	;'u'
 12269  00FD3B  72                 	db	114	;'r'
 12270  00FD3C  72                 	db	114	;'r'
 12271  00FD3D  65                 	db	101	;'e'
 12272  00FD3E  6E                 	db	110	;'n'
 12273  00FD3F  74                 	db	116	;'t'
 12274  00FD40  3F                 	db	63	;'?'
 12275  00FD41  00                 	db	0
 12276  00FD42                     STR_113:
 12277  00FD42  45                 	db	69	;'E'
 12278  00FD43  6E                 	db	110	;'n'
 12279  00FD44  61                 	db	97	;'a'
 12280  00FD45  62                 	db	98	;'b'
 12281  00FD46  6C                 	db	108	;'l'
 12282  00FD47  65                 	db	101	;'e'
 12283  00FD48  20                 	db	32
 12284  00FD49  44                 	db	68	;'D'
 12285  00FD4A  69                 	db	105	;'i'
 12286  00FD4B  6D                 	db	109	;'m'
 12287  00FD4C  6D                 	db	109	;'m'
 12288  00FD4D  69                 	db	105	;'i'
 12289  00FD4E  6E                 	db	110	;'n'
 12290  00FD4F  67                 	db	103	;'g'
 12291  00FD50  20                 	db	32
 12292  00FD51  59                 	db	89	;'Y'
 12293  00FD52  00                 	db	0
 12294  00FD53                     STR_151:
 12295  00FD53  43                 	db	67	;'C'
 12296  00FD54  6C                 	db	108	;'l'
 12297  00FD55  65                 	db	101	;'e'
 12298  00FD56  61                 	db	97	;'a'
 12299  00FD57  72                 	db	114	;'r'
 12300  00FD58  20                 	db	32
 12301  00FD59  4D                 	db	77	;'M'
 12302  00FD5A  61                 	db	97	;'a'
 12303  00FD5B  78                 	db	120	;'x'
 12304  00FD5C  20                 	db	32
 12305  00FD5D  56                 	db	86	;'V'
 12306  00FD5E  61                 	db	97	;'a'
 12307  00FD5F  6C                 	db	108	;'l'
 12308  00FD60  75                 	db	117	;'u'
 12309  00FD61  65                 	db	101	;'e'
 12310  00FD62  73                 	db	115	;'s'
 12311  00FD63  00                 	db	0
 12312  00FD64                     STR_76:
 12313  00FD64  43                 	db	67	;'C'
 12314  00FD65  6C                 	db	108	;'l'
 12315  00FD66  65                 	db	101	;'e'
 12316  00FD67  61                 	db	97	;'a'
 12317  00FD68  72                 	db	114	;'r'
 12318  00FD69  20                 	db	32
 12319  00FD6A  41                 	db	65	;'A'
 12320  00FD6B  44                 	db	68	;'D'
 12321  00FD6C  43                 	db	67	;'C'
 12322  00FD6D  20                 	db	32
 12323  00FD6E  45                 	db	69	;'E'
 12324  00FD6F  72                 	db	114	;'r'
 12325  00FD70  72                 	db	114	;'r'
 12326  00FD71  6F                 	db	111	;'o'
 12327  00FD72  72                 	db	114	;'r'
 12328  00FD73  73                 	db	115	;'s'
 12329  00FD74  00                 	db	0
 12330  00FD75                     STR_179:
 12331  00FD75  55                 	db	85	;'U'
 12332  00FD76  6E                 	db	110	;'n'
 12333  00FD77  64                 	db	100	;'d'
 12334  00FD78  65                 	db	101	;'e'
 12335  00FD79  66                 	db	102	;'f'
 12336  00FD7A  69                 	db	105	;'i'
 12337  00FD7B  6E                 	db	110	;'n'
 12338  00FD7C  65                 	db	101	;'e'
 12339  00FD7D  64                 	db	100	;'d'
 12340  00FD7E  20                 	db	32
 12341  00FD7F  52                 	db	82	;'R'
 12342  00FD80  65                 	db	101	;'e'
 12343  00FD81  73                 	db	115	;'s'
 12344  00FD82  65                 	db	101	;'e'
 12345  00FD83  74                 	db	116	;'t'
 12346  00FD84  00                 	db	0
 12347  00FD85                     STR_181:
 12348  00FD85  42                 	db	66	;'B'
 12349  00FD86  72                 	db	114	;'r'
 12350  00FD87  6F                 	db	111	;'o'
 12351  00FD88  77                 	db	119	;'w'
 12352  00FD89  6E                 	db	110	;'n'
 12353  00FD8A  20                 	db	32
 12354  00FD8B  4F                 	db	79	;'O'
 12355  00FD8C  75                 	db	117	;'u'
 12356  00FD8D  74                 	db	116	;'t'
 12357  00FD8E  20                 	db	32
 12358  00FD8F  52                 	db	82	;'R'
 12359  00FD90  65                 	db	101	;'e'
 12360  00FD91  73                 	db	115	;'s'
 12361  00FD92  65                 	db	101	;'e'
 12362  00FD93  74                 	db	116	;'t'
 12363  00FD94  00                 	db	0
 12364  00FD95                     STR_86:
 12365  00FD95  4D                 	db	77	;'M'
 12366  00FD96  65                 	db	101	;'e'
 12367  00FD97  61                 	db	97	;'a'
 12368  00FD98  73                 	db	115	;'s'
 12369  00FD99  75                 	db	117	;'u'
 12370  00FD9A  72                 	db	114	;'r'
 12371  00FD9B  65                 	db	101	;'e'
 12372  00FD9C  20                 	db	32
 12373  00FD9D  50                 	db	80	;'P'
 12374  00FD9E  4F                 	db	79	;'O'
 12375  00FD9F  53                 	db	83	;'S'
 12376  00FDA0  33                 	db	51	;'3'
 12377  00FDA1  50                 	db	80	;'P'
 12378  00FDA2  33                 	db	51	;'3'
 12379  00FDA3  3F                 	db	63	;'?'
 12380  00FDA4  00                 	db	0
 12381  00FDA5                     STR_135:
 12382  00FDA5  44                 	db	68	;'D'
 12383  00FDA6  65                 	db	101	;'e'
 12384  00FDA7  76                 	db	118	;'v'
 12385  00FDA8  69                 	db	105	;'i'
 12386  00FDA9  63                 	db	99	;'c'
 12387  00FDAA  65                 	db	101	;'e'
 12388  00FDAB  20                 	db	32
 12389  00FDAC  4F                 	db	79	;'O'
 12390  00FDAD  6E                 	db	110	;'n'
 12391  00FDAE  20                 	db	32
 12392  00FDAF  54                 	db	84	;'T'
 12393  00FDB0  69                 	db	105	;'i'
 12394  00FDB1  6D                 	db	109	;'m'
 12395  00FDB2  65                 	db	101	;'e'
 12396  00FDB3  3F                 	db	63	;'?'
 12397  00FDB4  00                 	db	0
 12398  00FDB5                     STR_51:
 12399  00FDB5  43                 	db	67	;'C'
 12400  00FDB6  61                 	db	97	;'a'
 12401  00FDB7  75                 	db	117	;'u'
 12402  00FDB8  73                 	db	115	;'s'
 12403  00FDB9  65                 	db	101	;'e'
 12404  00FDBA  20                 	db	32
 12405  00FDBB  6F                 	db	111	;'o'
 12406  00FDBC  66                 	db	102	;'f'
 12407  00FDBD  20                 	db	32
 12408  00FDBE  52                 	db	82	;'R'
 12409  00FDBF  65                 	db	101	;'e'
 12410  00FDC0  73                 	db	115	;'s'
 12411  00FDC1  65                 	db	101	;'e'
 12412  00FDC2  74                 	db	116	;'t'
 12413  00FDC3  3F                 	db	63	;'?'
 12414  00FDC4  00                 	db	0
 12415  00FDC5                     STR_104:
 12416  00FDC5  4D                 	db	77	;'M'
 12417  00FDC6  65                 	db	101	;'e'
 12418  00FDC7  61                 	db	97	;'a'
 12419  00FDC8  73                 	db	115	;'s'
 12420  00FDC9  75                 	db	117	;'u'
 12421  00FDCA  72                 	db	114	;'r'
 12422  00FDCB  65                 	db	101	;'e'
 12423  00FDCC  20                 	db	32
 12424  00FDCD  45                 	db	69	;'E'
 12425  00FDCE  6E                 	db	110	;'n'
 12426  00FDCF  65                 	db	101	;'e'
 12427  00FDD0  72                 	db	114	;'r'
 12428  00FDD1  67                 	db	103	;'g'
 12429  00FDD2  79                 	db	121	;'y'
 12430  00FDD3  3F                 	db	63	;'?'
 12431  00FDD4  00                 	db	0
 12432  00FDD5                     STR_115:
 12433  00FDD5  44                 	db	68	;'D'
 12434  00FDD6  69                 	db	105	;'i'
 12435  00FDD7  73                 	db	115	;'s'
 12436  00FDD8  61                 	db	97	;'a'
 12437  00FDD9  62                 	db	98	;'b'
 12438  00FDDA  6C                 	db	108	;'l'
 12439  00FDDB  65                 	db	101	;'e'
 12440  00FDDC  20                 	db	32
 12441  00FDDD  44                 	db	68	;'D'
 12442  00FDDE  69                 	db	105	;'i'
 12443  00FDDF  6D                 	db	109	;'m'
 12444  00FDE0  6D                 	db	109	;'m'
 12445  00FDE1  69                 	db	105	;'i'
 12446  00FDE2  6E                 	db	110	;'n'
 12447  00FDE3  67                 	db	103	;'g'
 12448  00FDE4  00                 	db	0
 12449  00FDE5                     STR_180:
 12450  00FDE5  50                 	db	80	;'P'
 12451  00FDE6  6F                 	db	111	;'o'
 12452  00FDE7  77                 	db	119	;'w'
 12453  00FDE8  65                 	db	101	;'e'
 12454  00FDE9  72                 	db	114	;'r'
 12455  00FDEA  20                 	db	32
 12456  00FDEB  4F                 	db	79	;'O'
 12457  00FDEC  6E                 	db	110	;'n'
 12458  00FDED  20                 	db	32
 12459  00FDEE  52                 	db	82	;'R'
 12460  00FDEF  65                 	db	101	;'e'
 12461  00FDF0  73                 	db	115	;'s'
 12462  00FDF1  65                 	db	101	;'e'
 12463  00FDF2  74                 	db	116	;'t'
 12464  00FDF3  00                 	db	0
 12465  00FDF4                     STR_73:
 12466  00FDF4  20                 	db	32
 12467  00FDF5  20                 	db	32
 12468  00FDF6  20                 	db	32
 12469  00FDF7  20                 	db	32
 12470  00FDF8  44                 	db	68	;'D'
 12471  00FDF9  69                 	db	105	;'i'
 12472  00FDFA  65                 	db	101	;'e'
 12473  00FDFB  20                 	db	32
 12474  00FDFC  54                 	db	84	;'T'
 12475  00FDFD  65                 	db	101	;'e'
 12476  00FDFE  6D                 	db	109	;'m'
 12477  00FDFF  70                 	db	112	;'p'
 12478  00FE00  0A                 	db	10
 12479  00FE01  0D                 	db	13
 12480  00FE02  00                 	db	0
 12481  00FE03                     STR_88:
 12482  00FE03  4D                 	db	77	;'M'
 12483  00FE04  65                 	db	101	;'e'
 12484  00FE05  61                 	db	97	;'a'
 12485  00FE06  73                 	db	115	;'s'
 12486  00FE07  75                 	db	117	;'u'
 12487  00FE08  72                 	db	114	;'r'
 12488  00FE09  65                 	db	101	;'e'
 12489  00FE0A  20                 	db	32
 12490  00FE0B  50                 	db	80	;'P'
 12491  00FE0C  4F                 	db	79	;'O'
 12492  00FE0D  53                 	db	83	;'S'
 12493  00FE0E  31                 	db	49	;'1'
 12494  00FE0F  32                 	db	50	;'2'
 12495  00FE10  3F                 	db	63	;'?'
 12496  00FE11  00                 	db	0
 12497  00FE12                     STR_102:
 12498  00FE12  4D                 	db	77	;'M'
 12499  00FE13  65                 	db	101	;'e'
 12500  00FE14  61                 	db	97	;'a'
 12501  00FE15  73                 	db	115	;'s'
 12502  00FE16  75                 	db	117	;'u'
 12503  00FE17  72                 	db	114	;'r'
 12504  00FE18  65                 	db	101	;'e'
 12505  00FE19  20                 	db	32
 12506  00FE1A  50                 	db	80	;'P'
 12507  00FE1B  6F                 	db	111	;'o'
 12508  00FE1C  77                 	db	119	;'w'
 12509  00FE1D  65                 	db	101	;'e'
 12510  00FE1E  72                 	db	114	;'r'
 12511  00FE1F  3F                 	db	63	;'?'
 12512  00FE20  00                 	db	0
 12513  00FE21                     STR_108:
 12514  00FE21  45                 	db	69	;'E'
 12515  00FE22  6E                 	db	110	;'n'
 12516  00FE23  61                 	db	97	;'a'
 12517  00FE24  62                 	db	98	;'b'
 12518  00FE25  6C                 	db	108	;'l'
 12519  00FE26  65                 	db	101	;'e'
 12520  00FE27  20                 	db	32
 12521  00FE28  44                 	db	68	;'D'
 12522  00FE29  69                 	db	105	;'i'
 12523  00FE2A  6D                 	db	109	;'m'
 12524  00FE2B  6D                 	db	109	;'m'
 12525  00FE2C  69                 	db	105	;'i'
 12526  00FE2D  6E                 	db	110	;'n'
 12527  00FE2E  67                 	db	103	;'g'
 12528  00FE2F  00                 	db	0
 12529  00FE30                     STR_2:
 12530  00FE30  41                 	db	65	;'A'
 12531  00FE31  43                 	db	67	;'C'
 12532  00FE32  20                 	db	32
 12533  00FE33  50                 	db	80	;'P'
 12534  00FE34  6F                 	db	111	;'o'
 12535  00FE35  77                 	db	119	;'w'
 12536  00FE36  65                 	db	101	;'e'
 12537  00FE37  72                 	db	114	;'r'
 12538  00FE38  20                 	db	32
 12539  00FE39  4D                 	db	77	;'M'
 12540  00FE3A  65                 	db	101	;'e'
 12541  00FE3B  74                 	db	116	;'t'
 12542  00FE3C  65                 	db	101	;'e'
 12543  00FE3D  72                 	db	114	;'r'
 12544  00FE3E  00                 	db	0
 12545  00FE3F                     STR_94:
 12546  00FE3F  4D                 	db	77	;'M'
 12547  00FE40  65                 	db	101	;'e'
 12548  00FE41  61                 	db	97	;'a'
 12549  00FE42  73                 	db	115	;'s'
 12550  00FE43  75                 	db	117	;'u'
 12551  00FE44  72                 	db	114	;'r'
 12552  00FE45  65                 	db	101	;'e'
 12553  00FE46  20                 	db	32
 12554  00FE47  41                 	db	65	;'A'
 12555  00FE48  56                 	db	86	;'V'
 12556  00FE49  53                 	db	83	;'S'
 12557  00FE4A  53                 	db	83	;'S'
 12558  00FE4B  3F                 	db	63	;'?'
 12559  00FE4C  00                 	db	0
 12560  00FE4D                     STR_119:
 12561  00FE4D  4C                 	db	76	;'L'
 12562  00FE4E  6F                 	db	111	;'o'
 12563  00FE4F  61                 	db	97	;'a'
 12564  00FE50  64                 	db	100	;'d'
 12565  00FE51  20                 	db	32
 12566  00FE52  45                 	db	69	;'E'
 12567  00FE53  6E                 	db	110	;'n'
 12568  00FE54  61                 	db	97	;'a'
 12569  00FE55  62                 	db	98	;'b'
 12570  00FE56  6C                 	db	108	;'l'
 12571  00FE57  65                 	db	101	;'e'
 12572  00FE58  64                 	db	100	;'d'
 12573  00FE59  3F                 	db	63	;'?'
 12574  00FE5A  00                 	db	0
 12575  00FE5B                     STR_137:
 12576  00FE5B  4C                 	db	76	;'L'
 12577  00FE5C  6F                 	db	111	;'o'
 12578  00FE5D  61                 	db	97	;'a'
 12579  00FE5E  64                 	db	100	;'d'
 12580  00FE5F  20                 	db	32
 12581  00FE60  4F                 	db	79	;'O'
 12582  00FE61  6E                 	db	110	;'n'
 12583  00FE62  20                 	db	32
 12584  00FE63  54                 	db	84	;'T'
 12585  00FE64  69                 	db	105	;'i'
 12586  00FE65  6D                 	db	109	;'m'
 12587  00FE66  65                 	db	101	;'e'
 12588  00FE67  3F                 	db	63	;'?'
 12589  00FE68  00                 	db	0
 12590  00FE69                     STR_147:
 12591  00FE69  4D                 	db	77	;'M'
 12592  00FE6A  61                 	db	97	;'a'
 12593  00FE6B  78                 	db	120	;'x'
 12594  00FE6C  20                 	db	32
 12595  00FE6D  44                 	db	68	;'D'
 12596  00FE6E  69                 	db	105	;'i'
 12597  00FE6F  65                 	db	101	;'e'
 12598  00FE70  20                 	db	32
 12599  00FE71  54                 	db	84	;'T'
 12600  00FE72  65                 	db	101	;'e'
 12601  00FE73  6D                 	db	109	;'m'
 12602  00FE74  70                 	db	112	;'p'
 12603  00FE75  3F                 	db	63	;'?'
 12604  00FE76  00                 	db	0
 12605  00FE77                     STR_177:
 12606  00FE77  50                 	db	80	;'P'
 12607  00FE78  49                 	db	73	;'I'
 12608  00FE79  43                 	db	67	;'C'
 12609  00FE7A  31                 	db	49	;'1'
 12610  00FE7B  38                 	db	56	;'8'
 12611  00FE7C  4C                 	db	76	;'L'
 12612  00FE7D  46                 	db	70	;'F'
 12613  00FE7E  36                 	db	54	;'6'
 12614  00FE7F  37                 	db	55	;'7'
 12615  00FE80  4B                 	db	75	;'K'
 12616  00FE81  34                 	db	52	;'4'
 12617  00FE82  30                 	db	48	;'0'
 12618  00FE83  00                 	db	0
 12619  00FE84                     STR_72:
 12620  00FE84  20                 	db	32
 12621  00FE85  20                 	db	32
 12622  00FE86  20                 	db	32
 12623  00FE87  20                 	db	32
 12624  00FE88  50                 	db	80	;'P'
 12625  00FE89  4F                 	db	79	;'O'
 12626  00FE8A  53                 	db	83	;'S'
 12627  00FE8B  33                 	db	51	;'3'
 12628  00FE8C  50                 	db	80	;'P'
 12629  00FE8D  33                 	db	51	;'3'
 12630  00FE8E  0A                 	db	10
 12631  00FE8F  0D                 	db	13
 12632  00FE90  00                 	db	0
 12633  00FE91                     STR_175:
 12634  00FE91  50                 	db	80	;'P'
 12635  00FE92  53                 	db	83	;'S'
 12636  00FE93  4F                 	db	79	;'O'
 12637  00FE94  43                 	db	67	;'C'
 12638  00FE95  73                 	db	115	;'s'
 12639  00FE96  20                 	db	32
 12640  00FE97  53                 	db	83	;'S'
 12641  00FE98  55                 	db	85	;'U'
 12642  00FE99  43                 	db	67	;'C'
 12643  00FE9A  4B                 	db	75	;'K'
 12644  00FE9B  0A                 	db	10
 12645  00FE9C  0D                 	db	13
 12646  00FE9D  00                 	db	0
 12647  00FE9E                     STR_59:
 12648  00FE9E  52                 	db	82	;'R'
 12649  00FE9F  65                 	db	101	;'e'
 12650  00FEA0  76                 	db	118	;'v'
 12651  00FEA1  69                 	db	105	;'i'
 12652  00FEA2  73                 	db	115	;'s'
 12653  00FEA3  69                 	db	105	;'i'
 12654  00FEA4  6F                 	db	111	;'o'
 12655  00FEA5  6E                 	db	110	;'n'
 12656  00FEA6  20                 	db	32
 12657  00FEA7  49                 	db	73	;'I'
 12658  00FEA8  44                 	db	68	;'D'
 12659  00FEA9  3F                 	db	63	;'?'
 12660  00FEAA  00                 	db	0
 12661  00FEAB                     STR_92:
 12662  00FEAB  4D                 	db	77	;'M'
 12663  00FEAC  65                 	db	101	;'e'
 12664  00FEAD  61                 	db	97	;'a'
 12665  00FEAE  73                 	db	115	;'s'
 12666  00FEAF  75                 	db	117	;'u'
 12667  00FEB0  72                 	db	114	;'r'
 12668  00FEB1  65                 	db	101	;'e'
 12669  00FEB2  20                 	db	32
 12670  00FEB3  46                 	db	70	;'F'
 12671  00FEB4  56                 	db	86	;'V'
 12672  00FEB5  52                 	db	82	;'R'
 12673  00FEB6  3F                 	db	63	;'?'
 12674  00FEB7  00                 	db	0
 12675  00FEB8                     STR_78:
 12676  00FEB8  43                 	db	67	;'C'
 12677  00FEB9  6F                 	db	111	;'o'
 12678  00FEBA  6D                 	db	109	;'m'
 12679  00FEBB  6D                 	db	109	;'m'
 12680  00FEBC  20                 	db	32
 12681  00FEBD  45                 	db	69	;'E'
 12682  00FEBE  72                 	db	114	;'r'
 12683  00FEBF  72                 	db	114	;'r'
 12684  00FEC0  6F                 	db	111	;'o'
 12685  00FEC1  72                 	db	114	;'r'
 12686  00FEC2  73                 	db	115	;'s'
 12687  00FEC3  3F                 	db	63	;'?'
 12688  00FEC4  00                 	db	0
 12689  00FEC5                     STR_126:
 12690  00FEC5  44                 	db	68	;'D'
 12691  00FEC6  69                 	db	105	;'i'
 12692  00FEC7  73                 	db	115	;'s'
 12693  00FEC8  61                 	db	97	;'a'
 12694  00FEC9  62                 	db	98	;'b'
 12695  00FECA  6C                 	db	108	;'l'
 12696  00FECB  65                 	db	101	;'e'
 12697  00FECC  20                 	db	32
 12698  00FECD  4C                 	db	76	;'L'
 12699  00FECE  6F                 	db	111	;'o'
 12700  00FECF  61                 	db	97	;'a'
 12701  00FED0  64                 	db	100	;'d'
 12702  00FED1  00                 	db	0
 12703  00FED2                     STR_106:
 12704  00FED2  43                 	db	67	;'C'
 12705  00FED3  6C                 	db	108	;'l'
 12706  00FED4  65                 	db	101	;'e'
 12707  00FED5  61                 	db	97	;'a'
 12708  00FED6  72                 	db	114	;'r'
 12709  00FED7  20                 	db	32
 12710  00FED8  45                 	db	69	;'E'
 12711  00FED9  6E                 	db	110	;'n'
 12712  00FEDA  65                 	db	101	;'e'
 12713  00FEDB  72                 	db	114	;'r'
 12714  00FEDC  67                 	db	103	;'g'
 12715  00FEDD  79                 	db	121	;'y'
 12716  00FEDE  00                 	db	0
 12717  00FEDF                     STR_4:
 12718  00FEDF  44                 	db	68	;'D'
 12719  00FEE0  72                 	db	114	;'r'
 12720  00FEE1  65                 	db	101	;'e'
 12721  00FEE2  77                 	db	119	;'w'
 12722  00FEE3  20                 	db	32
 12723  00FEE4  4D                 	db	77	;'M'
 12724  00FEE5  61                 	db	97	;'a'
 12725  00FEE6  61                 	db	97	;'a'
 12726  00FEE7  74                 	db	116	;'t'
 12727  00FEE8  6D                 	db	109	;'m'
 12728  00FEE9  61                 	db	97	;'a'
 12729  00FEEA  6E                 	db	110	;'n'
 12730  00FEEB  00                 	db	0
 12731  00FEEC                     STR_176:
 12732  00FEEC  50                 	db	80	;'P'
 12733  00FEED  49                 	db	73	;'I'
 12734  00FEEE  43                 	db	67	;'C'
 12735  00FEEF  31                 	db	49	;'1'
 12736  00FEF0  38                 	db	56	;'8'
 12737  00FEF1  46                 	db	70	;'F'
 12738  00FEF2  36                 	db	54	;'6'
 12739  00FEF3  37                 	db	55	;'7'
 12740  00FEF4  4B                 	db	75	;'K'
 12741  00FEF5  34                 	db	52	;'4'
 12742  00FEF6  30                 	db	48	;'0'
 12743  00FEF7  00                 	db	0
 12744  00FEF8                     STR_71:
 12745  00FEF8  20                 	db	32
 12746  00FEF9  20                 	db	32
 12747  00FEFA  20                 	db	32
 12748  00FEFB  20                 	db	32
 12749  00FEFC  50                 	db	80	;'P'
 12750  00FEFD  4F                 	db	79	;'O'
 12751  00FEFE  53                 	db	83	;'S'
 12752  00FEFF  31                 	db	49	;'1'
 12753  00FF00  32                 	db	50	;'2'
 12754  00FF01  0A                 	db	10
 12755  00FF02  0D                 	db	13
 12756  00FF03  00                 	db	0
 12757  00FF04                     STR_64:
 12758  00FF04  41                 	db	65	;'A'
 12759  00FF05  44                 	db	68	;'D'
 12760  00FF06  43                 	db	67	;'C'
 12761  00FF07  20                 	db	32
 12762  00FF08  45                 	db	69	;'E'
 12763  00FF09  72                 	db	114	;'r'
 12764  00FF0A  72                 	db	114	;'r'
 12765  00FF0B  6F                 	db	111	;'o'
 12766  00FF0C  72                 	db	114	;'r'
 12767  00FF0D  73                 	db	115	;'s'
 12768  00FF0E  3F                 	db	63	;'?'
 12769  00FF0F  00                 	db	0
 12770  00FF10                     STR_117:
 12771  00FF10  45                 	db	69	;'E'
 12772  00FF11  6E                 	db	110	;'n'
 12773  00FF12  61                 	db	97	;'a'
 12774  00FF13  62                 	db	98	;'b'
 12775  00FF14  6C                 	db	108	;'l'
 12776  00FF15  65                 	db	101	;'e'
 12777  00FF16  20                 	db	32
 12778  00FF17  4C                 	db	76	;'L'
 12779  00FF18  6F                 	db	111	;'o'
 12780  00FF19  61                 	db	97	;'a'
 12781  00FF1A  64                 	db	100	;'d'
 12782  00FF1B  00                 	db	0
 12783  00FF1C                     STR_5:
 12784  00FF1C  47                 	db	71	;'G'
 12785  00FF1D  61                 	db	97	;'a'
 12786  00FF1E  62                 	db	98	;'b'
 12787  00FF1F  65                 	db	101	;'e'
 12788  00FF20  20                 	db	32
 12789  00FF21  54                 	db	84	;'T'
 12790  00FF22  68                 	db	104	;'h'
 12791  00FF23  61                 	db	97	;'a'
 12792  00FF24  6C                 	db	108	;'l'
 12793  00FF25  6A                 	db	106	;'j'
 12794  00FF26  69                 	db	105	;'i'
 12795  00FF27  00                 	db	0
 12796  00FF28  25                 	db	37
 12797  00FF29  6C                 	db	108	;'l'
 12798  00FF2A  75                 	db	117	;'u'
 12799  00FF2B  2E                 	db	46
 12800  00FF2C  25                 	db	37
 12801  00FF2D  36                 	db	54	;'6'
 12802  00FF2E  2E                 	db	46
 12803  00FF2F  36                 	db	54	;'6'
 12804  00FF30  6C                 	db	108	;'l'
 12805  00FF31  75                 	db	117	;'u'
 12806  00FF32  00                 	db	0
 12807  00FF33                     STR_70:
 12808  00FF33  20                 	db	32
 12809  00FF34  20                 	db	32
 12810  00FF35  20                 	db	32
 12811  00FF36  20                 	db	32
 12812  00FF37  49                 	db	73	;'I'
 12813  00FF38  53                 	db	83	;'S'
 12814  00FF39  4E                 	db	78	;'N'
 12815  00FF3A  53                 	db	83	;'S'
 12816  00FF3B  0A                 	db	10
 12817  00FF3C  0D                 	db	13
 12818  00FF3D  00                 	db	0
 12819  00FF3E                     STR_68:
 12820  00FF3E  20                 	db	32
 12821  00FF3F  20                 	db	32
 12822  00FF40  20                 	db	32
 12823  00FF41  20                 	db	32
 12824  00FF42  41                 	db	65	;'A'
 12825  00FF43  56                 	db	86	;'V'
 12826  00FF44  53                 	db	83	;'S'
 12827  00FF45  53                 	db	83	;'S'
 12828  00FF46  0A                 	db	10
 12829  00FF47  0D                 	db	13
 12830  00FF48  00                 	db	0
 12831  00FF49                     STR_57:
 12832  00FF49  44                 	db	68	;'D'
 12833  00FF4A  65                 	db	101	;'e'
 12834  00FF4B  76                 	db	118	;'v'
 12835  00FF4C  69                 	db	105	;'i'
 12836  00FF4D  63                 	db	99	;'c'
 12837  00FF4E  65                 	db	101	;'e'
 12838  00FF4F  20                 	db	32
 12839  00FF50  49                 	db	73	;'I'
 12840  00FF51  44                 	db	68	;'D'
 12841  00FF52  3F                 	db	63	;'?'
 12842  00FF53  00                 	db	0
 12843  00FF54                     STR_141:
 12844  00FF54  4D                 	db	77	;'M'
 12845  00FF55  61                 	db	97	;'a'
 12846  00FF56  78                 	db	120	;'x'
 12847  00FF57  20                 	db	32
 12848  00FF58  50                 	db	80	;'P'
 12849  00FF59  6F                 	db	111	;'o'
 12850  00FF5A  77                 	db	119	;'w'
 12851  00FF5B  65                 	db	101	;'e'
 12852  00FF5C  72                 	db	114	;'r'
 12853  00FF5D  3F                 	db	63	;'?'
 12854  00FF5E  00                 	db	0
 12855  00FF5F                     STR_170:
 12856  00FF5F  45                 	db	69	;'E'
 12857  00FF60  61                 	db	97	;'a'
 12858  00FF61  73                 	db	115	;'s'
 12859  00FF62  74                 	db	116	;'t'
 12860  00FF63  65                 	db	101	;'e'
 12861  00FF64  72                 	db	114	;'r'
 12862  00FF65  20                 	db	32
 12863  00FF66  45                 	db	69	;'E'
 12864  00FF67  67                 	db	103	;'g'
 12865  00FF68  67                 	db	103	;'g'
 12866  00FF69  00                 	db	0
 12867  00FF6A                     STR_178:
 12868  00FF6A  55                 	db	85	;'U'
 12869  00FF6B  6E                 	db	110	;'n'
 12870  00FF6C  64                 	db	100	;'d'
 12871  00FF6D  65                 	db	101	;'e'
 12872  00FF6E  66                 	db	102	;'f'
 12873  00FF6F  69                 	db	105	;'i'
 12874  00FF70  6E                 	db	110	;'n'
 12875  00FF71  65                 	db	101	;'e'
 12876  00FF72  64                 	db	100	;'d'
 12877  00FF73  00                 	db	0
 12878  00FF74                     STR_69:
 12879  00FF74  20                 	db	32
 12880  00FF75  20                 	db	32
 12881  00FF76  20                 	db	32
 12882  00FF77  20                 	db	32
 12883  00FF78  46                 	db	70	;'F'
 12884  00FF79  56                 	db	86	;'V'
 12885  00FF7A  52                 	db	82	;'R'
 12886  00FF7B  0A                 	db	10
 12887  00FF7C  0D                 	db	13
 12888  00FF7D  00                 	db	0
 12889  00FF7E                     STR_61:
 12890  00FF7E  55                 	db	85	;'U'
 12891  00FF7F  73                 	db	115	;'s'
 12892  00FF80  65                 	db	101	;'e'
 12893  00FF81  72                 	db	114	;'r'
 12894  00FF82  20                 	db	32
 12895  00FF83  49                 	db	73	;'I'
 12896  00FF84  44                 	db	68	;'D'
 12897  00FF85  73                 	db	115	;'s'
 12898  00FF86  3F                 	db	63	;'?'
 12899  00FF87  00                 	db	0
 12900  00FF88                     STR_3:
 12901  00FF88  45                 	db	69	;'E'
 12902  00FF89  4C                 	db	76	;'L'
 12903  00FF8A  45                 	db	69	;'E'
 12904  00FF8B  4E                 	db	78	;'N'
 12905  00FF8C  20                 	db	32
 12906  00FF8D  33                 	db	51	;'3'
 12907  00FF8E  30                 	db	48	;'0'
 12908  00FF8F  33                 	db	51	;'3'
 12909  00FF90  35                 	db	53	;'5'
 12910  00FF91  00                 	db	0
 12911  00FF92                     STR_161:
 12912  00FF92  48                 	db	72	;'H'
 12913  00FF93  65                 	db	101	;'e'
 12914  00FF94  6C                 	db	108	;'l'
 12915  00FF95  70                 	db	112	;'p'
 12916  00FF96  20                 	db	32
 12917  00FF97  41                 	db	65	;'A'
 12918  00FF98  6C                 	db	108	;'l'
 12919  00FF99  6C                 	db	108	;'l'
 12920  00FF9A  00                 	db	0
 12921  00FF9B                     STR_191:
 12922  00FF9B  28                 	db	40
 12923  00FF9C  6E                 	db	110	;'n'
 12924  00FF9D  75                 	db	117	;'u'
 12925  00FF9E  6C                 	db	108	;'l'
 12926  00FF9F  6C                 	db	108	;'l'
 12927  00FFA0  29                 	db	41
 12928  00FFA1  00                 	db	0
 12929  00FFA2                     STR_53:
 12930  00FFA2  2A                 	db	42
 12931  00FFA3  49                 	db	73	;'I'
 12932  00FFA4  44                 	db	68	;'D'
 12933  00FFA5  4E                 	db	78	;'N'
 12934  00FFA6  3F                 	db	63	;'?'
 12935  00FFA7  00                 	db	0
 12936  00FFA8                     STR_48:
 12937  00FFA8  43                 	db	67	;'C'
 12938  00FFA9  6C                 	db	108	;'l'
 12939  00FFAA  65                 	db	101	;'e'
 12940  00FFAB  61                 	db	97	;'a'
 12941  00FFAC  72                 	db	114	;'r'
 12942  00FFAD  00                 	db	0
 12943  00FFAE                     STR_163:
 12944  00FFAE  48                 	db	72	;'H'
 12945  00FFAF  65                 	db	101	;'e'
 12946  00FFB0  6C                 	db	108	;'l'
 12947  00FFB1  70                 	db	112	;'p'
 12948  00FFB2  00                 	db	0
 12949  00FFB3                     STR_6:
 12950  00FFB3  1B                 	db	27
 12951  00FFB4  5B                 	db	91	;'['
 12952  00FFB5  32                 	db	50	;'2'
 12953  00FFB6  4A                 	db	74	;'J'
 12954  00FFB7  00                 	db	0
 12955  00FFB8                     STR_54:
 12956  00FFB8  49                 	db	73	;'I'
 12957  00FFB9  44                 	db	68	;'D'
 12958  00FFBA  4E                 	db	78	;'N'
 12959  00FFBB  00                 	db	0
 12960  00FFBC                     STR_7:
 12961  00FFBC  1B                 	db	27
 12962  00FFBD  5B                 	db	91	;'['
 12963  00FFBE  48                 	db	72	;'H'
 12964  00FFBF  00                 	db	0
 12965  00FFC0  1B                 	db	27
 12966  00FFC1  5B                 	db	91	;'['
 12967  00FFC2  73                 	db	115	;'s'
 12968  00FFC3  00                 	db	0
 12969  00FFC4  1B                 	db	27
 12970  00FFC5  5B                 	db	91	;'['
 12971  00FFC6  75                 	db	117	;'u'
 12972  00FFC7  00                 	db	0
 12973  00FFC8                     STR_1:
 12974  00FFC8  1B                 	db	27
 12975  00FFC9  5B                 	db	91	;'['
 12976  00FFCA  4B                 	db	75	;'K'
 12977  00FFCB  00                 	db	0
 12978  00FFCC                     STR_24:
 12979  00FFCC  33                 	db	51	;'3'
 12980  00FFCD  30                 	db	48	;'0'
 12981  00FFCE  00                 	db	0
 12982  00FFCF                     STR_25:
 12983  00FFCF  33                 	db	51	;'3'
 12984  00FFD0  31                 	db	49	;'1'
 12985  00FFD1  00                 	db	0
 12986  00FFD2                     STR_35:
 12987  00FFD2  34                 	db	52	;'4'
 12988  00FFD3  31                 	db	49	;'1'
 12989  00FFD4  00                 	db	0
 12990  00FFD5                     STR_26:
 12991  00FFD5  33                 	db	51	;'3'
 12992  00FFD6  32                 	db	50	;'2'
 12993  00FFD7  00                 	db	0
 12994  00FFD8                     STR_36:
 12995  00FFD8  34                 	db	52	;'4'
 12996  00FFD9  32                 	db	50	;'2'
 12997  00FFDA  00                 	db	0
 12998  00FFDB                     STR_27:
 12999  00FFDB  33                 	db	51	;'3'
 13000  00FFDC  33                 	db	51	;'3'
 13001  00FFDD  00                 	db	0
 13002  00FFDE                     STR_37:
 13003  00FFDE  34                 	db	52	;'4'
 13004  00FFDF  33                 	db	51	;'3'
 13005  00FFE0  00                 	db	0
 13006  00FFE1                     STR_28:
 13007  00FFE1  33                 	db	51	;'3'
 13008  00FFE2  34                 	db	52	;'4'
 13009  00FFE3  00                 	db	0
 13010  00FFE4                     STR_38:
 13011  00FFE4  34                 	db	52	;'4'
 13012  00FFE5  34                 	db	52	;'4'
 13013  00FFE6  00                 	db	0
 13014  00FFE7                     STR_39:
 13015  00FFE7  34                 	db	52	;'4'
 13016  00FFE8  35                 	db	53	;'5'
 13017  00FFE9  00                 	db	0
 13018  00FFEA                     STR_30:
 13019  00FFEA  33                 	db	51	;'3'
 13020  00FFEB  36                 	db	54	;'6'
 13021  00FFEC  00                 	db	0
 13022  00FFED                     STR_40:
 13023  00FFED  34                 	db	52	;'4'
 13024  00FFEE  36                 	db	54	;'6'
 13025  00FFEF  00                 	db	0
 13026  00FFF0                     STR_31:
 13027  00FFF0  33                 	db	51	;'3'
 13028  00FFF1  37                 	db	55	;'7'
 13029  00FFF2  00                 	db	0
 13030  00FFF3                     STR_41:
 13031  00FFF3  34                 	db	52	;'4'
 13032  00FFF4  37                 	db	55	;'7'
 13033  00FFF5  00                 	db	0
 13034  00FFF6                     STR_15:
 13035  00FFF6  1B                 	db	27
 13036  00FFF7  5B                 	db	91	;'['
 13037  00FFF8  00                 	db	0
 13038  00FFF9                     STR_21:
 13039  00FFF9  38                 	db	56	;'8'
 13040  00FFFA  00                 	db	0
 13041  00FFFB                     STR_23:
 13042  00FFFB  3B                 	db	59	;';'
 13043  00FFFC  00                 	db	0
 13044  00FFFD                     STR_43:
 13045  00FFFD  6D                 	db	109	;'m'
 13046  00FFFE  00                 	db	0
 13047  0000                     
 13048                           ; #config settings
 13049  00FFFF  00                 	db	0	; dummy byte at the end
 13050  0000                     
 13051                           	psect	nvBANK2
 13052  0002F5                     __pnvBANK2:
 13053                           	opt stack 0
 13054  0002F5                     _reset_cause:
 13055                           	opt stack 0
 13056  0002F5                     	ds	1
 13057  0000                     _INT0PPS	set	3568
 13058  0000                     _HLVDCON0bits	set	3778
 13059  0000                     _HLVDCON0	set	3778
 13060  0000                     _HLVDCON1	set	3779
 13061  0000                     _PIR8bits	set	3643
 13062  0000                     _FVRCONbits	set	3780
 13063  0000                     _FVRCON	set	3780
 13064  0000                     _RC2REG	set	3825
 13065  0000                     _RC2STAbits	set	3829
 13066  0000                     _TX2REG	set	3826
 13067  0000                     _TX2STAbits	set	3830
 13068  0000                     _SP2BRGH	set	3828
 13069  0000                     _SP2BRGL	set	3827
 13070  0000                     _TX2STA	set	3830
 13071  0000                     _RC2STA	set	3829
 13072  0000                     _BAUD2CON	set	3831
 13073  0000                     _PIR1bits	set	3636
 13074  0000                     _PIE1bits	set	3626
 13075  0000                     _PIR0bits	set	3635
 13076  0000                     _PIE0bits	set	3625
 13077  0000                     _PIR2bits	set	3637
 13078  0000                     _PIE2bits	set	3627
 13079  0000                     _PIR5bits	set	3640
 13080  0000                     _PIE5bits	set	3630
 13081  0000                     _PIR3bits	set	3638
 13082  0000                     _PIE3bits	set	3628
 13083  0000                     _IPR1bits	set	3616
 13084  0000                     _IPR0bits	set	3615
 13085  0000                     _IPR2bits	set	3617
 13086  0000                     _IPR5bits	set	3620
 13087  0000                     _IPR3bits	set	3618
 13088  0000                     _SSP1DATPPS	set	3610
 13089  0000                     _RC7PPS	set	3689
 13090  0000                     _RX2PPS	set	3601
 13091  0000                     _RC6PPS	set	3688
 13092  0000                     _SSP1CLKPPS	set	3609
 13093  0000                     _RG7PPS	set	3721
 13094  0000                     _SLRCONH	set	3774
 13095  0000                     _SLRCONG	set	3769
 13096  0000                     _SLRCONF	set	3761
 13097  0000                     _SLRCONE	set	3756
 13098  0000                     _SLRCOND	set	3748
 13099  0000                     _SLRCONC	set	3743
 13100  0000                     _SLRCONB	set	3735
 13101  0000                     _SLRCONA	set	3727
 13102  0000                     _ODCOND	set	3749
 13103  0000                     _ODCONC	set	3744
 13104  0000                     _ODCONH	set	3775
 13105  0000                     _ODCONB	set	3736
 13106  0000                     _ODCONG	set	3770
 13107  0000                     _ODCONA	set	3728
 13108  0000                     _ODCONF	set	3762
 13109  0000                     _ODCONE	set	3757
 13110  0000                     _WPUH	set	3776
 13111  0000                     _WPUC	set	3745
 13112  0000                     _WPUA	set	3729
 13113  0000                     _WPUG	set	3771
 13114  0000                     _WPUB	set	3737
 13115  0000                     _WPUE	set	3758
 13116  0000                     _WPUF	set	3763
 13117  0000                     _WPUD	set	3750
 13118  0000                     _ANSELA	set	3730
 13119  0000                     _ANSELF	set	3764
 13120  0000                     _ANSELG	set	3772
 13121  0000                     _ANSELE	set	3759
 13122  0000                     _ANSELB	set	3738
 13123  0000                     _ANSELD	set	3751
 13124  0000                     _PMD5	set	3665
 13125  0000                     _PMD4	set	3664
 13126  0000                     _PMD3	set	3663
 13127  0000                     _PMD2	set	3662
 13128  0000                     _PMD1	set	3661
 13129  0000                     _PMD0	set	3660
 13130  0000                     _OSCTUNE	set	3656
 13131  0000                     _OSCFRQ	set	3657
 13132  0000                     _OSCEN	set	3655
 13133  0000                     _OSCCON3	set	3653
 13134  0000                     _OSCCON1	set	3651
 13135  0000                     _SBOREN	set	29279
 13136  0000                     _PLLR	set	29232
 13137  0000                     _T7GCONbits	set	3889
 13138  0000                     _T7CONbits	set	3888
 13139  0000                     _T7CON	set	3888
 13140  0000                     _TMR7L	set	3886
 13141  0000                     _TMR7H	set	3887
 13142  0000                     _T7CLK	set	3891
 13143  0000                     _T7GATE	set	3890
 13144  0000                     _T7GCON	set	3889
 13145  0000                     _ADCON1bits	set	3929
 13146  0000                     _ADPRE	set	3934
 13147  0000                     _ADCON3bits	set	3931
 13148  0000                     _ADCON2bits	set	3930
 13149  0000                     _ADACQ	set	3932
 13150  0000                     _ADCLK	set	3927
 13151  0000                     _ADACT	set	3926
 13152  0000                     _ADREF	set	3928
 13153  0000                     _ADCON3	set	3931
 13154  0000                     _ADCON2	set	3930
 13155  0000                     _ADCON1	set	3929
 13156  0000                     _ADCAP	set	3933
 13157  0000                     _ADPCH	set	3935
 13158  0000                     _SSP1BUF	set	3985
 13159  0000                     _SSP1CON2bits	set	3990
 13160  0000                     _SSP1CON1bits	set	3989
 13161  0000                     _SSP1ADD	set	3986
 13162  0000                     _SSP1CON3	set	3991
 13163  0000                     _SSP1CON1	set	3989
 13164  0000                     _SSP1STAT	set	3988
 13165  0000                     _PCON0bits	set	4055
 13166  0000                     _LATGbits	set	3967
 13167  0000                     _LATFbits	set	3966
 13168  0000                     _PR4	set	4022
 13169  0000                     _TMR4	set	4021
 13170  0000                     _T4CONbits	set	4023
 13171  0000                     _T4RSTbits	set	4026
 13172  0000                     _T4HLTbits	set	4024
 13173  0000                     _T4CON	set	4023
 13174  0000                     _T4TMR	set	4021
 13175  0000                     _T4PR	set	4022
 13176  0000                     _T4RST	set	4026
 13177  0000                     _T4HLT	set	4024
 13178  0000                     _T4CLKCON	set	4025
 13179  0000                     _NVMDAT	set	3958
 13180  0000                     _NVMADRL	set	3956
 13181  0000                     _NVMADRH	set	3957
 13182  0000                     _NVMCON2	set	3960
 13183  0000                     _TABLAT	set	4085
 13184  0000                     _TBLPTRL	set	4086
 13185  0000                     _TBLPTRH	set	4087
 13186  0000                     _TBLPTRU	set	4088
 13187  0000                     _NVMCON1bits	set	3959
 13188  0000                     _T5GCONbits	set	4036
 13189  0000                     _T5CONbits	set	4035
 13190  0000                     _T5CON	set	4035
 13191  0000                     _TMR5L	set	4033
 13192  0000                     _TMR5H	set	4034
 13193  0000                     _T5CLK	set	4038
 13194  0000                     _T5GATE	set	4037
 13195  0000                     _T5GCON	set	4036
 13196  0000                     _ADERRL	set	3950
 13197  0000                     _ADERRH	set	3951
 13198  0000                     _ADPREVL	set	3937
 13199  0000                     _ADPREVH	set	3938
 13200  0000                     _ADFLTRL	set	3954
 13201  0000                     _ADFLTRH	set	3955
 13202  0000                     _ADSTATbits	set	3941
 13203  0000                     _ADACCL	set	3952
 13204  0000                     _ADACCH	set	3953
 13205  0000                     _ADCNT	set	3943
 13206  0000                     _ADRESL	set	3939
 13207  0000                     _ADRESH	set	3940
 13208  0000                     _ADCON0bits	set	3936
 13209  0000                     _ADCON0	set	3936
 13210  0000                     _ADSTAT	set	3941
 13211  0000                     _ADRPT	set	3942
 13212  0000                     _ADSTPTH	set	3945
 13213  0000                     _ADSTPTL	set	3944
 13214  0000                     _ADUTHH	set	3949
 13215  0000                     _ADUTHL	set	3948
 13216  0000                     _ADLTHH	set	3947
 13217  0000                     _ADLTHL	set	3946
 13218  0000                     _PR6	set	4016
 13219  0000                     _TMR6	set	4015
 13220  0000                     _T6CONbits	set	4017
 13221  0000                     _T6RSTbits	set	4020
 13222  0000                     _T6HLTbits	set	4018
 13223  0000                     _T6CON	set	4017
 13224  0000                     _T6TMR	set	4015
 13225  0000                     _T6PR	set	4016
 13226  0000                     _T6RST	set	4020
 13227  0000                     _T6HLT	set	4018
 13228  0000                     _T6CLKCON	set	4019
 13229  0000                     _INTCONbits	set	4082
 13230  0000                     _TRISD	set	3972
 13231  0000                     _TRISC	set	3971
 13232  0000                     _TRISH	set	3976
 13233  0000                     _TRISB	set	3970
 13234  0000                     _TRISG	set	3975
 13235  0000                     _TRISA	set	3969
 13236  0000                     _TRISF	set	3974
 13237  0000                     _TRISE	set	3973
 13238  0000                     _LATH	set	3968
 13239  0000                     _LATC	set	3963
 13240  0000                     _LATG	set	3967
 13241  0000                     _LATB	set	3962
 13242  0000                     _LATF	set	3966
 13243  0000                     _LATA	set	3961
 13244  0000                     _LATD	set	3964
 13245  0000                     _LATE	set	3965
 13246                           
 13247                           	psect	cinit
 13248  0199CE                     __pcinit:
 13249                           	opt stack 0
 13250  0199CE                     start_initialization:
 13251                           	opt stack 0
 13252  0199CE                     __initialization:
 13253                           	opt stack 0
 13254                           
 13255                           ; Initialize objects allocated to BANK2 (37 bytes)
 13256                           ; load TBLPTR registers with __pidataBANK2
 13257  0199CE  0E30               	movlw	low __pidataBANK2
 13258  0199D0  6EF6               	movwf	tblptrl,c
 13259  0199D2  0EAE               	movlw	high __pidataBANK2
 13260  0199D4  6EF7               	movwf	tblptrh,c
 13261  0199D6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 13262  0199D8  6EF8               	movwf	tblptru,c
 13263  0199DA  EE02  F0D0         	lfsr	0,__pdataBANK2
 13264  0199DE  EE10 F025          	lfsr	1,37
 13265  0199E2                     copy_data0:
 13266  0199E2  0009               	tblrd		*+
 13267  0199E4  CFF5 FFEE          	movff	tablat,postinc0
 13268  0199E8  50E5               	movf	postdec1,w,c
 13269  0199EA  50E1               	movf	fsr1l,w,c
 13270  0199EC  E1FA               	bnz	copy_data0
 13271                           
 13272                           ; Initialize objects allocated to BANK0 (6 bytes)
 13273                           ; load TBLPTR registers with __pidataBANK0
 13274  0199EE  0ECC               	movlw	low __pidataBANK0
 13275  0199F0  6EF6               	movwf	tblptrl,c
 13276  0199F2  0EB1               	movlw	high __pidataBANK0
 13277  0199F4  6EF7               	movwf	tblptrh,c
 13278  0199F6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 13279  0199F8  6EF8               	movwf	tblptru,c
 13280  0199FA  EE00  F0F0         	lfsr	0,__pdataBANK0
 13281  0199FE  EE10 F006          	lfsr	1,6
 13282  019A02                     copy_data1:
 13283  019A02  0009               	tblrd		*+
 13284  019A04  CFF5 FFEE          	movff	tablat,postinc0
 13285  019A08  50E5               	movf	postdec1,w,c
 13286  019A0A  50E1               	movf	fsr1l,w,c
 13287  019A0C  E1FA               	bnz	copy_data1
 13288                           
 13289                           ; Clear objects allocated to BANK3 (256 bytes)
 13290  019A0E  EE03  F000         	lfsr	0,__pbssBANK3
 13291  019A12  EE11 F000          	lfsr	1,256
 13292  019A16                     clear_0:
 13293  019A16  6AEE               	clrf	postinc0,c
 13294  019A18  50E5               	movf	postdec1,w,c
 13295  019A1A  50E1               	movf	fsr1l,w,c
 13296  019A1C  E1FC               	bnz	clear_0
 13297  019A1E  50E2               	movf	fsr1h,w,c
 13298  019A20  E1FA               	bnz	clear_0
 13299                           
 13300                           ; Clear objects allocated to BANK2 (147 bytes)
 13301  019A22  EE02  F000         	lfsr	0,__pbssBANK2
 13302  019A26  0E93               	movlw	147
 13303  019A28                     clear_1:
 13304  019A28  6AEE               	clrf	postinc0,c
 13305  019A2A  06E8               	decf	wreg,f,c
 13306  019A2C  E1FD               	bnz	clear_1
 13307                           
 13308                           ; Clear objects allocated to BANK1 (35 bytes)
 13309  019A2E  EE01  F0C6         	lfsr	0,__pbssBANK1
 13310  019A32  0E23               	movlw	35
 13311  019A34                     clear_2:
 13312  019A34  6AEE               	clrf	postinc0,c
 13313  019A36  06E8               	decf	wreg,f,c
 13314  019A38  E1FD               	bnz	clear_2
 13315                           
 13316                           ; Clear objects allocated to BITBANK0 (1 bytes)
 13317  019A3A  0100               	movlb	0
 13318  019A3C  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 13319                           
 13320                           ; Clear objects allocated to BANK0 (5 bytes)
 13321  019A3E  0100               	movlb	0
 13322  019A40  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 13323  019A42  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 13324  019A44  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 13325  019A46  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 13326  019A48  6BF6               	clrf	__pbssBANK0& (0+255),b
 13327                           
 13328                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 13329  019A4A  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 13330  019A4C                     end_of_initialization:
 13331                           	opt stack 0
 13332  019A4C                     __end_of__initialization:
 13333                           	opt stack 0
 13334  019A4C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13335  019A4E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13336  019A50  0100               	movlb	0
 13337  019A52  EF36  F0C2         	goto	_main	;jump to C main() function
 13338                           tblptru	equ	0xFF8
 13339                           tblptrh	equ	0xFF7
 13340                           tblptrl	equ	0xFF6
 13341                           tablat	equ	0xFF5
 13342                           postinc0	equ	0xFEE
 13343                           wreg	equ	0xFE8
 13344                           postdec1	equ	0xFE5
 13345                           fsr1h	equ	0xFE2
 13346                           fsr1l	equ	0xFE1
 13347                           
 13348                           	psect	bitbssCOMRAM
 13349  0002F0                     __pbitbssCOMRAM:
 13350                           	opt stack 0
 13351  0002F0                     _load_enable:
 13352                           	opt stack 0
 13353  0002F0                     	ds	1
 13354                           tblptru	equ	0xFF8
 13355                           tblptrh	equ	0xFF7
 13356                           tblptrl	equ	0xFF6
 13357                           tablat	equ	0xFF5
 13358                           postinc0	equ	0xFEE
 13359                           wreg	equ	0xFE8
 13360                           postdec1	equ	0xFE5
 13361                           fsr1h	equ	0xFE2
 13362                           fsr1l	equ	0xFE1
 13363                           
 13364                           	psect	bitbssBANK0
 13365  0007D8                     __pbitbssBANK0:
 13366                           	opt stack 0
 13367  0007D8                     _eusart2RxStringReady:
 13368                           	opt stack 0
 13369  0007D8                     	ds	1
 13370                           tblptru	equ	0xFF8
 13371                           tblptrh	equ	0xFF7
 13372                           tblptrl	equ	0xFF6
 13373                           tablat	equ	0xFF5
 13374                           postinc0	equ	0xFEE
 13375                           wreg	equ	0xFE8
 13376                           postdec1	equ	0xFE5
 13377                           fsr1h	equ	0xFE2
 13378                           fsr1l	equ	0xFE1
 13379                           
 13380                           	psect	bssBANK0
 13381  0000F6                     __pbssBANK0:
 13382                           	opt stack 0
 13383  0000F6                     _Total_Energy:
 13384                           	opt stack 0
 13385  0000F6                     	ds	4
 13386  0000FA                     _eusart2RxHead:
 13387                           	opt stack 0
 13388  0000FA                     	ds	1
 13389                           tblptru	equ	0xFF8
 13390                           tblptrh	equ	0xFF7
 13391                           tblptrl	equ	0xFF6
 13392                           tablat	equ	0xFF5
 13393                           postinc0	equ	0xFEE
 13394                           wreg	equ	0xFE8
 13395                           postdec1	equ	0xFE5
 13396                           fsr1h	equ	0xFE2
 13397                           fsr1l	equ	0xFE1
 13398                           
 13399                           	psect	dataBANK0
 13400  0000F0                     __pdataBANK0:
 13401                           	opt stack 0
 13402  0000F0                     _dimming_period:
 13403                           	opt stack 0
 13404  0000F0                     	ds	2
 13405  0000F2                     _TRIAC_Firing_Angle:
 13406                           	opt stack 0
 13407  0000F2                     	ds	4
 13408                           tblptru	equ	0xFF8
 13409                           tblptrh	equ	0xFF7
 13410                           tblptrl	equ	0xFF6
 13411                           tablat	equ	0xFF5
 13412                           postinc0	equ	0xFEE
 13413                           wreg	equ	0xFE8
 13414                           postdec1	equ	0xFE5
 13415                           fsr1h	equ	0xFE2
 13416                           fsr1l	equ	0xFE1
 13417                           
 13418                           	psect	bssBANK1
 13419  0001C6                     __pbssBANK1:
 13420                           	opt stack 0
 13421  0001C6                     _Avg_Power:
 13422                           	opt stack 0
 13423  0001C6                     	ds	4
 13424  0001CA                     _Irms:
 13425                           	opt stack 0
 13426  0001CA                     	ds	4
 13427  0001CE                     _Ipk:
 13428                           	opt stack 0
 13429  0001CE                     	ds	4
 13430  0001D2                     _Temp_ADC_Result:
 13431                           	opt stack 0
 13432  0001D2                     	ds	4
 13433  0001D6                     _POS12_ADC_Result:
 13434                           	opt stack 0
 13435  0001D6                     	ds	4
 13436  0001DA                     _POS3P3_ADC_Result:
 13437                           	opt stack 0
 13438  0001DA                     	ds	4
 13439  0001DE                     _eusart2RxTail:
 13440                           	opt stack 0
 13441  0001DE                     	ds	1
 13442  0001DF                     _eusart2TxBufferRemaining:
 13443                           	opt stack 0
 13444  0001DF                     	ds	1
 13445  0001E0                     _eusart2TxTail:
 13446                           	opt stack 0
 13447  0001E0                     	ds	1
 13448  0001E1                     _eusart2TxHead:
 13449                           	opt stack 0
 13450  0001E1                     	ds	1
 13451  0001E2                     _FVR_ADC_Result:
 13452                           	opt stack 0
 13453  0001E2                     	ds	4
 13454  0001E6                     I2C1_ISR@i2c_address:
 13455                           	opt stack 0
 13456  0001E6                     	ds	2
 13457  0001E8                     _OLED_I2C_Status:
 13458                           	opt stack 0
 13459  0001E8                     	ds	1
 13460                           tblptru	equ	0xFF8
 13461                           tblptrh	equ	0xFF7
 13462                           tblptrl	equ	0xFF6
 13463                           tablat	equ	0xFF5
 13464                           postinc0	equ	0xFEE
 13465                           wreg	equ	0xFE8
 13466                           postdec1	equ	0xFE5
 13467                           fsr1h	equ	0xFE2
 13468                           fsr1l	equ	0xFE1
 13469                           
 13470                           	psect	bssBANK2
 13471  000200                     __pbssBANK2:
 13472                           	opt stack 0
 13473  000200                     _error_handler:
 13474                           	opt stack 0
 13475  000200                     	ds	9
 13476  000209                     _i2c1_object:
 13477                           	opt stack 0
 13478  000209                     	ds	7
 13479  000210                     _max_FVR_ADC_Result:
 13480                           	opt stack 0
 13481  000210                     	ds	4
 13482  000214                     _max_Temp_ADC_Result:
 13483                           	opt stack 0
 13484  000214                     	ds	4
 13485  000218                     _max_POS12_ADC_Result:
 13486                           	opt stack 0
 13487  000218                     	ds	4
 13488  00021C                     _max_POS3P3_ADC_Result:
 13489                           	opt stack 0
 13490  00021C                     	ds	4
 13491  000220                     _max_Power:
 13492                           	opt stack 0
 13493  000220                     	ds	4
 13494  000224                     _max_Irms:
 13495                           	opt stack 0
 13496  000224                     	ds	4
 13497  000228                     _load_on_time:
 13498                           	opt stack 0
 13499  000228                     	ds	4
 13500  00022C                     _dev_on_time:
 13501                           	opt stack 0
 13502  00022C                     	ds	4
 13503  000230                     _Vrms:
 13504                           	opt stack 0
 13505  000230                     	ds	4
 13506  000234                     _Imeas:
 13507                           	opt stack 0
 13508  000234                     	ds	4
 13509  000238                     _Vpk:
 13510                           	opt stack 0
 13511  000238                     	ds	4
 13512  00023C                     _ADC_Result_Scaling:
 13513                           	opt stack 0
 13514  00023C                     	ds	4
 13515  000240                     _AVSS_ADC_Result:
 13516                           	opt stack 0
 13517  000240                     	ds	4
 13518  000244                     _TMR4_InterruptHandler:
 13519                           	opt stack 0
 13520  000244                     	ds	3
 13521  000247                     _INT0_InterruptHandler:
 13522                           	opt stack 0
 13523  000247                     	ds	3
 13524  00024A                     _TMR5_InterruptHandler:
 13525                           	opt stack 0
 13526  00024A                     	ds	3
 13527  00024D                     _TMR7_InterruptHandler:
 13528                           	opt stack 0
 13529  00024D                     	ds	3
 13530  000250                     _ADCC_ADTI_InterruptHandler:
 13531                           	opt stack 0
 13532  000250                     	ds	3
 13533  000253                     _TMR6_InterruptHandler:
 13534                           	opt stack 0
 13535  000253                     	ds	3
 13536  000256                     _EUSART2_RxDefaultInterruptHandler:
 13537                           	opt stack 0
 13538  000256                     	ds	3
 13539  000259                     _EUSART2_TxDefaultInterruptHandler:
 13540                           	opt stack 0
 13541  000259                     	ds	3
 13542  00025C                     _errno:
 13543                           	opt stack 0
 13544  00025C                     	ds	2
 13545  00025E                     I2C1_ISR@pi2c_buf_ptr:
 13546                           	opt stack 0
 13547  00025E                     	ds	2
 13548  000260                     _p_i2c1_current:
 13549                           	opt stack 0
 13550  000260                     	ds	2
 13551  000262                     _p_i2c1_trb_current:
 13552                           	opt stack 0
 13553  000262                     	ds	2
 13554  000264                     TMR4_ISR@CountCallBack:
 13555                           	opt stack 0
 13556  000264                     	ds	2
 13557  000266                     _timer5ReloadVal:
 13558                           	opt stack 0
 13559  000266                     	ds	2
 13560  000268                     _timer7ReloadVal:
 13561                           	opt stack 0
 13562  000268                     	ds	2
 13563  00026A                     I2C1_ISR@i2c_10bit_address_restart:
 13564                           	opt stack 0
 13565  00026A                     	ds	1
 13566  00026B                     I2C1_ISR@i2c_bytes_left:
 13567                           	opt stack 0
 13568  00026B                     	ds	1
 13569  00026C                     _i2c1_trb_count:
 13570                           	opt stack 0
 13571  00026C                     	ds	1
 13572  00026D                     _i2c1_state:
 13573                           	opt stack 0
 13574  00026D                     	ds	1
 13575  00026E                     _current_adc_channel:
 13576                           	opt stack 0
 13577  00026E                     	ds	1
 13578  00026F                     _background_color:
 13579                           	opt stack 0
 13580  00026F                     	ds	1
 13581  000270                     _foreground_color:
 13582                           	opt stack 0
 13583  000270                     	ds	1
 13584  000271                     _attribute:
 13585                           	opt stack 0
 13586  000271                     	ds	1
 13587  000272                     _eusart2RxCount:
 13588                           	opt stack 0
 13589  000272                     	ds	1
 13590  000273                     ftoa@buf:
 13591                           	opt stack 0
 13592  000273                     	ds	17
 13593  000284                     I2C1_MasterRead@trBlock:
 13594                           	opt stack 0
 13595  000284                     	ds	5
 13596  000289                     I2C1_MasterWrite@trBlock:
 13597                           	opt stack 0
 13598  000289                     	ds	5
 13599  00028E                     _i2c1_tr_queue:
 13600                           	opt stack 0
 13601  00028E                     	ds	5
 13602                           tblptru	equ	0xFF8
 13603                           tblptrh	equ	0xFF7
 13604                           tblptrl	equ	0xFF6
 13605                           tablat	equ	0xFF5
 13606                           postinc0	equ	0xFEE
 13607                           wreg	equ	0xFE8
 13608                           postdec1	equ	0xFE5
 13609                           fsr1h	equ	0xFE2
 13610                           fsr1l	equ	0xFE1
 13611                           
 13612                           	psect	dataBANK2
 13613  0002D0                     __pdataBANK2:
 13614                           	opt stack 0
 13615  0002D0                     getCauseOfResetString@strings:
 13616                           	opt stack 0
 13617  0002D0                     	ds	18
 13618  0002E2                     getDeviceIDString@F17550:
 13619                           	opt stack 0
 13620  0002E2                     	ds	6
 13621  0002E8                     _Irms_offset:
 13622                           	opt stack 0
 13623  0002E8                     	ds	4
 13624  0002EC                     _Vpk_const:
 13625                           	opt stack 0
 13626  0002EC                     	ds	4
 13627  0002F0                     _Temp_ADC_Offset:
 13628                           	opt stack 0
 13629  0002F0                     	ds	4
 13630  0002F4                     _next_channel:
 13631                           	opt stack 0
 13632  0002F4                     	ds	1
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           postinc0	equ	0xFEE
 13638                           wreg	equ	0xFE8
 13639                           postdec1	equ	0xFE5
 13640                           fsr1h	equ	0xFE2
 13641                           fsr1l	equ	0xFE1
 13642                           
 13643                           	psect	bssBANK3
 13644  000300                     __pbssBANK3:
 13645                           	opt stack 0
 13646  000300                     _eusart2TxBuffer:
 13647                           	opt stack 0
 13648  000300                     	ds	128
 13649  000380                     _eusart2RxBuffer:
 13650                           	opt stack 0
 13651  000380                     	ds	64
 13652  0003C0                     _line:
 13653                           	opt stack 0
 13654  0003C0                     	ds	64
 13655                           tblptru	equ	0xFF8
 13656                           tblptrh	equ	0xFF7
 13657                           tblptrl	equ	0xFF6
 13658                           tablat	equ	0xFF5
 13659                           postinc0	equ	0xFEE
 13660                           wreg	equ	0xFE8
 13661                           postdec1	equ	0xFE5
 13662                           fsr1h	equ	0xFE2
 13663                           fsr1l	equ	0xFE1
 13664                           
 13665                           	psect	cstackBANK2
 13666  000293                     __pcstackBANK2:
 13667                           	opt stack 0
 13668  000293                     terminal_textAttributes@foreground_color:
 13669                           	opt stack 0
 13670                           
 13671                           ; 1 bytes @ 0x0
 13672  000293                     	ds	1
 13673  000294                     terminal_textAttributes@output_buff:
 13674                           	opt stack 0
 13675                           
 13676                           ; 15 bytes @ 0x1
 13677  000294                     	ds	15
 13678  0002A3                     ringBufferLUT@arg_buff:
 13679                           	opt stack 0
 13680                           
 13681                           ; 3 bytes @ 0x10
 13682  0002A3                     	ds	3
 13683  0002A6                     ringBufferLUT@angle_degrees:
 13684                           	opt stack 0
 13685                           
 13686                           ; 4 bytes @ 0x13
 13687  0002A6                     	ds	4
 13688  0002AA                     ringBufferLUT@max_current_print:
 13689                           	opt stack 0
 13690                           
 13691                           ; 4 bytes @ 0x17
 13692  0002AA                     	ds	4
 13693  0002AE                     ringBufferLUT@max_Power_print:
 13694                           	opt stack 0
 13695                           
 13696                           ; 4 bytes @ 0x1B
 13697  0002AE                     	ds	4
 13698  0002B2                     ringBufferLUT@max_voltage_print:
 13699                           	opt stack 0
 13700                           
 13701                           ; 4 bytes @ 0x1F
 13702  0002B2                     	ds	4
 13703  0002B6                     ringBufferLUT@max_voltage_print_3294:
 13704                           	opt stack 0
 13705                           
 13706                           ; 4 bytes @ 0x23
 13707  0002B6                     	ds	4
 13708  0002BA                     ringBufferLUT@max_temp_print:
 13709                           	opt stack 0
 13710                           
 13711                           ; 4 bytes @ 0x27
 13712  0002BA                     	ds	4
 13713  0002BE                     ringBufferLUT@max_voltage_print_3300:
 13714                           	opt stack 0
 13715                           
 13716                           ; 4 bytes @ 0x2B
 13717  0002BE                     	ds	4
 13718  0002C2                     ringBufferLUT@index:
 13719                           	opt stack 0
 13720                           
 13721                           ; 2 bytes @ 0x2F
 13722  0002C2                     	ds	2
 13723  0002C4                     ringBufferLUT@percentage:
 13724                           	opt stack 0
 13725                           
 13726                           ; 2 bytes @ 0x31
 13727  0002C4                     	ds	2
 13728  0002C6                     ringBufferLUT@userID:
 13729                           	opt stack 0
 13730                           
 13731                           ; 2 bytes @ 0x33
 13732  0002C6                     	ds	2
 13733  0002C8                     terminal_ringBufferPull@charNumber:
 13734                           	opt stack 0
 13735                           
 13736                           ; 2 bytes @ 0x35
 13737  0002C8                     	ds	2
 13738  0002CA                     terminal_ringBufferPull@index_2951:
 13739                           	opt stack 0
 13740                           
 13741                           ; 2 bytes @ 0x37
 13742  0002CA                     	ds	2
 13743  0002CC                     terminal_ringBufferPull@index:
 13744                           	opt stack 0
 13745                           
 13746                           ; 2 bytes @ 0x39
 13747  0002CC                     	ds	2
 13748  0002CE                     ??_main:
 13749                           
 13750                           ; 1 bytes @ 0x3B
 13751  0002CE                     	ds	2
 13752                           tblptru	equ	0xFF8
 13753                           tblptrh	equ	0xFF7
 13754                           tblptrl	equ	0xFF6
 13755                           tablat	equ	0xFF5
 13756                           postinc0	equ	0xFEE
 13757                           wreg	equ	0xFE8
 13758                           postdec1	equ	0xFE5
 13759                           fsr1h	equ	0xFE2
 13760                           fsr1l	equ	0xFE1
 13761                           
 13762                           	psect	cstackBANK1
 13763  000100                     __pcstackBANK1:
 13764                           	opt stack 0
 13765  000100                     ??_heartbeatTimerCallback:
 13766  000100                     ADCC_StartConversion@channel:
 13767                           	opt stack 0
 13768  000100                     TMR7_WriteTimer@timerVal:
 13769                           	opt stack 0
 13770                           
 13771                           ; 2 bytes @ 0x0
 13772  000100                     	ds	1
 13773  000101                     
 13774                           ; 1 bytes @ 0x1
 13775  000101                     	ds	1
 13776  000102                     ??_INTERRUPT_InterruptManagerLow:
 13777  000102                     
 13778                           ; 1 bytes @ 0x2
 13779  000102                     	ds	21
 13780  000117                     ??_isdigit:
 13781  000117                     ?_strlen:
 13782                           	opt stack 0
 13783  000117                     ?_strcmp:
 13784                           	opt stack 0
 13785  000117                     ?_getCauseOfResetString:
 13786                           	opt stack 0
 13787  000117                     ?_strchr:
 13788                           	opt stack 0
 13789  000117                     ?___wmul:
 13790                           	opt stack 0
 13791  000117                     ?___awmod:
 13792                           	opt stack 0
 13793  000117                     ?__tdiv_to_l_:
 13794                           	opt stack 0
 13795  000117                     ?__div_to_l_:
 13796                           	opt stack 0
 13797  000117                     ?___lldiv:
 13798                           	opt stack 0
 13799  000117                     ?___xxtofl:
 13800                           	opt stack 0
 13801  000117                     EUSART2_Read@readValue:
 13802                           	opt stack 0
 13803  000117                     EUSART2_Write@txData:
 13804                           	opt stack 0
 13805  000117                     getCauseOfReset@return_reset_cause:
 13806                           	opt stack 0
 13807  000117                     DATAEE_WriteByte@bAdd:
 13808                           	opt stack 0
 13809  000117                     DATAEE_ReadByte@bAdd:
 13810                           	opt stack 0
 13811  000117                     I2C1_MasterTRBInsert@ptrb_list:
 13812                           	opt stack 0
 13813  000117                     I2C1_MasterWriteTRBBuild@ptrb:
 13814                           	opt stack 0
 13815  000117                     ___wmul@multiplier:
 13816                           	opt stack 0
 13817  000117                     ___awmod@dividend:
 13818                           	opt stack 0
 13819  000117                     memmove@d1:
 13820                           	opt stack 0
 13821  000117                     strcat@to:
 13822                           	opt stack 0
 13823  000117                     strcmp@s1:
 13824                           	opt stack 0
 13825  000117                     strlen@s:
 13826                           	opt stack 0
 13827  000117                     strncpy@to:
 13828                           	opt stack 0
 13829  000117                     strchr@ptr:
 13830                           	opt stack 0
 13831  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 13832                           	opt stack 0
 13833  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 13834                           	opt stack 0
 13835  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 13836                           	opt stack 0
 13837  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 13838                           	opt stack 0
 13839  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 13840                           	opt stack 0
 13841  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 13842                           	opt stack 0
 13843  000117                     INT0_SetInterruptHandler@InterruptHandler:
 13844                           	opt stack 0
 13845  000117                     TMR4_SetInterruptHandler@InterruptHandler:
 13846                           	opt stack 0
 13847  000117                     __tdiv_to_l_@f1:
 13848                           	opt stack 0
 13849  000117                     FLASH_ReadByte@flashAddr:
 13850                           	opt stack 0
 13851  000117                     __div_to_l_@f1:
 13852                           	opt stack 0
 13853  000117                     ___flge@ff1:
 13854                           	opt stack 0
 13855  000117                     ___lldiv@dividend:
 13856                           	opt stack 0
 13857  000117                     ___xxtofl@val:
 13858                           	opt stack 0
 13859                           
 13860                           ; 4 bytes @ 0x17
 13861  000117                     	ds	1
 13862  000118                     putch@txData:
 13863                           	opt stack 0
 13864  000118                     _isdigit$4314:
 13865                           	opt stack 0
 13866                           
 13867                           ; 1 bytes @ 0x18
 13868  000118                     	ds	1
 13869  000119                     ??_strlen:
 13870  000119                     ?_readDoubleFromEEPROM:
 13871                           	opt stack 0
 13872  000119                     DATAEE_WriteByte@bData:
 13873                           	opt stack 0
 13874  000119                     getCauseOfResetString@r:
 13875                           	opt stack 0
 13876  000119                     isdigit@c:
 13877                           	opt stack 0
 13878  000119                     readDoubleFromEEPROM@starting_address:
 13879                           	opt stack 0
 13880  000119                     I2C1_MasterTRBInsert@pflag:
 13881                           	opt stack 0
 13882  000119                     I2C1_MasterWriteTRBBuild@pdata:
 13883                           	opt stack 0
 13884  000119                     ___wmul@multiplicand:
 13885                           	opt stack 0
 13886  000119                     ___awmod@divisor:
 13887                           	opt stack 0
 13888  000119                     memmove@s1:
 13889                           	opt stack 0
 13890  000119                     strcat@from:
 13891                           	opt stack 0
 13892  000119                     strcmp@s2:
 13893                           	opt stack 0
 13894  000119                     strncpy@from:
 13895                           	opt stack 0
 13896  000119                     strchr@chr:
 13897                           	opt stack 0
 13898                           
 13899                           ; 2 bytes @ 0x19
 13900  000119                     	ds	1
 13901  00011A                     ??_TMR7_Initialize:
 13902  00011A                     ??_TMR5_Initialize:
 13903  00011A                     DATAEE_WriteByte@GIEBitValue:
 13904                           	opt stack 0
 13905  00011A                     __tdiv_to_l_@f2:
 13906                           	opt stack 0
 13907                           
 13908                           ; 3 bytes @ 0x1A
 13909  00011A                     	ds	1
 13910  00011B                     ??_strcmp:
 13911  00011B                     ??___xxtofl:
 13912  00011B                     ?_FLASH_ReadWord:
 13913                           	opt stack 0
 13914  00011B                     I2C1_MasterWriteTRBBuild@length:
 13915                           	opt stack 0
 13916  00011B                     ___awmod@counter:
 13917                           	opt stack 0
 13918  00011B                     ___wmul@product:
 13919                           	opt stack 0
 13920  00011B                     memmove@n:
 13921                           	opt stack 0
 13922  00011B                     strcat@cp:
 13923                           	opt stack 0
 13924  00011B                     strlen@cp:
 13925                           	opt stack 0
 13926  00011B                     strncpy@size:
 13927                           	opt stack 0
 13928  00011B                     FLASH_ReadWord@flashAddr:
 13929                           	opt stack 0
 13930  00011B                     writeDoubleToEEPROM@input_double:
 13931                           	opt stack 0
 13932  00011B                     __div_to_l_@f2:
 13933                           	opt stack 0
 13934  00011B                     ___flge@ff2:
 13935                           	opt stack 0
 13936  00011B                     ___lldiv@divisor:
 13937                           	opt stack 0
 13938                           
 13939                           ; 4 bytes @ 0x1B
 13940  00011B                     	ds	1
 13941  00011C                     I2C1_MasterTRBInsert@count:
 13942                           	opt stack 0
 13943  00011C                     ___awmod@sign:
 13944                           	opt stack 0
 13945  00011C                     strcmp@r:
 13946                           	opt stack 0
 13947  00011C                     I2C1_MasterWriteTRBBuild@address:
 13948                           	opt stack 0
 13949                           
 13950                           ; 2 bytes @ 0x1C
 13951  00011C                     	ds	1
 13952  00011D                     ??_memmove:
 13953  00011D                     ??__tdiv_to_l_:
 13954  00011D                     ?_atoi:
 13955                           	opt stack 0
 13956  00011D                     ?_strncmp:
 13957                           	opt stack 0
 13958  00011D                     ?___awdiv:
 13959                           	opt stack 0
 13960  00011D                     atoi@s:
 13961                           	opt stack 0
 13962  00011D                     ___awdiv@dividend:
 13963                           	opt stack 0
 13964  00011D                     strncpy@cp:
 13965                           	opt stack 0
 13966  00011D                     strncmp@s1:
 13967                           	opt stack 0
 13968  00011D                     readDoubleFromEEPROM@output_data:
 13969                           	opt stack 0
 13970                           
 13971                           ; 4 bytes @ 0x1D
 13972  00011D                     	ds	1
 13973  00011E                     ??_I2C1_MasterWriteTRBBuild:
 13974                           
 13975                           ; 1 bytes @ 0x1E
 13976  00011E                     	ds	1
 13977  00011F                     ??_atoi:
 13978  00011F                     ??_FLASH_ReadWord:
 13979  00011F                     ??___flge:
 13980  00011F                     ___xxtofl@sign:
 13981                           	opt stack 0
 13982  00011F                     writeDoubleToEEPROM@starting_address:
 13983                           	opt stack 0
 13984  00011F                     ___awdiv@divisor:
 13985                           	opt stack 0
 13986  00011F                     memmove@d:
 13987                           	opt stack 0
 13988  00011F                     strncmp@s2:
 13989                           	opt stack 0
 13990  00011F                     __div_to_l_@quot:
 13991                           	opt stack 0
 13992  00011F                     ___lldiv@quotient:
 13993                           	opt stack 0
 13994                           
 13995                           ; 4 bytes @ 0x1F
 13996  00011F                     	ds	1
 13997  000120                     ___xxtofl@exp:
 13998                           	opt stack 0
 13999  000120                     I2C1_MasterWrite@pdata:
 14000                           	opt stack 0
 14001  000120                     __tdiv_to_l_@quot:
 14002                           	opt stack 0
 14003                           
 14004                           ; 4 bytes @ 0x20
 14005  000120                     	ds	1
 14006  000121                     atoi@sign:
 14007                           	opt stack 0
 14008  000121                     ___awdiv@counter:
 14009                           	opt stack 0
 14010  000121                     readDoubleFromEEPROM@byte_index:
 14011                           	opt stack 0
 14012  000121                     memmove@s:
 14013                           	opt stack 0
 14014  000121                     strncmp@len:
 14015                           	opt stack 0
 14016  000121                     writeDoubleToEEPROM@input_data:
 14017                           	opt stack 0
 14018  000121                     ___xxtofl@arg:
 14019                           	opt stack 0
 14020                           
 14021                           ; 4 bytes @ 0x21
 14022  000121                     	ds	1
 14023  000122                     ??_getMajorRevisionID:
 14024  000122                     ?_getDeviceID:
 14025                           	opt stack 0
 14026  000122                     ?_getUserID:
 14027                           	opt stack 0
 14028  000122                     I2C1_MasterWrite@length:
 14029                           	opt stack 0
 14030  000122                     ___awdiv@sign:
 14031                           	opt stack 0
 14032  000122                     getMinorRevisionID@REVID_RAW:
 14033                           	opt stack 0
 14034  000122                     atoi@a:
 14035                           	opt stack 0
 14036                           
 14037                           ; 2 bytes @ 0x22
 14038  000122                     	ds	1
 14039  000123                     ??_strncmp:
 14040  000123                     __div_to_l_@cntr:
 14041                           	opt stack 0
 14042  000123                     ___lldiv@counter:
 14043                           	opt stack 0
 14044  000123                     I2C1_MasterWrite@address:
 14045                           	opt stack 0
 14046  000123                     ___awdiv@quotient:
 14047                           	opt stack 0
 14048                           
 14049                           ; 2 bytes @ 0x23
 14050  000123                     	ds	1
 14051  000124                     ?_getDeviceIDString:
 14052                           	opt stack 0
 14053  000124                     ?___llmod:
 14054                           	opt stack 0
 14055  000124                     __div_to_l_@exp1:
 14056                           	opt stack 0
 14057  000124                     __tdiv_to_l_@cntr:
 14058                           	opt stack 0
 14059  000124                     getDeviceIDString@inputDevID:
 14060                           	opt stack 0
 14061  000124                     getUserID@initialOffset:
 14062                           	opt stack 0
 14063  000124                     ___llmod@dividend:
 14064                           	opt stack 0
 14065                           
 14066                           ; 4 bytes @ 0x24
 14067  000124                     	ds	1
 14068  000125                     ?___flneg:
 14069                           	opt stack 0
 14070  000125                     __tdiv_to_l_@exp1:
 14071                           	opt stack 0
 14072  000125                     getMajorRevisionID@REVID_RAW:
 14073                           	opt stack 0
 14074  000125                     writeDoubleToEEPROM@byte_index:
 14075                           	opt stack 0
 14076  000125                     I2C1_MasterWrite@pflag:
 14077                           	opt stack 0
 14078  000125                     ___flneg@f1:
 14079                           	opt stack 0
 14080                           
 14081                           ; 4 bytes @ 0x25
 14082  000125                     	ds	1
 14083  000126                     ??_getDeviceIDString:
 14084  000126                     ?_strstr:
 14085                           	opt stack 0
 14086  000126                     strstr@s1:
 14087                           	opt stack 0
 14088                           
 14089                           ; 2 bytes @ 0x26
 14090  000126                     	ds	1
 14091  000127                     ??_OLED_PutChar:
 14092  000127                     OLED_Command@temp:
 14093                           	opt stack 0
 14094                           
 14095                           ; 1 bytes @ 0x27
 14096  000127                     	ds	1
 14097  000128                     getUserID@inputUserID:
 14098                           	opt stack 0
 14099  000128                     OLED_Command@length:
 14100                           	opt stack 0
 14101  000128                     strstr@s2:
 14102                           	opt stack 0
 14103  000128                     ___llmod@divisor:
 14104                           	opt stack 0
 14105  000128                     getDeviceIDString@strings:
 14106                           	opt stack 0
 14107                           
 14108                           ; 6 bytes @ 0x28
 14109  000128                     	ds	1
 14110  000129                     ?___fladd:
 14111                           	opt stack 0
 14112  000129                     getUserID@IDOffset:
 14113                           	opt stack 0
 14114  000129                     OLED_Command@data_array:
 14115                           	opt stack 0
 14116  000129                     ___fladd@b:
 14117                           	opt stack 0
 14118                           
 14119                           ; 4 bytes @ 0x29
 14120  000129                     	ds	1
 14121  00012A                     
 14122                           ; 1 bytes @ 0x2A
 14123  00012A                     	ds	1
 14124  00012B                     OLED_YX@Column:
 14125                           	opt stack 0
 14126  00012B                     OLED_PutChar@data_array:
 14127                           	opt stack 0
 14128                           
 14129                           ; 9 bytes @ 0x2B
 14130  00012B                     	ds	1
 14131  00012C                     ??_OLED_YX:
 14132  00012C                     ___llmod@counter:
 14133                           	opt stack 0
 14134                           
 14135                           ; 1 bytes @ 0x2C
 14136  00012C                     	ds	1
 14137  00012D                     OLED_YX@Row:
 14138                           	opt stack 0
 14139  00012D                     ___fladd@a:
 14140                           	opt stack 0
 14141                           
 14142                           ; 4 bytes @ 0x2D
 14143  00012D                     	ds	4
 14144  000131                     ??___fladd:
 14145                           
 14146                           ; 1 bytes @ 0x31
 14147  000131                     	ds	3
 14148  000134                     OLED_PutChar@input_base:
 14149                           	opt stack 0
 14150                           
 14151                           ; 2 bytes @ 0x34
 14152  000134                     	ds	2
 14153  000136                     OLED_PutChar@length:
 14154                           	opt stack 0
 14155                           
 14156                           ; 1 bytes @ 0x36
 14157  000136                     	ds	1
 14158  000137                     OLED_PutChar@ch:
 14159                           	opt stack 0
 14160                           
 14161                           ; 1 bytes @ 0x37
 14162  000137                     	ds	1
 14163  000138                     OLED_Clear@row:
 14164                           	opt stack 0
 14165  000138                     OLED_Write_String@s:
 14166                           	opt stack 0
 14167                           
 14168                           ; 2 bytes @ 0x38
 14169  000138                     	ds	1
 14170  000139                     ___fladd@signs:
 14171                           	opt stack 0
 14172                           
 14173                           ; 1 bytes @ 0x39
 14174  000139                     	ds	1
 14175  00013A                     ___fladd@aexp:
 14176                           	opt stack 0
 14177  00013A                     OLED_Clear@col:
 14178                           	opt stack 0
 14179                           
 14180                           ; 2 bytes @ 0x3A
 14181  00013A                     	ds	1
 14182  00013B                     ___fladd@bexp:
 14183                           	opt stack 0
 14184                           
 14185                           ; 1 bytes @ 0x3B
 14186  00013B                     	ds	1
 14187  00013C                     ___fladd@grs:
 14188                           	opt stack 0
 14189                           
 14190                           ; 1 bytes @ 0x3C
 14191  00013C                     	ds	1
 14192  00013D                     ?___fldiv:
 14193                           	opt stack 0
 14194  00013D                     ?___flsub:
 14195                           	opt stack 0
 14196  00013D                     ___flsub@b:
 14197                           	opt stack 0
 14198  00013D                     ___fldiv@b:
 14199                           	opt stack 0
 14200                           
 14201                           ; 4 bytes @ 0x3D
 14202  00013D                     	ds	4
 14203  000141                     ___flsub@a:
 14204                           	opt stack 0
 14205  000141                     ___fldiv@a:
 14206                           	opt stack 0
 14207                           
 14208                           ; 4 bytes @ 0x41
 14209  000141                     	ds	4
 14210  000145                     ??___fldiv:
 14211  000145                     
 14212                           ; 1 bytes @ 0x45
 14213  000145                     	ds	4
 14214  000149                     ___fldiv@sign:
 14215                           	opt stack 0
 14216                           
 14217                           ; 1 bytes @ 0x49
 14218  000149                     	ds	1
 14219  00014A                     ___fldiv@rem:
 14220                           	opt stack 0
 14221                           
 14222                           ; 4 bytes @ 0x4A
 14223  00014A                     	ds	4
 14224  00014E                     ___fldiv@new_exp:
 14225                           	opt stack 0
 14226                           
 14227                           ; 2 bytes @ 0x4E
 14228  00014E                     	ds	2
 14229  000150                     ___fldiv@grs:
 14230                           	opt stack 0
 14231                           
 14232                           ; 4 bytes @ 0x50
 14233  000150                     	ds	4
 14234  000154                     ___fldiv@bexp:
 14235                           	opt stack 0
 14236                           
 14237                           ; 1 bytes @ 0x54
 14238  000154                     	ds	1
 14239  000155                     ___fldiv@aexp:
 14240                           	opt stack 0
 14241                           
 14242                           ; 1 bytes @ 0x55
 14243  000155                     	ds	1
 14244  000156                     ?___flmul:
 14245                           	opt stack 0
 14246  000156                     ___flmul@b:
 14247                           	opt stack 0
 14248                           
 14249                           ; 4 bytes @ 0x56
 14250  000156                     	ds	4
 14251  00015A                     ___flmul@a:
 14252                           	opt stack 0
 14253                           
 14254                           ; 4 bytes @ 0x5A
 14255  00015A                     	ds	4
 14256  00015E                     ??___flmul:
 14257                           
 14258                           ; 1 bytes @ 0x5E
 14259  00015E                     	ds	4
 14260  000162                     ___flmul@sign:
 14261                           	opt stack 0
 14262                           
 14263                           ; 1 bytes @ 0x62
 14264  000162                     	ds	1
 14265  000163                     ___flmul@aexp:
 14266                           	opt stack 0
 14267                           
 14268                           ; 1 bytes @ 0x63
 14269  000163                     	ds	1
 14270  000164                     ___flmul@grs:
 14271                           	opt stack 0
 14272                           
 14273                           ; 4 bytes @ 0x64
 14274  000164                     	ds	4
 14275  000168                     ___flmul@bexp:
 14276                           	opt stack 0
 14277                           
 14278                           ; 1 bytes @ 0x68
 14279  000168                     	ds	1
 14280  000169                     ___flmul@prod:
 14281                           	opt stack 0
 14282                           
 14283                           ; 4 bytes @ 0x69
 14284  000169                     	ds	4
 14285  00016D                     ___flmul@temp:
 14286                           	opt stack 0
 14287                           
 14288                           ; 2 bytes @ 0x6D
 14289  00016D                     	ds	2
 14290  00016F                     ?_fround:
 14291                           	opt stack 0
 14292  00016F                     ?_scale:
 14293                           	opt stack 0
 14294                           
 14295                           ; 4 bytes @ 0x6F
 14296  00016F                     	ds	4
 14297  000173                     _fround$5163:
 14298                           	opt stack 0
 14299  000173                     _scale$5164:
 14300                           	opt stack 0
 14301                           
 14302                           ; 4 bytes @ 0x73
 14303  000173                     	ds	4
 14304  000177                     scale@scl:
 14305                           	opt stack 0
 14306  000177                     _fround$5162:
 14307                           	opt stack 0
 14308                           
 14309                           ; 4 bytes @ 0x77
 14310  000177                     	ds	1
 14311  000178                     ?___fltol:
 14312                           	opt stack 0
 14313  000178                     ___fltol@f1:
 14314                           	opt stack 0
 14315                           
 14316                           ; 4 bytes @ 0x78
 14317  000178                     	ds	3
 14318  00017B                     fround@prec:
 14319                           	opt stack 0
 14320                           
 14321                           ; 1 bytes @ 0x7B
 14322  00017B                     	ds	1
 14323  00017C                     ??___fltol:
 14324                           
 14325                           ; 1 bytes @ 0x7C
 14326  00017C                     	ds	4
 14327  000180                     ___fltol@sign1:
 14328                           	opt stack 0
 14329                           
 14330                           ; 1 bytes @ 0x80
 14331  000180                     	ds	1
 14332  000181                     ___fltol@exp1:
 14333                           	opt stack 0
 14334                           
 14335                           ; 1 bytes @ 0x81
 14336  000181                     	ds	1
 14337  000182                     ?__doprnt:
 14338                           	opt stack 0
 14339  000182                     __doprnt@pb:
 14340                           	opt stack 0
 14341                           
 14342                           ; 2 bytes @ 0x82
 14343  000182                     	ds	2
 14344  000184                     __doprnt@f:
 14345                           	opt stack 0
 14346                           
 14347                           ; 2 bytes @ 0x84
 14348  000184                     	ds	2
 14349  000186                     __doprnt@ap:
 14350                           	opt stack 0
 14351                           
 14352                           ; 2 bytes @ 0x86
 14353  000186                     	ds	2
 14354  000188                     ??__doprnt:
 14355                           
 14356                           ; 1 bytes @ 0x88
 14357  000188                     	ds	6
 14358  00018E                     __doprnt$5165:
 14359                           	opt stack 0
 14360                           
 14361                           ; 4 bytes @ 0x8E
 14362  00018E                     	ds	4
 14363  000192                     __doprnt@idx:
 14364                           	opt stack 0
 14365                           
 14366                           ; 1 bytes @ 0x92
 14367  000192                     	ds	1
 14368  000193                     __doprnt@cp:
 14369                           	opt stack 0
 14370                           
 14371                           ; 2 bytes @ 0x93
 14372  000193                     	ds	2
 14373  000195                     __doprnt@len:
 14374                           	opt stack 0
 14375                           
 14376                           ; 2 bytes @ 0x95
 14377  000195                     	ds	2
 14378  000197                     __doprnt@exp:
 14379                           	opt stack 0
 14380                           
 14381                           ; 2 bytes @ 0x97
 14382  000197                     	ds	2
 14383  000199                     __doprnt@tmpval:
 14384                           	opt stack 0
 14385                           
 14386                           ; 4 bytes @ 0x99
 14387  000199                     	ds	4
 14388  00019D                     __doprnt@fval:
 14389                           	opt stack 0
 14390                           
 14391                           ; 4 bytes @ 0x9D
 14392  00019D                     	ds	4
 14393  0001A1                     __doprnt@val:
 14394                           	opt stack 0
 14395                           
 14396                           ; 4 bytes @ 0xA1
 14397  0001A1                     	ds	4
 14398  0001A5                     __doprnt@width:
 14399                           	opt stack 0
 14400                           
 14401                           ; 2 bytes @ 0xA5
 14402  0001A5                     	ds	2
 14403  0001A7                     __doprnt@flag:
 14404                           	opt stack 0
 14405                           
 14406                           ; 2 bytes @ 0xA7
 14407  0001A7                     	ds	2
 14408  0001A9                     __doprnt@prec:
 14409                           	opt stack 0
 14410                           
 14411                           ; 2 bytes @ 0xA9
 14412  0001A9                     	ds	2
 14413  0001AB                     __doprnt@c:
 14414                           	opt stack 0
 14415                           
 14416                           ; 1 bytes @ 0xAB
 14417  0001AB                     	ds	1
 14418  0001AC                     ?_printf:
 14419                           	opt stack 0
 14420  0001AC                     printf@f:
 14421                           	opt stack 0
 14422                           
 14423                           ; 2 bytes @ 0xAC
 14424  0001AC                     	ds	10
 14425  0001B6                     printf@ap:
 14426                           	opt stack 0
 14427                           
 14428                           ; 2 bytes @ 0xB6
 14429  0001B6                     	ds	2
 14430  0001B8                     printf@pb:
 14431                           	opt stack 0
 14432                           
 14433                           ; 5 bytes @ 0xB8
 14434  0001B8                     	ds	5
 14435  0001BD                     terminal_textAttributes@background_color:
 14436                           	opt stack 0
 14437                           
 14438                           ; 1 bytes @ 0xBD
 14439  0001BD                     	ds	1
 14440  0001BE                     terminal_textAttributes@input_attribute:
 14441                           	opt stack 0
 14442                           
 14443                           ; 1 bytes @ 0xBE
 14444  0001BE                     	ds	1
 14445  0001BF                     ringBufferLUT@line:
 14446                           	opt stack 0
 14447                           
 14448                           ; 2 bytes @ 0xBF
 14449  0001BF                     	ds	2
 14450  0001C1                     ??_ringBufferLUT:
 14451                           
 14452                           ; 1 bytes @ 0xC1
 14453  0001C1                     	ds	2
 14454  0001C3                     ??_terminal_ringBufferPull:
 14455                           
 14456                           ; 1 bytes @ 0xC3
 14457  0001C3                     	ds	3
 14458                           tblptru	equ	0xFF8
 14459                           tblptrh	equ	0xFF7
 14460                           tblptrl	equ	0xFF6
 14461                           tablat	equ	0xFF5
 14462                           postinc0	equ	0xFEE
 14463                           wreg	equ	0xFE8
 14464                           postdec1	equ	0xFE5
 14465                           fsr1h	equ	0xFE2
 14466                           fsr1l	equ	0xFE1
 14467                           
 14468                           	psect	cstackBANK0
 14469  000060                     __pcstackBANK0:
 14470                           	opt stack 0
 14471  000060                     ??i2___fladd:
 14472                           
 14473                           ; 1 bytes @ 0x0
 14474  000060                     	ds	8
 14475  000068                     i2___fladd@signs:
 14476                           	opt stack 0
 14477                           
 14478                           ; 1 bytes @ 0x8
 14479  000068                     	ds	1
 14480  000069                     i2___fladd@aexp:
 14481                           	opt stack 0
 14482                           
 14483                           ; 1 bytes @ 0x9
 14484  000069                     	ds	1
 14485  00006A                     i2___fladd@bexp:
 14486                           	opt stack 0
 14487                           
 14488                           ; 1 bytes @ 0xA
 14489  00006A                     	ds	1
 14490  00006B                     i2___fladd@grs:
 14491                           	opt stack 0
 14492                           
 14493                           ; 1 bytes @ 0xB
 14494  00006B                     	ds	1
 14495  00006C                     ?_sqrt:
 14496                           	opt stack 0
 14497  00006C                     ?_eval_poly:
 14498                           	opt stack 0
 14499  00006C                     ?i2___fltol:
 14500                           	opt stack 0
 14501  00006C                     eval_poly@x:
 14502                           	opt stack 0
 14503  00006C                     sqrt@a:
 14504                           	opt stack 0
 14505  00006C                     i2___fltol@f1:
 14506                           	opt stack 0
 14507                           
 14508                           ; 4 bytes @ 0xC
 14509  00006C                     	ds	4
 14510  000070                     ??_sqrt:
 14511  000070                     ??i2___fltol:
 14512  000070                     eval_poly@d:
 14513                           	opt stack 0
 14514                           
 14515                           ; 2 bytes @ 0x10
 14516  000070                     	ds	2
 14517  000072                     eval_poly@n:
 14518                           	opt stack 0
 14519                           
 14520                           ; 2 bytes @ 0x12
 14521  000072                     	ds	2
 14522  000074                     ??_eval_poly:
 14523  000074                     sqrt@sign:
 14524                           	opt stack 0
 14525  000074                     i2___fltol@sign1:
 14526                           	opt stack 0
 14527                           
 14528                           ; 1 bytes @ 0x14
 14529  000074                     	ds	1
 14530  000075                     sqrt@i:
 14531                           	opt stack 0
 14532  000075                     i2___fltol@exp1:
 14533                           	opt stack 0
 14534                           
 14535                           ; 1 bytes @ 0x15
 14536  000075                     	ds	1
 14537  000076                     ?_abs:
 14538                           	opt stack 0
 14539  000076                     ?_floor:
 14540                           	opt stack 0
 14541  000076                     abs@a:
 14542                           	opt stack 0
 14543  000076                     sqrt@tfrac:
 14544                           	opt stack 0
 14545  000076                     floor@x:
 14546                           	opt stack 0
 14547                           
 14548                           ; 4 bytes @ 0x16
 14549  000076                     	ds	2
 14550  000078                     ??_abs:
 14551  000078                     eval_poly@res:
 14552                           	opt stack 0
 14553                           
 14554                           ; 4 bytes @ 0x18
 14555  000078                     	ds	2
 14556  00007A                     sqrt@p:
 14557                           	opt stack 0
 14558  00007A                     floor@i:
 14559                           	opt stack 0
 14560                           
 14561                           ; 4 bytes @ 0x1A
 14562  00007A                     	ds	1
 14563  00007B                     sqrt@grs:
 14564                           	opt stack 0
 14565                           
 14566                           ; 4 bytes @ 0x1B
 14567  00007B                     	ds	1
 14568  00007C                     ?_atan:
 14569                           	opt stack 0
 14570  00007C                     atan@f:
 14571                           	opt stack 0
 14572                           
 14573                           ; 4 bytes @ 0x1C
 14574  00007C                     	ds	2
 14575  00007E                     floor@expon:
 14576                           	opt stack 0
 14577                           
 14578                           ; 2 bytes @ 0x1E
 14579  00007E                     	ds	1
 14580  00007F                     sqrt@exp:
 14581                           	opt stack 0
 14582                           
 14583                           ; 2 bytes @ 0x1F
 14584  00007F                     	ds	1
 14585  000080                     ?i2___flsub:
 14586                           	opt stack 0
 14587  000080                     atan@y:
 14588                           	opt stack 0
 14589  000080                     i2___flsub@b:
 14590                           	opt stack 0
 14591                           
 14592                           ; 4 bytes @ 0x20
 14593  000080                     	ds	1
 14594  000081                     sqrt@root:
 14595                           	opt stack 0
 14596                           
 14597                           ; 4 bytes @ 0x21
 14598  000081                     	ds	3
 14599  000084                     atan@x:
 14600                           	opt stack 0
 14601  000084                     i2___flsub@a:
 14602                           	opt stack 0
 14603                           
 14604                           ; 4 bytes @ 0x24
 14605  000084                     	ds	1
 14606  000085                     sqrt@frac:
 14607                           	opt stack 0
 14608                           
 14609                           ; 4 bytes @ 0x25
 14610  000085                     	ds	3
 14611  000088                     ?i2__doprnt:
 14612                           	opt stack 0
 14613  000088                     ?_sin:
 14614                           	opt stack 0
 14615  000088                     atan@recip:
 14616                           	opt stack 0
 14617  000088                     i2__doprnt@pb:
 14618                           	opt stack 0
 14619  000088                     sin@f:
 14620                           	opt stack 0
 14621                           
 14622                           ; 4 bytes @ 0x28
 14623  000088                     	ds	1
 14624  000089                     atan@val_squared:
 14625                           	opt stack 0
 14626                           
 14627                           ; 4 bytes @ 0x29
 14628  000089                     	ds	1
 14629  00008A                     i2__doprnt@f:
 14630                           	opt stack 0
 14631                           
 14632                           ; 2 bytes @ 0x2A
 14633  00008A                     	ds	2
 14634  00008C                     i2__doprnt@ap:
 14635                           	opt stack 0
 14636  00008C                     sin@y:
 14637                           	opt stack 0
 14638                           
 14639                           ; 4 bytes @ 0x2C
 14640  00008C                     	ds	1
 14641  00008D                     atan@val:
 14642                           	opt stack 0
 14643                           
 14644                           ; 4 bytes @ 0x2D
 14645  00008D                     	ds	1
 14646  00008E                     ??i2__doprnt:
 14647                           
 14648                           ; 1 bytes @ 0x2E
 14649  00008E                     	ds	2
 14650  000090                     _sin$5405:
 14651                           	opt stack 0
 14652                           
 14653                           ; 4 bytes @ 0x30
 14654  000090                     	ds	1
 14655  000091                     ?_asin:
 14656                           	opt stack 0
 14657  000091                     asin@x:
 14658                           	opt stack 0
 14659                           
 14660                           ; 4 bytes @ 0x31
 14661  000091                     	ds	3
 14662  000094                     sin@x2:
 14663                           	opt stack 0
 14664  000094                     i2__doprnt$5409:
 14665                           	opt stack 0
 14666                           
 14667                           ; 4 bytes @ 0x34
 14668  000094                     	ds	1
 14669  000095                     asin@sgn:
 14670                           	opt stack 0
 14671                           
 14672                           ; 4 bytes @ 0x35
 14673  000095                     	ds	3
 14674  000098                     sin@sgn:
 14675                           	opt stack 0
 14676  000098                     i2__doprnt@idx:
 14677                           	opt stack 0
 14678                           
 14679                           ; 1 bytes @ 0x38
 14680  000098                     	ds	1
 14681  000099                     ?_currentMeasuredToPeak:
 14682                           	opt stack 0
 14683  000099                     i2__doprnt@cp:
 14684                           	opt stack 0
 14685  000099                     currentMeasuredToPeak@Measured:
 14686                           	opt stack 0
 14687  000099                     _asin$5404:
 14688                           	opt stack 0
 14689                           
 14690                           ; 4 bytes @ 0x39
 14691  000099                     	ds	2
 14692  00009B                     i2__doprnt@len:
 14693                           	opt stack 0
 14694                           
 14695                           ; 2 bytes @ 0x3B
 14696  00009B                     	ds	2
 14697  00009D                     i2__doprnt@exp:
 14698                           	opt stack 0
 14699  00009D                     currentMeasuredToPeak@Angle:
 14700                           	opt stack 0
 14701  00009D                     _asin$5403:
 14702                           	opt stack 0
 14703                           
 14704                           ; 4 bytes @ 0x3D
 14705  00009D                     	ds	2
 14706  00009F                     i2__doprnt@tmpval:
 14707                           	opt stack 0
 14708                           
 14709                           ; 4 bytes @ 0x3F
 14710  00009F                     	ds	2
 14711  0000A1                     currentMeasuredToPeak@Peak:
 14712                           	opt stack 0
 14713  0000A1                     asin@y:
 14714                           	opt stack 0
 14715                           
 14716                           ; 4 bytes @ 0x41
 14717  0000A1                     	ds	2
 14718  0000A3                     i2__doprnt@fval:
 14719                           	opt stack 0
 14720                           
 14721                           ; 4 bytes @ 0x43
 14722  0000A3                     	ds	2
 14723  0000A5                     _asin$5402:
 14724                           	opt stack 0
 14725                           
 14726                           ; 4 bytes @ 0x45
 14727  0000A5                     	ds	2
 14728  0000A7                     i2__doprnt@val:
 14729                           	opt stack 0
 14730                           
 14731                           ; 4 bytes @ 0x47
 14732  0000A7                     	ds	2
 14733  0000A9                     ?_acos:
 14734                           	opt stack 0
 14735  0000A9                     acos@x:
 14736                           	opt stack 0
 14737                           
 14738                           ; 4 bytes @ 0x49
 14739  0000A9                     	ds	2
 14740  0000AB                     i2__doprnt@width:
 14741                           	opt stack 0
 14742                           
 14743                           ; 2 bytes @ 0x4B
 14744  0000AB                     	ds	2
 14745  0000AD                     i2__doprnt@flag:
 14746                           	opt stack 0
 14747  0000AD                     _acos$5401:
 14748                           	opt stack 0
 14749                           
 14750                           ; 4 bytes @ 0x4D
 14751  0000AD                     	ds	2
 14752  0000AF                     i2__doprnt@prec:
 14753                           	opt stack 0
 14754                           
 14755                           ; 2 bytes @ 0x4F
 14756  0000AF                     	ds	2
 14757  0000B1                     ?_peakToRMS:
 14758                           	opt stack 0
 14759  0000B1                     i2__doprnt@c:
 14760                           	opt stack 0
 14761  0000B1                     peakToRMS@Peak:
 14762                           	opt stack 0
 14763                           
 14764                           ; 4 bytes @ 0x51
 14765  0000B1                     	ds	1
 14766  0000B2                     ?i2_printf:
 14767                           	opt stack 0
 14768  0000B2                     i2printf@f:
 14769                           	opt stack 0
 14770                           
 14771                           ; 2 bytes @ 0x52
 14772  0000B2                     	ds	2
 14773  0000B4                     i2printf@ap:
 14774                           	opt stack 0
 14775                           
 14776                           ; 2 bytes @ 0x54
 14777  0000B4                     	ds	1
 14778  0000B5                     peakToRMS@Angle:
 14779                           	opt stack 0
 14780                           
 14781                           ; 4 bytes @ 0x55
 14782  0000B5                     	ds	1
 14783  0000B6                     i2printf@pb:
 14784                           	opt stack 0
 14785                           
 14786                           ; 5 bytes @ 0x56
 14787  0000B6                     	ds	3
 14788  0000B9                     _peakToRMS$5394:
 14789                           	opt stack 0
 14790                           
 14791                           ; 4 bytes @ 0x59
 14792  0000B9                     	ds	4
 14793  0000BD                     _peakToRMS$5395:
 14794                           	opt stack 0
 14795                           
 14796                           ; 4 bytes @ 0x5D
 14797  0000BD                     	ds	4
 14798  0000C1                     _peakToRMS$5393:
 14799                           	opt stack 0
 14800                           
 14801                           ; 4 bytes @ 0x61
 14802  0000C1                     	ds	4
 14803  0000C5                     peakToRMS@RMS:
 14804                           	opt stack 0
 14805                           
 14806                           ; 4 bytes @ 0x65
 14807  0000C5                     	ds	4
 14808  0000C9                     _ADCPostProcessingCallback$5398:
 14809                           	opt stack 0
 14810                           
 14811                           ; 4 bytes @ 0x69
 14812  0000C9                     	ds	4
 14813  0000CD                     _ADCPostProcessingCallback$5399:
 14814                           	opt stack 0
 14815                           
 14816                           ; 4 bytes @ 0x6D
 14817  0000CD                     	ds	4
 14818  0000D1                     _ADCPostProcessingCallback$5400:
 14819                           	opt stack 0
 14820                           
 14821                           ; 4 bytes @ 0x71
 14822  0000D1                     	ds	4
 14823  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 14824                           	opt stack 0
 14825                           
 14826                           ; 1 bytes @ 0x75
 14827  0000D5                     	ds	1
 14828  0000D6                     _ADCPostProcessingCallback$5396:
 14829                           	opt stack 0
 14830                           
 14831                           ; 4 bytes @ 0x76
 14832  0000D6                     	ds	4
 14833  0000DA                     _ADCPostProcessingCallback$5397:
 14834                           	opt stack 0
 14835                           
 14836                           ; 4 bytes @ 0x7A
 14837  0000DA                     	ds	4
 14838  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 14839                           
 14840                           ; 1 bytes @ 0x7E
 14841  0000DE                     	ds	18
 14842                           tblptru	equ	0xFF8
 14843                           tblptrh	equ	0xFF7
 14844                           tblptrl	equ	0xFF6
 14845                           tablat	equ	0xFF5
 14846                           postinc0	equ	0xFEE
 14847                           wreg	equ	0xFE8
 14848                           postdec1	equ	0xFE5
 14849                           fsr1h	equ	0xFE2
 14850                           fsr1l	equ	0xFE1
 14851                           
 14852                           	psect	cstackCOMRAM
 14853  000001                     __pcstackCOMRAM:
 14854                           	opt stack 0
 14855  000001                     ??_I2C1_Stop:
 14856  000001                     ??i2_isdigit:
 14857  000001                     ?_ADCC_GetConversionResult:
 14858                           	opt stack 0
 14859  000001                     ?_ADCC_GetFilterValue:
 14860                           	opt stack 0
 14861  000001                     ?i2___wmul:
 14862                           	opt stack 0
 14863  000001                     ?i2___awmod:
 14864                           	opt stack 0
 14865  000001                     ?i2__div_to_l_:
 14866                           	opt stack 0
 14867  000001                     ?i2__tdiv_to_l_:
 14868                           	opt stack 0
 14869  000001                     ?i2___lldiv:
 14870                           	opt stack 0
 14871  000001                     i2EUSART2_Write@txData:
 14872                           	opt stack 0
 14873  000001                     TMR5_WriteTimer@timerVal:
 14874                           	opt stack 0
 14875  000001                     i2DATAEE_WriteByte@bAdd:
 14876                           	opt stack 0
 14877  000001                     i2DATAEE_ReadByte@bAdd:
 14878                           	opt stack 0
 14879  000001                     i2___wmul@multiplier:
 14880                           	opt stack 0
 14881  000001                     i2___awmod@dividend:
 14882                           	opt stack 0
 14883  000001                     i2__tdiv_to_l_@f1:
 14884                           	opt stack 0
 14885  000001                     frexp@value:
 14886                           	opt stack 0
 14887  000001                     i2__div_to_l_@f1:
 14888                           	opt stack 0
 14889  000001                     i2___lldiv@dividend:
 14890                           	opt stack 0
 14891                           
 14892                           ; 4 bytes @ 0x0
 14893  000001                     	ds	1
 14894  000002                     i2putch@txData:
 14895                           	opt stack 0
 14896  000002                     i2_isdigit$4314:
 14897                           	opt stack 0
 14898                           
 14899                           ; 1 bytes @ 0x1
 14900  000002                     	ds	1
 14901  000003                     ??_ADCC_GetConversionResult:
 14902  000003                     ??_ADCC_GetFilterValue:
 14903  000003                     ?i2_readDoubleFromEEPROM:
 14904                           	opt stack 0
 14905  000003                     I2C1_Stop@completion_code:
 14906                           	opt stack 0
 14907  000003                     i2DATAEE_WriteByte@bData:
 14908                           	opt stack 0
 14909  000003                     i2isdigit@c:
 14910                           	opt stack 0
 14911  000003                     i2readDoubleFromEEPROM@starting_address:
 14912                           	opt stack 0
 14913  000003                     i2___wmul@multiplicand:
 14914                           	opt stack 0
 14915  000003                     i2___awmod@divisor:
 14916                           	opt stack 0
 14917                           
 14918                           ; 2 bytes @ 0x2
 14919  000003                     	ds	1
 14920  000004                     ??_I2C1_ISR:
 14921  000004                     i2DATAEE_WriteByte@GIEBitValue:
 14922                           	opt stack 0
 14923  000004                     i2__tdiv_to_l_@f2:
 14924                           	opt stack 0
 14925                           
 14926                           ; 3 bytes @ 0x3
 14927  000004                     	ds	1
 14928  000005                     ?i2___xxtofl:
 14929                           	opt stack 0
 14930  000005                     i2___awmod@counter:
 14931                           	opt stack 0
 14932  000005                     frexp@eptr:
 14933                           	opt stack 0
 14934  000005                     i2___wmul@product:
 14935                           	opt stack 0
 14936  000005                     i2writeDoubleToEEPROM@input_double:
 14937                           	opt stack 0
 14938  000005                     i2__div_to_l_@f2:
 14939                           	opt stack 0
 14940  000005                     i2___lldiv@divisor:
 14941                           	opt stack 0
 14942  000005                     i2___xxtofl@val:
 14943                           	opt stack 0
 14944                           
 14945                           ; 4 bytes @ 0x4
 14946  000005                     	ds	1
 14947  000006                     i2___awmod@sign:
 14948                           	opt stack 0
 14949                           
 14950                           ; 1 bytes @ 0x5
 14951  000006                     	ds	1
 14952  000007                     ??_frexp:
 14953  000007                     ??i2__tdiv_to_l_:
 14954  000007                     ?i2___awdiv:
 14955                           	opt stack 0
 14956  000007                     i2___awdiv@dividend:
 14957                           	opt stack 0
 14958  000007                     i2readDoubleFromEEPROM@output_data:
 14959                           	opt stack 0
 14960                           
 14961                           ; 4 bytes @ 0x6
 14962  000007                     	ds	2
 14963  000009                     ??i2___xxtofl:
 14964  000009                     i2writeDoubleToEEPROM@starting_address:
 14965                           	opt stack 0
 14966  000009                     i2___awdiv@divisor:
 14967                           	opt stack 0
 14968  000009                     i2__div_to_l_@quot:
 14969                           	opt stack 0
 14970  000009                     i2___lldiv@quotient:
 14971                           	opt stack 0
 14972                           
 14973                           ; 4 bytes @ 0x8
 14974  000009                     	ds	1
 14975  00000A                     i2__tdiv_to_l_@quot:
 14976                           	opt stack 0
 14977                           
 14978                           ; 4 bytes @ 0x9
 14979  00000A                     	ds	1
 14980  00000B                     i2___awdiv@counter:
 14981                           	opt stack 0
 14982  00000B                     i2readDoubleFromEEPROM@byte_index:
 14983                           	opt stack 0
 14984  00000B                     i2writeDoubleToEEPROM@input_data:
 14985                           	opt stack 0
 14986                           
 14987                           ; 4 bytes @ 0xA
 14988  00000B                     	ds	1
 14989  00000C                     i2___awdiv@sign:
 14990                           	opt stack 0
 14991                           
 14992                           ; 1 bytes @ 0xB
 14993  00000C                     	ds	1
 14994  00000D                     i2__div_to_l_@cntr:
 14995                           	opt stack 0
 14996  00000D                     i2___lldiv@counter:
 14997                           	opt stack 0
 14998  00000D                     i2___xxtofl@sign:
 14999                           	opt stack 0
 15000  00000D                     i2___awdiv@quotient:
 15001                           	opt stack 0
 15002                           
 15003                           ; 2 bytes @ 0xC
 15004  00000D                     	ds	1
 15005  00000E                     ?i2___llmod:
 15006                           	opt stack 0
 15007  00000E                     i2__div_to_l_@exp1:
 15008                           	opt stack 0
 15009  00000E                     i2__tdiv_to_l_@cntr:
 15010                           	opt stack 0
 15011  00000E                     i2___xxtofl@exp:
 15012                           	opt stack 0
 15013  00000E                     i2___llmod@dividend:
 15014                           	opt stack 0
 15015                           
 15016                           ; 4 bytes @ 0xD
 15017  00000E                     	ds	1
 15018  00000F                     i2__tdiv_to_l_@exp1:
 15019                           	opt stack 0
 15020  00000F                     i2writeDoubleToEEPROM@byte_index:
 15021                           	opt stack 0
 15022  00000F                     i2___xxtofl@arg:
 15023                           	opt stack 0
 15024                           
 15025                           ; 4 bytes @ 0xE
 15026  00000F                     	ds	2
 15027  000011                     
 15028                           ; 1 bytes @ 0x10
 15029  000011                     	ds	1
 15030  000012                     i2___llmod@divisor:
 15031                           	opt stack 0
 15032                           
 15033                           ; 4 bytes @ 0x11
 15034  000012                     	ds	1
 15035  000013                     ?i2___fldiv:
 15036                           	opt stack 0
 15037  000013                     i2___fldiv@b:
 15038                           	opt stack 0
 15039                           
 15040                           ; 4 bytes @ 0x12
 15041  000013                     	ds	3
 15042  000016                     i2___llmod@counter:
 15043                           	opt stack 0
 15044                           
 15045                           ; 1 bytes @ 0x15
 15046  000016                     	ds	1
 15047  000017                     i2___fldiv@a:
 15048                           	opt stack 0
 15049                           
 15050                           ; 4 bytes @ 0x16
 15051  000017                     	ds	4
 15052  00001B                     ??i2___fldiv:
 15053                           
 15054                           ; 1 bytes @ 0x1A
 15055  00001B                     	ds	4
 15056  00001F                     i2___fldiv@sign:
 15057                           	opt stack 0
 15058                           
 15059                           ; 1 bytes @ 0x1E
 15060  00001F                     	ds	1
 15061  000020                     i2___fldiv@rem:
 15062                           	opt stack 0
 15063                           
 15064                           ; 4 bytes @ 0x1F
 15065  000020                     	ds	4
 15066  000024                     i2___fldiv@new_exp:
 15067                           	opt stack 0
 15068                           
 15069                           ; 2 bytes @ 0x23
 15070  000024                     	ds	2
 15071  000026                     i2___fldiv@grs:
 15072                           	opt stack 0
 15073                           
 15074                           ; 4 bytes @ 0x25
 15075  000026                     	ds	4
 15076  00002A                     i2___fldiv@bexp:
 15077                           	opt stack 0
 15078                           
 15079                           ; 1 bytes @ 0x29
 15080  00002A                     	ds	1
 15081  00002B                     i2___fldiv@aexp:
 15082                           	opt stack 0
 15083                           
 15084                           ; 1 bytes @ 0x2A
 15085  00002B                     	ds	1
 15086  00002C                     ?i2___flneg:
 15087                           	opt stack 0
 15088  00002C                     i2___flneg@f1:
 15089                           	opt stack 0
 15090                           
 15091                           ; 4 bytes @ 0x2B
 15092  00002C                     	ds	4
 15093  000030                     ?_fabs:
 15094                           	opt stack 0
 15095  000030                     ?i2___flmul:
 15096                           	opt stack 0
 15097  000030                     fabs@d:
 15098                           	opt stack 0
 15099  000030                     i2___flmul@b:
 15100                           	opt stack 0
 15101                           
 15102                           ; 4 bytes @ 0x2F
 15103  000030                     	ds	4
 15104  000034                     i2___flge@ff1:
 15105                           	opt stack 0
 15106  000034                     i2___flmul@a:
 15107                           	opt stack 0
 15108                           
 15109                           ; 4 bytes @ 0x33
 15110  000034                     	ds	4
 15111  000038                     ??i2___flmul:
 15112  000038                     i2___flge@ff2:
 15113                           	opt stack 0
 15114                           
 15115                           ; 4 bytes @ 0x37
 15116  000038                     	ds	4
 15117  00003C                     ??i2___flge:
 15118  00003C                     i2___flmul@sign:
 15119                           	opt stack 0
 15120                           
 15121                           ; 1 bytes @ 0x3B
 15122  00003C                     	ds	1
 15123  00003D                     i2___flmul@aexp:
 15124                           	opt stack 0
 15125                           
 15126                           ; 1 bytes @ 0x3C
 15127  00003D                     	ds	1
 15128  00003E                     i2___flmul@grs:
 15129                           	opt stack 0
 15130                           
 15131                           ; 4 bytes @ 0x3D
 15132  00003E                     	ds	2
 15133  000040                     writeEnergyToEEPROMCallback@current_value:
 15134                           	opt stack 0
 15135                           
 15136                           ; 4 bytes @ 0x3F
 15137  000040                     	ds	2
 15138  000042                     i2___flmul@bexp:
 15139                           	opt stack 0
 15140                           
 15141                           ; 1 bytes @ 0x41
 15142  000042                     	ds	1
 15143  000043                     i2___flmul@prod:
 15144                           	opt stack 0
 15145                           
 15146                           ; 4 bytes @ 0x42
 15147  000043                     	ds	1
 15148  000044                     
 15149                           ; 1 bytes @ 0x43
 15150  000044                     	ds	3
 15151  000047                     i2___flmul@temp:
 15152                           	opt stack 0
 15153                           
 15154                           ; 2 bytes @ 0x46
 15155  000047                     	ds	2
 15156  000049                     ?i2_fround:
 15157                           	opt stack 0
 15158  000049                     ?i2_scale:
 15159                           	opt stack 0
 15160                           
 15161                           ; 4 bytes @ 0x48
 15162  000049                     	ds	4
 15163  00004D                     i2_fround$5407:
 15164                           	opt stack 0
 15165  00004D                     i2_scale$5408:
 15166                           	opt stack 0
 15167                           
 15168                           ; 4 bytes @ 0x4C
 15169  00004D                     	ds	4
 15170  000051                     i2scale@scl:
 15171                           	opt stack 0
 15172  000051                     i2_fround$5406:
 15173                           	opt stack 0
 15174                           
 15175                           ; 4 bytes @ 0x50
 15176  000051                     	ds	4
 15177  000055                     i2fround@prec:
 15178                           	opt stack 0
 15179                           
 15180                           ; 1 bytes @ 0x54
 15181  000055                     	ds	1
 15182  000056                     ?i2___fladd:
 15183                           	opt stack 0
 15184  000056                     i2___fladd@b:
 15185                           	opt stack 0
 15186                           
 15187                           ; 4 bytes @ 0x55
 15188  000056                     	ds	4
 15189  00005A                     i2___fladd@a:
 15190                           	opt stack 0
 15191                           
 15192                           ; 4 bytes @ 0x59
 15193  00005A                     	ds	4
 15194  00005E                     tblptru	equ	0xFF8
 15195                           tblptrh	equ	0xFF7
 15196                           tblptrl	equ	0xFF6
 15197                           tablat	equ	0xFF5
 15198                           postinc0	equ	0xFEE
 15199                           wreg	equ	0xFE8
 15200                           postdec1	equ	0xFE5
 15201                           fsr1h	equ	0xFE2
 15202                           fsr1l	equ	0xFE1
 15203                           
 15204                           ; 1 bytes @ 0x5D
 15205 ;;
 15206 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 15207 ;;
 15208 ;; *************** function _main *****************
 15209 ;; Defined at:
 15210 ;;		line 474 in file "main.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;		None
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;		None
 15215 ;; Return value:  Size  Location     Type
 15216 ;;                  1    wreg      void 
 15217 ;; Registers used:
 15218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/0
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15226 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15227 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15228 ;;Total ram usage:        2 bytes
 15229 ;; Hardware stack levels required when called:   21
 15230 ;; This function calls:
 15231 ;;		_ADCC_SetADTIInterruptHandler
 15232 ;;		_INT0_SetInterruptHandler
 15233 ;;		_OLED_Clear
 15234 ;;		_OLED_Init
 15235 ;;		_OLED_Write_String
 15236 ;;		_OLED_YX
 15237 ;;		_SYSTEM_Initialize
 15238 ;;		_TMR4_SetInterruptHandler
 15239 ;;		_TMR5_SetInterruptHandler
 15240 ;;		_TMR5_StopTimer
 15241 ;;		_TMR6_SetInterruptHandler
 15242 ;;		_TMR7_SetInterruptHandler
 15243 ;;		_getCauseOfReset
 15244 ;;		_recoverSRAMMaxFromEEPROM
 15245 ;;		_saveSRAMMaxToEEPROM
 15246 ;;		_terminal_clearTerminal
 15247 ;;		_terminal_ringBufferPull
 15248 ;;		_terminal_setCursorHome
 15249 ;;		_terminal_textAttributesReset
 15250 ;;		_updateErrorLEDs
 15251 ;; This function is called by:
 15252 ;;		Startup code after reset
 15253 ;; This function uses a non-reentrant model
 15254 ;;
 15255                           
 15256                           	psect	text0
 15257  01846C                     __ptext0:
 15258                           	opt stack 0
 15259  01846C                     _main:
 15260                           	opt stack 10
 15261                           
 15262                           ;main.c: 478: reset_cause = getCauseOfReset();
 15263                           
 15264                           ;incstack = 0
 15265  01846C  EC76  F0D1         	call	_getCauseOfReset	;wreg free
 15266  018470  0102               	movlb	2	; () banked
 15267  018472  6FF5               	movwf	_reset_cause& (0+255),b
 15268                           
 15269                           ; BSR set to: 2
 15270                           ;main.c: 482: _delay((unsigned long)((250)*(64000000/4000.0)));
 15271  018474  0E15               	movlw	21
 15272  018476  0102               	movlb	2	; () banked
 15273  018478  6FCF               	movwf	(??_main+1)& (0+255),b
 15274  01847A  0E4B               	movlw	75
 15275  01847C  6FCE               	movwf	??_main& (0+255),b
 15276  01847E  0EBE               	movlw	190
 15277  018480                     u34487:
 15278  018480  2EE8               	decfsz	wreg,f,c
 15279  018482  D7FE               	bra	u34487
 15280  018484  2FCE               	decfsz	??_main& (0+255),f,b
 15281  018486  D7FC               	bra	u34487
 15282  018488  2FCF               	decfsz	(??_main+1)& (0+255),f,b
 15283  01848A  D7FA               	bra	u34487
 15284  01848C  F000               	nop	
 15285                           
 15286                           ;main.c: 485: SYSTEM_Initialize();
 15287  01848E  EC0D  F0D5         	call	_SYSTEM_Initialize	;wreg free
 15288                           
 15289                           ;main.c: 488: LATGbits.LATG0 = 0;
 15290  018492  907F               	bcf	3967,0,c	;volatile
 15291                           
 15292                           ;main.c: 489: LATGbits.LATG1 = 0;
 15293  018494  927F               	bcf	3967,1,c	;volatile
 15294                           
 15295                           ;main.c: 490: load_enable = 0;
 15296  018496  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15297                           
 15298                           ;main.c: 493: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 15299  018498  0E30               	movlw	low _heartbeatTimerCallback
 15300  01849A  0101               	movlb	1	; () banked
 15301  01849C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15302  01849E  0EA8               	movlw	high _heartbeatTimerCallback
 15303  0184A0  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15304  0184A2  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 15305  0184A4  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15306  0184A6  EC8B  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 15307                           
 15308                           ;main.c: 496: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 15309  0184AA  0E78               	movlw	low _ADCPostProcessingCallback
 15310  0184AC  0101               	movlb	1	; () banked
 15311  0184AE  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 15312  0184B0  0E40               	movlw	high _ADCPostProcessingCallback
 15313  0184B2  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 15314  0184B4  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 15315  0184B6  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 15316  0184B8  ECB5  F0D8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 15317                           
 15318                           ;main.c: 499: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 15319  0184BC  0EA8               	movlw	low _acquisitionTimerCallback
 15320  0184BE  0101               	movlb	1	; () banked
 15321  0184C0  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15322  0184C2  0EB0               	movlw	high _acquisitionTimerCallback
 15323  0184C4  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15324  0184C6  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 15325  0184C8  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15326  0184CA  EC84  F0D8         	call	_TMR7_SetInterruptHandler	;wreg free
 15327                           
 15328                           ;main.c: 502: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 15329  0184CE  0E2C               	movlw	low _dimmingOffTimeCallback
 15330  0184D0  0101               	movlb	1	; () banked
 15331  0184D2  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 15332  0184D4  0EB0               	movlw	high _dimmingOffTimeCallback
 15333  0184D6  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15334  0184D8  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 15335  0184DA  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15336  0184DC  ECA0  F0D8         	call	_INT0_SetInterruptHandler	;wreg free
 15337                           
 15338                           ;main.c: 505: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 15339  0184E0  0E86               	movlw	low _dimmingOnTimeCallback
 15340  0184E2  0101               	movlb	1	; () banked
 15341  0184E4  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15342  0184E6  0EB1               	movlw	high _dimmingOnTimeCallback
 15343  0184E8  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15344  0184EA  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 15345  0184EC  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15346  0184EE  EC92  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 15347                           
 15348                           ;main.c: 508: TMR4_SetInterruptHandler(writeEnergyToEEPROMCallback);
 15349  0184F2  0EE4               	movlw	low _writeEnergyToEEPROMCallback
 15350  0184F4  0101               	movlb	1	; () banked
 15351  0184F6  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15352  0184F8  0E9B               	movlw	high _writeEnergyToEEPROMCallback
 15353  0184FA  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15354  0184FC  0E01               	movlw	low (_writeEnergyToEEPROMCallback shr (0+16))
 15355  0184FE  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15356  018500  EC99  F0D8         	call	_TMR4_SetInterruptHandler	;wreg free
 15357                           
 15358                           ;main.c: 511: TMR5_StopTimer();
 15359  018504  ECEF  F0D8         	call	_TMR5_StopTimer	;wreg free
 15360                           
 15361                           ;main.c: 512: PIE0bits.INT0IE = 0;
 15362  018508  010E               	movlb	14	; () banked
 15363  01850A  9129               	bcf	41,0,b	;volatile
 15364                           
 15365                           ; BSR set to: 14
 15366                           ;main.c: 515: recoverSRAMMaxFromEEPROM();
 15367  01850C  ECD1  F0C2         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 15368                           
 15369                           ;main.c: 518: (INTCONbits.GIEH = 1);
 15370  018510  8EF2               	bsf	intcon,7,c	;volatile
 15371                           
 15372                           ;main.c: 521: (INTCONbits.GIEL = 1);
 15373  018512  8CF2               	bsf	intcon,6,c	;volatile
 15374                           
 15375                           ;main.c: 524: terminal_clearTerminal();
 15376  018514  EC6D  F0D8         	call	_terminal_clearTerminal	;wreg free
 15377                           
 15378                           ;main.c: 525: terminal_setCursorHome();
 15379  018518  EC5D  F0D8         	call	_terminal_setCursorHome	;wreg free
 15380                           
 15381                           ;main.c: 526: terminal_textAttributesReset();
 15382  01851C  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 15383                           
 15384                           ;main.c: 529: OLED_Init();
 15385  018520  EC0C  F0CC         	call	_OLED_Init	;wreg free
 15386                           
 15387                           ;main.c: 530: OLED_Clear();
 15388  018524  ECF8  F0D3         	call	_OLED_Clear	;wreg free
 15389                           
 15390                           ;main.c: 531: OLED_YX(0,0);
 15391  018528  0E00               	movlw	0
 15392  01852A  0101               	movlb	1	; () banked
 15393  01852C  6F2B               	movwf	OLED_YX@Column& (0+255),b
 15394  01852E  0E00               	movlw	0
 15395  018530  ECB3  F0D4         	call	_OLED_YX
 15396                           
 15397                           ;main.c: 532: OLED_Write_String("AC Power Meter");
 15398  018534  0E30               	movlw	low STR_2
 15399  018536  0101               	movlb	1	; () banked
 15400  018538  6F38               	movwf	OLED_Write_String@s& (0+255),b
 15401  01853A  0EFE               	movlw	high STR_2
 15402  01853C  6F39               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15403  01853E  ECF7  F0D0         	call	_OLED_Write_String	;wreg free
 15404                           
 15405                           ;main.c: 533: OLED_YX(1,0);
 15406  018542  0E00               	movlw	0
 15407  018544  0101               	movlb	1	; () banked
 15408  018546  6F2B               	movwf	OLED_YX@Column& (0+255),b
 15409  018548  0E01               	movlw	1
 15410  01854A  ECB3  F0D4         	call	_OLED_YX
 15411                           
 15412                           ;main.c: 534: OLED_Write_String("ELEN 3035");
 15413  01854E  0E88               	movlw	low STR_3
 15414  018550  0101               	movlb	1	; () banked
 15415  018552  6F38               	movwf	OLED_Write_String@s& (0+255),b
 15416  018554  0EFF               	movlw	high STR_3
 15417  018556  6F39               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15418  018558  ECF7  F0D0         	call	_OLED_Write_String	;wreg free
 15419                           
 15420                           ;main.c: 535: OLED_YX(2,0);
 15421  01855C  0E00               	movlw	0
 15422  01855E  0101               	movlb	1	; () banked
 15423  018560  6F2B               	movwf	OLED_YX@Column& (0+255),b
 15424  018562  0E02               	movlw	2
 15425  018564  ECB3  F0D4         	call	_OLED_YX
 15426                           
 15427                           ;main.c: 536: OLED_Write_String("Drew Maatman");
 15428  018568  0EDF               	movlw	low STR_4
 15429  01856A  0101               	movlb	1	; () banked
 15430  01856C  6F38               	movwf	OLED_Write_String@s& (0+255),b
 15431  01856E  0EFE               	movlw	high STR_4
 15432  018570  6F39               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15433  018572  ECF7  F0D0         	call	_OLED_Write_String	;wreg free
 15434                           
 15435                           ;main.c: 537: OLED_YX(3,0);
 15436  018576  0E00               	movlw	0
 15437  018578  0101               	movlb	1	; () banked
 15438  01857A  6F2B               	movwf	OLED_YX@Column& (0+255),b
 15439  01857C  0E03               	movlw	3
 15440  01857E  ECB3  F0D4         	call	_OLED_YX
 15441                           
 15442                           ;main.c: 538: OLED_Write_String("Gabe Thalji");
 15443  018582  0E1C               	movlw	low STR_5
 15444  018584  0101               	movlb	1	; () banked
 15445  018586  6F38               	movwf	OLED_Write_String@s& (0+255),b
 15446  018588  0EFF               	movlw	high STR_5
 15447  01858A  6F39               	movwf	(OLED_Write_String@s+1)& (0+255),b
 15448  01858C  ECF7  F0D0         	call	_OLED_Write_String	;wreg free
 15449  018590                     
 15450                           ;main.c: 542: {
 15451                           ;main.c: 545: if (eusart2RxStringReady) {
 15452  018590  0100               	movlb	0	; () banked
 15453  018592  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;main.c: 547: terminal_ringBufferPull();
 15457  018594  ECC8  F0C5         	call	_terminal_ringBufferPull	;wreg free
 15458                           
 15459                           ;main.c: 549: }
 15460                           ;main.c: 552: saveSRAMMaxToEEPROM();
 15461  018598  EC45  F0BC         	call	_saveSRAMMaxToEEPROM	;wreg free
 15462                           
 15463                           ;main.c: 555: updateErrorLEDs();
 15464  01859C  ECFE  F0D7         	call	_updateErrorLEDs	;wreg free
 15465  0185A0  D7F7               	goto	l1241
 15466  0185A2                     __end_of_main:
 15467                           	opt stack 0
 15468                           tblptru	equ	0xFF8
 15469                           tblptrh	equ	0xFF7
 15470                           tblptrl	equ	0xFF6
 15471                           tablat	equ	0xFF5
 15472                           intcon	equ	0xFF2
 15473                           postinc0	equ	0xFEE
 15474                           wreg	equ	0xFE8
 15475                           postdec1	equ	0xFE5
 15476                           fsr1h	equ	0xFE2
 15477                           fsr1l	equ	0xFE1
 15478                           
 15479 ;; *************** function _updateErrorLEDs *****************
 15480 ;; Defined at:
 15481 ;;		line 54 in file "error_handling.c"
 15482 ;; Parameters:    Size  Location     Type
 15483 ;;		None
 15484 ;; Auto vars:     Size  Location     Type
 15485 ;;		None
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  1    wreg      void 
 15488 ;; Registers used:
 15489 ;;		wreg, status,2, cstack
 15490 ;; Tracked objects:
 15491 ;;		On entry : 0/0
 15492 ;;		On exit  : 0/0
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15499 ;;Total ram usage:        0 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; Hardware stack levels required when called:   14
 15502 ;; This function calls:
 15503 ;;		_getADCError
 15504 ;;		_getCOMMError
 15505 ;; This function is called by:
 15506 ;;		_main
 15507 ;; This function uses a non-reentrant model
 15508 ;;
 15509                           
 15510                           	psect	text1
 15511  01AFFC                     __ptext1:
 15512                           	opt stack 0
 15513  01AFFC                     _updateErrorLEDs:
 15514                           	opt stack 16
 15515                           
 15516                           ;error_handling.c: 57: if (getADCError()) {
 15517                           
 15518                           ;incstack = 0
 15519  01AFFC  ECB5  F0D5         	call	_getADCError	;wreg free
 15520  01B000  0900               	iorlw	0
 15521  01B002  A4D8               	btfss	status,2,c
 15522                           
 15523                           ;error_handling.c: 59: LATFbits.LATF3 = 1;
 15524  01B004  867E               	bsf	3966,3,c	;volatile
 15525                           
 15526                           ;error_handling.c: 61: }
 15527                           ;error_handling.c: 64: if (getCOMMError()) {
 15528  01B006  EC22  F0D8         	call	_getCOMMError	;wreg free
 15529  01B00A  0900               	iorlw	0
 15530  01B00C  B4D8               	btfsc	status,2,c
 15531  01B00E  0012               	return	
 15532                           
 15533                           ;error_handling.c: 66: LATFbits.LATF1 = 1;
 15534  01B010  827E               	bsf	3966,1,c	;volatile
 15535  01B012  0012               	return	
 15536  01B014                     __end_of_updateErrorLEDs:
 15537                           	opt stack 0
 15538                           tblptru	equ	0xFF8
 15539                           tblptrh	equ	0xFF7
 15540                           tblptrl	equ	0xFF6
 15541                           tablat	equ	0xFF5
 15542                           intcon	equ	0xFF2
 15543                           postinc0	equ	0xFEE
 15544                           wreg	equ	0xFE8
 15545                           postdec1	equ	0xFE5
 15546                           fsr1h	equ	0xFE2
 15547                           fsr1l	equ	0xFE1
 15548                           status	equ	0xFD8
 15549                           
 15550 ;; *************** function _terminal_setCursorHome *****************
 15551 ;; Defined at:
 15552 ;;		line 85 in file "ring_buffer_interface.c"
 15553 ;; Parameters:    Size  Location     Type
 15554 ;;		None
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;		None
 15557 ;; Return value:  Size  Location     Type
 15558 ;;                  1    wreg      void 
 15559 ;; Registers used:
 15560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/0
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15570 ;;Total ram usage:        0 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:   17
 15573 ;; This function calls:
 15574 ;;		_printf
 15575 ;; This function is called by:
 15576 ;;		_main
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text2
 15581  01B0BA                     __ptext2:
 15582                           	opt stack 0
 15583  01B0BA                     _terminal_setCursorHome:
 15584                           	opt stack 13
 15585                           
 15586                           ;ring_buffer_interface.c: 86: printf("\033[H");
 15587                           
 15588                           ;incstack = 0
 15589  01B0BA  0EBC               	movlw	low STR_7
 15590  01B0BC  0101               	movlb	1	; () banked
 15591  01B0BE  6FAC               	movwf	printf@f& (0+255),b
 15592  01B0C0  0EFF               	movlw	high STR_7
 15593  01B0C2  6FAD               	movwf	(printf@f+1)& (0+255),b
 15594  01B0C4  EC95  F0D4         	call	_printf	;wreg free
 15595  01B0C8  0012               	return		;funcret
 15596  01B0CA                     __end_of_terminal_setCursorHome:
 15597                           	opt stack 0
 15598                           tblptru	equ	0xFF8
 15599                           tblptrh	equ	0xFF7
 15600                           tblptrl	equ	0xFF6
 15601                           tablat	equ	0xFF5
 15602                           intcon	equ	0xFF2
 15603                           postinc0	equ	0xFEE
 15604                           wreg	equ	0xFE8
 15605                           postdec1	equ	0xFE5
 15606                           fsr1h	equ	0xFE2
 15607                           fsr1l	equ	0xFE1
 15608                           status	equ	0xFD8
 15609                           
 15610 ;; *************** function _terminal_ringBufferPull *****************
 15611 ;; Defined at:
 15612 ;;		line 12 in file "ring_buffer_interface.c"
 15613 ;; Parameters:    Size  Location     Type
 15614 ;;		None
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  index           2   55[BANK2 ] int 
 15617 ;;  index           2   57[BANK2 ] int 
 15618 ;;  charNumber      2   53[BANK2 ] int 
 15619 ;; Return value:  Size  Location     Type
 15620 ;;                  1    wreg      void 
 15621 ;; Registers used:
 15622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15623 ;; Tracked objects:
 15624 ;;		On entry : 0/0
 15625 ;;		On exit  : 0/0
 15626 ;;		Unchanged: 0/0
 15627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15629 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 15630 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15631 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
 15632 ;;Total ram usage:        9 bytes
 15633 ;; Hardware stack levels used:    1
 15634 ;; Hardware stack levels required when called:   20
 15635 ;; This function calls:
 15636 ;;		_EUSART2_Read
 15637 ;;		_ringBufferLUT
 15638 ;;		_strlen
 15639 ;; This function is called by:
 15640 ;;		_main
 15641 ;; This function uses a non-reentrant model
 15642 ;;
 15643                           
 15644                           	psect	text3
 15645  018B90                     __ptext3:
 15646                           	opt stack 0
 15647  018B90                     _terminal_ringBufferPull:
 15648                           	opt stack 10
 15649                           
 15650                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 15651                           
 15652                           ;incstack = 0
 15653  018B90  C272  F2C8         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 15654  018B94  0102               	movlb	2	; () banked
 15655  018B96  6BC9               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 15656                           
 15657                           ; BSR set to: 2
 15658                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 15659  018B98  0E00               	movlw	0
 15660  018B9A  6FCD               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 15661  018B9C  0E00               	movlw	0
 15662  018B9E  6FCC               	movwf	terminal_ringBufferPull@index& (0+255),b
 15663  018BA0                     l23320:
 15664                           
 15665                           ; BSR set to: 2
 15666  018BA0  BFCD               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 15667  018BA2  D006               	goto	l1282
 15668  018BA4  51CD               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15669  018BA6  E10F               	bnz	l23330
 15670  018BA8  0E40               	movlw	64
 15671  018BAA  5DCC               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 15672  018BAC  B0D8               	btfsc	status,0,c
 15673  018BAE  D00B               	goto	u34190
 15674  018BB0                     l1282:
 15675                           
 15676                           ; BSR set to: 2
 15677                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 15678                           
 15679                           ; BSR set to: 2
 15680  018BB0  0EC0               	movlw	low _line
 15681  018BB2  25CC               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 15682  018BB4  6ED9               	movwf	fsr2l,c
 15683  018BB6  0E03               	movlw	high _line
 15684  018BB8  21CD               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15685  018BBA  6EDA               	movwf	fsr2h,c
 15686  018BBC  0E00               	movlw	0
 15687  018BBE  6EDF               	movwf	indf2,c
 15688                           
 15689                           ; BSR set to: 2
 15690  018BC0  4BCC               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 15691  018BC2  2BCD               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 15692  018BC4  D7ED               	goto	l23320
 15693  018BC6                     u34190:
 15694  018BC6                     l23330:
 15695                           
 15696                           ; BSR set to: 2
 15697                           ;ring_buffer_interface.c: 21: }
 15698                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 15699  018BC6  0E00               	movlw	0
 15700  018BC8  6FCB               	movwf	(terminal_ringBufferPull@index_2951+1)& (0+255),b
 15701  018BCA  0E00               	movlw	0
 15702  018BCC  6FCA               	movwf	terminal_ringBufferPull@index_2951& (0+255),b
 15703  018BCE  D00F               	goto	l1284
 15704  018BD0                     
 15705                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 15706                           
 15707                           ; BSR set to: 2
 15708  018BD0  ECB3  F0D2         	call	_EUSART2_Read	;wreg free
 15709  018BD4  0101               	movlb	1	; () banked
 15710  018BD6  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15711  018BD8  0EC0               	movlw	low _line
 15712  018BDA  0102               	movlb	2	; () banked
 15713  018BDC  25CA               	addwf	terminal_ringBufferPull@index_2951& (0+255),w,b
 15714  018BDE  6ED9               	movwf	fsr2l,c
 15715  018BE0  0E03               	movlw	high _line
 15716  018BE2  21CB               	addwfc	(terminal_ringBufferPull@index_2951+1)& (0+255),w,b
 15717  018BE4  6EDA               	movwf	fsr2h,c
 15718  018BE6  C1C3  FFDF         	movff	??_terminal_ringBufferPull,indf2
 15719                           
 15720                           ; BSR set to: 2
 15721  018BEA  4BCA               	infsnz	terminal_ringBufferPull@index_2951& (0+255),f,b
 15722  018BEC  2BCB               	incf	(terminal_ringBufferPull@index_2951+1)& (0+255),f,b
 15723  018BEE                     l1284:
 15724                           
 15725                           ; BSR set to: 2
 15726                           
 15727                           ; BSR set to: 2
 15728  018BEE  51C8               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 15729  018BF0  5DCA               	subwf	terminal_ringBufferPull@index_2951& (0+255),w,b
 15730  018BF2  51CB               	movf	(terminal_ringBufferPull@index_2951+1)& (0+255),w,b
 15731  018BF4  0A80               	xorlw	128
 15732  018BF6  0101               	movlb	1	; () banked
 15733  018BF8  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15734  018BFA  0102               	movlb	2	; () banked
 15735  018BFC  51C9               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 15736  018BFE  0A80               	xorlw	128
 15737  018C00  0101               	movlb	1	; () banked
 15738  018C02  59C3               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 15739  018C04  A0D8               	btfss	status,0,c
 15740  018C06  D7E4               	goto	l1285
 15741                           
 15742                           ; BSR set to: 1
 15743                           ;ring_buffer_interface.c: 28: }
 15744                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 15745  018C08  C0FA  F1DE         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 15746                           
 15747                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 15748                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 15749  018C0C  D017               	goto	l1287
 15750  018C0E                     
 15751                           ; BSR set to: 1
 15752                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 15753                           
 15754                           ; BSR set to: 1
 15755  018C0E  0EFF               	movlw	255
 15756  018C10  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15757  018C12  0EFF               	movlw	255
 15758  018C14  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15759  018C16  0EC0               	movlw	low _line
 15760  018C18  6F17               	movwf	strlen@s& (0+255),b
 15761  018C1A  0E03               	movlw	high _line
 15762  018C1C  6F18               	movwf	(strlen@s+1)& (0+255),b
 15763  018C1E  ECCB  F0D0         	call	_strlen	;wreg free
 15764  018C22  0101               	movlb	1	; () banked
 15765  018C24  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15766  018C26  2717               	addwf	?_strlen& (0+255),f,b
 15767  018C28  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15768  018C2A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15769  018C2C  0EC0               	movlw	low _line
 15770  018C2E  2517               	addwf	?_strlen& (0+255),w,b
 15771  018C30  6ED9               	movwf	fsr2l,c
 15772  018C32  0E03               	movlw	high _line
 15773  018C34  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15774  018C36  6EDA               	movwf	fsr2h,c
 15775  018C38  0E00               	movlw	0
 15776  018C3A  6EDF               	movwf	indf2,c
 15777  018C3C                     l1287:
 15778                           
 15779                           ; BSR set to: 1
 15780  018C3C  0EFF               	movlw	255
 15781  018C3E  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15782  018C40  0EFF               	movlw	255
 15783  018C42  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15784  018C44  0EC0               	movlw	low _line
 15785  018C46  6F17               	movwf	strlen@s& (0+255),b
 15786  018C48  0E03               	movlw	high _line
 15787  018C4A  6F18               	movwf	(strlen@s+1)& (0+255),b
 15788  018C4C  ECCB  F0D0         	call	_strlen	;wreg free
 15789  018C50  0101               	movlb	1	; () banked
 15790  018C52  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15791  018C54  2717               	addwf	?_strlen& (0+255),f,b
 15792  018C56  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15793  018C58  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15794  018C5A  0EC0               	movlw	low _line
 15795  018C5C  2517               	addwf	?_strlen& (0+255),w,b
 15796  018C5E  6ED9               	movwf	fsr2l,c
 15797  018C60  0E03               	movlw	high _line
 15798  018C62  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15799  018C64  6EDA               	movwf	fsr2h,c
 15800  018C66  0E0A               	movlw	10
 15801  018C68  18DE               	xorwf	postinc2,w,c
 15802  018C6A  B4D8               	btfsc	status,2,c
 15803  018C6C  D7D0               	goto	l1288
 15804                           
 15805                           ; BSR set to: 1
 15806  018C6E  0EFF               	movlw	255
 15807  018C70  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15808  018C72  0EFF               	movlw	255
 15809  018C74  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15810  018C76  0EC0               	movlw	low _line
 15811  018C78  6F17               	movwf	strlen@s& (0+255),b
 15812  018C7A  0E03               	movlw	high _line
 15813  018C7C  6F18               	movwf	(strlen@s+1)& (0+255),b
 15814  018C7E  ECCB  F0D0         	call	_strlen	;wreg free
 15815  018C82  0101               	movlb	1	; () banked
 15816  018C84  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15817  018C86  2717               	addwf	?_strlen& (0+255),f,b
 15818  018C88  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15819  018C8A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15820  018C8C  0EC0               	movlw	low _line
 15821  018C8E  2517               	addwf	?_strlen& (0+255),w,b
 15822  018C90  6ED9               	movwf	fsr2l,c
 15823  018C92  0E03               	movlw	high _line
 15824  018C94  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15825  018C96  6EDA               	movwf	fsr2h,c
 15826  018C98  0E0D               	movlw	13
 15827  018C9A  18DE               	xorwf	postinc2,w,c
 15828  018C9C  B4D8               	btfsc	status,2,c
 15829  018C9E  D7B7               	goto	l1288
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;ring_buffer_interface.c: 40: }
 15833                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 15834  018CA0  0100               	movlb	0	; () banked
 15835  018CA2  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 15839  018CA4  0EC0               	movlw	low _line
 15840  018CA6  0101               	movlb	1	; () banked
 15841  018CA8  6FBF               	movwf	ringBufferLUT@line& (0+255),b
 15842  018CAA  0E03               	movlw	high _line
 15843  018CAC  6FC0               	movwf	(ringBufferLUT@line+1)& (0+255),b
 15844  018CAE  EC00  F080         	call	_ringBufferLUT	;wreg free
 15845  018CB2  0012               	return		;funcret
 15846  018CB4                     __end_of_terminal_ringBufferPull:
 15847                           	opt stack 0
 15848                           tblptru	equ	0xFF8
 15849                           tblptrh	equ	0xFF7
 15850                           tblptrl	equ	0xFF6
 15851                           tablat	equ	0xFF5
 15852                           intcon	equ	0xFF2
 15853                           postinc0	equ	0xFEE
 15854                           wreg	equ	0xFE8
 15855                           postdec1	equ	0xFE5
 15856                           fsr1h	equ	0xFE2
 15857                           fsr1l	equ	0xFE1
 15858                           indf2	equ	0xFDF
 15859                           postinc2	equ	0xFDE
 15860                           fsr2h	equ	0xFDA
 15861                           fsr2l	equ	0xFD9
 15862                           status	equ	0xFD8
 15863                           
 15864 ;; *************** function _ringBufferLUT *****************
 15865 ;; Defined at:
 15866 ;;		line 61 in file "ring_buffer_LUT.c"
 15867 ;; Parameters:    Size  Location     Type
 15868 ;;  line            2  191[BANK1 ] PTR unsigned char 
 15869 ;;		 -> line(64), 
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;  angle_degree    4   19[BANK2 ] PTR unsigned char 
 15872 ;;  index           2   47[BANK2 ] int 
 15873 ;;  userID          2   51[BANK2 ] int 
 15874 ;;  max_voltage_    4   43[BANK2 ] int 
 15875 ;;  max_temp_pri    4   39[BANK2 ] int 
 15876 ;;  max_voltage_    4   35[BANK2 ] int 
 15877 ;;  max_voltage_    4   31[BANK2 ] int 
 15878 ;;  max_Power_pr    4   27[BANK2 ] int 
 15879 ;;  max_current_    4   23[BANK2 ] int 
 15880 ;;  arg_buff        3   16[BANK2 ] unsigned char [3]
 15881 ;;  percentage      2   49[BANK2 ] int 
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      void 
 15884 ;; Registers used:
 15885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15891 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15892 ;;      Locals:         0       0       0      37       0       0       0       0       0       0       0       0       
      +0       0       0
 15893 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15894 ;;      Totals:         0       0       4      37       0       0       0       0       0       0       0       0       
      +0       0       0
 15895 ;;Total ram usage:       41 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; Hardware stack levels required when called:   19
 15898 ;; This function calls:
 15899 ;;		_TMR5_StopTimer
 15900 ;;		___fladd
 15901 ;;		___fldiv
 15902 ;;		___flmul
 15903 ;;		___flneg
 15904 ;;		___wmul
 15905 ;;		___xxtofl
 15906 ;;		_atoi
 15907 ;;		_clearADCErrors
 15908 ;;		_clearCOMMErrors
 15909 ;;		_getADCError
 15910 ;;		_getCOMMError
 15911 ;;		_getCauseOfResetString
 15912 ;;		_getDeviceID
 15913 ;;		_getDeviceIDString
 15914 ;;		_getMajorRevisionID
 15915 ;;		_getMinorRevisionID
 15916 ;;		_getUserID
 15917 ;;		_printf
 15918 ;;		_readDoubleFromEEPROM
 15919 ;;		_strcmp
 15920 ;;		_strstr
 15921 ;;		_terminal_printNewline
 15922 ;;		_terminal_textAttributes
 15923 ;;		_terminal_textAttributesReset
 15924 ;;		_writeDoubleToEEPROM
 15925 ;; This function is called by:
 15926 ;;		_terminal_ringBufferPull
 15927 ;; This function uses a non-reentrant model
 15928 ;;
 15929                           
 15930                           	psect	text4
 15931  010000                     __ptext4:
 15932                           	opt stack 0
 15933  010000                     _ringBufferLUT:
 15934                           	opt stack 10
 15935                           
 15936                           ;ring_buffer_LUT.c: 67: if((0 == strcmp(line, "Reset"))) {
 15937                           
 15938                           ;incstack = 0
 15939  010000  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15940  010004  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15941  010008  0E7F               	movlw	low (STR_179+10)
 15942  01000A  0101               	movlb	1	; () banked
 15943  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 15944  01000E  0EFD               	movlw	high (STR_179+10)
 15945  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15946  010012  EC9F  F0D1         	call	_strcmp	;wreg free
 15947  010016  0101               	movlb	1	; () banked
 15948  010018  5117               	movf	?_strcmp& (0+255),w,b
 15949  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15950  01001C  A4D8               	btfss	status,2,c
 15951  01001E  D026               	goto	l1463
 15952                           
 15953                           ; BSR set to: 1
 15954                           ;ring_buffer_LUT.c: 71: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 15955  010020  C0F6  F11B         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 15956  010024  C0F7  F11C         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 15957  010028  C0F8  F11D         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 15958  01002C  C0F9  F11E         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 15959  010030  0E63               	movlw	low _Total_Energy_address
 15960  010032  6EF6               	movwf	tblptrl,c
 15961  010034                     	if	1	;There is more than 1 active tblptr byte
 15962  010034  0ECF               	movlw	high _Total_Energy_address
 15963  010036  6EF7               	movwf	tblptrh,c
 15964  010038                     	endif
 15965  010038                     	if	1	;There are 3 active tblptr bytes
 15966  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 15967  01003A  6EF8               	movwf	tblptru,c
 15968  01003C                     	endif
 15969  01003C  0009               	tblrd		*+
 15970  01003E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15971  010042  000A               	tblrd		*-
 15972  010044  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15973  010048  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 15974                           
 15975                           ;ring_buffer_LUT.c: 74: printf("\033[2J");
 15976  01004C  0EB3               	movlw	low STR_6
 15977  01004E  0101               	movlb	1	; () banked
 15978  010050  6FAC               	movwf	printf@f& (0+255),b
 15979  010052  0EFF               	movlw	high STR_6
 15980  010054  6FAD               	movwf	(printf@f+1)& (0+255),b
 15981  010056  EC95  F0D4         	call	_printf	;wreg free
 15982                           
 15983                           ;ring_buffer_LUT.c: 77: printf("\033[H");
 15984  01005A  0EBC               	movlw	low STR_7
 15985  01005C  0101               	movlb	1	; () banked
 15986  01005E  6FAC               	movwf	printf@f& (0+255),b
 15987  010060  0EFF               	movlw	high STR_7
 15988  010062  6FAD               	movwf	(printf@f+1)& (0+255),b
 15989  010064  EC95  F0D4         	call	_printf	;wreg free
 15990  010068  00FF               	reset		;# 
 15991                           
 15992                           ;ring_buffer_LUT.c: 82: }
 15993  01006A  0012               	return	
 15994  01006C                     l1463:
 15995                           
 15996                           ;ring_buffer_LUT.c: 85: else if((0 == strcmp(line, "Clear"))) {
 15997  01006C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15998  010070  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15999  010074  0EA8               	movlw	low STR_48
 16000  010076  0101               	movlb	1	; () banked
 16001  010078  6F19               	movwf	strcmp@s2& (0+255),b
 16002  01007A  0EFF               	movlw	high STR_48
 16003  01007C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16004  01007E  EC9F  F0D1         	call	_strcmp	;wreg free
 16005  010082  0101               	movlb	1	; () banked
 16006  010084  5117               	movf	?_strcmp& (0+255),w,b
 16007  010086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16008  010088  A4D8               	btfss	status,2,c
 16009  01008A  D00E               	goto	l1465
 16010                           
 16011                           ; BSR set to: 1
 16012                           ;ring_buffer_LUT.c: 88: printf("\033[2J");
 16013  01008C  0EB3               	movlw	low STR_6
 16014  01008E  6FAC               	movwf	printf@f& (0+255),b
 16015  010090  0EFF               	movlw	high STR_6
 16016  010092  6FAD               	movwf	(printf@f+1)& (0+255),b
 16017  010094  EC95  F0D4         	call	_printf	;wreg free
 16018                           
 16019                           ;ring_buffer_LUT.c: 91: printf("\033[H");
 16020  010098  0EBC               	movlw	low STR_7
 16021  01009A  0101               	movlb	1	; () banked
 16022  01009C  6FAC               	movwf	printf@f& (0+255),b
 16023  01009E  0EFF               	movlw	high STR_7
 16024  0100A0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16025  0100A2  EC95  F0D4         	call	_printf	;wreg free
 16026                           
 16027                           ;ring_buffer_LUT.c: 93: }
 16028  0100A6  0012               	return	
 16029  0100A8                     l1465:
 16030                           
 16031                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Cause of Reset?"))) {
 16032  0100A8  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16033  0100AC  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16034  0100B0  0EB5               	movlw	low STR_51
 16035  0100B2  0101               	movlb	1	; () banked
 16036  0100B4  6F19               	movwf	strcmp@s2& (0+255),b
 16037  0100B6  0EFD               	movlw	high STR_51
 16038  0100B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16039  0100BA  EC9F  F0D1         	call	_strcmp	;wreg free
 16040  0100BE  0101               	movlb	1	; () banked
 16041  0100C0  5117               	movf	?_strcmp& (0+255),w,b
 16042  0100C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16043  0100C4  A4D8               	btfss	status,2,c
 16044  0100C6  D019               	goto	l1467
 16045                           
 16046                           ; BSR set to: 1
 16047                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16048  0100C8  0E00               	movlw	0
 16049  0100CA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16050  0100CC  0E00               	movlw	0
 16051  0100CE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16052  0100D0  0E02               	movlw	2
 16053  0100D2  EC30  F0AA         	call	_terminal_textAttributes
 16054                           
 16055                           ;ring_buffer_LUT.c: 101: printf("The cause of the most recent device reset was: %s\n\r",
 16056                           ;ring_buffer_LUT.c: 102: getCauseOfResetString(reset_cause));
 16057  0100D6  0EA8               	movlw	low STR_52
 16058  0100D8  0101               	movlb	1	; () banked
 16059  0100DA  6FAC               	movwf	printf@f& (0+255),b
 16060  0100DC  0EF5               	movlw	high STR_52
 16061  0100DE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16062  0100E0  0102               	movlb	2	; () banked
 16063  0100E2  51F5               	movf	_reset_cause& (0+255),w,b
 16064  0100E4  EC1C  F0D6         	call	_getCauseOfResetString
 16065  0100E8  C117  F1AE         	movff	?_getCauseOfResetString,?_printf+2
 16066  0100EC  C118  F1AF         	movff	?_getCauseOfResetString+1,?_printf+3
 16067  0100F0  EC95  F0D4         	call	_printf	;wreg free
 16068                           
 16069                           ;ring_buffer_LUT.c: 104: terminal_textAttributesReset();
 16070  0100F4  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16071                           
 16072                           ;ring_buffer_LUT.c: 106: }
 16073  0100F8  0012               	return	
 16074  0100FA                     l1467:
 16075                           
 16076                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 16077  0100FA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16078  0100FE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16079  010102  0EA2               	movlw	low STR_53
 16080  010104  0101               	movlb	1	; () banked
 16081  010106  6F19               	movwf	strcmp@s2& (0+255),b
 16082  010108  0EFF               	movlw	high STR_53
 16083  01010A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16084  01010C  EC9F  F0D1         	call	_strcmp	;wreg free
 16085  010110  0101               	movlb	1	; () banked
 16086  010112  5117               	movf	?_strcmp& (0+255),w,b
 16087  010114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16088  010116  B4D8               	btfsc	status,2,c
 16089  010118  D00F               	goto	u33390
 16090                           
 16091                           ; BSR set to: 1
 16092  01011A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16093  01011E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16094  010122  0EB8               	movlw	low STR_54
 16095  010124  6F19               	movwf	strcmp@s2& (0+255),b
 16096  010126  0EFF               	movlw	high STR_54
 16097  010128  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16098  01012A  EC9F  F0D1         	call	_strcmp	;wreg free
 16099  01012E  0101               	movlb	1	; () banked
 16100  010130  5117               	movf	?_strcmp& (0+255),w,b
 16101  010132  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16102  010134  A4D8               	btfss	status,2,c
 16103  010136  D018               	goto	l1469
 16104  010138                     u33390:
 16105                           
 16106                           ; BSR set to: 1
 16107                           ;ring_buffer_LUT.c: 111: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16108                           
 16109                           ; BSR set to: 1
 16110  010138  0E00               	movlw	0
 16111  01013A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16112  01013C  0E00               	movlw	0
 16113  01013E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16114  010140  0E02               	movlw	2
 16115  010142  EC30  F0AA         	call	_terminal_textAttributes
 16116                           
 16117                           ;ring_buffer_LUT.c: 112: printf("AC Power Meter\n\r");
 16118  010146  0EFE               	movlw	low STR_55
 16119  010148  0101               	movlb	1	; () banked
 16120  01014A  6FAC               	movwf	printf@f& (0+255),b
 16121  01014C  0EFC               	movlw	high STR_55
 16122  01014E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16123  010150  EC95  F0D4         	call	_printf	;wreg free
 16124                           
 16125                           ;ring_buffer_LUT.c: 113: printf("Marquette University ELEN 3035 Final Project\n\r");
 16126  010154  0EA6               	movlw	low STR_56
 16127  010156  0101               	movlb	1	; () banked
 16128  010158  6FAC               	movwf	printf@f& (0+255),b
 16129  01015A  0EF6               	movlw	high STR_56
 16130  01015C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16131  01015E  EC95  F0D4         	call	_printf	;wreg free
 16132                           
 16133                           ;ring_buffer_LUT.c: 114: terminal_textAttributesReset();
 16134  010162  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16135                           
 16136                           ;ring_buffer_LUT.c: 116: }
 16137  010166  0012               	return	
 16138  010168                     l1469:
 16139                           
 16140                           ;ring_buffer_LUT.c: 119: else if((0 == strcmp(line, "Device ID?"))) {
 16141  010168  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16142  01016C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16143  010170  0E49               	movlw	low STR_57
 16144  010172  0101               	movlb	1	; () banked
 16145  010174  6F19               	movwf	strcmp@s2& (0+255),b
 16146  010176  0EFF               	movlw	high STR_57
 16147  010178  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16148  01017A  EC9F  F0D1         	call	_strcmp	;wreg free
 16149  01017E  0101               	movlb	1	; () banked
 16150  010180  5117               	movf	?_strcmp& (0+255),w,b
 16151  010182  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16152  010184  A4D8               	btfss	status,2,c
 16153  010186  D023               	goto	l1473
 16154                           
 16155                           ; BSR set to: 1
 16156                           ;ring_buffer_LUT.c: 121: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16157  010188  0E00               	movlw	0
 16158  01018A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16159  01018C  0E00               	movlw	0
 16160  01018E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16161  010190  0E02               	movlw	2
 16162  010192  EC30  F0AA         	call	_terminal_textAttributes
 16163                           
 16164                           ;ring_buffer_LUT.c: 124: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 16165                           ;ring_buffer_LUT.c: 125: "part number of %s\n\r",
 16166                           ;ring_buffer_LUT.c: 126: getDeviceID(),
 16167                           ;ring_buffer_LUT.c: 127: getDeviceIDString(getDeviceID()));
 16168  010196  0EBB               	movlw	low STR_58
 16169  010198  0101               	movlb	1	; () banked
 16170  01019A  6FAC               	movwf	printf@f& (0+255),b
 16171  01019C  0EF0               	movlw	high STR_58
 16172  01019E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16173  0101A0  EC71  F0D7         	call	_getDeviceID	;wreg free
 16174  0101A4  C122  F1AE         	movff	?_getDeviceID,?_printf+2
 16175  0101A8  C123  F1AF         	movff	?_getDeviceID+1,?_printf+3
 16176  0101AC  EC71  F0D7         	call	_getDeviceID	;wreg free
 16177  0101B0  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 16178  0101B4  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 16179  0101B8  EC9B  F0D0         	call	_getDeviceIDString	;wreg free
 16180  0101BC  C124  F1B0         	movff	?_getDeviceIDString,?_printf+4
 16181  0101C0  C125  F1B1         	movff	?_getDeviceIDString+1,?_printf+5
 16182  0101C4  EC95  F0D4         	call	_printf	;wreg free
 16183                           
 16184                           ;ring_buffer_LUT.c: 129: terminal_textAttributesReset();
 16185  0101C8  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16186                           
 16187                           ;ring_buffer_LUT.c: 131: }
 16188  0101CC  0012               	return	
 16189  0101CE                     l1473:
 16190                           
 16191                           ;ring_buffer_LUT.c: 134: else if((0 == strcmp(line, "Revision ID?"))) {
 16192  0101CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16193  0101D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16194  0101D6  0E9E               	movlw	low STR_59
 16195  0101D8  0101               	movlb	1	; () banked
 16196  0101DA  6F19               	movwf	strcmp@s2& (0+255),b
 16197  0101DC  0EFE               	movlw	high STR_59
 16198  0101DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16199  0101E0  EC9F  F0D1         	call	_strcmp	;wreg free
 16200  0101E4  0101               	movlb	1	; () banked
 16201  0101E6  5117               	movf	?_strcmp& (0+255),w,b
 16202  0101E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16203  0101EA  A4D8               	btfss	status,2,c
 16204  0101EC  D022               	goto	l1475
 16205                           
 16206                           ; BSR set to: 1
 16207                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16208  0101EE  0E00               	movlw	0
 16209  0101F0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16210  0101F2  0E00               	movlw	0
 16211  0101F4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16212  0101F6  0E02               	movlw	2
 16213  0101F8  EC30  F0AA         	call	_terminal_textAttributes
 16214                           
 16215                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 16216                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 16217  0101FC  0EDA               	movlw	low STR_60
 16218  0101FE  0101               	movlb	1	; () banked
 16219  010200  6FAC               	movwf	printf@f& (0+255),b
 16220  010202  0EF2               	movlw	high STR_60
 16221  010204  6FAD               	movwf	(printf@f+1)& (0+255),b
 16222  010206  EC77  F0D4         	call	_getMajorRevisionID	;wreg free
 16223  01020A  0101               	movlb	1	; () banked
 16224  01020C  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 16225  01020E  0E41               	movlw	65
 16226  010210  25C1               	addwf	??_ringBufferLUT& (0+255),w,b
 16227  010212  6FAE               	movwf	(?_printf+2)& (0+255),b
 16228  010214  6BAF               	clrf	(?_printf+3)& (0+255),b
 16229  010216  0E00               	movlw	0
 16230  010218  23AF               	addwfc	(?_printf+3)& (0+255),f,b
 16231  01021A  ECCC  F0D6         	call	_getMinorRevisionID	;wreg free
 16232  01021E  0101               	movlb	1	; () banked
 16233  010220  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 16234  010222  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 16235  010224  6FB0               	movwf	(?_printf+4)& (0+255),b
 16236  010226  6BB1               	clrf	(?_printf+5)& (0+255),b
 16237  010228  EC95  F0D4         	call	_printf	;wreg free
 16238                           
 16239                           ;ring_buffer_LUT.c: 142: terminal_textAttributesReset();
 16240  01022C  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16241                           
 16242                           ;ring_buffer_LUT.c: 144: }
 16243  010230  0012               	return	
 16244  010232                     l1475:
 16245                           
 16246                           ;ring_buffer_LUT.c: 147: else if((0 == strcmp(line, "User IDs?"))) {
 16247  010232  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16248  010236  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16249  01023A  0E7E               	movlw	low STR_61
 16250  01023C  0101               	movlb	1	; () banked
 16251  01023E  6F19               	movwf	strcmp@s2& (0+255),b
 16252  010240  0EFF               	movlw	high STR_61
 16253  010242  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16254  010244  EC9F  F0D1         	call	_strcmp	;wreg free
 16255  010248  0101               	movlb	1	; () banked
 16256  01024A  5117               	movf	?_strcmp& (0+255),w,b
 16257  01024C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16258  01024E  A4D8               	btfss	status,2,c
 16259  010250  D03E               	goto	l1477
 16260                           
 16261                           ; BSR set to: 1
 16262                           ;ring_buffer_LUT.c: 149: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16263  010252  0E00               	movlw	0
 16264  010254  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16265  010256  0E00               	movlw	0
 16266  010258  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16267  01025A  0E02               	movlw	2
 16268  01025C  EC30  F0AA         	call	_terminal_textAttributes
 16269                           
 16270                           ;ring_buffer_LUT.c: 151: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 16271  010260  0EE1               	movlw	low STR_62
 16272  010262  0101               	movlb	1	; () banked
 16273  010264  6FAC               	movwf	printf@f& (0+255),b
 16274  010266  0EF1               	movlw	high STR_62
 16275  010268  6FAD               	movwf	(printf@f+1)& (0+255),b
 16276  01026A  EC95  F0D4         	call	_printf	;wreg free
 16277                           
 16278                           ;ring_buffer_LUT.c: 154: for (int userID = 0; userID <= 7; userID++) {
 16279  01026E  0E00               	movlw	0
 16280  010270  0102               	movlb	2	; () banked
 16281  010272  6FC7               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 16282  010274  0E00               	movlw	0
 16283  010276  6FC6               	movwf	ringBufferLUT@userID& (0+255),b
 16284  010278                     l22858:
 16285                           
 16286                           ; BSR set to: 2
 16287  010278  BFC7               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 16288  01027A  D006               	goto	l1478
 16289  01027C  51C7               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 16290  01027E  E124               	bnz	l22868
 16291  010280  0E08               	movlw	8
 16292  010282  5DC6               	subwf	ringBufferLUT@userID& (0+255),w,b
 16293  010284  B0D8               	btfsc	status,0,c
 16294  010286  D020               	goto	u33440
 16295  010288                     l1478:
 16296                           
 16297                           ; BSR set to: 2
 16298                           ;ring_buffer_LUT.c: 156: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 16299                           ;ring_buffer_LUT.c: 157: userID,
 16300                           ;ring_buffer_LUT.c: 158: (2 * userID),
 16301                           ;ring_buffer_LUT.c: 159: getUserID(userID));
 16302                           
 16303                           ; BSR set to: 2
 16304  010288  0E69               	movlw	low STR_63
 16305  01028A  0101               	movlb	1	; () banked
 16306  01028C  6FAC               	movwf	printf@f& (0+255),b
 16307  01028E  0EF4               	movlw	high STR_63
 16308  010290  6FAD               	movwf	(printf@f+1)& (0+255),b
 16309  010292  C2C6  F1AE         	movff	ringBufferLUT@userID,?_printf+2
 16310  010296  C2C7  F1AF         	movff	ringBufferLUT@userID+1,?_printf+3
 16311  01029A  90D8               	bcf	status,0,c
 16312  01029C  0102               	movlb	2	; () banked
 16313  01029E  35C6               	rlcf	ringBufferLUT@userID& (0+255),w,b
 16314  0102A0  0101               	movlb	1	; () banked
 16315  0102A2  6FB0               	movwf	(?_printf+4)& (0+255),b
 16316  0102A4  0102               	movlb	2	; () banked
 16317  0102A6  35C7               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 16318  0102A8  0101               	movlb	1	; () banked
 16319  0102AA  6FB1               	movwf	(?_printf+5)& (0+255),b
 16320  0102AC  0102               	movlb	2	; () banked
 16321  0102AE  51C6               	movf	ringBufferLUT@userID& (0+255),w,b
 16322  0102B0  ECB5  F0D3         	call	_getUserID
 16323  0102B4  C122  F1B2         	movff	?_getUserID,?_printf+6
 16324  0102B8  C123  F1B3         	movff	?_getUserID+1,?_printf+7
 16325  0102BC  EC95  F0D4         	call	_printf	;wreg free
 16326  0102C0  0102               	movlb	2	; () banked
 16327  0102C2  4BC6               	infsnz	ringBufferLUT@userID& (0+255),f,b
 16328  0102C4  2BC7               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 16329  0102C6  D7D8               	goto	l22858
 16330  0102C8                     u33440:
 16331  0102C8                     l22868:
 16332                           
 16333                           ; BSR set to: 2
 16334                           ;ring_buffer_LUT.c: 161: }
 16335                           ;ring_buffer_LUT.c: 163: terminal_textAttributesReset();
 16336  0102C8  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16337                           
 16338                           ;ring_buffer_LUT.c: 165: }
 16339  0102CC  0012               	return	
 16340  0102CE                     l1477:
 16341                           
 16342                           ;ring_buffer_LUT.c: 168: else if((0 == strcmp(line, "ADC Errors?"))) {
 16343  0102CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16344  0102D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16345  0102D6  0E04               	movlw	low STR_64
 16346  0102D8  0101               	movlb	1	; () banked
 16347  0102DA  6F19               	movwf	strcmp@s2& (0+255),b
 16348  0102DC  0EFF               	movlw	high STR_64
 16349  0102DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16350  0102E0  EC9F  F0D1         	call	_strcmp	;wreg free
 16351  0102E4  0101               	movlb	1	; () banked
 16352  0102E6  5117               	movf	?_strcmp& (0+255),w,b
 16353  0102E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16354  0102EA  A4D8               	btfss	status,2,c
 16355  0102EC  D08C               	goto	l1481
 16356                           
 16357                           ; BSR set to: 1
 16358                           ;ring_buffer_LUT.c: 170: if (getADCError()) {
 16359  0102EE  ECB5  F0D5         	call	_getADCError	;wreg free
 16360  0102F2  0900               	iorlw	0
 16361  0102F4  B4D8               	btfsc	status,2,c
 16362  0102F6  D075               	goto	l1482
 16363                           
 16364                           ;ring_buffer_LUT.c: 172: terminal_textAttributes(RED, BLACK, NORMAL);
 16365  0102F8  0E00               	movlw	0
 16366  0102FA  0101               	movlb	1	; () banked
 16367  0102FC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16368  0102FE  0E00               	movlw	0
 16369  010300  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16370  010302  0E01               	movlw	1
 16371  010304  EC30  F0AA         	call	_terminal_textAttributes
 16372                           
 16373                           ;ring_buffer_LUT.c: 173: printf("ADC error(s) detected!\n\r");
 16374  010308  0EA9               	movlw	low STR_65
 16375  01030A  0101               	movlb	1	; () banked
 16376  01030C  6FAC               	movwf	printf@f& (0+255),b
 16377  01030E  0EFB               	movlw	high STR_65
 16378  010310  6FAD               	movwf	(printf@f+1)& (0+255),b
 16379  010312  EC95  F0D4         	call	_printf	;wreg free
 16380                           
 16381                           ;ring_buffer_LUT.c: 174: printf("The following channels caused an ADC error:\n\r");
 16382  010316  0ED5               	movlw	low STR_66
 16383  010318  0101               	movlb	1	; () banked
 16384  01031A  6FAC               	movwf	printf@f& (0+255),b
 16385  01031C  0EF6               	movlw	high STR_66
 16386  01031E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16387  010320  EC95  F0D4         	call	_printf	;wreg free
 16388                           
 16389                           ;ring_buffer_LUT.c: 176: if (error_handler.ADC_general_error_flag) {
 16390  010324  0102               	movlb	2	; () banked
 16391  010326  5106               	movf	(_error_handler+6)& (0+255),w,b
 16392  010328  B4D8               	btfsc	status,2,c
 16393  01032A  D007               	goto	l1483
 16394                           
 16395                           ; BSR set to: 2
 16396                           ;ring_buffer_LUT.c: 177: printf("    General ADC error\n\r");
 16397  01032C  0EF4               	movlw	low STR_67
 16398  01032E  0101               	movlb	1	; () banked
 16399  010330  6FAC               	movwf	printf@f& (0+255),b
 16400  010332  0EFB               	movlw	high STR_67
 16401  010334  6FAD               	movwf	(printf@f+1)& (0+255),b
 16402  010336  EC95  F0D4         	call	_printf	;wreg free
 16403  01033A                     l1483:
 16404                           
 16405                           ;ring_buffer_LUT.c: 178: }
 16406                           ;ring_buffer_LUT.c: 180: if (error_handler.AVSS_ADC_error_flag) {
 16407  01033A  0102               	movlb	2	; () banked
 16408  01033C  5103               	movf	(_error_handler+3)& (0+255),w,b
 16409  01033E  B4D8               	btfsc	status,2,c
 16410  010340  D007               	goto	l1484
 16411                           
 16412                           ; BSR set to: 2
 16413                           ;ring_buffer_LUT.c: 181: printf("    AVSS\n\r");
 16414  010342  0E3E               	movlw	low STR_68
 16415  010344  0101               	movlb	1	; () banked
 16416  010346  6FAC               	movwf	printf@f& (0+255),b
 16417  010348  0EFF               	movlw	high STR_68
 16418  01034A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16419  01034C  EC95  F0D4         	call	_printf	;wreg free
 16420  010350                     l1484:
 16421                           
 16422                           ;ring_buffer_LUT.c: 182: }
 16423                           ;ring_buffer_LUT.c: 184: if (error_handler.FVR_ADC_error_flag) {
 16424  010350  0102               	movlb	2	; () banked
 16425  010352  5105               	movf	(_error_handler+5)& (0+255),w,b
 16426  010354  B4D8               	btfsc	status,2,c
 16427  010356  D007               	goto	l1485
 16428                           
 16429                           ; BSR set to: 2
 16430                           ;ring_buffer_LUT.c: 185: printf("    FVR\n\r");
 16431  010358  0E74               	movlw	low STR_69
 16432  01035A  0101               	movlb	1	; () banked
 16433  01035C  6FAC               	movwf	printf@f& (0+255),b
 16434  01035E  0EFF               	movlw	high STR_69
 16435  010360  6FAD               	movwf	(printf@f+1)& (0+255),b
 16436  010362  EC95  F0D4         	call	_printf	;wreg free
 16437  010366                     l1485:
 16438                           
 16439                           ;ring_buffer_LUT.c: 186: }
 16440                           ;ring_buffer_LUT.c: 188: if (error_handler.ISNS_ADC_error_flag) {
 16441  010366  0102               	movlb	2	; () banked
 16442  010368  5100               	movf	_error_handler& (0+255),w,b
 16443  01036A  B4D8               	btfsc	status,2,c
 16444  01036C  D007               	goto	l1486
 16445                           
 16446                           ; BSR set to: 2
 16447                           ;ring_buffer_LUT.c: 189: printf("    ISNS\n\r");
 16448  01036E  0E33               	movlw	low STR_70
 16449  010370  0101               	movlb	1	; () banked
 16450  010372  6FAC               	movwf	printf@f& (0+255),b
 16451  010374  0EFF               	movlw	high STR_70
 16452  010376  6FAD               	movwf	(printf@f+1)& (0+255),b
 16453  010378  EC95  F0D4         	call	_printf	;wreg free
 16454  01037C                     l1486:
 16455                           
 16456                           ;ring_buffer_LUT.c: 190: }
 16457                           ;ring_buffer_LUT.c: 192: if (error_handler.POS12_ADC_error_flag) {
 16458  01037C  0102               	movlb	2	; () banked
 16459  01037E  5101               	movf	(_error_handler+1)& (0+255),w,b
 16460  010380  B4D8               	btfsc	status,2,c
 16461  010382  D007               	goto	l1487
 16462                           
 16463                           ; BSR set to: 2
 16464                           ;ring_buffer_LUT.c: 193: printf("    POS12\n\r");
 16465  010384  0EF8               	movlw	low STR_71
 16466  010386  0101               	movlb	1	; () banked
 16467  010388  6FAC               	movwf	printf@f& (0+255),b
 16468  01038A  0EFE               	movlw	high STR_71
 16469  01038C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16470  01038E  EC95  F0D4         	call	_printf	;wreg free
 16471  010392                     l1487:
 16472                           
 16473                           ;ring_buffer_LUT.c: 194: }
 16474                           ;ring_buffer_LUT.c: 196: if (error_handler.POS3P3_ADC_error_flag) {
 16475  010392  0102               	movlb	2	; () banked
 16476  010394  5102               	movf	(_error_handler+2)& (0+255),w,b
 16477  010396  B4D8               	btfsc	status,2,c
 16478  010398  D007               	goto	l1488
 16479                           
 16480                           ; BSR set to: 2
 16481                           ;ring_buffer_LUT.c: 197: printf("    POS3P3\n\r");
 16482  01039A  0E84               	movlw	low STR_72
 16483  01039C  0101               	movlb	1	; () banked
 16484  01039E  6FAC               	movwf	printf@f& (0+255),b
 16485  0103A0  0EFE               	movlw	high STR_72
 16486  0103A2  6FAD               	movwf	(printf@f+1)& (0+255),b
 16487  0103A4  EC95  F0D4         	call	_printf	;wreg free
 16488  0103A8                     l1488:
 16489                           
 16490                           ;ring_buffer_LUT.c: 198: }
 16491                           ;ring_buffer_LUT.c: 200: if (error_handler.Temp_ADC_error_flag) {
 16492  0103A8  0102               	movlb	2	; () banked
 16493  0103AA  5104               	movf	(_error_handler+4)& (0+255),w,b
 16494  0103AC  B4D8               	btfsc	status,2,c
 16495  0103AE  D007               	goto	l1489
 16496                           
 16497                           ; BSR set to: 2
 16498                           ;ring_buffer_LUT.c: 201: printf("    Die Temp\n\r");
 16499  0103B0  0EF4               	movlw	low STR_73
 16500  0103B2  0101               	movlb	1	; () banked
 16501  0103B4  6FAC               	movwf	printf@f& (0+255),b
 16502  0103B6  0EFD               	movlw	high STR_73
 16503  0103B8  6FAD               	movwf	(printf@f+1)& (0+255),b
 16504  0103BA  EC95  F0D4         	call	_printf	;wreg free
 16505  0103BE                     l1489:
 16506                           
 16507                           ;ring_buffer_LUT.c: 202: }
 16508                           ;ring_buffer_LUT.c: 204: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16509  0103BE  0E00               	movlw	0
 16510  0103C0  0101               	movlb	1	; () banked
 16511  0103C2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16512  0103C4  0E00               	movlw	0
 16513  0103C6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16514  0103C8  0E03               	movlw	3
 16515  0103CA  EC30  F0AA         	call	_terminal_textAttributes
 16516                           
 16517                           ;ring_buffer_LUT.c: 205: printf("Call 'Clear ADC Errors' to clear ADC error(s)\n\r");
 16518  0103CE  0E76               	movlw	low STR_74
 16519  0103D0  0101               	movlb	1	; () banked
 16520  0103D2  6FAC               	movwf	printf@f& (0+255),b
 16521  0103D4  0EF6               	movlw	high STR_74
 16522  0103D6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16523  0103D8  EC95  F0D4         	call	_printf	;wreg free
 16524                           
 16525                           ;ring_buffer_LUT.c: 206: terminal_textAttributesReset();
 16526  0103DC  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16527                           
 16528                           ;ring_buffer_LUT.c: 208: }
 16529  0103E0  0012               	return	
 16530  0103E2                     l1482:
 16531                           
 16532                           ;ring_buffer_LUT.c: 210: else {
 16533                           ;ring_buffer_LUT.c: 212: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16534  0103E2  0E00               	movlw	0
 16535  0103E4  0101               	movlb	1	; () banked
 16536  0103E6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16537  0103E8  0E00               	movlw	0
 16538  0103EA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16539  0103EC  0E02               	movlw	2
 16540  0103EE  EC30  F0AA         	call	_terminal_textAttributes
 16541                           
 16542                           ;ring_buffer_LUT.c: 213: printf("No ADC error(s) detected\n\r");
 16543  0103F2  0E74               	movlw	low STR_75
 16544  0103F4  0101               	movlb	1	; () banked
 16545  0103F6  6FAC               	movwf	printf@f& (0+255),b
 16546  0103F8  0EFB               	movlw	high STR_75
 16547  0103FA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16548  0103FC  EC95  F0D4         	call	_printf	;wreg free
 16549                           
 16550                           ;ring_buffer_LUT.c: 214: terminal_textAttributesReset();
 16551  010400  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16552                           
 16553                           ;ring_buffer_LUT.c: 216: }
 16554                           ;ring_buffer_LUT.c: 218: }
 16555  010404  0012               	return	
 16556  010406                     l1481:
 16557                           
 16558                           ;ring_buffer_LUT.c: 221: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 16559  010406  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16560  01040A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16561  01040E  0E64               	movlw	low STR_76
 16562  010410  0101               	movlb	1	; () banked
 16563  010412  6F19               	movwf	strcmp@s2& (0+255),b
 16564  010414  0EFD               	movlw	high STR_76
 16565  010416  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16566  010418  EC9F  F0D1         	call	_strcmp	;wreg free
 16567  01041C  0101               	movlb	1	; () banked
 16568  01041E  5117               	movf	?_strcmp& (0+255),w,b
 16569  010420  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16570  010422  A4D8               	btfss	status,2,c
 16571  010424  D014               	goto	l1492
 16572                           
 16573                           ; BSR set to: 1
 16574                           ;ring_buffer_LUT.c: 223: clearADCErrors();
 16575  010426  EC4F  F0D7         	call	_clearADCErrors	;wreg free
 16576                           
 16577                           ;ring_buffer_LUT.c: 225: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16578  01042A  0E00               	movlw	0
 16579  01042C  0101               	movlb	1	; () banked
 16580  01042E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16581  010430  0E00               	movlw	0
 16582  010432  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16583  010434  0E02               	movlw	2
 16584  010436  EC30  F0AA         	call	_terminal_textAttributes
 16585                           
 16586                           ;ring_buffer_LUT.c: 226: printf("ADC Error(s) cleared\n\r");
 16587  01043A  0E23               	movlw	low STR_77
 16588  01043C  0101               	movlb	1	; () banked
 16589  01043E  6FAC               	movwf	printf@f& (0+255),b
 16590  010440  0EFC               	movlw	high STR_77
 16591  010442  6FAD               	movwf	(printf@f+1)& (0+255),b
 16592  010444  EC95  F0D4         	call	_printf	;wreg free
 16593                           
 16594                           ;ring_buffer_LUT.c: 227: terminal_textAttributesReset();
 16595  010448  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16596                           
 16597                           ;ring_buffer_LUT.c: 229: }
 16598  01044C  0012               	return	
 16599  01044E                     l1492:
 16600                           
 16601                           ;ring_buffer_LUT.c: 232: else if((0 == strcmp(line, "Comm Errors?"))) {
 16602  01044E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16603  010452  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16604  010456  0EB8               	movlw	low STR_78
 16605  010458  0101               	movlb	1	; () banked
 16606  01045A  6F19               	movwf	strcmp@s2& (0+255),b
 16607  01045C  0EFE               	movlw	high STR_78
 16608  01045E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16609  010460  EC9F  F0D1         	call	_strcmp	;wreg free
 16610  010464  0101               	movlb	1	; () banked
 16611  010466  5117               	movf	?_strcmp& (0+255),w,b
 16612  010468  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16613  01046A  A4D8               	btfss	status,2,c
 16614  01046C  D04E               	goto	l1494
 16615                           
 16616                           ; BSR set to: 1
 16617                           ;ring_buffer_LUT.c: 234: if (getCOMMError()) {
 16618  01046E  EC22  F0D8         	call	_getCOMMError	;wreg free
 16619  010472  0900               	iorlw	0
 16620  010474  B4D8               	btfsc	status,2,c
 16621  010476  D037               	goto	l1495
 16622                           
 16623                           ;ring_buffer_LUT.c: 236: terminal_textAttributes(RED, BLACK, NORMAL);
 16624  010478  0E00               	movlw	0
 16625  01047A  0101               	movlb	1	; () banked
 16626  01047C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16627  01047E  0E00               	movlw	0
 16628  010480  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16629  010482  0E01               	movlw	1
 16630  010484  EC30  F0AA         	call	_terminal_textAttributes
 16631                           
 16632                           ;ring_buffer_LUT.c: 237: printf("Communications error(s) detected! Interfaces causing er
      +                          ror(s):\n\r");
 16633  010488  0EA0               	movlw	low STR_79
 16634  01048A  0101               	movlb	1	; () banked
 16635  01048C  6FAC               	movwf	printf@f& (0+255),b
 16636  01048E  0EF1               	movlw	high STR_79
 16637  010490  6FAD               	movwf	(printf@f+1)& (0+255),b
 16638  010492  EC95  F0D4         	call	_printf	;wreg free
 16639                           
 16640                           ;ring_buffer_LUT.c: 239: if (error_handler.I2C_COMM_error_flag) {
 16641  010496  0102               	movlb	2	; () banked
 16642  010498  5107               	movf	(_error_handler+7)& (0+255),w,b
 16643  01049A  B4D8               	btfsc	status,2,c
 16644  01049C  D007               	goto	l1496
 16645                           
 16646                           ; BSR set to: 2
 16647                           ;ring_buffer_LUT.c: 240: printf("    OLED Display I2C\n\r");
 16648  01049E  0E0C               	movlw	low STR_80
 16649  0104A0  0101               	movlb	1	; () banked
 16650  0104A2  6FAC               	movwf	printf@f& (0+255),b
 16651  0104A4  0EFC               	movlw	high STR_80
 16652  0104A6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16653  0104A8  EC95  F0D4         	call	_printf	;wreg free
 16654  0104AC                     l1496:
 16655                           
 16656                           ;ring_buffer_LUT.c: 241: }
 16657                           ;ring_buffer_LUT.c: 243: if (error_handler.USB_UART_COMM_error_flag) {
 16658  0104AC  0102               	movlb	2	; () banked
 16659  0104AE  5108               	movf	(_error_handler+8)& (0+255),w,b
 16660  0104B0  B4D8               	btfsc	status,2,c
 16661  0104B2  D007               	goto	l1497
 16662                           
 16663                           ; BSR set to: 2
 16664                           ;ring_buffer_LUT.c: 244: printf("    USB UART (this interface\n\r");
 16665  0104B4  0E6E               	movlw	low STR_81
 16666  0104B6  0101               	movlb	1	; () banked
 16667  0104B8  6FAC               	movwf	printf@f& (0+255),b
 16668  0104BA  0EFA               	movlw	high STR_81
 16669  0104BC  6FAD               	movwf	(printf@f+1)& (0+255),b
 16670  0104BE  EC95  F0D4         	call	_printf	;wreg free
 16671  0104C2                     l1497:
 16672                           
 16673                           ;ring_buffer_LUT.c: 245: }
 16674                           ;ring_buffer_LUT.c: 247: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16675  0104C2  0E00               	movlw	0
 16676  0104C4  0101               	movlb	1	; () banked
 16677  0104C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16678  0104C8  0E00               	movlw	0
 16679  0104CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16680  0104CC  0E03               	movlw	3
 16681  0104CE  EC30  F0AA         	call	_terminal_textAttributes
 16682                           
 16683                           ;ring_buffer_LUT.c: 248: printf("Call 'Clear COMM Errors' to clear communications error(
      +                          s)\n\r");
 16684  0104D2  0E9E               	movlw	low STR_82
 16685  0104D4  0101               	movlb	1	; () banked
 16686  0104D6  6FAC               	movwf	printf@f& (0+255),b
 16687  0104D8  0EF2               	movlw	high STR_82
 16688  0104DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16689  0104DC  EC95  F0D4         	call	_printf	;wreg free
 16690                           
 16691                           ;ring_buffer_LUT.c: 249: terminal_textAttributesReset();
 16692  0104E0  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16693                           
 16694                           ;ring_buffer_LUT.c: 251: }
 16695  0104E4  0012               	return	
 16696  0104E6                     l1495:
 16697                           
 16698                           ;ring_buffer_LUT.c: 253: else {
 16699                           ;ring_buffer_LUT.c: 255: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16700  0104E6  0E00               	movlw	0
 16701  0104E8  0101               	movlb	1	; () banked
 16702  0104EA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16703  0104EC  0E00               	movlw	0
 16704  0104EE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16705  0104F0  0E02               	movlw	2
 16706  0104F2  EC30  F0AA         	call	_terminal_textAttributes
 16707                           
 16708                           ;ring_buffer_LUT.c: 256: printf("No communications error(s) detected\n\r");
 16709  0104F6  0E87               	movlw	low STR_83
 16710  0104F8  0101               	movlb	1	; () banked
 16711  0104FA  6FAC               	movwf	printf@f& (0+255),b
 16712  0104FC  0EF8               	movlw	high STR_83
 16713  0104FE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16714  010500  EC95  F0D4         	call	_printf	;wreg free
 16715                           
 16716                           ;ring_buffer_LUT.c: 257: terminal_textAttributesReset();
 16717  010504  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16718                           
 16719                           ;ring_buffer_LUT.c: 259: }
 16720                           ;ring_buffer_LUT.c: 260: }
 16721  010508  0012               	return	
 16722  01050A                     l1494:
 16723                           
 16724                           ;ring_buffer_LUT.c: 263: else if((0 == strcmp(line, "Clear Comm Errors"))) {
 16725  01050A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16726  01050E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16727  010512  0EDB               	movlw	low STR_84
 16728  010514  0101               	movlb	1	; () banked
 16729  010516  6F19               	movwf	strcmp@s2& (0+255),b
 16730  010518  0EFC               	movlw	high STR_84
 16731  01051A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16732  01051C  EC9F  F0D1         	call	_strcmp	;wreg free
 16733  010520  0101               	movlb	1	; () banked
 16734  010522  5117               	movf	?_strcmp& (0+255),w,b
 16735  010524  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16736  010526  A4D8               	btfss	status,2,c
 16737  010528  D014               	goto	l1500
 16738                           
 16739                           ; BSR set to: 1
 16740                           ;ring_buffer_LUT.c: 265: clearCOMMErrors();
 16741  01052A  EC7D  F0D8         	call	_clearCOMMErrors	;wreg free
 16742                           
 16743                           ;ring_buffer_LUT.c: 267: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16744  01052E  0E00               	movlw	0
 16745  010530  0101               	movlb	1	; () banked
 16746  010532  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16747  010534  0E00               	movlw	0
 16748  010536  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16749  010538  0E02               	movlw	2
 16750  01053A  EC30  F0AA         	call	_terminal_textAttributes
 16751                           
 16752                           ;ring_buffer_LUT.c: 268: printf("Communications error(s) cleared\n\r");
 16753  01053E  0E86               	movlw	low STR_85
 16754  010540  0101               	movlb	1	; () banked
 16755  010542  6FAC               	movwf	printf@f& (0+255),b
 16756  010544  0EF9               	movlw	high STR_85
 16757  010546  6FAD               	movwf	(printf@f+1)& (0+255),b
 16758  010548  EC95  F0D4         	call	_printf	;wreg free
 16759                           
 16760                           ;ring_buffer_LUT.c: 269: terminal_textAttributesReset();
 16761  01054C  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16762                           
 16763                           ;ring_buffer_LUT.c: 271: }
 16764  010550  0012               	return	
 16765  010552                     l1500:
 16766                           
 16767                           ;ring_buffer_LUT.c: 275: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 16768  010552  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16769  010556  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16770  01055A  0E95               	movlw	low STR_86
 16771  01055C  0101               	movlb	1	; () banked
 16772  01055E  6F19               	movwf	strcmp@s2& (0+255),b
 16773  010560  0EFD               	movlw	high STR_86
 16774  010562  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16775  010564  EC9F  F0D1         	call	_strcmp	;wreg free
 16776  010568  0101               	movlb	1	; () banked
 16777  01056A  5117               	movf	?_strcmp& (0+255),w,b
 16778  01056C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16779  01056E  A4D8               	btfss	status,2,c
 16780  010570  D019               	goto	l1502
 16781                           
 16782                           ; BSR set to: 1
 16783                           ;ring_buffer_LUT.c: 277: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16784  010572  0E00               	movlw	0
 16785  010574  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16786  010576  0E00               	movlw	0
 16787  010578  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16788  01057A  0E06               	movlw	6
 16789  01057C  EC30  F0AA         	call	_terminal_textAttributes
 16790                           
 16791                           ;ring_buffer_LUT.c: 278: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 16792  010580  0ED2               	movlw	low STR_87
 16793  010582  0101               	movlb	1	; () banked
 16794  010584  6FAC               	movwf	printf@f& (0+255),b
 16795  010586  0EF8               	movlw	high STR_87
 16796  010588  6FAD               	movwf	(printf@f+1)& (0+255),b
 16797  01058A  C1DA  F1AE         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 16798  01058E  C1DB  F1AF         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 16799  010592  C1DC  F1B0         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 16800  010596  C1DD  F1B1         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 16801  01059A  EC95  F0D4         	call	_printf	;wreg free
 16802                           
 16803                           ;ring_buffer_LUT.c: 279: terminal_textAttributesReset();
 16804  01059E  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16805                           
 16806                           ;ring_buffer_LUT.c: 281: }
 16807  0105A2  0012               	return	
 16808  0105A4                     l1502:
 16809                           
 16810                           ;ring_buffer_LUT.c: 284: else if((0 == strcmp(line, "Measure POS12?"))) {
 16811  0105A4  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16812  0105A8  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16813  0105AC  0E03               	movlw	low STR_88
 16814  0105AE  0101               	movlb	1	; () banked
 16815  0105B0  6F19               	movwf	strcmp@s2& (0+255),b
 16816  0105B2  0EFE               	movlw	high STR_88
 16817  0105B4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16818  0105B6  EC9F  F0D1         	call	_strcmp	;wreg free
 16819  0105BA  0101               	movlb	1	; () banked
 16820  0105BC  5117               	movf	?_strcmp& (0+255),w,b
 16821  0105BE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16822  0105C0  A4D8               	btfss	status,2,c
 16823  0105C2  D019               	goto	l1504
 16824                           
 16825                           ; BSR set to: 1
 16826                           ;ring_buffer_LUT.c: 286: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16827  0105C4  0E00               	movlw	0
 16828  0105C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16829  0105C8  0E00               	movlw	0
 16830  0105CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16831  0105CC  0E06               	movlw	6
 16832  0105CE  EC30  F0AA         	call	_terminal_textAttributes
 16833                           
 16834                           ;ring_buffer_LUT.c: 287: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 16835  0105D2  0E40               	movlw	low STR_89
 16836  0105D4  0101               	movlb	1	; () banked
 16837  0105D6  6FAC               	movwf	printf@f& (0+255),b
 16838  0105D8  0EF9               	movlw	high STR_89
 16839  0105DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16840  0105DC  C1D6  F1AE         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 16841  0105E0  C1D7  F1AF         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 16842  0105E4  C1D8  F1B0         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 16843  0105E8  C1D9  F1B1         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 16844  0105EC  EC95  F0D4         	call	_printf	;wreg free
 16845                           
 16846                           ;ring_buffer_LUT.c: 288: terminal_textAttributesReset();
 16847  0105F0  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16848                           
 16849                           ;ring_buffer_LUT.c: 290: }
 16850  0105F4  0012               	return	
 16851  0105F6                     l1504:
 16852                           
 16853                           ;ring_buffer_LUT.c: 293: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 16854  0105F6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16855  0105FA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16856  0105FE  0EC9               	movlw	low STR_90
 16857  010600  0101               	movlb	1	; () banked
 16858  010602  6F19               	movwf	strcmp@s2& (0+255),b
 16859  010604  0EFC               	movlw	high STR_90
 16860  010606  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16861  010608  EC9F  F0D1         	call	_strcmp	;wreg free
 16862  01060C  0101               	movlb	1	; () banked
 16863  01060E  5117               	movf	?_strcmp& (0+255),w,b
 16864  010610  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16865  010612  A4D8               	btfss	status,2,c
 16866  010614  D019               	goto	l1506
 16867                           
 16868                           ; BSR set to: 1
 16869                           ;ring_buffer_LUT.c: 295: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16870  010616  0E00               	movlw	0
 16871  010618  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16872  01061A  0E00               	movlw	0
 16873  01061C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16874  01061E  0E06               	movlw	6
 16875  010620  EC30  F0AA         	call	_terminal_textAttributes
 16876                           
 16877                           ;ring_buffer_LUT.c: 296: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 16878  010624  0E1C               	movlw	low STR_91
 16879  010626  0101               	movlb	1	; () banked
 16880  010628  6FAC               	movwf	printf@f& (0+255),b
 16881  01062A  0EF9               	movlw	high STR_91
 16882  01062C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16883  01062E  C1D2  F1AE         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 16884  010632  C1D3  F1AF         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 16885  010636  C1D4  F1B0         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 16886  01063A  C1D5  F1B1         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 16887  01063E  EC95  F0D4         	call	_printf	;wreg free
 16888                           
 16889                           ;ring_buffer_LUT.c: 297: terminal_textAttributesReset();
 16890  010642  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16891                           
 16892                           ;ring_buffer_LUT.c: 301: }
 16893  010646  0012               	return	
 16894  010648                     l1506:
 16895                           
 16896                           ;ring_buffer_LUT.c: 304: else if((0 == strcmp(line, "Measure FVR?"))) {
 16897  010648  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16898  01064C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16899  010650  0EAB               	movlw	low STR_92
 16900  010652  0101               	movlb	1	; () banked
 16901  010654  6F19               	movwf	strcmp@s2& (0+255),b
 16902  010656  0EFE               	movlw	high STR_92
 16903  010658  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16904  01065A  EC9F  F0D1         	call	_strcmp	;wreg free
 16905  01065E  0101               	movlb	1	; () banked
 16906  010660  5117               	movf	?_strcmp& (0+255),w,b
 16907  010662  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16908  010664  A4D8               	btfss	status,2,c
 16909  010666  D019               	goto	l1508
 16910                           
 16911                           ; BSR set to: 1
 16912                           ;ring_buffer_LUT.c: 306: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16913  010668  0E00               	movlw	0
 16914  01066A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16915  01066C  0E00               	movlw	0
 16916  01066E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16917  010670  0E06               	movlw	6
 16918  010672  EC30  F0AA         	call	_terminal_textAttributes
 16919                           
 16920                           ;ring_buffer_LUT.c: 307: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 16921  010676  0E8A               	movlw	low STR_93
 16922  010678  0101               	movlb	1	; () banked
 16923  01067A  6FAC               	movwf	printf@f& (0+255),b
 16924  01067C  0EF3               	movlw	high STR_93
 16925  01067E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16926  010680  C1E2  F1AE         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 16927  010684  C1E3  F1AF         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 16928  010688  C1E4  F1B0         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 16929  01068C  C1E5  F1B1         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 16930  010690  EC95  F0D4         	call	_printf	;wreg free
 16931                           
 16932                           ;ring_buffer_LUT.c: 308: terminal_textAttributesReset();
 16933  010694  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16934                           
 16935                           ;ring_buffer_LUT.c: 310: }
 16936  010698  0012               	return	
 16937  01069A                     l1508:
 16938                           
 16939                           ;ring_buffer_LUT.c: 313: else if((0 == strcmp(line, "Measure AVSS?"))) {
 16940  01069A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16941  01069E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16942  0106A2  0E3F               	movlw	low STR_94
 16943  0106A4  0101               	movlb	1	; () banked
 16944  0106A6  6F19               	movwf	strcmp@s2& (0+255),b
 16945  0106A8  0EFE               	movlw	high STR_94
 16946  0106AA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16947  0106AC  EC9F  F0D1         	call	_strcmp	;wreg free
 16948  0106B0  0101               	movlb	1	; () banked
 16949  0106B2  5117               	movf	?_strcmp& (0+255),w,b
 16950  0106B4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16951  0106B6  A4D8               	btfss	status,2,c
 16952  0106B8  D019               	goto	l1510
 16953                           
 16954                           ; BSR set to: 1
 16955                           ;ring_buffer_LUT.c: 315: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16956  0106BA  0E00               	movlw	0
 16957  0106BC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16958  0106BE  0E00               	movlw	0
 16959  0106C0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16960  0106C2  0E06               	movlw	6
 16961  0106C4  EC30  F0AA         	call	_terminal_textAttributes
 16962                           
 16963                           ;ring_buffer_LUT.c: 316: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 16964  0106C8  0EAD               	movlw	low STR_95
 16965  0106CA  0101               	movlb	1	; () banked
 16966  0106CC  6FAC               	movwf	printf@f& (0+255),b
 16967  0106CE  0EF8               	movlw	high STR_95
 16968  0106D0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16969  0106D2  C240  F1AE         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 16970  0106D6  C241  F1AF         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 16971  0106DA  C242  F1B0         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 16972  0106DE  C243  F1B1         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 16973  0106E2  EC95  F0D4         	call	_printf	;wreg free
 16974                           
 16975                           ;ring_buffer_LUT.c: 317: terminal_textAttributesReset();
 16976  0106E6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16977                           
 16978                           ;ring_buffer_LUT.c: 319: }
 16979  0106EA  0012               	return	
 16980  0106EC                     l1510:
 16981                           
 16982                           ;ring_buffer_LUT.c: 322: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 16983  0106EC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16984  0106F0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16985  0106F4  0E8F               	movlw	low STR_96
 16986  0106F6  0101               	movlb	1	; () banked
 16987  0106F8  6F19               	movwf	strcmp@s2& (0+255),b
 16988  0106FA  0EFB               	movlw	high STR_96
 16989  0106FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16990  0106FE  EC9F  F0D1         	call	_strcmp	;wreg free
 16991  010702  0101               	movlb	1	; () banked
 16992  010704  5117               	movf	?_strcmp& (0+255),w,b
 16993  010706  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16994  010708  A4D8               	btfss	status,2,c
 16995  01070A  D019               	goto	l1512
 16996                           
 16997                           ; BSR set to: 1
 16998                           ;ring_buffer_LUT.c: 324: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16999  01070C  0E00               	movlw	0
 17000  01070E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17001  010710  0E00               	movlw	0
 17002  010712  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17003  010714  0E06               	movlw	6
 17004  010716  EC30  F0AA         	call	_terminal_textAttributes
 17005                           
 17006                           ;ring_buffer_LUT.c: 325: printf("Measured Current is %.3f Amps\n\r", Imeas);
 17007  01071A  0E2F               	movlw	low STR_97
 17008  01071C  0101               	movlb	1	; () banked
 17009  01071E  6FAC               	movwf	printf@f& (0+255),b
 17010  010720  0EFA               	movlw	high STR_97
 17011  010722  6FAD               	movwf	(printf@f+1)& (0+255),b
 17012  010724  C234  F1AE         	movff	_Imeas,?_printf+2	;volatile
 17013  010728  C235  F1AF         	movff	_Imeas+1,?_printf+3	;volatile
 17014  01072C  C236  F1B0         	movff	_Imeas+2,?_printf+4	;volatile
 17015  010730  C237  F1B1         	movff	_Imeas+3,?_printf+5	;volatile
 17016  010734  EC95  F0D4         	call	_printf	;wreg free
 17017                           
 17018                           ;ring_buffer_LUT.c: 326: terminal_textAttributesReset();
 17019  010738  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17020                           
 17021                           ;ring_buffer_LUT.c: 328: }
 17022  01073C  0012               	return	
 17023  01073E                     l1512:
 17024                           
 17025                           ;ring_buffer_LUT.c: 331: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 17026  01073E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17027  010742  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17028  010746  0E7A               	movlw	low STR_98
 17029  010748  0101               	movlb	1	; () banked
 17030  01074A  6F19               	movwf	strcmp@s2& (0+255),b
 17031  01074C  0EFC               	movlw	high STR_98
 17032  01074E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17033  010750  EC9F  F0D1         	call	_strcmp	;wreg free
 17034  010754  0101               	movlb	1	; () banked
 17035  010756  5117               	movf	?_strcmp& (0+255),w,b
 17036  010758  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17037  01075A  A4D8               	btfss	status,2,c
 17038  01075C  D019               	goto	l1514
 17039                           
 17040                           ; BSR set to: 1
 17041                           ;ring_buffer_LUT.c: 333: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17042  01075E  0E00               	movlw	0
 17043  010760  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17044  010762  0E00               	movlw	0
 17045  010764  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17046  010766  0E06               	movlw	6
 17047  010768  EC30  F0AA         	call	_terminal_textAttributes
 17048                           
 17049                           ;ring_buffer_LUT.c: 334: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 17050  01076C  0EA8               	movlw	low STR_99
 17051  01076E  0101               	movlb	1	; () banked
 17052  010770  6FAC               	movwf	printf@f& (0+255),b
 17053  010772  0EF9               	movlw	high STR_99
 17054  010774  6FAD               	movwf	(printf@f+1)& (0+255),b
 17055  010776  C1CA  F1AE         	movff	_Irms,?_printf+2	;volatile
 17056  01077A  C1CB  F1AF         	movff	_Irms+1,?_printf+3	;volatile
 17057  01077E  C1CC  F1B0         	movff	_Irms+2,?_printf+4	;volatile
 17058  010782  C1CD  F1B1         	movff	_Irms+3,?_printf+5	;volatile
 17059  010786  EC95  F0D4         	call	_printf	;wreg free
 17060                           
 17061                           ;ring_buffer_LUT.c: 335: terminal_textAttributesReset();
 17062  01078A  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17063                           
 17064                           ;ring_buffer_LUT.c: 337: }
 17065  01078E  0012               	return	
 17066  010790                     l1514:
 17067                           
 17068                           ;ring_buffer_LUT.c: 340: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 17069  010790  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17070  010794  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17071  010798  0E65               	movlw	low STR_100
 17072  01079A  0101               	movlb	1	; () banked
 17073  01079C  6F19               	movwf	strcmp@s2& (0+255),b
 17074  01079E  0EFC               	movlw	high STR_100
 17075  0107A0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17076  0107A2  EC9F  F0D1         	call	_strcmp	;wreg free
 17077  0107A6  0101               	movlb	1	; () banked
 17078  0107A8  5117               	movf	?_strcmp& (0+255),w,b
 17079  0107AA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17080  0107AC  A4D8               	btfss	status,2,c
 17081  0107AE  D019               	goto	l1516
 17082                           
 17083                           ; BSR set to: 1
 17084                           ;ring_buffer_LUT.c: 342: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17085  0107B0  0E00               	movlw	0
 17086  0107B2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17087  0107B4  0E00               	movlw	0
 17088  0107B6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17089  0107B8  0E06               	movlw	6
 17090  0107BA  EC30  F0AA         	call	_terminal_textAttributes
 17091                           
 17092                           ;ring_buffer_LUT.c: 343: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 17093  0107BE  0ECA               	movlw	low STR_101
 17094  0107C0  0101               	movlb	1	; () banked
 17095  0107C2  6FAC               	movwf	printf@f& (0+255),b
 17096  0107C4  0EF9               	movlw	high STR_101
 17097  0107C6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17098  0107C8  C230  F1AE         	movff	_Vrms,?_printf+2	;volatile
 17099  0107CC  C231  F1AF         	movff	_Vrms+1,?_printf+3	;volatile
 17100  0107D0  C232  F1B0         	movff	_Vrms+2,?_printf+4	;volatile
 17101  0107D4  C233  F1B1         	movff	_Vrms+3,?_printf+5	;volatile
 17102  0107D8  EC95  F0D4         	call	_printf	;wreg free
 17103                           
 17104                           ;ring_buffer_LUT.c: 344: terminal_textAttributesReset();
 17105  0107DC  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17106                           
 17107                           ;ring_buffer_LUT.c: 346: }
 17108  0107E0  0012               	return	
 17109  0107E2                     l1516:
 17110                           
 17111                           ;ring_buffer_LUT.c: 349: else if ((0 == strcmp(line, "Measure Power?"))) {
 17112  0107E2  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17113  0107E6  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17114  0107EA  0E12               	movlw	low STR_102
 17115  0107EC  0101               	movlb	1	; () banked
 17116  0107EE  6F19               	movwf	strcmp@s2& (0+255),b
 17117  0107F0  0EFE               	movlw	high STR_102
 17118  0107F2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17119  0107F4  EC9F  F0D1         	call	_strcmp	;wreg free
 17120  0107F8  0101               	movlb	1	; () banked
 17121  0107FA  5117               	movf	?_strcmp& (0+255),w,b
 17122  0107FC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17123  0107FE  A4D8               	btfss	status,2,c
 17124  010800  D019               	goto	l1518
 17125                           
 17126                           ; BSR set to: 1
 17127                           ;ring_buffer_LUT.c: 351: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17128  010802  0E00               	movlw	0
 17129  010804  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17130  010806  0E00               	movlw	0
 17131  010808  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17132  01080A  0E06               	movlw	6
 17133  01080C  EC30  F0AA         	call	_terminal_textAttributes
 17134                           
 17135                           ;ring_buffer_LUT.c: 352: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 17136  010810  0EC4               	movlw	low STR_103
 17137  010812  0101               	movlb	1	; () banked
 17138  010814  6FAC               	movwf	printf@f& (0+255),b
 17139  010816  0EF3               	movlw	high STR_103
 17140  010818  6FAD               	movwf	(printf@f+1)& (0+255),b
 17141  01081A  C1C6  F1AE         	movff	_Avg_Power,?_printf+2	;volatile
 17142  01081E  C1C7  F1AF         	movff	_Avg_Power+1,?_printf+3	;volatile
 17143  010822  C1C8  F1B0         	movff	_Avg_Power+2,?_printf+4	;volatile
 17144  010826  C1C9  F1B1         	movff	_Avg_Power+3,?_printf+5	;volatile
 17145  01082A  EC95  F0D4         	call	_printf	;wreg free
 17146                           
 17147                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
 17148  01082E  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17149                           
 17150                           ;ring_buffer_LUT.c: 355: }
 17151  010832  0012               	return	
 17152  010834                     l1518:
 17153                           
 17154                           ;ring_buffer_LUT.c: 358: else if ((0 == strcmp(line, "Measure Energy?"))) {
 17155  010834  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17156  010838  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17157  01083C  0EC5               	movlw	low STR_104
 17158  01083E  0101               	movlb	1	; () banked
 17159  010840  6F19               	movwf	strcmp@s2& (0+255),b
 17160  010842  0EFD               	movlw	high STR_104
 17161  010844  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17162  010846  EC9F  F0D1         	call	_strcmp	;wreg free
 17163  01084A  0101               	movlb	1	; () banked
 17164  01084C  5117               	movf	?_strcmp& (0+255),w,b
 17165  01084E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17166  010850  A4D8               	btfss	status,2,c
 17167  010852  D019               	goto	l1520
 17168                           
 17169                           ; BSR set to: 1
 17170                           ;ring_buffer_LUT.c: 360: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17171  010854  0E00               	movlw	0
 17172  010856  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17173  010858  0E00               	movlw	0
 17174  01085A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17175  01085C  0E06               	movlw	6
 17176  01085E  EC30  F0AA         	call	_terminal_textAttributes
 17177                           
 17178                           ;ring_buffer_LUT.c: 361: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 17179  010862  0E10               	movlw	low STR_105
 17180  010864  0101               	movlb	1	; () banked
 17181  010866  6FAC               	movwf	printf@f& (0+255),b
 17182  010868  0EF1               	movlw	high STR_105
 17183  01086A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17184  01086C  C0F6  F1AE         	movff	_Total_Energy,?_printf+2	;volatile
 17185  010870  C0F7  F1AF         	movff	_Total_Energy+1,?_printf+3	;volatile
 17186  010874  C0F8  F1B0         	movff	_Total_Energy+2,?_printf+4	;volatile
 17187  010878  C0F9  F1B1         	movff	_Total_Energy+3,?_printf+5	;volatile
 17188  01087C  EC95  F0D4         	call	_printf	;wreg free
 17189                           
 17190                           ;ring_buffer_LUT.c: 362: terminal_textAttributesReset();
 17191  010880  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17192                           
 17193                           ;ring_buffer_LUT.c: 364: }
 17194  010884  0012               	return	
 17195  010886                     l1520:
 17196                           
 17197                           ;ring_buffer_LUT.c: 367: else if ((0 == strcmp(line, "Clear Energy"))) {
 17198  010886  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17199  01088A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17200  01088E  0ED2               	movlw	low STR_106
 17201  010890  0101               	movlb	1	; () banked
 17202  010892  6F19               	movwf	strcmp@s2& (0+255),b
 17203  010894  0EFE               	movlw	high STR_106
 17204  010896  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17205  010898  EC9F  F0D1         	call	_strcmp	;wreg free
 17206  01089C  0101               	movlb	1	; () banked
 17207  01089E  5117               	movf	?_strcmp& (0+255),w,b
 17208  0108A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17209  0108A2  A4D8               	btfss	status,2,c
 17210  0108A4  D032               	goto	l1522
 17211                           
 17212                           ; BSR set to: 1
 17213                           ;ring_buffer_LUT.c: 370: Total_Energy = 0.0;
 17214  0108A6  0E00               	movlw	0
 17215  0108A8  0100               	movlb	0	; () banked
 17216  0108AA  6FF6               	movwf	_Total_Energy& (0+255),b	;volatile
 17217  0108AC  0E00               	movlw	0
 17218  0108AE  6FF7               	movwf	(_Total_Energy+1)& (0+255),b	;volatile
 17219  0108B0  0E00               	movlw	0
 17220  0108B2  6FF8               	movwf	(_Total_Energy+2)& (0+255),b	;volatile
 17221  0108B4  0E00               	movlw	0
 17222  0108B6  6FF9               	movwf	(_Total_Energy+3)& (0+255),b	;volatile
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;ring_buffer_LUT.c: 371: writeDoubleToEEPROM(0.0, Total_Energy_address);
 17226  0108B8  0E00               	movlw	0
 17227  0108BA  0101               	movlb	1	; () banked
 17228  0108BC  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 17229  0108BE  0E00               	movlw	0
 17230  0108C0  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 17231  0108C2  0E00               	movlw	0
 17232  0108C4  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 17233  0108C6  0E00               	movlw	0
 17234  0108C8  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 17235  0108CA  0E63               	movlw	low _Total_Energy_address
 17236  0108CC  6EF6               	movwf	tblptrl,c
 17237  0108CE                     	if	1	;There is more than 1 active tblptr byte
 17238  0108CE  0ECF               	movlw	high _Total_Energy_address
 17239  0108D0  6EF7               	movwf	tblptrh,c
 17240  0108D2                     	endif
 17241  0108D2                     	if	1	;There are 3 active tblptr bytes
 17242  0108D2  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 17243  0108D4  6EF8               	movwf	tblptru,c
 17244  0108D6                     	endif
 17245  0108D6  0009               	tblrd		*+
 17246  0108D8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 17247  0108DC  000A               	tblrd		*-
 17248  0108DE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 17249  0108E2  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 17250                           
 17251                           ;ring_buffer_LUT.c: 373: terminal_textAttributes(RED, BLACK, NORMAL);
 17252  0108E6  0E00               	movlw	0
 17253  0108E8  0101               	movlb	1	; () banked
 17254  0108EA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17255  0108EC  0E00               	movlw	0
 17256  0108EE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17257  0108F0  0E01               	movlw	1
 17258  0108F2  EC30  F0AA         	call	_terminal_textAttributes
 17259                           
 17260                           ;ring_buffer_LUT.c: 374: printf("Measured output energy has been reset to zero Watt Hour
      +                          s\n\r");
 17261  0108F6  0E15               	movlw	low STR_107
 17262  0108F8  0101               	movlb	1	; () banked
 17263  0108FA  6FAC               	movwf	printf@f& (0+255),b
 17264  0108FC  0EF3               	movlw	high STR_107
 17265  0108FE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17266  010900  EC95  F0D4         	call	_printf	;wreg free
 17267                           
 17268                           ;ring_buffer_LUT.c: 375: terminal_textAttributesReset();
 17269  010904  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17270                           
 17271                           ;ring_buffer_LUT.c: 377: }
 17272  010908  0012               	return	
 17273  01090A                     l1522:
 17274                           
 17275                           ;ring_buffer_LUT.c: 380: else if ((0 == strcmp(line, "Enable Dimming"))) {
 17276  01090A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17277  01090E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17278  010912  0E21               	movlw	low STR_108
 17279  010914  0101               	movlb	1	; () banked
 17280  010916  6F19               	movwf	strcmp@s2& (0+255),b
 17281  010918  0EFE               	movlw	high STR_108
 17282  01091A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17283  01091C  EC9F  F0D1         	call	_strcmp	;wreg free
 17284  010920  0101               	movlb	1	; () banked
 17285  010922  5117               	movf	?_strcmp& (0+255),w,b
 17286  010924  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17287  010926  A4D8               	btfss	status,2,c
 17288  010928  D046               	goto	l1524
 17289                           
 17290                           ; BSR set to: 1
 17291                           ;ring_buffer_LUT.c: 384: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17292  01092A  0E01               	movlw	1
 17293  01092C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17294  01092E  0E02               	movlw	2
 17295  010930  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17296  010932  0E00               	movlw	0
 17297  010934  EC30  F0AA         	call	_terminal_textAttributes
 17298                           
 17299                           ;ring_buffer_LUT.c: 385: printf("WARNING: Using the dimming feature with load devices ot
      +                          her than a light bulb can result in device damage");
 17300  010938  0E2D               	movlw	low STR_109
 17301  01093A  0101               	movlb	1	; () banked
 17302  01093C  6FAC               	movwf	printf@f& (0+255),b
 17303  01093E  0EEF               	movlw	high STR_109
 17304  010940  6FAD               	movwf	(printf@f+1)& (0+255),b
 17305  010942  EC95  F0D4         	call	_printf	;wreg free
 17306                           
 17307                           ;ring_buffer_LUT.c: 386: terminal_textAttributesReset();
 17308  010946  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17309                           
 17310                           ;ring_buffer_LUT.c: 387: terminal_printNewline();
 17311  01094A  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 17312                           
 17313                           ;ring_buffer_LUT.c: 388: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17314  01094E  0E01               	movlw	1
 17315  010950  0101               	movlb	1	; () banked
 17316  010952  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17317  010954  0E02               	movlw	2
 17318  010956  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17319  010958  0E00               	movlw	0
 17320  01095A  EC30  F0AA         	call	_terminal_textAttributes
 17321                           
 17322                           ;ring_buffer_LUT.c: 389: printf("Only enable dimming if you are completely sure the load
      +                           is compatible with a solid state dimming circuit");
 17323  01095E  0E96               	movlw	low STR_110
 17324  010960  0101               	movlb	1	; () banked
 17325  010962  6FAC               	movwf	printf@f& (0+255),b
 17326  010964  0EEF               	movlw	high STR_110
 17327  010966  6FAD               	movwf	(printf@f+1)& (0+255),b
 17328  010968  EC95  F0D4         	call	_printf	;wreg free
 17329                           
 17330                           ;ring_buffer_LUT.c: 390: terminal_textAttributesReset();
 17331  01096C  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17332                           
 17333                           ;ring_buffer_LUT.c: 391: terminal_printNewline();
 17334  010970  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 17335                           
 17336                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(BLACK, YELLOW, NORMAL);
 17337  010974  0E03               	movlw	3
 17338  010976  0101               	movlb	1	; () banked
 17339  010978  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17340  01097A  0E00               	movlw	0
 17341  01097C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17342  01097E  0E00               	movlw	0
 17343  010980  EC30  F0AA         	call	_terminal_textAttributes
 17344                           
 17345                           ;ring_buffer_LUT.c: 393: printf("Are you sure you'd like to enable output dimming?\n\r")
      +                          ;
 17346  010984  0E74               	movlw	low STR_111
 17347  010986  0101               	movlb	1	; () banked
 17348  010988  6FAC               	movwf	printf@f& (0+255),b
 17349  01098A  0EF5               	movlw	high STR_111
 17350  01098C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17351  01098E  EC95  F0D4         	call	_printf	;wreg free
 17352                           
 17353                           ;ring_buffer_LUT.c: 394: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17354  010992  0E00               	movlw	0
 17355  010994  0101               	movlb	1	; () banked
 17356  010996  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17357  010998  0E00               	movlw	0
 17358  01099A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17359  01099C  0E03               	movlw	3
 17360  01099E  EC30  F0AA         	call	_terminal_textAttributes
 17361                           
 17362                           ;ring_buffer_LUT.c: 395: printf("If yes, reply 'Enable Dimming Y' on the next line:\n\r"
      +                          );
 17363  0109A2  0ED5               	movlw	low STR_112
 17364  0109A4  0101               	movlb	1	; () banked
 17365  0109A6  6FAC               	movwf	printf@f& (0+255),b
 17366  0109A8  0EF4               	movlw	high STR_112
 17367  0109AA  6FAD               	movwf	(printf@f+1)& (0+255),b
 17368  0109AC  EC95  F0D4         	call	_printf	;wreg free
 17369                           
 17370                           ;ring_buffer_LUT.c: 396: terminal_textAttributesReset();
 17371  0109B0  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17372                           
 17373                           ;ring_buffer_LUT.c: 398: }
 17374  0109B4  0012               	return	
 17375  0109B6                     l1524:
 17376                           
 17377                           ;ring_buffer_LUT.c: 401: else if ((0 == strcmp(line, "Enable Dimming Y"))) {
 17378  0109B6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17379  0109BA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17380  0109BE  0E42               	movlw	low STR_113
 17381  0109C0  0101               	movlb	1	; () banked
 17382  0109C2  6F19               	movwf	strcmp@s2& (0+255),b
 17383  0109C4  0EFD               	movlw	high STR_113
 17384  0109C6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17385  0109C8  EC9F  F0D1         	call	_strcmp	;wreg free
 17386  0109CC  0101               	movlb	1	; () banked
 17387  0109CE  5117               	movf	?_strcmp& (0+255),w,b
 17388  0109D0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17389  0109D2  A4D8               	btfss	status,2,c
 17390  0109D4  D015               	goto	l1526
 17391                           
 17392                           ; BSR set to: 1
 17393                           ;ring_buffer_LUT.c: 404: LATGbits.LATG0 = 0;
 17394  0109D6  907F               	bcf	3967,0,c	;volatile
 17395                           
 17396                           ;ring_buffer_LUT.c: 407: PIE0bits.INT0IE = 1;
 17397  0109D8  010E               	movlb	14	; () banked
 17398  0109DA  8129               	bsf	41,0,b	;volatile
 17399                           
 17400                           ; BSR set to: 14
 17401                           ;ring_buffer_LUT.c: 409: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17402  0109DC  0E00               	movlw	0
 17403  0109DE  0101               	movlb	1	; () banked
 17404  0109E0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17405  0109E2  0E00               	movlw	0
 17406  0109E4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17407  0109E6  0E02               	movlw	2
 17408  0109E8  EC30  F0AA         	call	_terminal_textAttributes
 17409                           
 17410                           ;ring_buffer_LUT.c: 410: printf("Output dimming has been enabled\n\r");
 17411  0109EC  0E64               	movlw	low STR_114
 17412  0109EE  0101               	movlb	1	; () banked
 17413  0109F0  6FAC               	movwf	printf@f& (0+255),b
 17414  0109F2  0EF9               	movlw	high STR_114
 17415  0109F4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17416  0109F6  EC95  F0D4         	call	_printf	;wreg free
 17417                           
 17418                           ;ring_buffer_LUT.c: 411: terminal_textAttributesReset();
 17419  0109FA  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17420                           
 17421                           ;ring_buffer_LUT.c: 413: }
 17422  0109FE  0012               	return	
 17423  010A00                     l1526:
 17424                           
 17425                           ;ring_buffer_LUT.c: 416: else if ((0 == strcmp(line, "Disable Dimming"))) {
 17426  010A00  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17427  010A04  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17428  010A08  0ED5               	movlw	low STR_115
 17429  010A0A  0101               	movlb	1	; () banked
 17430  010A0C  6F19               	movwf	strcmp@s2& (0+255),b
 17431  010A0E  0EFD               	movlw	high STR_115
 17432  010A10  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17433  010A12  EC9F  F0D1         	call	_strcmp	;wreg free
 17434  010A16  0101               	movlb	1	; () banked
 17435  010A18  5117               	movf	?_strcmp& (0+255),w,b
 17436  010A1A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17437  010A1C  A4D8               	btfss	status,2,c
 17438  010A1E  D017               	goto	l1528
 17439                           
 17440                           ; BSR set to: 1
 17441                           ;ring_buffer_LUT.c: 419: LATGbits.LATG0 = 1;
 17442  010A20  807F               	bsf	3967,0,c	;volatile
 17443                           
 17444                           ;ring_buffer_LUT.c: 422: PIE0bits.INT0IE = 0;
 17445  010A22  010E               	movlb	14	; () banked
 17446  010A24  9129               	bcf	41,0,b	;volatile
 17447                           
 17448                           ; BSR set to: 14
 17449                           ;ring_buffer_LUT.c: 423: TMR5_StopTimer();
 17450  010A26  ECEF  F0D8         	call	_TMR5_StopTimer	;wreg free
 17451                           
 17452                           ;ring_buffer_LUT.c: 425: terminal_textAttributes(RED, BLACK, NORMAL);
 17453  010A2A  0E00               	movlw	0
 17454  010A2C  0101               	movlb	1	; () banked
 17455  010A2E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17456  010A30  0E00               	movlw	0
 17457  010A32  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17458  010A34  0E01               	movlw	1
 17459  010A36  EC30  F0AA         	call	_terminal_textAttributes
 17460                           
 17461                           ;ring_buffer_LUT.c: 426: printf("TRIAC output dimming has been disabled\n\r");
 17462  010A3A  0E37               	movlw	low STR_116
 17463  010A3C  0101               	movlb	1	; () banked
 17464  010A3E  6FAC               	movwf	printf@f& (0+255),b
 17465  010A40  0EF8               	movlw	high STR_116
 17466  010A42  6FAD               	movwf	(printf@f+1)& (0+255),b
 17467  010A44  EC95  F0D4         	call	_printf	;wreg free
 17468                           
 17469                           ;ring_buffer_LUT.c: 427: terminal_textAttributesReset();
 17470  010A48  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17471                           
 17472                           ;ring_buffer_LUT.c: 429: }
 17473  010A4C  0012               	return	
 17474  010A4E                     l1528:
 17475                           
 17476                           ;ring_buffer_LUT.c: 432: else if ((0 == strcmp(line, "Enable Load"))) {
 17477  010A4E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17478  010A52  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17479  010A56  0E10               	movlw	low STR_117
 17480  010A58  0101               	movlb	1	; () banked
 17481  010A5A  6F19               	movwf	strcmp@s2& (0+255),b
 17482  010A5C  0EFF               	movlw	high STR_117
 17483  010A5E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17484  010A60  EC9F  F0D1         	call	_strcmp	;wreg free
 17485  010A64  0101               	movlb	1	; () banked
 17486  010A66  5117               	movf	?_strcmp& (0+255),w,b
 17487  010A68  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17488  010A6A  A4D8               	btfss	status,2,c
 17489  010A6C  D014               	goto	l1530
 17490                           
 17491                           ; BSR set to: 1
 17492                           ;ring_buffer_LUT.c: 434: LATGbits.LATG0 = 1;
 17493  010A6E  807F               	bsf	3967,0,c	;volatile
 17494                           
 17495                           ;ring_buffer_LUT.c: 435: LATGbits.LATG1 = 0;
 17496  010A70  927F               	bcf	3967,1,c	;volatile
 17497                           
 17498                           ;ring_buffer_LUT.c: 436: load_enable = 1;
 17499  010A72  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17500                           
 17501                           ; BSR set to: 1
 17502                           ;ring_buffer_LUT.c: 438: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17503  010A74  0E00               	movlw	0
 17504  010A76  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17505  010A78  0E00               	movlw	0
 17506  010A7A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17507  010A7C  0E02               	movlw	2
 17508  010A7E  EC30  F0AA         	call	_terminal_textAttributes
 17509                           
 17510                           ;ring_buffer_LUT.c: 439: printf("Load has been enabled, dimming disabled\n\r");
 17511  010A82  0EBA               	movlw	low STR_118
 17512  010A84  0101               	movlb	1	; () banked
 17513  010A86  6FAC               	movwf	printf@f& (0+255),b
 17514  010A88  0EF7               	movlw	high STR_118
 17515  010A8A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17516  010A8C  EC95  F0D4         	call	_printf	;wreg free
 17517                           
 17518                           ;ring_buffer_LUT.c: 440: terminal_textAttributesReset();
 17519  010A90  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17520                           
 17521                           ;ring_buffer_LUT.c: 442: }
 17522  010A94  0012               	return	
 17523  010A96                     l1530:
 17524                           
 17525                           ;ring_buffer_LUT.c: 445: else if ((0 == strcmp(line, "Load Enabled?"))) {
 17526  010A96  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17527  010A9A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17528  010A9E  0E4D               	movlw	low STR_119
 17529  010AA0  0101               	movlb	1	; () banked
 17530  010AA2  6F19               	movwf	strcmp@s2& (0+255),b
 17531  010AA4  0EFE               	movlw	high STR_119
 17532  010AA6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17533  010AA8  EC9F  F0D1         	call	_strcmp	;wreg free
 17534  010AAC  0101               	movlb	1	; () banked
 17535  010AAE  5117               	movf	?_strcmp& (0+255),w,b
 17536  010AB0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17537  010AB2  A4D8               	btfss	status,2,c
 17538  010AB4  D025               	goto	l1532
 17539                           
 17540                           ; BSR set to: 1
 17541                           ;ring_buffer_LUT.c: 447: if (load_enable == 1) {
 17542  010AB6  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17543  010AB8  D011               	goto	l1533
 17544                           
 17545                           ; BSR set to: 1
 17546                           ;ring_buffer_LUT.c: 449: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17547  010ABA  0E00               	movlw	0
 17548  010ABC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17549  010ABE  0E00               	movlw	0
 17550  010AC0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17551  010AC2  0E02               	movlw	2
 17552  010AC4  EC30  F0AA         	call	_terminal_textAttributes
 17553                           
 17554                           ;ring_buffer_LUT.c: 450: printf("Load is currently enabled\n\r");
 17555  010AC8  0E3D               	movlw	low STR_120
 17556  010ACA  0101               	movlb	1	; () banked
 17557  010ACC  6FAC               	movwf	printf@f& (0+255),b
 17558  010ACE  0EFB               	movlw	high STR_120
 17559  010AD0  6FAD               	movwf	(printf@f+1)& (0+255),b
 17560  010AD2  EC95  F0D4         	call	_printf	;wreg free
 17561                           
 17562                           ;ring_buffer_LUT.c: 451: terminal_textAttributesReset();
 17563  010AD6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17564                           
 17565                           ;ring_buffer_LUT.c: 453: }
 17566  010ADA  0012               	return	
 17567  010ADC                     l1533:
 17568                           
 17569                           ;ring_buffer_LUT.c: 455: else {
 17570                           ;ring_buffer_LUT.c: 457: terminal_textAttributes(RED, BLACK, NORMAL);
 17571  010ADC  0E00               	movlw	0
 17572  010ADE  0101               	movlb	1	; () banked
 17573  010AE0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17574  010AE2  0E00               	movlw	0
 17575  010AE4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17576  010AE6  0E01               	movlw	1
 17577  010AE8  EC30  F0AA         	call	_terminal_textAttributes
 17578                           
 17579                           ;ring_buffer_LUT.c: 458: printf("Load is currently disabled\n\r");
 17580  010AEC  0ECA               	movlw	low STR_121
 17581  010AEE  0101               	movlb	1	; () banked
 17582  010AF0  6FAC               	movwf	printf@f& (0+255),b
 17583  010AF2  0EFA               	movlw	high STR_121
 17584  010AF4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17585  010AF6  EC95  F0D4         	call	_printf	;wreg free
 17586                           
 17587                           ;ring_buffer_LUT.c: 459: terminal_textAttributesReset();
 17588  010AFA  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17589                           
 17590                           ;ring_buffer_LUT.c: 462: }
 17591                           ;ring_buffer_LUT.c: 464: }
 17592  010AFE  0012               	return	
 17593  010B00                     l1532:
 17594                           
 17595                           ;ring_buffer_LUT.c: 467: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 17596  010B00  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17597  010B04  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17598  010B08  0E0F               	movlw	low STR_122
 17599  010B0A  0101               	movlb	1	; () banked
 17600  010B0C  6F19               	movwf	strcmp@s2& (0+255),b
 17601  010B0E  0EFD               	movlw	high STR_122
 17602  010B10  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17603  010B12  EC9F  F0D1         	call	_strcmp	;wreg free
 17604  010B16  0101               	movlb	1	; () banked
 17605  010B18  5117               	movf	?_strcmp& (0+255),w,b
 17606  010B1A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17607  010B1C  A4D8               	btfss	status,2,c
 17608  010B1E  D039               	goto	l1536
 17609                           
 17610                           ; BSR set to: 1
 17611                           ;ring_buffer_LUT.c: 469: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 17612  010B20  B05E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17613                           
 17614                           ; BSR set to: 1
 17615  010B22  B07F               	btfsc	3967,0,c	;volatile
 17616  010B24  D011               	goto	l1537
 17617                           
 17618                           ; BSR set to: 1
 17619                           ;ring_buffer_LUT.c: 471: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17620  010B26  0E00               	movlw	0
 17621  010B28  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17622  010B2A  0E00               	movlw	0
 17623  010B2C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17624  010B2E  0E02               	movlw	2
 17625  010B30  EC30  F0AA         	call	_terminal_textAttributes
 17626                           
 17627                           ;ring_buffer_LUT.c: 472: printf("Dimming is currently enabled\n\r");
 17628  010B34  0E4F               	movlw	low STR_123
 17629  010B36  0101               	movlb	1	; () banked
 17630  010B38  6FAC               	movwf	printf@f& (0+255),b
 17631  010B3A  0EFA               	movlw	high STR_123
 17632  010B3C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17633  010B3E  EC95  F0D4         	call	_printf	;wreg free
 17634                           
 17635                           ;ring_buffer_LUT.c: 473: terminal_textAttributesReset();
 17636  010B42  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17637                           
 17638                           ;ring_buffer_LUT.c: 475: }
 17639  010B46  0012               	return	
 17640  010B48                     l1537:
 17641                           
 17642                           ; BSR set to: 1
 17643                           ;ring_buffer_LUT.c: 477: else if (load_enable == 1){
 17644  010B48  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17645  010B4A  D011               	goto	l1539
 17646                           
 17647                           ; BSR set to: 1
 17648                           ;ring_buffer_LUT.c: 479: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17649  010B4C  0E00               	movlw	0
 17650  010B4E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17651  010B50  0E00               	movlw	0
 17652  010B52  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17653  010B54  0E03               	movlw	3
 17654  010B56  EC30  F0AA         	call	_terminal_textAttributes
 17655                           
 17656                           ;ring_buffer_LUT.c: 480: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 17657  010B5A  0E0A               	movlw	low STR_124
 17658  010B5C  0101               	movlb	1	; () banked
 17659  010B5E  6FAC               	movwf	printf@f& (0+255),b
 17660  010B60  0EF5               	movlw	high STR_124
 17661  010B62  6FAD               	movwf	(printf@f+1)& (0+255),b
 17662  010B64  EC95  F0D4         	call	_printf	;wreg free
 17663                           
 17664                           ;ring_buffer_LUT.c: 481: terminal_textAttributesReset();
 17665  010B68  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17666                           
 17667                           ;ring_buffer_LUT.c: 483: }
 17668  010B6C  0012               	return	
 17669  010B6E                     l1539:
 17670                           
 17671                           ;ring_buffer_LUT.c: 485: else {
 17672                           ;ring_buffer_LUT.c: 487: terminal_textAttributes(RED, BLACK, NORMAL);
 17673  010B6E  0E00               	movlw	0
 17674  010B70  0101               	movlb	1	; () banked
 17675  010B72  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17676  010B74  0E00               	movlw	0
 17677  010B76  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17678  010B78  0E01               	movlw	1
 17679  010B7A  EC30  F0AA         	call	_terminal_textAttributes
 17680                           
 17681                           ;ring_buffer_LUT.c: 488: printf("Load and dimming are currently disabled\n\r");
 17682  010B7E  0EE4               	movlw	low STR_125
 17683  010B80  0101               	movlb	1	; () banked
 17684  010B82  6FAC               	movwf	printf@f& (0+255),b
 17685  010B84  0EF7               	movlw	high STR_125
 17686  010B86  6FAD               	movwf	(printf@f+1)& (0+255),b
 17687  010B88  EC95  F0D4         	call	_printf	;wreg free
 17688                           
 17689                           ;ring_buffer_LUT.c: 489: terminal_textAttributesReset();
 17690  010B8C  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17691                           
 17692                           ;ring_buffer_LUT.c: 491: }
 17693                           ;ring_buffer_LUT.c: 495: }
 17694  010B90  0012               	return	
 17695  010B92                     l1536:
 17696                           
 17697                           ;ring_buffer_LUT.c: 500: else if ((0 == strcmp(line, "Disable Load"))) {
 17698  010B92  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17699  010B96  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17700  010B9A  0EC5               	movlw	low STR_126
 17701  010B9C  0101               	movlb	1	; () banked
 17702  010B9E  6F19               	movwf	strcmp@s2& (0+255),b
 17703  010BA0  0EFE               	movlw	high STR_126
 17704  010BA2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17705  010BA4  EC9F  F0D1         	call	_strcmp	;wreg free
 17706  010BA8  0101               	movlb	1	; () banked
 17707  010BAA  5117               	movf	?_strcmp& (0+255),w,b
 17708  010BAC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17709  010BAE  A4D8               	btfss	status,2,c
 17710  010BB0  D014               	goto	l1542
 17711                           
 17712                           ; BSR set to: 1
 17713                           ;ring_buffer_LUT.c: 502: LATGbits.LATG1 = 0;
 17714  010BB2  927F               	bcf	3967,1,c	;volatile
 17715                           
 17716                           ;ring_buffer_LUT.c: 503: LATGbits.LATG0 = 0;
 17717  010BB4  907F               	bcf	3967,0,c	;volatile
 17718                           
 17719                           ;ring_buffer_LUT.c: 504: load_enable = 0;
 17720  010BB6  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17721                           
 17722                           ; BSR set to: 1
 17723                           ;ring_buffer_LUT.c: 506: terminal_textAttributes(RED, BLACK, NORMAL);
 17724  010BB8  0E00               	movlw	0
 17725  010BBA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17726  010BBC  0E00               	movlw	0
 17727  010BBE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17728  010BC0  0E01               	movlw	1
 17729  010BC2  EC30  F0AA         	call	_terminal_textAttributes
 17730                           
 17731                           ;ring_buffer_LUT.c: 507: printf("Load has been disabled\n\r");
 17732  010BC6  0EC2               	movlw	low STR_127
 17733  010BC8  0101               	movlb	1	; () banked
 17734  010BCA  6FAC               	movwf	printf@f& (0+255),b
 17735  010BCC  0EFB               	movlw	high STR_127
 17736  010BCE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17737  010BD0  EC95  F0D4         	call	_printf	;wreg free
 17738                           
 17739                           ;ring_buffer_LUT.c: 508: terminal_textAttributesReset();
 17740  010BD4  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17741                           
 17742                           ;ring_buffer_LUT.c: 510: }
 17743  010BD8  0012               	return	
 17744  010BDA                     l1542:
 17745                           
 17746                           ;ring_buffer_LUT.c: 513: else if ((strstr(line, "Set Dimming Percentage: "))) {
 17747  010BDA  C1BF  F126         	movff	ringBufferLUT@line,strstr@s1
 17748  010BDE  C1C0  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 17749  010BE2  0EDB               	movlw	low STR_128
 17750  010BE4  0101               	movlb	1	; () banked
 17751  010BE6  6F28               	movwf	strstr@s2& (0+255),b
 17752  010BE8  0EFB               	movlw	high STR_128
 17753  010BEA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 17754  010BEC  ECA1  F0CC         	call	_strstr	;wreg free
 17755  010BF0  0101               	movlb	1	; () banked
 17756  010BF2  5126               	movf	?_strstr& (0+255),w,b
 17757  010BF4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 17758  010BF6  B4D8               	btfsc	status,2,c
 17759  010BF8  D127               	goto	l1544
 17760                           
 17761                           ; BSR set to: 1
 17762                           ;ring_buffer_LUT.c: 516: char arg_buff[3];
 17763                           ;ring_buffer_LUT.c: 519: for (int index = 0; index < 3; index++) {
 17764  010BFA  0E00               	movlw	0
 17765  010BFC  0102               	movlb	2	; () banked
 17766  010BFE  6FC3               	movwf	(ringBufferLUT@index+1)& (0+255),b
 17767  010C00  0E00               	movlw	0
 17768  010C02  6FC2               	movwf	ringBufferLUT@index& (0+255),b
 17769  010C04                     l23052:
 17770                           
 17771                           ; BSR set to: 2
 17772  010C04  BFC3               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 17773  010C06  D006               	goto	l1545
 17774  010C08  51C3               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 17775  010C0A  E11F               	bnz	l23062
 17776  010C0C  0E03               	movlw	3
 17777  010C0E  5DC2               	subwf	ringBufferLUT@index& (0+255),w,b
 17778  010C10  B0D8               	btfsc	status,0,c
 17779  010C12  D01B               	goto	u33840
 17780  010C14                     l1545:
 17781                           
 17782                           ; BSR set to: 2
 17783                           ;ring_buffer_LUT.c: 521: arg_buff[index] = line[index + 24];
 17784                           
 17785                           ; BSR set to: 2
 17786  010C14  0E18               	movlw	24
 17787  010C16  25C2               	addwf	ringBufferLUT@index& (0+255),w,b
 17788  010C18  0101               	movlb	1	; () banked
 17789  010C1A  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 17790  010C1C  0E00               	movlw	0
 17791  010C1E  0102               	movlb	2	; () banked
 17792  010C20  21C3               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17793  010C22  0101               	movlb	1	; () banked
 17794  010C24  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 17795  010C26  51C1               	movf	??_ringBufferLUT& (0+255),w,b
 17796  010C28  25BF               	addwf	ringBufferLUT@line& (0+255),w,b
 17797  010C2A  6ED9               	movwf	fsr2l,c
 17798  010C2C  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 17799  010C2E  21C0               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 17800  010C30  6EDA               	movwf	fsr2h,c
 17801  010C32  0EA3               	movlw	low ringBufferLUT@arg_buff
 17802  010C34  0102               	movlb	2	; () banked
 17803  010C36  25C2               	addwf	ringBufferLUT@index& (0+255),w,b
 17804  010C38  6EE1               	movwf	fsr1l,c
 17805  010C3A  0E02               	movlw	high ringBufferLUT@arg_buff
 17806  010C3C  21C3               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17807  010C3E  6EE2               	movwf	fsr1h,c
 17808  010C40  CFDF FFE7          	movff	indf2,indf1
 17809                           
 17810                           ; BSR set to: 2
 17811  010C44  4BC2               	infsnz	ringBufferLUT@index& (0+255),f,b
 17812  010C46  2BC3               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 17813  010C48  D7DD               	goto	l23052
 17814  010C4A                     u33840:
 17815  010C4A                     l23062:
 17816                           
 17817                           ; BSR set to: 2
 17818                           ;ring_buffer_LUT.c: 523: }
 17819                           ;ring_buffer_LUT.c: 525: int percentage = atoi(arg_buff);
 17820  010C4A  0EA3               	movlw	low ringBufferLUT@arg_buff
 17821  010C4C  0101               	movlb	1	; () banked
 17822  010C4E  6F1D               	movwf	atoi@s& (0+255),b
 17823  010C50  0E02               	movlw	high ringBufferLUT@arg_buff
 17824  010C52  6F1E               	movwf	(atoi@s+1)& (0+255),b
 17825  010C54  ECE6  F0C9         	call	_atoi	;wreg free
 17826  010C58  C11D  F2C4         	movff	?_atoi,ringBufferLUT@percentage
 17827  010C5C  C11E  F2C5         	movff	?_atoi+1,ringBufferLUT@percentage+1
 17828                           
 17829                           ;ring_buffer_LUT.c: 528: if ( (percentage >= 100) ||
 17830                           ;ring_buffer_LUT.c: 529: (percentage <= 0)) {
 17831  010C60  0102               	movlb	2	; () banked
 17832  010C62  BFC5               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17833  010C64  D006               	goto	u33850
 17834  010C66  51C5               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17835  010C68  E10B               	bnz	l23068
 17836  010C6A  0E64               	movlw	100
 17837  010C6C  5DC4               	subwf	ringBufferLUT@percentage& (0+255),w,b
 17838  010C6E  B0D8               	btfsc	status,0,c
 17839  010C70  D007               	goto	u33860
 17840  010C72                     u33850:
 17841                           
 17842                           ; BSR set to: 2
 17843  010C72  BFC5               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17844  010C74  D005               	goto	u33860
 17845  010C76  51C5               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17846  010C78  E12B               	bnz	l23070
 17847  010C7A  05C4               	decf	ringBufferLUT@percentage& (0+255),w,b
 17848  010C7C  B0D8               	btfsc	status,0,c
 17849  010C7E  D028               	goto	l1547
 17850  010C80                     u33860:
 17851  010C80                     l23068:
 17852                           
 17853                           ; BSR set to: 2
 17854                           ;ring_buffer_LUT.c: 531: terminal_textAttributes(RED, BLACK, NORMAL);
 17855  010C80  0E00               	movlw	0
 17856  010C82  0101               	movlb	1	; () banked
 17857  010C84  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17858  010C86  0E00               	movlw	0
 17859  010C88  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17860  010C8A  0E01               	movlw	1
 17861  010C8C  EC30  F0AA         	call	_terminal_textAttributes
 17862                           
 17863                           ;ring_buffer_LUT.c: 532: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 17864  010C90  0E65               	movlw	low STR_129
 17865  010C92  0101               	movlb	1	; () banked
 17866  010C94  6FAC               	movwf	printf@f& (0+255),b
 17867  010C96  0EF0               	movlw	high STR_129
 17868  010C98  6FAD               	movwf	(printf@f+1)& (0+255),b
 17869  010C9A  EC95  F0D4         	call	_printf	;wreg free
 17870                           
 17871                           ;ring_buffer_LUT.c: 533: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17872  010C9E  0E00               	movlw	0
 17873  010CA0  0101               	movlb	1	; () banked
 17874  010CA2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17875  010CA4  0E00               	movlw	0
 17876  010CA6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17877  010CA8  0E03               	movlw	3
 17878  010CAA  EC30  F0AA         	call	_terminal_textAttributes
 17879                           
 17880                           ;ring_buffer_LUT.c: 534: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 17881  010CAE  0EFF               	movlw	low STR_130
 17882  010CB0  0101               	movlb	1	; () banked
 17883  010CB2  6FAC               	movwf	printf@f& (0+255),b
 17884  010CB4  0EEF               	movlw	high STR_130
 17885  010CB6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17886  010CB8  EC95  F0D4         	call	_printf	;wreg free
 17887                           
 17888                           ;ring_buffer_LUT.c: 535: printf("Enter 'Help' for list of available commands\n\r");
 17889  010CBC  0E31               	movlw	low STR_131
 17890  010CBE  0101               	movlb	1	; () banked
 17891  010CC0  6FAC               	movwf	printf@f& (0+255),b
 17892  010CC2  0EF7               	movlw	high STR_131
 17893  010CC4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17894  010CC6  EC95  F0D4         	call	_printf	;wreg free
 17895                           
 17896                           ;ring_buffer_LUT.c: 536: terminal_textAttributesReset();
 17897  010CCA  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17898                           
 17899                           ;ring_buffer_LUT.c: 538: }
 17900  010CCE  0012               	return	
 17901  010CD0                     l1547:
 17902  010CD0                     l23070:
 17903                           
 17904                           ;ring_buffer_LUT.c: 541: else {
 17905                           ;ring_buffer_LUT.c: 544: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 17906  010CD0  0E00               	movlw	0
 17907  010CD2  0101               	movlb	1	; () banked
 17908  010CD4  6F41               	movwf	___fldiv@a& (0+255),b
 17909  010CD6  0E00               	movlw	0
 17910  010CD8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 17911  010CDA  0EC8               	movlw	200
 17912  010CDC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 17913  010CDE  0E42               	movlw	66
 17914  010CE0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 17915  010CE2  0E00               	movlw	0
 17916  010CE4  6F2D               	movwf	___fladd@a& (0+255),b
 17917  010CE6  0E00               	movlw	0
 17918  010CE8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 17919  010CEA  0EC8               	movlw	200
 17920  010CEC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 17921  010CEE  0E42               	movlw	66
 17922  010CF0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 17923  010CF2  C2C4  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 17924  010CF6  C2C5  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 17925  010CFA  0E00               	movlw	0
 17926  010CFC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 17927  010CFE  0EFF               	movlw	-1
 17928  010D00  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 17929  010D02  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 17930  010D04  0E01               	movlw	1
 17931  010D06  ECE4  F0C0         	call	___xxtofl
 17932  010D0A  C117  F125         	movff	?___xxtofl,___flneg@f1
 17933  010D0E  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 17934  010D12  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 17935  010D16  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 17936  010D1A  EC34  F0D6         	call	___flneg	;wreg free
 17937  010D1E  C125  F129         	movff	?___flneg,___fladd@b
 17938  010D22  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 17939  010D26  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 17940  010D2A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 17941  010D2E  EC35  F0AF         	call	___fladd	;wreg free
 17942  010D32  C129  F13D         	movff	?___fladd,___fldiv@b
 17943  010D36  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 17944  010D3A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 17945  010D3E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 17946  010D42  EC39  F0B8         	call	___fldiv	;wreg free
 17947  010D46  C13D  F156         	movff	?___fldiv,___flmul@b
 17948  010D4A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 17949  010D4E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 17950  010D52  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 17951  010D56  0EDB               	movlw	219
 17952  010D58  0101               	movlb	1	; () banked
 17953  010D5A  6F5A               	movwf	___flmul@a& (0+255),b
 17954  010D5C  0E0F               	movlw	15
 17955  010D5E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17956  010D60  0E49               	movlw	73
 17957  010D62  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17958  010D64  0E40               	movlw	64
 17959  010D66  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17960  010D68  ECE4  F0AB         	call	___flmul	;wreg free
 17961  010D6C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 17962  010D70  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 17963  010D74  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 17964  010D78  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 17965                           
 17966                           ;ring_buffer_LUT.c: 545: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 17967  010D7C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 17968  010D80  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 17969  010D84  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 17970  010D88  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 17971  010D8C  0EE1               	movlw	225
 17972  010D8E  0101               	movlb	1	; () banked
 17973  010D90  6F5A               	movwf	___flmul@a& (0+255),b
 17974  010D92  0E2E               	movlw	46
 17975  010D94  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17976  010D96  0E65               	movlw	101
 17977  010D98  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17978  010D9A  0E42               	movlw	66
 17979  010D9C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17980  010D9E  ECE4  F0AB         	call	___flmul	;wreg free
 17981  010DA2  C156  F2A6         	movff	?___flmul,ringBufferLUT@angle_degrees
 17982  010DA6  C157  F2A7         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 17983  010DAA  C158  F2A8         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 17984  010DAE  C159  F2A9         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 17985                           
 17986                           ;ring_buffer_LUT.c: 546: dimming_period = (percentage) * (0xFFFF / 100);
 17987  010DB2  C2C4  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 17988  010DB6  C2C5  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 17989  010DBA  0E02               	movlw	2
 17990  010DBC  0101               	movlb	1	; () banked
 17991  010DBE  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17992  010DC0  0E8F               	movlw	143
 17993  010DC2  6F19               	movwf	___wmul@multiplicand& (0+255),b
 17994  010DC4  EC90  F0D6         	call	___wmul	;wreg free
 17995  010DC8  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 17996  010DCC  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 17997                           
 17998                           ;ring_buffer_LUT.c: 548: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17999  010DD0  0E00               	movlw	0
 18000  010DD2  0101               	movlb	1	; () banked
 18001  010DD4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18002  010DD6  0E00               	movlw	0
 18003  010DD8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18004  010DDA  0E02               	movlw	2
 18005  010DDC  EC30  F0AA         	call	_terminal_textAttributes
 18006                           
 18007                           ;ring_buffer_LUT.c: 549: printf("Dimming has been set to %d percent\n\r", percentage);
 18008  010DE0  0EF7               	movlw	low STR_132
 18009  010DE2  0101               	movlb	1	; () banked
 18010  010DE4  6FAC               	movwf	printf@f& (0+255),b
 18011  010DE6  0EF8               	movlw	high STR_132
 18012  010DE8  6FAD               	movwf	(printf@f+1)& (0+255),b
 18013  010DEA  C2C4  F1AE         	movff	ringBufferLUT@percentage,?_printf+2
 18014  010DEE  C2C5  F1AF         	movff	ringBufferLUT@percentage+1,?_printf+3
 18015  010DF2  EC95  F0D4         	call	_printf	;wreg free
 18016                           
 18017                           ;ring_buffer_LUT.c: 550: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 18018  010DF6  0E21               	movlw	low STR_133
 18019  010DF8  0101               	movlb	1	; () banked
 18020  010DFA  6FAC               	movwf	printf@f& (0+255),b
 18021  010DFC  0EF2               	movlw	high STR_133
 18022  010DFE  6FAD               	movwf	(printf@f+1)& (0+255),b
 18023  010E00  C0F2  F1AE         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 18024  010E04  C0F3  F1AF         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 18025  010E08  C0F4  F1B0         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 18026  010E0C  C0F5  F1B1         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 18027  010E10  C2A6  F1B2         	movff	ringBufferLUT@angle_degrees,?_printf+6
 18028  010E14  C2A7  F1B3         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 18029  010E18  C2A8  F1B4         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 18030  010E1C  C2A9  F1B5         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 18031  010E20  EC95  F0D4         	call	_printf	;wreg free
 18032                           
 18033                           ;ring_buffer_LUT.c: 551: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 18034  010E24  0E59               	movlw	low STR_134
 18035  010E26  0101               	movlb	1	; () banked
 18036  010E28  6FAC               	movwf	printf@f& (0+255),b
 18037  010E2A  0EF1               	movlw	high STR_134
 18038  010E2C  6FAD               	movwf	(printf@f+1)& (0+255),b
 18039  010E2E  C0F0  F1AE         	movff	_dimming_period,?_printf+2	;volatile
 18040  010E32  C0F1  F1AF         	movff	_dimming_period+1,?_printf+3	;volatile
 18041  010E36  C0F0  F1B0         	movff	_dimming_period,?_printf+4	;volatile
 18042  010E3A  C0F1  F1B1         	movff	_dimming_period+1,?_printf+5	;volatile
 18043  010E3E  EC95  F0D4         	call	_printf	;wreg free
 18044                           
 18045                           ;ring_buffer_LUT.c: 552: terminal_textAttributesReset();
 18046  010E42  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18047                           
 18048                           ;ring_buffer_LUT.c: 554: }
 18049                           ;ring_buffer_LUT.c: 556: }
 18050  010E46  0012               	return	
 18051  010E48                     l1544:
 18052                           
 18053                           ;ring_buffer_LUT.c: 559: else if((0 == strcmp(line, "Device On Time?"))) {
 18054  010E48  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18055  010E4C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18056  010E50  0EA5               	movlw	low STR_135
 18057  010E52  0101               	movlb	1	; () banked
 18058  010E54  6F19               	movwf	strcmp@s2& (0+255),b
 18059  010E56  0EFD               	movlw	high STR_135
 18060  010E58  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18061  010E5A  EC9F  F0D1         	call	_strcmp	;wreg free
 18062  010E5E  0101               	movlb	1	; () banked
 18063  010E60  5117               	movf	?_strcmp& (0+255),w,b
 18064  010E62  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18065  010E64  A4D8               	btfss	status,2,c
 18066  010E66  D019               	goto	l1552
 18067                           
 18068                           ; BSR set to: 1
 18069                           ;ring_buffer_LUT.c: 561: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18070  010E68  0E00               	movlw	0
 18071  010E6A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18072  010E6C  0E00               	movlw	0
 18073  010E6E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18074  010E70  0E02               	movlw	2
 18075  010E72  EC30  F0AA         	call	_terminal_textAttributes
 18076                           
 18077                           ;ring_buffer_LUT.c: 562: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 18078  010E76  0E50               	movlw	low STR_136
 18079  010E78  0101               	movlb	1	; () banked
 18080  010E7A  6FAC               	movwf	printf@f& (0+255),b
 18081  010E7C  0EF3               	movlw	high STR_136
 18082  010E7E  6FAD               	movwf	(printf@f+1)& (0+255),b
 18083  010E80  C22C  F1AE         	movff	_dev_on_time,?_printf+2	;volatile
 18084  010E84  C22D  F1AF         	movff	_dev_on_time+1,?_printf+3	;volatile
 18085  010E88  C22E  F1B0         	movff	_dev_on_time+2,?_printf+4	;volatile
 18086  010E8C  C22F  F1B1         	movff	_dev_on_time+3,?_printf+5	;volatile
 18087  010E90  EC95  F0D4         	call	_printf	;wreg free
 18088                           
 18089                           ;ring_buffer_LUT.c: 563: terminal_textAttributesReset();
 18090  010E94  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18091                           
 18092                           ;ring_buffer_LUT.c: 565: }
 18093  010E98  0012               	return	
 18094  010E9A                     l1552:
 18095                           
 18096                           ;ring_buffer_LUT.c: 568: else if((0 == strcmp(line, "Load On Time?"))) {
 18097  010E9A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18098  010E9E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18099  010EA2  0E5B               	movlw	low STR_137
 18100  010EA4  0101               	movlb	1	; () banked
 18101  010EA6  6F19               	movwf	strcmp@s2& (0+255),b
 18102  010EA8  0EFE               	movlw	high STR_137
 18103  010EAA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18104  010EAC  EC9F  F0D1         	call	_strcmp	;wreg free
 18105  010EB0  0101               	movlb	1	; () banked
 18106  010EB2  5117               	movf	?_strcmp& (0+255),w,b
 18107  010EB4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18108  010EB6  A4D8               	btfss	status,2,c
 18109  010EB8  D019               	goto	l1554
 18110                           
 18111                           ; BSR set to: 1
 18112                           ;ring_buffer_LUT.c: 570: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18113  010EBA  0E00               	movlw	0
 18114  010EBC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18115  010EBE  0E00               	movlw	0
 18116  010EC0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18117  010EC2  0E02               	movlw	2
 18118  010EC4  EC30  F0AA         	call	_terminal_textAttributes
 18119                           
 18120                           ;ring_buffer_LUT.c: 571: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 18121  010EC8  0E3F               	movlw	low STR_138
 18122  010ECA  0101               	movlb	1	; () banked
 18123  010ECC  6FAC               	movwf	printf@f& (0+255),b
 18124  010ECE  0EF5               	movlw	high STR_138
 18125  010ED0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18126  010ED2  C228  F1AE         	movff	_load_on_time,?_printf+2	;volatile
 18127  010ED6  C229  F1AF         	movff	_load_on_time+1,?_printf+3	;volatile
 18128  010EDA  C22A  F1B0         	movff	_load_on_time+2,?_printf+4	;volatile
 18129  010EDE  C22B  F1B1         	movff	_load_on_time+3,?_printf+5	;volatile
 18130  010EE2  EC95  F0D4         	call	_printf	;wreg free
 18131                           
 18132                           ;ring_buffer_LUT.c: 572: terminal_textAttributesReset();
 18133  010EE6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18134                           
 18135                           ;ring_buffer_LUT.c: 574: }
 18136  010EEA  0012               	return	
 18137  010EEC                     l1554:
 18138                           
 18139                           ;ring_buffer_LUT.c: 577: else if((0 == strcmp(line, "Max RMS Current?"))) {
 18140  010EEC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18141  010EF0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18142  010EF4  0E31               	movlw	low STR_139
 18143  010EF6  0101               	movlb	1	; () banked
 18144  010EF8  6F19               	movwf	strcmp@s2& (0+255),b
 18145  010EFA  0EFD               	movlw	high STR_139
 18146  010EFC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18147  010EFE  EC9F  F0D1         	call	_strcmp	;wreg free
 18148  010F02  0101               	movlb	1	; () banked
 18149  010F04  5117               	movf	?_strcmp& (0+255),w,b
 18150  010F06  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18151  010F08  A4D8               	btfss	status,2,c
 18152  010F0A  D030               	goto	l1556
 18153                           
 18154                           ; BSR set to: 1
 18155                           ;ring_buffer_LUT.c: 580: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 18156  010F0C  0E61               	movlw	low _max_Irms_address
 18157  010F0E  6EF6               	movwf	tblptrl,c
 18158  010F10                     	if	1	;There is more than 1 active tblptr byte
 18159  010F10  0ECF               	movlw	high _max_Irms_address
 18160  010F12  6EF7               	movwf	tblptrh,c
 18161  010F14                     	endif
 18162  010F14                     	if	1	;There are 3 active tblptr bytes
 18163  010F14  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18164  010F16  6EF8               	movwf	tblptru,c
 18165  010F18                     	endif
 18166  010F18  0009               	tblrd		*+
 18167  010F1A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18168  010F1E  000A               	tblrd		*-
 18169  010F20  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18170  010F24  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18171  010F28  C119  F2AA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 18172  010F2C  C11A  F2AB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 18173  010F30  C11B  F2AC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 18174  010F34  C11C  F2AD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 18175                           
 18176                           ;ring_buffer_LUT.c: 582: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18177  010F38  0E00               	movlw	0
 18178  010F3A  0101               	movlb	1	; () banked
 18179  010F3C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18180  010F3E  0E00               	movlw	0
 18181  010F40  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18182  010F42  0E06               	movlw	6
 18183  010F44  EC30  F0AA         	call	_terminal_textAttributes
 18184                           
 18185                           ;ring_buffer_LUT.c: 583: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 18186  010F48  0E10               	movlw	low STR_140
 18187  010F4A  0101               	movlb	1	; () banked
 18188  010F4C  6FAC               	movwf	printf@f& (0+255),b
 18189  010F4E  0EF6               	movlw	high STR_140
 18190  010F50  6FAD               	movwf	(printf@f+1)& (0+255),b
 18191  010F52  C2AA  F1AE         	movff	ringBufferLUT@max_current_print,?_printf+2
 18192  010F56  C2AB  F1AF         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 18193  010F5A  C2AC  F1B0         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 18194  010F5E  C2AD  F1B1         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 18195  010F62  EC95  F0D4         	call	_printf	;wreg free
 18196                           
 18197                           ;ring_buffer_LUT.c: 584: terminal_textAttributesReset();
 18198  010F66  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18199                           
 18200                           ;ring_buffer_LUT.c: 586: }
 18201  010F6A  0012               	return	
 18202  010F6C                     l1556:
 18203                           
 18204                           ;ring_buffer_LUT.c: 589: else if((0 == strcmp(line, "Max Power?"))) {
 18205  010F6C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18206  010F70  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18207  010F74  0E54               	movlw	low STR_141
 18208  010F76  0101               	movlb	1	; () banked
 18209  010F78  6F19               	movwf	strcmp@s2& (0+255),b
 18210  010F7A  0EFF               	movlw	high STR_141
 18211  010F7C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18212  010F7E  EC9F  F0D1         	call	_strcmp	;wreg free
 18213  010F82  0101               	movlb	1	; () banked
 18214  010F84  5117               	movf	?_strcmp& (0+255),w,b
 18215  010F86  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18216  010F88  A4D8               	btfss	status,2,c
 18217  010F8A  D030               	goto	l1558
 18218                           
 18219                           ; BSR set to: 1
 18220                           ;ring_buffer_LUT.c: 592: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 18221  010F8C  0E5F               	movlw	low _max_Power_address
 18222  010F8E  6EF6               	movwf	tblptrl,c
 18223  010F90                     	if	1	;There is more than 1 active tblptr byte
 18224  010F90  0ECF               	movlw	high _max_Power_address
 18225  010F92  6EF7               	movwf	tblptrh,c
 18226  010F94                     	endif
 18227  010F94                     	if	1	;There are 3 active tblptr bytes
 18228  010F94  0E00               	movlw	low (_max_Power_address shr (0+16))
 18229  010F96  6EF8               	movwf	tblptru,c
 18230  010F98                     	endif
 18231  010F98  0009               	tblrd		*+
 18232  010F9A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18233  010F9E  000A               	tblrd		*-
 18234  010FA0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18235  010FA4  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18236  010FA8  C119  F2AE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 18237  010FAC  C11A  F2AF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 18238  010FB0  C11B  F2B0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 18239  010FB4  C11C  F2B1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 18240                           
 18241                           ;ring_buffer_LUT.c: 594: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18242  010FB8  0E00               	movlw	0
 18243  010FBA  0101               	movlb	1	; () banked
 18244  010FBC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18245  010FBE  0E00               	movlw	0
 18246  010FC0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18247  010FC2  0E06               	movlw	6
 18248  010FC4  EC30  F0AA         	call	_terminal_textAttributes
 18249                           
 18250                           ;ring_buffer_LUT.c: 595: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 18251  010FC8  0E5F               	movlw	low STR_142
 18252  010FCA  0101               	movlb	1	; () banked
 18253  010FCC  6FAC               	movwf	printf@f& (0+255),b
 18254  010FCE  0EF7               	movlw	high STR_142
 18255  010FD0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18256  010FD2  C2AE  F1AE         	movff	ringBufferLUT@max_Power_print,?_printf+2
 18257  010FD6  C2AF  F1AF         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 18258  010FDA  C2B0  F1B0         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 18259  010FDE  C2B1  F1B1         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 18260  010FE2  EC95  F0D4         	call	_printf	;wreg free
 18261                           
 18262                           ;ring_buffer_LUT.c: 596: terminal_textAttributesReset();
 18263  010FE6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18264                           
 18265                           ;ring_buffer_LUT.c: 598: }
 18266  010FEA  0012               	return	
 18267  010FEC                     l1558:
 18268                           
 18269                           ;ring_buffer_LUT.c: 601: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 18270  010FEC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18271  010FF0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18272  010FF4  0E8F               	movlw	low STR_143
 18273  010FF6  0101               	movlb	1	; () banked
 18274  010FF8  6F19               	movwf	strcmp@s2& (0+255),b
 18275  010FFA  0EFC               	movlw	high STR_143
 18276  010FFC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18277  010FFE  EC9F  F0D1         	call	_strcmp	;wreg free
 18278  011002  0101               	movlb	1	; () banked
 18279  011004  5117               	movf	?_strcmp& (0+255),w,b
 18280  011006  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18281  011008  A4D8               	btfss	status,2,c
 18282  01100A  D030               	goto	l1560
 18283                           
 18284                           ; BSR set to: 1
 18285                           ;ring_buffer_LUT.c: 604: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 18286  01100C  0E5D               	movlw	low _max_POS3P3_ADC_Result_address
 18287  01100E  6EF6               	movwf	tblptrl,c
 18288  011010                     	if	1	;There is more than 1 active tblptr byte
 18289  011010  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 18290  011012  6EF7               	movwf	tblptrh,c
 18291  011014                     	endif
 18292  011014                     	if	1	;There are 3 active tblptr bytes
 18293  011014  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18294  011016  6EF8               	movwf	tblptru,c
 18295  011018                     	endif
 18296  011018  0009               	tblrd		*+
 18297  01101A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18298  01101E  000A               	tblrd		*-
 18299  011020  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18300  011024  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18301  011028  C119  F2B2         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 18302  01102C  C11A  F2B3         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 18303  011030  C11B  F2B4         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 18304  011034  C11C  F2B5         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 18305                           
 18306                           ;ring_buffer_LUT.c: 606: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18307  011038  0E00               	movlw	0
 18308  01103A  0101               	movlb	1	; () banked
 18309  01103C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18310  01103E  0E00               	movlw	0
 18311  011040  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18312  011042  0E06               	movlw	6
 18313  011044  EC30  F0AA         	call	_terminal_textAttributes
 18314                           
 18315                           ;ring_buffer_LUT.c: 607: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 18316  011048  0EDC               	movlw	low STR_144
 18317  01104A  0101               	movlb	1	; () banked
 18318  01104C  6FAC               	movwf	printf@f& (0+255),b
 18319  01104E  0EF5               	movlw	high STR_144
 18320  011050  6FAD               	movwf	(printf@f+1)& (0+255),b
 18321  011052  C2B2  F1AE         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 18322  011056  C2B3  F1AF         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 18323  01105A  C2B4  F1B0         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 18324  01105E  C2B5  F1B1         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 18325  011062  EC95  F0D4         	call	_printf	;wreg free
 18326                           
 18327                           ;ring_buffer_LUT.c: 608: terminal_textAttributesReset();
 18328  011066  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18329                           
 18330                           ;ring_buffer_LUT.c: 610: }
 18331  01106A  0012               	return	
 18332  01106C                     l1560:
 18333                           
 18334                           ;ring_buffer_LUT.c: 613: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 18335  01106C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18336  011070  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18337  011074  0EB6               	movlw	low STR_145
 18338  011076  0101               	movlb	1	; () banked
 18339  011078  6F19               	movwf	strcmp@s2& (0+255),b
 18340  01107A  0EFC               	movlw	high STR_145
 18341  01107C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18342  01107E  EC9F  F0D1         	call	_strcmp	;wreg free
 18343  011082  0101               	movlb	1	; () banked
 18344  011084  5117               	movf	?_strcmp& (0+255),w,b
 18345  011086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18346  011088  A4D8               	btfss	status,2,c
 18347  01108A  D030               	goto	l1562
 18348                           
 18349                           ; BSR set to: 1
 18350                           ;ring_buffer_LUT.c: 616: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 18351  01108C  0E5B               	movlw	low _max_POS12_ADC_Result_address
 18352  01108E  6EF6               	movwf	tblptrl,c
 18353  011090                     	if	1	;There is more than 1 active tblptr byte
 18354  011090  0ECF               	movlw	high _max_POS12_ADC_Result_address
 18355  011092  6EF7               	movwf	tblptrh,c
 18356  011094                     	endif
 18357  011094                     	if	1	;There are 3 active tblptr bytes
 18358  011094  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18359  011096  6EF8               	movwf	tblptru,c
 18360  011098                     	endif
 18361  011098  0009               	tblrd		*+
 18362  01109A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18363  01109E  000A               	tblrd		*-
 18364  0110A0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18365  0110A4  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18366  0110A8  C119  F2B6         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3294
 18367  0110AC  C11A  F2B7         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3294+1
 18368  0110B0  C11B  F2B8         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3294+2
 18369  0110B4  C11C  F2B9         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3294+3
 18370                           
 18371                           ;ring_buffer_LUT.c: 618: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18372  0110B8  0E00               	movlw	0
 18373  0110BA  0101               	movlb	1	; () banked
 18374  0110BC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18375  0110BE  0E00               	movlw	0
 18376  0110C0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18377  0110C2  0E06               	movlw	6
 18378  0110C4  EC30  F0AA         	call	_terminal_textAttributes
 18379                           
 18380                           ;ring_buffer_LUT.c: 619: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 18381  0110C8  0E43               	movlw	low STR_146
 18382  0110CA  0101               	movlb	1	; () banked
 18383  0110CC  6FAC               	movwf	printf@f& (0+255),b
 18384  0110CE  0EF6               	movlw	high STR_146
 18385  0110D0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18386  0110D2  C2B6  F1AE         	movff	ringBufferLUT@max_voltage_print_3294,?_printf+2
 18387  0110D6  C2B7  F1AF         	movff	ringBufferLUT@max_voltage_print_3294+1,?_printf+3
 18388  0110DA  C2B8  F1B0         	movff	ringBufferLUT@max_voltage_print_3294+2,?_printf+4
 18389  0110DE  C2B9  F1B1         	movff	ringBufferLUT@max_voltage_print_3294+3,?_printf+5
 18390  0110E2  EC95  F0D4         	call	_printf	;wreg free
 18391                           
 18392                           ;ring_buffer_LUT.c: 620: terminal_textAttributesReset();
 18393  0110E6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18394                           
 18395                           ;ring_buffer_LUT.c: 622: }
 18396  0110EA  0012               	return	
 18397  0110EC                     l1562:
 18398                           
 18399                           ;ring_buffer_LUT.c: 625: else if((0 == strcmp(line, "Max Die Temp?"))) {
 18400  0110EC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18401  0110F0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18402  0110F4  0E69               	movlw	low STR_147
 18403  0110F6  0101               	movlb	1	; () banked
 18404  0110F8  6F19               	movwf	strcmp@s2& (0+255),b
 18405  0110FA  0EFE               	movlw	high STR_147
 18406  0110FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18407  0110FE  EC9F  F0D1         	call	_strcmp	;wreg free
 18408  011102  0101               	movlb	1	; () banked
 18409  011104  5117               	movf	?_strcmp& (0+255),w,b
 18410  011106  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18411  011108  A4D8               	btfss	status,2,c
 18412  01110A  D030               	goto	l1564
 18413                           
 18414                           ; BSR set to: 1
 18415                           ;ring_buffer_LUT.c: 628: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 18416  01110C  0E59               	movlw	low _max_Temp_ADC_Result_address
 18417  01110E  6EF6               	movwf	tblptrl,c
 18418  011110                     	if	1	;There is more than 1 active tblptr byte
 18419  011110  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18420  011112  6EF7               	movwf	tblptrh,c
 18421  011114                     	endif
 18422  011114                     	if	1	;There are 3 active tblptr bytes
 18423  011114  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18424  011116  6EF8               	movwf	tblptru,c
 18425  011118                     	endif
 18426  011118  0009               	tblrd		*+
 18427  01111A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18428  01111E  000A               	tblrd		*-
 18429  011120  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18430  011124  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18431  011128  C119  F2BA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 18432  01112C  C11A  F2BB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 18433  011130  C11B  F2BC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 18434  011134  C11C  F2BD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 18435                           
 18436                           ;ring_buffer_LUT.c: 630: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18437  011138  0E00               	movlw	0
 18438  01113A  0101               	movlb	1	; () banked
 18439  01113C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18440  01113E  0E00               	movlw	0
 18441  011140  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18442  011142  0E06               	movlw	6
 18443  011144  EC30  F0AA         	call	_terminal_textAttributes
 18444                           
 18445                           ;ring_buffer_LUT.c: 631: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 18446  011148  0E8D               	movlw	low STR_148
 18447  01114A  0101               	movlb	1	; () banked
 18448  01114C  6FAC               	movwf	printf@f& (0+255),b
 18449  01114E  0EF7               	movlw	high STR_148
 18450  011150  6FAD               	movwf	(printf@f+1)& (0+255),b
 18451  011152  C2BA  F1AE         	movff	ringBufferLUT@max_temp_print,?_printf+2
 18452  011156  C2BB  F1AF         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 18453  01115A  C2BC  F1B0         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 18454  01115E  C2BD  F1B1         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 18455  011162  EC95  F0D4         	call	_printf	;wreg free
 18456                           
 18457                           ;ring_buffer_LUT.c: 632: terminal_textAttributesReset();
 18458  011166  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18459                           
 18460                           ;ring_buffer_LUT.c: 634: }
 18461  01116A  0012               	return	
 18462  01116C                     l1564:
 18463                           
 18464                           ;ring_buffer_LUT.c: 637: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 18465  01116C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18466  011170  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18467  011174  0E20               	movlw	low STR_149
 18468  011176  0101               	movlb	1	; () banked
 18469  011178  6F19               	movwf	strcmp@s2& (0+255),b
 18470  01117A  0EFD               	movlw	high STR_149
 18471  01117C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18472  01117E  EC9F  F0D1         	call	_strcmp	;wreg free
 18473  011182  0101               	movlb	1	; () banked
 18474  011184  5117               	movf	?_strcmp& (0+255),w,b
 18475  011186  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18476  011188  A4D8               	btfss	status,2,c
 18477  01118A  D030               	goto	l1566
 18478                           
 18479                           ; BSR set to: 1
 18480                           ;ring_buffer_LUT.c: 640: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 18481  01118C  0E57               	movlw	low _max_FVR_ADC_Result_address
 18482  01118E  6EF6               	movwf	tblptrl,c
 18483  011190                     	if	1	;There is more than 1 active tblptr byte
 18484  011190  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18485  011192  6EF7               	movwf	tblptrh,c
 18486  011194                     	endif
 18487  011194                     	if	1	;There are 3 active tblptr bytes
 18488  011194  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18489  011196  6EF8               	movwf	tblptru,c
 18490  011198                     	endif
 18491  011198  0009               	tblrd		*+
 18492  01119A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18493  01119E  000A               	tblrd		*-
 18494  0111A0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18495  0111A4  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18496  0111A8  C119  F2BE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3300
 18497  0111AC  C11A  F2BF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3300+1
 18498  0111B0  C11B  F2C0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3300+2
 18499  0111B4  C11C  F2C1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3300+3
 18500                           
 18501                           ;ring_buffer_LUT.c: 642: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18502  0111B8  0E00               	movlw	0
 18503  0111BA  0101               	movlb	1	; () banked
 18504  0111BC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18505  0111BE  0E00               	movlw	0
 18506  0111C0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18507  0111C2  0E06               	movlw	6
 18508  0111C4  EC30  F0AA         	call	_terminal_textAttributes
 18509                           
 18510                           ;ring_buffer_LUT.c: 643: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 18511  0111C8  0E9F               	movlw	low STR_150
 18512  0111CA  0101               	movlb	1	; () banked
 18513  0111CC  6FAC               	movwf	printf@f& (0+255),b
 18514  0111CE  0EF4               	movlw	high STR_150
 18515  0111D0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18516  0111D2  C2BE  F1AE         	movff	ringBufferLUT@max_voltage_print_3300,?_printf+2
 18517  0111D6  C2BF  F1AF         	movff	ringBufferLUT@max_voltage_print_3300+1,?_printf+3
 18518  0111DA  C2C0  F1B0         	movff	ringBufferLUT@max_voltage_print_3300+2,?_printf+4
 18519  0111DE  C2C1  F1B1         	movff	ringBufferLUT@max_voltage_print_3300+3,?_printf+5
 18520  0111E2  EC95  F0D4         	call	_printf	;wreg free
 18521                           
 18522                           ;ring_buffer_LUT.c: 644: terminal_textAttributesReset();
 18523  0111E6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18524                           
 18525                           ;ring_buffer_LUT.c: 646: }
 18526  0111EA  0012               	return	
 18527  0111EC                     l1566:
 18528                           
 18529                           ;ring_buffer_LUT.c: 649: else if((0 == strcmp(line, "Clear Max Values"))) {
 18530  0111EC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18531  0111F0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18532  0111F4  0E53               	movlw	low STR_151
 18533  0111F6  0101               	movlb	1	; () banked
 18534  0111F8  6F19               	movwf	strcmp@s2& (0+255),b
 18535  0111FA  0EFD               	movlw	high STR_151
 18536  0111FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18537  0111FE  EC9F  F0D1         	call	_strcmp	;wreg free
 18538  011202  0101               	movlb	1	; () banked
 18539  011204  5117               	movf	?_strcmp& (0+255),w,b
 18540  011206  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18541  011208  A4D8               	btfss	status,2,c
 18542  01120A  D0CC               	goto	l1568
 18543                           
 18544                           ; BSR set to: 1
 18545                           ;ring_buffer_LUT.c: 652: writeDoubleToEEPROM(0.0, max_Irms_address);
 18546  01120C  0E00               	movlw	0
 18547  01120E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18548  011210  0E00               	movlw	0
 18549  011212  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18550  011214  0E00               	movlw	0
 18551  011216  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18552  011218  0E00               	movlw	0
 18553  01121A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18554  01121C  0E61               	movlw	low _max_Irms_address
 18555  01121E  6EF6               	movwf	tblptrl,c
 18556  011220                     	if	1	;There is more than 1 active tblptr byte
 18557  011220  0ECF               	movlw	high _max_Irms_address
 18558  011222  6EF7               	movwf	tblptrh,c
 18559  011224                     	endif
 18560  011224                     	if	1	;There are 3 active tblptr bytes
 18561  011224  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18562  011226  6EF8               	movwf	tblptru,c
 18563  011228                     	endif
 18564  011228  0009               	tblrd		*+
 18565  01122A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18566  01122E  000A               	tblrd		*-
 18567  011230  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18568  011234  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18569                           
 18570                           ;ring_buffer_LUT.c: 653: writeDoubleToEEPROM(0.0, max_Power_address);
 18571  011238  0E00               	movlw	0
 18572  01123A  0101               	movlb	1	; () banked
 18573  01123C  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18574  01123E  0E00               	movlw	0
 18575  011240  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18576  011242  0E00               	movlw	0
 18577  011244  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18578  011246  0E00               	movlw	0
 18579  011248  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18580  01124A  0E5F               	movlw	low _max_Power_address
 18581  01124C  6EF6               	movwf	tblptrl,c
 18582  01124E                     	if	1	;There is more than 1 active tblptr byte
 18583  01124E  0ECF               	movlw	high _max_Power_address
 18584  011250  6EF7               	movwf	tblptrh,c
 18585  011252                     	endif
 18586  011252                     	if	1	;There are 3 active tblptr bytes
 18587  011252  0E00               	movlw	low (_max_Power_address shr (0+16))
 18588  011254  6EF8               	movwf	tblptru,c
 18589  011256                     	endif
 18590  011256  0009               	tblrd		*+
 18591  011258  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18592  01125C  000A               	tblrd		*-
 18593  01125E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18594  011262  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18595                           
 18596                           ;ring_buffer_LUT.c: 654: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 18597  011266  0E00               	movlw	0
 18598  011268  0101               	movlb	1	; () banked
 18599  01126A  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18600  01126C  0E00               	movlw	0
 18601  01126E  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18602  011270  0E00               	movlw	0
 18603  011272  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18604  011274  0E00               	movlw	0
 18605  011276  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18606  011278  0E5D               	movlw	low _max_POS3P3_ADC_Result_address
 18607  01127A  6EF6               	movwf	tblptrl,c
 18608  01127C                     	if	1	;There is more than 1 active tblptr byte
 18609  01127C  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 18610  01127E  6EF7               	movwf	tblptrh,c
 18611  011280                     	endif
 18612  011280                     	if	1	;There are 3 active tblptr bytes
 18613  011280  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18614  011282  6EF8               	movwf	tblptru,c
 18615  011284                     	endif
 18616  011284  0009               	tblrd		*+
 18617  011286  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18618  01128A  000A               	tblrd		*-
 18619  01128C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18620  011290  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18621                           
 18622                           ;ring_buffer_LUT.c: 655: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 18623  011294  0E00               	movlw	0
 18624  011296  0101               	movlb	1	; () banked
 18625  011298  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18626  01129A  0E00               	movlw	0
 18627  01129C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18628  01129E  0E00               	movlw	0
 18629  0112A0  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18630  0112A2  0E00               	movlw	0
 18631  0112A4  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18632  0112A6  0E5B               	movlw	low _max_POS12_ADC_Result_address
 18633  0112A8  6EF6               	movwf	tblptrl,c
 18634  0112AA                     	if	1	;There is more than 1 active tblptr byte
 18635  0112AA  0ECF               	movlw	high _max_POS12_ADC_Result_address
 18636  0112AC  6EF7               	movwf	tblptrh,c
 18637  0112AE                     	endif
 18638  0112AE                     	if	1	;There are 3 active tblptr bytes
 18639  0112AE  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18640  0112B0  6EF8               	movwf	tblptru,c
 18641  0112B2                     	endif
 18642  0112B2  0009               	tblrd		*+
 18643  0112B4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18644  0112B8  000A               	tblrd		*-
 18645  0112BA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18646  0112BE  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18647                           
 18648                           ;ring_buffer_LUT.c: 656: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 18649  0112C2  0E00               	movlw	0
 18650  0112C4  0101               	movlb	1	; () banked
 18651  0112C6  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18652  0112C8  0E00               	movlw	0
 18653  0112CA  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18654  0112CC  0E00               	movlw	0
 18655  0112CE  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18656  0112D0  0E00               	movlw	0
 18657  0112D2  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18658  0112D4  0E59               	movlw	low _max_Temp_ADC_Result_address
 18659  0112D6  6EF6               	movwf	tblptrl,c
 18660  0112D8                     	if	1	;There is more than 1 active tblptr byte
 18661  0112D8  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18662  0112DA  6EF7               	movwf	tblptrh,c
 18663  0112DC                     	endif
 18664  0112DC                     	if	1	;There are 3 active tblptr bytes
 18665  0112DC  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18666  0112DE  6EF8               	movwf	tblptru,c
 18667  0112E0                     	endif
 18668  0112E0  0009               	tblrd		*+
 18669  0112E2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18670  0112E6  000A               	tblrd		*-
 18671  0112E8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18672  0112EC  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18673                           
 18674                           ;ring_buffer_LUT.c: 657: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 18675  0112F0  0E00               	movlw	0
 18676  0112F2  0101               	movlb	1	; () banked
 18677  0112F4  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18678  0112F6  0E00               	movlw	0
 18679  0112F8  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18680  0112FA  0E00               	movlw	0
 18681  0112FC  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18682  0112FE  0E00               	movlw	0
 18683  011300  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18684  011302  0E57               	movlw	low _max_FVR_ADC_Result_address
 18685  011304  6EF6               	movwf	tblptrl,c
 18686  011306                     	if	1	;There is more than 1 active tblptr byte
 18687  011306  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18688  011308  6EF7               	movwf	tblptrh,c
 18689  01130A                     	endif
 18690  01130A                     	if	1	;There are 3 active tblptr bytes
 18691  01130A  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18692  01130C  6EF8               	movwf	tblptru,c
 18693  01130E                     	endif
 18694  01130E  0009               	tblrd		*+
 18695  011310  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18696  011314  000A               	tblrd		*-
 18697  011316  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18698  01131A  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18699                           
 18700                           ;ring_buffer_LUT.c: 660: max_Irms = 0.0;
 18701  01131E  0E00               	movlw	0
 18702  011320  0102               	movlb	2	; () banked
 18703  011322  6F24               	movwf	_max_Irms& (0+255),b	;volatile
 18704  011324  0E00               	movlw	0
 18705  011326  6F25               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 18706  011328  0E00               	movlw	0
 18707  01132A  6F26               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 18708  01132C  0E00               	movlw	0
 18709  01132E  6F27               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 18710                           
 18711                           ; BSR set to: 2
 18712                           ;ring_buffer_LUT.c: 661: max_Power = 0.0;
 18713  011330  0E00               	movlw	0
 18714  011332  6F20               	movwf	_max_Power& (0+255),b	;volatile
 18715  011334  0E00               	movlw	0
 18716  011336  6F21               	movwf	(_max_Power+1)& (0+255),b	;volatile
 18717  011338  0E00               	movlw	0
 18718  01133A  6F22               	movwf	(_max_Power+2)& (0+255),b	;volatile
 18719  01133C  0E00               	movlw	0
 18720  01133E  6F23               	movwf	(_max_Power+3)& (0+255),b	;volatile
 18721                           
 18722                           ; BSR set to: 2
 18723                           ;ring_buffer_LUT.c: 662: max_POS3P3_ADC_Result = 0.0;
 18724  011340  0E00               	movlw	0
 18725  011342  6F1C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 18726  011344  0E00               	movlw	0
 18727  011346  6F1D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 18728  011348  0E00               	movlw	0
 18729  01134A  6F1E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 18730  01134C  0E00               	movlw	0
 18731  01134E  6F1F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 18732                           
 18733                           ; BSR set to: 2
 18734                           ;ring_buffer_LUT.c: 663: max_POS12_ADC_Result = 0.0;
 18735  011350  0E00               	movlw	0
 18736  011352  6F18               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 18737  011354  0E00               	movlw	0
 18738  011356  6F19               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 18739  011358  0E00               	movlw	0
 18740  01135A  6F1A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 18741  01135C  0E00               	movlw	0
 18742  01135E  6F1B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 18743                           
 18744                           ; BSR set to: 2
 18745                           ;ring_buffer_LUT.c: 664: max_Temp_ADC_Result = 0.0;
 18746  011360  0E00               	movlw	0
 18747  011362  6F14               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 18748  011364  0E00               	movlw	0
 18749  011366  6F15               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 18750  011368  0E00               	movlw	0
 18751  01136A  6F16               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 18752  01136C  0E00               	movlw	0
 18753  01136E  6F17               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 18754                           
 18755                           ; BSR set to: 2
 18756                           ;ring_buffer_LUT.c: 665: max_FVR_ADC_Result = 0.0;
 18757  011370  0E00               	movlw	0
 18758  011372  6F10               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 18759  011374  0E00               	movlw	0
 18760  011376  6F11               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 18761  011378  0E00               	movlw	0
 18762  01137A  6F12               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 18763  01137C  0E00               	movlw	0
 18764  01137E  6F13               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 18765                           
 18766                           ; BSR set to: 2
 18767                           ;ring_buffer_LUT.c: 667: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18768  011380  0E00               	movlw	0
 18769  011382  0101               	movlb	1	; () banked
 18770  011384  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18771  011386  0E00               	movlw	0
 18772  011388  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18773  01138A  0E02               	movlw	2
 18774  01138C  EC30  F0AA         	call	_terminal_textAttributes
 18775                           
 18776                           ;ring_buffer_LUT.c: 668: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 18777  011390  0E33               	movlw	low STR_152
 18778  011392  0101               	movlb	1	; () banked
 18779  011394  6FAC               	movwf	printf@f& (0+255),b
 18780  011396  0EF4               	movlw	high STR_152
 18781  011398  6FAD               	movwf	(printf@f+1)& (0+255),b
 18782  01139A  EC95  F0D4         	call	_printf	;wreg free
 18783                           
 18784                           ;ring_buffer_LUT.c: 669: terminal_textAttributesReset();
 18785  01139E  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18786                           
 18787                           ;ring_buffer_LUT.c: 671: }
 18788  0113A2  0012               	return	
 18789  0113A4                     l1568:
 18790                           
 18791                           ;ring_buffer_LUT.c: 675: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 18792  0113A4  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18793  0113A8  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18794  0113AC  0EE7               	movlw	low STR_153
 18795  0113AE  0101               	movlb	1	; () banked
 18796  0113B0  6F19               	movwf	strcmp@s2& (0+255),b
 18797  0113B2  0EFA               	movlw	high STR_153
 18798  0113B4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18799  0113B6  EC9F  F0D1         	call	_strcmp	;wreg free
 18800  0113BA  0101               	movlb	1	; () banked
 18801  0113BC  5117               	movf	?_strcmp& (0+255),w,b
 18802  0113BE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18803  0113C0  A4D8               	btfss	status,2,c
 18804  0113C2  D011               	goto	l1570
 18805                           
 18806                           ; BSR set to: 1
 18807                           ;ring_buffer_LUT.c: 677: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18808  0113C4  0E00               	movlw	0
 18809  0113C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18810  0113C8  0E00               	movlw	0
 18811  0113CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18812  0113CC  0E03               	movlw	3
 18813  0113CE  EC30  F0AA         	call	_terminal_textAttributes
 18814                           
 18815                           ;ring_buffer_LUT.c: 678: printf("List of supported Device Control Commands:\n\r"
 18816                           ;ring_buffer_LUT.c: 680: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18817                           ;ring_buffer_LUT.c: 681: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18818                           ;ring_buffer_LUT.c: 682: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18819                           ;ring_buffer_LUT.c: 683: "   *IDN?: Returns device identification string\n\r"
 18820                           ;ring_buffer_LUT.c: 684: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 18821  0113D2  0EC3               	movlw	low STR_154
 18822  0113D4  0101               	movlb	1	; () banked
 18823  0113D6  6FAC               	movwf	printf@f& (0+255),b
 18824  0113D8  0EDE               	movlw	high STR_154
 18825  0113DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 18826  0113DC  EC95  F0D4         	call	_printf	;wreg free
 18827                           
 18828                           ;ring_buffer_LUT.c: 696: terminal_textAttributesReset();
 18829  0113E0  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18830                           
 18831                           ;ring_buffer_LUT.c: 698: }
 18832  0113E4  0012               	return	
 18833  0113E6                     l1570:
 18834                           
 18835                           ;ring_buffer_LUT.c: 701: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 18836  0113E6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18837  0113EA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18838  0113EE  0E0E               	movlw	low STR_155
 18839  0113F0  0101               	movlb	1	; () banked
 18840  0113F2  6F19               	movwf	strcmp@s2& (0+255),b
 18841  0113F4  0EFA               	movlw	high STR_155
 18842  0113F6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18843  0113F8  EC9F  F0D1         	call	_strcmp	;wreg free
 18844  0113FC  0101               	movlb	1	; () banked
 18845  0113FE  5117               	movf	?_strcmp& (0+255),w,b
 18846  011400  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18847  011402  A4D8               	btfss	status,2,c
 18848  011404  D011               	goto	l1572
 18849                           
 18850                           ; BSR set to: 1
 18851                           ;ring_buffer_LUT.c: 703: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18852  011406  0E00               	movlw	0
 18853  011408  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18854  01140A  0E00               	movlw	0
 18855  01140C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18856  01140E  0E03               	movlw	3
 18857  011410  EC30  F0AA         	call	_terminal_textAttributes
 18858                           
 18859                           ;ring_buffer_LUT.c: 704: printf("List of supported Device Measurement Commands:\n\r"
 18860                           ;ring_buffer_LUT.c: 706: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 18861                           ;ring_buffer_LUT.c: 707: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 18862                           ;ring_buffer_LUT.c: 708: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 18863                           ;ring_buffer_LUT.c: 709: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 18864                           ;ring_buffer_LUT.c: 710: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 18865  011414  0E7D               	movlw	low STR_156
 18866  011416  0101               	movlb	1	; () banked
 18867  011418  6FAC               	movwf	printf@f& (0+255),b
 18868  01141A  0EE5               	movlw	high STR_156
 18869  01141C  6FAD               	movwf	(printf@f+1)& (0+255),b
 18870  01141E  EC95  F0D4         	call	_printf	;wreg free
 18871                           
 18872                           ;ring_buffer_LUT.c: 717: terminal_textAttributesReset();
 18873  011422  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18874                           
 18875                           ;ring_buffer_LUT.c: 719: }
 18876  011426  0012               	return	
 18877  011428                     l1572:
 18878                           
 18879                           ;ring_buffer_LUT.c: 722: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 18880  011428  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18881  01142C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18882  011430  0EEC               	movlw	low STR_157
 18883  011432  0101               	movlb	1	; () banked
 18884  011434  6F19               	movwf	strcmp@s2& (0+255),b
 18885  011436  0EF9               	movlw	high STR_157
 18886  011438  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18887  01143A  EC9F  F0D1         	call	_strcmp	;wreg free
 18888  01143E  0101               	movlb	1	; () banked
 18889  011440  5117               	movf	?_strcmp& (0+255),w,b
 18890  011442  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18891  011444  A4D8               	btfss	status,2,c
 18892  011446  D011               	goto	l1574
 18893                           
 18894                           ; BSR set to: 1
 18895                           ;ring_buffer_LUT.c: 724: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18896  011448  0E00               	movlw	0
 18897  01144A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18898  01144C  0E00               	movlw	0
 18899  01144E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18900  011450  0E03               	movlw	3
 18901  011452  EC30  F0AA         	call	_terminal_textAttributes
 18902                           
 18903                           ;ring_buffer_LUT.c: 725: printf("List of supported Primary Measurement Commands:\n\r"
 18904                           ;ring_buffer_LUT.c: 727: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 18905                           ;ring_buffer_LUT.c: 728: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 18906                           ;ring_buffer_LUT.c: 729: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 18907                           ;ring_buffer_LUT.c: 730: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 18908  011456  0E91               	movlw	low STR_158
 18909  011458  0101               	movlb	1	; () banked
 18910  01145A  6FAC               	movwf	printf@f& (0+255),b
 18911  01145C  0EE2               	movlw	high STR_158
 18912  01145E  6FAD               	movwf	(printf@f+1)& (0+255),b
 18913  011460  EC95  F0D4         	call	_printf	;wreg free
 18914                           
 18915                           ;ring_buffer_LUT.c: 738: terminal_textAttributesReset();
 18916  011464  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18917                           
 18918                           ;ring_buffer_LUT.c: 740: }
 18919  011468  0012               	return	
 18920  01146A                     l1574:
 18921                           
 18922                           ;ring_buffer_LUT.c: 743: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 18923  01146A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18924  01146E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18925  011472  0E04               	movlw	low STR_159
 18926  011474  0101               	movlb	1	; () banked
 18927  011476  6F19               	movwf	strcmp@s2& (0+255),b
 18928  011478  0EFB               	movlw	high STR_159
 18929  01147A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18930  01147C  EC9F  F0D1         	call	_strcmp	;wreg free
 18931  011480  0101               	movlb	1	; () banked
 18932  011482  5117               	movf	?_strcmp& (0+255),w,b
 18933  011484  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18934  011486  A4D8               	btfss	status,2,c
 18935  011488  D011               	goto	l1576
 18936                           
 18937                           ; BSR set to: 1
 18938                           ;ring_buffer_LUT.c: 745: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18939  01148A  0E00               	movlw	0
 18940  01148C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18941  01148E  0E00               	movlw	0
 18942  011490  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18943  011492  0E03               	movlw	3
 18944  011494  EC30  F0AA         	call	_terminal_textAttributes
 18945                           
 18946                           ;ring_buffer_LUT.c: 746: printf("List of supported Output Control Commands:\n\r"
 18947                           ;ring_buffer_LUT.c: 748: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 18948                           ;ring_buffer_LUT.c: 749: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 18949                           ;ring_buffer_LUT.c: 750: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 18950                           ;ring_buffer_LUT.c: 751: "   Disable Load: Disables the output TRIAC completely\n\r"
 18951                           ;ring_buffer_LUT.c: 752: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 18952  011498  0E4D               	movlw	low STR_160
 18953  01149A  0101               	movlb	1	; () banked
 18954  01149C  6FAC               	movwf	printf@f& (0+255),b
 18955  01149E  0EE8               	movlw	high STR_160
 18956  0114A0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18957  0114A2  EC95  F0D4         	call	_printf	;wreg free
 18958                           
 18959                           ;ring_buffer_LUT.c: 757: terminal_textAttributesReset();
 18960  0114A6  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18961                           
 18962                           ;ring_buffer_LUT.c: 759: }
 18963  0114AA  0012               	return	
 18964  0114AC                     l1576:
 18965                           
 18966                           ;ring_buffer_LUT.c: 762: else if((0 == strcmp(line, "Help All"))) {
 18967  0114AC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18968  0114B0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18969  0114B4  0E92               	movlw	low STR_161
 18970  0114B6  0101               	movlb	1	; () banked
 18971  0114B8  6F19               	movwf	strcmp@s2& (0+255),b
 18972  0114BA  0EFF               	movlw	high STR_161
 18973  0114BC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18974  0114BE  EC9F  F0D1         	call	_strcmp	;wreg free
 18975  0114C2  0101               	movlb	1	; () banked
 18976  0114C4  5117               	movf	?_strcmp& (0+255),w,b
 18977  0114C6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18978  0114C8  A4D8               	btfss	status,2,c
 18979  0114CA  D011               	goto	l1578
 18980                           
 18981                           ; BSR set to: 1
 18982                           ;ring_buffer_LUT.c: 764: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18983  0114CC  0E00               	movlw	0
 18984  0114CE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18985  0114D0  0E00               	movlw	0
 18986  0114D2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18987  0114D4  0E03               	movlw	3
 18988  0114D6  EC30  F0AA         	call	_terminal_textAttributes
 18989                           
 18990                           ;ring_buffer_LUT.c: 765: printf("List of all supported commands:\n\r"
 18991                           ;ring_buffer_LUT.c: 767: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 18992                           ;ring_buffer_LUT.c: 768: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18993                           ;ring_buffer_LUT.c: 769: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18994                           ;ring_buffer_LUT.c: 770: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18995                           ;ring_buffer_LUT.c: 771: "   *IDN?: Returns device identification string\n\r"
 18996  0114DA  0EB5               	movlw	low STR_162
 18997  0114DC  0101               	movlb	1	; () banked
 18998  0114DE  6FAC               	movwf	printf@f& (0+255),b
 18999  0114E0  0ED2               	movlw	high STR_162
 19000  0114E2  6FAD               	movwf	(printf@f+1)& (0+255),b
 19001  0114E4  EC95  F0D4         	call	_printf	;wreg free
 19002                           
 19003                           ;ring_buffer_LUT.c: 816: terminal_textAttributesReset();
 19004  0114E8  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19005                           
 19006                           ;ring_buffer_LUT.c: 818: }
 19007  0114EC  0012               	return	
 19008  0114EE                     l1578:
 19009                           
 19010                           ;ring_buffer_LUT.c: 822: else if((0 == strcmp(line, "Help"))) {
 19011  0114EE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19012  0114F2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19013  0114F6  0EAE               	movlw	low STR_163
 19014  0114F8  0101               	movlb	1	; () banked
 19015  0114FA  6F19               	movwf	strcmp@s2& (0+255),b
 19016  0114FC  0EFF               	movlw	high STR_163
 19017  0114FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19018  011500  EC9F  F0D1         	call	_strcmp	;wreg free
 19019  011504  0101               	movlb	1	; () banked
 19020  011506  5117               	movf	?_strcmp& (0+255),w,b
 19021  011508  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19022  01150A  A4D8               	btfss	status,2,c
 19023  01150C  D050               	goto	l1580
 19024                           
 19025                           ; BSR set to: 1
 19026                           ;ring_buffer_LUT.c: 824: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19027  01150E  0E00               	movlw	0
 19028  011510  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19029  011512  0E00               	movlw	0
 19030  011514  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19031  011516  0E03               	movlw	3
 19032  011518  EC30  F0AA         	call	_terminal_textAttributes
 19033                           
 19034                           ;ring_buffer_LUT.c: 825: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 19035                           ;ring_buffer_LUT.c: 826: "Try 'Help <command set>'\n\r\n\r"
 19036                           ;ring_buffer_LUT.c: 828: "Supported Command Sets:\n\r"
 19037                           ;ring_buffer_LUT.c: 829: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 19038                           ;ring_buffer_LUT.c: 830: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 19039                           ;ring_buffer_LUT.c: 831: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 19040  01151C  0E39               	movlw	low STR_164
 19041  01151E  0101               	movlb	1	; () banked
 19042  011520  6FAC               	movwf	printf@f& (0+255),b
 19043  011522  0EEA               	movlw	high STR_164
 19044  011524  6FAD               	movwf	(printf@f+1)& (0+255),b
 19045  011526  EC95  F0D4         	call	_printf	;wreg free
 19046                           
 19047                           ;ring_buffer_LUT.c: 838: terminal_printNewline();
 19048  01152A  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 19049                           
 19050                           ;ring_buffer_LUT.c: 839: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 19051  01152E  0EFC               	movlw	low STR_165
 19052  011530  0101               	movlb	1	; () banked
 19053  011532  6FAC               	movwf	printf@f& (0+255),b
 19054  011534  0EF3               	movlw	high STR_165
 19055  011536  6FAD               	movwf	(printf@f+1)& (0+255),b
 19056  011538  EC95  F0D4         	call	_printf	;wreg free
 19057                           
 19058                           ;ring_buffer_LUT.c: 841: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19059  01153C  0E00               	movlw	0
 19060  01153E  0101               	movlb	1	; () banked
 19061  011540  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19062  011542  0E00               	movlw	0
 19063  011544  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19064  011546  0E02               	movlw	2
 19065  011548  EC30  F0AA         	call	_terminal_textAttributes
 19066                           
 19067                           ;ring_buffer_LUT.c: 842: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 19068  01154C  0E60               	movlw	low STR_166
 19069  01154E  0101               	movlb	1	; () banked
 19070  011550  6FAC               	movwf	printf@f& (0+255),b
 19071  011552  0EF2               	movlw	high STR_166
 19072  011554  6FAD               	movwf	(printf@f+1)& (0+255),b
 19073  011556  EC95  F0D4         	call	_printf	;wreg free
 19074                           
 19075                           ;ring_buffer_LUT.c: 843: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19076  01155A  0E00               	movlw	0
 19077  01155C  0101               	movlb	1	; () banked
 19078  01155E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19079  011560  0E00               	movlw	0
 19080  011562  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19081  011564  0E06               	movlw	6
 19082  011566  EC30  F0AA         	call	_terminal_textAttributes
 19083                           
 19084                           ;ring_buffer_LUT.c: 844: printf("Measurement responses appear in cyan\n\r");
 19085  01156A  0E60               	movlw	low STR_167
 19086  01156C  0101               	movlb	1	; () banked
 19087  01156E  6FAC               	movwf	printf@f& (0+255),b
 19088  011570  0EF8               	movlw	high STR_167
 19089  011572  6FAD               	movwf	(printf@f+1)& (0+255),b
 19090  011574  EC95  F0D4         	call	_printf	;wreg free
 19091                           
 19092                           ;ring_buffer_LUT.c: 845: terminal_textAttributes(RED, BLACK, NORMAL);
 19093  011578  0E00               	movlw	0
 19094  01157A  0101               	movlb	1	; () banked
 19095  01157C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19096  01157E  0E00               	movlw	0
 19097  011580  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19098  011582  0E01               	movlw	1
 19099  011584  EC30  F0AA         	call	_terminal_textAttributes
 19100                           
 19101                           ;ring_buffer_LUT.c: 846: printf("Errors and negative responses appear in red\n\r");
 19102  011588  0E03               	movlw	low STR_168
 19103  01158A  0101               	movlb	1	; () banked
 19104  01158C  6FAC               	movwf	printf@f& (0+255),b
 19105  01158E  0EF7               	movlw	high STR_168
 19106  011590  6FAD               	movwf	(printf@f+1)& (0+255),b
 19107  011592  EC95  F0D4         	call	_printf	;wreg free
 19108                           
 19109                           ;ring_buffer_LUT.c: 847: terminal_textAttributesReset();
 19110  011596  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19111                           
 19112                           ;ring_buffer_LUT.c: 848: printf("User input appears in white\n\r");
 19113  01159A  0EAC               	movlw	low STR_169
 19114  01159C  0101               	movlb	1	; () banked
 19115  01159E  6FAC               	movwf	printf@f& (0+255),b
 19116  0115A0  0EFA               	movlw	high STR_169
 19117  0115A2  6FAD               	movwf	(printf@f+1)& (0+255),b
 19118  0115A4  EC95  F0D4         	call	_printf	;wreg free
 19119                           
 19120                           ;ring_buffer_LUT.c: 851: terminal_printNewline();
 19121  0115A8  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 19122                           
 19123                           ;ring_buffer_LUT.c: 853: }
 19124  0115AC  0012               	return	
 19125  0115AE                     l1580:
 19126                           
 19127                           ;ring_buffer_LUT.c: 856: else if ((0 == strcmp(line, "Easter Egg"))) {
 19128  0115AE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19129  0115B2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19130  0115B6  0E5F               	movlw	low STR_170
 19131  0115B8  0101               	movlb	1	; () banked
 19132  0115BA  6F19               	movwf	strcmp@s2& (0+255),b
 19133  0115BC  0EFF               	movlw	high STR_170
 19134  0115BE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19135  0115C0  EC9F  F0D1         	call	_strcmp	;wreg free
 19136  0115C4  0101               	movlb	1	; () banked
 19137  0115C6  5117               	movf	?_strcmp& (0+255),w,b
 19138  0115C8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19139  0115CA  A4D8               	btfss	status,2,c
 19140  0115CC  0012               	return	
 19141                           
 19142                           ; BSR set to: 1
 19143                           ;ring_buffer_LUT.c: 858: terminal_printNewline();
 19144  0115CE  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 19145                           
 19146                           ;ring_buffer_LUT.c: 859: terminal_textAttributes(RED, BLACK, NORMAL);
 19147  0115D2  0E00               	movlw	0
 19148  0115D4  0101               	movlb	1	; () banked
 19149  0115D6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19150  0115D8  0E00               	movlw	0
 19151  0115DA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19152  0115DC  0E01               	movlw	1
 19153  0115DE  EC30  F0AA         	call	_terminal_textAttributes
 19154                           
 19155                           ;ring_buffer_LUT.c: 860: printf(
 19156                           ;ring_buffer_LUT.c: 861: "    _   ___   ___                      __  __     _           
      +                                         _   ___  _      \n\r"
 19157                           ;ring_buffer_LUT.c: 862: "   /_\\ / __| | _ \\_____ __ _____ _ _  |  \\/  |___| |_ ___ _
      +                           _   __ _ _ _  __| | |   \\(_)_ __  _ __  ___ _ _ \n\r"
 19158                           ;ring_buffer_LUT.c: 863: "  / _ \\ (__  |  _/ _ \\ V  V / -_) '_| | |\\/| / -_)  _/ -_) 
      +                          '_| / _` | ' \\/ _` | | |) | | '  \\| '  \\/ -_) '_|\n\r"
 19159                           ;ring_buffer_LUT.c: 864: " /_/ \\_\\___| |_| \\___/\\_/\\_/\\___|_|   |_|  |_\\___|\\__\
      +                          \___|_|   \\__,_|_||_\\__,_| |___/|_|_|_|_|_|_|_\\___|_|  \n\r"
 19160  0115E2  0E0F               	movlw	low STR_171
 19161  0115E4  0101               	movlb	1	; () banked
 19162  0115E6  6FAC               	movwf	printf@f& (0+255),b
 19163  0115E8  0EEC               	movlw	high STR_171
 19164  0115EA  6FAD               	movwf	(printf@f+1)& (0+255),b
 19165  0115EC  EC95  F0D4         	call	_printf	;wreg free
 19166                           
 19167                           ;ring_buffer_LUT.c: 869: terminal_printNewline();
 19168  0115F0  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 19169                           
 19170                           ;ring_buffer_LUT.c: 870: terminal_textAttributes(YELLOW, BLUE, NORMAL);
 19171  0115F4  0E04               	movlw	4
 19172  0115F6  0101               	movlb	1	; () banked
 19173  0115F8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19174  0115FA  0E00               	movlw	0
 19175  0115FC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19176  0115FE  0E03               	movlw	3
 19177  011600  EC30  F0AA         	call	_terminal_textAttributes
 19178                           
 19179                           ;ring_buffer_LUT.c: 871: printf("Marquette University EECE\n\r");
 19180  011604  0E21               	movlw	low STR_172
 19181  011606  0101               	movlb	1	; () banked
 19182  011608  6FAC               	movwf	printf@f& (0+255),b
 19183  01160A  0EFB               	movlw	high STR_172
 19184  01160C  6FAD               	movwf	(printf@f+1)& (0+255),b
 19185  01160E  EC95  F0D4         	call	_printf	;wreg free
 19186                           
 19187                           ;ring_buffer_LUT.c: 872: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19188  011612  0E00               	movlw	0
 19189  011614  0101               	movlb	1	; () banked
 19190  011616  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19191  011618  0E00               	movlw	0
 19192  01161A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19193  01161C  0E02               	movlw	2
 19194  01161E  EC30  F0AA         	call	_terminal_textAttributes
 19195                           
 19196                           ;ring_buffer_LUT.c: 873: printf("ELEN 3035 Final Project\n\r");
 19197  011622  0EBB               	movlw	low (STR_56+21)
 19198  011624  0101               	movlb	1	; () banked
 19199  011626  6FAC               	movwf	printf@f& (0+255),b
 19200  011628  0EF6               	movlw	high (STR_56+21)
 19201  01162A  6FAD               	movwf	(printf@f+1)& (0+255),b
 19202  01162C  EC95  F0D4         	call	_printf	;wreg free
 19203                           
 19204                           ;ring_buffer_LUT.c: 874: printf("Drew Maatman and Gabe Thalji\n\r");
 19205  011630  0E8D               	movlw	low STR_174
 19206  011632  0101               	movlb	1	; () banked
 19207  011634  6FAC               	movwf	printf@f& (0+255),b
 19208  011636  0EFA               	movlw	high STR_174
 19209  011638  6FAD               	movwf	(printf@f+1)& (0+255),b
 19210  01163A  EC95  F0D4         	call	_printf	;wreg free
 19211                           
 19212                           ;ring_buffer_LUT.c: 875: terminal_textAttributes(YELLOW, BLACK, BOLD);
 19213  01163E  0E00               	movlw	0
 19214  011640  0101               	movlb	1	; () banked
 19215  011642  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19216  011644  0E01               	movlw	1
 19217  011646  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19218  011648  0E03               	movlw	3
 19219  01164A  EC30  F0AA         	call	_terminal_textAttributes
 19220                           
 19221                           ;ring_buffer_LUT.c: 876: printf("PSOCs SUCK\n\r");
 19222  01164E  0E91               	movlw	low STR_175
 19223  011650  0101               	movlb	1	; () banked
 19224  011652  6FAC               	movwf	printf@f& (0+255),b
 19225  011654  0EFE               	movlw	high STR_175
 19226  011656  6FAD               	movwf	(printf@f+1)& (0+255),b
 19227  011658  EC95  F0D4         	call	_printf	;wreg free
 19228                           
 19229                           ;ring_buffer_LUT.c: 877: terminal_textAttributesReset();
 19230  01165C  EC4B  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19231                           
 19232                           ;ring_buffer_LUT.c: 878: terminal_printNewline();
 19233  011660  EC65  F0D8         	call	_terminal_printNewline	;wreg free
 19234  011664  0012               	return	
 19235  011666                     __end_of_ringBufferLUT:
 19236                           	opt stack 0
 19237                           tblptru	equ	0xFF8
 19238                           tblptrh	equ	0xFF7
 19239                           tblptrl	equ	0xFF6
 19240                           tablat	equ	0xFF5
 19241                           intcon	equ	0xFF2
 19242                           postinc0	equ	0xFEE
 19243                           wreg	equ	0xFE8
 19244                           indf1	equ	0xFE7
 19245                           postdec1	equ	0xFE5
 19246                           fsr1h	equ	0xFE2
 19247                           fsr1l	equ	0xFE1
 19248                           indf2	equ	0xFDF
 19249                           postinc2	equ	0xFDE
 19250                           fsr2h	equ	0xFDA
 19251                           fsr2l	equ	0xFD9
 19252                           status	equ	0xFD8
 19253                           
 19254 ;; *************** function _terminal_textAttributesReset *****************
 19255 ;; Defined at:
 19256 ;;		line 223 in file "ring_buffer_interface.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;		None
 19259 ;; Auto vars:     Size  Location     Type
 19260 ;;		None
 19261 ;; Return value:  Size  Location     Type
 19262 ;;                  1    wreg      void 
 19263 ;; Registers used:
 19264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19265 ;; Tracked objects:
 19266 ;;		On entry : 0/0
 19267 ;;		On exit  : 0/0
 19268 ;;		Unchanged: 0/0
 19269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19274 ;;Total ram usage:        0 bytes
 19275 ;; Hardware stack levels used:    1
 19276 ;; Hardware stack levels required when called:   18
 19277 ;; This function calls:
 19278 ;;		_terminal_textAttributes
 19279 ;; This function is called by:
 19280 ;;		_main
 19281 ;;		_ringBufferLUT
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           	psect	text5
 19286  01B096                     __ptext5:
 19287                           	opt stack 0
 19288  01B096                     _terminal_textAttributesReset:
 19289                           	opt stack 12
 19290                           
 19291                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 19292                           
 19293                           ;incstack = 0
 19294  01B096  0E00               	movlw	0
 19295  01B098  0101               	movlb	1	; () banked
 19296  01B09A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19297  01B09C  0E00               	movlw	0
 19298  01B09E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19299  01B0A0  0E07               	movlw	7
 19300  01B0A2  EC30  F0AA         	call	_terminal_textAttributes
 19301  01B0A6  0012               	return		;funcret
 19302  01B0A8                     __end_of_terminal_textAttributesReset:
 19303                           	opt stack 0
 19304                           tblptru	equ	0xFF8
 19305                           tblptrh	equ	0xFF7
 19306                           tblptrl	equ	0xFF6
 19307                           tablat	equ	0xFF5
 19308                           intcon	equ	0xFF2
 19309                           postinc0	equ	0xFEE
 19310                           wreg	equ	0xFE8
 19311                           indf1	equ	0xFE7
 19312                           postdec1	equ	0xFE5
 19313                           fsr1h	equ	0xFE2
 19314                           fsr1l	equ	0xFE1
 19315                           indf2	equ	0xFDF
 19316                           postinc2	equ	0xFDE
 19317                           fsr2h	equ	0xFDA
 19318                           fsr2l	equ	0xFD9
 19319                           status	equ	0xFD8
 19320                           
 19321 ;; *************** function _terminal_textAttributes *****************
 19322 ;; Defined at:
 19323 ;;		line 115 in file "ring_buffer_interface.c"
 19324 ;; Parameters:    Size  Location     Type
 19325 ;;  foreground_c    1    wreg     enum E18069
 19326 ;;  background_c    1  189[BANK1 ] enum E18069
 19327 ;;  input_attrib    1  190[BANK1 ] enum E18061
 19328 ;; Auto vars:     Size  Location     Type
 19329 ;;  foreground_c    1    0[BANK2 ] enum E18069
 19330 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 19331 ;; Return value:  Size  Location     Type
 19332 ;;                  1    wreg      void 
 19333 ;; Registers used:
 19334 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19335 ;; Tracked objects:
 19336 ;;		On entry : 0/0
 19337 ;;		On exit  : 0/0
 19338 ;;		Unchanged: 0/0
 19339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19340 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19341 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19343 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19344 ;;Total ram usage:       18 bytes
 19345 ;; Hardware stack levels used:    1
 19346 ;; Hardware stack levels required when called:   17
 19347 ;; This function calls:
 19348 ;;		_printf
 19349 ;;		_strcat
 19350 ;;		_strncpy
 19351 ;; This function is called by:
 19352 ;;		_terminal_textAttributesReset
 19353 ;;		_ringBufferLUT
 19354 ;; This function uses a non-reentrant model
 19355 ;;
 19356                           
 19357                           	psect	text6
 19358  015460                     __ptext6:
 19359                           	opt stack 0
 19360  015460                     _terminal_textAttributes:
 19361                           	opt stack 12
 19362                           
 19363                           ;incstack = 0
 19364                           ;terminal_textAttributes@foreground_color stored from wreg
 19365  015460  0102               	movlb	2	; () banked
 19366  015462  6F93               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 19367                           
 19368                           ;ring_buffer_interface.c: 119: char output_buff[15];
 19369                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 19370  015464  0E94               	movlw	low terminal_textAttributes@output_buff
 19371  015466  0101               	movlb	1	; () banked
 19372  015468  6F17               	movwf	strncpy@to& (0+255),b
 19373  01546A  0E02               	movlw	high terminal_textAttributes@output_buff
 19374  01546C  6F18               	movwf	(strncpy@to+1)& (0+255),b
 19375  01546E  0EF6               	movlw	low STR_15
 19376  015470  6F19               	movwf	strncpy@from& (0+255),b
 19377  015472  0EFF               	movlw	high STR_15
 19378  015474  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 19379  015476  0E00               	movlw	0
 19380  015478  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 19381  01547A  0E0F               	movlw	15
 19382  01547C  6F1B               	movwf	strncpy@size& (0+255),b
 19383  01547E  ECCC  F0CF         	call	_strncpy	;wreg free
 19384                           
 19385                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 19386  015482  D054               	goto	l1311
 19387  015484                     
 19388                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 19389  015484  0E94               	movlw	low terminal_textAttributes@output_buff
 19390  015486  0101               	movlb	1	; () banked
 19391  015488  6F17               	movwf	strcat@to& (0+255),b
 19392  01548A  0E02               	movlw	high terminal_textAttributes@output_buff
 19393  01548C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19394  01548E  0ECD               	movlw	low (STR_24+1)
 19395  015490  6F19               	movwf	strcat@from& (0+255),b
 19396  015492  0EFF               	movlw	high (STR_24+1)
 19397  015494  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19398  015496  EC8D  F0D2         	call	_strcat	;wreg free
 19399                           
 19400                           ;ring_buffer_interface.c: 127: break;
 19401  01549A  D05D               	goto	l1313
 19402  01549C                     
 19403                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 19404  01549C  0E94               	movlw	low terminal_textAttributes@output_buff
 19405  01549E  0101               	movlb	1	; () banked
 19406  0154A0  6F17               	movwf	strcat@to& (0+255),b
 19407  0154A2  0E02               	movlw	high terminal_textAttributes@output_buff
 19408  0154A4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19409  0154A6  0ED0               	movlw	low (STR_25+1)
 19410  0154A8  6F19               	movwf	strcat@from& (0+255),b
 19411  0154AA  0EFF               	movlw	high (STR_25+1)
 19412  0154AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19413  0154AE  EC8D  F0D2         	call	_strcat	;wreg free
 19414                           
 19415                           ;ring_buffer_interface.c: 130: break;
 19416  0154B2  D051               	goto	l1313
 19417  0154B4                     
 19418                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 19419  0154B4  0E94               	movlw	low terminal_textAttributes@output_buff
 19420  0154B6  0101               	movlb	1	; () banked
 19421  0154B8  6F17               	movwf	strcat@to& (0+255),b
 19422  0154BA  0E02               	movlw	high terminal_textAttributes@output_buff
 19423  0154BC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19424  0154BE  0EE2               	movlw	low (STR_28+1)
 19425  0154C0  6F19               	movwf	strcat@from& (0+255),b
 19426  0154C2  0EFF               	movlw	high (STR_28+1)
 19427  0154C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19428  0154C6  EC8D  F0D2         	call	_strcat	;wreg free
 19429                           
 19430                           ;ring_buffer_interface.c: 133: break;
 19431  0154CA  D045               	goto	l1313
 19432  0154CC                     
 19433                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 19434  0154CC  0E94               	movlw	low terminal_textAttributes@output_buff
 19435  0154CE  0101               	movlb	1	; () banked
 19436  0154D0  6F17               	movwf	strcat@to& (0+255),b
 19437  0154D2  0E02               	movlw	high terminal_textAttributes@output_buff
 19438  0154D4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19439  0154D6  0E90               	movlw	low (STR_3+8)
 19440  0154D8  6F19               	movwf	strcat@from& (0+255),b
 19441  0154DA  0EFF               	movlw	high (STR_3+8)
 19442  0154DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19443  0154DE  EC8D  F0D2         	call	_strcat	;wreg free
 19444                           
 19445                           ;ring_buffer_interface.c: 136: break;
 19446  0154E2  D039               	goto	l1313
 19447  0154E4                     
 19448                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 19449  0154E4  0E94               	movlw	low terminal_textAttributes@output_buff
 19450  0154E6  0101               	movlb	1	; () banked
 19451  0154E8  6F17               	movwf	strcat@to& (0+255),b
 19452  0154EA  0E02               	movlw	high terminal_textAttributes@output_buff
 19453  0154EC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19454  0154EE  0EF1               	movlw	low (STR_31+1)
 19455  0154F0  6F19               	movwf	strcat@from& (0+255),b
 19456  0154F2  0EFF               	movlw	high (STR_31+1)
 19457  0154F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19458  0154F6  EC8D  F0D2         	call	_strcat	;wreg free
 19459                           
 19460                           ;ring_buffer_interface.c: 139: break;
 19461  0154FA  D02D               	goto	l1313
 19462  0154FC                     
 19463                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 19464  0154FC  0E94               	movlw	low terminal_textAttributes@output_buff
 19465  0154FE  0101               	movlb	1	; () banked
 19466  015500  6F17               	movwf	strcat@to& (0+255),b
 19467  015502  0E02               	movlw	high terminal_textAttributes@output_buff
 19468  015504  6F18               	movwf	(strcat@to+1)& (0+255),b
 19469  015506  0EF9               	movlw	low STR_21
 19470  015508  6F19               	movwf	strcat@from& (0+255),b
 19471  01550A  0EFF               	movlw	high STR_21
 19472  01550C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19473  01550E  EC8D  F0D2         	call	_strcat	;wreg free
 19474                           
 19475                           ;ring_buffer_interface.c: 142: break;
 19476  015512  D021               	goto	l1313
 19477  015514                     
 19478                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 19479  015514  0E94               	movlw	low terminal_textAttributes@output_buff
 19480  015516  0101               	movlb	1	; () banked
 19481  015518  6F17               	movwf	strcat@to& (0+255),b
 19482  01551A  0E02               	movlw	high terminal_textAttributes@output_buff
 19483  01551C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19484  01551E  0ECD               	movlw	low (STR_24+1)
 19485  015520  6F19               	movwf	strcat@from& (0+255),b
 19486  015522  0EFF               	movlw	high (STR_24+1)
 19487  015524  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19488  015526  EC8D  F0D2         	call	_strcat	;wreg free
 19489                           
 19490                           ;ring_buffer_interface.c: 147: }
 19491                           
 19492                           ;ring_buffer_interface.c: 146: break;
 19493  01552A  D015               	goto	l1313
 19494  01552C                     l1311:
 19495  01552C  0101               	movlb	1	; () banked
 19496  01552E  51BE               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 19497                           
 19498                           ; Switch size 1, requested type "space"
 19499                           ; Number of cases is 6, Range of values is 0 to 5
 19500                           ; switch strategies available:
 19501                           ; Name         Instructions Cycles
 19502                           ; simple_byte           19    10 (average)
 19503                           ;	Chosen strategy is simple_byte
 19504  015530  0A00               	xorlw	0	; case 0
 19505  015532  B4D8               	btfsc	status,2,c
 19506  015534  D7A7               	goto	l1312
 19507  015536  0A01               	xorlw	1	; case 1
 19508  015538  B4D8               	btfsc	status,2,c
 19509  01553A  D7B0               	goto	l1314
 19510  01553C  0A03               	xorlw	3	; case 2
 19511  01553E  B4D8               	btfsc	status,2,c
 19512  015540  D7B9               	goto	l1315
 19513  015542  0A01               	xorlw	1	; case 3
 19514  015544  B4D8               	btfsc	status,2,c
 19515  015546  D7C2               	goto	l1316
 19516  015548  0A07               	xorlw	7	; case 4
 19517  01554A  B4D8               	btfsc	status,2,c
 19518  01554C  D7CB               	goto	l1317
 19519  01554E  0A01               	xorlw	1	; case 5
 19520  015550  B4D8               	btfsc	status,2,c
 19521  015552  D7D4               	goto	l1318
 19522  015554  D7DF               	goto	l1319
 19523  015556                     l1313:
 19524                           
 19525                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 19526                           
 19527                           ; BSR set to: 1
 19528  015556  0E94               	movlw	low terminal_textAttributes@output_buff
 19529  015558  0101               	movlb	1	; () banked
 19530  01555A  6F17               	movwf	strcat@to& (0+255),b
 19531  01555C  0E02               	movlw	high terminal_textAttributes@output_buff
 19532  01555E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19533  015560  0EFB               	movlw	low STR_23
 19534  015562  6F19               	movwf	strcat@from& (0+255),b
 19535  015564  0EFF               	movlw	high STR_23
 19536  015566  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19537  015568  EC8D  F0D2         	call	_strcat	;wreg free
 19538                           
 19539                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 19540  01556C  D06C               	goto	l1320
 19541  01556E                     
 19542                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 19543  01556E  0E94               	movlw	low terminal_textAttributes@output_buff
 19544  015570  0101               	movlb	1	; () banked
 19545  015572  6F17               	movwf	strcat@to& (0+255),b
 19546  015574  0E02               	movlw	high terminal_textAttributes@output_buff
 19547  015576  6F18               	movwf	(strcat@to+1)& (0+255),b
 19548  015578  0ECC               	movlw	low STR_24
 19549  01557A  6F19               	movwf	strcat@from& (0+255),b
 19550  01557C  0EFF               	movlw	high STR_24
 19551  01557E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19552  015580  EC8D  F0D2         	call	_strcat	;wreg free
 19553                           
 19554                           ;ring_buffer_interface.c: 155: break;
 19555  015584  D07B               	goto	l1322
 19556  015586                     
 19557                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 19558  015586  0E94               	movlw	low terminal_textAttributes@output_buff
 19559  015588  0101               	movlb	1	; () banked
 19560  01558A  6F17               	movwf	strcat@to& (0+255),b
 19561  01558C  0E02               	movlw	high terminal_textAttributes@output_buff
 19562  01558E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19563  015590  0ECF               	movlw	low STR_25
 19564  015592  6F19               	movwf	strcat@from& (0+255),b
 19565  015594  0EFF               	movlw	high STR_25
 19566  015596  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19567  015598  EC8D  F0D2         	call	_strcat	;wreg free
 19568                           
 19569                           ;ring_buffer_interface.c: 158: break;
 19570  01559C  D06F               	goto	l1322
 19571  01559E                     
 19572                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 19573  01559E  0E94               	movlw	low terminal_textAttributes@output_buff
 19574  0155A0  0101               	movlb	1	; () banked
 19575  0155A2  6F17               	movwf	strcat@to& (0+255),b
 19576  0155A4  0E02               	movlw	high terminal_textAttributes@output_buff
 19577  0155A6  6F18               	movwf	(strcat@to+1)& (0+255),b
 19578  0155A8  0ED5               	movlw	low STR_26
 19579  0155AA  6F19               	movwf	strcat@from& (0+255),b
 19580  0155AC  0EFF               	movlw	high STR_26
 19581  0155AE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19582  0155B0  EC8D  F0D2         	call	_strcat	;wreg free
 19583                           
 19584                           ;ring_buffer_interface.c: 161: break;
 19585  0155B4  D063               	goto	l1322
 19586  0155B6                     
 19587                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 19588  0155B6  0E94               	movlw	low terminal_textAttributes@output_buff
 19589  0155B8  0101               	movlb	1	; () banked
 19590  0155BA  6F17               	movwf	strcat@to& (0+255),b
 19591  0155BC  0E02               	movlw	high terminal_textAttributes@output_buff
 19592  0155BE  6F18               	movwf	(strcat@to+1)& (0+255),b
 19593  0155C0  0EDB               	movlw	low STR_27
 19594  0155C2  6F19               	movwf	strcat@from& (0+255),b
 19595  0155C4  0EFF               	movlw	high STR_27
 19596  0155C6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19597  0155C8  EC8D  F0D2         	call	_strcat	;wreg free
 19598                           
 19599                           ;ring_buffer_interface.c: 164: break;
 19600  0155CC  D057               	goto	l1322
 19601  0155CE                     
 19602                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 19603  0155CE  0E94               	movlw	low terminal_textAttributes@output_buff
 19604  0155D0  0101               	movlb	1	; () banked
 19605  0155D2  6F17               	movwf	strcat@to& (0+255),b
 19606  0155D4  0E02               	movlw	high terminal_textAttributes@output_buff
 19607  0155D6  6F18               	movwf	(strcat@to+1)& (0+255),b
 19608  0155D8  0EE1               	movlw	low STR_28
 19609  0155DA  6F19               	movwf	strcat@from& (0+255),b
 19610  0155DC  0EFF               	movlw	high STR_28
 19611  0155DE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19612  0155E0  EC8D  F0D2         	call	_strcat	;wreg free
 19613                           
 19614                           ;ring_buffer_interface.c: 167: break;
 19615  0155E4  D04B               	goto	l1322
 19616  0155E6                     
 19617                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 19618  0155E6  0E94               	movlw	low terminal_textAttributes@output_buff
 19619  0155E8  0101               	movlb	1	; () banked
 19620  0155EA  6F17               	movwf	strcat@to& (0+255),b
 19621  0155EC  0E02               	movlw	high terminal_textAttributes@output_buff
 19622  0155EE  6F18               	movwf	(strcat@to+1)& (0+255),b
 19623  0155F0  0E8F               	movlw	low (STR_3+7)
 19624  0155F2  6F19               	movwf	strcat@from& (0+255),b
 19625  0155F4  0EFF               	movlw	high (STR_3+7)
 19626  0155F6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19627  0155F8  EC8D  F0D2         	call	_strcat	;wreg free
 19628                           
 19629                           ;ring_buffer_interface.c: 170: break;
 19630  0155FC  D03F               	goto	l1322
 19631  0155FE                     
 19632                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 19633  0155FE  0E94               	movlw	low terminal_textAttributes@output_buff
 19634  015600  0101               	movlb	1	; () banked
 19635  015602  6F17               	movwf	strcat@to& (0+255),b
 19636  015604  0E02               	movlw	high terminal_textAttributes@output_buff
 19637  015606  6F18               	movwf	(strcat@to+1)& (0+255),b
 19638  015608  0EEA               	movlw	low STR_30
 19639  01560A  6F19               	movwf	strcat@from& (0+255),b
 19640  01560C  0EFF               	movlw	high STR_30
 19641  01560E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19642  015610  EC8D  F0D2         	call	_strcat	;wreg free
 19643                           
 19644                           ;ring_buffer_interface.c: 173: break;
 19645  015614  D033               	goto	l1322
 19646  015616                     
 19647                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 19648  015616  0E94               	movlw	low terminal_textAttributes@output_buff
 19649  015618  0101               	movlb	1	; () banked
 19650  01561A  6F17               	movwf	strcat@to& (0+255),b
 19651  01561C  0E02               	movlw	high terminal_textAttributes@output_buff
 19652  01561E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19653  015620  0EF0               	movlw	low STR_31
 19654  015622  6F19               	movwf	strcat@from& (0+255),b
 19655  015624  0EFF               	movlw	high STR_31
 19656  015626  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19657  015628  EC8D  F0D2         	call	_strcat	;wreg free
 19658                           
 19659                           ;ring_buffer_interface.c: 176: break;
 19660  01562C  D027               	goto	l1322
 19661  01562E                     
 19662                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 19663  01562E  0E94               	movlw	low terminal_textAttributes@output_buff
 19664  015630  0101               	movlb	1	; () banked
 19665  015632  6F17               	movwf	strcat@to& (0+255),b
 19666  015634  0E02               	movlw	high terminal_textAttributes@output_buff
 19667  015636  6F18               	movwf	(strcat@to+1)& (0+255),b
 19668  015638  0EF0               	movlw	low STR_31
 19669  01563A  6F19               	movwf	strcat@from& (0+255),b
 19670  01563C  0EFF               	movlw	high STR_31
 19671  01563E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19672  015640  EC8D  F0D2         	call	_strcat	;wreg free
 19673                           
 19674                           ;ring_buffer_interface.c: 181: }
 19675                           
 19676                           ;ring_buffer_interface.c: 180: break;
 19677  015644  D01B               	goto	l1322
 19678  015646                     l1320:
 19679  015646  0102               	movlb	2	; () banked
 19680  015648  5193               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 19681                           
 19682                           ; Switch size 1, requested type "space"
 19683                           ; Number of cases is 8, Range of values is 0 to 7
 19684                           ; switch strategies available:
 19685                           ; Name         Instructions Cycles
 19686                           ; simple_byte           25    13 (average)
 19687                           ;	Chosen strategy is simple_byte
 19688  01564A  0A00               	xorlw	0	; case 0
 19689  01564C  B4D8               	btfsc	status,2,c
 19690  01564E  D78F               	goto	l1321
 19691  015650  0A01               	xorlw	1	; case 1
 19692  015652  B4D8               	btfsc	status,2,c
 19693  015654  D798               	goto	l1323
 19694  015656  0A03               	xorlw	3	; case 2
 19695  015658  B4D8               	btfsc	status,2,c
 19696  01565A  D7A1               	goto	l1324
 19697  01565C  0A01               	xorlw	1	; case 3
 19698  01565E  B4D8               	btfsc	status,2,c
 19699  015660  D7AA               	goto	l1325
 19700  015662  0A07               	xorlw	7	; case 4
 19701  015664  B4D8               	btfsc	status,2,c
 19702  015666  D7B3               	goto	l1326
 19703  015668  0A01               	xorlw	1	; case 5
 19704  01566A  B4D8               	btfsc	status,2,c
 19705  01566C  D7BC               	goto	l1327
 19706  01566E  0A03               	xorlw	3	; case 6
 19707  015670  B4D8               	btfsc	status,2,c
 19708  015672  D7C5               	goto	l1328
 19709  015674  0A01               	xorlw	1	; case 7
 19710  015676  B4D8               	btfsc	status,2,c
 19711  015678  D7CE               	goto	l1329
 19712  01567A  D7D9               	goto	l1330
 19713  01567C                     l1322:
 19714                           
 19715                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 19716                           
 19717                           ; BSR set to: 2
 19718  01567C  0E94               	movlw	low terminal_textAttributes@output_buff
 19719  01567E  0101               	movlb	1	; () banked
 19720  015680  6F17               	movwf	strcat@to& (0+255),b
 19721  015682  0E02               	movlw	high terminal_textAttributes@output_buff
 19722  015684  6F18               	movwf	(strcat@to+1)& (0+255),b
 19723  015686  0EFB               	movlw	low STR_23
 19724  015688  6F19               	movwf	strcat@from& (0+255),b
 19725  01568A  0EFF               	movlw	high STR_23
 19726  01568C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19727  01568E  EC8D  F0D2         	call	_strcat	;wreg free
 19728                           
 19729                           ;ring_buffer_interface.c: 185: switch (background_color) {
 19730  015692  D06C               	goto	l1331
 19731  015694                     
 19732                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 19733  015694  0E94               	movlw	low terminal_textAttributes@output_buff
 19734  015696  0101               	movlb	1	; () banked
 19735  015698  6F17               	movwf	strcat@to& (0+255),b
 19736  01569A  0E02               	movlw	high terminal_textAttributes@output_buff
 19737  01569C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19738  01569E  0EF5               	movlw	low (STR_176+9)
 19739  0156A0  6F19               	movwf	strcat@from& (0+255),b
 19740  0156A2  0EFE               	movlw	high (STR_176+9)
 19741  0156A4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19742  0156A6  EC8D  F0D2         	call	_strcat	;wreg free
 19743                           
 19744                           ;ring_buffer_interface.c: 189: break;
 19745  0156AA  D07B               	goto	l1333
 19746  0156AC                     
 19747                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 19748  0156AC  0E94               	movlw	low terminal_textAttributes@output_buff
 19749  0156AE  0101               	movlb	1	; () banked
 19750  0156B0  6F17               	movwf	strcat@to& (0+255),b
 19751  0156B2  0E02               	movlw	high terminal_textAttributes@output_buff
 19752  0156B4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19753  0156B6  0ED2               	movlw	low STR_35
 19754  0156B8  6F19               	movwf	strcat@from& (0+255),b
 19755  0156BA  0EFF               	movlw	high STR_35
 19756  0156BC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19757  0156BE  EC8D  F0D2         	call	_strcat	;wreg free
 19758                           
 19759                           ;ring_buffer_interface.c: 192: break;
 19760  0156C2  D06F               	goto	l1333
 19761  0156C4                     
 19762                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 19763  0156C4  0E94               	movlw	low terminal_textAttributes@output_buff
 19764  0156C6  0101               	movlb	1	; () banked
 19765  0156C8  6F17               	movwf	strcat@to& (0+255),b
 19766  0156CA  0E02               	movlw	high terminal_textAttributes@output_buff
 19767  0156CC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19768  0156CE  0ED8               	movlw	low STR_36
 19769  0156D0  6F19               	movwf	strcat@from& (0+255),b
 19770  0156D2  0EFF               	movlw	high STR_36
 19771  0156D4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19772  0156D6  EC8D  F0D2         	call	_strcat	;wreg free
 19773                           
 19774                           ;ring_buffer_interface.c: 195: break;
 19775  0156DA  D063               	goto	l1333
 19776  0156DC                     
 19777                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 19778  0156DC  0E94               	movlw	low terminal_textAttributes@output_buff
 19779  0156DE  0101               	movlb	1	; () banked
 19780  0156E0  6F17               	movwf	strcat@to& (0+255),b
 19781  0156E2  0E02               	movlw	high terminal_textAttributes@output_buff
 19782  0156E4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19783  0156E6  0EDE               	movlw	low STR_37
 19784  0156E8  6F19               	movwf	strcat@from& (0+255),b
 19785  0156EA  0EFF               	movlw	high STR_37
 19786  0156EC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19787  0156EE  EC8D  F0D2         	call	_strcat	;wreg free
 19788                           
 19789                           ;ring_buffer_interface.c: 198: break;
 19790  0156F2  D057               	goto	l1333
 19791  0156F4                     
 19792                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 19793  0156F4  0E94               	movlw	low terminal_textAttributes@output_buff
 19794  0156F6  0101               	movlb	1	; () banked
 19795  0156F8  6F17               	movwf	strcat@to& (0+255),b
 19796  0156FA  0E02               	movlw	high terminal_textAttributes@output_buff
 19797  0156FC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19798  0156FE  0EE4               	movlw	low STR_38
 19799  015700  6F19               	movwf	strcat@from& (0+255),b
 19800  015702  0EFF               	movlw	high STR_38
 19801  015704  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19802  015706  EC8D  F0D2         	call	_strcat	;wreg free
 19803                           
 19804                           ;ring_buffer_interface.c: 201: break;
 19805  01570A  D04B               	goto	l1333
 19806  01570C                     
 19807                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 19808  01570C  0E94               	movlw	low terminal_textAttributes@output_buff
 19809  01570E  0101               	movlb	1	; () banked
 19810  015710  6F17               	movwf	strcat@to& (0+255),b
 19811  015712  0E02               	movlw	high terminal_textAttributes@output_buff
 19812  015714  6F18               	movwf	(strcat@to+1)& (0+255),b
 19813  015716  0EE7               	movlw	low STR_39
 19814  015718  6F19               	movwf	strcat@from& (0+255),b
 19815  01571A  0EFF               	movlw	high STR_39
 19816  01571C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19817  01571E  EC8D  F0D2         	call	_strcat	;wreg free
 19818                           
 19819                           ;ring_buffer_interface.c: 204: break;
 19820  015722  D03F               	goto	l1333
 19821  015724                     
 19822                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 19823  015724  0E94               	movlw	low terminal_textAttributes@output_buff
 19824  015726  0101               	movlb	1	; () banked
 19825  015728  6F17               	movwf	strcat@to& (0+255),b
 19826  01572A  0E02               	movlw	high terminal_textAttributes@output_buff
 19827  01572C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19828  01572E  0EED               	movlw	low STR_40
 19829  015730  6F19               	movwf	strcat@from& (0+255),b
 19830  015732  0EFF               	movlw	high STR_40
 19831  015734  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19832  015736  EC8D  F0D2         	call	_strcat	;wreg free
 19833                           
 19834                           ;ring_buffer_interface.c: 207: break;
 19835  01573A  D033               	goto	l1333
 19836  01573C                     
 19837                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 19838  01573C  0E94               	movlw	low terminal_textAttributes@output_buff
 19839  01573E  0101               	movlb	1	; () banked
 19840  015740  6F17               	movwf	strcat@to& (0+255),b
 19841  015742  0E02               	movlw	high terminal_textAttributes@output_buff
 19842  015744  6F18               	movwf	(strcat@to+1)& (0+255),b
 19843  015746  0EF3               	movlw	low STR_41
 19844  015748  6F19               	movwf	strcat@from& (0+255),b
 19845  01574A  0EFF               	movlw	high STR_41
 19846  01574C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19847  01574E  EC8D  F0D2         	call	_strcat	;wreg free
 19848                           
 19849                           ;ring_buffer_interface.c: 210: break;
 19850  015752  D027               	goto	l1333
 19851  015754                     
 19852                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 19853  015754  0E94               	movlw	low terminal_textAttributes@output_buff
 19854  015756  0101               	movlb	1	; () banked
 19855  015758  6F17               	movwf	strcat@to& (0+255),b
 19856  01575A  0E02               	movlw	high terminal_textAttributes@output_buff
 19857  01575C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19858  01575E  0EF3               	movlw	low STR_41
 19859  015760  6F19               	movwf	strcat@from& (0+255),b
 19860  015762  0EFF               	movlw	high STR_41
 19861  015764  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19862  015766  EC8D  F0D2         	call	_strcat	;wreg free
 19863                           
 19864                           ;ring_buffer_interface.c: 215: }
 19865                           
 19866                           ;ring_buffer_interface.c: 214: break;
 19867  01576A  D01B               	goto	l1333
 19868  01576C                     l1331:
 19869  01576C  0101               	movlb	1	; () banked
 19870  01576E  51BD               	movf	terminal_textAttributes@background_color& (0+255),w,b
 19871                           
 19872                           ; Switch size 1, requested type "space"
 19873                           ; Number of cases is 8, Range of values is 0 to 7
 19874                           ; switch strategies available:
 19875                           ; Name         Instructions Cycles
 19876                           ; simple_byte           25    13 (average)
 19877                           ;	Chosen strategy is simple_byte
 19878  015770  0A00               	xorlw	0	; case 0
 19879  015772  B4D8               	btfsc	status,2,c
 19880  015774  D78F               	goto	l1332
 19881  015776  0A01               	xorlw	1	; case 1
 19882  015778  B4D8               	btfsc	status,2,c
 19883  01577A  D798               	goto	l1334
 19884  01577C  0A03               	xorlw	3	; case 2
 19885  01577E  B4D8               	btfsc	status,2,c
 19886  015780  D7A1               	goto	l1335
 19887  015782  0A01               	xorlw	1	; case 3
 19888  015784  B4D8               	btfsc	status,2,c
 19889  015786  D7AA               	goto	l1336
 19890  015788  0A07               	xorlw	7	; case 4
 19891  01578A  B4D8               	btfsc	status,2,c
 19892  01578C  D7B3               	goto	l1337
 19893  01578E  0A01               	xorlw	1	; case 5
 19894  015790  B4D8               	btfsc	status,2,c
 19895  015792  D7BC               	goto	l1338
 19896  015794  0A03               	xorlw	3	; case 6
 19897  015796  B4D8               	btfsc	status,2,c
 19898  015798  D7C5               	goto	l1339
 19899  01579A  0A01               	xorlw	1	; case 7
 19900  01579C  B4D8               	btfsc	status,2,c
 19901  01579E  D7CE               	goto	l1340
 19902  0157A0  D7D9               	goto	l1341
 19903  0157A2                     l1333:
 19904                           
 19905                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 19906                           
 19907                           ; BSR set to: 1
 19908  0157A2  0E94               	movlw	low terminal_textAttributes@output_buff
 19909  0157A4  0101               	movlb	1	; () banked
 19910  0157A6  6F17               	movwf	strcat@to& (0+255),b
 19911  0157A8  0E02               	movlw	high terminal_textAttributes@output_buff
 19912  0157AA  6F18               	movwf	(strcat@to+1)& (0+255),b
 19913  0157AC  0EFD               	movlw	low STR_43
 19914  0157AE  6F19               	movwf	strcat@from& (0+255),b
 19915  0157B0  0EFF               	movlw	high STR_43
 19916  0157B2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19917  0157B4  EC8D  F0D2         	call	_strcat	;wreg free
 19918                           
 19919                           ;ring_buffer_interface.c: 219: printf(output_buff);
 19920  0157B8  0E94               	movlw	low terminal_textAttributes@output_buff
 19921  0157BA  0101               	movlb	1	; () banked
 19922  0157BC  6FAC               	movwf	printf@f& (0+255),b
 19923  0157BE  0E02               	movlw	high terminal_textAttributes@output_buff
 19924  0157C0  6FAD               	movwf	(printf@f+1)& (0+255),b
 19925  0157C2  EC95  F0D4         	call	_printf	;wreg free
 19926  0157C6  0012               	return		;funcret
 19927  0157C8                     __end_of_terminal_textAttributes:
 19928                           	opt stack 0
 19929                           tblptru	equ	0xFF8
 19930                           tblptrh	equ	0xFF7
 19931                           tblptrl	equ	0xFF6
 19932                           tablat	equ	0xFF5
 19933                           intcon	equ	0xFF2
 19934                           postinc0	equ	0xFEE
 19935                           wreg	equ	0xFE8
 19936                           indf1	equ	0xFE7
 19937                           postdec1	equ	0xFE5
 19938                           fsr1h	equ	0xFE2
 19939                           fsr1l	equ	0xFE1
 19940                           indf2	equ	0xFDF
 19941                           postinc2	equ	0xFDE
 19942                           fsr2h	equ	0xFDA
 19943                           fsr2l	equ	0xFD9
 19944                           status	equ	0xFD8
 19945                           
 19946 ;; *************** function _strncpy *****************
 19947 ;; Defined at:
 19948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;  to              2   23[BANK1 ] PTR unsigned char 
 19951 ;;		 -> terminal_textAttributes@output_buff(15), 
 19952 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 19953 ;;		 -> STR_15(3), 
 19954 ;;  size            2   27[BANK1 ] unsigned int 
 19955 ;; Auto vars:     Size  Location     Type
 19956 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 19957 ;;		 -> terminal_textAttributes@output_buff(15), 
 19958 ;; Return value:  Size  Location     Type
 19959 ;;                  2   23[BANK1 ] PTR unsigned char 
 19960 ;; Registers used:
 19961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19962 ;; Tracked objects:
 19963 ;;		On entry : 0/0
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19967 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19968 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19970 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19971 ;;Total ram usage:        8 bytes
 19972 ;; Hardware stack levels used:    1
 19973 ;; Hardware stack levels required when called:   13
 19974 ;; This function calls:
 19975 ;;		Nothing
 19976 ;; This function is called by:
 19977 ;;		_terminal_textAttributes
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981                           	psect	text7
 19982  019F98                     __ptext7:
 19983                           	opt stack 0
 19984  019F98                     _strncpy:
 19985                           	opt stack 15
 19986                           
 19987                           ;incstack = 0
 19988  019F98  C117  F11D         	movff	strncpy@to,strncpy@cp
 19989  019F9C  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 19990  019FA0  D018               	goto	l2877
 19991  019FA2  0101               	movlb	1	; () banked
 19992  019FA4  071B               	decf	strncpy@size& (0+255),f,b
 19993  019FA6  A0D8               	btfss	status,0,c
 19994  019FA8  071C               	decf	(strncpy@size+1)& (0+255),f,b
 19995                           
 19996                           ; BSR set to: 1
 19997  019FAA  C119  FFF6         	movff	strncpy@from,tblptrl
 19998  019FAE  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 19999  019FB2  4B19               	infsnz	strncpy@from& (0+255),f,b
 20000  019FB4  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 20001  019FB6                     	if	0	;tblptru may be non-zero
 20002  019FB6                     	endif
 20003  019FB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20004  019FB6  0E00               	movlw	low (__mediumconst shr (0+16))
 20005  019FB8  6EF8               	movwf	tblptru,c
 20006  019FBA                     	endif
 20007  019FBA  C11D  FFD9         	movff	strncpy@cp,fsr2l
 20008  019FBE  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 20009  019FC2  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 20010  019FC4  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 20011  019FC6  0008               	tblrd		*
 20012  019FC8  CFF5 FFDF          	movff	tablat,indf2
 20013  019FCC  50DF               	movf	indf2,w,c
 20014  019FCE  B4D8               	btfsc	status,2,c
 20015  019FD0  D00E               	goto	l2879
 20016  019FD2                     l2877:
 20017                           
 20018                           ; BSR set to: 1
 20019                           
 20020                           ; BSR set to: 1
 20021  019FD2  0101               	movlb	1	; () banked
 20022  019FD4  511B               	movf	strncpy@size& (0+255),w,b
 20023  019FD6  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 20024  019FD8  B4D8               	btfsc	status,2,c
 20025  019FDA  D009               	goto	l2879
 20026  019FDC  D7E2               	goto	l2876
 20027  019FDE                     l15398:
 20028                           
 20029                           ; BSR set to: 1
 20030  019FDE  C11D  FFD9         	movff	strncpy@cp,fsr2l
 20031  019FE2  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 20032  019FE6  0E00               	movlw	0
 20033  019FE8  6EDF               	movwf	indf2,c
 20034                           
 20035                           ; BSR set to: 1
 20036  019FEA  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 20037  019FEC  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 20038  019FEE                     l2879:
 20039                           
 20040                           ; BSR set to: 1
 20041                           
 20042                           ; BSR set to: 1
 20043  019FEE  071B               	decf	strncpy@size& (0+255),f,b
 20044  019FF0  A0D8               	btfss	status,0,c
 20045  019FF2  071C               	decf	(strncpy@size+1)& (0+255),f,b
 20046  019FF4  291B               	incf	strncpy@size& (0+255),w,b
 20047  019FF6  E1F3               	bnz	l15398
 20048  019FF8  291C               	incf	(strncpy@size+1)& (0+255),w,b
 20049  019FFA  B4D8               	btfsc	status,2,c
 20050  019FFC  0012               	return	
 20051  019FFE  D7EF               	goto	l2880
 20052  01A000                     __end_of_strncpy:
 20053                           	opt stack 0
 20054                           tblptru	equ	0xFF8
 20055                           tblptrh	equ	0xFF7
 20056                           tblptrl	equ	0xFF6
 20057                           tablat	equ	0xFF5
 20058                           intcon	equ	0xFF2
 20059                           postinc0	equ	0xFEE
 20060                           wreg	equ	0xFE8
 20061                           indf1	equ	0xFE7
 20062                           postdec1	equ	0xFE5
 20063                           fsr1h	equ	0xFE2
 20064                           fsr1l	equ	0xFE1
 20065                           indf2	equ	0xFDF
 20066                           postinc2	equ	0xFDE
 20067                           fsr2h	equ	0xFDA
 20068                           fsr2l	equ	0xFD9
 20069                           status	equ	0xFD8
 20070                           
 20071 ;; *************** function _strcat *****************
 20072 ;; Defined at:
 20073 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 20074 ;; Parameters:    Size  Location     Type
 20075 ;;  to              2   23[BANK1 ] PTR unsigned char 
 20076 ;;		 -> terminal_textAttributes@output_buff(15), 
 20077 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 20078 ;;		 -> STR_43(2), STR_42(3), STR_41(3), STR_40(3), 
 20079 ;;		 -> STR_39(3), STR_38(3), STR_37(3), STR_36(3), 
 20080 ;;		 -> STR_35(3), STR_34(3), STR_33(2), STR_32(3), 
 20081 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(3), 
 20082 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 20083 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
 20084 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 20085 ;; Auto vars:     Size  Location     Type
 20086 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 20087 ;;		 -> terminal_textAttributes@output_buff(15), 
 20088 ;; Return value:  Size  Location     Type
 20089 ;;                  2   23[BANK1 ] PTR unsigned char 
 20090 ;; Registers used:
 20091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20092 ;; Tracked objects:
 20093 ;;		On entry : 0/0
 20094 ;;		On exit  : 0/0
 20095 ;;		Unchanged: 0/0
 20096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20097 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20098 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20100 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20101 ;;Total ram usage:        6 bytes
 20102 ;; Hardware stack levels used:    1
 20103 ;; Hardware stack levels required when called:   13
 20104 ;; This function calls:
 20105 ;;		Nothing
 20106 ;; This function is called by:
 20107 ;;		_terminal_textAttributes
 20108 ;; This function uses a non-reentrant model
 20109 ;;
 20110                           
 20111                           	psect	text8
 20112  01A51A                     __ptext8:
 20113                           	opt stack 0
 20114  01A51A                     _strcat:
 20115                           	opt stack 15
 20116                           
 20117                           ; BSR set to: 1
 20118                           ;incstack = 0
 20119  01A51A  C117  F11B         	movff	strcat@to,strcat@cp
 20120  01A51E  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 20121  01A522  D003               	goto	l2852
 20122  01A524  0101               	movlb	1	; () banked
 20123  01A526  4B1B               	infsnz	strcat@cp& (0+255),f,b
 20124  01A528  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 20125  01A52A                     l2852:
 20126                           
 20127                           ; BSR set to: 1
 20128  01A52A  C11B  FFD9         	movff	strcat@cp,fsr2l
 20129  01A52E  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 20130  01A532  50DF               	movf	indf2,w,c
 20131  01A534  B4D8               	btfsc	status,2,c
 20132  01A536  D006               	goto	l2855
 20133  01A538  D7F5               	goto	l2853
 20134  01A53A  0101               	movlb	1	; () banked
 20135  01A53C  4B1B               	infsnz	strcat@cp& (0+255),f,b
 20136  01A53E  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 20137  01A540  4B19               	infsnz	strcat@from& (0+255),f,b
 20138  01A542  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 20139  01A544                     l2855:
 20140                           
 20141                           ; BSR set to: 1
 20142  01A544  C119  FFF6         	movff	strcat@from,tblptrl
 20143  01A548  C11A  FFF7         	movff	strcat@from+1,tblptrh
 20144  01A54C                     	if	0	;tblptru may be non-zero
 20145  01A54C                     	endif
 20146  01A54C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20147  01A54C  0E00               	movlw	low (__mediumconst shr (0+16))
 20148  01A54E  6EF8               	movwf	tblptru,c
 20149  01A550                     	endif
 20150  01A550  C11B  FFD9         	movff	strcat@cp,fsr2l
 20151  01A554  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 20152  01A558  0008               	tblrd		*
 20153  01A55A  CFF5 FFDF          	movff	tablat,indf2
 20154  01A55E  50DF               	movf	indf2,w,c
 20155  01A560  B4D8               	btfsc	status,2,c
 20156  01A562  0012               	return	
 20157  01A564  D7EA               	goto	l2856
 20158  01A566                     __end_of_strcat:
 20159                           	opt stack 0
 20160                           tblptru	equ	0xFF8
 20161                           tblptrh	equ	0xFF7
 20162                           tblptrl	equ	0xFF6
 20163                           tablat	equ	0xFF5
 20164                           intcon	equ	0xFF2
 20165                           postinc0	equ	0xFEE
 20166                           wreg	equ	0xFE8
 20167                           indf1	equ	0xFE7
 20168                           postdec1	equ	0xFE5
 20169                           fsr1h	equ	0xFE2
 20170                           fsr1l	equ	0xFE1
 20171                           indf2	equ	0xFDF
 20172                           postinc2	equ	0xFDE
 20173                           fsr2h	equ	0xFDA
 20174                           fsr2l	equ	0xFD9
 20175                           status	equ	0xFD8
 20176                           
 20177 ;; *************** function _terminal_printNewline *****************
 20178 ;; Defined at:
 20179 ;;		line 230 in file "ring_buffer_interface.c"
 20180 ;; Parameters:    Size  Location     Type
 20181 ;;		None
 20182 ;; Auto vars:     Size  Location     Type
 20183 ;;		None
 20184 ;; Return value:  Size  Location     Type
 20185 ;;                  1    wreg      void 
 20186 ;; Registers used:
 20187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20188 ;; Tracked objects:
 20189 ;;		On entry : 0/0
 20190 ;;		On exit  : 0/0
 20191 ;;		Unchanged: 0/0
 20192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20197 ;;Total ram usage:        0 bytes
 20198 ;; Hardware stack levels used:    1
 20199 ;; Hardware stack levels required when called:   17
 20200 ;; This function calls:
 20201 ;;		_printf
 20202 ;; This function is called by:
 20203 ;;		_ringBufferLUT
 20204 ;; This function uses a non-reentrant model
 20205 ;;
 20206                           
 20207                           	psect	text9
 20208  01B0CA                     __ptext9:
 20209                           	opt stack 0
 20210  01B0CA                     _terminal_printNewline:
 20211                           	opt stack 11
 20212                           
 20213                           ;ring_buffer_interface.c: 232: printf("\n\r");
 20214                           
 20215                           ;incstack = 0
 20216  01B0CA  0E4A               	movlw	low (STR_156+717)
 20217  01B0CC  0101               	movlb	1	; () banked
 20218  01B0CE  6FAC               	movwf	printf@f& (0+255),b
 20219  01B0D0  0EE8               	movlw	high (STR_156+717)
 20220  01B0D2  6FAD               	movwf	(printf@f+1)& (0+255),b
 20221  01B0D4  EC95  F0D4         	call	_printf	;wreg free
 20222  01B0D8  0012               	return		;funcret
 20223  01B0DA                     __end_of_terminal_printNewline:
 20224                           	opt stack 0
 20225                           tblptru	equ	0xFF8
 20226                           tblptrh	equ	0xFF7
 20227                           tblptrl	equ	0xFF6
 20228                           tablat	equ	0xFF5
 20229                           intcon	equ	0xFF2
 20230                           postinc0	equ	0xFEE
 20231                           wreg	equ	0xFE8
 20232                           indf1	equ	0xFE7
 20233                           postdec1	equ	0xFE5
 20234                           fsr1h	equ	0xFE2
 20235                           fsr1l	equ	0xFE1
 20236                           indf2	equ	0xFDF
 20237                           postinc2	equ	0xFDE
 20238                           fsr2h	equ	0xFDA
 20239                           fsr2l	equ	0xFD9
 20240                           status	equ	0xFD8
 20241                           
 20242 ;; *************** function _strstr *****************
 20243 ;; Defined at:
 20244 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 20245 ;; Parameters:    Size  Location     Type
 20246 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 20247 ;;		 -> NULL(0), line(64), 
 20248 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 20249 ;;		 -> STR_128(25), 
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;		None
 20252 ;; Return value:  Size  Location     Type
 20253 ;;                  2   38[BANK1 ] PTR unsigned char 
 20254 ;; Registers used:
 20255 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20256 ;; Tracked objects:
 20257 ;;		On entry : 0/0
 20258 ;;		On exit  : 0/0
 20259 ;;		Unchanged: 0/0
 20260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20261 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20264 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20265 ;;Total ram usage:        4 bytes
 20266 ;; Hardware stack levels used:    1
 20267 ;; Hardware stack levels required when called:   14
 20268 ;; This function calls:
 20269 ;;		_strchr
 20270 ;;		_strlen
 20271 ;;		_strncmp
 20272 ;; This function is called by:
 20273 ;;		_ringBufferLUT
 20274 ;; This function uses a non-reentrant model
 20275 ;;
 20276                           
 20277                           	psect	text10
 20278  019942                     __ptext10:
 20279                           	opt stack 0
 20280  019942                     _strstr:
 20281                           	opt stack 14
 20282                           
 20283                           ;incstack = 0
 20284  019942  D034               	goto	l2891
 20285  019944  C126  F11D         	movff	strstr@s1,strncmp@s1
 20286  019948  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 20287  01994C  C128  F11F         	movff	strstr@s2,strncmp@s2
 20288  019950  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 20289  019954  C128  F117         	movff	strstr@s2,strlen@s
 20290  019958  C129  F118         	movff	strstr@s2+1,strlen@s+1
 20291  01995C  ECCB  F0D0         	call	_strlen	;wreg free
 20292  019960  C117  F121         	movff	?_strlen,strncmp@len
 20293  019964  C118  F122         	movff	?_strlen+1,strncmp@len+1
 20294  019968  EC59  F0CC         	call	_strncmp	;wreg free
 20295  01996C  0101               	movlb	1	; () banked
 20296  01996E  511D               	movf	?_strncmp& (0+255),w,b
 20297  019970  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 20298  019972  A4D8               	btfss	status,2,c
 20299  019974  D005               	goto	l2893
 20300                           
 20301                           ; BSR set to: 1
 20302  019976  C126  F126         	movff	strstr@s1,?_strstr
 20303  01997A  C127  F127         	movff	strstr@s1+1,?_strstr+1
 20304                           
 20305                           ; BSR set to: 1
 20306  01997E  0012               	return	
 20307  019980                     l2893:
 20308                           
 20309                           ; BSR set to: 1
 20310                           
 20311                           ; BSR set to: 1
 20312  019980  0E01               	movlw	1
 20313  019982  2526               	addwf	strstr@s1& (0+255),w,b
 20314  019984  6F17               	movwf	strchr@ptr& (0+255),b
 20315  019986  0E00               	movlw	0
 20316  019988  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 20317  01998A  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 20318  01998C  C128  FFF6         	movff	strstr@s2,tblptrl
 20319  019990  C129  FFF7         	movff	strstr@s2+1,tblptrh
 20320  019994                     	if	0	;tblptru may be non-zero
 20321  019994                     	endif
 20322  019994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20323  019994  0E00               	movlw	low (__mediumconst shr (0+16))
 20324  019996  6EF8               	movwf	tblptru,c
 20325  019998                     	endif
 20326  019998  0008               	tblrd		*
 20327  01999A  50F5               	movf	tablat,w,c
 20328  01999C  6F19               	movwf	strchr@chr& (0+255),b
 20329  01999E  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 20330  0199A0  EC47  F0D5         	call	_strchr	;wreg free
 20331  0199A4  C117  F126         	movff	?_strchr,strstr@s1
 20332  0199A8  C118  F127         	movff	?_strchr+1,strstr@s1+1
 20333  0199AC                     l2891:
 20334  0199AC  0101               	movlb	1	; () banked
 20335  0199AE  5126               	movf	strstr@s1& (0+255),w,b
 20336  0199B0  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 20337  0199B2  B4D8               	btfsc	status,2,c
 20338  0199B4  D007               	goto	u20810
 20339                           
 20340                           ; BSR set to: 1
 20341  0199B6  C126  FFD9         	movff	strstr@s1,fsr2l
 20342  0199BA  C127  FFDA         	movff	strstr@s1+1,fsr2h
 20343  0199BE  50DF               	movf	indf2,w,c
 20344  0199C0  A4D8               	btfss	status,2,c
 20345  0199C2  D7C0               	goto	l2892
 20346  0199C4                     u20810:
 20347                           
 20348                           ; BSR set to: 1
 20349                           
 20350                           ; BSR set to: 1
 20351                           
 20352                           ; BSR set to: 1
 20353  0199C4  0E00               	movlw	0
 20354  0199C6  6F26               	movwf	?_strstr& (0+255),b
 20355  0199C8  0E00               	movlw	0
 20356  0199CA  6F27               	movwf	(?_strstr+1)& (0+255),b
 20357  0199CC  0012               	return	
 20358  0199CE                     __end_of_strstr:
 20359                           	opt stack 0
 20360                           tblptru	equ	0xFF8
 20361                           tblptrh	equ	0xFF7
 20362                           tblptrl	equ	0xFF6
 20363                           tablat	equ	0xFF5
 20364                           intcon	equ	0xFF2
 20365                           postinc0	equ	0xFEE
 20366                           wreg	equ	0xFE8
 20367                           indf1	equ	0xFE7
 20368                           postdec1	equ	0xFE5
 20369                           fsr1h	equ	0xFE2
 20370                           fsr1l	equ	0xFE1
 20371                           indf2	equ	0xFDF
 20372                           postinc2	equ	0xFDE
 20373                           fsr2h	equ	0xFDA
 20374                           fsr2l	equ	0xFD9
 20375                           status	equ	0xFD8
 20376                           
 20377 ;; *************** function _strncmp *****************
 20378 ;; Defined at:
 20379 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 20380 ;; Parameters:    Size  Location     Type
 20381 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 20382 ;;		 -> NULL(0), line(64), 
 20383 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 20384 ;;		 -> STR_128(25), 
 20385 ;;  len             2   33[BANK1 ] unsigned int 
 20386 ;; Auto vars:     Size  Location     Type
 20387 ;;		None
 20388 ;; Return value:  Size  Location     Type
 20389 ;;                  2   29[BANK1 ] int 
 20390 ;; Registers used:
 20391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20392 ;; Tracked objects:
 20393 ;;		On entry : 0/0
 20394 ;;		On exit  : 0/0
 20395 ;;		Unchanged: 0/0
 20396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20397 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20399 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20400 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20401 ;;Total ram usage:        9 bytes
 20402 ;; Hardware stack levels used:    1
 20403 ;; Hardware stack levels required when called:   13
 20404 ;; This function calls:
 20405 ;;		Nothing
 20406 ;; This function is called by:
 20407 ;;		_strstr
 20408 ;; This function uses a non-reentrant model
 20409 ;;
 20410                           
 20411                           	psect	text11
 20412  0198B2                     __ptext11:
 20413                           	opt stack 0
 20414  0198B2                     _strncmp:
 20415                           	opt stack 14
 20416                           
 20417                           ; BSR set to: 1
 20418                           ;incstack = 0
 20419  0198B2  D039               	goto	l2950
 20420  0198B4                     l15788:
 20421  0198B4  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20422  0198B8  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20423  0198BC  50DF               	movf	indf2,w,c
 20424  0198BE  B4D8               	btfsc	status,2,c
 20425  0198C0  D012               	goto	u20250
 20426  0198C2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20427  0198C6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20428  0198CA  50DF               	movf	indf2,w,c
 20429  0198CC  0101               	movlb	1	; () banked
 20430  0198CE  6F23               	movwf	??_strncmp& (0+255),b
 20431  0198D0  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20432  0198D4  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20433  0198D8                     	if	0	;tblptru may be non-zero
 20434  0198D8                     	endif
 20435  0198D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20436  0198D8  0E00               	movlw	low (__mediumconst shr (0+16))
 20437  0198DA  6EF8               	movwf	tblptru,c
 20438  0198DC                     	endif
 20439  0198DC  0008               	tblrd		*
 20440  0198DE  50F5               	movf	tablat,w,c
 20441  0198E0  1923               	xorwf	??_strncmp& (0+255),w,b
 20442  0198E2  B4D8               	btfsc	status,2,c
 20443  0198E4  D01C               	goto	l2952
 20444  0198E6                     u20250:
 20445                           
 20446                           ; BSR set to: 1
 20447  0198E6  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20448  0198EA  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20449  0198EE                     	if	0	;tblptru may be non-zero
 20450  0198EE                     	endif
 20451  0198EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20452  0198EE  0E00               	movlw	low (__mediumconst shr (0+16))
 20453  0198F0  6EF8               	movwf	tblptru,c
 20454  0198F2                     	endif
 20455  0198F2  0008               	tblrd		*
 20456  0198F4  50F5               	movf	tablat,w,c
 20457  0198F6  0101               	movlb	1	; () banked
 20458  0198F8  6F23               	movwf	??_strncmp& (0+255),b
 20459  0198FA  6B24               	clrf	(??_strncmp+1)& (0+255),b
 20460  0198FC  1F23               	comf	??_strncmp& (0+255),f,b
 20461  0198FE  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 20462  019900  4B23               	infsnz	??_strncmp& (0+255),f,b
 20463  019902  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 20464  019904  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20465  019908  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20466  01990C  50DF               	movf	indf2,w,c
 20467  01990E  6F25               	movwf	(??_strncmp+2)& (0+255),b
 20468  019910  5125               	movf	(??_strncmp+2)& (0+255),w,b
 20469  019912  2523               	addwf	??_strncmp& (0+255),w,b
 20470  019914  6F1D               	movwf	?_strncmp& (0+255),b
 20471  019916  0E00               	movlw	0
 20472  019918  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 20473  01991A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20474                           
 20475                           ; BSR set to: 1
 20476  01991C  0012               	return	
 20477  01991E                     l2952:
 20478                           
 20479                           ; BSR set to: 1
 20480                           
 20481                           ; BSR set to: 1
 20482  01991E  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 20483  019920  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 20484  019922  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 20485  019924  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 20486  019926                     l2950:
 20487                           
 20488                           ; BSR set to: 1
 20489  019926  0101               	movlb	1	; () banked
 20490  019928  0721               	decf	strncmp@len& (0+255),f,b
 20491  01992A  A0D8               	btfss	status,0,c
 20492  01992C  0722               	decf	(strncmp@len+1)& (0+255),f,b
 20493  01992E  2921               	incf	strncmp@len& (0+255),w,b
 20494  019930  E1C1               	bnz	l15788
 20495  019932  2922               	incf	(strncmp@len+1)& (0+255),w,b
 20496  019934  A4D8               	btfss	status,2,c
 20497  019936  D7BE               	goto	l2951
 20498                           
 20499                           ; BSR set to: 1
 20500                           
 20501                           ; BSR set to: 1
 20502  019938  0E00               	movlw	0
 20503  01993A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20504  01993C  0E00               	movlw	0
 20505  01993E  6F1D               	movwf	?_strncmp& (0+255),b
 20506  019940  0012               	return	
 20507  019942                     __end_of_strncmp:
 20508                           	opt stack 0
 20509                           tblptru	equ	0xFF8
 20510                           tblptrh	equ	0xFF7
 20511                           tblptrl	equ	0xFF6
 20512                           tablat	equ	0xFF5
 20513                           intcon	equ	0xFF2
 20514                           postinc0	equ	0xFEE
 20515                           wreg	equ	0xFE8
 20516                           indf1	equ	0xFE7
 20517                           postdec1	equ	0xFE5
 20518                           fsr1h	equ	0xFE2
 20519                           fsr1l	equ	0xFE1
 20520                           indf2	equ	0xFDF
 20521                           postinc2	equ	0xFDE
 20522                           fsr2h	equ	0xFDA
 20523                           fsr2l	equ	0xFD9
 20524                           status	equ	0xFD8
 20525                           
 20526 ;; *************** function _strlen *****************
 20527 ;; Defined at:
 20528 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 20529 ;; Parameters:    Size  Location     Type
 20530 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 20531 ;;		 -> STR_128(25), line(64), 
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 20534 ;;		 -> STR_128(25), line(64), 
 20535 ;; Return value:  Size  Location     Type
 20536 ;;                  2   23[BANK1 ] unsigned int 
 20537 ;; Registers used:
 20538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 20539 ;; Tracked objects:
 20540 ;;		On entry : 0/0
 20541 ;;		On exit  : 0/0
 20542 ;;		Unchanged: 0/0
 20543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20544 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20545 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20546 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20547 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20548 ;;Total ram usage:        6 bytes
 20549 ;; Hardware stack levels used:    1
 20550 ;; Hardware stack levels required when called:   13
 20551 ;; This function calls:
 20552 ;;		Nothing
 20553 ;; This function is called by:
 20554 ;;		_terminal_ringBufferPull
 20555 ;;		_strstr
 20556 ;; This function uses a non-reentrant model
 20557 ;;
 20558                           
 20559                           	psect	text12
 20560  01A196                     __ptext12:
 20561                           	opt stack 0
 20562  01A196                     _strlen:
 20563                           	opt stack 16
 20564                           
 20565                           ; BSR set to: 1
 20566                           ;incstack = 0
 20567  01A196  C117  F11B         	movff	strlen@s,strlen@cp
 20568  01A19A  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 20569  01A19E  D003               	goto	l2869
 20570  01A1A0  0101               	movlb	1	; () banked
 20571  01A1A2  4B1B               	infsnz	strlen@cp& (0+255),f,b
 20572  01A1A4  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 20573  01A1A6                     l2869:
 20574                           
 20575                           ; BSR set to: 1
 20576  01A1A6  C11B  FFF6         	movff	strlen@cp,tblptrl
 20577  01A1AA  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 20578  01A1AE  0E00               	movlw	low (__mediumconst shr (0+16))
 20579  01A1B0  6EF8               	movwf	tblptru,c
 20580  01A1B2  0E0D               	movlw	(high __ramtop+-1)
 20581  01A1B4  64F7               	cpfsgt	tblptrh,c
 20582  01A1B6  D003               	bra	u20187
 20583  01A1B8  0008               	tblrd		*
 20584  01A1BA  50F5               	movf	tablat,w,c
 20585  01A1BC  D005               	bra	u20180
 20586  01A1BE                     u20187:
 20587  01A1BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 20588  01A1C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 20589  01A1C6  50EF               	movf	indf0,w,c
 20590  01A1C8                     u20180:
 20591  01A1C8  0900               	iorlw	0
 20592  01A1CA  A4D8               	btfss	status,2,c
 20593  01A1CC  D7E9               	goto	l2870
 20594  01A1CE  C117  F119         	movff	strlen@s,??_strlen
 20595  01A1D2  C118  F11A         	movff	strlen@s+1,??_strlen+1
 20596  01A1D6  0101               	movlb	1	; () banked
 20597  01A1D8  1F19               	comf	??_strlen& (0+255),f,b
 20598  01A1DA  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 20599  01A1DC  4B19               	infsnz	??_strlen& (0+255),f,b
 20600  01A1DE  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 20601  01A1E0  511B               	movf	strlen@cp& (0+255),w,b
 20602  01A1E2  2519               	addwf	??_strlen& (0+255),w,b
 20603  01A1E4  6F17               	movwf	?_strlen& (0+255),b
 20604  01A1E6  511C               	movf	(strlen@cp+1)& (0+255),w,b
 20605  01A1E8  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 20606  01A1EA  6F18               	movwf	(?_strlen+1)& (0+255),b
 20607  01A1EC  0012               	return	
 20608  01A1EE                     __end_of_strlen:
 20609                           	opt stack 0
 20610                           tblptru	equ	0xFF8
 20611                           tblptrh	equ	0xFF7
 20612                           tblptrl	equ	0xFF6
 20613                           tablat	equ	0xFF5
 20614                           intcon	equ	0xFF2
 20615                           indf0	equ	0xFEF
 20616                           postinc0	equ	0xFEE
 20617                           fsr0h	equ	0xFEA
 20618                           fsr0l	equ	0xFE9
 20619                           wreg	equ	0xFE8
 20620                           indf1	equ	0xFE7
 20621                           postdec1	equ	0xFE5
 20622                           fsr1h	equ	0xFE2
 20623                           fsr1l	equ	0xFE1
 20624                           indf2	equ	0xFDF
 20625                           postinc2	equ	0xFDE
 20626                           fsr2h	equ	0xFDA
 20627                           fsr2l	equ	0xFD9
 20628                           status	equ	0xFD8
 20629                           
 20630 ;; *************** function _strchr *****************
 20631 ;; Defined at:
 20632 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 20633 ;; Parameters:    Size  Location     Type
 20634 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 20635 ;;		 -> NULL(0), line(64), 
 20636 ;;  chr             2   25[BANK1 ] int 
 20637 ;; Auto vars:     Size  Location     Type
 20638 ;;		None
 20639 ;; Return value:  Size  Location     Type
 20640 ;;                  2   23[BANK1 ] PTR unsigned char 
 20641 ;; Registers used:
 20642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20643 ;; Tracked objects:
 20644 ;;		On entry : 0/0
 20645 ;;		On exit  : 0/0
 20646 ;;		Unchanged: 0/0
 20647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20648 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20650 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20651 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20652 ;;Total ram usage:        5 bytes
 20653 ;; Hardware stack levels used:    1
 20654 ;; Hardware stack levels required when called:   13
 20655 ;; This function calls:
 20656 ;;		Nothing
 20657 ;; This function is called by:
 20658 ;;		_strstr
 20659 ;; This function uses a non-reentrant model
 20660 ;;
 20661                           
 20662                           	psect	text13
 20663  01AA8E                     __ptext13:
 20664                           	opt stack 0
 20665  01AA8E                     _strchr:
 20666                           	opt stack 14
 20667                           
 20668                           ; BSR set to: 1
 20669                           ;incstack = 0
 20670  01AA8E  C117  FFD9         	movff	strchr@ptr,fsr2l
 20671  01AA92  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20672  01AA96  0101               	movlb	1	; () banked
 20673  01AA98  5119               	movf	strchr@chr& (0+255),w,b
 20674  01AA9A  18DE               	xorwf	postinc2,w,c
 20675  01AA9C  A4D8               	btfss	status,2,c
 20676  01AA9E  D005               	goto	l2945
 20677                           
 20678                           ; BSR set to: 1
 20679  01AAA0  C117  F117         	movff	strchr@ptr,?_strchr
 20680  01AAA4  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 20681                           
 20682                           ; BSR set to: 1
 20683  01AAA8  0012               	return	
 20684  01AAAA                     l2945:
 20685                           
 20686                           ; BSR set to: 1
 20687                           
 20688                           ; BSR set to: 1
 20689  01AAAA  C117  FFD9         	movff	strchr@ptr,fsr2l
 20690  01AAAE  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20691  01AAB2  4B17               	infsnz	strchr@ptr& (0+255),f,b
 20692  01AAB4  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 20693  01AAB6  50DF               	movf	indf2,w,c
 20694  01AAB8  A4D8               	btfss	status,2,c
 20695  01AABA  D7E9               	goto	_strchr
 20696                           
 20697                           ; BSR set to: 1
 20698                           
 20699                           ; BSR set to: 1
 20700  01AABC  0E00               	movlw	0
 20701  01AABE  6F17               	movwf	?_strchr& (0+255),b
 20702  01AAC0  0E00               	movlw	0
 20703  01AAC2  6F18               	movwf	(?_strchr+1)& (0+255),b
 20704  01AAC4  0012               	return	
 20705  01AAC6                     __end_of_strchr:
 20706                           	opt stack 0
 20707                           tblptru	equ	0xFF8
 20708                           tblptrh	equ	0xFF7
 20709                           tblptrl	equ	0xFF6
 20710                           tablat	equ	0xFF5
 20711                           intcon	equ	0xFF2
 20712                           indf0	equ	0xFEF
 20713                           postinc0	equ	0xFEE
 20714                           fsr0h	equ	0xFEA
 20715                           fsr0l	equ	0xFE9
 20716                           wreg	equ	0xFE8
 20717                           indf1	equ	0xFE7
 20718                           postdec1	equ	0xFE5
 20719                           fsr1h	equ	0xFE2
 20720                           fsr1l	equ	0xFE1
 20721                           indf2	equ	0xFDF
 20722                           postinc2	equ	0xFDE
 20723                           fsr2h	equ	0xFDA
 20724                           fsr2l	equ	0xFD9
 20725                           status	equ	0xFD8
 20726                           
 20727 ;; *************** function _strcmp *****************
 20728 ;; Defined at:
 20729 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 20730 ;; Parameters:    Size  Location     Type
 20731 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 20732 ;;		 -> line(64), 
 20733 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 20734 ;;		 -> STR_170(11), STR_163(5), STR_161(9), STR_159(29), 
 20735 ;;		 -> STR_157(34), STR_155(33), STR_153(29), STR_151(17), 
 20736 ;;		 -> STR_149(17), STR_147(14), STR_145(19), STR_143(20), 
 20737 ;;		 -> STR_141(11), STR_139(17), STR_137(14), STR_135(16), 
 20738 ;;		 -> STR_126(13), STR_122(17), STR_119(14), STR_117(12), 
 20739 ;;		 -> STR_115(16), STR_113(17), STR_108(15), STR_106(13), 
 20740 ;;		 -> STR_104(16), STR_102(15), STR_100(21), STR_98(21), 
 20741 ;;		 -> STR_96(26), STR_94(14), STR_92(13), STR_90(18), 
 20742 ;;		 -> STR_88(15), STR_86(16), STR_84(18), STR_78(13), 
 20743 ;;		 -> STR_76(17), STR_64(12), STR_61(10), STR_59(13), 
 20744 ;;		 -> STR_57(11), STR_54(4), STR_53(6), STR_51(16), 
 20745 ;;		 -> STR_48(6), STR_45(6), 
 20746 ;; Auto vars:     Size  Location     Type
 20747 ;;  r               1   28[BANK1 ] char 
 20748 ;; Return value:  Size  Location     Type
 20749 ;;                  2   23[BANK1 ] int 
 20750 ;; Registers used:
 20751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20752 ;; Tracked objects:
 20753 ;;		On entry : 0/0
 20754 ;;		On exit  : 0/0
 20755 ;;		Unchanged: 0/0
 20756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20757 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20758 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20759 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20760 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20761 ;;Total ram usage:        6 bytes
 20762 ;; Hardware stack levels used:    1
 20763 ;; Hardware stack levels required when called:   13
 20764 ;; This function calls:
 20765 ;;		Nothing
 20766 ;; This function is called by:
 20767 ;;		_ringBufferLUT
 20768 ;; This function uses a non-reentrant model
 20769 ;;
 20770                           
 20771                           	psect	text14
 20772  01A33E                     __ptext14:
 20773                           	opt stack 0
 20774  01A33E                     _strcmp:
 20775                           	opt stack 15
 20776                           
 20777                           ; BSR set to: 1
 20778                           ;incstack = 0
 20779  01A33E  D005               	goto	l2861
 20780  01A340  0101               	movlb	1	; () banked
 20781  01A342  4B17               	infsnz	strcmp@s1& (0+255),f,b
 20782  01A344  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 20783  01A346  4B19               	infsnz	strcmp@s2& (0+255),f,b
 20784  01A348  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 20785  01A34A                     l2861:
 20786                           
 20787                           ; BSR set to: 1
 20788  01A34A  C117  FFD9         	movff	strcmp@s1,fsr2l
 20789  01A34E  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 20790  01A352  50DF               	movf	indf2,w,c
 20791  01A354  0101               	movlb	1	; () banked
 20792  01A356  6F1B               	movwf	??_strcmp& (0+255),b
 20793  01A358  C119  FFF6         	movff	strcmp@s2,tblptrl
 20794  01A35C  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 20795  01A360                     	if	0	;tblptru may be non-zero
 20796  01A360                     	endif
 20797  01A360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20798  01A360  0E00               	movlw	low (__mediumconst shr (0+16))
 20799  01A362  6EF8               	movwf	tblptru,c
 20800  01A364                     	endif
 20801  01A364  0008               	tblrd		*
 20802  01A366  50F5               	movf	tablat,w,c
 20803  01A368  0800               	sublw	0
 20804  01A36A  251B               	addwf	??_strcmp& (0+255),w,b
 20805  01A36C  6F1C               	movwf	strcmp@r& (0+255),b
 20806  01A36E  511C               	movf	strcmp@r& (0+255),w,b
 20807  01A370  A4D8               	btfss	status,2,c
 20808  01A372  D007               	goto	u20660
 20809                           
 20810                           ; BSR set to: 1
 20811  01A374  C117  FFD9         	movff	strcmp@s1,fsr2l
 20812  01A378  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 20813  01A37C  50DF               	movf	indf2,w,c
 20814  01A37E  A4D8               	btfss	status,2,c
 20815  01A380  D7DF               	goto	l2862
 20816  01A382                     u20660:
 20817                           
 20818                           ; BSR set to: 1
 20819                           
 20820                           ; BSR set to: 1
 20821                           
 20822                           ; BSR set to: 1
 20823  01A382  511C               	movf	strcmp@r& (0+255),w,b
 20824  01A384  6F17               	movwf	?_strcmp& (0+255),b
 20825  01A386  6B18               	clrf	(?_strcmp+1)& (0+255),b
 20826  01A388  BF17               	btfsc	?_strcmp& (0+255),7,b
 20827  01A38A  0718               	decf	(?_strcmp+1)& (0+255),f,b
 20828  01A38C  0012               	return	
 20829  01A38E                     __end_of_strcmp:
 20830                           	opt stack 0
 20831                           tblptru	equ	0xFF8
 20832                           tblptrh	equ	0xFF7
 20833                           tblptrl	equ	0xFF6
 20834                           tablat	equ	0xFF5
 20835                           intcon	equ	0xFF2
 20836                           indf0	equ	0xFEF
 20837                           postinc0	equ	0xFEE
 20838                           fsr0h	equ	0xFEA
 20839                           fsr0l	equ	0xFE9
 20840                           wreg	equ	0xFE8
 20841                           indf1	equ	0xFE7
 20842                           postdec1	equ	0xFE5
 20843                           fsr1h	equ	0xFE2
 20844                           fsr1l	equ	0xFE1
 20845                           indf2	equ	0xFDF
 20846                           postinc2	equ	0xFDE
 20847                           fsr2h	equ	0xFDA
 20848                           fsr2l	equ	0xFD9
 20849                           status	equ	0xFD8
 20850                           
 20851 ;; *************** function _getUserID *****************
 20852 ;; Defined at:
 20853 ;;		line 65 in file "device_IDs.c"
 20854 ;; Parameters:    Size  Location     Type
 20855 ;;  inputUserID     1    wreg     unsigned char 
 20856 ;; Auto vars:     Size  Location     Type
 20857 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 20858 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 20859 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 20860 ;; Return value:  Size  Location     Type
 20861 ;;                  2   34[BANK1 ] unsigned int 
 20862 ;; Registers used:
 20863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20864 ;; Tracked objects:
 20865 ;;		On entry : 0/0
 20866 ;;		On exit  : 0/0
 20867 ;;		Unchanged: 0/0
 20868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20869 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20870 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20872 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20873 ;;Total ram usage:        8 bytes
 20874 ;; Hardware stack levels used:    1
 20875 ;; Hardware stack levels required when called:   15
 20876 ;; This function calls:
 20877 ;;		_FLASH_ReadWord
 20878 ;; This function is called by:
 20879 ;;		_ringBufferLUT
 20880 ;; This function uses a non-reentrant model
 20881 ;;
 20882                           
 20883                           	psect	text15
 20884  01A76A                     __ptext15:
 20885                           	opt stack 0
 20886  01A76A                     _getUserID:
 20887                           	opt stack 13
 20888                           
 20889                           ; BSR set to: 1
 20890                           ;incstack = 0
 20891                           ;getUserID@inputUserID stored from wreg
 20892  01A76A  0101               	movlb	1	; () banked
 20893  01A76C  6F28               	movwf	getUserID@inputUserID& (0+255),b
 20894                           
 20895                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 20896  01A76E  0E00               	movlw	0
 20897  01A770  0101               	movlb	1	; () banked
 20898  01A772  6F24               	movwf	getUserID@initialOffset& (0+255),b
 20899  01A774  0E00               	movlw	0
 20900  01A776  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 20901  01A778  0E20               	movlw	32
 20902  01A77A  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 20903  01A77C  0E00               	movlw	0
 20904  01A77E  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 20905                           
 20906                           ; BSR set to: 1
 20907                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 20908  01A780  5128               	movf	getUserID@inputUserID& (0+255),w,b
 20909  01A782  0D02               	mullw	2
 20910  01A784  CFF3 F129          	movff	prodl,getUserID@IDOffset
 20911                           
 20912                           ; BSR set to: 1
 20913                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 20914  01A788  5129               	movf	getUserID@IDOffset& (0+255),w,b
 20915  01A78A  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 20916  01A78C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20917  01A78E  0E00               	movlw	0
 20918  01A790  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 20919  01A792  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20920  01A794  0E00               	movlw	0
 20921  01A796  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 20922  01A798  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 20923  01A79A  0E00               	movlw	0
 20924  01A79C  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 20925  01A79E  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 20926  01A7A0  ECD7  F0D3         	call	_FLASH_ReadWord	;wreg free
 20927  01A7A4  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 20928  01A7A8  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 20929  01A7AC  0012               	return	
 20930  01A7AE                     __end_of_getUserID:
 20931                           	opt stack 0
 20932                           tblptru	equ	0xFF8
 20933                           tblptrh	equ	0xFF7
 20934                           tblptrl	equ	0xFF6
 20935                           tablat	equ	0xFF5
 20936                           prodl	equ	0xFF3
 20937                           intcon	equ	0xFF2
 20938                           indf0	equ	0xFEF
 20939                           postinc0	equ	0xFEE
 20940                           fsr0h	equ	0xFEA
 20941                           fsr0l	equ	0xFE9
 20942                           wreg	equ	0xFE8
 20943                           indf1	equ	0xFE7
 20944                           postdec1	equ	0xFE5
 20945                           fsr1h	equ	0xFE2
 20946                           fsr1l	equ	0xFE1
 20947                           indf2	equ	0xFDF
 20948                           postinc2	equ	0xFDE
 20949                           fsr2h	equ	0xFDA
 20950                           fsr2l	equ	0xFD9
 20951                           status	equ	0xFD8
 20952                           
 20953 ;; *************** function _getMinorRevisionID *****************
 20954 ;; Defined at:
 20955 ;;		line 23 in file "device_IDs.c"
 20956 ;; Parameters:    Size  Location     Type
 20957 ;;		None
 20958 ;; Auto vars:     Size  Location     Type
 20959 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 20960 ;; Return value:  Size  Location     Type
 20961 ;;                  1    wreg      unsigned char 
 20962 ;; Registers used:
 20963 ;;		wreg, status,2, status,0, cstack
 20964 ;; Tracked objects:
 20965 ;;		On entry : 0/0
 20966 ;;		On exit  : 0/0
 20967 ;;		Unchanged: 0/0
 20968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20970 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20972 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20973 ;;Total ram usage:        2 bytes
 20974 ;; Hardware stack levels used:    1
 20975 ;; Hardware stack levels required when called:   15
 20976 ;; This function calls:
 20977 ;;		_FLASH_ReadWord
 20978 ;; This function is called by:
 20979 ;;		_ringBufferLUT
 20980 ;; This function uses a non-reentrant model
 20981 ;;
 20982                           
 20983                           	psect	text16
 20984  01AD98                     __ptext16:
 20985                           	opt stack 0
 20986  01AD98                     _getMinorRevisionID:
 20987                           	opt stack 13
 20988                           
 20989                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 20990                           
 20991                           ;incstack = 0
 20992  01AD98  0EFC               	movlw	252
 20993  01AD9A  0101               	movlb	1	; () banked
 20994  01AD9C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20995  01AD9E  0EFF               	movlw	255
 20996  01ADA0  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20997  01ADA2  0E3F               	movlw	63
 20998  01ADA4  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 20999  01ADA6  0E00               	movlw	0
 21000  01ADA8  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21001  01ADAA  ECD7  F0D3         	call	_FLASH_ReadWord	;wreg free
 21002  01ADAE  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21003  01ADB2  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21004                           
 21005                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21006  01ADB6  0101               	movlb	1	; () banked
 21007  01ADB8  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21008  01ADBA  0B1F               	andlw	31
 21009  01ADBC  0012               	return	
 21010  01ADBE                     __end_of_getMinorRevisionID:
 21011                           	opt stack 0
 21012                           tblptru	equ	0xFF8
 21013                           tblptrh	equ	0xFF7
 21014                           tblptrl	equ	0xFF6
 21015                           tablat	equ	0xFF5
 21016                           prodl	equ	0xFF3
 21017                           intcon	equ	0xFF2
 21018                           indf0	equ	0xFEF
 21019                           postinc0	equ	0xFEE
 21020                           fsr0h	equ	0xFEA
 21021                           fsr0l	equ	0xFE9
 21022                           wreg	equ	0xFE8
 21023                           indf1	equ	0xFE7
 21024                           postdec1	equ	0xFE5
 21025                           fsr1h	equ	0xFE2
 21026                           fsr1l	equ	0xFE1
 21027                           indf2	equ	0xFDF
 21028                           postinc2	equ	0xFDE
 21029                           fsr2h	equ	0xFDA
 21030                           fsr2l	equ	0xFD9
 21031                           status	equ	0xFD8
 21032                           
 21033 ;; *************** function _getMajorRevisionID *****************
 21034 ;; Defined at:
 21035 ;;		line 12 in file "device_IDs.c"
 21036 ;; Parameters:    Size  Location     Type
 21037 ;;		None
 21038 ;; Auto vars:     Size  Location     Type
 21039 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 21040 ;; Return value:  Size  Location     Type
 21041 ;;                  1    wreg      unsigned char 
 21042 ;; Registers used:
 21043 ;;		wreg, status,2, status,0, cstack
 21044 ;; Tracked objects:
 21045 ;;		On entry : 0/0
 21046 ;;		On exit  : 0/0
 21047 ;;		Unchanged: 0/0
 21048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21050 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21051 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21052 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21053 ;;Total ram usage:        5 bytes
 21054 ;; Hardware stack levels used:    1
 21055 ;; Hardware stack levels required when called:   15
 21056 ;; This function calls:
 21057 ;;		_FLASH_ReadWord
 21058 ;; This function is called by:
 21059 ;;		_ringBufferLUT
 21060 ;; This function uses a non-reentrant model
 21061 ;;
 21062                           
 21063                           	psect	text17
 21064  01A8EE                     __ptext17:
 21065                           	opt stack 0
 21066  01A8EE                     _getMajorRevisionID:
 21067                           	opt stack 13
 21068                           
 21069                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21070                           
 21071                           ; BSR set to: 1
 21072                           ;incstack = 0
 21073  01A8EE  0EFC               	movlw	252
 21074  01A8F0  0101               	movlb	1	; () banked
 21075  01A8F2  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21076  01A8F4  0EFF               	movlw	255
 21077  01A8F6  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21078  01A8F8  0E3F               	movlw	63
 21079  01A8FA  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21080  01A8FC  0E00               	movlw	0
 21081  01A8FE  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21082  01A900  ECD7  F0D3         	call	_FLASH_ReadWord	;wreg free
 21083  01A904  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21084  01A908  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21085                           
 21086                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21087  01A90C  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21088  01A910  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21089  01A914  0E06               	movlw	6
 21090  01A916  0101               	movlb	1	; () banked
 21091  01A918  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21092  01A91A                     u20695:
 21093  01A91A  90D8               	bcf	status,0,c
 21094  01A91C  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21095  01A91E  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21096  01A920  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21097  01A922  D7FB               	goto	u20695
 21098  01A924  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 21099  01A926  0B1F               	andlw	31
 21100  01A928  0012               	return	
 21101  01A92A                     __end_of_getMajorRevisionID:
 21102                           	opt stack 0
 21103                           tblptru	equ	0xFF8
 21104                           tblptrh	equ	0xFF7
 21105                           tblptrl	equ	0xFF6
 21106                           tablat	equ	0xFF5
 21107                           prodl	equ	0xFF3
 21108                           intcon	equ	0xFF2
 21109                           indf0	equ	0xFEF
 21110                           postinc0	equ	0xFEE
 21111                           fsr0h	equ	0xFEA
 21112                           fsr0l	equ	0xFE9
 21113                           wreg	equ	0xFE8
 21114                           indf1	equ	0xFE7
 21115                           postdec1	equ	0xFE5
 21116                           fsr1h	equ	0xFE2
 21117                           fsr1l	equ	0xFE1
 21118                           indf2	equ	0xFDF
 21119                           postinc2	equ	0xFDE
 21120                           fsr2h	equ	0xFDA
 21121                           fsr2l	equ	0xFD9
 21122                           status	equ	0xFD8
 21123                           
 21124 ;; *************** function _getDeviceIDString *****************
 21125 ;; Defined at:
 21126 ;;		line 34 in file "device_IDs.c"
 21127 ;; Parameters:    Size  Location     Type
 21128 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 21129 ;; Auto vars:     Size  Location     Type
 21130 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 21131 ;;		 -> STR_178(10), STR_177(13), STR_176(12), 
 21132 ;; Return value:  Size  Location     Type
 21133 ;;                  2   36[BANK1 ] PTR inline unsigned char
 21134 ;; Registers used:
 21135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21136 ;; Tracked objects:
 21137 ;;		On entry : 0/0
 21138 ;;		On exit  : 0/0
 21139 ;;		Unchanged: 0/0
 21140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21141 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21142 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21143 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21144 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21145 ;;Total ram usage:       10 bytes
 21146 ;; Hardware stack levels used:    1
 21147 ;; Hardware stack levels required when called:   13
 21148 ;; This function calls:
 21149 ;;		Nothing
 21150 ;; This function is called by:
 21151 ;;		_ringBufferLUT
 21152 ;; This function uses a non-reentrant model
 21153 ;;
 21154                           
 21155                           	psect	text18
 21156  01A136                     __ptext18:
 21157                           	opt stack 0
 21158  01A136                     _getDeviceIDString:
 21159                           	opt stack 15
 21160                           
 21161                           ;device_IDs.c: 37: const char *strings[] = {
 21162                           ;device_IDs.c: 39: "PIC18F67K40",
 21163                           ;device_IDs.c: 40: "PIC18LF67K40",
 21164                           ;device_IDs.c: 41: "Undefined"
 21165                           ;device_IDs.c: 43: };
 21166                           
 21167                           ; BSR set to: 1
 21168                           ;incstack = 0
 21169  01A136  EE22  F0E2         	lfsr	2,getDeviceIDString@F17550
 21170  01A13A  EE11  F028         	lfsr	1,getDeviceIDString@strings
 21171  01A13E  0E05               	movlw	5
 21172  01A140                     u20681:
 21173  01A140  CFDB FFE3          	movff	plusw2,plusw1
 21174  01A144  06E8               	decf	wreg,f,c
 21175  01A146  E2FC               	bc	u20681
 21176                           
 21177                           ;device_IDs.c: 47: switch (inputDevID) {
 21178  01A148  D00F               	goto	l1599
 21179  01A14A                     
 21180                           ;device_IDs.c: 50: return strings[0];
 21181  01A14A  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 21182  01A14E  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 21183                           
 21184                           ;device_IDs.c: 51: break;
 21185  01A152  0012               	return	
 21186  01A154                     
 21187                           ;device_IDs.c: 54: return strings[1];
 21188  01A154  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 21189  01A158  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 21190                           
 21191                           ;device_IDs.c: 55: break;
 21192  01A15C  0012               	return	
 21193  01A15E                     
 21194                           ;device_IDs.c: 58: return strings[2];
 21195  01A15E  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 21196  01A162  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 21197                           
 21198                           ;device_IDs.c: 61: }
 21199                           
 21200                           ;device_IDs.c: 59: break;
 21201  01A166  0012               	return	
 21202  01A168                     l1599:
 21203  01A168  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 21204  01A16C  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 21205                           
 21206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21207                           ; Switch size 1, requested type "space"
 21208                           ; Number of cases is 2, Range of values is 106 to 107
 21209                           ; switch strategies available:
 21210                           ; Name         Instructions Cycles
 21211                           ; simple_byte            7     4 (average)
 21212                           ;	Chosen strategy is simple_byte
 21213  01A170  0101               	movlb	1	; () banked
 21214  01A172  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 21215  01A174  0A6A               	xorlw	106	; case 106
 21216  01A176  B4D8               	btfsc	status,2,c
 21217  01A178  D004               	goto	l23508
 21218  01A17A  0A01               	xorlw	1	; case 107
 21219  01A17C  B4D8               	btfsc	status,2,c
 21220  01A17E  D006               	goto	l23510
 21221  01A180  D7EE               	goto	l1604
 21222  01A182                     l23508:
 21223                           
 21224                           ; BSR set to: 1
 21225                           ; Switch size 1, requested type "space"
 21226                           ; Number of cases is 1, Range of values is 192 to 192
 21227                           ; switch strategies available:
 21228                           ; Name         Instructions Cycles
 21229                           ; simple_byte            4     3 (average)
 21230                           ;	Chosen strategy is simple_byte
 21231  01A182  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21232  01A184  0AC0               	xorlw	192	; case 192
 21233  01A186  B4D8               	btfsc	status,2,c
 21234  01A188  D7E0               	goto	l1600
 21235  01A18A  D7E9               	goto	l1604
 21236  01A18C                     l23510:
 21237                           
 21238                           ; BSR set to: 1
 21239                           ; Switch size 1, requested type "space"
 21240                           ; Number of cases is 1, Range of values is 32 to 32
 21241                           ; switch strategies available:
 21242                           ; Name         Instructions Cycles
 21243                           ; simple_byte            4     3 (average)
 21244                           ;	Chosen strategy is simple_byte
 21245  01A18C  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21246  01A18E  0A20               	xorlw	32	; case 32
 21247  01A190  B4D8               	btfsc	status,2,c
 21248  01A192  D7E0               	goto	l1603
 21249  01A194  D7E4               	goto	l1604
 21250  01A196                     __end_of_getDeviceIDString:
 21251                           	opt stack 0
 21252                           tblptru	equ	0xFF8
 21253                           tblptrh	equ	0xFF7
 21254                           tblptrl	equ	0xFF6
 21255                           tablat	equ	0xFF5
 21256                           prodl	equ	0xFF3
 21257                           intcon	equ	0xFF2
 21258                           indf0	equ	0xFEF
 21259                           postinc0	equ	0xFEE
 21260                           fsr0h	equ	0xFEA
 21261                           fsr0l	equ	0xFE9
 21262                           wreg	equ	0xFE8
 21263                           indf1	equ	0xFE7
 21264                           postdec1	equ	0xFE5
 21265                           plusw1	equ	0xFE3
 21266                           fsr1h	equ	0xFE2
 21267                           fsr1l	equ	0xFE1
 21268                           indf2	equ	0xFDF
 21269                           postinc2	equ	0xFDE
 21270                           plusw2	equ	0xFDB
 21271                           fsr2h	equ	0xFDA
 21272                           fsr2l	equ	0xFD9
 21273                           status	equ	0xFD8
 21274                           
 21275 ;; *************** function _getDeviceID *****************
 21276 ;; Defined at:
 21277 ;;		line 4 in file "device_IDs.c"
 21278 ;; Parameters:    Size  Location     Type
 21279 ;;		None
 21280 ;; Auto vars:     Size  Location     Type
 21281 ;;		None
 21282 ;; Return value:  Size  Location     Type
 21283 ;;                  2   34[BANK1 ] unsigned int 
 21284 ;; Registers used:
 21285 ;;		wreg, status,2, status,0, cstack
 21286 ;; Tracked objects:
 21287 ;;		On entry : 0/0
 21288 ;;		On exit  : 0/0
 21289 ;;		Unchanged: 0/0
 21290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21291 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21294 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21295 ;;Total ram usage:        2 bytes
 21296 ;; Hardware stack levels used:    1
 21297 ;; Hardware stack levels required when called:   15
 21298 ;; This function calls:
 21299 ;;		_FLASH_ReadWord
 21300 ;; This function is called by:
 21301 ;;		_ringBufferLUT
 21302 ;; This function uses a non-reentrant model
 21303 ;;
 21304                           
 21305                           	psect	text19
 21306  01AEE2                     __ptext19:
 21307                           	opt stack 0
 21308  01AEE2                     _getDeviceID:
 21309                           	opt stack 13
 21310                           
 21311                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21312                           
 21313                           ;incstack = 0
 21314  01AEE2  0EFE               	movlw	254
 21315  01AEE4  0101               	movlb	1	; () banked
 21316  01AEE6  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21317  01AEE8  0EFF               	movlw	255
 21318  01AEEA  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21319  01AEEC  0E3F               	movlw	63
 21320  01AEEE  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21321  01AEF0  0E00               	movlw	0
 21322  01AEF2  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21323  01AEF4  ECD7  F0D3         	call	_FLASH_ReadWord	;wreg free
 21324  01AEF8  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 21325  01AEFC  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21326  01AF00  0012               	return	
 21327  01AF02                     __end_of_getDeviceID:
 21328                           	opt stack 0
 21329                           tblptru	equ	0xFF8
 21330                           tblptrh	equ	0xFF7
 21331                           tblptrl	equ	0xFF6
 21332                           tablat	equ	0xFF5
 21333                           prodl	equ	0xFF3
 21334                           intcon	equ	0xFF2
 21335                           indf0	equ	0xFEF
 21336                           postinc0	equ	0xFEE
 21337                           fsr0h	equ	0xFEA
 21338                           fsr0l	equ	0xFE9
 21339                           wreg	equ	0xFE8
 21340                           indf1	equ	0xFE7
 21341                           postdec1	equ	0xFE5
 21342                           plusw1	equ	0xFE3
 21343                           fsr1h	equ	0xFE2
 21344                           fsr1l	equ	0xFE1
 21345                           indf2	equ	0xFDF
 21346                           postinc2	equ	0xFDE
 21347                           plusw2	equ	0xFDB
 21348                           fsr2h	equ	0xFDA
 21349                           fsr2l	equ	0xFD9
 21350                           status	equ	0xFD8
 21351                           
 21352 ;; *************** function _FLASH_ReadWord *****************
 21353 ;; Defined at:
 21354 ;;		line 71 in file "mcc_generated_files/memory.c"
 21355 ;; Parameters:    Size  Location     Type
 21356 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 21357 ;; Auto vars:     Size  Location     Type
 21358 ;;		None
 21359 ;; Return value:  Size  Location     Type
 21360 ;;                  2   27[BANK1 ] unsigned int 
 21361 ;; Registers used:
 21362 ;;		wreg, status,2, status,0, cstack
 21363 ;; Tracked objects:
 21364 ;;		On entry : 0/0
 21365 ;;		On exit  : 0/0
 21366 ;;		Unchanged: 0/0
 21367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21368 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21370 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21371 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21372 ;;Total ram usage:        7 bytes
 21373 ;; Hardware stack levels used:    1
 21374 ;; Hardware stack levels required when called:   14
 21375 ;; This function calls:
 21376 ;;		_FLASH_ReadByte
 21377 ;; This function is called by:
 21378 ;;		_getDeviceID
 21379 ;;		_getMajorRevisionID
 21380 ;;		_getMinorRevisionID
 21381 ;;		_getUserID
 21382 ;; This function uses a non-reentrant model
 21383 ;;
 21384                           
 21385                           	psect	text20
 21386  01A7AE                     __ptext20:
 21387                           	opt stack 0
 21388  01A7AE                     _FLASH_ReadWord:
 21389                           	opt stack 13
 21390                           
 21391                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21392                           
 21393                           ;incstack = 0
 21394  01A7AE  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21395  01A7B2  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21396  01A7B6  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21397  01A7BA  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21398  01A7BE  ECD7  F0D7         	call	_FLASH_ReadByte	;wreg free
 21399  01A7C2  0101               	movlb	1	; () banked
 21400  01A7C4  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 21401  01A7C6  0E01               	movlw	1
 21402  01A7C8  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21403  01A7CA  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21404  01A7CC  0E00               	movlw	0
 21405  01A7CE  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21406  01A7D0  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21407  01A7D2  0E00               	movlw	0
 21408  01A7D4  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21409  01A7D6  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21410  01A7D8  0E00               	movlw	0
 21411  01A7DA  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21412  01A7DC  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21413  01A7DE  ECD7  F0D7         	call	_FLASH_ReadByte	;wreg free
 21414  01A7E2  0101               	movlb	1	; () banked
 21415  01A7E4  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21416  01A7E6  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 21417  01A7E8  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 21418  01A7EA  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21419  01A7EE  0012               	return	
 21420  01A7F0                     __end_of_FLASH_ReadWord:
 21421                           	opt stack 0
 21422                           tblptru	equ	0xFF8
 21423                           tblptrh	equ	0xFF7
 21424                           tblptrl	equ	0xFF6
 21425                           tablat	equ	0xFF5
 21426                           prodl	equ	0xFF3
 21427                           intcon	equ	0xFF2
 21428                           indf0	equ	0xFEF
 21429                           postinc0	equ	0xFEE
 21430                           fsr0h	equ	0xFEA
 21431                           fsr0l	equ	0xFE9
 21432                           wreg	equ	0xFE8
 21433                           indf1	equ	0xFE7
 21434                           postdec1	equ	0xFE5
 21435                           plusw1	equ	0xFE3
 21436                           fsr1h	equ	0xFE2
 21437                           fsr1l	equ	0xFE1
 21438                           indf2	equ	0xFDF
 21439                           postinc2	equ	0xFDE
 21440                           plusw2	equ	0xFDB
 21441                           fsr2h	equ	0xFDA
 21442                           fsr2l	equ	0xFD9
 21443                           status	equ	0xFD8
 21444                           
 21445 ;; *************** function _FLASH_ReadByte *****************
 21446 ;; Defined at:
 21447 ;;		line 59 in file "mcc_generated_files/memory.c"
 21448 ;; Parameters:    Size  Location     Type
 21449 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 21450 ;; Auto vars:     Size  Location     Type
 21451 ;;		None
 21452 ;; Return value:  Size  Location     Type
 21453 ;;                  1    wreg      unsigned char 
 21454 ;; Registers used:
 21455 ;;		wreg, status,2
 21456 ;; Tracked objects:
 21457 ;;		On entry : 0/0
 21458 ;;		On exit  : 0/0
 21459 ;;		Unchanged: 0/0
 21460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21461 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21464 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21465 ;;Total ram usage:        4 bytes
 21466 ;; Hardware stack levels used:    1
 21467 ;; Hardware stack levels required when called:   13
 21468 ;; This function calls:
 21469 ;;		Nothing
 21470 ;; This function is called by:
 21471 ;;		_FLASH_ReadWord
 21472 ;;		_FLASH_WriteByte
 21473 ;; This function uses a non-reentrant model
 21474 ;;
 21475                           
 21476                           	psect	text21
 21477  01AFAE                     __ptext21:
 21478                           	opt stack 0
 21479  01AFAE                     _FLASH_ReadByte:
 21480                           	opt stack 13
 21481                           
 21482                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21483                           
 21484                           ; BSR set to: 1
 21485                           ;incstack = 0
 21486  01AFAE  5077               	movf	3959,w,c	;volsfr
 21487  01AFB0  0B3F               	andlw	-193
 21488  01AFB2  0980               	iorlw	128
 21489  01AFB4  6E77               	movwf	3959,c	;volsfr
 21490                           
 21491                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21492  01AFB6  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21493                           
 21494                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21495  01AFBA  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21496                           
 21497                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21498  01AFBE  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21499  01AFC2  0008               	tblrd		*	;# 
 21500                           
 21501                           ;memory.c: 68: return (TABLAT);
 21502  01AFC4  50F5               	movf	tablat,w,c	;volatile
 21503  01AFC6  0012               	return	
 21504  01AFC8                     __end_of_FLASH_ReadByte:
 21505                           	opt stack 0
 21506                           tblptru	equ	0xFF8
 21507                           tblptrh	equ	0xFF7
 21508                           tblptrl	equ	0xFF6
 21509                           tablat	equ	0xFF5
 21510                           prodl	equ	0xFF3
 21511                           intcon	equ	0xFF2
 21512                           indf0	equ	0xFEF
 21513                           postinc0	equ	0xFEE
 21514                           fsr0h	equ	0xFEA
 21515                           fsr0l	equ	0xFE9
 21516                           wreg	equ	0xFE8
 21517                           indf1	equ	0xFE7
 21518                           postdec1	equ	0xFE5
 21519                           plusw1	equ	0xFE3
 21520                           fsr1h	equ	0xFE2
 21521                           fsr1l	equ	0xFE1
 21522                           indf2	equ	0xFDF
 21523                           postinc2	equ	0xFDE
 21524                           plusw2	equ	0xFDB
 21525                           fsr2h	equ	0xFDA
 21526                           fsr2l	equ	0xFD9
 21527                           status	equ	0xFD8
 21528                           
 21529 ;; *************** function _getCauseOfResetString *****************
 21530 ;; Defined at:
 21531 ;;		line 81 in file "cause_of_reset.c"
 21532 ;; Parameters:    Size  Location     Type
 21533 ;;  r               1    wreg     enum E17455
 21534 ;; Auto vars:     Size  Location     Type
 21535 ;;  r               1   25[BANK1 ] enum E17455
 21536 ;; Return value:  Size  Location     Type
 21537 ;;                  2   23[BANK1 ] PTR inline unsigned char
 21538 ;; Registers used:
 21539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21540 ;; Tracked objects:
 21541 ;;		On entry : 0/0
 21542 ;;		On exit  : 0/0
 21543 ;;		Unchanged: 0/0
 21544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21545 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21546 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21548 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21549 ;;Total ram usage:        3 bytes
 21550 ;; Hardware stack levels used:    1
 21551 ;; Hardware stack levels required when called:   13
 21552 ;; This function calls:
 21553 ;;		Nothing
 21554 ;; This function is called by:
 21555 ;;		_ringBufferLUT
 21556 ;; This function uses a non-reentrant model
 21557 ;;
 21558                           
 21559                           	psect	text22
 21560  01AC38                     __ptext22:
 21561                           	opt stack 0
 21562  01AC38                     _getCauseOfResetString:
 21563                           	opt stack 15
 21564                           
 21565                           ;incstack = 0
 21566                           ;getCauseOfResetString@r stored from wreg
 21567  01AC38  0101               	movlb	1	; () banked
 21568  01AC3A  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 21569                           
 21570                           ;cause_of_reset.c: 84: static char *strings[] = {
 21571                           ;cause_of_reset.c: 85: "Undefined Reset",
 21572                           ;cause_of_reset.c: 86: "Power On Reset",
 21573                           ;cause_of_reset.c: 87: "Brown Out Reset",
 21574                           ;cause_of_reset.c: 88: "Master Clear Reset",
 21575                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 21576                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 21577                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 21578                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 21579                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 21580                           ;cause_of_reset.c: 94: };
 21581  01AC3C  0E09               	movlw	9
 21582  01AC3E  0101               	movlb	1	; () banked
 21583  01AC40  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 21584  01AC42  D00D               	goto	l1631
 21585                           
 21586                           ; BSR set to: 1
 21587                           ;cause_of_reset.c: 99: return strings[r];
 21588  01AC44  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 21589  01AC46  0D02               	mullw	2
 21590  01AC48  0ED0               	movlw	low getCauseOfResetString@strings
 21591  01AC4A  24F3               	addwf	prodl,w,c
 21592  01AC4C  6ED9               	movwf	fsr2l,c
 21593  01AC4E  0E02               	movlw	high getCauseOfResetString@strings
 21594  01AC50  20F4               	addwfc	prodh,w,c
 21595  01AC52  6EDA               	movwf	fsr2h,c
 21596  01AC54  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 21597  01AC58  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 21598                           
 21599                           ; BSR set to: 1
 21600                           ;cause_of_reset.c: 101: }
 21601                           
 21602                           ; BSR set to: 1
 21603  01AC5C  0012               	return	
 21604  01AC5E                     l1631:
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;cause_of_reset.c: 103: else {
 21608                           ;cause_of_reset.c: 105: return "Undefined Reset";
 21609                           
 21610                           ; BSR set to: 1
 21611  01AC5E  0E75               	movlw	low STR_179
 21612  01AC60  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 21613  01AC62  0EFD               	movlw	high STR_179
 21614  01AC64  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 21615                           
 21616                           ; BSR set to: 1
 21617  01AC66  0012               	return	
 21618  01AC68                     __end_of_getCauseOfResetString:
 21619                           	opt stack 0
 21620                           tblptru	equ	0xFF8
 21621                           tblptrh	equ	0xFF7
 21622                           tblptrl	equ	0xFF6
 21623                           tablat	equ	0xFF5
 21624                           prodh	equ	0xFF4
 21625                           prodl	equ	0xFF3
 21626                           intcon	equ	0xFF2
 21627                           indf0	equ	0xFEF
 21628                           postinc0	equ	0xFEE
 21629                           fsr0h	equ	0xFEA
 21630                           fsr0l	equ	0xFE9
 21631                           wreg	equ	0xFE8
 21632                           indf1	equ	0xFE7
 21633                           postdec1	equ	0xFE5
 21634                           plusw1	equ	0xFE3
 21635                           fsr1h	equ	0xFE2
 21636                           fsr1l	equ	0xFE1
 21637                           indf2	equ	0xFDF
 21638                           postinc2	equ	0xFDE
 21639                           postdec2	equ	0xFDD
 21640                           plusw2	equ	0xFDB
 21641                           fsr2h	equ	0xFDA
 21642                           fsr2l	equ	0xFD9
 21643                           status	equ	0xFD8
 21644                           
 21645 ;; *************** function _getCOMMError *****************
 21646 ;; Defined at:
 21647 ;;		line 35 in file "error_handling.c"
 21648 ;; Parameters:    Size  Location     Type
 21649 ;;		None
 21650 ;; Auto vars:     Size  Location     Type
 21651 ;;		None
 21652 ;; Return value:  Size  Location     Type
 21653 ;;                  1    wreg      unsigned char 
 21654 ;; Registers used:
 21655 ;;		wreg, status,2
 21656 ;; Tracked objects:
 21657 ;;		On entry : 0/0
 21658 ;;		On exit  : 0/0
 21659 ;;		Unchanged: 0/0
 21660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21665 ;;Total ram usage:        0 bytes
 21666 ;; Hardware stack levels used:    1
 21667 ;; Hardware stack levels required when called:   13
 21668 ;; This function calls:
 21669 ;;		Nothing
 21670 ;; This function is called by:
 21671 ;;		_ringBufferLUT
 21672 ;;		_updateErrorLEDs
 21673 ;; This function uses a non-reentrant model
 21674 ;;
 21675                           
 21676                           	psect	text23
 21677  01B044                     __ptext23:
 21678                           	opt stack 0
 21679  01B044                     _getCOMMError:
 21680                           	opt stack 16
 21681                           
 21682                           ;error_handling.c: 38: if ( error_handler.I2C_COMM_error_flag ||
 21683                           ;error_handling.c: 39: error_handler.USB_UART_COMM_error_flag ) {
 21684                           
 21685                           ; BSR set to: 1
 21686                           ;incstack = 0
 21687  01B044  0102               	movlb	2	; () banked
 21688  01B046  5107               	movf	(_error_handler+7)& (0+255),w,b
 21689  01B048  A4D8               	btfss	status,2,c
 21690  01B04A  D003               	goto	u20780
 21691                           
 21692                           ; BSR set to: 2
 21693  01B04C  5108               	movf	(_error_handler+8)& (0+255),w,b
 21694  01B04E  B4D8               	btfsc	status,2,c
 21695  01B050  D002               	goto	l1884
 21696  01B052                     u20780:
 21697                           
 21698                           ; BSR set to: 2
 21699                           ;error_handling.c: 41: return 1;
 21700                           
 21701                           ; BSR set to: 2
 21702  01B052  0E01               	movlw	1
 21703                           
 21704                           ; BSR set to: 2
 21705                           ;error_handling.c: 43: }
 21706                           
 21707                           ; BSR set to: 2
 21708  01B054  0012               	return	
 21709  01B056                     l1884:
 21710                           
 21711                           ; BSR set to: 2
 21712                           ;error_handling.c: 45: else {
 21713                           ;error_handling.c: 47: return 0;
 21714                           
 21715                           ; BSR set to: 2
 21716  01B056  0E00               	movlw	0
 21717                           
 21718                           ; BSR set to: 2
 21719  01B058  0012               	return	
 21720  01B05A                     __end_of_getCOMMError:
 21721                           	opt stack 0
 21722                           tblptru	equ	0xFF8
 21723                           tblptrh	equ	0xFF7
 21724                           tblptrl	equ	0xFF6
 21725                           tablat	equ	0xFF5
 21726                           prodh	equ	0xFF4
 21727                           prodl	equ	0xFF3
 21728                           intcon	equ	0xFF2
 21729                           indf0	equ	0xFEF
 21730                           postinc0	equ	0xFEE
 21731                           fsr0h	equ	0xFEA
 21732                           fsr0l	equ	0xFE9
 21733                           wreg	equ	0xFE8
 21734                           indf1	equ	0xFE7
 21735                           postdec1	equ	0xFE5
 21736                           plusw1	equ	0xFE3
 21737                           fsr1h	equ	0xFE2
 21738                           fsr1l	equ	0xFE1
 21739                           indf2	equ	0xFDF
 21740                           postinc2	equ	0xFDE
 21741                           postdec2	equ	0xFDD
 21742                           plusw2	equ	0xFDB
 21743                           fsr2h	equ	0xFDA
 21744                           fsr2l	equ	0xFD9
 21745                           status	equ	0xFD8
 21746                           
 21747 ;; *************** function _getADCError *****************
 21748 ;; Defined at:
 21749 ;;		line 11 in file "error_handling.c"
 21750 ;; Parameters:    Size  Location     Type
 21751 ;;		None
 21752 ;; Auto vars:     Size  Location     Type
 21753 ;;		None
 21754 ;; Return value:  Size  Location     Type
 21755 ;;                  1    wreg      unsigned char 
 21756 ;; Registers used:
 21757 ;;		wreg, status,2
 21758 ;; Tracked objects:
 21759 ;;		On entry : 0/0
 21760 ;;		On exit  : 0/0
 21761 ;;		Unchanged: 0/0
 21762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21767 ;;Total ram usage:        0 bytes
 21768 ;; Hardware stack levels used:    1
 21769 ;; Hardware stack levels required when called:   13
 21770 ;; This function calls:
 21771 ;;		Nothing
 21772 ;; This function is called by:
 21773 ;;		_ringBufferLUT
 21774 ;;		_updateErrorLEDs
 21775 ;; This function uses a non-reentrant model
 21776 ;;
 21777                           
 21778                           	psect	text24
 21779  01AB6A                     __ptext24:
 21780                           	opt stack 0
 21781  01AB6A                     _getADCError:
 21782                           	opt stack 16
 21783                           
 21784                           ;error_handling.c: 14: if ( error_handler.ADC_general_error_flag ||
 21785                           ;error_handling.c: 15: error_handler.AVSS_ADC_error_flag ||
 21786                           ;error_handling.c: 16: error_handler.FVR_ADC_error_flag ||
 21787                           ;error_handling.c: 17: error_handler.ISNS_ADC_error_flag ||
 21788                           ;error_handling.c: 18: error_handler.POS12_ADC_error_flag ||
 21789                           ;error_handling.c: 19: error_handler.POS3P3_ADC_error_flag ||
 21790                           ;error_handling.c: 20: error_handler.Temp_ADC_error_flag ) {
 21791                           
 21792                           ; BSR set to: 2
 21793                           ;incstack = 0
 21794  01AB6A  0102               	movlb	2	; () banked
 21795  01AB6C  5106               	movf	(_error_handler+6)& (0+255),w,b
 21796  01AB6E  A4D8               	btfss	status,2,c
 21797  01AB70  D012               	goto	u20760
 21798                           
 21799                           ; BSR set to: 2
 21800  01AB72  5103               	movf	(_error_handler+3)& (0+255),w,b
 21801  01AB74  A4D8               	btfss	status,2,c
 21802  01AB76  D00F               	goto	u20760
 21803                           
 21804                           ; BSR set to: 2
 21805  01AB78  5105               	movf	(_error_handler+5)& (0+255),w,b
 21806  01AB7A  A4D8               	btfss	status,2,c
 21807  01AB7C  D00C               	goto	u20760
 21808                           
 21809                           ; BSR set to: 2
 21810  01AB7E  5100               	movf	_error_handler& (0+255),w,b
 21811  01AB80  A4D8               	btfss	status,2,c
 21812  01AB82  D009               	goto	u20760
 21813                           
 21814                           ; BSR set to: 2
 21815  01AB84  5101               	movf	(_error_handler+1)& (0+255),w,b
 21816  01AB86  A4D8               	btfss	status,2,c
 21817  01AB88  D006               	goto	u20760
 21818                           
 21819                           ; BSR set to: 2
 21820  01AB8A  5102               	movf	(_error_handler+2)& (0+255),w,b
 21821  01AB8C  A4D8               	btfss	status,2,c
 21822  01AB8E  D003               	goto	u20760
 21823                           
 21824                           ; BSR set to: 2
 21825  01AB90  5104               	movf	(_error_handler+4)& (0+255),w,b
 21826  01AB92  B4D8               	btfsc	status,2,c
 21827  01AB94  D002               	goto	l1877
 21828  01AB96                     u20760:
 21829                           
 21830                           ; BSR set to: 2
 21831                           ;error_handling.c: 22: return 1;
 21832                           
 21833                           ; BSR set to: 2
 21834  01AB96  0E01               	movlw	1
 21835                           
 21836                           ; BSR set to: 2
 21837                           ;error_handling.c: 24: }
 21838                           
 21839                           ; BSR set to: 2
 21840  01AB98  0012               	return	
 21841  01AB9A                     l1877:
 21842                           
 21843                           ; BSR set to: 2
 21844                           ;error_handling.c: 26: else {
 21845                           ;error_handling.c: 28: return 0;
 21846                           
 21847                           ; BSR set to: 2
 21848  01AB9A  0E00               	movlw	0
 21849                           
 21850                           ; BSR set to: 2
 21851  01AB9C  0012               	return	
 21852  01AB9E                     __end_of_getADCError:
 21853                           	opt stack 0
 21854                           tblptru	equ	0xFF8
 21855                           tblptrh	equ	0xFF7
 21856                           tblptrl	equ	0xFF6
 21857                           tablat	equ	0xFF5
 21858                           prodh	equ	0xFF4
 21859                           prodl	equ	0xFF3
 21860                           intcon	equ	0xFF2
 21861                           indf0	equ	0xFEF
 21862                           postinc0	equ	0xFEE
 21863                           fsr0h	equ	0xFEA
 21864                           fsr0l	equ	0xFE9
 21865                           wreg	equ	0xFE8
 21866                           indf1	equ	0xFE7
 21867                           postdec1	equ	0xFE5
 21868                           plusw1	equ	0xFE3
 21869                           fsr1h	equ	0xFE2
 21870                           fsr1l	equ	0xFE1
 21871                           indf2	equ	0xFDF
 21872                           postinc2	equ	0xFDE
 21873                           postdec2	equ	0xFDD
 21874                           plusw2	equ	0xFDB
 21875                           fsr2h	equ	0xFDA
 21876                           fsr2l	equ	0xFD9
 21877                           status	equ	0xFD8
 21878                           
 21879 ;; *************** function _clearCOMMErrors *****************
 21880 ;; Defined at:
 21881 ;;		line 90 in file "error_handling.c"
 21882 ;; Parameters:    Size  Location     Type
 21883 ;;		None
 21884 ;; Auto vars:     Size  Location     Type
 21885 ;;		None
 21886 ;; Return value:  Size  Location     Type
 21887 ;;                  1    wreg      void 
 21888 ;; Registers used:
 21889 ;;		wreg, status,2
 21890 ;; Tracked objects:
 21891 ;;		On entry : 0/0
 21892 ;;		On exit  : 0/0
 21893 ;;		Unchanged: 0/0
 21894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21899 ;;Total ram usage:        0 bytes
 21900 ;; Hardware stack levels used:    1
 21901 ;; Hardware stack levels required when called:   13
 21902 ;; This function calls:
 21903 ;;		Nothing
 21904 ;; This function is called by:
 21905 ;;		_ringBufferLUT
 21906 ;; This function uses a non-reentrant model
 21907 ;;
 21908                           
 21909                           	psect	text25
 21910  01B0FA                     __ptext25:
 21911                           	opt stack 0
 21912  01B0FA                     _clearCOMMErrors:
 21913                           	opt stack 15
 21914                           
 21915                           ;error_handling.c: 93: error_handler.I2C_COMM_error_flag = 0;
 21916                           
 21917                           ; BSR set to: 2
 21918                           ;incstack = 0
 21919  01B0FA  0E00               	movlw	0
 21920  01B0FC  0102               	movlb	2	; () banked
 21921  01B0FE  6F07               	movwf	(_error_handler+7)& (0+255),b
 21922                           
 21923                           ;error_handling.c: 94: error_handler.USB_UART_COMM_error_flag = 0;
 21924  01B100  0E00               	movlw	0
 21925  01B102  6F08               	movwf	(_error_handler+8)& (0+255),b
 21926                           
 21927                           ; BSR set to: 2
 21928                           ;error_handling.c: 97: LATFbits.LATF1 = 0;
 21929  01B104  927E               	bcf	3966,1,c	;volatile
 21930                           
 21931                           ; BSR set to: 2
 21932  01B106  0012               	return		;funcret
 21933  01B108                     __end_of_clearCOMMErrors:
 21934                           	opt stack 0
 21935                           tblptru	equ	0xFF8
 21936                           tblptrh	equ	0xFF7
 21937                           tblptrl	equ	0xFF6
 21938                           tablat	equ	0xFF5
 21939                           prodh	equ	0xFF4
 21940                           prodl	equ	0xFF3
 21941                           intcon	equ	0xFF2
 21942                           indf0	equ	0xFEF
 21943                           postinc0	equ	0xFEE
 21944                           fsr0h	equ	0xFEA
 21945                           fsr0l	equ	0xFE9
 21946                           wreg	equ	0xFE8
 21947                           indf1	equ	0xFE7
 21948                           postdec1	equ	0xFE5
 21949                           plusw1	equ	0xFE3
 21950                           fsr1h	equ	0xFE2
 21951                           fsr1l	equ	0xFE1
 21952                           indf2	equ	0xFDF
 21953                           postinc2	equ	0xFDE
 21954                           postdec2	equ	0xFDD
 21955                           plusw2	equ	0xFDB
 21956                           fsr2h	equ	0xFDA
 21957                           fsr2l	equ	0xFD9
 21958                           status	equ	0xFD8
 21959                           
 21960 ;; *************** function _clearADCErrors *****************
 21961 ;; Defined at:
 21962 ;;		line 73 in file "error_handling.c"
 21963 ;; Parameters:    Size  Location     Type
 21964 ;;		None
 21965 ;; Auto vars:     Size  Location     Type
 21966 ;;		None
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  1    wreg      void 
 21969 ;; Registers used:
 21970 ;;		wreg, status,2
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21980 ;;Total ram usage:        0 bytes
 21981 ;; Hardware stack levels used:    1
 21982 ;; Hardware stack levels required when called:   13
 21983 ;; This function calls:
 21984 ;;		Nothing
 21985 ;; This function is called by:
 21986 ;;		_ringBufferLUT
 21987 ;; This function uses a non-reentrant model
 21988 ;;
 21989                           
 21990                           	psect	text26
 21991  01AE9E                     __ptext26:
 21992                           	opt stack 0
 21993  01AE9E                     _clearADCErrors:
 21994                           	opt stack 15
 21995                           
 21996                           ;error_handling.c: 76: error_handler.ISNS_ADC_error_flag = 0;
 21997                           
 21998                           ; BSR set to: 2
 21999                           ;incstack = 0
 22000  01AE9E  0E00               	movlw	0
 22001  01AEA0  0102               	movlb	2	; () banked
 22002  01AEA2  6F00               	movwf	_error_handler& (0+255),b
 22003                           
 22004                           ;error_handling.c: 77: error_handler.POS12_ADC_error_flag = 0;
 22005  01AEA4  0E00               	movlw	0
 22006  01AEA6  6F01               	movwf	(_error_handler+1)& (0+255),b
 22007                           
 22008                           ;error_handling.c: 78: error_handler.POS3P3_ADC_error_flag = 0;
 22009  01AEA8  0E00               	movlw	0
 22010  01AEAA  6F02               	movwf	(_error_handler+2)& (0+255),b
 22011                           
 22012                           ;error_handling.c: 79: error_handler.AVSS_ADC_error_flag = 0;
 22013  01AEAC  0E00               	movlw	0
 22014  01AEAE  6F03               	movwf	(_error_handler+3)& (0+255),b
 22015                           
 22016                           ;error_handling.c: 80: error_handler.Temp_ADC_error_flag = 0;
 22017  01AEB0  0E00               	movlw	0
 22018  01AEB2  6F04               	movwf	(_error_handler+4)& (0+255),b
 22019                           
 22020                           ;error_handling.c: 81: error_handler.FVR_ADC_error_flag = 0;
 22021  01AEB4  0E00               	movlw	0
 22022  01AEB6  6F05               	movwf	(_error_handler+5)& (0+255),b
 22023                           
 22024                           ;error_handling.c: 82: error_handler.ADC_general_error_flag = 0;
 22025  01AEB8  0E00               	movlw	0
 22026  01AEBA  6F06               	movwf	(_error_handler+6)& (0+255),b
 22027                           
 22028                           ; BSR set to: 2
 22029                           ;error_handling.c: 85: LATFbits.LATF3 = 0;
 22030  01AEBC  967E               	bcf	3966,3,c	;volatile
 22031                           
 22032                           ; BSR set to: 2
 22033  01AEBE  0012               	return		;funcret
 22034  01AEC0                     __end_of_clearADCErrors:
 22035                           	opt stack 0
 22036                           tblptru	equ	0xFF8
 22037                           tblptrh	equ	0xFF7
 22038                           tblptrl	equ	0xFF6
 22039                           tablat	equ	0xFF5
 22040                           prodh	equ	0xFF4
 22041                           prodl	equ	0xFF3
 22042                           intcon	equ	0xFF2
 22043                           indf0	equ	0xFEF
 22044                           postinc0	equ	0xFEE
 22045                           fsr0h	equ	0xFEA
 22046                           fsr0l	equ	0xFE9
 22047                           wreg	equ	0xFE8
 22048                           indf1	equ	0xFE7
 22049                           postdec1	equ	0xFE5
 22050                           plusw1	equ	0xFE3
 22051                           fsr1h	equ	0xFE2
 22052                           fsr1l	equ	0xFE1
 22053                           indf2	equ	0xFDF
 22054                           postinc2	equ	0xFDE
 22055                           postdec2	equ	0xFDD
 22056                           plusw2	equ	0xFDB
 22057                           fsr2h	equ	0xFDA
 22058                           fsr2l	equ	0xFD9
 22059                           status	equ	0xFD8
 22060                           
 22061 ;; *************** function _atoi *****************
 22062 ;; Defined at:
 22063 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 22064 ;; Parameters:    Size  Location     Type
 22065 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 22066 ;;		 -> ringBufferLUT@arg_buff(3), 
 22067 ;; Auto vars:     Size  Location     Type
 22068 ;;  a               2   34[BANK1 ] int 
 22069 ;;  sign            1   33[BANK1 ] unsigned char 
 22070 ;; Return value:  Size  Location     Type
 22071 ;;                  2   29[BANK1 ] int 
 22072 ;; Registers used:
 22073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22074 ;; Tracked objects:
 22075 ;;		On entry : 0/0
 22076 ;;		On exit  : 0/0
 22077 ;;		Unchanged: 0/0
 22078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22079 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22080 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22081 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22082 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22083 ;;Total ram usage:        7 bytes
 22084 ;; Hardware stack levels used:    1
 22085 ;; Hardware stack levels required when called:   14
 22086 ;; This function calls:
 22087 ;;		___wmul
 22088 ;;		_isdigit
 22089 ;; This function is called by:
 22090 ;;		_ringBufferLUT
 22091 ;; This function uses a non-reentrant model
 22092 ;;
 22093                           
 22094                           	psect	text27
 22095  0193CC                     __ptext27:
 22096                           	opt stack 0
 22097  0193CC                     _atoi:
 22098                           	opt stack 14
 22099                           
 22100                           ; BSR set to: 2
 22101                           ;incstack = 0
 22102  0193CC  D003               	goto	l2315
 22103  0193CE  0101               	movlb	1	; () banked
 22104  0193D0  4B1D               	infsnz	atoi@s& (0+255),f,b
 22105  0193D2  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 22106  0193D4                     l2315:
 22107                           
 22108                           ; BSR set to: 1
 22109  0193D4  C11D  FFD9         	movff	atoi@s,fsr2l
 22110  0193D8  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22111  0193DC  0E20               	movlw	32
 22112  0193DE  18DE               	xorwf	postinc2,w,c
 22113  0193E0  B4D8               	btfsc	status,2,c
 22114  0193E2  D7F5               	goto	l2316
 22115  0193E4  C11D  FFD9         	movff	atoi@s,fsr2l
 22116  0193E8  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22117  0193EC  0E09               	movlw	9
 22118  0193EE  18DE               	xorwf	postinc2,w,c
 22119  0193F0  B4D8               	btfsc	status,2,c
 22120  0193F2  D7ED               	goto	l2316
 22121  0193F4  0E00               	movlw	0
 22122  0193F6  0101               	movlb	1	; () banked
 22123  0193F8  6F23               	movwf	(atoi@a+1)& (0+255),b
 22124  0193FA  0E00               	movlw	0
 22125  0193FC  6F22               	movwf	atoi@a& (0+255),b
 22126  0193FE  0E00               	movlw	0
 22127  019400  6F21               	movwf	atoi@sign& (0+255),b
 22128                           
 22129                           ; BSR set to: 1
 22130  019402  C11D  FFD9         	movff	atoi@s,fsr2l
 22131  019406  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22132  01940A  0E2D               	movlw	45
 22133  01940C  18DE               	xorwf	postinc2,w,c
 22134  01940E  A4D8               	btfss	status,2,c
 22135  019410  D002               	goto	l2318
 22136                           
 22137                           ; BSR set to: 1
 22138  019412  2B21               	incf	atoi@sign& (0+255),f,b
 22139  019414  D026               	goto	l16304
 22140  019416                     l2318:
 22141                           
 22142                           ; BSR set to: 1
 22143                           
 22144                           ; BSR set to: 1
 22145  019416  C11D  FFD9         	movff	atoi@s,fsr2l
 22146  01941A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22147  01941E  0E2B               	movlw	43
 22148  019420  18DE               	xorwf	postinc2,w,c
 22149  019422  A4D8               	btfss	status,2,c
 22150  019424  D020               	goto	l2321
 22151  019426  D01D               	goto	l16304
 22152  019428                     
 22153                           ; BSR set to: 1
 22154  019428  C122  F117         	movff	atoi@a,___wmul@multiplier
 22155  01942C  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 22156  019430  0E00               	movlw	0
 22157  019432  0101               	movlb	1	; () banked
 22158  019434  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22159  019436  0E0A               	movlw	10
 22160  019438  6F19               	movwf	___wmul@multiplicand& (0+255),b
 22161  01943A  EC90  F0D6         	call	___wmul	;wreg free
 22162  01943E  C11D  FFD9         	movff	atoi@s,fsr2l
 22163  019442  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22164  019446  50DF               	movf	indf2,w,c
 22165  019448  0101               	movlb	1	; () banked
 22166  01944A  6F1F               	movwf	??_atoi& (0+255),b
 22167  01944C  6B20               	clrf	(??_atoi+1)& (0+255),b
 22168  01944E  5117               	movf	?___wmul& (0+255),w,b
 22169  019450  271F               	addwf	??_atoi& (0+255),f,b
 22170  019452  5118               	movf	(?___wmul+1)& (0+255),w,b
 22171  019454  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 22172  019456  0ED0               	movlw	208
 22173  019458  251F               	addwf	??_atoi& (0+255),w,b
 22174  01945A  6F22               	movwf	atoi@a& (0+255),b
 22175  01945C  0EFF               	movlw	255
 22176  01945E  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 22177  019460  6F23               	movwf	(atoi@a+1)& (0+255),b
 22178  019462                     l16304:
 22179                           
 22180                           ; BSR set to: 1
 22181  019462  4B1D               	infsnz	atoi@s& (0+255),f,b
 22182  019464  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 22183  019466                     l2321:
 22184                           
 22185                           ; BSR set to: 1
 22186                           
 22187                           ; BSR set to: 1
 22188  019466  C11D  FFD9         	movff	atoi@s,fsr2l
 22189  01946A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22190  01946E  50DF               	movf	indf2,w,c
 22191  019470  EC60  F0D7         	call	_isdigit
 22192  019474  B0D8               	btfsc	status,0,c
 22193  019476  D7D8               	goto	l2322
 22194  019478  0101               	movlb	1	; () banked
 22195  01947A  5121               	movf	atoi@sign& (0+255),w,b
 22196  01947C  B4D8               	btfsc	status,2,c
 22197  01947E  D00D               	goto	l2324
 22198                           
 22199                           ; BSR set to: 1
 22200  019480  C122  F11F         	movff	atoi@a,??_atoi
 22201  019484  C123  F120         	movff	atoi@a+1,??_atoi+1
 22202  019488  1F1F               	comf	??_atoi& (0+255),f,b
 22203  01948A  1F20               	comf	(??_atoi+1)& (0+255),f,b
 22204  01948C  4B1F               	infsnz	??_atoi& (0+255),f,b
 22205  01948E  2B20               	incf	(??_atoi+1)& (0+255),f,b
 22206  019490  C11F  F11D         	movff	??_atoi,?_atoi
 22207  019494  C120  F11E         	movff	??_atoi+1,?_atoi+1
 22208  019498  0012               	return	
 22209  01949A                     l2324:
 22210                           
 22211                           ; BSR set to: 1
 22212  01949A  C122  F11D         	movff	atoi@a,?_atoi
 22213  01949E  C123  F11E         	movff	atoi@a+1,?_atoi+1
 22214                           
 22215                           ; BSR set to: 1
 22216  0194A2  0012               	return		;funcret
 22217  0194A4                     __end_of_atoi:
 22218                           	opt stack 0
 22219                           tblptru	equ	0xFF8
 22220                           tblptrh	equ	0xFF7
 22221                           tblptrl	equ	0xFF6
 22222                           tablat	equ	0xFF5
 22223                           prodh	equ	0xFF4
 22224                           prodl	equ	0xFF3
 22225                           intcon	equ	0xFF2
 22226                           indf0	equ	0xFEF
 22227                           postinc0	equ	0xFEE
 22228                           fsr0h	equ	0xFEA
 22229                           fsr0l	equ	0xFE9
 22230                           wreg	equ	0xFE8
 22231                           indf1	equ	0xFE7
 22232                           postdec1	equ	0xFE5
 22233                           plusw1	equ	0xFE3
 22234                           fsr1h	equ	0xFE2
 22235                           fsr1l	equ	0xFE1
 22236                           indf2	equ	0xFDF
 22237                           postinc2	equ	0xFDE
 22238                           postdec2	equ	0xFDD
 22239                           plusw2	equ	0xFDB
 22240                           fsr2h	equ	0xFDA
 22241                           fsr2l	equ	0xFD9
 22242                           status	equ	0xFD8
 22243                           
 22244 ;; *************** function ___fldiv *****************
 22245 ;; Defined at:
 22246 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 22247 ;; Parameters:    Size  Location     Type
 22248 ;;  b               4   61[BANK1 ] int 
 22249 ;;  a               4   65[BANK1 ] int 
 22250 ;; Auto vars:     Size  Location     Type
 22251 ;;  grs             4   80[BANK1 ] unsigned long 
 22252 ;;  rem             4   74[BANK1 ] unsigned long 
 22253 ;;  new_exp         2   78[BANK1 ] int 
 22254 ;;  aexp            1   85[BANK1 ] unsigned char 
 22255 ;;  bexp            1   84[BANK1 ] unsigned char 
 22256 ;;  sign            1   73[BANK1 ] unsigned char 
 22257 ;; Return value:  Size  Location     Type
 22258 ;;                  4   61[BANK1 ] unsigned char 
 22259 ;; Registers used:
 22260 ;;		wreg, status,2, status,0
 22261 ;; Tracked objects:
 22262 ;;		On entry : 0/0
 22263 ;;		On exit  : 0/0
 22264 ;;		Unchanged: 0/0
 22265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22266 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22267 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22268 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22269 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22270 ;;Total ram usage:       25 bytes
 22271 ;; Hardware stack levels used:    1
 22272 ;; Hardware stack levels required when called:   13
 22273 ;; This function calls:
 22274 ;;		Nothing
 22275 ;; This function is called by:
 22276 ;;		_ringBufferLUT
 22277 ;; This function uses a non-reentrant model
 22278 ;;
 22279                           
 22280                           	psect	text28
 22281  017072                     __ptext28:
 22282                           	opt stack 0
 22283  017072                     ___fldiv:
 22284                           	opt stack 15
 22285                           
 22286                           ; BSR set to: 1
 22287                           ;incstack = 0
 22288  017072  0101               	movlb	1	; () banked
 22289  017074  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 22290  017076  0B80               	andlw	128
 22291  017078  6F49               	movwf	___fldiv@sign& (0+255),b
 22292  01707A  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 22293  01707C  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 22294  01707E  6F54               	movwf	___fldiv@bexp& (0+255),b
 22295                           
 22296                           ; BSR set to: 1
 22297  017080  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 22298                           
 22299                           ; BSR set to: 1
 22300  017082  8154               	bsf	___fldiv@bexp& (0+255),0,b
 22301                           
 22302                           ; BSR set to: 1
 22303                           
 22304                           ; BSR set to: 1
 22305  017084  5154               	movf	___fldiv@bexp& (0+255),w,b
 22306  017086  B4D8               	btfsc	status,2,c
 22307  017088  D00D               	goto	l2763
 22308                           
 22309                           ; BSR set to: 1
 22310  01708A  2954               	incf	___fldiv@bexp& (0+255),w,b
 22311  01708C  A4D8               	btfss	status,2,c
 22312  01708E  D008               	goto	l2764
 22313                           
 22314                           ; BSR set to: 1
 22315  017090  0E00               	movlw	0
 22316  017092  6F3D               	movwf	___fldiv@b& (0+255),b
 22317  017094  0E00               	movlw	0
 22318  017096  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22319  017098  0E00               	movlw	0
 22320  01709A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22321  01709C  0E00               	movlw	0
 22322  01709E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22323  0170A0                     l2764:
 22324                           
 22325                           ; BSR set to: 1
 22326                           
 22327                           ; BSR set to: 1
 22328  0170A0  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 22329  0170A2  D006               	goto	L1
 22330  0170A4                     l2763:
 22331                           
 22332                           ; BSR set to: 1
 22333                           
 22334                           ; BSR set to: 1
 22335  0170A4  0E00               	movlw	0
 22336  0170A6  6F3D               	movwf	___fldiv@b& (0+255),b
 22337  0170A8  0E00               	movlw	0
 22338  0170AA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22339  0170AC  0E00               	movlw	0
 22340  0170AE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22341  0170B0                     L1:
 22342  0170B0  0E00               	movlw	0
 22343  0170B2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22344                           
 22345                           ; BSR set to: 1
 22346                           
 22347                           ; BSR set to: 1
 22348  0170B4  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22349  0170B6  0B80               	andlw	128
 22350  0170B8  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 22351                           
 22352                           ; BSR set to: 1
 22353  0170BA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22354  0170BC  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 22355  0170BE  6F55               	movwf	___fldiv@aexp& (0+255),b
 22356                           
 22357                           ; BSR set to: 1
 22358  0170C0  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 22359                           
 22360                           ; BSR set to: 1
 22361  0170C2  8155               	bsf	___fldiv@aexp& (0+255),0,b
 22362                           
 22363                           ; BSR set to: 1
 22364                           
 22365                           ; BSR set to: 1
 22366  0170C4  5155               	movf	___fldiv@aexp& (0+255),w,b
 22367  0170C6  B4D8               	btfsc	status,2,c
 22368  0170C8  D00D               	goto	l2767
 22369                           
 22370                           ; BSR set to: 1
 22371  0170CA  2955               	incf	___fldiv@aexp& (0+255),w,b
 22372  0170CC  A4D8               	btfss	status,2,c
 22373  0170CE  D008               	goto	l2768
 22374                           
 22375                           ; BSR set to: 1
 22376  0170D0  0E00               	movlw	0
 22377  0170D2  6F41               	movwf	___fldiv@a& (0+255),b
 22378  0170D4  0E00               	movlw	0
 22379  0170D6  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 22380  0170D8  0E00               	movlw	0
 22381  0170DA  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 22382  0170DC  0E00               	movlw	0
 22383  0170DE  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 22384  0170E0                     l2768:
 22385                           
 22386                           ; BSR set to: 1
 22387                           
 22388                           ; BSR set to: 1
 22389  0170E0  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 22390  0170E2  D006               	goto	L2
 22391  0170E4                     l2767:
 22392                           
 22393                           ; BSR set to: 1
 22394                           
 22395                           ; BSR set to: 1
 22396  0170E4  0E00               	movlw	0
 22397  0170E6  6F41               	movwf	___fldiv@a& (0+255),b
 22398  0170E8  0E00               	movlw	0
 22399  0170EA  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 22400  0170EC  0E00               	movlw	0
 22401  0170EE  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 22402  0170F0                     L2:
 22403  0170F0  0E00               	movlw	0
 22404  0170F2  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 22405                           
 22406                           ; BSR set to: 1
 22407                           
 22408                           ; BSR set to: 1
 22409  0170F4  5141               	movf	___fldiv@a& (0+255),w,b
 22410  0170F6  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 22411  0170F8  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 22412  0170FA  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 22413  0170FC  A4D8               	btfss	status,2,c
 22414  0170FE  D015               	goto	l2770
 22415                           
 22416                           ; BSR set to: 1
 22417  017100  0E00               	movlw	0
 22418  017102  6F3D               	movwf	___fldiv@b& (0+255),b
 22419  017104  0E00               	movlw	0
 22420  017106  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22421  017108  0E00               	movlw	0
 22422  01710A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22423  01710C  0E00               	movlw	0
 22424  01710E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22425                           
 22426                           ; BSR set to: 1
 22427  017110  0E80               	movlw	128
 22428  017112  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 22429  017114  0E7F               	movlw	127
 22430  017116  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22431                           
 22432                           ; BSR set to: 1
 22433  017118  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22434  01711C  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22435  017120  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22436  017124  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22437                           
 22438                           ; BSR set to: 1
 22439  017128  0012               	return	
 22440  01712A                     l2770:
 22441                           
 22442                           ; BSR set to: 1
 22443                           
 22444                           ; BSR set to: 1
 22445  01712A  5154               	movf	___fldiv@bexp& (0+255),w,b
 22446  01712C  A4D8               	btfss	status,2,c
 22447  01712E  D011               	goto	l2772
 22448                           
 22449                           ; BSR set to: 1
 22450  017130  0E00               	movlw	0
 22451  017132  6F3D               	movwf	___fldiv@b& (0+255),b
 22452  017134  0E00               	movlw	0
 22453  017136  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22454  017138  0E00               	movlw	0
 22455  01713A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22456  01713C  0E00               	movlw	0
 22457  01713E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22458                           
 22459                           ; BSR set to: 1
 22460  017140  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22461  017144  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22462  017148  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22463  01714C  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22464                           
 22465                           ; BSR set to: 1
 22466  017150  0012               	return	
 22467  017152                     l2772:
 22468                           
 22469                           ; BSR set to: 1
 22470                           
 22471                           ; BSR set to: 1
 22472  017152  5155               	movf	___fldiv@aexp& (0+255),w,b
 22473  017154  6F45               	movwf	??___fldiv& (0+255),b
 22474  017156  6B46               	clrf	(??___fldiv+1)& (0+255),b
 22475  017158  1F45               	comf	??___fldiv& (0+255),f,b
 22476  01715A  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 22477  01715C  4B45               	infsnz	??___fldiv& (0+255),f,b
 22478  01715E  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 22479  017160  5154               	movf	___fldiv@bexp& (0+255),w,b
 22480  017162  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22481  017164  6B48               	clrf	(??___fldiv+3)& (0+255),b
 22482  017166  5145               	movf	??___fldiv& (0+255),w,b
 22483  017168  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 22484  01716A  5146               	movf	(??___fldiv+1)& (0+255),w,b
 22485  01716C  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 22486  01716E  0E7F               	movlw	127
 22487  017170  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 22488  017172  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 22489  017174  0E00               	movlw	0
 22490  017176  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 22491  017178  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22492                           
 22493                           ; BSR set to: 1
 22494  01717A  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 22495  01717E  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 22496  017182  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 22497  017186  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 22498                           
 22499                           ; BSR set to: 1
 22500  01718A  0E00               	movlw	0
 22501  01718C  6F3D               	movwf	___fldiv@b& (0+255),b
 22502  01718E  0E00               	movlw	0
 22503  017190  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22504  017192  0E00               	movlw	0
 22505  017194  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22506  017196  0E00               	movlw	0
 22507  017198  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22508                           
 22509                           ; BSR set to: 1
 22510  01719A  0E00               	movlw	0
 22511  01719C  6F50               	movwf	___fldiv@grs& (0+255),b
 22512  01719E  0E00               	movlw	0
 22513  0171A0  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 22514  0171A2  0E00               	movlw	0
 22515  0171A4  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 22516  0171A6  0E00               	movlw	0
 22517  0171A8  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 22518                           
 22519                           ; BSR set to: 1
 22520  0171AA  0E00               	movlw	0
 22521  0171AC  6F55               	movwf	___fldiv@aexp& (0+255),b
 22522  0171AE  D028               	goto	l2773
 22523  0171B0                     
 22524                           ; BSR set to: 1
 22525                           
 22526                           ; BSR set to: 1
 22527  0171B0  5155               	movf	___fldiv@aexp& (0+255),w,b
 22528  0171B2  B4D8               	btfsc	status,2,c
 22529  0171B4  D011               	goto	l2775
 22530                           
 22531                           ; BSR set to: 1
 22532  0171B6  90D8               	bcf	status,0,c
 22533  0171B8  374A               	rlcf	___fldiv@rem& (0+255),f,b
 22534  0171BA  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22535  0171BC  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22536  0171BE  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22537  0171C0  90D8               	bcf	status,0,c
 22538  0171C2  373D               	rlcf	___fldiv@b& (0+255),f,b
 22539  0171C4  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22540  0171C6  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22541  0171C8  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22542                           
 22543                           ; BSR set to: 1
 22544  0171CA  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22545                           
 22546                           ; BSR set to: 1
 22547  0171CC  813D               	bsf	___fldiv@b& (0+255),0,b
 22548                           
 22549                           ; BSR set to: 1
 22550  0171CE  90D8               	bcf	status,0,c
 22551  0171D0  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22552  0171D2  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22553  0171D4  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22554  0171D6  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22555  0171D8                     l2775:
 22556                           
 22557                           ; BSR set to: 1
 22558                           
 22559                           ; BSR set to: 1
 22560  0171D8  5141               	movf	___fldiv@a& (0+255),w,b
 22561  0171DA  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 22562  0171DC  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22563  0171DE  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22564  0171E0  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22565  0171E2  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22566  0171E4  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22567  0171E6  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22568  0171E8  A0D8               	btfss	status,0,c
 22569  0171EA  D009               	goto	l2777
 22570                           
 22571                           ; BSR set to: 1
 22572  0171EC  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22573                           
 22574                           ; BSR set to: 1
 22575  0171EE  5141               	movf	___fldiv@a& (0+255),w,b
 22576  0171F0  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 22577  0171F2  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22578  0171F4  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22579  0171F6  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22580  0171F8  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22581  0171FA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22582  0171FC  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22583  0171FE                     l2777:
 22584                           
 22585                           ; BSR set to: 1
 22586                           
 22587                           ; BSR set to: 1
 22588  0171FE  2B55               	incf	___fldiv@aexp& (0+255),f,b
 22589  017200                     l2773:
 22590                           
 22591                           ; BSR set to: 1
 22592  017200  0E19               	movlw	25
 22593  017202  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 22594  017204  D7D5               	goto	l2774
 22595                           
 22596                           ; BSR set to: 1
 22597                           
 22598                           ; BSR set to: 1
 22599  017206  514A               	movf	___fldiv@rem& (0+255),w,b
 22600  017208  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22601  01720A  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22602  01720C  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22603  01720E  B4D8               	btfsc	status,2,c
 22604  017210  D011               	goto	l2780
 22605                           
 22606                           ; BSR set to: 1
 22607  017212  8150               	bsf	___fldiv@grs& (0+255),0,b
 22608                           
 22609                           ; BSR set to: 1
 22610  017214  D00F               	goto	l2780
 22611  017216                     
 22612                           ; BSR set to: 1
 22613                           
 22614                           ; BSR set to: 1
 22615  017216  90D8               	bcf	status,0,c
 22616  017218  373D               	rlcf	___fldiv@b& (0+255),f,b
 22617  01721A  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22618  01721C  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22619  01721E  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22620                           
 22621                           ; BSR set to: 1
 22622  017220  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22623                           
 22624                           ; BSR set to: 1
 22625  017222  813D               	bsf	___fldiv@b& (0+255),0,b
 22626                           
 22627                           ; BSR set to: 1
 22628  017224  90D8               	bcf	status,0,c
 22629  017226  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22630  017228  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22631  01722A  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22632  01722C  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22633  01722E  074E               	decf	___fldiv@new_exp& (0+255),f,b
 22634  017230  A0D8               	btfss	status,0,c
 22635  017232  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22636  017234                     l2780:
 22637                           
 22638                           ; BSR set to: 1
 22639                           
 22640                           ; BSR set to: 1
 22641  017234  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 22642  017236  D7EF               	goto	l2781
 22643                           
 22644                           ; BSR set to: 1
 22645                           
 22646                           ; BSR set to: 1
 22647  017238  0E00               	movlw	0
 22648  01723A  6F55               	movwf	___fldiv@aexp& (0+255),b
 22649                           
 22650                           ; BSR set to: 1
 22651  01723C  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22652  01723E  D016               	goto	l2787
 22653                           
 22654                           ; BSR set to: 1
 22655  017240  0EFF               	movlw	255
 22656  017242  1550               	andwf	___fldiv@grs& (0+255),w,b
 22657  017244  6F45               	movwf	??___fldiv& (0+255),b
 22658  017246  0EFF               	movlw	255
 22659  017248  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22660  01724A  6F46               	movwf	(??___fldiv+1)& (0+255),b
 22661  01724C  0EFF               	movlw	255
 22662  01724E  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22663  017250  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22664  017252  0E7F               	movlw	127
 22665  017254  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22666  017256  6F48               	movwf	(??___fldiv+3)& (0+255),b
 22667  017258  5145               	movf	??___fldiv& (0+255),w,b
 22668  01725A  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 22669  01725C  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 22670  01725E  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 22671  017260  A4D8               	btfss	status,2,c
 22672  017262  D002               	goto	u21110
 22673                           
 22674                           ; BSR set to: 1
 22675                           
 22676                           ; BSR set to: 1
 22677  017264  A13D               	btfss	___fldiv@b& (0+255),0,b
 22678  017266  D002               	goto	l2787
 22679  017268                     u21110:
 22680                           
 22681                           ; BSR set to: 1
 22682  017268  0E01               	movlw	1
 22683  01726A  6F55               	movwf	___fldiv@aexp& (0+255),b
 22684  01726C                     l2787:
 22685                           
 22686                           ; BSR set to: 1
 22687                           
 22688                           ; BSR set to: 1
 22689                           
 22690                           ; BSR set to: 1
 22691  01726C  5155               	movf	___fldiv@aexp& (0+255),w,b
 22692  01726E  B4D8               	btfsc	status,2,c
 22693  017270  D01F               	goto	l2789
 22694                           
 22695                           ; BSR set to: 1
 22696  017272  0E01               	movlw	1
 22697  017274  273D               	addwf	___fldiv@b& (0+255),f,b
 22698  017276  0E00               	movlw	0
 22699  017278  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 22700  01727A  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 22701  01727C  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 22702                           
 22703                           ; BSR set to: 1
 22704  01727E  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 22705  017280  D017               	goto	l2789
 22706                           
 22707                           ; BSR set to: 1
 22708  017282  C13D  F145         	movff	___fldiv@b,??___fldiv
 22709  017286  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 22710  01728A  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 22711  01728E  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 22712  017292  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 22713  017294  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 22714  017296  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 22715  017298  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 22716  01729A  3345               	rrcf	??___fldiv& (0+255),f,b
 22717  01729C  C145  F13D         	movff	??___fldiv,___fldiv@b
 22718  0172A0  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 22719  0172A4  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 22720  0172A8  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 22721                           
 22722                           ; BSR set to: 1
 22723  0172AC  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 22724  0172AE  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 22725  0172B0                     l2789:
 22726                           
 22727                           ; BSR set to: 1
 22728                           
 22729                           ; BSR set to: 1
 22730                           
 22731                           ; BSR set to: 1
 22732  0172B0  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22733  0172B2  D010               	goto	l2790
 22734  0172B4  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22735  0172B6  E103               	bnz	u21140
 22736  0172B8  294E               	incf	___fldiv@new_exp& (0+255),w,b
 22737  0172BA  A0D8               	btfss	status,0,c
 22738  0172BC  D00B               	goto	l2790
 22739  0172BE                     u21140:
 22740                           
 22741                           ; BSR set to: 1
 22742  0172BE  0E00               	movlw	0
 22743  0172C0  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22744  0172C2  694E               	setf	___fldiv@new_exp& (0+255),b
 22745  0172C4  0E00               	movlw	0
 22746  0172C6  6F3D               	movwf	___fldiv@b& (0+255),b
 22747  0172C8  0E00               	movlw	0
 22748  0172CA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22749  0172CC  0E00               	movlw	0
 22750  0172CE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22751  0172D0  0E00               	movlw	0
 22752  0172D2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22753  0172D4                     l2790:
 22754                           
 22755                           ; BSR set to: 1
 22756                           
 22757                           ; BSR set to: 1
 22758  0172D4  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22759  0172D6  D005               	goto	u21150
 22760  0172D8  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22761  0172DA  E111               	bnz	l16458
 22762  0172DC  054E               	decf	___fldiv@new_exp& (0+255),w,b
 22763  0172DE  B0D8               	btfsc	status,0,c
 22764  0172E0  D00E               	goto	l2791
 22765  0172E2                     u21150:
 22766                           
 22767                           ; BSR set to: 1
 22768  0172E2  0E00               	movlw	0
 22769  0172E4  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22770  0172E6  0E00               	movlw	0
 22771  0172E8  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 22772  0172EA  0E00               	movlw	0
 22773  0172EC  6F3D               	movwf	___fldiv@b& (0+255),b
 22774  0172EE  0E00               	movlw	0
 22775  0172F0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22776  0172F2  0E00               	movlw	0
 22777  0172F4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22778  0172F6  0E00               	movlw	0
 22779  0172F8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22780  0172FA  0E00               	movlw	0
 22781  0172FC  6F49               	movwf	___fldiv@sign& (0+255),b
 22782  0172FE                     l2791:
 22783  0172FE                     l16458:
 22784                           
 22785                           ; BSR set to: 1
 22786  0172FE  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 22787                           
 22788                           ; BSR set to: 1
 22789  017302  A154               	btfss	___fldiv@bexp& (0+255),0,b
 22790  017304  D002               	goto	l2792
 22791                           
 22792                           ; BSR set to: 1
 22793  017306  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 22794  017308  D001               	goto	l2793
 22795  01730A                     l2792:
 22796                           
 22797                           ; BSR set to: 1
 22798                           
 22799                           ; BSR set to: 1
 22800  01730A  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 22801  01730C                     l2793:
 22802                           
 22803                           ; BSR set to: 1
 22804                           
 22805                           ; BSR set to: 1
 22806  01730C  90D8               	bcf	status,0,c
 22807  01730E  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 22808  017310  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22809                           
 22810                           ; BSR set to: 1
 22811  017312  5149               	movf	___fldiv@sign& (0+255),w,b
 22812  017314  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22813                           
 22814                           ; BSR set to: 1
 22815  017316  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22816  01731A  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22817  01731E  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22818  017322  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22819  017326  0012               	return	
 22820  017328                     __end_of___fldiv:
 22821                           	opt stack 0
 22822                           tblptru	equ	0xFF8
 22823                           tblptrh	equ	0xFF7
 22824                           tblptrl	equ	0xFF6
 22825                           tablat	equ	0xFF5
 22826                           prodh	equ	0xFF4
 22827                           prodl	equ	0xFF3
 22828                           intcon	equ	0xFF2
 22829                           indf0	equ	0xFEF
 22830                           postinc0	equ	0xFEE
 22831                           fsr0h	equ	0xFEA
 22832                           fsr0l	equ	0xFE9
 22833                           wreg	equ	0xFE8
 22834                           indf1	equ	0xFE7
 22835                           postdec1	equ	0xFE5
 22836                           plusw1	equ	0xFE3
 22837                           fsr1h	equ	0xFE2
 22838                           fsr1l	equ	0xFE1
 22839                           indf2	equ	0xFDF
 22840                           postinc2	equ	0xFDE
 22841                           postdec2	equ	0xFDD
 22842                           plusw2	equ	0xFDB
 22843                           fsr2h	equ	0xFDA
 22844                           fsr2l	equ	0xFD9
 22845                           status	equ	0xFD8
 22846                           
 22847 ;; *************** function _TMR5_StopTimer *****************
 22848 ;; Defined at:
 22849 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 22850 ;; Parameters:    Size  Location     Type
 22851 ;;		None
 22852 ;; Auto vars:     Size  Location     Type
 22853 ;;		None
 22854 ;; Return value:  Size  Location     Type
 22855 ;;                  1    wreg      void 
 22856 ;; Registers used:
 22857 ;;		None
 22858 ;; Tracked objects:
 22859 ;;		On entry : 0/0
 22860 ;;		On exit  : 0/0
 22861 ;;		Unchanged: 0/0
 22862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22867 ;;Total ram usage:        0 bytes
 22868 ;; Hardware stack levels used:    1
 22869 ;; Hardware stack levels required when called:   13
 22870 ;; This function calls:
 22871 ;;		Nothing
 22872 ;; This function is called by:
 22873 ;;		_main
 22874 ;;		_ringBufferLUT
 22875 ;; This function uses a non-reentrant model
 22876 ;;
 22877                           
 22878                           	psect	text29
 22879  01B1DE                     __ptext29:
 22880                           	opt stack 0
 22881  01B1DE                     _TMR5_StopTimer:
 22882                           	opt stack 15
 22883                           
 22884                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 22885                           
 22886                           ; BSR set to: 1
 22887                           ;incstack = 0
 22888  01B1DE  90C3               	bcf	4035,0,c	;volatile
 22889  01B1E0  0012               	return		;funcret
 22890  01B1E2                     __end_of_TMR5_StopTimer:
 22891                           	opt stack 0
 22892                           tblptru	equ	0xFF8
 22893                           tblptrh	equ	0xFF7
 22894                           tblptrl	equ	0xFF6
 22895                           tablat	equ	0xFF5
 22896                           prodh	equ	0xFF4
 22897                           prodl	equ	0xFF3
 22898                           intcon	equ	0xFF2
 22899                           indf0	equ	0xFEF
 22900                           postinc0	equ	0xFEE
 22901                           fsr0h	equ	0xFEA
 22902                           fsr0l	equ	0xFE9
 22903                           wreg	equ	0xFE8
 22904                           indf1	equ	0xFE7
 22905                           postdec1	equ	0xFE5
 22906                           plusw1	equ	0xFE3
 22907                           fsr1h	equ	0xFE2
 22908                           fsr1l	equ	0xFE1
 22909                           indf2	equ	0xFDF
 22910                           postinc2	equ	0xFDE
 22911                           postdec2	equ	0xFDD
 22912                           plusw2	equ	0xFDB
 22913                           fsr2h	equ	0xFDA
 22914                           fsr2l	equ	0xFD9
 22915                           status	equ	0xFD8
 22916                           
 22917 ;; *************** function _EUSART2_Read *****************
 22918 ;; Defined at:
 22919 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 22920 ;; Parameters:    Size  Location     Type
 22921 ;;		None
 22922 ;; Auto vars:     Size  Location     Type
 22923 ;;  readValue       1   23[BANK1 ] unsigned char 
 22924 ;; Return value:  Size  Location     Type
 22925 ;;                  1    wreg      unsigned char 
 22926 ;; Registers used:
 22927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22928 ;; Tracked objects:
 22929 ;;		On entry : 0/0
 22930 ;;		On exit  : 0/0
 22931 ;;		Unchanged: 0/0
 22932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22934 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22936 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22937 ;;Total ram usage:        1 bytes
 22938 ;; Hardware stack levels used:    1
 22939 ;; Hardware stack levels required when called:   13
 22940 ;; This function calls:
 22941 ;;		Nothing
 22942 ;; This function is called by:
 22943 ;;		_terminal_ringBufferPull
 22944 ;;		_getch
 22945 ;; This function uses a non-reentrant model
 22946 ;;
 22947                           
 22948                           	psect	text30
 22949  01A566                     __ptext30:
 22950                           	opt stack 0
 22951  01A566                     _EUSART2_Read:
 22952                           	opt stack 16
 22953                           
 22954                           ;eusart2.c: 136: uint8_t readValue = 0;
 22955                           
 22956                           ;incstack = 0
 22957  01A566  0E00               	movlw	0
 22958  01A568  0101               	movlb	1	; () banked
 22959  01A56A  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 22960                           
 22961                           ;eusart2.c: 138: while(0 == eusart2RxCount)
 22962  01A56C  D004               	goto	l423
 22963  01A56E                     l424:
 22964                           
 22965                           ; BSR set to: 2
 22966  01A56E  0004               	clrwdt		;# 
 22967                           
 22968                           ;eusart2.c: 141: error_handler.USB_UART_COMM_error_flag = 1;
 22969  01A570  0E01               	movlw	1
 22970  01A572  0102               	movlb	2	; () banked
 22971  01A574  6F08               	movwf	(_error_handler+8)& (0+255),b
 22972  01A576                     l423:
 22973  01A576  0102               	movlb	2	; () banked
 22974  01A578  5172               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 22975  01A57A  B4D8               	btfsc	status,2,c
 22976  01A57C  D7F8               	goto	l424
 22977                           
 22978                           ; BSR set to: 2
 22979                           ;eusart2.c: 142: }
 22980                           ;eusart2.c: 144: readValue = eusart2RxBuffer[eusart2RxTail++];
 22981                           
 22982                           ; BSR set to: 2
 22983  01A57E  0101               	movlb	1	; () banked
 22984  01A580  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 22985  01A582  0D01               	mullw	1
 22986  01A584  0E80               	movlw	low _eusart2RxBuffer
 22987  01A586  24F3               	addwf	prodl,w,c
 22988  01A588  6ED9               	movwf	fsr2l,c
 22989  01A58A  0E03               	movlw	high _eusart2RxBuffer
 22990  01A58C  20F4               	addwfc	prodh,w,c
 22991  01A58E  6EDA               	movwf	fsr2h,c
 22992  01A590  50DF               	movf	indf2,w,c
 22993  01A592  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 22994                           
 22995                           ; BSR set to: 1
 22996  01A594  2BDE               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 22997                           
 22998                           ; BSR set to: 1
 22999                           ;eusart2.c: 145: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 23000  01A596  0E3F               	movlw	63
 23001  01A598  65DE               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 23002  01A59A  D002               	goto	l426
 23003                           
 23004                           ; BSR set to: 1
 23005                           ;eusart2.c: 146: {
 23006                           ;eusart2.c: 147: eusart2RxTail = 0;
 23007  01A59C  0E00               	movlw	0
 23008  01A59E  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 23009  01A5A0                     l426:
 23010                           
 23011                           ; BSR set to: 1
 23012                           ;eusart2.c: 148: }
 23013                           ;eusart2.c: 149: PIE3bits.RC2IE = 0;
 23014                           
 23015                           ; BSR set to: 1
 23016  01A5A0  010E               	movlb	14	; () banked
 23017  01A5A2  9F2C               	bcf	44,7,b	;volatile
 23018                           
 23019                           ; BSR set to: 14
 23020                           ;eusart2.c: 150: eusart2RxCount--;
 23021  01A5A4  0102               	movlb	2	; () banked
 23022  01A5A6  0772               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 23023                           
 23024                           ; BSR set to: 2
 23025                           ;eusart2.c: 151: PIE3bits.RC2IE = 1;
 23026  01A5A8  010E               	movlb	14	; () banked
 23027  01A5AA  8F2C               	bsf	44,7,b	;volatile
 23028                           
 23029                           ; BSR set to: 14
 23030                           ;eusart2.c: 152: return readValue;
 23031  01A5AC  0101               	movlb	1	; () banked
 23032  01A5AE  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 23033  01A5B0  0012               	return	
 23034  01A5B2                     __end_of_EUSART2_Read:
 23035                           	opt stack 0
 23036                           tblptru	equ	0xFF8
 23037                           tblptrh	equ	0xFF7
 23038                           tblptrl	equ	0xFF6
 23039                           tablat	equ	0xFF5
 23040                           prodh	equ	0xFF4
 23041                           prodl	equ	0xFF3
 23042                           intcon	equ	0xFF2
 23043                           indf0	equ	0xFEF
 23044                           postinc0	equ	0xFEE
 23045                           fsr0h	equ	0xFEA
 23046                           fsr0l	equ	0xFE9
 23047                           wreg	equ	0xFE8
 23048                           indf1	equ	0xFE7
 23049                           postdec1	equ	0xFE5
 23050                           plusw1	equ	0xFE3
 23051                           fsr1h	equ	0xFE2
 23052                           fsr1l	equ	0xFE1
 23053                           indf2	equ	0xFDF
 23054                           postinc2	equ	0xFDE
 23055                           postdec2	equ	0xFDD
 23056                           plusw2	equ	0xFDB
 23057                           fsr2h	equ	0xFDA
 23058                           fsr2l	equ	0xFD9
 23059                           status	equ	0xFD8
 23060                           
 23061 ;; *************** function _terminal_clearTerminal *****************
 23062 ;; Defined at:
 23063 ;;		line 80 in file "ring_buffer_interface.c"
 23064 ;; Parameters:    Size  Location     Type
 23065 ;;		None
 23066 ;; Auto vars:     Size  Location     Type
 23067 ;;		None
 23068 ;; Return value:  Size  Location     Type
 23069 ;;                  1    wreg      void 
 23070 ;; Registers used:
 23071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23072 ;; Tracked objects:
 23073 ;;		On entry : 0/0
 23074 ;;		On exit  : 0/0
 23075 ;;		Unchanged: 0/0
 23076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23081 ;;Total ram usage:        0 bytes
 23082 ;; Hardware stack levels used:    1
 23083 ;; Hardware stack levels required when called:   17
 23084 ;; This function calls:
 23085 ;;		_printf
 23086 ;; This function is called by:
 23087 ;;		_main
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text31
 23092  01B0DA                     __ptext31:
 23093                           	opt stack 0
 23094  01B0DA                     _terminal_clearTerminal:
 23095                           	opt stack 13
 23096                           
 23097                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 23098                           
 23099                           ; BSR set to: 1
 23100                           ;incstack = 0
 23101  01B0DA  0EB3               	movlw	low STR_6
 23102  01B0DC  0101               	movlb	1	; () banked
 23103  01B0DE  6FAC               	movwf	printf@f& (0+255),b
 23104  01B0E0  0EFF               	movlw	high STR_6
 23105  01B0E2  6FAD               	movwf	(printf@f+1)& (0+255),b
 23106  01B0E4  EC95  F0D4         	call	_printf	;wreg free
 23107  01B0E8  0012               	return		;funcret
 23108  01B0EA                     __end_of_terminal_clearTerminal:
 23109                           	opt stack 0
 23110                           tblptru	equ	0xFF8
 23111                           tblptrh	equ	0xFF7
 23112                           tblptrl	equ	0xFF6
 23113                           tablat	equ	0xFF5
 23114                           prodh	equ	0xFF4
 23115                           prodl	equ	0xFF3
 23116                           intcon	equ	0xFF2
 23117                           indf0	equ	0xFEF
 23118                           postinc0	equ	0xFEE
 23119                           fsr0h	equ	0xFEA
 23120                           fsr0l	equ	0xFE9
 23121                           wreg	equ	0xFE8
 23122                           indf1	equ	0xFE7
 23123                           postdec1	equ	0xFE5
 23124                           plusw1	equ	0xFE3
 23125                           fsr1h	equ	0xFE2
 23126                           fsr1l	equ	0xFE1
 23127                           indf2	equ	0xFDF
 23128                           postinc2	equ	0xFDE
 23129                           postdec2	equ	0xFDD
 23130                           plusw2	equ	0xFDB
 23131                           fsr2h	equ	0xFDA
 23132                           fsr2l	equ	0xFD9
 23133                           status	equ	0xFD8
 23134                           
 23135 ;; *************** function _printf *****************
 23136 ;; Defined at:
 23137 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 23138 ;; Parameters:    Size  Location     Type
 23139 ;;  f               2  172[BANK1 ] PTR const unsigned char 
 23140 ;;		 -> STR_175(13), STR_174(31), STR_173(26), STR_172(28), 
 23141 ;;		 -> STR_171(426), STR_169(30), STR_168(46), STR_167(39), 
 23142 ;;		 -> STR_166(62), STR_165(55), STR_164(470), STR_162(3086), 
 23143 ;;		 -> STR_160(492), STR_158(748), STR_156(720), STR_154(974), 
 23144 ;;		 -> STR_152(54), STR_150(54), STR_148(45), STR_146(51), 
 23145 ;;		 -> STR_144(52), STR_142(46), STR_140(51), STR_138(53), 
 23146 ;;		 -> STR_136(58), STR_134(71), STR_133(63), STR_132(37), 
 23147 ;;		 -> STR_131(46), STR_130(102), STR_129(86), STR_127(25), 
 23148 ;;		 -> STR_125(42), STR_124(53), STR_123(31), STR_121(29), 
 23149 ;;		 -> STR_120(28), STR_118(42), STR_116(41), STR_114(34), 
 23150 ;;		 -> STR_112(53), STR_111(52), STR_110(105), STR_109(105), 
 23151 ;;		 -> STR_107(59), STR_105(73), STR_103(56), STR_101(34), 
 23152 ;;		 -> STR_99(34), STR_97(32), STR_95(37), STR_93(58), 
 23153 ;;		 -> STR_91(36), STR_89(36), STR_87(37), STR_85(34), 
 23154 ;;		 -> STR_83(38), STR_82(60), STR_81(31), STR_80(23), 
 23155 ;;		 -> STR_79(65), STR_77(23), STR_75(27), STR_74(48), 
 23156 ;;		 -> STR_73(15), STR_72(13), STR_71(12), STR_70(11), 
 23157 ;;		 -> STR_69(10), STR_68(11), STR_67(24), STR_66(46), 
 23158 ;;		 -> STR_65(25), STR_63(54), STR_62(64), STR_60(59), 
 23159 ;;		 -> STR_58(85), STR_56(47), STR_55(17), STR_52(52), 
 23160 ;;		 -> STR_50(4), STR_49(5), STR_47(4), STR_46(5), 
 23161 ;;		 -> STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), STR_13(4), 
 23162 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(3), 
 23163 ;;		 -> STR_8(372), STR_7(4), STR_6(5), STR_1(4), 
 23164 ;; Auto vars:     Size  Location     Type
 23165 ;;  pb              5  184[BANK1 ] struct __prbuf
 23166 ;;  ap              2  182[BANK1 ] PTR void [1]
 23167 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 23168 ;; Return value:  Size  Location     Type
 23169 ;;                  2  172[BANK1 ] int 
 23170 ;; Registers used:
 23171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23172 ;; Tracked objects:
 23173 ;;		On entry : 0/0
 23174 ;;		On exit  : 0/0
 23175 ;;		Unchanged: 0/0
 23176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23177 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23178 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23180 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23181 ;;Total ram usage:       17 bytes
 23182 ;; Hardware stack levels used:    1
 23183 ;; Hardware stack levels required when called:   16
 23184 ;; This function calls:
 23185 ;;		__doprnt
 23186 ;; This function is called by:
 23187 ;;		_terminal_clearTerminal
 23188 ;;		_terminal_setCursorHome
 23189 ;;		_terminal_textAttributes
 23190 ;;		_terminal_printNewline
 23191 ;;		_ringBufferLUT
 23192 ;;		_terminal_printResetMessage
 23193 ;;		_terminal_clearLine
 23194 ;;		_terminal_saveCursor
 23195 ;;		_terminal_returnCursor
 23196 ;; This function uses a non-reentrant model
 23197 ;;
 23198                           
 23199                           	psect	text32
 23200  01A92A                     __ptext32:
 23201                           	opt stack 0
 23202  01A92A                     _printf:
 23203                           	opt stack 12
 23204                           
 23205                           ;incstack = 0
 23206  01A92A  0E00               	movlw	0
 23207  01A92C  0101               	movlb	1	; () banked
 23208  01A92E  6FB8               	movwf	printf@pb& (0+255),b
 23209  01A930  0E00               	movlw	0
 23210  01A932  6FB9               	movwf	(printf@pb+1)& (0+255),b
 23211  01A934  0E5A               	movlw	low _putch
 23212  01A936  6FBA               	movwf	(printf@pb+2)& (0+255),b
 23213  01A938  0EB0               	movlw	high _putch
 23214  01A93A  6FBB               	movwf	(printf@pb+3)& (0+255),b
 23215  01A93C  0E01               	movlw	low (_putch shr (0+16))
 23216  01A93E  6FBC               	movwf	(printf@pb+4)& (0+255),b
 23217  01A940  0EAE               	movlw	low (?_printf+2)
 23218  01A942  6FB6               	movwf	printf@ap& (0+255),b
 23219  01A944  0E01               	movlw	high (?_printf+2)
 23220  01A946  6FB7               	movwf	(printf@ap+1)& (0+255),b
 23221                           
 23222                           ; BSR set to: 1
 23223                           ;	Return value of _printf is never used
 23224  01A948  0EB8               	movlw	low printf@pb
 23225  01A94A  6F82               	movwf	__doprnt@pb& (0+255),b
 23226  01A94C  0E01               	movlw	high printf@pb
 23227  01A94E  6F83               	movwf	(__doprnt@pb+1)& (0+255),b
 23228  01A950  C1AC  F184         	movff	printf@f,__doprnt@f
 23229  01A954  C1AD  F185         	movff	printf@f+1,__doprnt@f+1
 23230  01A958  0EB6               	movlw	low printf@ap
 23231  01A95A  6F86               	movwf	__doprnt@ap& (0+255),b
 23232  01A95C  0E01               	movlw	high printf@ap
 23233  01A95E  6F87               	movwf	(__doprnt@ap+1)& (0+255),b
 23234  01A960  EC33  F08B         	call	__doprnt	;wreg free
 23235  01A964  0012               	return	
 23236  01A966                     __end_of_printf:
 23237                           	opt stack 0
 23238                           tblptru	equ	0xFF8
 23239                           tblptrh	equ	0xFF7
 23240                           tblptrl	equ	0xFF6
 23241                           tablat	equ	0xFF5
 23242                           prodh	equ	0xFF4
 23243                           prodl	equ	0xFF3
 23244                           intcon	equ	0xFF2
 23245                           indf0	equ	0xFEF
 23246                           postinc0	equ	0xFEE
 23247                           fsr0h	equ	0xFEA
 23248                           fsr0l	equ	0xFE9
 23249                           wreg	equ	0xFE8
 23250                           indf1	equ	0xFE7
 23251                           postdec1	equ	0xFE5
 23252                           plusw1	equ	0xFE3
 23253                           fsr1h	equ	0xFE2
 23254                           fsr1l	equ	0xFE1
 23255                           indf2	equ	0xFDF
 23256                           postinc2	equ	0xFDE
 23257                           postdec2	equ	0xFDD
 23258                           plusw2	equ	0xFDB
 23259                           fsr2h	equ	0xFDA
 23260                           fsr2l	equ	0xFD9
 23261                           status	equ	0xFD8
 23262                           
 23263 ;; *************** function __doprnt *****************
 23264 ;; Defined at:
 23265 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23266 ;; Parameters:    Size  Location     Type
 23267 ;;  pb              2  130[BANK1 ] PTR struct __prbuf
 23268 ;;		 -> sprintf@pb(5), printf@pb(5), 
 23269 ;;  f               2  132[BANK1 ] PTR const unsigned char 
 23270 ;;		 -> STR_193(11), STR_175(13), STR_174(31), STR_173(26), 
 23271 ;;		 -> STR_172(28), STR_171(426), STR_169(30), STR_168(46), 
 23272 ;;		 -> STR_167(39), STR_166(62), STR_165(55), STR_164(470), 
 23273 ;;		 -> STR_162(3086), STR_160(492), STR_158(748), STR_156(720), 
 23274 ;;		 -> STR_154(974), STR_152(54), STR_150(54), STR_148(45), 
 23275 ;;		 -> STR_146(51), STR_144(52), STR_142(46), STR_140(51), 
 23276 ;;		 -> STR_138(53), STR_136(58), STR_134(71), STR_133(63), 
 23277 ;;		 -> STR_132(37), STR_131(46), STR_130(102), STR_129(86), 
 23278 ;;		 -> STR_127(25), STR_125(42), STR_124(53), STR_123(31), 
 23279 ;;		 -> STR_121(29), STR_120(28), STR_118(42), STR_116(41), 
 23280 ;;		 -> STR_114(34), STR_112(53), STR_111(52), STR_110(105), 
 23281 ;;		 -> STR_109(105), STR_107(59), STR_105(73), STR_103(56), 
 23282 ;;		 -> STR_101(34), STR_99(34), STR_97(32), STR_95(37), 
 23283 ;;		 -> STR_93(58), STR_91(36), STR_89(36), STR_87(37), 
 23284 ;;		 -> STR_85(34), STR_83(38), STR_82(60), STR_81(31), 
 23285 ;;		 -> STR_80(23), STR_79(65), STR_77(23), STR_75(27), 
 23286 ;;		 -> STR_74(48), STR_73(15), STR_72(13), STR_71(12), 
 23287 ;;		 -> STR_70(11), STR_69(10), STR_68(11), STR_67(24), 
 23288 ;;		 -> STR_66(46), STR_65(25), STR_63(54), STR_62(64), 
 23289 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 23290 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 23291 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 23292 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 23293 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 23294 ;;		 -> STR_1(4), 
 23295 ;;  ap              2  134[BANK1 ] PTR PTR void 
 23296 ;;		 -> sprintf@ap(2), printf@ap(2), 
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;  idx             1  146[BANK1 ] unsigned char 
 23299 ;;  val             4  161[BANK1 ] unsigned long 
 23300 ;;  fval            4  157[BANK1 ] unsigned long 
 23301 ;;  tmpval          4  153[BANK1 ] struct .
 23302 ;;  prec            2  169[BANK1 ] int 
 23303 ;;  flag            2  167[BANK1 ] unsigned short 
 23304 ;;  width           2  165[BANK1 ] int 
 23305 ;;  exp             2  151[BANK1 ] int 
 23306 ;;  len             2  149[BANK1 ] unsigned int 
 23307 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 23308 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_191(7), 
 23309 ;;		 -> _doprnt@c(1), STR_188(16), STR_187(22), STR_186(21), 
 23310 ;;		 -> STR_185(27), STR_184(41), STR_183(32), STR_182(19), 
 23311 ;;		 -> STR_181(16), STR_180(15), STR_179(16), STR_178(10), 
 23312 ;;		 -> STR_177(13), STR_176(12), NULL(0), TRIAC_Firing_Angle(4), 
 23313 ;;  c               1  171[BANK1 ] char 
 23314 ;;  d               1    0        unsigned char 
 23315 ;; Return value:  Size  Location     Type
 23316 ;;                  2  130[BANK1 ] int 
 23317 ;; Registers used:
 23318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23319 ;; Tracked objects:
 23320 ;;		On entry : 0/0
 23321 ;;		On exit  : 0/0
 23322 ;;		Unchanged: 0/0
 23323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23324 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23325 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23326 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23327 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23328 ;;Total ram usage:       42 bytes
 23329 ;; Hardware stack levels used:    1
 23330 ;; Hardware stack levels required when called:   15
 23331 ;; This function calls:
 23332 ;;		Absolute function
 23333 ;;		___awdiv
 23334 ;;		___fladd
 23335 ;;		___flge
 23336 ;;		___flmul
 23337 ;;		___flneg
 23338 ;;		___flsub
 23339 ;;		___fltol
 23340 ;;		___lldiv
 23341 ;;		___llmod
 23342 ;;		___wmul
 23343 ;;		___xxtofl
 23344 ;;		__div_to_l_
 23345 ;;		__tdiv_to_l_
 23346 ;;		_fround
 23347 ;;		_isdigit
 23348 ;;		_putch
 23349 ;;		_scale
 23350 ;; This function is called by:
 23351 ;;		_printf
 23352 ;; This function uses a non-reentrant model
 23353 ;;
 23354                           
 23355                           	psect	text33
 23356  011666                     __ptext33:
 23357                           	opt stack 0
 23358  011666                     __doprnt:
 23359                           	opt stack 12
 23360                           
 23361                           ;doprnt.c: 499: signed char c;
 23362                           ;doprnt.c: 501: int width;
 23363                           ;doprnt.c: 504: int prec;
 23364                           ;doprnt.c: 508: unsigned short flag;
 23365                           ;doprnt.c: 515: char d;
 23366                           ;doprnt.c: 516: double fval;
 23367                           ;doprnt.c: 517: int exp;
 23368                           ;doprnt.c: 523: union {
 23369                           ;doprnt.c: 524: unsigned long vd;
 23370                           ;doprnt.c: 525: double integ;
 23371                           ;doprnt.c: 526: } tmpval;
 23372                           ;doprnt.c: 528: unsigned long val;
 23373                           ;doprnt.c: 529: unsigned len;
 23374                           ;doprnt.c: 530: const char * cp;
 23375                           ;doprnt.c: 536: while(c = *f++) {
 23376                           
 23377                           ;incstack = 0
 23378  011666  EF97  F095         	goto	u32130
 23379  01166A                     
 23380                           ;doprnt.c: 538: if(c != '%')
 23381  01166A  0E25               	movlw	37
 23382  01166C  0101               	movlb	1	; () banked
 23383  01166E  19AB               	xorwf	__doprnt@c& (0+255),w,b
 23384  011670  B4D8               	btfsc	status,2,c
 23385  011672  D036               	goto	l1936
 23386                           
 23387                           ; BSR set to: 1
 23388                           ;doprnt.c: 540: {
 23389                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 23390  011674  EE20 F002          	lfsr	2,2
 23391  011678  5182               	movf	__doprnt@pb& (0+255),w,b
 23392  01167A  26D9               	addwf	fsr2l,f,c
 23393  01167C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23394  01167E  22DA               	addwfc	fsr2h,f,c
 23395  011680  50DE               	movf	postinc2,w,c
 23396  011682  10DE               	iorwf	postinc2,w,c
 23397  011684  10DE               	iorwf	postinc2,w,c
 23398  011686  B4D8               	btfsc	status,2,c
 23399  011688  D014               	goto	l1937
 23400                           
 23401                           ; BSR set to: 1
 23402  01168A  EE20 F002          	lfsr	2,2
 23403  01168E  5182               	movf	__doprnt@pb& (0+255),w,b
 23404  011690  26D9               	addwf	fsr2l,f,c
 23405  011692  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23406  011694  22DA               	addwfc	fsr2h,f,c
 23407  011696  D802               	call	u31038
 23408  011698  EF97  F095         	goto	u32130
 23409  01169C                     u31038:
 23410  01169C  0005               	push	
 23411  01169E  6EFA               	movwf	pclath,c
 23412  0116A0  50DE               	movf	postinc2,w,c
 23413  0116A2  6EFD               	movwf	tosl,c
 23414  0116A4  50DE               	movf	postinc2,w,c
 23415  0116A6  6EFE               	movwf	tosh,c
 23416  0116A8  50DE               	movf	postinc2,w,c
 23417  0116AA  6EFF               	movwf	tosu,c
 23418  0116AC  50FA               	movf	pclath,w,c
 23419  0116AE  51AB               	movf	__doprnt@c& (0+255),w,b
 23420  0116B0  0012               	return		;indir
 23421  0116B2                     l1937:
 23422  0116B2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23423  0116B6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23424  0116BA  CFDE F188          	movff	postinc2,??__doprnt
 23425  0116BE  CFDD F189          	movff	postdec2,??__doprnt+1
 23426  0116C2  C188  FFD9         	movff	??__doprnt,fsr2l
 23427  0116C6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23428  0116CA  C1AB  FFDF         	movff	__doprnt@c,indf2
 23429  0116CE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23430  0116D2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23431  0116D6  2ADE               	incf	postinc2,f,c
 23432  0116D8  0E00               	movlw	0
 23433  0116DA  22DD               	addwfc	postdec2,f,c
 23434                           
 23435                           ;doprnt.c: 542: continue;
 23436  0116DC  EF97  F095         	goto	u32130
 23437  0116E0                     l1936:
 23438                           
 23439                           ;doprnt.c: 543: }
 23440                           ;doprnt.c: 546: width = 0;
 23441  0116E0  0E00               	movlw	0
 23442  0116E2  0101               	movlb	1	; () banked
 23443  0116E4  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23444  0116E6  0E00               	movlw	0
 23445  0116E8  6FA5               	movwf	__doprnt@width& (0+255),b
 23446                           
 23447                           ;doprnt.c: 548: flag = 0;
 23448  0116EA  0E00               	movlw	0
 23449  0116EC  6FA8               	movwf	(__doprnt@flag+1)& (0+255),b
 23450  0116EE  0E00               	movlw	0
 23451  0116F0  6FA7               	movwf	__doprnt@flag& (0+255),b
 23452                           
 23453                           ; BSR set to: 1
 23454                           ;doprnt.c: 551: switch(*f) {
 23455                           
 23456                           ;doprnt.c: 550: for(;;) {
 23457  0116F2  D004               	goto	l1940
 23458  0116F4                     
 23459                           ;doprnt.c: 580: flag |= 0x04;
 23460                           
 23461                           ; BSR set to: 1
 23462  0116F4  0101               	movlb	1	; () banked
 23463  0116F6  85A7               	bsf	__doprnt@flag& (0+255),2,b
 23464                           
 23465                           ;doprnt.c: 581: f++;
 23466  0116F8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23467  0116FA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23468  0116FC                     l1940:
 23469                           
 23470                           ; BSR set to: 1
 23471  0116FC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23472  011700  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23473  011704  0E00               	movlw	low (__mediumconst shr (0+16))
 23474  011706  6EF8               	movwf	tblptru,c
 23475  011708  0E0D               	movlw	(high __ramtop+-1)
 23476  01170A  64F7               	cpfsgt	tblptrh,c
 23477  01170C  D003               	bra	u31047
 23478  01170E  0008               	tblrd		*
 23479  011710  50F5               	movf	tablat,w,c
 23480  011712  D005               	bra	u31040
 23481  011714                     u31047:
 23482  011714  CFF6 FFE9          	movff	tblptrl,fsr0l
 23483  011718  CFF7 FFEA          	movff	tblptrh,fsr0h
 23484  01171C  50EF               	movf	indf0,w,c
 23485  01171E                     u31040:
 23486                           
 23487                           ; Switch size 1, requested type "space"
 23488                           ; Number of cases is 1, Range of values is 48 to 48
 23489                           ; switch strategies available:
 23490                           ; Name         Instructions Cycles
 23491                           ; simple_byte            4     3 (average)
 23492                           ;	Chosen strategy is simple_byte
 23493  01171E  0A30               	xorlw	48	; case 48
 23494  011720  B4D8               	btfsc	status,2,c
 23495  011722  D7E8               	goto	l1941
 23496                           
 23497                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 23498                           
 23499                           ;doprnt.c: 586: }
 23500                           
 23501                           ;doprnt.c: 585: break;
 23502  011724  C184  FFF6         	movff	__doprnt@f,tblptrl
 23503  011728  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23504  01172C  0E00               	movlw	low (__mediumconst shr (0+16))
 23505  01172E  6EF8               	movwf	tblptru,c
 23506  011730  0E0D               	movlw	(high __ramtop+-1)
 23507  011732  64F7               	cpfsgt	tblptrh,c
 23508  011734  D003               	bra	u31057
 23509  011736  0008               	tblrd		*
 23510  011738  50F5               	movf	tablat,w,c
 23511  01173A  D005               	bra	u31050
 23512  01173C                     u31057:
 23513  01173C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23514  011740  CFF7 FFEA          	movff	tblptrh,fsr0h
 23515  011744  50EF               	movf	indf0,w,c
 23516  011746                     u31050:
 23517  011746  EC60  F0D7         	call	_isdigit
 23518  01174A  A0D8               	btfss	status,0,c
 23519  01174C  D04C               	goto	u31090
 23520                           
 23521                           ;doprnt.c: 598: width = 0;
 23522  01174E  0E00               	movlw	0
 23523  011750  0101               	movlb	1	; () banked
 23524  011752  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23525  011754  0E00               	movlw	0
 23526  011756  6FA5               	movwf	__doprnt@width& (0+255),b
 23527  011758                     
 23528                           ;doprnt.c: 600: width *= 10;
 23529                           
 23530                           ; BSR set to: 1
 23531  011758  C1A5  F117         	movff	__doprnt@width,___wmul@multiplier
 23532  01175C  C1A6  F118         	movff	__doprnt@width+1,___wmul@multiplier+1
 23533  011760  0E00               	movlw	0
 23534  011762  0101               	movlb	1	; () banked
 23535  011764  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23536  011766  0E0A               	movlw	10
 23537  011768  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23538  01176A  EC90  F0D6         	call	___wmul	;wreg free
 23539  01176E  C117  F1A5         	movff	?___wmul,__doprnt@width
 23540  011772  C118  F1A6         	movff	?___wmul+1,__doprnt@width+1
 23541                           
 23542                           ;doprnt.c: 601: width += *f++ - '0';
 23543  011776  0ED0               	movlw	208
 23544  011778  0101               	movlb	1	; () banked
 23545  01177A  6F88               	movwf	??__doprnt& (0+255),b
 23546  01177C  0EFF               	movlw	255
 23547  01177E  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23548  011780  C184  FFF6         	movff	__doprnt@f,tblptrl
 23549  011784  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23550  011788  0E00               	movlw	low (__mediumconst shr (0+16))
 23551  01178A  6EF8               	movwf	tblptru,c
 23552  01178C  0E0D               	movlw	(high __ramtop+-1)
 23553  01178E  64F7               	cpfsgt	tblptrh,c
 23554  011790  D003               	bra	u31077
 23555  011792  0008               	tblrd		*
 23556  011794  50F5               	movf	tablat,w,c
 23557  011796  D005               	bra	u31070
 23558  011798                     u31077:
 23559  011798  CFF6 FFE9          	movff	tblptrl,fsr0l
 23560  01179C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23561  0117A0  50EF               	movf	indf0,w,c
 23562  0117A2                     u31070:
 23563  0117A2  0101               	movlb	1	; () banked
 23564  0117A4  6F8A               	movwf	(??__doprnt+2)& (0+255),b
 23565  0117A6  6B8B               	clrf	(??__doprnt+3)& (0+255),b
 23566  0117A8  5188               	movf	??__doprnt& (0+255),w,b
 23567  0117AA  278A               	addwf	(??__doprnt+2)& (0+255),f,b
 23568  0117AC  5189               	movf	(??__doprnt+1)& (0+255),w,b
 23569  0117AE  238B               	addwfc	(??__doprnt+3)& (0+255),f,b
 23570  0117B0  518A               	movf	(??__doprnt+2)& (0+255),w,b
 23571  0117B2  27A5               	addwf	__doprnt@width& (0+255),f,b
 23572  0117B4  518B               	movf	(??__doprnt+3)& (0+255),w,b
 23573  0117B6  23A6               	addwfc	(__doprnt@width+1)& (0+255),f,b
 23574                           
 23575                           ; BSR set to: 1
 23576  0117B8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23577  0117BA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23578                           
 23579                           ; BSR set to: 1
 23580                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 23581  0117BC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23582  0117C0  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23583  0117C4  0E00               	movlw	low (__mediumconst shr (0+16))
 23584  0117C6  6EF8               	movwf	tblptru,c
 23585  0117C8  0E0D               	movlw	(high __ramtop+-1)
 23586  0117CA  64F7               	cpfsgt	tblptrh,c
 23587  0117CC  D003               	bra	u31087
 23588  0117CE  0008               	tblrd		*
 23589  0117D0  50F5               	movf	tablat,w,c
 23590  0117D2  D005               	bra	u31080
 23591  0117D4                     u31087:
 23592  0117D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 23593  0117D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 23594  0117DC  50EF               	movf	indf0,w,c
 23595  0117DE                     u31080:
 23596  0117DE  EC60  F0D7         	call	_isdigit
 23597  0117E2  B0D8               	btfsc	status,0,c
 23598  0117E4  D7B9               	goto	l1946
 23599  0117E6                     u31090:
 23600                           
 23601                           ;doprnt.c: 608: }
 23602                           ;doprnt.c: 611: if(*f == '.') {
 23603  0117E6  C184  FFF6         	movff	__doprnt@f,tblptrl
 23604  0117EA  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23605  0117EE  0E00               	movlw	low (__mediumconst shr (0+16))
 23606  0117F0  6EF8               	movwf	tblptru,c
 23607  0117F2  0E0D               	movlw	(high __ramtop+-1)
 23608  0117F4  64F7               	cpfsgt	tblptrh,c
 23609  0117F6  D003               	bra	u31107
 23610  0117F8  0008               	tblrd		*
 23611  0117FA  50F5               	movf	tablat,w,c
 23612  0117FC  D005               	bra	u31100
 23613  0117FE                     u31107:
 23614  0117FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 23615  011802  CFF7 FFEA          	movff	tblptrh,fsr0h
 23616  011806  50EF               	movf	indf0,w,c
 23617  011808                     u31100:
 23618  011808  0A2E               	xorlw	46
 23619  01180A  A4D8               	btfss	status,2,c
 23620  01180C  D049               	goto	l1948
 23621                           
 23622                           ;doprnt.c: 612: flag |= 0x4000;
 23623  01180E  0101               	movlb	1	; () banked
 23624  011810  8DA8               	bsf	(__doprnt@flag+1)& (0+255),6,b
 23625                           
 23626                           ;doprnt.c: 613: f++;
 23627  011812  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23628  011814  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23629                           
 23630                           ; BSR set to: 1
 23631                           ;doprnt.c: 620: {
 23632                           ;doprnt.c: 621: prec = 0;
 23633  011816  0E00               	movlw	0
 23634  011818  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23635  01181A  0E00               	movlw	0
 23636  01181C  6FA9               	movwf	__doprnt@prec& (0+255),b
 23637                           
 23638                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 23639  01181E  D02A               	goto	l1949
 23640  011820                     
 23641                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 23642                           
 23643                           ; BSR set to: 1
 23644  011820  C1A9  F117         	movff	__doprnt@prec,___wmul@multiplier
 23645  011824  C1AA  F118         	movff	__doprnt@prec+1,___wmul@multiplier+1
 23646  011828  0E00               	movlw	0
 23647  01182A  0101               	movlb	1	; () banked
 23648  01182C  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23649  01182E  0E0A               	movlw	10
 23650  011830  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23651  011832  EC90  F0D6         	call	___wmul	;wreg free
 23652  011836  C184  FFF6         	movff	__doprnt@f,tblptrl
 23653  01183A  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23654  01183E  0E00               	movlw	low (__mediumconst shr (0+16))
 23655  011840  6EF8               	movwf	tblptru,c
 23656  011842  0E0D               	movlw	(high __ramtop+-1)
 23657  011844  64F7               	cpfsgt	tblptrh,c
 23658  011846  D003               	bra	u31127
 23659  011848  0008               	tblrd		*
 23660  01184A  50F5               	movf	tablat,w,c
 23661  01184C  D005               	bra	u31120
 23662  01184E                     u31127:
 23663  01184E  CFF6 FFE9          	movff	tblptrl,fsr0l
 23664  011852  CFF7 FFEA          	movff	tblptrh,fsr0h
 23665  011856  50EF               	movf	indf0,w,c
 23666  011858                     u31120:
 23667  011858  0101               	movlb	1	; () banked
 23668  01185A  6F88               	movwf	??__doprnt& (0+255),b
 23669  01185C  5188               	movf	??__doprnt& (0+255),w,b
 23670  01185E  2717               	addwf	?___wmul& (0+255),f,b
 23671  011860  0E00               	movlw	0
 23672  011862  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 23673  011864  0ED0               	movlw	208
 23674  011866  2517               	addwf	?___wmul& (0+255),w,b
 23675  011868  6FA9               	movwf	__doprnt@prec& (0+255),b
 23676  01186A  0EFF               	movlw	255
 23677  01186C  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 23678  01186E  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23679                           
 23680                           ; BSR set to: 1
 23681  011870  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23682  011872  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23683  011874                     l1949:
 23684                           
 23685                           ; BSR set to: 1
 23686                           
 23687                           ; BSR set to: 1
 23688  011874  C184  FFF6         	movff	__doprnt@f,tblptrl
 23689  011878  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23690  01187C  0E00               	movlw	low (__mediumconst shr (0+16))
 23691  01187E  6EF8               	movwf	tblptru,c
 23692  011880  0E0D               	movlw	(high __ramtop+-1)
 23693  011882  64F7               	cpfsgt	tblptrh,c
 23694  011884  D003               	bra	u31137
 23695  011886  0008               	tblrd		*
 23696  011888  50F5               	movf	tablat,w,c
 23697  01188A  D005               	bra	u31130
 23698  01188C                     u31137:
 23699  01188C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23700  011890  CFF7 FFEA          	movff	tblptrh,fsr0h
 23701  011894  50EF               	movf	indf0,w,c
 23702  011896                     u31130:
 23703  011896  EC60  F0D7         	call	_isdigit
 23704  01189A  A0D8               	btfss	status,0,c
 23705  01189C  D12A               	goto	l1954
 23706  01189E  D7C0               	goto	l1950
 23707  0118A0                     l1948:
 23708                           
 23709                           ;doprnt.c: 626: prec = 0;
 23710  0118A0  0E00               	movlw	0
 23711  0118A2  0101               	movlb	1	; () banked
 23712  0118A4  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23713  0118A6  0E00               	movlw	0
 23714  0118A8  6FA9               	movwf	__doprnt@prec& (0+255),b
 23715                           
 23716                           ; BSR set to: 1
 23717                           ;doprnt.c: 628: flag |= 0x1000;
 23718  0118AA  89A8               	bsf	(__doprnt@flag+1)& (0+255),4,b
 23719                           
 23720                           ; BSR set to: 1
 23721                           ;doprnt.c: 635: switch(c = *f++) {
 23722                           
 23723                           ;doprnt.c: 630: }
 23724                           ;doprnt.c: 633: loop:
 23725                           
 23726                           ; BSR set to: 1
 23727  0118AC  D122               	goto	l1954
 23728  0118AE                     
 23729                           ; BSR set to: 1
 23730                           ;doprnt.c: 643: flag |= 0x10;
 23731                           
 23732                           ; BSR set to: 1
 23733  0118AE  89A7               	bsf	__doprnt@flag& (0+255),4,b
 23734                           
 23735                           ;doprnt.c: 644: goto loop;
 23736  0118B0  D120               	goto	l1954
 23737  0118B2                     
 23738                           ; BSR set to: 1
 23739                           ;doprnt.c: 663: flag |= 0x400;
 23740                           
 23741                           ; BSR set to: 1
 23742  0118B2  85A8               	bsf	(__doprnt@flag+1)& (0+255),2,b
 23743                           
 23744                           ; BSR set to: 1
 23745                           ;doprnt.c: 698: case 'i':
 23746                           ;doprnt.c: 699: break;
 23747                           
 23748                           ; BSR set to: 1
 23749                           
 23750                           ;doprnt.c: 697: case 'd':
 23751                           
 23752                           ;doprnt.c: 664: break;
 23753  0118B4  D159               	goto	l1959
 23754  0118B6                     
 23755                           ; BSR set to: 1
 23756                           ;doprnt.c: 718: case 'x':
 23757                           ;doprnt.c: 721: flag |= 0x80;
 23758                           
 23759                           ; BSR set to: 1
 23760                           
 23761                           ; BSR set to: 1
 23762  0118B6  8FA7               	bsf	__doprnt@flag& (0+255),7,b
 23763                           
 23764                           ;doprnt.c: 723: break;
 23765  0118B8  D157               	goto	l1959
 23766  0118BA                     
 23767                           ; BSR set to: 1
 23768                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23769                           
 23770                           ; BSR set to: 1
 23771  0118BA  C186  FFD9         	movff	__doprnt@ap,fsr2l
 23772  0118BE  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 23773  0118C2  CFDF F188          	movff	indf2,??__doprnt
 23774  0118C6  0E02               	movlw	2
 23775  0118C8  26DE               	addwf	postinc2,f,c
 23776  0118CA  CFDF F189          	movff	indf2,??__doprnt+1
 23777  0118CE  0E00               	movlw	0
 23778  0118D0  22DD               	addwfc	postdec2,f,c
 23779  0118D2  C188  FFD9         	movff	??__doprnt,fsr2l
 23780  0118D6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23781  0118DA  CFDE F193          	movff	postinc2,__doprnt@cp
 23782  0118DE  CFDD F194          	movff	postdec2,__doprnt@cp+1
 23783                           
 23784                           ; BSR set to: 1
 23785                           ;doprnt.c: 740: if(!cp)
 23786  0118E2  5193               	movf	__doprnt@cp& (0+255),w,b
 23787  0118E4  1194               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 23788  0118E6  A4D8               	btfss	status,2,c
 23789  0118E8  D004               	goto	l1965
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;doprnt.c: 741: cp = "(null)";
 23793  0118EA  0E9B               	movlw	low STR_191
 23794  0118EC  6F93               	movwf	__doprnt@cp& (0+255),b
 23795  0118EE  0EFF               	movlw	high STR_191
 23796  0118F0  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 23797  0118F2                     l1965:
 23798                           
 23799                           ; BSR set to: 1
 23800                           ;doprnt.c: 745: len = 0;
 23801                           
 23802                           ; BSR set to: 1
 23803  0118F2  0E00               	movlw	0
 23804  0118F4  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 23805  0118F6  0E00               	movlw	0
 23806  0118F8  6F95               	movwf	__doprnt@len& (0+255),b
 23807                           
 23808                           ;doprnt.c: 746: while(cp[len])
 23809  0118FA  D003               	goto	l1966
 23810  0118FC                     
 23811                           ;doprnt.c: 747: len++;
 23812                           
 23813                           ; BSR set to: 1
 23814  0118FC  0101               	movlb	1	; () banked
 23815  0118FE  4B95               	infsnz	__doprnt@len& (0+255),f,b
 23816  011900  2B96               	incf	(__doprnt@len+1)& (0+255),f,b
 23817  011902                     l1966:
 23818                           
 23819                           ; BSR set to: 1
 23820                           
 23821                           ; BSR set to: 1
 23822  011902  5195               	movf	__doprnt@len& (0+255),w,b
 23823  011904  2593               	addwf	__doprnt@cp& (0+255),w,b
 23824  011906  6F88               	movwf	??__doprnt& (0+255),b
 23825  011908  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23826  01190A  2194               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 23827  01190C  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23828  01190E  C188  FFF6         	movff	??__doprnt,tblptrl
 23829  011912  C189  FFF7         	movff	??__doprnt+1,tblptrh
 23830  011916  0E00               	movlw	low (__mediumconst shr (0+16))
 23831  011918  6EF8               	movwf	tblptru,c
 23832  01191A  0E0D               	movlw	(high __ramtop+-1)
 23833  01191C  64F7               	cpfsgt	tblptrh,c
 23834  01191E  D003               	bra	u31167
 23835  011920  0008               	tblrd		*
 23836  011922  50F5               	movf	tablat,w,c
 23837  011924  D005               	bra	u31160
 23838  011926                     u31167:
 23839  011926  CFF6 FFE9          	movff	tblptrl,fsr0l
 23840  01192A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23841  01192E  50EF               	movf	indf0,w,c
 23842  011930                     u31160:
 23843  011930  0900               	iorlw	0
 23844  011932  A4D8               	btfss	status,2,c
 23845  011934  D7E3               	goto	l1967
 23846  011936                     u31170:
 23847                           
 23848                           ;doprnt.c: 753: if(prec && prec < len)
 23849                           
 23850                           ;doprnt.c: 750: dostring:
 23851  011936  0101               	movlb	1	; () banked
 23852  011938  51A9               	movf	__doprnt@prec& (0+255),w,b
 23853  01193A  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23854  01193C  B4D8               	btfsc	status,2,c
 23855  01193E  D00A               	goto	l1970
 23856                           
 23857                           ; BSR set to: 1
 23858  011940  5195               	movf	__doprnt@len& (0+255),w,b
 23859  011942  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 23860  011944  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23861  011946  59AA               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 23862  011948  B0D8               	btfsc	status,0,c
 23863  01194A  D004               	goto	l1970
 23864                           
 23865                           ; BSR set to: 1
 23866                           ;doprnt.c: 754: len = prec;
 23867  01194C  C1A9  F195         	movff	__doprnt@prec,__doprnt@len
 23868  011950  C1AA  F196         	movff	__doprnt@prec+1,__doprnt@len+1
 23869  011954                     l1970:
 23870                           
 23871                           ; BSR set to: 1
 23872                           ;doprnt.c: 757: if(width > len)
 23873                           
 23874                           ; BSR set to: 1
 23875  011954  51A5               	movf	__doprnt@width& (0+255),w,b
 23876  011956  5D95               	subwf	__doprnt@len& (0+255),w,b
 23877  011958  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 23878  01195A  5996               	subwfb	(__doprnt@len+1)& (0+255),w,b
 23879  01195C  B0D8               	btfsc	status,0,c
 23880  01195E  D005               	goto	l1971
 23881                           
 23882                           ; BSR set to: 1
 23883                           ;doprnt.c: 758: width -= len;
 23884  011960  5195               	movf	__doprnt@len& (0+255),w,b
 23885  011962  5FA5               	subwf	__doprnt@width& (0+255),f,b
 23886  011964  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23887  011966  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23888  011968  D038               	goto	l1976
 23889  01196A                     l1971:
 23890                           
 23891                           ; BSR set to: 1
 23892                           ;doprnt.c: 759: else
 23893                           ;doprnt.c: 760: width = 0;
 23894                           
 23895                           ; BSR set to: 1
 23896  01196A  0E00               	movlw	0
 23897  01196C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23898  01196E  0E00               	movlw	0
 23899  011970  6FA5               	movwf	__doprnt@width& (0+255),b
 23900                           
 23901                           ; BSR set to: 1
 23902                           ;doprnt.c: 764: while(width--)
 23903  011972  D033               	goto	l1976
 23904  011974                     l21816:
 23905                           
 23906                           ; BSR set to: 1
 23907                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 23908  011974  EE20 F002          	lfsr	2,2
 23909  011978  5182               	movf	__doprnt@pb& (0+255),w,b
 23910  01197A  26D9               	addwf	fsr2l,f,c
 23911  01197C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23912  01197E  22DA               	addwfc	fsr2h,f,c
 23913  011980  50DE               	movf	postinc2,w,c
 23914  011982  10DE               	iorwf	postinc2,w,c
 23915  011984  10DE               	iorwf	postinc2,w,c
 23916  011986  B4D8               	btfsc	status,2,c
 23917  011988  D013               	goto	l1975
 23918                           
 23919                           ; BSR set to: 1
 23920  01198A  EE20 F002          	lfsr	2,2
 23921  01198E  5182               	movf	__doprnt@pb& (0+255),w,b
 23922  011990  26D9               	addwf	fsr2l,f,c
 23923  011992  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23924  011994  22DA               	addwfc	fsr2h,f,c
 23925  011996  D801               	call	u31228
 23926  011998  D020               	goto	l1976
 23927  01199A                     u31228:
 23928  01199A  0005               	push	
 23929  01199C  6EFA               	movwf	pclath,c
 23930  01199E  50DE               	movf	postinc2,w,c
 23931  0119A0  6EFD               	movwf	tosl,c
 23932  0119A2  50DE               	movf	postinc2,w,c
 23933  0119A4  6EFE               	movwf	tosh,c
 23934  0119A6  50DE               	movf	postinc2,w,c
 23935  0119A8  6EFF               	movwf	tosu,c
 23936  0119AA  50FA               	movf	pclath,w,c
 23937  0119AC  0E20               	movlw	32
 23938  0119AE  0012               	return		;indir
 23939  0119B0                     l1975:
 23940  0119B0  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23941  0119B4  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23942  0119B8  CFDE F188          	movff	postinc2,??__doprnt
 23943  0119BC  CFDD F189          	movff	postdec2,??__doprnt+1
 23944  0119C0  C188  FFD9         	movff	??__doprnt,fsr2l
 23945  0119C4  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23946  0119C8  0E20               	movlw	32
 23947  0119CA  6EDF               	movwf	indf2,c
 23948  0119CC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23949  0119D0  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23950  0119D4  2ADE               	incf	postinc2,f,c
 23951  0119D6  0E00               	movlw	0
 23952  0119D8  22DD               	addwfc	postdec2,f,c
 23953  0119DA                     l1976:
 23954  0119DA  0101               	movlb	1	; () banked
 23955  0119DC  07A5               	decf	__doprnt@width& (0+255),f,b
 23956  0119DE  A0D8               	btfss	status,0,c
 23957  0119E0  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 23958  0119E2  29A5               	incf	__doprnt@width& (0+255),w,b
 23959  0119E4  E1C7               	bnz	l21816
 23960  0119E6  29A6               	incf	(__doprnt@width+1)& (0+255),w,b
 23961  0119E8  B4D8               	btfsc	status,2,c
 23962  0119EA  D05B               	goto	l1981
 23963  0119EC  D7C3               	goto	l1974
 23964  0119EE                     l21826:
 23965                           
 23966                           ; BSR set to: 1
 23967                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 23968  0119EE  EE20 F002          	lfsr	2,2
 23969  0119F2  5182               	movf	__doprnt@pb& (0+255),w,b
 23970  0119F4  26D9               	addwf	fsr2l,f,c
 23971  0119F6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23972  0119F8  22DA               	addwfc	fsr2h,f,c
 23973  0119FA  50DE               	movf	postinc2,w,c
 23974  0119FC  10DE               	iorwf	postinc2,w,c
 23975  0119FE  10DE               	iorwf	postinc2,w,c
 23976  011A00  B4D8               	btfsc	status,2,c
 23977  011A02  D027               	goto	l1980
 23978                           
 23979                           ; BSR set to: 1
 23980  011A04  EE20 F002          	lfsr	2,2
 23981  011A08  5182               	movf	__doprnt@pb& (0+255),w,b
 23982  011A0A  26D9               	addwf	fsr2l,f,c
 23983  011A0C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23984  011A0E  22DA               	addwfc	fsr2h,f,c
 23985  011A10  D801               	call	u31258
 23986  011A12  D01B               	goto	u31259
 23987  011A14                     u31258:
 23988  011A14  0005               	push	
 23989  011A16  6EFA               	movwf	pclath,c
 23990  011A18  50DE               	movf	postinc2,w,c
 23991  011A1A  6EFD               	movwf	tosl,c
 23992  011A1C  50DE               	movf	postinc2,w,c
 23993  011A1E  6EFE               	movwf	tosh,c
 23994  011A20  50DE               	movf	postinc2,w,c
 23995  011A22  6EFF               	movwf	tosu,c
 23996  011A24  50FA               	movf	pclath,w,c
 23997  011A26  C193  FFF6         	movff	__doprnt@cp,tblptrl
 23998  011A2A  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 23999  011A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 24000  011A30  6EF8               	movwf	tblptru,c
 24001  011A32  0E0D               	movlw	(high __ramtop+-1)
 24002  011A34  64F7               	cpfsgt	tblptrh,c
 24003  011A36  D003               	bra	u31267
 24004  011A38  0008               	tblrd		*
 24005  011A3A  50F5               	movf	tablat,w,c
 24006  011A3C  D005               	bra	u31260
 24007  011A3E                     u31267:
 24008  011A3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24009  011A42  CFF7 FFEA          	movff	tblptrh,fsr0h
 24010  011A46  50EF               	movf	indf0,w,c
 24011  011A48                     u31260:
 24012  011A48  0012               	return		;indir
 24013  011A4A                     u31259:
 24014  011A4A  0101               	movlb	1	; () banked
 24015  011A4C  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 24016  011A4E  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 24017  011A50  D028               	goto	l1981
 24018  011A52                     l1980:
 24019                           
 24020                           ; BSR set to: 1
 24021                           
 24022                           ; BSR set to: 1
 24023  011A52  C193  FFF6         	movff	__doprnt@cp,tblptrl
 24024  011A56  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 24025  011A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 24026  011A5C  6EF8               	movwf	tblptru,c
 24027  011A5E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24028  011A62  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24029  011A66  CFDE F188          	movff	postinc2,??__doprnt
 24030  011A6A  CFDD F189          	movff	postdec2,??__doprnt+1
 24031  011A6E  C188  FFD9         	movff	??__doprnt,fsr2l
 24032  011A72  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24033  011A76  0E0D               	movlw	(high __ramtop+-1)
 24034  011A78  64F7               	cpfsgt	tblptrh,c
 24035  011A7A  D003               	bra	u31277
 24036  011A7C  0008               	tblrd		*
 24037  011A7E  50F5               	movf	tablat,w,c
 24038  011A80  D005               	bra	u31270
 24039  011A82                     u31277:
 24040  011A82  CFF6 FFE9          	movff	tblptrl,fsr0l
 24041  011A86  CFF7 FFEA          	movff	tblptrh,fsr0h
 24042  011A8A  50EF               	movf	indf0,w,c
 24043  011A8C                     u31270:
 24044  011A8C  6EDF               	movwf	indf2,c
 24045  011A8E  0101               	movlb	1	; () banked
 24046  011A90  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 24047  011A92  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 24048                           
 24049                           ; BSR set to: 1
 24050  011A94  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24051  011A98  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24052  011A9C  2ADE               	incf	postinc2,f,c
 24053  011A9E  0E00               	movlw	0
 24054  011AA0  22DD               	addwfc	postdec2,f,c
 24055  011AA2                     l1981:
 24056                           
 24057                           ; BSR set to: 1
 24058                           
 24059                           ; BSR set to: 1
 24060                           
 24061                           ; BSR set to: 1
 24062  011AA2  0795               	decf	__doprnt@len& (0+255),f,b
 24063  011AA4  A0D8               	btfss	status,0,c
 24064  011AA6  0796               	decf	(__doprnt@len+1)& (0+255),f,b
 24065  011AA8  2995               	incf	__doprnt@len& (0+255),w,b
 24066  011AAA  E1A1               	bnz	l21826
 24067  011AAC  2996               	incf	(__doprnt@len+1)& (0+255),w,b
 24068  011AAE  B4D8               	btfsc	status,2,c
 24069  011AB0  EF97  F095         	goto	u32130
 24070  011AB4  D79C               	goto	l1979
 24071  011AB6                     
 24072                           ; BSR set to: 1
 24073                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24074                           
 24075                           ; BSR set to: 1
 24076  011AB6  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24077  011ABA  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24078  011ABE  CFDF F188          	movff	indf2,??__doprnt
 24079  011AC2  0E02               	movlw	2
 24080  011AC4  26DE               	addwf	postinc2,f,c
 24081  011AC6  CFDF F189          	movff	indf2,??__doprnt+1
 24082  011ACA  0E00               	movlw	0
 24083  011ACC  22DD               	addwfc	postdec2,f,c
 24084  011ACE  C188  FFD9         	movff	??__doprnt,fsr2l
 24085  011AD2  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24086  011AD6  50DF               	movf	indf2,w,c
 24087  011AD8  6FAB               	movwf	__doprnt@c& (0+255),b
 24088  011ADA                     
 24089                           ; BSR set to: 1
 24090                           ;doprnt.c: 805: cp = (char *)&c;
 24091                           
 24092                           ; BSR set to: 1
 24093  011ADA  0EAB               	movlw	low __doprnt@c
 24094  011ADC  6F93               	movwf	__doprnt@cp& (0+255),b
 24095  011ADE  0E01               	movlw	high __doprnt@c
 24096  011AE0  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 24097                           
 24098                           ; BSR set to: 1
 24099                           ;doprnt.c: 806: len = 1;
 24100  011AE2  0E00               	movlw	0
 24101  011AE4  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 24102  011AE6  0E01               	movlw	1
 24103  011AE8  6F95               	movwf	__doprnt@len& (0+255),b
 24104                           
 24105                           ;doprnt.c: 807: goto dostring;
 24106  011AEA  D725               	goto	u31170
 24107  011AEC                     
 24108                           ; BSR set to: 1
 24109                           ;doprnt.c: 818: flag |= 0xC0;
 24110                           
 24111                           ; BSR set to: 1
 24112  011AEC  0EC0               	movlw	192
 24113  011AEE  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 24114                           
 24115                           ; BSR set to: 1
 24116                           ;doprnt.c: 822: }
 24117                           
 24118                           ;doprnt.c: 819: break;
 24119  011AF0  D03B               	goto	l1959
 24120  011AF2                     l1954:
 24121                           
 24122                           ; BSR set to: 1
 24123  011AF2  0101               	movlb	1	; () banked
 24124  011AF4  5184               	movf	__doprnt@f& (0+255),w,b
 24125  011AF6  6F88               	movwf	??__doprnt& (0+255),b
 24126  011AF8  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 24127  011AFA  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24128  011AFC  4B84               	infsnz	__doprnt@f& (0+255),f,b
 24129  011AFE  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 24130  011B00  C188  FFF6         	movff	??__doprnt,tblptrl
 24131  011B04  C189  FFF7         	movff	??__doprnt+1,tblptrh
 24132  011B08  0E00               	movlw	low (__mediumconst shr (0+16))
 24133  011B0A  6EF8               	movwf	tblptru,c
 24134  011B0C  0E0D               	movlw	(high __ramtop+-1)
 24135  011B0E  64F7               	cpfsgt	tblptrh,c
 24136  011B10  D003               	bra	u31297
 24137  011B12  0008               	tblrd		*
 24138  011B14  50F5               	movf	tablat,w,c
 24139  011B16  D005               	bra	u31290
 24140  011B18                     u31297:
 24141  011B18  CFF6 FFE9          	movff	tblptrl,fsr0l
 24142  011B1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24143  011B20  50EF               	movf	indf0,w,c
 24144  011B22                     u31290:
 24145  011B22  0101               	movlb	1	; () banked
 24146  011B24  6FAB               	movwf	__doprnt@c& (0+255),b
 24147  011B26  51AB               	movf	__doprnt@c& (0+255),w,b
 24148                           
 24149                           ; Switch size 1, requested type "space"
 24150                           ; Number of cases is 10, Range of values is 0 to 120
 24151                           ; switch strategies available:
 24152                           ; Name         Instructions Cycles
 24153                           ; simple_byte           31    16 (average)
 24154                           ;	Chosen strategy is simple_byte
 24155  011B28  0A00               	xorlw	0	; case 0
 24156  011B2A  B4D8               	btfsc	status,2,c
 24157  011B2C  EFB5  F095         	goto	u32150
 24158  011B30  0A58               	xorlw	88	; case 88
 24159  011B32  B4D8               	btfsc	status,2,c
 24160  011B34  D6C0               	goto	l1962
 24161  011B36  0A3B               	xorlw	59	; case 99
 24162  011B38  B4D8               	btfsc	status,2,c
 24163  011B3A  D7BD               	goto	l1983
 24164  011B3C  0A07               	xorlw	7	; case 100
 24165  011B3E  B4D8               	btfsc	status,2,c
 24166  011B40  D013               	goto	l1959
 24167  011B42  0A02               	xorlw	2	; case 102
 24168  011B44  B4D8               	btfsc	status,2,c
 24169  011B46  D6B5               	goto	l1958
 24170  011B48  0A0F               	xorlw	15	; case 105
 24171  011B4A  B4D8               	btfsc	status,2,c
 24172  011B4C  D00D               	goto	l1959
 24173  011B4E  0A05               	xorlw	5	; case 108
 24174  011B50  B4D8               	btfsc	status,2,c
 24175  011B52  D6AD               	goto	l1957
 24176  011B54  0A1F               	xorlw	31	; case 115
 24177  011B56  B4D8               	btfsc	status,2,c
 24178  011B58  D6B0               	goto	l1964
 24179  011B5A  0A06               	xorlw	6	; case 117
 24180  011B5C  B4D8               	btfsc	status,2,c
 24181  011B5E  D7C6               	goto	l1985
 24182  011B60  0A0D               	xorlw	13	; case 120
 24183  011B62  B4D8               	btfsc	status,2,c
 24184  011B64  D6A8               	goto	l1962
 24185  011B66  D7B9               	goto	l1984
 24186  011B68                     l1959:
 24187                           
 24188                           ; BSR set to: 1
 24189                           ;doprnt.c: 825: if(flag & (0x700)) {
 24190                           
 24191                           ; BSR set to: 1
 24192  011B68  0E07               	movlw	7
 24193  011B6A  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24194  011B6C  B4D8               	btfsc	status,2,c
 24195  011B6E  EFAB  F092         	goto	l1986
 24196                           
 24197                           ; BSR set to: 1
 24198                           ;doprnt.c: 827: if(flag & 0x1000)
 24199  011B72  A9A8               	btfss	(__doprnt@flag+1)& (0+255),4,b
 24200  011B74  D004               	goto	l1987
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;doprnt.c: 829: prec = 6;
 24204  011B76  0E00               	movlw	0
 24205  011B78  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 24206  011B7A  0E06               	movlw	6
 24207  011B7C  6FA9               	movwf	__doprnt@prec& (0+255),b
 24208  011B7E                     l1987:
 24209                           
 24210                           ; BSR set to: 1
 24211                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24212                           
 24213                           ; BSR set to: 1
 24214  011B7E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24215  011B82  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24216  011B86  CFDF F188          	movff	indf2,??__doprnt
 24217  011B8A  0E04               	movlw	4
 24218  011B8C  26DE               	addwf	postinc2,f,c
 24219  011B8E  CFDF F189          	movff	indf2,??__doprnt+1
 24220  011B92  0E00               	movlw	0
 24221  011B94  22DD               	addwfc	postdec2,f,c
 24222  011B96  C188  FFD9         	movff	??__doprnt,fsr2l
 24223  011B9A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24224  011B9E  CFDE F19D          	movff	postinc2,__doprnt@fval
 24225  011BA2  CFDE F19E          	movff	postinc2,__doprnt@fval+1
 24226  011BA6  CFDE F19F          	movff	postinc2,__doprnt@fval+2
 24227  011BAA  CFDE F1A0          	movff	postinc2,__doprnt@fval+3
 24228                           
 24229                           ; BSR set to: 1
 24230                           ;doprnt.c: 831: if(fval < 0.0) {
 24231  011BAE  AFA0               	btfss	(__doprnt@fval+3)& (0+255),7,b
 24232  011BB0  D015               	goto	l1988
 24233                           
 24234                           ; BSR set to: 1
 24235                           ;doprnt.c: 832: fval = -fval;
 24236  011BB2  C19D  F125         	movff	__doprnt@fval,___flneg@f1
 24237  011BB6  C19E  F126         	movff	__doprnt@fval+1,___flneg@f1+1
 24238  011BBA  C19F  F127         	movff	__doprnt@fval+2,___flneg@f1+2
 24239  011BBE  C1A0  F128         	movff	__doprnt@fval+3,___flneg@f1+3
 24240  011BC2  EC34  F0D6         	call	___flneg
 24241  011BC6  C125  F19D         	movff	?___flneg,__doprnt@fval
 24242  011BCA  C126  F19E         	movff	?___flneg+1,__doprnt@fval+1
 24243  011BCE  C127  F19F         	movff	?___flneg+2,__doprnt@fval+2
 24244  011BD2  C128  F1A0         	movff	?___flneg+3,__doprnt@fval+3
 24245                           
 24246                           ;doprnt.c: 833: flag |= 0x03;
 24247  011BD6  0E03               	movlw	3
 24248  011BD8  0101               	movlb	1	; () banked
 24249  011BDA  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 24250  011BDC                     l1988:
 24251                           
 24252                           ; BSR set to: 1
 24253                           ;doprnt.c: 834: }
 24254                           ;doprnt.c: 835: exp = 0;
 24255                           
 24256                           ; BSR set to: 1
 24257  011BDC  0E00               	movlw	0
 24258  011BDE  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24259  011BE0  0E00               	movlw	0
 24260  011BE2  6F97               	movwf	__doprnt@exp& (0+255),b
 24261                           
 24262                           ; BSR set to: 1
 24263                           ;doprnt.c: 836: if( fval!=0) {
 24264  011BE4  519D               	movf	__doprnt@fval& (0+255),w,b
 24265  011BE6  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24266  011BE8  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24267  011BEA  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24268  011BEC  B4D8               	btfsc	status,2,c
 24269  011BEE  D084               	goto	l1993
 24270                           
 24271                           ; BSR set to: 1
 24272                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 24273  011BF0  359F               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 24274  011BF2  35A0               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 24275  011BF4  0F82               	addlw	130
 24276  011BF6  6F97               	movwf	__doprnt@exp& (0+255),b
 24277  011BF8  6B98               	clrf	(__doprnt@exp+1)& (0+255),b
 24278  011BFA  0EFF               	movlw	255
 24279  011BFC  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24280                           
 24281                           ; BSR set to: 1
 24282                           ;doprnt.c: 838: exp--;
 24283  011BFE  0797               	decf	__doprnt@exp& (0+255),f,b
 24284  011C00  A0D8               	btfss	status,0,c
 24285  011C02  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24286                           
 24287                           ; BSR set to: 1
 24288                           ;doprnt.c: 839: exp *= 3;
 24289  011C04  C197  F117         	movff	__doprnt@exp,___wmul@multiplier
 24290  011C08  C198  F118         	movff	__doprnt@exp+1,___wmul@multiplier+1
 24291  011C0C  0E00               	movlw	0
 24292  011C0E  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24293  011C10  0E03               	movlw	3
 24294  011C12  6F19               	movwf	___wmul@multiplicand& (0+255),b
 24295  011C14  EC90  F0D6         	call	___wmul	;wreg free
 24296  011C18  C117  F197         	movff	?___wmul,__doprnt@exp
 24297  011C1C  C118  F198         	movff	?___wmul+1,__doprnt@exp+1
 24298                           
 24299                           ;doprnt.c: 840: exp /= 10;
 24300  011C20  C197  F11D         	movff	__doprnt@exp,___awdiv@dividend
 24301  011C24  C198  F11E         	movff	__doprnt@exp+1,___awdiv@dividend+1
 24302  011C28  0E00               	movlw	0
 24303  011C2A  0101               	movlb	1	; () banked
 24304  011C2C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 24305  011C2E  0E0A               	movlw	10
 24306  011C30  6F1F               	movwf	___awdiv@divisor& (0+255),b
 24307  011C32  EC2B  F0CD         	call	___awdiv	;wreg free
 24308  011C36  C11D  F197         	movff	?___awdiv,__doprnt@exp
 24309  011C3A  C11E  F198         	movff	?___awdiv+1,__doprnt@exp+1
 24310                           
 24311                           ;doprnt.c: 841: if(exp < 0)
 24312  011C3E  0101               	movlb	1	; () banked
 24313  011C40  AF98               	btfss	(__doprnt@exp+1)& (0+255),7,b
 24314  011C42  D003               	goto	l1990
 24315                           
 24316                           ; BSR set to: 1
 24317                           ;doprnt.c: 842: exp--;
 24318  011C44  0797               	decf	__doprnt@exp& (0+255),f,b
 24319  011C46  A0D8               	btfss	status,0,c
 24320  011C48  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24321  011C4A                     l1990:
 24322                           
 24323                           ; BSR set to: 1
 24324                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 24325                           
 24326                           ; BSR set to: 1
 24327  011C4A  5197               	movf	__doprnt@exp& (0+255),w,b
 24328  011C4C  0800               	sublw	0
 24329  011C4E  EC9E  F0A5         	call	_scale
 24330  011C52  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24331  011C56  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24332  011C5A  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24333  011C5E  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24334                           
 24335                           ;doprnt.c: 847: tmpval.integ *= fval;
 24336  011C62  C199  F156         	movff	__doprnt@tmpval,___flmul@b
 24337  011C66  C19A  F157         	movff	__doprnt@tmpval+1,___flmul@b+1
 24338  011C6A  C19B  F158         	movff	__doprnt@tmpval+2,___flmul@b+2
 24339  011C6E  C19C  F159         	movff	__doprnt@tmpval+3,___flmul@b+3
 24340  011C72  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 24341  011C76  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 24342  011C7A  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 24343  011C7E  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 24344  011C82  ECE4  F0AB         	call	___flmul	;wreg free
 24345  011C86  C156  F199         	movff	?___flmul,__doprnt@tmpval
 24346  011C8A  C157  F19A         	movff	?___flmul+1,__doprnt@tmpval+1
 24347  011C8E  C158  F19B         	movff	?___flmul+2,__doprnt@tmpval+2
 24348  011C92  C159  F19C         	movff	?___flmul+3,__doprnt@tmpval+3
 24349                           
 24350                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 24351  011C96  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24352  011C9A  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24353  011C9E  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24354  011CA2  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24355  011CA6  0E00               	movlw	0
 24356  011CA8  0101               	movlb	1	; () banked
 24357  011CAA  6F1B               	movwf	___flge@ff2& (0+255),b
 24358  011CAC  0E00               	movlw	0
 24359  011CAE  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24360  011CB0  0E80               	movlw	128
 24361  011CB2  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24362  011CB4  0E3F               	movlw	63
 24363  011CB6  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24364  011CB8  EC5A  F0C6         	call	___flge	;wreg free
 24365  011CBC  0101               	movlb	1	; () banked
 24366  011CBE  B0D8               	btfsc	status,0,c
 24367  011CC0  D004               	goto	l1991
 24368                           
 24369                           ; BSR set to: 1
 24370                           ;doprnt.c: 849: exp--;
 24371  011CC2  0797               	decf	__doprnt@exp& (0+255),f,b
 24372  011CC4  A0D8               	btfss	status,0,c
 24373  011CC6  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24374  011CC8  D017               	goto	l1993
 24375  011CCA                     l1991:
 24376                           
 24377                           ; BSR set to: 1
 24378                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 24379                           
 24380                           ; BSR set to: 1
 24381  011CCA  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24382  011CCE  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24383  011CD2  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24384  011CD6  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24385  011CDA  0E00               	movlw	0
 24386  011CDC  6F1B               	movwf	___flge@ff2& (0+255),b
 24387  011CDE  0E00               	movlw	0
 24388  011CE0  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24389  011CE2  0E20               	movlw	32
 24390  011CE4  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24391  011CE6  0E41               	movlw	65
 24392  011CE8  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24393  011CEA  EC5A  F0C6         	call	___flge	;wreg free
 24394  011CEE  0101               	movlb	1	; () banked
 24395  011CF0  A0D8               	btfss	status,0,c
 24396  011CF2  D002               	goto	l1993
 24397                           
 24398                           ; BSR set to: 1
 24399                           ;doprnt.c: 851: exp++;
 24400  011CF4  4B97               	infsnz	__doprnt@exp& (0+255),f,b
 24401  011CF6  2B98               	incf	(__doprnt@exp+1)& (0+255),f,b
 24402  011CF8                     l1993:
 24403                           
 24404                           ; BSR set to: 1
 24405                           ;doprnt.c: 852: }
 24406                           ;doprnt.c: 1112: if(prec <= 12)
 24407                           
 24408                           ; BSR set to: 1
 24409                           
 24410                           ; BSR set to: 1
 24411                           
 24412                           ; BSR set to: 1
 24413  011CF8  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24414  011CFA  D006               	goto	u31370
 24415  011CFC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24416  011CFE  E121               	bnz	l21898
 24417  011D00  0E0D               	movlw	13
 24418  011D02  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 24419  011D04  B0D8               	btfsc	status,0,c
 24420  011D06  D01D               	goto	l1994
 24421  011D08                     u31370:
 24422                           
 24423                           ; BSR set to: 1
 24424                           ;doprnt.c: 1113: fval += fround(prec);
 24425  011D08  C19D  F129         	movff	__doprnt@fval,___fladd@b
 24426  011D0C  C19E  F12A         	movff	__doprnt@fval+1,___fladd@b+1
 24427  011D10  C19F  F12B         	movff	__doprnt@fval+2,___fladd@b+2
 24428  011D14  C1A0  F12C         	movff	__doprnt@fval+3,___fladd@b+3
 24429  011D18  51A9               	movf	__doprnt@prec& (0+255),w,b
 24430  011D1A  ECD6  F0B6         	call	_fround
 24431  011D1E  C16F  F12D         	movff	?_fround,___fladd@a
 24432  011D22  C170  F12E         	movff	?_fround+1,___fladd@a+1
 24433  011D26  C171  F12F         	movff	?_fround+2,___fladd@a+2
 24434  011D2A  C172  F130         	movff	?_fround+3,___fladd@a+3
 24435  011D2E  EC35  F0AF         	call	___fladd	;wreg free
 24436  011D32  C129  F19D         	movff	?___fladd,__doprnt@fval
 24437  011D36  C12A  F19E         	movff	?___fladd+1,__doprnt@fval+1
 24438  011D3A  C12B  F19F         	movff	?___fladd+2,__doprnt@fval+2
 24439  011D3E  C12C  F1A0         	movff	?___fladd+3,__doprnt@fval+3
 24440  011D42                     l1994:
 24441  011D42                     l21898:
 24442                           
 24443                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 24444  011D42  0101               	movlb	1	; () banked
 24445  011D44  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24446  011D46  D006               	goto	u31380
 24447  011D48  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24448  011D4A  E122               	bnz	l21906
 24449  011D4C  0E0A               	movlw	10
 24450  011D4E  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24451  011D50  B0D8               	btfsc	status,0,c
 24452  011D52  D01E               	goto	u31410
 24453  011D54                     u31380:
 24454                           
 24455                           ; BSR set to: 1
 24456  011D54  519D               	movf	__doprnt@fval& (0+255),w,b
 24457  011D56  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24458  011D58  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24459  011D5A  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24460  011D5C  B4D8               	btfsc	status,2,c
 24461  011D5E  D062               	goto	l1995
 24462                           
 24463                           ; BSR set to: 1
 24464  011D60  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24465  011D64  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24466  011D68  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24467  011D6C  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24468  011D70  EC08  F0C9         	call	___fltol	;wreg free
 24469  011D74  0101               	movlb	1	; () banked
 24470  011D76  5178               	movf	?___fltol& (0+255),w,b
 24471  011D78  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 24472  011D7A  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 24473  011D7C  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 24474  011D7E  B4D8               	btfsc	status,2,c
 24475                           
 24476                           ; BSR set to: 1
 24477  011D80  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24478  011D82  D050               	goto	l1995
 24479  011D84  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24480  011D86  E104               	bnz	l21906
 24481  011D88  0E02               	movlw	2
 24482  011D8A  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24483  011D8C  A0D8               	btfss	status,0,c
 24484  011D8E  D04A               	goto	l1995
 24485  011D90                     u31410:
 24486  011D90                     l21906:
 24487                           
 24488                           ; BSR set to: 1
 24489                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 24490  011D90  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24491  011D94  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24492  011D98  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24493  011D9C  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24494  011DA0  0E5F               	movlw	95
 24495  011DA2  6F1B               	movwf	___flge@ff2& (0+255),b
 24496  011DA4  0E70               	movlw	112
 24497  011DA6  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24498  011DA8  0E89               	movlw	137
 24499  011DAA  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24500  011DAC  0E40               	movlw	64
 24501  011DAE  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24502  011DB0  EC5A  F0C6         	call	___flge	;wreg free
 24503  011DB4  0101               	movlb	1	; () banked
 24504  011DB6  B0D8               	btfsc	status,0,c
 24505  011DB8  D002               	goto	l1998
 24506                           
 24507                           ; BSR set to: 1
 24508                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24509  011DBA  0EF7               	movlw	247
 24510  011DBC  D001               	goto	L3
 24511  011DBE                     l1998:
 24512                           
 24513                           ; BSR set to: 1
 24514                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24515                           
 24516                           ; BSR set to: 1
 24517  011DBE  0EF8               	movlw	248
 24518  011DC0                     L3:
 24519  011DC0  2797               	addwf	__doprnt@exp& (0+255),f,b
 24520  011DC2  0EFF               	movlw	255
 24521  011DC4  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24522                           
 24523                           ; BSR set to: 1
 24524                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24525                           
 24526                           ; BSR set to: 1
 24527  011DC6  5197               	movf	__doprnt@exp& (0+255),w,b
 24528  011DC8  EC9E  F0A5         	call	_scale
 24529  011DCC  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24530  011DD0  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24531  011DD4  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24532  011DD8  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24533  011DDC  C19D  F117         	movff	__doprnt@fval,__div_to_l_@f1
 24534  011DE0  C19E  F118         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 24535  011DE4  C19F  F119         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 24536  011DE8  C1A0  F11A         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 24537  011DEC  C199  F11B         	movff	__doprnt@tmpval,__div_to_l_@f2
 24538  011DF0  C19A  F11C         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 24539  011DF4  C19B  F11D         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 24540  011DF8  C19C  F11E         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 24541  011DFC  EC9F  F0C4         	call	__div_to_l_	;wreg free
 24542  011E00  C117  F1A1         	movff	?__div_to_l_,__doprnt@val
 24543  011E04  C118  F1A2         	movff	?__div_to_l_+1,__doprnt@val+1
 24544  011E08  C119  F1A3         	movff	?__div_to_l_+2,__doprnt@val+2
 24545  011E0C  C11A  F1A4         	movff	?__div_to_l_+3,__doprnt@val+3
 24546                           
 24547                           ;doprnt.c: 1129: fval = 0.0;
 24548  011E10  0E00               	movlw	0
 24549  011E12  0101               	movlb	1	; () banked
 24550  011E14  6F9D               	movwf	__doprnt@fval& (0+255),b
 24551  011E16  0E00               	movlw	0
 24552  011E18  6F9E               	movwf	(__doprnt@fval+1)& (0+255),b
 24553  011E1A  0E00               	movlw	0
 24554  011E1C  6F9F               	movwf	(__doprnt@fval+2)& (0+255),b
 24555  011E1E  0E00               	movlw	0
 24556  011E20  6FA0               	movwf	(__doprnt@fval+3)& (0+255),b
 24557                           
 24558                           ;doprnt.c: 1130: } else {
 24559  011E22  D03C               	goto	l2004
 24560  011E24                     l1995:
 24561                           
 24562                           ; BSR set to: 1
 24563                           ;doprnt.c: 1131: val = (unsigned long)fval;
 24564                           
 24565                           ; BSR set to: 1
 24566  011E24  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24567  011E28  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24568  011E2C  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24569  011E30  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24570  011E34  EC08  F0C9         	call	___fltol	;wreg free
 24571  011E38  C178  F1A1         	movff	?___fltol,__doprnt@val
 24572  011E3C  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 24573  011E40  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 24574  011E44  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 24575                           
 24576                           ;doprnt.c: 1132: fval -= (double)val;
 24577  011E48  C19D  F13D         	movff	__doprnt@fval,___flsub@b
 24578  011E4C  C19E  F13E         	movff	__doprnt@fval+1,___flsub@b+1
 24579  011E50  C19F  F13F         	movff	__doprnt@fval+2,___flsub@b+2
 24580  011E54  C1A0  F140         	movff	__doprnt@fval+3,___flsub@b+3
 24581  011E58  C1A1  F117         	movff	__doprnt@val,___xxtofl@val
 24582  011E5C  C1A2  F118         	movff	__doprnt@val+1,___xxtofl@val+1
 24583  011E60  C1A3  F119         	movff	__doprnt@val+2,___xxtofl@val+2
 24584  011E64  C1A4  F11A         	movff	__doprnt@val+3,___xxtofl@val+3
 24585  011E68  0E00               	movlw	0
 24586  011E6A  ECE4  F0C0         	call	___xxtofl
 24587  011E6E  C117  F141         	movff	?___xxtofl,___flsub@a
 24588  011E72  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 24589  011E76  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 24590  011E7A  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 24591  011E7E  EC4A  F0D3         	call	___flsub	;wreg free
 24592  011E82  C13D  F19D         	movff	?___flsub,__doprnt@fval
 24593  011E86  C13E  F19E         	movff	?___flsub+1,__doprnt@fval+1
 24594  011E8A  C13F  F19F         	movff	?___flsub+2,__doprnt@fval+2
 24595  011E8E  C140  F1A0         	movff	?___flsub+3,__doprnt@fval+3
 24596                           
 24597                           ;doprnt.c: 1133: exp = 0;
 24598  011E92  0E00               	movlw	0
 24599  011E94  0101               	movlb	1	; () banked
 24600  011E96  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24601  011E98  0E00               	movlw	0
 24602  011E9A  6F97               	movwf	__doprnt@exp& (0+255),b
 24603  011E9C                     l2004:
 24604                           
 24605                           ; BSR set to: 1
 24606                           ;doprnt.c: 1134: }
 24607                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 24608                           
 24609                           ; BSR set to: 1
 24610  011E9C  0E01               	movlw	1
 24611  011E9E  6FAB               	movwf	__doprnt@c& (0+255),b
 24612  011EA0                     l21926:
 24613                           
 24614                           ; BSR set to: 1
 24615  011EA0  0E0A               	movlw	10
 24616  011EA2  19AB               	xorwf	__doprnt@c& (0+255),w,b
 24617  011EA4  B4D8               	btfsc	status,2,c
 24618  011EA6  D01B               	goto	u31450
 24619                           
 24620                           ; BSR set to: 1
 24621                           ;doprnt.c: 1137: if(val < dpowers[c])
 24622                           
 24623                           ; BSR set to: 1
 24624                           
 24625                           ; BSR set to: 1
 24626  011EA8  51AB               	movf	__doprnt@c& (0+255),w,b
 24627  011EAA  0D04               	mullw	4
 24628  011EAC  0E0F               	movlw	low _dpowers
 24629  011EAE  24F3               	addwf	prodl,w,c
 24630  011EB0  6EF6               	movwf	tblptrl,c
 24631  011EB2  0ECF               	movlw	high _dpowers
 24632  011EB4  20F4               	addwfc	prodh,w,c
 24633  011EB6  6EF7               	movwf	tblptrh,c
 24634  011EB8                     	if	1	;There are 3 active tblptr bytes
 24635  011EB8  6AF8               	clrf	tblptru,c
 24636  011EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 24637  011EBC  22F8               	addwfc	tblptru,f,c
 24638  011EBE                     	endif
 24639  011EBE  0009               	tblrd		*+
 24640  011EC0  50F5               	movf	tablat,w,c
 24641  011EC2  5DA1               	subwf	__doprnt@val& (0+255),w,b
 24642  011EC4  0009               	tblrd		*+
 24643  011EC6  50F5               	movf	tablat,w,c
 24644  011EC8  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24645  011ECA  0009               	tblrd		*+
 24646  011ECC  50F5               	movf	tablat,w,c
 24647  011ECE  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24648  011ED0  0009               	tblrd		*+
 24649  011ED2  50F5               	movf	tablat,w,c
 24650  011ED4  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24651  011ED6  A0D8               	btfss	status,0,c
 24652  011ED8  D002               	goto	u31450
 24653                           
 24654                           ; BSR set to: 1
 24655                           
 24656                           ; BSR set to: 1
 24657                           
 24658                           ; BSR set to: 1
 24659                           ;doprnt.c: 1138: break;
 24660  011EDA  2BAB               	incf	__doprnt@c& (0+255),f,b
 24661  011EDC  D7E1               	goto	l21926
 24662  011EDE                     u31450:
 24663                           
 24664                           ; BSR set to: 1
 24665                           ;doprnt.c: 1142: width -= prec + c + exp;
 24666                           
 24667                           ; BSR set to: 1
 24668  011EDE  C1AB  F188         	movff	__doprnt@c,??__doprnt
 24669  011EE2  6B89               	clrf	(??__doprnt+1)& (0+255),b
 24670  011EE4  BF88               	btfsc	??__doprnt& (0+255),7,b
 24671  011EE6  0789               	decf	(??__doprnt+1)& (0+255),f,b
 24672  011EE8  51A9               	movf	__doprnt@prec& (0+255),w,b
 24673  011EEA  2788               	addwf	??__doprnt& (0+255),f,b
 24674  011EEC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24675  011EEE  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24676  011EF0  5197               	movf	__doprnt@exp& (0+255),w,b
 24677  011EF2  2788               	addwf	??__doprnt& (0+255),f,b
 24678  011EF4  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24679  011EF6  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24680  011EF8  5188               	movf	??__doprnt& (0+255),w,b
 24681  011EFA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 24682  011EFC  5189               	movf	(??__doprnt+1)& (0+255),w,b
 24683  011EFE  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 24684                           
 24685                           ;doprnt.c: 1143: if(
 24686                           ;doprnt.c: 1147: prec)
 24687  011F00  51A9               	movf	__doprnt@prec& (0+255),w,b
 24688  011F02  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24689  011F04  B4D8               	btfsc	status,2,c
 24690  011F06  D003               	goto	l2008
 24691                           
 24692                           ; BSR set to: 1
 24693                           ;doprnt.c: 1148: width--;
 24694  011F08  07A5               	decf	__doprnt@width& (0+255),f,b
 24695  011F0A  A0D8               	btfss	status,0,c
 24696  011F0C  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24697  011F0E                     l2008:
 24698                           
 24699                           ; BSR set to: 1
 24700                           ;doprnt.c: 1149: if(flag & 0x03)
 24701                           
 24702                           ; BSR set to: 1
 24703  011F0E  0E03               	movlw	3
 24704  011F10  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24705  011F12  6F88               	movwf	??__doprnt& (0+255),b
 24706  011F14  0E00               	movlw	0
 24707  011F16  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24708  011F18  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24709  011F1A  5188               	movf	??__doprnt& (0+255),w,b
 24710  011F1C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24711  011F1E  B4D8               	btfsc	status,2,c
 24712  011F20  D003               	goto	l2009
 24713                           
 24714                           ; BSR set to: 1
 24715                           ;doprnt.c: 1150: width--;
 24716  011F22  07A5               	decf	__doprnt@width& (0+255),f,b
 24717  011F24  A0D8               	btfss	status,0,c
 24718  011F26  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24719  011F28                     l2009:
 24720                           
 24721                           ; BSR set to: 1
 24722                           ;doprnt.c: 1153: if(flag & 0x04) {
 24723                           
 24724                           ; BSR set to: 1
 24725  011F28  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 24726  011F2A  D0B6               	goto	l2020
 24727                           
 24728                           ; BSR set to: 1
 24729                           ;doprnt.c: 1157: if(flag & 0x03)
 24730  011F2C  0E03               	movlw	3
 24731  011F2E  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24732  011F30  6F88               	movwf	??__doprnt& (0+255),b
 24733  011F32  0E00               	movlw	0
 24734  011F34  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24735  011F36  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24736  011F38  5188               	movf	??__doprnt& (0+255),w,b
 24737  011F3A  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24738  011F3C  B4D8               	btfsc	status,2,c
 24739  011F3E  D06C               	goto	l2014
 24740                           
 24741                           ; BSR set to: 1
 24742                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24743  011F40  EE20 F002          	lfsr	2,2
 24744  011F44  5182               	movf	__doprnt@pb& (0+255),w,b
 24745  011F46  26D9               	addwf	fsr2l,f,c
 24746  011F48  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24747  011F4A  22DA               	addwfc	fsr2h,f,c
 24748  011F4C  50DE               	movf	postinc2,w,c
 24749  011F4E  10DE               	iorwf	postinc2,w,c
 24750  011F50  10DE               	iorwf	postinc2,w,c
 24751  011F52  B4D8               	btfsc	status,2,c
 24752  011F54  D013               	goto	l2012
 24753                           
 24754                           ; BSR set to: 1
 24755  011F56  EE20 F002          	lfsr	2,2
 24756  011F5A  5182               	movf	__doprnt@pb& (0+255),w,b
 24757  011F5C  26D9               	addwf	fsr2l,f,c
 24758  011F5E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24759  011F60  22DA               	addwfc	fsr2h,f,c
 24760  011F62  D801               	call	u31518
 24761  011F64  D059               	goto	l2014
 24762  011F66                     u31518:
 24763  011F66  0005               	push	
 24764  011F68  6EFA               	movwf	pclath,c
 24765  011F6A  50DE               	movf	postinc2,w,c
 24766  011F6C  6EFD               	movwf	tosl,c
 24767  011F6E  50DE               	movf	postinc2,w,c
 24768  011F70  6EFE               	movwf	tosh,c
 24769  011F72  50DE               	movf	postinc2,w,c
 24770  011F74  6EFF               	movwf	tosu,c
 24771  011F76  50FA               	movf	pclath,w,c
 24772  011F78  0E2D               	movlw	45
 24773  011F7A  0012               	return		;indir
 24774  011F7C                     l2012:
 24775  011F7C  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24776  011F80  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24777  011F84  CFDE F188          	movff	postinc2,??__doprnt
 24778  011F88  CFDD F189          	movff	postdec2,??__doprnt+1
 24779  011F8C  C188  FFD9         	movff	??__doprnt,fsr2l
 24780  011F90  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24781  011F94  0E2D               	movlw	45
 24782  011F96  6EDF               	movwf	indf2,c
 24783  011F98  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24784  011F9C  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24785  011FA0  2ADE               	incf	postinc2,f,c
 24786  011FA2  0E00               	movlw	0
 24787  011FA4  22DD               	addwfc	postdec2,f,c
 24788                           
 24789                           ;doprnt.c: 1168: while(width > 0) {
 24790  011FA6  D038               	goto	l2014
 24791  011FA8                     l21958:
 24792                           
 24793                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 24794  011FA8  0101               	movlb	1	; () banked
 24795  011FAA  EE20 F002          	lfsr	2,2
 24796  011FAE  5182               	movf	__doprnt@pb& (0+255),w,b
 24797  011FB0  26D9               	addwf	fsr2l,f,c
 24798  011FB2  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24799  011FB4  22DA               	addwfc	fsr2h,f,c
 24800  011FB6  50DE               	movf	postinc2,w,c
 24801  011FB8  10DE               	iorwf	postinc2,w,c
 24802  011FBA  10DE               	iorwf	postinc2,w,c
 24803  011FBC  B4D8               	btfsc	status,2,c
 24804  011FBE  D013               	goto	l2016
 24805                           
 24806                           ; BSR set to: 1
 24807  011FC0  EE20 F002          	lfsr	2,2
 24808  011FC4  5182               	movf	__doprnt@pb& (0+255),w,b
 24809  011FC6  26D9               	addwf	fsr2l,f,c
 24810  011FC8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24811  011FCA  22DA               	addwfc	fsr2h,f,c
 24812  011FCC  D801               	call	u31538
 24813  011FCE  D020               	goto	l2017
 24814  011FD0                     u31538:
 24815  011FD0  0005               	push	
 24816  011FD2  6EFA               	movwf	pclath,c
 24817  011FD4  50DE               	movf	postinc2,w,c
 24818  011FD6  6EFD               	movwf	tosl,c
 24819  011FD8  50DE               	movf	postinc2,w,c
 24820  011FDA  6EFE               	movwf	tosh,c
 24821  011FDC  50DE               	movf	postinc2,w,c
 24822  011FDE  6EFF               	movwf	tosu,c
 24823  011FE0  50FA               	movf	pclath,w,c
 24824  011FE2  0E30               	movlw	48
 24825  011FE4  0012               	return		;indir
 24826  011FE6                     l2016:
 24827  011FE6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24828  011FEA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24829  011FEE  CFDE F188          	movff	postinc2,??__doprnt
 24830  011FF2  CFDD F189          	movff	postdec2,??__doprnt+1
 24831  011FF6  C188  FFD9         	movff	??__doprnt,fsr2l
 24832  011FFA  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24833  011FFE  0E30               	movlw	48
 24834  012000  6EDF               	movwf	indf2,c
 24835  012002  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24836  012006  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24837  01200A  2ADE               	incf	postinc2,f,c
 24838  01200C  0E00               	movlw	0
 24839  01200E  22DD               	addwfc	postdec2,f,c
 24840  012010                     l2017:
 24841                           
 24842                           ;doprnt.c: 1170: width--;
 24843  012010  0101               	movlb	1	; () banked
 24844  012012  07A5               	decf	__doprnt@width& (0+255),f,b
 24845  012014  A0D8               	btfss	status,0,c
 24846  012016  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24847  012018                     l2014:
 24848                           
 24849                           ; BSR set to: 1
 24850  012018  0101               	movlb	1	; () banked
 24851  01201A  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24852  01201C  D0F6               	goto	l2031
 24853  01201E  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24854  012020  E1C3               	bnz	l21958
 24855  012022  05A5               	decf	__doprnt@width& (0+255),w,b
 24856  012024  A0D8               	btfss	status,0,c
 24857  012026  D0F1               	goto	l2031
 24858  012028  D7BF               	goto	l2015
 24859  01202A                     l21970:
 24860                           
 24861                           ; BSR set to: 1
 24862                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 24863  01202A  EE20 F002          	lfsr	2,2
 24864  01202E  5182               	movf	__doprnt@pb& (0+255),w,b
 24865  012030  26D9               	addwf	fsr2l,f,c
 24866  012032  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24867  012034  22DA               	addwfc	fsr2h,f,c
 24868  012036  50DE               	movf	postinc2,w,c
 24869  012038  10DE               	iorwf	postinc2,w,c
 24870  01203A  10DE               	iorwf	postinc2,w,c
 24871  01203C  B4D8               	btfsc	status,2,c
 24872  01203E  D013               	goto	l2022
 24873                           
 24874                           ; BSR set to: 1
 24875  012040  EE20 F002          	lfsr	2,2
 24876  012044  5182               	movf	__doprnt@pb& (0+255),w,b
 24877  012046  26D9               	addwf	fsr2l,f,c
 24878  012048  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24879  01204A  22DA               	addwfc	fsr2h,f,c
 24880  01204C  D801               	call	u31568
 24881  01204E  D020               	goto	l2023
 24882  012050                     u31568:
 24883  012050  0005               	push	
 24884  012052  6EFA               	movwf	pclath,c
 24885  012054  50DE               	movf	postinc2,w,c
 24886  012056  6EFD               	movwf	tosl,c
 24887  012058  50DE               	movf	postinc2,w,c
 24888  01205A  6EFE               	movwf	tosh,c
 24889  01205C  50DE               	movf	postinc2,w,c
 24890  01205E  6EFF               	movwf	tosu,c
 24891  012060  50FA               	movf	pclath,w,c
 24892  012062  0E20               	movlw	32
 24893  012064  0012               	return		;indir
 24894  012066                     l2022:
 24895  012066  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24896  01206A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24897  01206E  CFDE F188          	movff	postinc2,??__doprnt
 24898  012072  CFDD F189          	movff	postdec2,??__doprnt+1
 24899  012076  C188  FFD9         	movff	??__doprnt,fsr2l
 24900  01207A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24901  01207E  0E20               	movlw	32
 24902  012080  6EDF               	movwf	indf2,c
 24903  012082  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24904  012086  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24905  01208A  2ADE               	incf	postinc2,f,c
 24906  01208C  0E00               	movlw	0
 24907  01208E  22DD               	addwfc	postdec2,f,c
 24908  012090                     l2023:
 24909                           
 24910                           ;doprnt.c: 1182: width--;
 24911  012090  0101               	movlb	1	; () banked
 24912  012092  07A5               	decf	__doprnt@width& (0+255),f,b
 24913  012094  A0D8               	btfss	status,0,c
 24914  012096  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24915  012098                     l2020:
 24916                           
 24917                           ; BSR set to: 1
 24918                           
 24919                           ; BSR set to: 1
 24920  012098  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24921  01209A  D005               	goto	u31570
 24922  01209C  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24923  01209E  E1C5               	bnz	l21970
 24924  0120A0  05A5               	decf	__doprnt@width& (0+255),w,b
 24925  0120A2  B0D8               	btfsc	status,0,c
 24926  0120A4  D7C2               	goto	l2021
 24927  0120A6                     u31570:
 24928                           
 24929                           ; BSR set to: 1
 24930                           ;doprnt.c: 1183: }
 24931                           ;doprnt.c: 1188: if(flag & 0x03)
 24932                           
 24933                           ; BSR set to: 1
 24934  0120A6  0E03               	movlw	3
 24935  0120A8  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24936  0120AA  6F88               	movwf	??__doprnt& (0+255),b
 24937  0120AC  0E00               	movlw	0
 24938  0120AE  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24939  0120B0  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24940  0120B2  5188               	movf	??__doprnt& (0+255),w,b
 24941  0120B4  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24942  0120B6  B4D8               	btfsc	status,2,c
 24943  0120B8  D0A8               	goto	l2031
 24944                           
 24945                           ; BSR set to: 1
 24946                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24947  0120BA  EE20 F002          	lfsr	2,2
 24948  0120BE  5182               	movf	__doprnt@pb& (0+255),w,b
 24949  0120C0  26D9               	addwf	fsr2l,f,c
 24950  0120C2  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24951  0120C4  22DA               	addwfc	fsr2h,f,c
 24952  0120C6  50DE               	movf	postinc2,w,c
 24953  0120C8  10DE               	iorwf	postinc2,w,c
 24954  0120CA  10DE               	iorwf	postinc2,w,c
 24955  0120CC  B4D8               	btfsc	status,2,c
 24956  0120CE  D013               	goto	l2026
 24957                           
 24958                           ; BSR set to: 1
 24959  0120D0  EE20 F002          	lfsr	2,2
 24960  0120D4  5182               	movf	__doprnt@pb& (0+255),w,b
 24961  0120D6  26D9               	addwf	fsr2l,f,c
 24962  0120D8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24963  0120DA  22DA               	addwfc	fsr2h,f,c
 24964  0120DC  D801               	call	u31608
 24965  0120DE  D095               	goto	l2031
 24966  0120E0                     u31608:
 24967  0120E0  0005               	push	
 24968  0120E2  6EFA               	movwf	pclath,c
 24969  0120E4  50DE               	movf	postinc2,w,c
 24970  0120E6  6EFD               	movwf	tosl,c
 24971  0120E8  50DE               	movf	postinc2,w,c
 24972  0120EA  6EFE               	movwf	tosh,c
 24973  0120EC  50DE               	movf	postinc2,w,c
 24974  0120EE  6EFF               	movwf	tosu,c
 24975  0120F0  50FA               	movf	pclath,w,c
 24976  0120F2  0E2D               	movlw	45
 24977  0120F4  0012               	return		;indir
 24978  0120F6                     l2026:
 24979  0120F6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24980  0120FA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24981  0120FE  CFDE F188          	movff	postinc2,??__doprnt
 24982  012102  CFDD F189          	movff	postdec2,??__doprnt+1
 24983  012106  C188  FFD9         	movff	??__doprnt,fsr2l
 24984  01210A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24985  01210E  0E2D               	movlw	45
 24986  012110  D074               	goto	L4
 24987  012112                     
 24988                           ;doprnt.c: 1200: {
 24989                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 24990  012112  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 24991  012116  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 24992  01211A  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 24993  01211E  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 24994  012122  0101               	movlb	1	; () banked
 24995  012124  51AB               	movf	__doprnt@c& (0+255),w,b
 24996  012126  0D04               	mullw	4
 24997  012128  0E0F               	movlw	low _dpowers
 24998  01212A  24F3               	addwf	prodl,w,c
 24999  01212C  6EF6               	movwf	tblptrl,c
 25000  01212E  0ECF               	movlw	high _dpowers
 25001  012130  20F4               	addwfc	prodh,w,c
 25002  012132  6EF7               	movwf	tblptrh,c
 25003  012134                     	if	1	;There are 3 active tblptr bytes
 25004  012134  6AF8               	clrf	tblptru,c
 25005  012136  0E00               	movlw	low (__mediumconst shr (0+16))
 25006  012138  22F8               	addwfc	tblptru,f,c
 25007  01213A                     	endif
 25008  01213A  0009               	tblrd		*+
 25009  01213C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25010  012140  0009               	tblrd		*+
 25011  012142  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25012  012146  0009               	tblrd		*+
 25013  012148  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25014  01214C  000A               	tblrd		*-
 25015  01214E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25016  012152  EC6E  F0CD         	call	___lldiv
 25017  012156  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 25018  01215A  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 25019  01215E  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 25020  012162  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 25021                           
 25022                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25023  012166  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 25024  01216A  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 25025  01216E  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 25026  012172  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 25027  012176  0E0A               	movlw	10
 25028  012178  0101               	movlb	1	; () banked
 25029  01217A  6F28               	movwf	___llmod@divisor& (0+255),b
 25030  01217C  0E00               	movlw	0
 25031  01217E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25032  012180  0E00               	movlw	0
 25033  012182  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25034  012184  0E00               	movlw	0
 25035  012186  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25036  012188  EC00  F0D0         	call	___llmod	;wreg free
 25037  01218C  C124  F199         	movff	?___llmod,__doprnt@tmpval
 25038  012190  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 25039  012194  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 25040  012198  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 25041                           
 25042                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 25043  01219C  0101               	movlb	1	; () banked
 25044  01219E  EE20 F002          	lfsr	2,2
 25045  0121A2  5182               	movf	__doprnt@pb& (0+255),w,b
 25046  0121A4  26D9               	addwf	fsr2l,f,c
 25047  0121A6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25048  0121A8  22DA               	addwfc	fsr2h,f,c
 25049  0121AA  50DE               	movf	postinc2,w,c
 25050  0121AC  10DE               	iorwf	postinc2,w,c
 25051  0121AE  10DE               	iorwf	postinc2,w,c
 25052  0121B0  B4D8               	btfsc	status,2,c
 25053  0121B2  D014               	goto	l2030
 25054                           
 25055                           ; BSR set to: 1
 25056  0121B4  EE20 F002          	lfsr	2,2
 25057  0121B8  5182               	movf	__doprnt@pb& (0+255),w,b
 25058  0121BA  26D9               	addwf	fsr2l,f,c
 25059  0121BC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25060  0121BE  22DA               	addwfc	fsr2h,f,c
 25061  0121C0  D801               	call	u31628
 25062  0121C2  D023               	goto	l2031
 25063  0121C4                     u31628:
 25064  0121C4  0005               	push	
 25065  0121C6  6EFA               	movwf	pclath,c
 25066  0121C8  50DE               	movf	postinc2,w,c
 25067  0121CA  6EFD               	movwf	tosl,c
 25068  0121CC  50DE               	movf	postinc2,w,c
 25069  0121CE  6EFE               	movwf	tosh,c
 25070  0121D0  50DE               	movf	postinc2,w,c
 25071  0121D2  6EFF               	movwf	tosu,c
 25072  0121D4  50FA               	movf	pclath,w,c
 25073  0121D6  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25074  0121D8  0F30               	addlw	48
 25075  0121DA  0012               	return		;indir
 25076  0121DC                     l2030:
 25077  0121DC  0101               	movlb	1	; () banked
 25078  0121DE  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25079  0121E0  0F30               	addlw	48
 25080  0121E2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25081  0121E6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25082  0121EA  CFDE F188          	movff	postinc2,??__doprnt
 25083  0121EE  CFDD F189          	movff	postdec2,??__doprnt+1
 25084  0121F2  C188  FFD9         	movff	??__doprnt,fsr2l
 25085  0121F6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25086  0121FA                     L4:
 25087  0121FA  6EDF               	movwf	indf2,c
 25088  0121FC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25089  012200  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25090  012204  2ADE               	incf	postinc2,f,c
 25091  012206  0E00               	movlw	0
 25092  012208  22DD               	addwfc	postdec2,f,c
 25093  01220A                     l2031:
 25094                           
 25095                           ; BSR set to: 1
 25096                           
 25097                           ; BSR set to: 1
 25098  01220A  0101               	movlb	1	; () banked
 25099  01220C  07AB               	decf	__doprnt@c& (0+255),f,b
 25100  01220E  29AB               	incf	__doprnt@c& (0+255),w,b
 25101  012210  B4D8               	btfsc	status,2,c
 25102  012212  D038               	goto	l2033
 25103  012214  D77E               	goto	l2029
 25104  012216                     l22004:
 25105                           
 25106                           ; BSR set to: 1
 25107                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25108  012216  EE20 F002          	lfsr	2,2
 25109  01221A  5182               	movf	__doprnt@pb& (0+255),w,b
 25110  01221C  26D9               	addwf	fsr2l,f,c
 25111  01221E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25112  012220  22DA               	addwfc	fsr2h,f,c
 25113  012222  50DE               	movf	postinc2,w,c
 25114  012224  10DE               	iorwf	postinc2,w,c
 25115  012226  10DE               	iorwf	postinc2,w,c
 25116  012228  B4D8               	btfsc	status,2,c
 25117  01222A  D013               	goto	l2035
 25118                           
 25119                           ; BSR set to: 1
 25120  01222C  EE20 F002          	lfsr	2,2
 25121  012230  5182               	movf	__doprnt@pb& (0+255),w,b
 25122  012232  26D9               	addwf	fsr2l,f,c
 25123  012234  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25124  012236  22DA               	addwfc	fsr2h,f,c
 25125  012238  D801               	call	u31658
 25126  01223A  D020               	goto	l2036
 25127  01223C                     u31658:
 25128  01223C  0005               	push	
 25129  01223E  6EFA               	movwf	pclath,c
 25130  012240  50DE               	movf	postinc2,w,c
 25131  012242  6EFD               	movwf	tosl,c
 25132  012244  50DE               	movf	postinc2,w,c
 25133  012246  6EFE               	movwf	tosh,c
 25134  012248  50DE               	movf	postinc2,w,c
 25135  01224A  6EFF               	movwf	tosu,c
 25136  01224C  50FA               	movf	pclath,w,c
 25137  01224E  0E30               	movlw	48
 25138  012250  0012               	return		;indir
 25139  012252                     l2035:
 25140  012252  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25141  012256  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25142  01225A  CFDE F188          	movff	postinc2,??__doprnt
 25143  01225E  CFDD F189          	movff	postdec2,??__doprnt+1
 25144  012262  C188  FFD9         	movff	??__doprnt,fsr2l
 25145  012266  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25146  01226A  0E30               	movlw	48
 25147  01226C  6EDF               	movwf	indf2,c
 25148  01226E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25149  012272  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25150  012276  2ADE               	incf	postinc2,f,c
 25151  012278  0E00               	movlw	0
 25152  01227A  22DD               	addwfc	postdec2,f,c
 25153  01227C                     l2036:
 25154                           
 25155                           ;doprnt.c: 1209: exp--;
 25156  01227C  0101               	movlb	1	; () banked
 25157  01227E  0797               	decf	__doprnt@exp& (0+255),f,b
 25158  012280  A0D8               	btfss	status,0,c
 25159  012282  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 25160  012284                     l2033:
 25161                           
 25162                           ; BSR set to: 1
 25163                           
 25164                           ; BSR set to: 1
 25165  012284  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 25166  012286  D005               	goto	u31660
 25167  012288  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 25168  01228A  E1C5               	bnz	l22004
 25169  01228C  0597               	decf	__doprnt@exp& (0+255),w,b
 25170  01228E  B0D8               	btfsc	status,0,c
 25171  012290  D7C2               	goto	l2034
 25172  012292                     u31660:
 25173                           
 25174                           ; BSR set to: 1
 25175                           ;doprnt.c: 1210: }
 25176                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25177                           
 25178                           ; BSR set to: 1
 25179  012292  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 25180  012294  D009               	goto	l2038
 25181  012296  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25182  012298  E104               	bnz	u31670
 25183  01229A  0E09               	movlw	9
 25184  01229C  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25185  01229E  A0D8               	btfss	status,0,c
 25186  0122A0  D003               	goto	l2038
 25187  0122A2                     u31670:
 25188                           
 25189                           ; BSR set to: 1
 25190                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25191  0122A2  0E08               	movlw	8
 25192  0122A4  6FAB               	movwf	__doprnt@c& (0+255),b
 25193  0122A6  D002               	goto	l2039
 25194  0122A8                     l2038:
 25195                           
 25196                           ; BSR set to: 1
 25197                           ;doprnt.c: 1213: else
 25198                           ;doprnt.c: 1214: c = prec;
 25199  0122A8  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 25200  0122AC                     l2039:
 25201                           
 25202                           ; BSR set to: 1
 25203                           ;doprnt.c: 1215: prec -= c;
 25204                           
 25205                           ; BSR set to: 1
 25206  0122AC  51AB               	movf	__doprnt@c& (0+255),w,b
 25207  0122AE  5FA9               	subwf	__doprnt@prec& (0+255),f,b
 25208  0122B0  0E00               	movlw	0
 25209  0122B2  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25210  0122B4  0EFF               	movlw	255
 25211  0122B6  5BAA               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 25212                           
 25213                           ; BSR set to: 1
 25214                           ;doprnt.c: 1219: if(c)
 25215  0122B8  51AB               	movf	__doprnt@c& (0+255),w,b
 25216  0122BA  B4D8               	btfsc	status,2,c
 25217  0122BC  D033               	goto	l2042
 25218                           
 25219                           ; BSR set to: 1
 25220                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 25221  0122BE  EE20 F002          	lfsr	2,2
 25222  0122C2  5182               	movf	__doprnt@pb& (0+255),w,b
 25223  0122C4  26D9               	addwf	fsr2l,f,c
 25224  0122C6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25225  0122C8  22DA               	addwfc	fsr2h,f,c
 25226  0122CA  50DE               	movf	postinc2,w,c
 25227  0122CC  10DE               	iorwf	postinc2,w,c
 25228  0122CE  10DE               	iorwf	postinc2,w,c
 25229  0122D0  B4D8               	btfsc	status,2,c
 25230  0122D2  D013               	goto	l2041
 25231                           
 25232                           ; BSR set to: 1
 25233  0122D4  EE20 F002          	lfsr	2,2
 25234  0122D8  5182               	movf	__doprnt@pb& (0+255),w,b
 25235  0122DA  26D9               	addwf	fsr2l,f,c
 25236  0122DC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25237  0122DE  22DA               	addwfc	fsr2h,f,c
 25238  0122E0  D801               	call	u31708
 25239  0122E2  D020               	goto	l2042
 25240  0122E4                     u31708:
 25241  0122E4  0005               	push	
 25242  0122E6  6EFA               	movwf	pclath,c
 25243  0122E8  50DE               	movf	postinc2,w,c
 25244  0122EA  6EFD               	movwf	tosl,c
 25245  0122EC  50DE               	movf	postinc2,w,c
 25246  0122EE  6EFE               	movwf	tosh,c
 25247  0122F0  50DE               	movf	postinc2,w,c
 25248  0122F2  6EFF               	movwf	tosu,c
 25249  0122F4  50FA               	movf	pclath,w,c
 25250  0122F6  0E2E               	movlw	46
 25251  0122F8  0012               	return		;indir
 25252  0122FA                     l2041:
 25253  0122FA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25254  0122FE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25255  012302  CFDE F188          	movff	postinc2,??__doprnt
 25256  012306  CFDD F189          	movff	postdec2,??__doprnt+1
 25257  01230A  C188  FFD9         	movff	??__doprnt,fsr2l
 25258  01230E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25259  012312  0E2E               	movlw	46
 25260  012314  6EDF               	movwf	indf2,c
 25261  012316  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25262  01231A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25263  01231E  2ADE               	incf	postinc2,f,c
 25264  012320  0E00               	movlw	0
 25265  012322  22DD               	addwfc	postdec2,f,c
 25266  012324                     l2042:
 25267                           
 25268                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25269  012324  0101               	movlb	1	; () banked
 25270  012326  51AB               	movf	__doprnt@c& (0+255),w,b
 25271  012328  EC9E  F0A5         	call	_scale
 25272  01232C  C16F  F18E         	movff	?_scale,__doprnt$5165
 25273  012330  C170  F18F         	movff	?_scale+1,__doprnt$5165+1
 25274  012334  C171  F190         	movff	?_scale+2,__doprnt$5165+2
 25275  012338  C172  F191         	movff	?_scale+3,__doprnt$5165+3
 25276                           
 25277                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25278  01233C  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 25279  012340  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 25280  012344  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 25281  012348  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 25282  01234C  C18E  F156         	movff	__doprnt$5165,___flmul@b
 25283  012350  C18F  F157         	movff	__doprnt$5165+1,___flmul@b+1
 25284  012354  C190  F158         	movff	__doprnt$5165+2,___flmul@b+2
 25285  012358  C191  F159         	movff	__doprnt$5165+3,___flmul@b+3
 25286  01235C  ECE4  F0AB         	call	___flmul	;wreg free
 25287  012360  C156  F178         	movff	?___flmul,___fltol@f1
 25288  012364  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 25289  012368  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 25290  01236C  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 25291  012370  EC08  F0C9         	call	___fltol	;wreg free
 25292  012374  C178  F1A1         	movff	?___fltol,__doprnt@val
 25293  012378  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 25294  01237C  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 25295  012380  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 25296                           
 25297                           ;doprnt.c: 1228: while(c--) {
 25298  012384  D0A6               	goto	l2043
 25299  012386                     
 25300                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25301  012386  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 25302  01238A  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 25303  01238E  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 25304  012392  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 25305  012396  0101               	movlb	1	; () banked
 25306  012398  51AB               	movf	__doprnt@c& (0+255),w,b
 25307  01239A  0D04               	mullw	4
 25308  01239C  0E0F               	movlw	low _dpowers
 25309  01239E  24F3               	addwf	prodl,w,c
 25310  0123A0  6EF6               	movwf	tblptrl,c
 25311  0123A2  0ECF               	movlw	high _dpowers
 25312  0123A4  20F4               	addwfc	prodh,w,c
 25313  0123A6  6EF7               	movwf	tblptrh,c
 25314  0123A8                     	if	1	;There are 3 active tblptr bytes
 25315  0123A8  6AF8               	clrf	tblptru,c
 25316  0123AA  0E00               	movlw	low (__mediumconst shr (0+16))
 25317  0123AC  22F8               	addwfc	tblptru,f,c
 25318  0123AE                     	endif
 25319  0123AE  0009               	tblrd		*+
 25320  0123B0  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25321  0123B4  0009               	tblrd		*+
 25322  0123B6  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25323  0123BA  0009               	tblrd		*+
 25324  0123BC  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25325  0123C0  000A               	tblrd		*-
 25326  0123C2  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25327  0123C6  EC6E  F0CD         	call	___lldiv	;wreg free
 25328  0123CA  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 25329  0123CE  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 25330  0123D2  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 25331  0123D6  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 25332                           
 25333                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25334  0123DA  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 25335  0123DE  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 25336  0123E2  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 25337  0123E6  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 25338  0123EA  0E0A               	movlw	10
 25339  0123EC  0101               	movlb	1	; () banked
 25340  0123EE  6F28               	movwf	___llmod@divisor& (0+255),b
 25341  0123F0  0E00               	movlw	0
 25342  0123F2  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25343  0123F4  0E00               	movlw	0
 25344  0123F6  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25345  0123F8  0E00               	movlw	0
 25346  0123FA  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25347  0123FC  EC00  F0D0         	call	___llmod	;wreg free
 25348  012400  C124  F199         	movff	?___llmod,__doprnt@tmpval
 25349  012404  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 25350  012408  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 25351  01240C  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 25352                           
 25353                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 25354  012410  0101               	movlb	1	; () banked
 25355  012412  EE20 F002          	lfsr	2,2
 25356  012416  5182               	movf	__doprnt@pb& (0+255),w,b
 25357  012418  26D9               	addwf	fsr2l,f,c
 25358  01241A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25359  01241C  22DA               	addwfc	fsr2h,f,c
 25360  01241E  50DE               	movf	postinc2,w,c
 25361  012420  10DE               	iorwf	postinc2,w,c
 25362  012422  10DE               	iorwf	postinc2,w,c
 25363  012424  B4D8               	btfsc	status,2,c
 25364  012426  D014               	goto	l2045
 25365                           
 25366                           ; BSR set to: 1
 25367  012428  EE20 F002          	lfsr	2,2
 25368  01242C  5182               	movf	__doprnt@pb& (0+255),w,b
 25369  01242E  26D9               	addwf	fsr2l,f,c
 25370  012430  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25371  012432  22DA               	addwfc	fsr2h,f,c
 25372  012434  D801               	call	u31728
 25373  012436  D023               	goto	l2046
 25374  012438                     u31728:
 25375  012438  0005               	push	
 25376  01243A  6EFA               	movwf	pclath,c
 25377  01243C  50DE               	movf	postinc2,w,c
 25378  01243E  6EFD               	movwf	tosl,c
 25379  012440  50DE               	movf	postinc2,w,c
 25380  012442  6EFE               	movwf	tosh,c
 25381  012444  50DE               	movf	postinc2,w,c
 25382  012446  6EFF               	movwf	tosu,c
 25383  012448  50FA               	movf	pclath,w,c
 25384  01244A  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25385  01244C  0F30               	addlw	48
 25386  01244E  0012               	return		;indir
 25387  012450                     l2045:
 25388  012450  0101               	movlb	1	; () banked
 25389  012452  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25390  012454  0F30               	addlw	48
 25391  012456  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25392  01245A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25393  01245E  CFDE F188          	movff	postinc2,??__doprnt
 25394  012462  CFDD F189          	movff	postdec2,??__doprnt+1
 25395  012466  C188  FFD9         	movff	??__doprnt,fsr2l
 25396  01246A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25397  01246E  6EDF               	movwf	indf2,c
 25398  012470  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25399  012474  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25400  012478  2ADE               	incf	postinc2,f,c
 25401  01247A  0E00               	movlw	0
 25402  01247C  22DD               	addwfc	postdec2,f,c
 25403  01247E                     l2046:
 25404                           
 25405                           ;doprnt.c: 1232: val %= dpowers[c];
 25406                           
 25407                           ; BSR set to: 1
 25408  01247E  C1A1  F124         	movff	__doprnt@val,___llmod@dividend
 25409  012482  C1A2  F125         	movff	__doprnt@val+1,___llmod@dividend+1
 25410  012486  C1A3  F126         	movff	__doprnt@val+2,___llmod@dividend+2
 25411  01248A  C1A4  F127         	movff	__doprnt@val+3,___llmod@dividend+3
 25412  01248E  0101               	movlb	1	; () banked
 25413  012490  51AB               	movf	__doprnt@c& (0+255),w,b
 25414  012492  0D04               	mullw	4
 25415  012494  0E0F               	movlw	low _dpowers
 25416  012496  24F3               	addwf	prodl,w,c
 25417  012498  6EF6               	movwf	tblptrl,c
 25418  01249A  0ECF               	movlw	high _dpowers
 25419  01249C  20F4               	addwfc	prodh,w,c
 25420  01249E  6EF7               	movwf	tblptrh,c
 25421  0124A0                     	if	1	;There are 3 active tblptr bytes
 25422  0124A0  6AF8               	clrf	tblptru,c
 25423  0124A2  0E00               	movlw	low (__mediumconst shr (0+16))
 25424  0124A4  22F8               	addwfc	tblptru,f,c
 25425  0124A6                     	endif
 25426  0124A6  0009               	tblrd		*+
 25427  0124A8  CFF5 F128          	movff	tablat,___llmod@divisor
 25428  0124AC  0009               	tblrd		*+
 25429  0124AE  CFF5 F129          	movff	tablat,___llmod@divisor+1
 25430  0124B2  0009               	tblrd		*+
 25431  0124B4  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 25432  0124B8  000A               	tblrd		*-
 25433  0124BA  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 25434  0124BE  EC00  F0D0         	call	___llmod
 25435  0124C2  C124  F1A1         	movff	?___llmod,__doprnt@val
 25436  0124C6  C125  F1A2         	movff	?___llmod+1,__doprnt@val+1
 25437  0124CA  C126  F1A3         	movff	?___llmod+2,__doprnt@val+2
 25438  0124CE  C127  F1A4         	movff	?___llmod+3,__doprnt@val+3
 25439  0124D2                     l2043:
 25440  0124D2  0101               	movlb	1	; () banked
 25441  0124D4  07AB               	decf	__doprnt@c& (0+255),f,b
 25442  0124D6  29AB               	incf	__doprnt@c& (0+255),w,b
 25443  0124D8  B4D8               	btfsc	status,2,c
 25444  0124DA  D038               	goto	l2048
 25445  0124DC  D754               	goto	l2044
 25446  0124DE                     
 25447                           ; BSR set to: 1
 25448                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25449                           
 25450                           ; BSR set to: 1
 25451  0124DE  EE20 F002          	lfsr	2,2
 25452  0124E2  5182               	movf	__doprnt@pb& (0+255),w,b
 25453  0124E4  26D9               	addwf	fsr2l,f,c
 25454  0124E6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25455  0124E8  22DA               	addwfc	fsr2h,f,c
 25456  0124EA  50DE               	movf	postinc2,w,c
 25457  0124EC  10DE               	iorwf	postinc2,w,c
 25458  0124EE  10DE               	iorwf	postinc2,w,c
 25459  0124F0  B4D8               	btfsc	status,2,c
 25460  0124F2  D013               	goto	l2050
 25461                           
 25462                           ; BSR set to: 1
 25463  0124F4  EE20 F002          	lfsr	2,2
 25464  0124F8  5182               	movf	__doprnt@pb& (0+255),w,b
 25465  0124FA  26D9               	addwf	fsr2l,f,c
 25466  0124FC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25467  0124FE  22DA               	addwfc	fsr2h,f,c
 25468  012500  D801               	call	u31758
 25469  012502  D020               	goto	l2051
 25470  012504                     u31758:
 25471  012504  0005               	push	
 25472  012506  6EFA               	movwf	pclath,c
 25473  012508  50DE               	movf	postinc2,w,c
 25474  01250A  6EFD               	movwf	tosl,c
 25475  01250C  50DE               	movf	postinc2,w,c
 25476  01250E  6EFE               	movwf	tosh,c
 25477  012510  50DE               	movf	postinc2,w,c
 25478  012512  6EFF               	movwf	tosu,c
 25479  012514  50FA               	movf	pclath,w,c
 25480  012516  0E30               	movlw	48
 25481  012518  0012               	return		;indir
 25482  01251A                     l2050:
 25483  01251A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25484  01251E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25485  012522  CFDE F188          	movff	postinc2,??__doprnt
 25486  012526  CFDD F189          	movff	postdec2,??__doprnt+1
 25487  01252A  C188  FFD9         	movff	??__doprnt,fsr2l
 25488  01252E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25489  012532  0E30               	movlw	48
 25490  012534  6EDF               	movwf	indf2,c
 25491  012536  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25492  01253A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25493  01253E  2ADE               	incf	postinc2,f,c
 25494  012540  0E00               	movlw	0
 25495  012542  22DD               	addwfc	postdec2,f,c
 25496  012544                     l2051:
 25497                           
 25498                           ;doprnt.c: 1237: prec--;
 25499  012544  0101               	movlb	1	; () banked
 25500  012546  07A9               	decf	__doprnt@prec& (0+255),f,b
 25501  012548  A0D8               	btfss	status,0,c
 25502  01254A  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25503  01254C                     l2048:
 25504                           
 25505                           ; BSR set to: 1
 25506                           
 25507                           ; BSR set to: 1
 25508  01254C  51A9               	movf	__doprnt@prec& (0+255),w,b
 25509  01254E  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25510  012550  B4D8               	btfsc	status,2,c
 25511  012552  D2ED               	goto	u32130
 25512  012554  D7C4               	goto	l2049
 25513  012556                     l1986:
 25514                           
 25515                           ; BSR set to: 1
 25516                           ;doprnt.c: 1246: }
 25517                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25518                           
 25519                           ; BSR set to: 1
 25520  012556  0EC0               	movlw	192
 25521  012558  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25522  01255A  6F88               	movwf	??__doprnt& (0+255),b
 25523  01255C  0E00               	movlw	0
 25524  01255E  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25525  012560  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25526  012562  5188               	movf	??__doprnt& (0+255),w,b
 25527  012564  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25528  012566  A4D8               	btfss	status,2,c
 25529  012568  D041               	goto	l2053
 25530                           
 25531                           ; BSR set to: 1
 25532                           ;doprnt.c: 1253: {
 25533                           ;doprnt.c: 1255: if(flag & 0x10)
 25534  01256A  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25535  01256C  D019               	goto	l2054
 25536                           
 25537                           ; BSR set to: 1
 25538                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 25539  01256E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25540  012572  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25541  012576  CFDF F188          	movff	indf2,??__doprnt
 25542  01257A  0E04               	movlw	4
 25543  01257C  26DE               	addwf	postinc2,f,c
 25544  01257E  CFDF F189          	movff	indf2,??__doprnt+1
 25545  012582  0E00               	movlw	0
 25546  012584  22DD               	addwfc	postdec2,f,c
 25547  012586  C188  FFD9         	movff	??__doprnt,fsr2l
 25548  01258A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25549  01258E  CFDE F1A1          	movff	postinc2,__doprnt@val
 25550  012592  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25551  012596  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25552  01259A  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25553  01259E  D019               	goto	l2055
 25554  0125A0                     l2054:
 25555                           
 25556                           ; BSR set to: 1
 25557                           ;doprnt.c: 1257: else
 25558                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25559                           
 25560                           ; BSR set to: 1
 25561  0125A0  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25562  0125A4  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25563  0125A8  CFDF F188          	movff	indf2,??__doprnt
 25564  0125AC  0E02               	movlw	2
 25565  0125AE  26DE               	addwf	postinc2,f,c
 25566  0125B0  CFDF F189          	movff	indf2,??__doprnt+1
 25567  0125B4  0E00               	movlw	0
 25568  0125B6  22DD               	addwfc	postdec2,f,c
 25569  0125B8  C188  FFD9         	movff	??__doprnt,fsr2l
 25570  0125BC  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25571  0125C0  CFDE F1A1          	movff	postinc2,__doprnt@val
 25572  0125C4  CFDD F1A2          	movff	postdec2,__doprnt@val+1
 25573  0125C8  0E00               	movlw	0
 25574  0125CA  BFA2               	btfsc	(__doprnt@val+1)& (0+255),7,b
 25575  0125CC  0EFF               	movlw	-1
 25576  0125CE  6FA3               	movwf	(__doprnt@val+2)& (0+255),b
 25577  0125D0  6FA4               	movwf	(__doprnt@val+3)& (0+255),b
 25578  0125D2                     l2055:
 25579                           
 25580                           ; BSR set to: 1
 25581                           ;doprnt.c: 1261: if((long)val < 0) {
 25582                           
 25583                           ; BSR set to: 1
 25584  0125D2  AFA4               	btfss	(__doprnt@val+3)& (0+255),7,b
 25585  0125D4  D040               	goto	l2059
 25586                           
 25587                           ; BSR set to: 1
 25588                           ;doprnt.c: 1262: flag |= 0x03;
 25589  0125D6  0E03               	movlw	3
 25590  0125D8  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 25591                           
 25592                           ; BSR set to: 1
 25593                           ;doprnt.c: 1263: val = -val;
 25594  0125DA  1FA4               	comf	(__doprnt@val+3)& (0+255),f,b
 25595  0125DC  1FA3               	comf	(__doprnt@val+2)& (0+255),f,b
 25596  0125DE  1FA2               	comf	(__doprnt@val+1)& (0+255),f,b
 25597  0125E0  6DA1               	negf	__doprnt@val& (0+255),b
 25598  0125E2  0E00               	movlw	0
 25599  0125E4  23A2               	addwfc	(__doprnt@val+1)& (0+255),f,b
 25600  0125E6  23A3               	addwfc	(__doprnt@val+2)& (0+255),f,b
 25601  0125E8  23A4               	addwfc	(__doprnt@val+3)& (0+255),f,b
 25602                           
 25603                           ; BSR set to: 1
 25604                           ;doprnt.c: 1264: }
 25605                           ;doprnt.c: 1266: }
 25606  0125EA  D035               	goto	l2059
 25607  0125EC                     l2053:
 25608                           
 25609                           ; BSR set to: 1
 25610                           ;doprnt.c: 1268: else
 25611                           ;doprnt.c: 1273: {
 25612                           ;doprnt.c: 1281: if(flag & 0x10)
 25613  0125EC  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25614  0125EE  D019               	goto	l2058
 25615                           
 25616                           ; BSR set to: 1
 25617                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 25618  0125F0  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25619  0125F4  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25620  0125F8  CFDF F188          	movff	indf2,??__doprnt
 25621  0125FC  0E04               	movlw	4
 25622  0125FE  26DE               	addwf	postinc2,f,c
 25623  012600  CFDF F189          	movff	indf2,??__doprnt+1
 25624  012604  0E00               	movlw	0
 25625  012606  22DD               	addwfc	postdec2,f,c
 25626  012608  C188  FFD9         	movff	??__doprnt,fsr2l
 25627  01260C  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25628  012610  CFDE F1A1          	movff	postinc2,__doprnt@val
 25629  012614  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25630  012618  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25631  01261C  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25632  012620  D01A               	goto	l2059
 25633  012622                     l2058:
 25634                           
 25635                           ; BSR set to: 1
 25636                           ;doprnt.c: 1283: else
 25637                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25638                           
 25639                           ; BSR set to: 1
 25640  012622  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25641  012626  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25642  01262A  CFDF F188          	movff	indf2,??__doprnt
 25643  01262E  0E02               	movlw	2
 25644  012630  26DE               	addwf	postinc2,f,c
 25645  012632  CFDF F189          	movff	indf2,??__doprnt+1
 25646  012636  0E00               	movlw	0
 25647  012638  22DD               	addwfc	postdec2,f,c
 25648  01263A  C188  FFD9         	movff	??__doprnt,fsr2l
 25649  01263E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25650  012642  CFDE F18A          	movff	postinc2,??__doprnt+2
 25651  012646  CFDD F18B          	movff	postdec2,??__doprnt+3
 25652  01264A  C18A  F1A1         	movff	??__doprnt+2,__doprnt@val
 25653  01264E  C18B  F1A2         	movff	??__doprnt+3,__doprnt@val+1
 25654  012652  6BA3               	clrf	(__doprnt@val+2)& (0+255),b
 25655  012654  6BA4               	clrf	(__doprnt@val+3)& (0+255),b
 25656  012656                     l2059:
 25657                           
 25658                           ; BSR set to: 1
 25659                           ;doprnt.c: 1287: }
 25660                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25661                           
 25662                           ; BSR set to: 1
 25663                           
 25664                           ; BSR set to: 1
 25665  012656  51A9               	movf	__doprnt@prec& (0+255),w,b
 25666  012658  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25667  01265A  A4D8               	btfss	status,2,c
 25668  01265C  D04B               	goto	l2061
 25669                           
 25670                           ; BSR set to: 1
 25671  01265E  51A1               	movf	__doprnt@val& (0+255),w,b
 25672  012660  11A2               	iorwf	(__doprnt@val+1)& (0+255),w,b
 25673  012662  11A3               	iorwf	(__doprnt@val+2)& (0+255),w,b
 25674  012664  11A4               	iorwf	(__doprnt@val+3)& (0+255),w,b
 25675  012666  A4D8               	btfss	status,2,c
 25676  012668  D045               	goto	l2061
 25677                           
 25678                           ; BSR set to: 1
 25679                           ;doprnt.c: 1291: prec++;
 25680  01266A  4BA9               	infsnz	__doprnt@prec& (0+255),f,b
 25681  01266C  2BAA               	incf	(__doprnt@prec+1)& (0+255),f,b
 25682                           
 25683                           ; BSR set to: 1
 25684                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25685  01266E  D042               	goto	l2061
 25686  012670                     
 25687                           ; BSR set to: 1
 25688                           ;doprnt.c: 1302: case 0xC0:
 25689                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25690                           
 25691                           ; BSR set to: 1
 25692                           
 25693                           ; BSR set to: 1
 25694  012670  0E01               	movlw	1
 25695  012672  6FAB               	movwf	__doprnt@c& (0+255),b
 25696  012674                     l22088:
 25697                           
 25698                           ; BSR set to: 1
 25699  012674  0E0A               	movlw	10
 25700  012676  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25701  012678  B4D8               	btfsc	status,2,c
 25702  01267A  D047               	goto	l2067
 25703                           
 25704                           ; BSR set to: 1
 25705                           ;doprnt.c: 1306: if(val < dpowers[c])
 25706                           
 25707                           ; BSR set to: 1
 25708                           
 25709                           ; BSR set to: 1
 25710  01267C  51AB               	movf	__doprnt@c& (0+255),w,b
 25711  01267E  0D04               	mullw	4
 25712  012680  0E0F               	movlw	low _dpowers
 25713  012682  24F3               	addwf	prodl,w,c
 25714  012684  6EF6               	movwf	tblptrl,c
 25715  012686  0ECF               	movlw	high _dpowers
 25716  012688  20F4               	addwfc	prodh,w,c
 25717  01268A  6EF7               	movwf	tblptrh,c
 25718  01268C                     	if	1	;There are 3 active tblptr bytes
 25719  01268C  6AF8               	clrf	tblptru,c
 25720  01268E  0E00               	movlw	low (__mediumconst shr (0+16))
 25721  012690  22F8               	addwfc	tblptru,f,c
 25722  012692                     	endif
 25723  012692  0009               	tblrd		*+
 25724  012694  50F5               	movf	tablat,w,c
 25725  012696  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25726  012698  0009               	tblrd		*+
 25727  01269A  50F5               	movf	tablat,w,c
 25728  01269C  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25729  01269E  0009               	tblrd		*+
 25730  0126A0  50F5               	movf	tablat,w,c
 25731  0126A2  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25732  0126A4  0009               	tblrd		*+
 25733  0126A6  50F5               	movf	tablat,w,c
 25734  0126A8  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25735  0126AA  A0D8               	btfss	status,0,c
 25736  0126AC  D02E               	goto	l2067
 25737                           
 25738                           ; BSR set to: 1
 25739                           
 25740                           ; BSR set to: 1
 25741                           
 25742                           ; BSR set to: 1
 25743                           ;doprnt.c: 1307: break;
 25744  0126AE  2BAB               	incf	__doprnt@c& (0+255),f,b
 25745  0126B0  D7E1               	goto	l22088
 25746  0126B2                     
 25747                           ; BSR set to: 1
 25748                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25749                           
 25750                           ; BSR set to: 1
 25751  0126B2  0E01               	movlw	1
 25752  0126B4  6FAB               	movwf	__doprnt@c& (0+255),b
 25753  0126B6                     l22102:
 25754                           
 25755                           ; BSR set to: 1
 25756  0126B6  0E08               	movlw	8
 25757  0126B8  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25758  0126BA  B4D8               	btfsc	status,2,c
 25759  0126BC  D026               	goto	l2067
 25760                           
 25761                           ; BSR set to: 1
 25762                           ;doprnt.c: 1317: if(val < hexpowers[c])
 25763                           
 25764                           ; BSR set to: 1
 25765                           
 25766                           ; BSR set to: 1
 25767  0126BE  51AB               	movf	__doprnt@c& (0+255),w,b
 25768  0126C0  0D04               	mullw	4
 25769  0126C2  0E37               	movlw	low _hexpowers
 25770  0126C4  24F3               	addwf	prodl,w,c
 25771  0126C6  6EF6               	movwf	tblptrl,c
 25772  0126C8  0ECF               	movlw	high _hexpowers
 25773  0126CA  20F4               	addwfc	prodh,w,c
 25774  0126CC  6EF7               	movwf	tblptrh,c
 25775  0126CE                     	if	1	;There are 3 active tblptr bytes
 25776  0126CE  6AF8               	clrf	tblptru,c
 25777  0126D0  0E00               	movlw	low (__mediumconst shr (0+16))
 25778  0126D2  22F8               	addwfc	tblptru,f,c
 25779  0126D4                     	endif
 25780  0126D4  0009               	tblrd		*+
 25781  0126D6  50F5               	movf	tablat,w,c
 25782  0126D8  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25783  0126DA  0009               	tblrd		*+
 25784  0126DC  50F5               	movf	tablat,w,c
 25785  0126DE  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25786  0126E0  0009               	tblrd		*+
 25787  0126E2  50F5               	movf	tablat,w,c
 25788  0126E4  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25789  0126E6  0009               	tblrd		*+
 25790  0126E8  50F5               	movf	tablat,w,c
 25791  0126EA  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25792  0126EC  A0D8               	btfss	status,0,c
 25793  0126EE  D00D               	goto	l2067
 25794                           
 25795                           ; BSR set to: 1
 25796                           
 25797                           ; BSR set to: 1
 25798                           
 25799                           ; BSR set to: 1
 25800                           ;doprnt.c: 1318: break;
 25801  0126F0  2BAB               	incf	__doprnt@c& (0+255),f,b
 25802  0126F2  D7E1               	goto	l22102
 25803  0126F4                     l2061:
 25804                           
 25805                           ; BSR set to: 1
 25806                           
 25807                           ; BSR set to: 1
 25808  0126F4  51A7               	movf	__doprnt@flag& (0+255),w,b
 25809  0126F6  0BC0               	andlw	192
 25810                           
 25811                           ; Switch size 1, requested type "space"
 25812                           ; Number of cases is 3, Range of values is 0 to 192
 25813                           ; switch strategies available:
 25814                           ; Name         Instructions Cycles
 25815                           ; simple_byte           10     6 (average)
 25816                           ;	Chosen strategy is simple_byte
 25817  0126F8  0A00               	xorlw	0	; case 0
 25818  0126FA  B4D8               	btfsc	status,2,c
 25819  0126FC  D7B9               	goto	l2062
 25820  0126FE  0A80               	xorlw	128	; case 128
 25821  012700  B4D8               	btfsc	status,2,c
 25822  012702  D7D7               	goto	l2068
 25823  012704  0A40               	xorlw	64	; case 192
 25824  012706  B4D8               	btfsc	status,2,c
 25825  012708  D7B3               	goto	l2062
 25826  01270A                     l2067:
 25827                           
 25828                           ; BSR set to: 1
 25829                           ;doprnt.c: 1339: if(c < prec)
 25830                           
 25831                           ; BSR set to: 1
 25832  01270A  0E80               	movlw	128
 25833  01270C  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25834  01270E  0E7F               	movlw	127
 25835  012710  6F88               	movwf	??__doprnt& (0+255),b
 25836  012712  51A9               	movf	__doprnt@prec& (0+255),w,b
 25837  012714  5DAB               	subwf	__doprnt@c& (0+255),w,b
 25838  012716  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25839  012718  0A80               	xorlw	128
 25840  01271A  5988               	subwfb	??__doprnt& (0+255),w,b
 25841  01271C  B0D8               	btfsc	status,0,c
 25842  01271E  D003               	goto	l2072
 25843                           
 25844                           ; BSR set to: 1
 25845                           ;doprnt.c: 1340: c = prec;
 25846  012720  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 25847  012724  D010               	goto	l2074
 25848  012726                     l2072:
 25849                           
 25850                           ; BSR set to: 1
 25851                           ;doprnt.c: 1341: else if(prec < c)
 25852                           
 25853                           ; BSR set to: 1
 25854  012726  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25855  012728  0A80               	xorlw	128
 25856  01272A  6F88               	movwf	??__doprnt& (0+255),b
 25857  01272C  51AB               	movf	__doprnt@c& (0+255),w,b
 25858  01272E  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25859  012730  0E80               	movlw	128
 25860  012732  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25861  012734  0E7F               	movlw	127
 25862  012736  5988               	subwfb	??__doprnt& (0+255),w,b
 25863  012738  B0D8               	btfsc	status,0,c
 25864  01273A  D005               	goto	l2074
 25865                           
 25866                           ; BSR set to: 1
 25867                           ;doprnt.c: 1342: prec = c;
 25868  01273C  51AB               	movf	__doprnt@c& (0+255),w,b
 25869  01273E  6FA9               	movwf	__doprnt@prec& (0+255),b
 25870  012740  6BAA               	clrf	(__doprnt@prec+1)& (0+255),b
 25871  012742  BFA9               	btfsc	__doprnt@prec& (0+255),7,b
 25872  012744  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25873  012746                     l2074:
 25874                           
 25875                           ; BSR set to: 1
 25876                           ;doprnt.c: 1345: if(width && flag & 0x03)
 25877                           
 25878                           ; BSR set to: 1
 25879                           
 25880                           ; BSR set to: 1
 25881  012746  51A5               	movf	__doprnt@width& (0+255),w,b
 25882  012748  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25883  01274A  B4D8               	btfsc	status,2,c
 25884  01274C  D00D               	goto	l2075
 25885                           
 25886                           ; BSR set to: 1
 25887  01274E  0E03               	movlw	3
 25888  012750  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25889  012752  6F88               	movwf	??__doprnt& (0+255),b
 25890  012754  0E00               	movlw	0
 25891  012756  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25892  012758  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25893  01275A  5188               	movf	??__doprnt& (0+255),w,b
 25894  01275C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25895  01275E  B4D8               	btfsc	status,2,c
 25896  012760  D003               	goto	l2075
 25897                           
 25898                           ; BSR set to: 1
 25899                           ;doprnt.c: 1346: width--;
 25900  012762  07A5               	decf	__doprnt@width& (0+255),f,b
 25901  012764  A0D8               	btfss	status,0,c
 25902  012766  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25903  012768                     l2075:
 25904                           
 25905                           ; BSR set to: 1
 25906                           ;doprnt.c: 1348: if(flag & 0x4000) {
 25907                           
 25908                           ; BSR set to: 1
 25909  012768  ADA8               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25910  01276A  D013               	goto	l2078
 25911                           
 25912                           ; BSR set to: 1
 25913                           ;doprnt.c: 1349: if(width > prec)
 25914  01276C  51A5               	movf	__doprnt@width& (0+255),w,b
 25915  01276E  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25916  012770  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25917  012772  0A80               	xorlw	128
 25918  012774  6F88               	movwf	??__doprnt& (0+255),b
 25919  012776  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25920  012778  0A80               	xorlw	128
 25921  01277A  5988               	subwfb	??__doprnt& (0+255),w,b
 25922  01277C  B0D8               	btfsc	status,0,c
 25923  01277E  D005               	goto	l2077
 25924                           
 25925                           ; BSR set to: 1
 25926                           ;doprnt.c: 1350: width -= prec;
 25927  012780  51A9               	movf	__doprnt@prec& (0+255),w,b
 25928  012782  5FA5               	subwf	__doprnt@width& (0+255),f,b
 25929  012784  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25930  012786  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25931  012788  D004               	goto	l2078
 25932  01278A                     l2077:
 25933                           
 25934                           ; BSR set to: 1
 25935                           ;doprnt.c: 1351: else
 25936                           ;doprnt.c: 1352: width = 0;
 25937                           
 25938                           ; BSR set to: 1
 25939  01278A  0E00               	movlw	0
 25940  01278C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 25941  01278E  0E00               	movlw	0
 25942  012790  6FA5               	movwf	__doprnt@width& (0+255),b
 25943  012792                     l2078:
 25944                           
 25945                           ; BSR set to: 1
 25946                           ;doprnt.c: 1353: }
 25947                           ;doprnt.c: 1381: if(width > c)
 25948                           
 25949                           ; BSR set to: 1
 25950                           
 25951                           ; BSR set to: 1
 25952  012792  0E80               	movlw	128
 25953  012794  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25954  012796  0E7F               	movlw	127
 25955  012798  6F88               	movwf	??__doprnt& (0+255),b
 25956  01279A  51A5               	movf	__doprnt@width& (0+255),w,b
 25957  01279C  5DAB               	subwf	__doprnt@c& (0+255),w,b
 25958  01279E  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25959  0127A0  0A80               	xorlw	128
 25960  0127A2  5988               	subwfb	??__doprnt& (0+255),w,b
 25961  0127A4  B0D8               	btfsc	status,0,c
 25962  0127A6  D007               	goto	l2079
 25963                           
 25964                           ; BSR set to: 1
 25965                           ;doprnt.c: 1382: width -= c;
 25966  0127A8  51AB               	movf	__doprnt@c& (0+255),w,b
 25967  0127AA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 25968  0127AC  0E00               	movlw	0
 25969  0127AE  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25970  0127B0  0EFF               	movlw	255
 25971  0127B2  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25972  0127B4  D004               	goto	l2080
 25973  0127B6                     l2079:
 25974                           
 25975                           ; BSR set to: 1
 25976                           ;doprnt.c: 1383: else
 25977                           ;doprnt.c: 1384: width = 0;
 25978                           
 25979                           ; BSR set to: 1
 25980  0127B6  0E00               	movlw	0
 25981  0127B8  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 25982  0127BA  0E00               	movlw	0
 25983  0127BC  6FA5               	movwf	__doprnt@width& (0+255),b
 25984  0127BE                     l2080:
 25985                           
 25986                           ; BSR set to: 1
 25987                           ;doprnt.c: 1387: if(flag & 0x04) {
 25988                           
 25989                           ; BSR set to: 1
 25990  0127BE  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 25991  0127C0  D07A               	goto	l2081
 25992                           
 25993                           ; BSR set to: 1
 25994                           ;doprnt.c: 1392: if(flag & 0x03)
 25995  0127C2  0E03               	movlw	3
 25996  0127C4  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25997  0127C6  6F88               	movwf	??__doprnt& (0+255),b
 25998  0127C8  0E00               	movlw	0
 25999  0127CA  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26000  0127CC  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26001  0127CE  5188               	movf	??__doprnt& (0+255),w,b
 26002  0127D0  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26003  0127D2  B4D8               	btfsc	status,2,c
 26004  0127D4  D033               	goto	l2084
 26005                           
 26006                           ; BSR set to: 1
 26007                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 26008  0127D6  EE20 F002          	lfsr	2,2
 26009  0127DA  5182               	movf	__doprnt@pb& (0+255),w,b
 26010  0127DC  26D9               	addwf	fsr2l,f,c
 26011  0127DE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26012  0127E0  22DA               	addwfc	fsr2h,f,c
 26013  0127E2  50DE               	movf	postinc2,w,c
 26014  0127E4  10DE               	iorwf	postinc2,w,c
 26015  0127E6  10DE               	iorwf	postinc2,w,c
 26016  0127E8  B4D8               	btfsc	status,2,c
 26017  0127EA  D013               	goto	l2083
 26018                           
 26019                           ; BSR set to: 1
 26020  0127EC  EE20 F002          	lfsr	2,2
 26021  0127F0  5182               	movf	__doprnt@pb& (0+255),w,b
 26022  0127F2  26D9               	addwf	fsr2l,f,c
 26023  0127F4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26024  0127F6  22DA               	addwfc	fsr2h,f,c
 26025  0127F8  D801               	call	u31998
 26026  0127FA  D020               	goto	l2084
 26027  0127FC                     u31998:
 26028  0127FC  0005               	push	
 26029  0127FE  6EFA               	movwf	pclath,c
 26030  012800  50DE               	movf	postinc2,w,c
 26031  012802  6EFD               	movwf	tosl,c
 26032  012804  50DE               	movf	postinc2,w,c
 26033  012806  6EFE               	movwf	tosh,c
 26034  012808  50DE               	movf	postinc2,w,c
 26035  01280A  6EFF               	movwf	tosu,c
 26036  01280C  50FA               	movf	pclath,w,c
 26037  01280E  0E2D               	movlw	45
 26038  012810  0012               	return		;indir
 26039  012812                     l2083:
 26040  012812  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26041  012816  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26042  01281A  CFDE F188          	movff	postinc2,??__doprnt
 26043  01281E  CFDD F189          	movff	postdec2,??__doprnt+1
 26044  012822  C188  FFD9         	movff	??__doprnt,fsr2l
 26045  012826  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26046  01282A  0E2D               	movlw	45
 26047  01282C  6EDF               	movwf	indf2,c
 26048  01282E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26049  012832  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26050  012836  2ADE               	incf	postinc2,f,c
 26051  012838  0E00               	movlw	0
 26052  01283A  22DD               	addwfc	postdec2,f,c
 26053  01283C                     l2084:
 26054                           
 26055                           ;doprnt.c: 1415: if(width)
 26056  01283C  0101               	movlb	1	; () banked
 26057  01283E  51A5               	movf	__doprnt@width& (0+255),w,b
 26058  012840  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26059  012842  B4D8               	btfsc	status,2,c
 26060  012844  D16B               	goto	l2107
 26061                           
 26062                           ; BSR set to: 1
 26063                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 26064                           
 26065                           ; BSR set to: 1
 26066                           
 26067                           ;doprnt.c: 1416: do
 26068  012846  EE20 F002          	lfsr	2,2
 26069  01284A  5182               	movf	__doprnt@pb& (0+255),w,b
 26070  01284C  26D9               	addwf	fsr2l,f,c
 26071  01284E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26072  012850  22DA               	addwfc	fsr2h,f,c
 26073  012852  50DE               	movf	postinc2,w,c
 26074  012854  10DE               	iorwf	postinc2,w,c
 26075  012856  10DE               	iorwf	postinc2,w,c
 26076  012858  B4D8               	btfsc	status,2,c
 26077  01285A  D013               	goto	l2087
 26078                           
 26079                           ; BSR set to: 1
 26080  01285C  EE20 F002          	lfsr	2,2
 26081  012860  5182               	movf	__doprnt@pb& (0+255),w,b
 26082  012862  26D9               	addwf	fsr2l,f,c
 26083  012864  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26084  012866  22DA               	addwfc	fsr2h,f,c
 26085  012868  D801               	call	u32028
 26086  01286A  D020               	goto	l2088
 26087  01286C                     u32028:
 26088  01286C  0005               	push	
 26089  01286E  6EFA               	movwf	pclath,c
 26090  012870  50DE               	movf	postinc2,w,c
 26091  012872  6EFD               	movwf	tosl,c
 26092  012874  50DE               	movf	postinc2,w,c
 26093  012876  6EFE               	movwf	tosh,c
 26094  012878  50DE               	movf	postinc2,w,c
 26095  01287A  6EFF               	movwf	tosu,c
 26096  01287C  50FA               	movf	pclath,w,c
 26097  01287E  0E30               	movlw	48
 26098  012880  0012               	return		;indir
 26099  012882                     l2087:
 26100  012882  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26101  012886  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26102  01288A  CFDE F188          	movff	postinc2,??__doprnt
 26103  01288E  CFDD F189          	movff	postdec2,??__doprnt+1
 26104  012892  C188  FFD9         	movff	??__doprnt,fsr2l
 26105  012896  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26106  01289A  0E30               	movlw	48
 26107  01289C  6EDF               	movwf	indf2,c
 26108  01289E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26109  0128A2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26110  0128A6  2ADE               	incf	postinc2,f,c
 26111  0128A8  0E00               	movlw	0
 26112  0128AA  22DD               	addwfc	postdec2,f,c
 26113  0128AC                     l2088:
 26114                           
 26115                           ;doprnt.c: 1418: while(--width);
 26116  0128AC  0101               	movlb	1	; () banked
 26117  0128AE  07A5               	decf	__doprnt@width& (0+255),f,b
 26118  0128B0  A0D8               	btfss	status,0,c
 26119  0128B2  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26120  0128B4  D7C4               	goto	L33
 26121  0128B6                     l2081:
 26122                           
 26123                           ; BSR set to: 1
 26124                           ;doprnt.c: 1422: {
 26125                           ;doprnt.c: 1424: if(width
 26126                           ;doprnt.c: 1428: )
 26127                           
 26128                           ; BSR set to: 1
 26129  0128B6  51A5               	movf	__doprnt@width& (0+255),w,b
 26130  0128B8  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26131  0128BA  B4D8               	btfsc	status,2,c
 26132  0128BC  D03B               	goto	u32070
 26133  0128BE                     u32040:
 26134                           
 26135                           ; BSR set to: 1
 26136                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 26137                           
 26138                           ; BSR set to: 1
 26139                           
 26140                           ;doprnt.c: 1429: do
 26141  0128BE  EE20 F002          	lfsr	2,2
 26142  0128C2  5182               	movf	__doprnt@pb& (0+255),w,b
 26143  0128C4  26D9               	addwf	fsr2l,f,c
 26144  0128C6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26145  0128C8  22DA               	addwfc	fsr2h,f,c
 26146  0128CA  50DE               	movf	postinc2,w,c
 26147  0128CC  10DE               	iorwf	postinc2,w,c
 26148  0128CE  10DE               	iorwf	postinc2,w,c
 26149  0128D0  B4D8               	btfsc	status,2,c
 26150  0128D2  D013               	goto	l2093
 26151                           
 26152                           ; BSR set to: 1
 26153  0128D4  EE20 F002          	lfsr	2,2
 26154  0128D8  5182               	movf	__doprnt@pb& (0+255),w,b
 26155  0128DA  26D9               	addwf	fsr2l,f,c
 26156  0128DC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26157  0128DE  22DA               	addwfc	fsr2h,f,c
 26158  0128E0  D801               	call	u32068
 26159  0128E2  D020               	goto	l2094
 26160  0128E4                     u32068:
 26161  0128E4  0005               	push	
 26162  0128E6  6EFA               	movwf	pclath,c
 26163  0128E8  50DE               	movf	postinc2,w,c
 26164  0128EA  6EFD               	movwf	tosl,c
 26165  0128EC  50DE               	movf	postinc2,w,c
 26166  0128EE  6EFE               	movwf	tosh,c
 26167  0128F0  50DE               	movf	postinc2,w,c
 26168  0128F2  6EFF               	movwf	tosu,c
 26169  0128F4  50FA               	movf	pclath,w,c
 26170  0128F6  0E20               	movlw	32
 26171  0128F8  0012               	return		;indir
 26172  0128FA                     l2093:
 26173  0128FA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26174  0128FE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26175  012902  CFDE F188          	movff	postinc2,??__doprnt
 26176  012906  CFDD F189          	movff	postdec2,??__doprnt+1
 26177  01290A  C188  FFD9         	movff	??__doprnt,fsr2l
 26178  01290E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26179  012912  0E20               	movlw	32
 26180  012914  6EDF               	movwf	indf2,c
 26181  012916  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26182  01291A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26183  01291E  2ADE               	incf	postinc2,f,c
 26184  012920  0E00               	movlw	0
 26185  012922  22DD               	addwfc	postdec2,f,c
 26186  012924                     l2094:
 26187                           
 26188                           ;doprnt.c: 1431: while(--width);
 26189  012924  0101               	movlb	1	; () banked
 26190  012926  07A5               	decf	__doprnt@width& (0+255),f,b
 26191  012928  A0D8               	btfss	status,0,c
 26192  01292A  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26193  01292C  51A5               	movf	__doprnt@width& (0+255),w,b
 26194  01292E  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26195  012930  A4D8               	btfss	status,2,c
 26196  012932  D7C5               	goto	u32040
 26197  012934                     u32070:
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;doprnt.c: 1438: if(flag & 0x03)
 26201                           
 26202                           ; BSR set to: 1
 26203                           
 26204                           ; BSR set to: 1
 26205  012934  0E03               	movlw	3
 26206  012936  15A7               	andwf	__doprnt@flag& (0+255),w,b
 26207  012938  6F88               	movwf	??__doprnt& (0+255),b
 26208  01293A  0E00               	movlw	0
 26209  01293C  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26210  01293E  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26211  012940  5188               	movf	??__doprnt& (0+255),w,b
 26212  012942  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26213  012944  B4D8               	btfsc	status,2,c
 26214  012946  D0EA               	goto	l2107
 26215                           
 26216                           ; BSR set to: 1
 26217                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 26218  012948  EE20 F002          	lfsr	2,2
 26219  01294C  5182               	movf	__doprnt@pb& (0+255),w,b
 26220  01294E  26D9               	addwf	fsr2l,f,c
 26221  012950  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26222  012952  22DA               	addwfc	fsr2h,f,c
 26223  012954  50DE               	movf	postinc2,w,c
 26224  012956  10DE               	iorwf	postinc2,w,c
 26225  012958  10DE               	iorwf	postinc2,w,c
 26226  01295A  B4D8               	btfsc	status,2,c
 26227  01295C  D013               	goto	l2097
 26228                           
 26229                           ; BSR set to: 1
 26230  01295E  EE20 F002          	lfsr	2,2
 26231  012962  5182               	movf	__doprnt@pb& (0+255),w,b
 26232  012964  26D9               	addwf	fsr2l,f,c
 26233  012966  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26234  012968  22DA               	addwfc	fsr2h,f,c
 26235  01296A  D801               	call	u32108
 26236  01296C  D0D7               	goto	l2107
 26237  01296E                     u32108:
 26238  01296E  0005               	push	
 26239  012970  6EFA               	movwf	pclath,c
 26240  012972  50DE               	movf	postinc2,w,c
 26241  012974  6EFD               	movwf	tosl,c
 26242  012976  50DE               	movf	postinc2,w,c
 26243  012978  6EFE               	movwf	tosh,c
 26244  01297A  50DE               	movf	postinc2,w,c
 26245  01297C  6EFF               	movwf	tosu,c
 26246  01297E  50FA               	movf	pclath,w,c
 26247  012980  0E2D               	movlw	45
 26248  012982  0012               	return		;indir
 26249  012984                     l2097:
 26250  012984  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26251  012988  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26252  01298C  CFDE F188          	movff	postinc2,??__doprnt
 26253  012990  CFDD F189          	movff	postdec2,??__doprnt+1
 26254  012994  C188  FFD9         	movff	??__doprnt,fsr2l
 26255  012998  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26256  01299C  0E2D               	movlw	45
 26257  01299E  6EDF               	movwf	indf2,c
 26258  0129A0  D0B6               	goto	l22208
 26259  0129A2                     
 26260                           ;doprnt.c: 1486: case 0xC0:
 26261                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26262  0129A2  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 26263  0129A6  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 26264  0129AA  0101               	movlb	1	; () banked
 26265  0129AC  90D8               	bcf	status,0,c
 26266  0129AE  3788               	rlcf	??__doprnt& (0+255),f,b
 26267  0129B0  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26268  0129B2  90D8               	bcf	status,0,c
 26269  0129B4  3788               	rlcf	??__doprnt& (0+255),f,b
 26270  0129B6  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26271  0129B8  0E0F               	movlw	low _dpowers
 26272  0129BA  2588               	addwf	??__doprnt& (0+255),w,b
 26273  0129BC  6EF6               	movwf	tblptrl,c
 26274  0129BE  0ECF               	movlw	high _dpowers
 26275  0129C0  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 26276  0129C2  6EF7               	movwf	tblptrh,c
 26277  0129C4                     	if	1	;There are 3 active tblptr bytes
 26278  0129C4  6AF8               	clrf	tblptru,c
 26279  0129C6  0E00               	movlw	low (__mediumconst shr (0+16))
 26280  0129C8  22F8               	addwfc	tblptru,f,c
 26281  0129CA                     	endif
 26282  0129CA  0009               	tblrd		*+
 26283  0129CC  CFF5 F11B          	movff	tablat,___lldiv@divisor
 26284  0129D0  0009               	tblrd		*+
 26285  0129D2  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 26286  0129D6  0009               	tblrd		*+
 26287  0129D8  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 26288  0129DC  000A               	tblrd		*-
 26289  0129DE  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 26290  0129E2  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 26291  0129E6  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 26292  0129EA  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 26293  0129EE  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 26294  0129F2  EC6E  F0CD         	call	___lldiv
 26295  0129F6  C117  F124         	movff	?___lldiv,___llmod@dividend
 26296  0129FA  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 26297  0129FE  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 26298  012A02  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 26299  012A06  0E0A               	movlw	10
 26300  012A08  0101               	movlb	1	; () banked
 26301  012A0A  6F28               	movwf	___llmod@divisor& (0+255),b
 26302  012A0C  0E00               	movlw	0
 26303  012A0E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 26304  012A10  0E00               	movlw	0
 26305  012A12  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 26306  012A14  0E00               	movlw	0
 26307  012A16  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 26308  012A18  EC00  F0D0         	call	___llmod	;wreg free
 26309  012A1C  0101               	movlb	1	; () banked
 26310  012A1E  5124               	movf	?___llmod& (0+255),w,b
 26311  012A20  0F30               	addlw	48
 26312  012A22  6FAB               	movwf	__doprnt@c& (0+255),b
 26313                           
 26314                           ;doprnt.c: 1491: break;
 26315  012A24  D048               	goto	l2104
 26316  012A26                     
 26317                           ; BSR set to: 1
 26318                           ;doprnt.c: 1499: {
 26319                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26320                           
 26321                           ; BSR set to: 1
 26322  012A26  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 26323  012A2A  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 26324  012A2E  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 26325  012A32  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 26326  012A36  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 26327  012A3A  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 26328  012A3E  90D8               	bcf	status,0,c
 26329  012A40  3788               	rlcf	??__doprnt& (0+255),f,b
 26330  012A42  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26331  012A44  90D8               	bcf	status,0,c
 26332  012A46  3788               	rlcf	??__doprnt& (0+255),f,b
 26333  012A48  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26334  012A4A  0E37               	movlw	low _hexpowers
 26335  012A4C  2588               	addwf	??__doprnt& (0+255),w,b
 26336  012A4E  6EF6               	movwf	tblptrl,c
 26337  012A50  0ECF               	movlw	high _hexpowers
 26338  012A52  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 26339  012A54  6EF7               	movwf	tblptrh,c
 26340  012A56                     	if	1	;There are 3 active tblptr bytes
 26341  012A56  6AF8               	clrf	tblptru,c
 26342  012A58  0E00               	movlw	low (__mediumconst shr (0+16))
 26343  012A5A  22F8               	addwfc	tblptru,f,c
 26344  012A5C                     	endif
 26345  012A5C  0009               	tblrd		*+
 26346  012A5E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 26347  012A62  0009               	tblrd		*+
 26348  012A64  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 26349  012A68  0009               	tblrd		*+
 26350  012A6A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 26351  012A6E  000A               	tblrd		*-
 26352  012A70  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 26353  012A74  EC6E  F0CD         	call	___lldiv	;wreg free
 26354  012A78  0101               	movlb	1	; () banked
 26355  012A7A  5117               	movf	?___lldiv& (0+255),w,b
 26356  012A7C  0B0F               	andlw	15
 26357  012A7E  6F92               	movwf	__doprnt@idx& (0+255),b
 26358                           
 26359                           ; BSR set to: 1
 26360                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26361  012A80  5192               	movf	__doprnt@idx& (0+255),w,b
 26362  012A82  0D01               	mullw	1
 26363  012A84  0EED               	movlw	low STR_192
 26364  012A86  24F3               	addwf	prodl,w,c
 26365  012A88  6EF6               	movwf	tblptrl,c
 26366  012A8A  0EFC               	movlw	high STR_192
 26367  012A8C  20F4               	addwfc	prodh,w,c
 26368  012A8E  6EF7               	movwf	tblptrh,c
 26369  012A90                     	if	1	;There are 3 active tblptr bytes
 26370  012A90  6AF8               	clrf	tblptru,c
 26371  012A92  0E00               	movlw	low (__mediumconst shr (0+16))
 26372  012A94  22F8               	addwfc	tblptru,f,c
 26373  012A96                     	endif
 26374  012A96  0008               	tblrd		*
 26375  012A98  CFF5 F1AB          	movff	tablat,__doprnt@c
 26376                           
 26377                           ; BSR set to: 1
 26378                           ;doprnt.c: 1523: }
 26379                           
 26380                           ;doprnt.c: 1508: }
 26381                           ;doprnt.c: 1510: break;
 26382  012A9C  D00C               	goto	l2104
 26383  012A9E                     l22200:
 26384  012A9E  0101               	movlb	1	; () banked
 26385  012AA0  51A7               	movf	__doprnt@flag& (0+255),w,b
 26386  012AA2  0BC0               	andlw	192
 26387                           
 26388                           ; Switch size 1, requested type "space"
 26389                           ; Number of cases is 3, Range of values is 0 to 192
 26390                           ; switch strategies available:
 26391                           ; Name         Instructions Cycles
 26392                           ; simple_byte           10     6 (average)
 26393                           ;	Chosen strategy is simple_byte
 26394  012AA4  0A00               	xorlw	0	; case 0
 26395  012AA6  B4D8               	btfsc	status,2,c
 26396  012AA8  D77C               	goto	l2102
 26397  012AAA  0A80               	xorlw	128	; case 128
 26398  012AAC  B4D8               	btfsc	status,2,c
 26399  012AAE  D7BB               	goto	l2105
 26400  012AB0  0A40               	xorlw	64	; case 192
 26401  012AB2  B4D8               	btfsc	status,2,c
 26402  012AB4  D776               	goto	l2102
 26403  012AB6                     l2104:
 26404                           
 26405                           ; BSR set to: 1
 26406                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 26407                           
 26408                           ; BSR set to: 1
 26409  012AB6  EE20 F002          	lfsr	2,2
 26410  012ABA  5182               	movf	__doprnt@pb& (0+255),w,b
 26411  012ABC  26D9               	addwf	fsr2l,f,c
 26412  012ABE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26413  012AC0  22DA               	addwfc	fsr2h,f,c
 26414  012AC2  50DE               	movf	postinc2,w,c
 26415  012AC4  10DE               	iorwf	postinc2,w,c
 26416  012AC6  10DE               	iorwf	postinc2,w,c
 26417  012AC8  B4D8               	btfsc	status,2,c
 26418  012ACA  D013               	goto	l2106
 26419                           
 26420                           ; BSR set to: 1
 26421  012ACC  EE20 F002          	lfsr	2,2
 26422  012AD0  5182               	movf	__doprnt@pb& (0+255),w,b
 26423  012AD2  26D9               	addwf	fsr2l,f,c
 26424  012AD4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26425  012AD6  22DA               	addwfc	fsr2h,f,c
 26426  012AD8  D801               	call	u32128
 26427  012ADA  D020               	goto	l2107
 26428  012ADC                     u32128:
 26429  012ADC  0005               	push	
 26430  012ADE  6EFA               	movwf	pclath,c
 26431  012AE0  50DE               	movf	postinc2,w,c
 26432  012AE2  6EFD               	movwf	tosl,c
 26433  012AE4  50DE               	movf	postinc2,w,c
 26434  012AE6  6EFE               	movwf	tosh,c
 26435  012AE8  50DE               	movf	postinc2,w,c
 26436  012AEA  6EFF               	movwf	tosu,c
 26437  012AEC  50FA               	movf	pclath,w,c
 26438  012AEE  51AB               	movf	__doprnt@c& (0+255),w,b
 26439  012AF0  0012               	return		;indir
 26440  012AF2                     l2106:
 26441  012AF2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26442  012AF6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26443  012AFA  CFDE F188          	movff	postinc2,??__doprnt
 26444  012AFE  CFDD F189          	movff	postdec2,??__doprnt+1
 26445  012B02  C188  FFD9         	movff	??__doprnt,fsr2l
 26446  012B06  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26447  012B0A  C1AB  FFDF         	movff	__doprnt@c,indf2
 26448  012B0E                     l22208:
 26449  012B0E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26450  012B12  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26451  012B16  2ADE               	incf	postinc2,f,c
 26452  012B18  0E00               	movlw	0
 26453  012B1A  22DD               	addwfc	postdec2,f,c
 26454  012B1C                     l2107:
 26455  012B1C  0101               	movlb	1	; () banked
 26456  012B1E  07A9               	decf	__doprnt@prec& (0+255),f,b
 26457  012B20  A0D8               	btfss	status,0,c
 26458  012B22  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 26459  012B24  29A9               	incf	__doprnt@prec& (0+255),w,b
 26460  012B26  E1BB               	bnz	l22200
 26461  012B28  29AA               	incf	(__doprnt@prec+1)& (0+255),w,b
 26462  012B2A  A4D8               	btfss	status,2,c
 26463  012B2C  D7B8               	goto	l2101
 26464  012B2E                     u32130:
 26465                           
 26466                           ; BSR set to: 1
 26467                           
 26468                           ; BSR set to: 1
 26469  012B2E  0101               	movlb	1	; () banked
 26470  012B30  5184               	movf	__doprnt@f& (0+255),w,b
 26471  012B32  6F88               	movwf	??__doprnt& (0+255),b
 26472  012B34  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 26473  012B36  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26474  012B38  4B84               	infsnz	__doprnt@f& (0+255),f,b
 26475  012B3A  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 26476  012B3C  C188  FFF6         	movff	??__doprnt,tblptrl
 26477  012B40  C189  FFF7         	movff	??__doprnt+1,tblptrh
 26478  012B44  0E00               	movlw	low (__mediumconst shr (0+16))
 26479  012B46  6EF8               	movwf	tblptru,c
 26480  012B48  0E0D               	movlw	(high __ramtop+-1)
 26481  012B4A  64F7               	cpfsgt	tblptrh,c
 26482  012B4C  D003               	bra	u32147
 26483  012B4E  0008               	tblrd		*
 26484  012B50  50F5               	movf	tablat,w,c
 26485  012B52  D005               	bra	u32140
 26486  012B54                     u32147:
 26487  012B54  CFF6 FFE9          	movff	tblptrl,fsr0l
 26488  012B58  CFF7 FFEA          	movff	tblptrh,fsr0h
 26489  012B5C  50EF               	movf	indf0,w,c
 26490  012B5E                     u32140:
 26491  012B5E  0101               	movlb	1	; () banked
 26492  012B60  6FAB               	movwf	__doprnt@c& (0+255),b
 26493  012B62  51AB               	movf	__doprnt@c& (0+255),w,b
 26494  012B64  A4D8               	btfss	status,2,c
 26495  012B66  EF35  F08B         	goto	l1935
 26496  012B6A                     u32150:
 26497                           
 26498                           ; BSR set to: 1
 26499                           ;doprnt.c: 1540: return 0;
 26500                           
 26501                           ; BSR set to: 1
 26502                           
 26503                           ;doprnt.c: 1525: }
 26504                           ;doprnt.c: 1533: }
 26505                           ;doprnt.c: 1535: alldone:
 26506                           
 26507                           ; BSR set to: 1
 26508  012B6A  0E00               	movlw	0
 26509  012B6C  6F83               	movwf	(?__doprnt+1)& (0+255),b
 26510  012B6E  0E00               	movlw	0
 26511  012B70  6F82               	movwf	?__doprnt& (0+255),b
 26512  012B72  0012               	return	
 26513  012B74                     __end_of__doprnt:
 26514                           	opt stack 0
 26515                           tosu	equ	0xFFF
 26516                           tosh	equ	0xFFE
 26517                           tosl	equ	0xFFD
 26518                           pclath	equ	0xFFA
 26519                           tblptru	equ	0xFF8
 26520                           tblptrh	equ	0xFF7
 26521                           tblptrl	equ	0xFF6
 26522                           tablat	equ	0xFF5
 26523                           prodh	equ	0xFF4
 26524                           prodl	equ	0xFF3
 26525                           intcon	equ	0xFF2
 26526                           indf0	equ	0xFEF
 26527                           postinc0	equ	0xFEE
 26528                           fsr0h	equ	0xFEA
 26529                           fsr0l	equ	0xFE9
 26530                           wreg	equ	0xFE8
 26531                           indf1	equ	0xFE7
 26532                           postdec1	equ	0xFE5
 26533                           plusw1	equ	0xFE3
 26534                           fsr1h	equ	0xFE2
 26535                           fsr1l	equ	0xFE1
 26536                           indf2	equ	0xFDF
 26537                           postinc2	equ	0xFDE
 26538                           postdec2	equ	0xFDD
 26539                           plusw2	equ	0xFDB
 26540                           fsr2h	equ	0xFDA
 26541                           fsr2l	equ	0xFD9
 26542                           status	equ	0xFD8
 26543                           
 26544 ;; *************** function _scale *****************
 26545 ;; Defined at:
 26546 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26547 ;; Parameters:    Size  Location     Type
 26548 ;;  scl             1    wreg     char 
 26549 ;; Auto vars:     Size  Location     Type
 26550 ;;  scl             1  119[BANK1 ] char 
 26551 ;; Return value:  Size  Location     Type
 26552 ;;                  4  111[BANK1 ] char 
 26553 ;; Registers used:
 26554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26555 ;; Tracked objects:
 26556 ;;		On entry : 0/0
 26557 ;;		On exit  : 0/0
 26558 ;;		Unchanged: 0/0
 26559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26560 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26561 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26563 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26564 ;;Total ram usage:        9 bytes
 26565 ;; Hardware stack levels used:    1
 26566 ;; Hardware stack levels required when called:   14
 26567 ;; This function calls:
 26568 ;;		___awdiv
 26569 ;;		___awmod
 26570 ;;		___flmul
 26571 ;; This function is called by:
 26572 ;;		__doprnt
 26573 ;; This function uses a non-reentrant model
 26574 ;;
 26575                           
 26576                           	psect	text34
 26577  014B3C                     __ptext34:
 26578                           	opt stack 0
 26579  014B3C                     _scale:
 26580                           	opt stack 12
 26581                           
 26582                           ; BSR set to: 1
 26583                           ;incstack = 0
 26584                           ;scale@scl stored from wreg
 26585  014B3C  0101               	movlb	1	; () banked
 26586  014B3E  6F77               	movwf	scale@scl& (0+255),b
 26587                           
 26588                           ;doprnt.c: 428: if(scl < 0) {
 26589  014B40  0101               	movlb	1	; () banked
 26590  014B42  AF77               	btfss	scale@scl& (0+255),7,b
 26591  014B44  D127               	goto	l1924
 26592                           
 26593                           ; BSR set to: 1
 26594                           ;doprnt.c: 429: scl = -scl;
 26595  014B46  6D77               	negf	scale@scl& (0+255),b
 26596                           
 26597                           ;doprnt.c: 430: if(scl>=110)
 26598  014B48  5177               	movf	scale@scl& (0+255),w,b
 26599  014B4A  0A80               	xorlw	128
 26600  014B4C  0F12               	addlw	-238
 26601  014B4E  A0D8               	btfss	status,0,c
 26602  014B50  D0A5               	goto	l1925
 26603                           
 26604                           ; BSR set to: 1
 26605                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26606  014B52  0E00               	movlw	0
 26607  014B54  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26608  014B56  0E0A               	movlw	10
 26609  014B58  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26610  014B5A  0E00               	movlw	0
 26611  014B5C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26612  014B5E  0E64               	movlw	100
 26613  014B60  6F19               	movwf	___awmod@divisor& (0+255),b
 26614  014B62  5177               	movf	scale@scl& (0+255),w,b
 26615  014B64  6F17               	movwf	___awmod@dividend& (0+255),b
 26616  014B66  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26617  014B68  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26618  014B6A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26619  014B6C  ECEF  F0CE         	call	___awmod
 26620  014B70  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26621  014B74  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26622  014B78  EC2B  F0CD         	call	___awdiv	;wreg free
 26623  014B7C  0101               	movlb	1	; () banked
 26624  014B7E  90D8               	bcf	status,0,c
 26625  014B80  371D               	rlcf	?___awdiv& (0+255),f,b
 26626  014B82  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26627  014B84  90D8               	bcf	status,0,c
 26628  014B86  371D               	rlcf	?___awdiv& (0+255),f,b
 26629  014B88  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26630  014B8A  0E24               	movlw	36
 26631  014B8C  271D               	addwf	?___awdiv& (0+255),f,b
 26632  014B8E  0E00               	movlw	0
 26633  014B90  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26634  014B92  0EDB               	movlw	low __npowers_
 26635  014B94  251D               	addwf	?___awdiv& (0+255),w,b
 26636  014B96  6EF6               	movwf	tblptrl,c
 26637  014B98  0ECE               	movlw	high __npowers_
 26638  014B9A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26639  014B9C  6EF7               	movwf	tblptrh,c
 26640  014B9E                     	if	1	;There are 3 active tblptr bytes
 26641  014B9E  6AF8               	clrf	tblptru,c
 26642  014BA0  0E00               	movlw	low (__mediumconst shr (0+16))
 26643  014BA2  22F8               	addwfc	tblptru,f,c
 26644  014BA4                     	endif
 26645  014BA4  0009               	tblrd		*+
 26646  014BA6  CFF5 F15A          	movff	tablat,___flmul@a
 26647  014BAA  0009               	tblrd		*+
 26648  014BAC  CFF5 F15B          	movff	tablat,___flmul@a+1
 26649  014BB0  0009               	tblrd		*+
 26650  014BB2  CFF5 F15C          	movff	tablat,___flmul@a+2
 26651  014BB6  000A               	tblrd		*-
 26652  014BB8  CFF5 F15D          	movff	tablat,___flmul@a+3
 26653  014BBC  0E00               	movlw	0
 26654  014BBE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26655  014BC0  0E64               	movlw	100
 26656  014BC2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26657  014BC4  5177               	movf	scale@scl& (0+255),w,b
 26658  014BC6  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26659  014BC8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26660  014BCA  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26661  014BCC  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26662  014BCE  EC2B  F0CD         	call	___awdiv	;wreg free
 26663  014BD2  0101               	movlb	1	; () banked
 26664  014BD4  90D8               	bcf	status,0,c
 26665  014BD6  371D               	rlcf	?___awdiv& (0+255),f,b
 26666  014BD8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26667  014BDA  90D8               	bcf	status,0,c
 26668  014BDC  371D               	rlcf	?___awdiv& (0+255),f,b
 26669  014BDE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26670  014BE0  0E48               	movlw	72
 26671  014BE2  271D               	addwf	?___awdiv& (0+255),f,b
 26672  014BE4  0E00               	movlw	0
 26673  014BE6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26674  014BE8  0EDB               	movlw	low __npowers_
 26675  014BEA  251D               	addwf	?___awdiv& (0+255),w,b
 26676  014BEC  6EF6               	movwf	tblptrl,c
 26677  014BEE  0ECE               	movlw	high __npowers_
 26678  014BF0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26679  014BF2  6EF7               	movwf	tblptrh,c
 26680  014BF4                     	if	1	;There are 3 active tblptr bytes
 26681  014BF4  6AF8               	clrf	tblptru,c
 26682  014BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 26683  014BF8  22F8               	addwfc	tblptru,f,c
 26684  014BFA                     	endif
 26685  014BFA  0009               	tblrd		*+
 26686  014BFC  CFF5 F156          	movff	tablat,___flmul@b
 26687  014C00  0009               	tblrd		*+
 26688  014C02  CFF5 F157          	movff	tablat,___flmul@b+1
 26689  014C06  0009               	tblrd		*+
 26690  014C08  CFF5 F158          	movff	tablat,___flmul@b+2
 26691  014C0C  000A               	tblrd		*-
 26692  014C0E  CFF5 F159          	movff	tablat,___flmul@b+3
 26693  014C12  ECE4  F0AB         	call	___flmul	;wreg free
 26694  014C16  C156  F173         	movff	?___flmul,_scale$5164
 26695  014C1A  C157  F174         	movff	?___flmul+1,_scale$5164+1
 26696  014C1E  C158  F175         	movff	?___flmul+2,_scale$5164+2
 26697  014C22  C159  F176         	movff	?___flmul+3,_scale$5164+3
 26698                           
 26699                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26700  014C26  C173  F156         	movff	_scale$5164,___flmul@b
 26701  014C2A  C174  F157         	movff	_scale$5164+1,___flmul@b+1
 26702  014C2E  C175  F158         	movff	_scale$5164+2,___flmul@b+2
 26703  014C32  C176  F159         	movff	_scale$5164+3,___flmul@b+3
 26704  014C36  0E00               	movlw	0
 26705  014C38  0101               	movlb	1	; () banked
 26706  014C3A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26707  014C3C  0E0A               	movlw	10
 26708  014C3E  6F19               	movwf	___awmod@divisor& (0+255),b
 26709  014C40  5177               	movf	scale@scl& (0+255),w,b
 26710  014C42  6F17               	movwf	___awmod@dividend& (0+255),b
 26711  014C44  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26712  014C46  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26713  014C48  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26714  014C4A  ECEF  F0CE         	call	___awmod	;wreg free
 26715  014C4E  0101               	movlb	1	; () banked
 26716  014C50  90D8               	bcf	status,0,c
 26717  014C52  3717               	rlcf	?___awmod& (0+255),f,b
 26718  014C54  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26719  014C56  90D8               	bcf	status,0,c
 26720  014C58  3717               	rlcf	?___awmod& (0+255),f,b
 26721  014C5A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26722  014C5C  0EDB               	movlw	low __npowers_
 26723  014C5E  2517               	addwf	?___awmod& (0+255),w,b
 26724  014C60  6EF6               	movwf	tblptrl,c
 26725  014C62  0ECE               	movlw	high __npowers_
 26726  014C64  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26727  014C66  6EF7               	movwf	tblptrh,c
 26728  014C68                     	if	1	;There are 3 active tblptr bytes
 26729  014C68  6AF8               	clrf	tblptru,c
 26730  014C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 26731  014C6C  22F8               	addwfc	tblptru,f,c
 26732  014C6E                     	endif
 26733  014C6E  0009               	tblrd		*+
 26734  014C70  CFF5 F15A          	movff	tablat,___flmul@a
 26735  014C74  0009               	tblrd		*+
 26736  014C76  CFF5 F15B          	movff	tablat,___flmul@a+1
 26737  014C7A  0009               	tblrd		*+
 26738  014C7C  CFF5 F15C          	movff	tablat,___flmul@a+2
 26739  014C80  000A               	tblrd		*-
 26740  014C82  CFF5 F15D          	movff	tablat,___flmul@a+3
 26741  014C86  ECE4  F0AB         	call	___flmul	;wreg free
 26742  014C8A  C156  F16F         	movff	?___flmul,?_scale
 26743  014C8E  C157  F170         	movff	?___flmul+1,?_scale+1
 26744  014C92  C158  F171         	movff	?___flmul+2,?_scale+2
 26745  014C96  C159  F172         	movff	?___flmul+3,?_scale+3
 26746  014C9A  0012               	return	
 26747  014C9C                     l1925:
 26748                           
 26749                           ;doprnt.c: 432: else if(scl > 10)
 26750  014C9C  0101               	movlb	1	; () banked
 26751  014C9E  5177               	movf	scale@scl& (0+255),w,b
 26752  014CA0  0A80               	xorlw	128
 26753  014CA2  0F75               	addlw	-139
 26754  014CA4  A0D8               	btfss	status,0,c
 26755  014CA6  D05D               	goto	l1928
 26756                           
 26757                           ; BSR set to: 1
 26758                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26759  014CA8  0E00               	movlw	0
 26760  014CAA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26761  014CAC  0E0A               	movlw	10
 26762  014CAE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26763  014CB0  5177               	movf	scale@scl& (0+255),w,b
 26764  014CB2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26765  014CB4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26766  014CB6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26767  014CB8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26768  014CBA  EC2B  F0CD         	call	___awdiv	;wreg free
 26769  014CBE  0101               	movlb	1	; () banked
 26770  014CC0  90D8               	bcf	status,0,c
 26771  014CC2  371D               	rlcf	?___awdiv& (0+255),f,b
 26772  014CC4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26773  014CC6  90D8               	bcf	status,0,c
 26774  014CC8  371D               	rlcf	?___awdiv& (0+255),f,b
 26775  014CCA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26776  014CCC  0E24               	movlw	36
 26777  014CCE  271D               	addwf	?___awdiv& (0+255),f,b
 26778  014CD0  0E00               	movlw	0
 26779  014CD2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26780  014CD4  0EDB               	movlw	low __npowers_
 26781  014CD6  251D               	addwf	?___awdiv& (0+255),w,b
 26782  014CD8  6EF6               	movwf	tblptrl,c
 26783  014CDA  0ECE               	movlw	high __npowers_
 26784  014CDC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26785  014CDE  6EF7               	movwf	tblptrh,c
 26786  014CE0                     	if	1	;There are 3 active tblptr bytes
 26787  014CE0  6AF8               	clrf	tblptru,c
 26788  014CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 26789  014CE4  22F8               	addwfc	tblptru,f,c
 26790  014CE6                     	endif
 26791  014CE6  0009               	tblrd		*+
 26792  014CE8  CFF5 F156          	movff	tablat,___flmul@b
 26793  014CEC  0009               	tblrd		*+
 26794  014CEE  CFF5 F157          	movff	tablat,___flmul@b+1
 26795  014CF2  0009               	tblrd		*+
 26796  014CF4  CFF5 F158          	movff	tablat,___flmul@b+2
 26797  014CF8  000A               	tblrd		*-
 26798  014CFA  CFF5 F159          	movff	tablat,___flmul@b+3
 26799  014CFE  0E00               	movlw	0
 26800  014D00  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26801  014D02  0E0A               	movlw	10
 26802  014D04  6F19               	movwf	___awmod@divisor& (0+255),b
 26803  014D06  5177               	movf	scale@scl& (0+255),w,b
 26804  014D08  6F17               	movwf	___awmod@dividend& (0+255),b
 26805  014D0A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26806  014D0C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26807  014D0E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26808  014D10  ECEF  F0CE         	call	___awmod	;wreg free
 26809  014D14  0101               	movlb	1	; () banked
 26810  014D16  90D8               	bcf	status,0,c
 26811  014D18  3717               	rlcf	?___awmod& (0+255),f,b
 26812  014D1A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26813  014D1C  90D8               	bcf	status,0,c
 26814  014D1E  3717               	rlcf	?___awmod& (0+255),f,b
 26815  014D20  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26816  014D22  0EDB               	movlw	low __npowers_
 26817  014D24  2517               	addwf	?___awmod& (0+255),w,b
 26818  014D26  6EF6               	movwf	tblptrl,c
 26819  014D28  0ECE               	movlw	high __npowers_
 26820  014D2A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26821  014D2C  6EF7               	movwf	tblptrh,c
 26822  014D2E                     	if	1	;There are 3 active tblptr bytes
 26823  014D2E  6AF8               	clrf	tblptru,c
 26824  014D30  0E00               	movlw	low (__mediumconst shr (0+16))
 26825  014D32  22F8               	addwfc	tblptru,f,c
 26826  014D34                     	endif
 26827  014D34  0009               	tblrd		*+
 26828  014D36  CFF5 F15A          	movff	tablat,___flmul@a
 26829  014D3A  0009               	tblrd		*+
 26830  014D3C  CFF5 F15B          	movff	tablat,___flmul@a+1
 26831  014D40  0009               	tblrd		*+
 26832  014D42  CFF5 F15C          	movff	tablat,___flmul@a+2
 26833  014D46  000A               	tblrd		*-
 26834  014D48  CFF5 F15D          	movff	tablat,___flmul@a+3
 26835  014D4C  ECE4  F0AB         	call	___flmul	;wreg free
 26836  014D50  C156  F16F         	movff	?___flmul,?_scale
 26837  014D54  C157  F170         	movff	?___flmul+1,?_scale+1
 26838  014D58  C158  F171         	movff	?___flmul+2,?_scale+2
 26839  014D5C  C159  F172         	movff	?___flmul+3,?_scale+3
 26840  014D60  0012               	return	
 26841  014D62                     l1928:
 26842                           
 26843                           ;doprnt.c: 434: return _npowers_[scl];
 26844  014D62  0101               	movlb	1	; () banked
 26845  014D64  5177               	movf	scale@scl& (0+255),w,b
 26846  014D66  0D04               	mullw	4
 26847  014D68  0EDB               	movlw	low __npowers_
 26848  014D6A  24F3               	addwf	prodl,w,c
 26849  014D6C  6EF6               	movwf	tblptrl,c
 26850  014D6E  0ECE               	movlw	high __npowers_
 26851  014D70  20F4               	addwfc	prodh,w,c
 26852  014D72  6EF7               	movwf	tblptrh,c
 26853  014D74                     	if	1	;There are 3 active tblptr bytes
 26854  014D74  6AF8               	clrf	tblptru,c
 26855  014D76  0E00               	movlw	low (__mediumconst shr (0+16))
 26856  014D78  22F8               	addwfc	tblptru,f,c
 26857  014D7A                     	endif
 26858  014D7A  0009               	tblrd		*+
 26859  014D7C  CFF5 F16F          	movff	tablat,?_scale
 26860  014D80  0009               	tblrd		*+
 26861  014D82  CFF5 F170          	movff	tablat,?_scale+1
 26862  014D86  0009               	tblrd		*+
 26863  014D88  CFF5 F171          	movff	tablat,?_scale+2
 26864  014D8C  000A               	tblrd		*-
 26865  014D8E  CFF5 F172          	movff	tablat,?_scale+3
 26866                           
 26867                           ; BSR set to: 1
 26868  014D92  0012               	return	
 26869  014D94                     l1924:
 26870                           
 26871                           ; BSR set to: 1
 26872                           ;doprnt.c: 435: }
 26873                           ;doprnt.c: 436: if(scl>=110)
 26874                           
 26875                           ; BSR set to: 1
 26876  014D94  5177               	movf	scale@scl& (0+255),w,b
 26877  014D96  0A80               	xorlw	128
 26878  014D98  0F12               	addlw	-238
 26879  014D9A  A0D8               	btfss	status,0,c
 26880  014D9C  D0A5               	goto	l1929
 26881                           
 26882                           ; BSR set to: 1
 26883                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26884  014D9E  0E00               	movlw	0
 26885  014DA0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26886  014DA2  0E0A               	movlw	10
 26887  014DA4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26888  014DA6  0E00               	movlw	0
 26889  014DA8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26890  014DAA  0E64               	movlw	100
 26891  014DAC  6F19               	movwf	___awmod@divisor& (0+255),b
 26892  014DAE  5177               	movf	scale@scl& (0+255),w,b
 26893  014DB0  6F17               	movwf	___awmod@dividend& (0+255),b
 26894  014DB2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26895  014DB4  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26896  014DB6  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26897  014DB8  ECEF  F0CE         	call	___awmod	;wreg free
 26898  014DBC  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26899  014DC0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26900  014DC4  EC2B  F0CD         	call	___awdiv	;wreg free
 26901  014DC8  0101               	movlb	1	; () banked
 26902  014DCA  90D8               	bcf	status,0,c
 26903  014DCC  371D               	rlcf	?___awdiv& (0+255),f,b
 26904  014DCE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26905  014DD0  90D8               	bcf	status,0,c
 26906  014DD2  371D               	rlcf	?___awdiv& (0+255),f,b
 26907  014DD4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26908  014DD6  0E24               	movlw	36
 26909  014DD8  271D               	addwf	?___awdiv& (0+255),f,b
 26910  014DDA  0E00               	movlw	0
 26911  014DDC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26912  014DDE  0EA7               	movlw	low __powers_
 26913  014DE0  251D               	addwf	?___awdiv& (0+255),w,b
 26914  014DE2  6EF6               	movwf	tblptrl,c
 26915  014DE4  0ECE               	movlw	high __powers_
 26916  014DE6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26917  014DE8  6EF7               	movwf	tblptrh,c
 26918  014DEA                     	if	1	;There are 3 active tblptr bytes
 26919  014DEA  6AF8               	clrf	tblptru,c
 26920  014DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 26921  014DEE  22F8               	addwfc	tblptru,f,c
 26922  014DF0                     	endif
 26923  014DF0  0009               	tblrd		*+
 26924  014DF2  CFF5 F15A          	movff	tablat,___flmul@a
 26925  014DF6  0009               	tblrd		*+
 26926  014DF8  CFF5 F15B          	movff	tablat,___flmul@a+1
 26927  014DFC  0009               	tblrd		*+
 26928  014DFE  CFF5 F15C          	movff	tablat,___flmul@a+2
 26929  014E02  000A               	tblrd		*-
 26930  014E04  CFF5 F15D          	movff	tablat,___flmul@a+3
 26931  014E08  0E00               	movlw	0
 26932  014E0A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26933  014E0C  0E64               	movlw	100
 26934  014E0E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26935  014E10  5177               	movf	scale@scl& (0+255),w,b
 26936  014E12  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26937  014E14  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26938  014E16  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26939  014E18  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26940  014E1A  EC2B  F0CD         	call	___awdiv	;wreg free
 26941  014E1E  0101               	movlb	1	; () banked
 26942  014E20  90D8               	bcf	status,0,c
 26943  014E22  371D               	rlcf	?___awdiv& (0+255),f,b
 26944  014E24  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26945  014E26  90D8               	bcf	status,0,c
 26946  014E28  371D               	rlcf	?___awdiv& (0+255),f,b
 26947  014E2A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26948  014E2C  0E48               	movlw	72
 26949  014E2E  271D               	addwf	?___awdiv& (0+255),f,b
 26950  014E30  0E00               	movlw	0
 26951  014E32  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26952  014E34  0EA7               	movlw	low __powers_
 26953  014E36  251D               	addwf	?___awdiv& (0+255),w,b
 26954  014E38  6EF6               	movwf	tblptrl,c
 26955  014E3A  0ECE               	movlw	high __powers_
 26956  014E3C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26957  014E3E  6EF7               	movwf	tblptrh,c
 26958  014E40                     	if	1	;There are 3 active tblptr bytes
 26959  014E40  6AF8               	clrf	tblptru,c
 26960  014E42  0E00               	movlw	low (__mediumconst shr (0+16))
 26961  014E44  22F8               	addwfc	tblptru,f,c
 26962  014E46                     	endif
 26963  014E46  0009               	tblrd		*+
 26964  014E48  CFF5 F156          	movff	tablat,___flmul@b
 26965  014E4C  0009               	tblrd		*+
 26966  014E4E  CFF5 F157          	movff	tablat,___flmul@b+1
 26967  014E52  0009               	tblrd		*+
 26968  014E54  CFF5 F158          	movff	tablat,___flmul@b+2
 26969  014E58  000A               	tblrd		*-
 26970  014E5A  CFF5 F159          	movff	tablat,___flmul@b+3
 26971  014E5E  ECE4  F0AB         	call	___flmul	;wreg free
 26972  014E62  C156  F173         	movff	?___flmul,_scale$5164
 26973  014E66  C157  F174         	movff	?___flmul+1,_scale$5164+1
 26974  014E6A  C158  F175         	movff	?___flmul+2,_scale$5164+2
 26975  014E6E  C159  F176         	movff	?___flmul+3,_scale$5164+3
 26976                           
 26977                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26978  014E72  C173  F156         	movff	_scale$5164,___flmul@b
 26979  014E76  C174  F157         	movff	_scale$5164+1,___flmul@b+1
 26980  014E7A  C175  F158         	movff	_scale$5164+2,___flmul@b+2
 26981  014E7E  C176  F159         	movff	_scale$5164+3,___flmul@b+3
 26982  014E82  0E00               	movlw	0
 26983  014E84  0101               	movlb	1	; () banked
 26984  014E86  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26985  014E88  0E0A               	movlw	10
 26986  014E8A  6F19               	movwf	___awmod@divisor& (0+255),b
 26987  014E8C  5177               	movf	scale@scl& (0+255),w,b
 26988  014E8E  6F17               	movwf	___awmod@dividend& (0+255),b
 26989  014E90  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26990  014E92  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26991  014E94  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26992  014E96  ECEF  F0CE         	call	___awmod	;wreg free
 26993  014E9A  0101               	movlb	1	; () banked
 26994  014E9C  90D8               	bcf	status,0,c
 26995  014E9E  3717               	rlcf	?___awmod& (0+255),f,b
 26996  014EA0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26997  014EA2  90D8               	bcf	status,0,c
 26998  014EA4  3717               	rlcf	?___awmod& (0+255),f,b
 26999  014EA6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27000  014EA8  0EA7               	movlw	low __powers_
 27001  014EAA  2517               	addwf	?___awmod& (0+255),w,b
 27002  014EAC  6EF6               	movwf	tblptrl,c
 27003  014EAE  0ECE               	movlw	high __powers_
 27004  014EB0  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27005  014EB2  6EF7               	movwf	tblptrh,c
 27006  014EB4                     	if	1	;There are 3 active tblptr bytes
 27007  014EB4  6AF8               	clrf	tblptru,c
 27008  014EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 27009  014EB8  22F8               	addwfc	tblptru,f,c
 27010  014EBA                     	endif
 27011  014EBA  0009               	tblrd		*+
 27012  014EBC  CFF5 F15A          	movff	tablat,___flmul@a
 27013  014EC0  0009               	tblrd		*+
 27014  014EC2  CFF5 F15B          	movff	tablat,___flmul@a+1
 27015  014EC6  0009               	tblrd		*+
 27016  014EC8  CFF5 F15C          	movff	tablat,___flmul@a+2
 27017  014ECC  000A               	tblrd		*-
 27018  014ECE  CFF5 F15D          	movff	tablat,___flmul@a+3
 27019  014ED2  ECE4  F0AB         	call	___flmul	;wreg free
 27020  014ED6  C156  F16F         	movff	?___flmul,?_scale
 27021  014EDA  C157  F170         	movff	?___flmul+1,?_scale+1
 27022  014EDE  C158  F171         	movff	?___flmul+2,?_scale+2
 27023  014EE2  C159  F172         	movff	?___flmul+3,?_scale+3
 27024  014EE6  0012               	return	
 27025  014EE8                     l1929:
 27026                           
 27027                           ;doprnt.c: 438: else if(scl > 10)
 27028  014EE8  0101               	movlb	1	; () banked
 27029  014EEA  5177               	movf	scale@scl& (0+255),w,b
 27030  014EEC  0A80               	xorlw	128
 27031  014EEE  0F75               	addlw	-139
 27032  014EF0  A0D8               	btfss	status,0,c
 27033  014EF2  D05D               	goto	l1931
 27034                           
 27035                           ; BSR set to: 1
 27036                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27037  014EF4  0E00               	movlw	0
 27038  014EF6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27039  014EF8  0E0A               	movlw	10
 27040  014EFA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27041  014EFC  5177               	movf	scale@scl& (0+255),w,b
 27042  014EFE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 27043  014F00  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27044  014F02  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 27045  014F04  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27046  014F06  EC2B  F0CD         	call	___awdiv	;wreg free
 27047  014F0A  0101               	movlb	1	; () banked
 27048  014F0C  90D8               	bcf	status,0,c
 27049  014F0E  371D               	rlcf	?___awdiv& (0+255),f,b
 27050  014F10  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27051  014F12  90D8               	bcf	status,0,c
 27052  014F14  371D               	rlcf	?___awdiv& (0+255),f,b
 27053  014F16  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27054  014F18  0E24               	movlw	36
 27055  014F1A  271D               	addwf	?___awdiv& (0+255),f,b
 27056  014F1C  0E00               	movlw	0
 27057  014F1E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27058  014F20  0EA7               	movlw	low __powers_
 27059  014F22  251D               	addwf	?___awdiv& (0+255),w,b
 27060  014F24  6EF6               	movwf	tblptrl,c
 27061  014F26  0ECE               	movlw	high __powers_
 27062  014F28  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27063  014F2A  6EF7               	movwf	tblptrh,c
 27064  014F2C                     	if	1	;There are 3 active tblptr bytes
 27065  014F2C  6AF8               	clrf	tblptru,c
 27066  014F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 27067  014F30  22F8               	addwfc	tblptru,f,c
 27068  014F32                     	endif
 27069  014F32  0009               	tblrd		*+
 27070  014F34  CFF5 F156          	movff	tablat,___flmul@b
 27071  014F38  0009               	tblrd		*+
 27072  014F3A  CFF5 F157          	movff	tablat,___flmul@b+1
 27073  014F3E  0009               	tblrd		*+
 27074  014F40  CFF5 F158          	movff	tablat,___flmul@b+2
 27075  014F44  000A               	tblrd		*-
 27076  014F46  CFF5 F159          	movff	tablat,___flmul@b+3
 27077  014F4A  0E00               	movlw	0
 27078  014F4C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27079  014F4E  0E0A               	movlw	10
 27080  014F50  6F19               	movwf	___awmod@divisor& (0+255),b
 27081  014F52  5177               	movf	scale@scl& (0+255),w,b
 27082  014F54  6F17               	movwf	___awmod@dividend& (0+255),b
 27083  014F56  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27084  014F58  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 27085  014F5A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 27086  014F5C  ECEF  F0CE         	call	___awmod	;wreg free
 27087  014F60  0101               	movlb	1	; () banked
 27088  014F62  90D8               	bcf	status,0,c
 27089  014F64  3717               	rlcf	?___awmod& (0+255),f,b
 27090  014F66  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27091  014F68  90D8               	bcf	status,0,c
 27092  014F6A  3717               	rlcf	?___awmod& (0+255),f,b
 27093  014F6C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27094  014F6E  0EA7               	movlw	low __powers_
 27095  014F70  2517               	addwf	?___awmod& (0+255),w,b
 27096  014F72  6EF6               	movwf	tblptrl,c
 27097  014F74  0ECE               	movlw	high __powers_
 27098  014F76  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27099  014F78  6EF7               	movwf	tblptrh,c
 27100  014F7A                     	if	1	;There are 3 active tblptr bytes
 27101  014F7A  6AF8               	clrf	tblptru,c
 27102  014F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 27103  014F7E  22F8               	addwfc	tblptru,f,c
 27104  014F80                     	endif
 27105  014F80  0009               	tblrd		*+
 27106  014F82  CFF5 F15A          	movff	tablat,___flmul@a
 27107  014F86  0009               	tblrd		*+
 27108  014F88  CFF5 F15B          	movff	tablat,___flmul@a+1
 27109  014F8C  0009               	tblrd		*+
 27110  014F8E  CFF5 F15C          	movff	tablat,___flmul@a+2
 27111  014F92  000A               	tblrd		*-
 27112  014F94  CFF5 F15D          	movff	tablat,___flmul@a+3
 27113  014F98  ECE4  F0AB         	call	___flmul	;wreg free
 27114  014F9C  C156  F16F         	movff	?___flmul,?_scale
 27115  014FA0  C157  F170         	movff	?___flmul+1,?_scale+1
 27116  014FA4  C158  F171         	movff	?___flmul+2,?_scale+2
 27117  014FA8  C159  F172         	movff	?___flmul+3,?_scale+3
 27118  014FAC  0012               	return	
 27119  014FAE                     l1931:
 27120                           
 27121                           ;doprnt.c: 440: return _powers_[scl];
 27122  014FAE  0101               	movlb	1	; () banked
 27123  014FB0  5177               	movf	scale@scl& (0+255),w,b
 27124  014FB2  0D04               	mullw	4
 27125  014FB4  0EA7               	movlw	low __powers_
 27126  014FB6  24F3               	addwf	prodl,w,c
 27127  014FB8  6EF6               	movwf	tblptrl,c
 27128  014FBA  0ECE               	movlw	high __powers_
 27129  014FBC  20F4               	addwfc	prodh,w,c
 27130  014FBE  6EF7               	movwf	tblptrh,c
 27131  014FC0                     	if	1	;There are 3 active tblptr bytes
 27132  014FC0  6AF8               	clrf	tblptru,c
 27133  014FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 27134  014FC4  22F8               	addwfc	tblptru,f,c
 27135  014FC6                     	endif
 27136  014FC6  0009               	tblrd		*+
 27137  014FC8  CFF5 F16F          	movff	tablat,?_scale
 27138  014FCC  0009               	tblrd		*+
 27139  014FCE  CFF5 F170          	movff	tablat,?_scale+1
 27140  014FD2  0009               	tblrd		*+
 27141  014FD4  CFF5 F171          	movff	tablat,?_scale+2
 27142  014FD8  000A               	tblrd		*-
 27143  014FDA  CFF5 F172          	movff	tablat,?_scale+3
 27144  014FDE  0012               	return	
 27145  014FE0                     __end_of_scale:
 27146                           	opt stack 0
 27147                           tosu	equ	0xFFF
 27148                           tosh	equ	0xFFE
 27149                           tosl	equ	0xFFD
 27150                           pclath	equ	0xFFA
 27151                           tblptru	equ	0xFF8
 27152                           tblptrh	equ	0xFF7
 27153                           tblptrl	equ	0xFF6
 27154                           tablat	equ	0xFF5
 27155                           prodh	equ	0xFF4
 27156                           prodl	equ	0xFF3
 27157                           intcon	equ	0xFF2
 27158                           indf0	equ	0xFEF
 27159                           postinc0	equ	0xFEE
 27160                           fsr0h	equ	0xFEA
 27161                           fsr0l	equ	0xFE9
 27162                           wreg	equ	0xFE8
 27163                           indf1	equ	0xFE7
 27164                           postdec1	equ	0xFE5
 27165                           plusw1	equ	0xFE3
 27166                           fsr1h	equ	0xFE2
 27167                           fsr1l	equ	0xFE1
 27168                           indf2	equ	0xFDF
 27169                           postinc2	equ	0xFDE
 27170                           postdec2	equ	0xFDD
 27171                           plusw2	equ	0xFDB
 27172                           fsr2h	equ	0xFDA
 27173                           fsr2l	equ	0xFD9
 27174                           status	equ	0xFD8
 27175                           
 27176 ;; *************** function _putch *****************
 27177 ;; Defined at:
 27178 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 27179 ;; Parameters:    Size  Location     Type
 27180 ;;  txData          1    wreg     unsigned char 
 27181 ;; Auto vars:     Size  Location     Type
 27182 ;;  txData          1   24[BANK1 ] unsigned char 
 27183 ;; Return value:  Size  Location     Type
 27184 ;;                  1    wreg      void 
 27185 ;; Registers used:
 27186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27187 ;; Tracked objects:
 27188 ;;		On entry : 0/0
 27189 ;;		On exit  : 0/0
 27190 ;;		Unchanged: 0/0
 27191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27193 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27195 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27196 ;;Total ram usage:        1 bytes
 27197 ;; Hardware stack levels used:    1
 27198 ;; Hardware stack levels required when called:   14
 27199 ;; This function calls:
 27200 ;;		_EUSART2_Write
 27201 ;; This function is called by:
 27202 ;;		_printf
 27203 ;;		__doprnt
 27204 ;;		i2__doprnt
 27205 ;; This function uses a non-reentrant model
 27206 ;;
 27207                           
 27208                           	psect	text35
 27209  01B05A                     __ptext35:
 27210                           	opt stack 0
 27211  01B05A                     _putch:
 27212                           	opt stack 0
 27213                           
 27214                           ;Skip over the trampoline to the duplicate function for level 2
 27215  01B05A  B25F               	btfsc	btemp,1,c
 27216  01B05C  EFD9  F0D8         	goto	i2_putch
 27217  01B060                     _putch$intlevel0:
 27218                           	opt stack 12
 27219                           
 27220                           ;incstack = 0
 27221                           ;putch@txData stored from wreg
 27222  01B060  0101               	movlb	1	; () banked
 27223  01B062  6F18               	movwf	putch@txData& (0+255),b
 27224                           
 27225                           ;eusart2.c: 187: EUSART2_Write(txData);
 27226  01B064  0101               	movlb	1	; () banked
 27227  01B066  5118               	movf	putch@txData& (0+255),w,b
 27228  01B068  EC3F  F0D2         	call	_EUSART2_Write
 27229  01B06C  0012               	return		;funcret
 27230  01B06E                     __end_of_putch:
 27231                           	opt stack 0
 27232                           tosu	equ	0xFFF
 27233                           tosh	equ	0xFFE
 27234                           tosl	equ	0xFFD
 27235                           pclath	equ	0xFFA
 27236                           tblptru	equ	0xFF8
 27237                           tblptrh	equ	0xFF7
 27238                           tblptrl	equ	0xFF6
 27239                           tablat	equ	0xFF5
 27240                           prodh	equ	0xFF4
 27241                           prodl	equ	0xFF3
 27242                           intcon	equ	0xFF2
 27243                           indf0	equ	0xFEF
 27244                           postinc0	equ	0xFEE
 27245                           fsr0h	equ	0xFEA
 27246                           fsr0l	equ	0xFE9
 27247                           wreg	equ	0xFE8
 27248                           indf1	equ	0xFE7
 27249                           postdec1	equ	0xFE5
 27250                           plusw1	equ	0xFE3
 27251                           fsr1h	equ	0xFE2
 27252                           fsr1l	equ	0xFE1
 27253                           indf2	equ	0xFDF
 27254                           postinc2	equ	0xFDE
 27255                           postdec2	equ	0xFDD
 27256                           plusw2	equ	0xFDB
 27257                           fsr2h	equ	0xFDA
 27258                           fsr2l	equ	0xFD9
 27259                           status	equ	0xFD8
 27260                           
 27261 ;; *************** function _EUSART2_Write *****************
 27262 ;; Defined at:
 27263 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 27264 ;; Parameters:    Size  Location     Type
 27265 ;;  txData          1    wreg     unsigned char 
 27266 ;; Auto vars:     Size  Location     Type
 27267 ;;  txData          1   23[BANK1 ] unsigned char 
 27268 ;; Return value:  Size  Location     Type
 27269 ;;                  1    wreg      void 
 27270 ;; Registers used:
 27271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27272 ;; Tracked objects:
 27273 ;;		On entry : 0/0
 27274 ;;		On exit  : 0/0
 27275 ;;		Unchanged: 0/0
 27276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27278 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27280 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27281 ;;Total ram usage:        1 bytes
 27282 ;; Hardware stack levels used:    1
 27283 ;; Hardware stack levels required when called:   13
 27284 ;; This function calls:
 27285 ;;		Nothing
 27286 ;; This function is called by:
 27287 ;;		_putch
 27288 ;; This function uses a non-reentrant model
 27289 ;;
 27290                           
 27291                           	psect	text36
 27292  01A47E                     __ptext36:
 27293                           	opt stack 0
 27294  01A47E                     _EUSART2_Write:
 27295                           	opt stack 12
 27296                           
 27297                           ;incstack = 0
 27298                           ;EUSART2_Write@txData stored from wreg
 27299  01A47E  0101               	movlb	1	; () banked
 27300  01A480  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 27301                           
 27302                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 27303  01A482  D004               	goto	l430
 27304  01A484                     l431:
 27305                           
 27306                           ; BSR set to: 1
 27307  01A484  0004               	clrwdt		;# 
 27308                           
 27309                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 27310  01A486  0E01               	movlw	1
 27311  01A488  0102               	movlb	2	; () banked
 27312  01A48A  6F08               	movwf	(_error_handler+8)& (0+255),b
 27313  01A48C                     l430:
 27314                           
 27315                           ; BSR set to: 2
 27316  01A48C  0101               	movlb	1	; () banked
 27317  01A48E  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27318  01A490  B4D8               	btfsc	status,2,c
 27319  01A492  D7F8               	goto	l431
 27320                           
 27321                           ; BSR set to: 1
 27322                           ;eusart2.c: 161: }
 27323                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 27324  01A494  010E               	movlb	14	; () banked
 27325  01A496  BD2C               	btfsc	44,6,b	;volatile
 27326  01A498  D003               	goto	l433
 27327                           
 27328                           ; BSR set to: 14
 27329                           ;eusart2.c: 164: {
 27330                           ;eusart2.c: 165: TX2REG = txData;
 27331  01A49A  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 27332                           
 27333                           ;eusart2.c: 166: }
 27334  01A49E  D013               	goto	l434
 27335  01A4A0                     l433:
 27336                           
 27337                           ; BSR set to: 14
 27338                           ;eusart2.c: 167: else
 27339                           ;eusart2.c: 168: {
 27340                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 27341  01A4A0  9D2C               	bcf	44,6,b	;volatile
 27342                           
 27343                           ; BSR set to: 14
 27344                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 27345  01A4A2  0101               	movlb	1	; () banked
 27346  01A4A4  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27347  01A4A6  0D01               	mullw	1
 27348  01A4A8  0E00               	movlw	low _eusart2TxBuffer
 27349  01A4AA  24F3               	addwf	prodl,w,c
 27350  01A4AC  6ED9               	movwf	fsr2l,c
 27351  01A4AE  0E03               	movlw	high _eusart2TxBuffer
 27352  01A4B0  20F4               	addwfc	prodh,w,c
 27353  01A4B2  6EDA               	movwf	fsr2h,c
 27354  01A4B4  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 27355                           
 27356                           ; BSR set to: 1
 27357  01A4B8  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27358                           
 27359                           ; BSR set to: 1
 27360                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27361  01A4BA  0E7F               	movlw	127
 27362  01A4BC  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27363  01A4BE  D002               	goto	l435
 27364                           
 27365                           ; BSR set to: 1
 27366                           ;eusart2.c: 172: {
 27367                           ;eusart2.c: 173: eusart2TxHead = 0;
 27368  01A4C0  0E00               	movlw	0
 27369  01A4C2  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27370  01A4C4                     l435:
 27371                           
 27372                           ; BSR set to: 1
 27373                           ;eusart2.c: 174: }
 27374                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 27375                           
 27376                           ; BSR set to: 1
 27377  01A4C4  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27378  01A4C6                     l434:
 27379                           
 27380                           ;eusart2.c: 176: }
 27381                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 27382                           
 27383                           ; BSR set to: 1
 27384  01A4C6  010E               	movlb	14	; () banked
 27385  01A4C8  8D2C               	bsf	44,6,b	;volatile
 27386                           
 27387                           ; BSR set to: 14
 27388  01A4CA  0012               	return		;funcret
 27389  01A4CC                     __end_of_EUSART2_Write:
 27390                           	opt stack 0
 27391                           tosu	equ	0xFFF
 27392                           tosh	equ	0xFFE
 27393                           tosl	equ	0xFFD
 27394                           pclath	equ	0xFFA
 27395                           tblptru	equ	0xFF8
 27396                           tblptrh	equ	0xFF7
 27397                           tblptrl	equ	0xFF6
 27398                           tablat	equ	0xFF5
 27399                           prodh	equ	0xFF4
 27400                           prodl	equ	0xFF3
 27401                           intcon	equ	0xFF2
 27402                           indf0	equ	0xFEF
 27403                           postinc0	equ	0xFEE
 27404                           fsr0h	equ	0xFEA
 27405                           fsr0l	equ	0xFE9
 27406                           wreg	equ	0xFE8
 27407                           indf1	equ	0xFE7
 27408                           postdec1	equ	0xFE5
 27409                           plusw1	equ	0xFE3
 27410                           fsr1h	equ	0xFE2
 27411                           fsr1l	equ	0xFE1
 27412                           indf2	equ	0xFDF
 27413                           postinc2	equ	0xFDE
 27414                           postdec2	equ	0xFDD
 27415                           plusw2	equ	0xFDB
 27416                           fsr2h	equ	0xFDA
 27417                           fsr2l	equ	0xFD9
 27418                           status	equ	0xFD8
 27419                           
 27420 ;; *************** function _isdigit *****************
 27421 ;; Defined at:
 27422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27423 ;; Parameters:    Size  Location     Type
 27424 ;;  c               1    wreg     unsigned char 
 27425 ;; Auto vars:     Size  Location     Type
 27426 ;;  c               1   25[BANK1 ] unsigned char 
 27427 ;; Return value:  Size  Location     Type
 27428 ;;		None               void
 27429 ;; Registers used:
 27430 ;;		wreg, status,2, status,0
 27431 ;; Tracked objects:
 27432 ;;		On entry : 0/0
 27433 ;;		On exit  : 0/0
 27434 ;;		Unchanged: 0/0
 27435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27437 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27438 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27439 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27440 ;;Total ram usage:        3 bytes
 27441 ;; Hardware stack levels used:    1
 27442 ;; Hardware stack levels required when called:   13
 27443 ;; This function calls:
 27444 ;;		Nothing
 27445 ;; This function is called by:
 27446 ;;		__doprnt
 27447 ;;		_atoi
 27448 ;; This function uses a non-reentrant model
 27449 ;;
 27450                           
 27451                           	psect	text37
 27452  01AEC0                     __ptext37:
 27453                           	opt stack 0
 27454  01AEC0                     _isdigit:
 27455                           	opt stack 13
 27456                           
 27457                           ; BSR set to: 14
 27458                           ;incstack = 0
 27459                           ;isdigit@c stored from wreg
 27460  01AEC0  0101               	movlb	1	; () banked
 27461  01AEC2  6F19               	movwf	isdigit@c& (0+255),b
 27462  01AEC4  0E00               	movlw	0
 27463  01AEC6  0101               	movlb	1	; () banked
 27464  01AEC8  6F18               	movwf	_isdigit$4314& (0+255),b
 27465                           
 27466                           ; BSR set to: 1
 27467  01AECA  0E3A               	movlw	58
 27468  01AECC  6119               	cpfslt	isdigit@c& (0+255),b
 27469  01AECE  D005               	goto	l2550
 27470                           
 27471                           ; BSR set to: 1
 27472  01AED0  0E2F               	movlw	47
 27473  01AED2  6519               	cpfsgt	isdigit@c& (0+255),b
 27474  01AED4  D002               	goto	l2550
 27475                           
 27476                           ; BSR set to: 1
 27477  01AED6  0E01               	movlw	1
 27478  01AED8  6F18               	movwf	_isdigit$4314& (0+255),b
 27479  01AEDA                     l2550:
 27480                           
 27481                           ; BSR set to: 1
 27482                           
 27483                           ; BSR set to: 1
 27484  01AEDA  C118  F117         	movff	_isdigit$4314,??_isdigit
 27485  01AEDE  3117               	rrcf	??_isdigit& (0+255),w,b
 27486  01AEE0  0012               	return	
 27487  01AEE2                     __end_of_isdigit:
 27488                           	opt stack 0
 27489                           tosu	equ	0xFFF
 27490                           tosh	equ	0xFFE
 27491                           tosl	equ	0xFFD
 27492                           pclath	equ	0xFFA
 27493                           tblptru	equ	0xFF8
 27494                           tblptrh	equ	0xFF7
 27495                           tblptrl	equ	0xFF6
 27496                           tablat	equ	0xFF5
 27497                           prodh	equ	0xFF4
 27498                           prodl	equ	0xFF3
 27499                           intcon	equ	0xFF2
 27500                           indf0	equ	0xFEF
 27501                           postinc0	equ	0xFEE
 27502                           fsr0h	equ	0xFEA
 27503                           fsr0l	equ	0xFE9
 27504                           wreg	equ	0xFE8
 27505                           indf1	equ	0xFE7
 27506                           postdec1	equ	0xFE5
 27507                           plusw1	equ	0xFE3
 27508                           fsr1h	equ	0xFE2
 27509                           fsr1l	equ	0xFE1
 27510                           indf2	equ	0xFDF
 27511                           postinc2	equ	0xFDE
 27512                           postdec2	equ	0xFDD
 27513                           plusw2	equ	0xFDB
 27514                           fsr2h	equ	0xFDA
 27515                           fsr2l	equ	0xFD9
 27516                           status	equ	0xFD8
 27517                           
 27518 ;; *************** function _fround *****************
 27519 ;; Defined at:
 27520 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27521 ;; Parameters:    Size  Location     Type
 27522 ;;  prec            1    wreg     unsigned char 
 27523 ;; Auto vars:     Size  Location     Type
 27524 ;;  prec            1  123[BANK1 ] unsigned char 
 27525 ;; Return value:  Size  Location     Type
 27526 ;;                  4  111[BANK1 ] unsigned char 
 27527 ;; Registers used:
 27528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27529 ;; Tracked objects:
 27530 ;;		On entry : 0/0
 27531 ;;		On exit  : 0/0
 27532 ;;		Unchanged: 0/0
 27533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27534 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27535 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27537 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27538 ;;Total ram usage:       13 bytes
 27539 ;; Hardware stack levels used:    1
 27540 ;; Hardware stack levels required when called:   14
 27541 ;; This function calls:
 27542 ;;		___awdiv
 27543 ;;		___awmod
 27544 ;;		___flmul
 27545 ;; This function is called by:
 27546 ;;		__doprnt
 27547 ;; This function uses a non-reentrant model
 27548 ;;
 27549                           
 27550                           	psect	text38
 27551  016DAC                     __ptext38:
 27552                           	opt stack 0
 27553  016DAC                     _fround:
 27554                           	opt stack 12
 27555                           
 27556                           ; BSR set to: 1
 27557                           ;incstack = 0
 27558                           ;fround@prec stored from wreg
 27559  016DAC  0101               	movlb	1	; () banked
 27560  016DAE  6F7B               	movwf	fround@prec& (0+255),b
 27561                           
 27562                           ;doprnt.c: 413: if(prec>=110)
 27563  016DB0  0E6D               	movlw	109
 27564  016DB2  0101               	movlb	1	; () banked
 27565  016DB4  657B               	cpfsgt	fround@prec& (0+255),b
 27566  016DB6  D0BA               	goto	l1918
 27567                           
 27568                           ; BSR set to: 1
 27569                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27570  016DB8  0E00               	movlw	0
 27571  016DBA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27572  016DBC  0E0A               	movlw	10
 27573  016DBE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27574  016DC0  0E00               	movlw	0
 27575  016DC2  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27576  016DC4  0E64               	movlw	100
 27577  016DC6  6F19               	movwf	___awmod@divisor& (0+255),b
 27578  016DC8  C17B  F117         	movff	fround@prec,___awmod@dividend
 27579  016DCC  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27580  016DCE  ECEF  F0CE         	call	___awmod	;wreg free
 27581  016DD2  C117  F11D         	movff	?___awmod,___awdiv@dividend
 27582  016DD6  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 27583  016DDA  EC2B  F0CD         	call	___awdiv	;wreg free
 27584  016DDE  0101               	movlb	1	; () banked
 27585  016DE0  90D8               	bcf	status,0,c
 27586  016DE2  371D               	rlcf	?___awdiv& (0+255),f,b
 27587  016DE4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27588  016DE6  90D8               	bcf	status,0,c
 27589  016DE8  371D               	rlcf	?___awdiv& (0+255),f,b
 27590  016DEA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27591  016DEC  0E24               	movlw	36
 27592  016DEE  271D               	addwf	?___awdiv& (0+255),f,b
 27593  016DF0  0E00               	movlw	0
 27594  016DF2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27595  016DF4  0EDB               	movlw	low __npowers_
 27596  016DF6  251D               	addwf	?___awdiv& (0+255),w,b
 27597  016DF8  6EF6               	movwf	tblptrl,c
 27598  016DFA  0ECE               	movlw	high __npowers_
 27599  016DFC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27600  016DFE  6EF7               	movwf	tblptrh,c
 27601  016E00                     	if	1	;There are 3 active tblptr bytes
 27602  016E00  6AF8               	clrf	tblptru,c
 27603  016E02  0E00               	movlw	low (__mediumconst shr (0+16))
 27604  016E04  22F8               	addwfc	tblptru,f,c
 27605  016E06                     	endif
 27606  016E06  0009               	tblrd		*+
 27607  016E08  CFF5 F15A          	movff	tablat,___flmul@a
 27608  016E0C  0009               	tblrd		*+
 27609  016E0E  CFF5 F15B          	movff	tablat,___flmul@a+1
 27610  016E12  0009               	tblrd		*+
 27611  016E14  CFF5 F15C          	movff	tablat,___flmul@a+2
 27612  016E18  000A               	tblrd		*-
 27613  016E1A  CFF5 F15D          	movff	tablat,___flmul@a+3
 27614  016E1E  0E00               	movlw	0
 27615  016E20  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27616  016E22  0E64               	movlw	100
 27617  016E24  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27618  016E26  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27619  016E2A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27620  016E2C  EC2B  F0CD         	call	___awdiv	;wreg free
 27621  016E30  0101               	movlb	1	; () banked
 27622  016E32  90D8               	bcf	status,0,c
 27623  016E34  371D               	rlcf	?___awdiv& (0+255),f,b
 27624  016E36  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27625  016E38  90D8               	bcf	status,0,c
 27626  016E3A  371D               	rlcf	?___awdiv& (0+255),f,b
 27627  016E3C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27628  016E3E  0E48               	movlw	72
 27629  016E40  271D               	addwf	?___awdiv& (0+255),f,b
 27630  016E42  0E00               	movlw	0
 27631  016E44  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27632  016E46  0EDB               	movlw	low __npowers_
 27633  016E48  251D               	addwf	?___awdiv& (0+255),w,b
 27634  016E4A  6EF6               	movwf	tblptrl,c
 27635  016E4C  0ECE               	movlw	high __npowers_
 27636  016E4E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27637  016E50  6EF7               	movwf	tblptrh,c
 27638  016E52                     	if	1	;There are 3 active tblptr bytes
 27639  016E52  6AF8               	clrf	tblptru,c
 27640  016E54  0E00               	movlw	low (__mediumconst shr (0+16))
 27641  016E56  22F8               	addwfc	tblptru,f,c
 27642  016E58                     	endif
 27643  016E58  0009               	tblrd		*+
 27644  016E5A  CFF5 F156          	movff	tablat,___flmul@b
 27645  016E5E  0009               	tblrd		*+
 27646  016E60  CFF5 F157          	movff	tablat,___flmul@b+1
 27647  016E64  0009               	tblrd		*+
 27648  016E66  CFF5 F158          	movff	tablat,___flmul@b+2
 27649  016E6A  000A               	tblrd		*-
 27650  016E6C  CFF5 F159          	movff	tablat,___flmul@b+3
 27651  016E70  ECE4  F0AB         	call	___flmul	;wreg free
 27652  016E74  C156  F177         	movff	?___flmul,_fround$5162
 27653  016E78  C157  F178         	movff	?___flmul+1,_fround$5162+1
 27654  016E7C  C158  F179         	movff	?___flmul+2,_fround$5162+2
 27655  016E80  C159  F17A         	movff	?___flmul+3,_fround$5162+3
 27656                           
 27657                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27658  016E84  0E00               	movlw	0
 27659  016E86  0101               	movlb	1	; () banked
 27660  016E88  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27661  016E8A  0E0A               	movlw	10
 27662  016E8C  6F19               	movwf	___awmod@divisor& (0+255),b
 27663  016E8E  C17B  F117         	movff	fround@prec,___awmod@dividend
 27664  016E92  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27665  016E94  ECEF  F0CE         	call	___awmod	;wreg free
 27666  016E98  0101               	movlb	1	; () banked
 27667  016E9A  90D8               	bcf	status,0,c
 27668  016E9C  3717               	rlcf	?___awmod& (0+255),f,b
 27669  016E9E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27670  016EA0  90D8               	bcf	status,0,c
 27671  016EA2  3717               	rlcf	?___awmod& (0+255),f,b
 27672  016EA4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27673  016EA6  0EDB               	movlw	low __npowers_
 27674  016EA8  2517               	addwf	?___awmod& (0+255),w,b
 27675  016EAA  6EF6               	movwf	tblptrl,c
 27676  016EAC  0ECE               	movlw	high __npowers_
 27677  016EAE  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27678  016EB0  6EF7               	movwf	tblptrh,c
 27679  016EB2                     	if	1	;There are 3 active tblptr bytes
 27680  016EB2  6AF8               	clrf	tblptru,c
 27681  016EB4  0E00               	movlw	low (__mediumconst shr (0+16))
 27682  016EB6  22F8               	addwfc	tblptru,f,c
 27683  016EB8                     	endif
 27684  016EB8  0009               	tblrd		*+
 27685  016EBA  CFF5 F15A          	movff	tablat,___flmul@a
 27686  016EBE  0009               	tblrd		*+
 27687  016EC0  CFF5 F15B          	movff	tablat,___flmul@a+1
 27688  016EC4  0009               	tblrd		*+
 27689  016EC6  CFF5 F15C          	movff	tablat,___flmul@a+2
 27690  016ECA  000A               	tblrd		*-
 27691  016ECC  CFF5 F15D          	movff	tablat,___flmul@a+3
 27692  016ED0  C177  F156         	movff	_fround$5162,___flmul@b
 27693  016ED4  C178  F157         	movff	_fround$5162+1,___flmul@b+1
 27694  016ED8  C179  F158         	movff	_fround$5162+2,___flmul@b+2
 27695  016EDC  C17A  F159         	movff	_fround$5162+3,___flmul@b+3
 27696  016EE0  ECE4  F0AB         	call	___flmul	;wreg free
 27697  016EE4  C156  F173         	movff	?___flmul,_fround$5163
 27698  016EE8  C157  F174         	movff	?___flmul+1,_fround$5163+1
 27699  016EEC  C158  F175         	movff	?___flmul+2,_fround$5163+2
 27700  016EF0  C159  F176         	movff	?___flmul+3,_fround$5163+3
 27701                           
 27702                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27703  016EF4  C173  F156         	movff	_fround$5163,___flmul@b
 27704  016EF8  C174  F157         	movff	_fround$5163+1,___flmul@b+1
 27705  016EFC  C175  F158         	movff	_fround$5163+2,___flmul@b+2
 27706  016F00  C176  F159         	movff	_fround$5163+3,___flmul@b+3
 27707  016F04  0E00               	movlw	0
 27708  016F06  0101               	movlb	1	; () banked
 27709  016F08  6F5A               	movwf	___flmul@a& (0+255),b
 27710  016F0A  0E00               	movlw	0
 27711  016F0C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27712  016F0E  0E00               	movlw	0
 27713  016F10  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27714  016F12  0E3F               	movlw	63
 27715  016F14  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27716  016F16  ECE4  F0AB         	call	___flmul	;wreg free
 27717  016F1A  C156  F16F         	movff	?___flmul,?_fround
 27718  016F1E  C157  F170         	movff	?___flmul+1,?_fround+1
 27719  016F22  C158  F171         	movff	?___flmul+2,?_fround+2
 27720  016F26  C159  F172         	movff	?___flmul+3,?_fround+3
 27721  016F2A  0012               	return	
 27722  016F2C                     l1918:
 27723                           
 27724                           ;doprnt.c: 415: else if(prec > 10)
 27725  016F2C  0E0A               	movlw	10
 27726  016F2E  0101               	movlb	1	; () banked
 27727  016F30  657B               	cpfsgt	fround@prec& (0+255),b
 27728  016F32  D074               	goto	l1921
 27729                           
 27730                           ; BSR set to: 1
 27731                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27732  016F34  0E00               	movlw	0
 27733  016F36  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27734  016F38  0E0A               	movlw	10
 27735  016F3A  6F19               	movwf	___awmod@divisor& (0+255),b
 27736  016F3C  C17B  F117         	movff	fround@prec,___awmod@dividend
 27737  016F40  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27738  016F42  ECEF  F0CE         	call	___awmod	;wreg free
 27739  016F46  0101               	movlb	1	; () banked
 27740  016F48  90D8               	bcf	status,0,c
 27741  016F4A  3717               	rlcf	?___awmod& (0+255),f,b
 27742  016F4C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27743  016F4E  90D8               	bcf	status,0,c
 27744  016F50  3717               	rlcf	?___awmod& (0+255),f,b
 27745  016F52  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27746  016F54  0EDB               	movlw	low __npowers_
 27747  016F56  2517               	addwf	?___awmod& (0+255),w,b
 27748  016F58  6EF6               	movwf	tblptrl,c
 27749  016F5A  0ECE               	movlw	high __npowers_
 27750  016F5C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27751  016F5E  6EF7               	movwf	tblptrh,c
 27752  016F60                     	if	1	;There are 3 active tblptr bytes
 27753  016F60  6AF8               	clrf	tblptru,c
 27754  016F62  0E00               	movlw	low (__mediumconst shr (0+16))
 27755  016F64  22F8               	addwfc	tblptru,f,c
 27756  016F66                     	endif
 27757  016F66  0009               	tblrd		*+
 27758  016F68  CFF5 F15A          	movff	tablat,___flmul@a
 27759  016F6C  0009               	tblrd		*+
 27760  016F6E  CFF5 F15B          	movff	tablat,___flmul@a+1
 27761  016F72  0009               	tblrd		*+
 27762  016F74  CFF5 F15C          	movff	tablat,___flmul@a+2
 27763  016F78  000A               	tblrd		*-
 27764  016F7A  CFF5 F15D          	movff	tablat,___flmul@a+3
 27765  016F7E  0E00               	movlw	0
 27766  016F80  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27767  016F82  0E0A               	movlw	10
 27768  016F84  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27769  016F86  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27770  016F8A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27771  016F8C  EC2B  F0CD         	call	___awdiv	;wreg free
 27772  016F90  0101               	movlb	1	; () banked
 27773  016F92  90D8               	bcf	status,0,c
 27774  016F94  371D               	rlcf	?___awdiv& (0+255),f,b
 27775  016F96  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27776  016F98  90D8               	bcf	status,0,c
 27777  016F9A  371D               	rlcf	?___awdiv& (0+255),f,b
 27778  016F9C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27779  016F9E  0E24               	movlw	36
 27780  016FA0  271D               	addwf	?___awdiv& (0+255),f,b
 27781  016FA2  0E00               	movlw	0
 27782  016FA4  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27783  016FA6  0EDB               	movlw	low __npowers_
 27784  016FA8  251D               	addwf	?___awdiv& (0+255),w,b
 27785  016FAA  6EF6               	movwf	tblptrl,c
 27786  016FAC  0ECE               	movlw	high __npowers_
 27787  016FAE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27788  016FB0  6EF7               	movwf	tblptrh,c
 27789  016FB2                     	if	1	;There are 3 active tblptr bytes
 27790  016FB2  6AF8               	clrf	tblptru,c
 27791  016FB4  0E00               	movlw	low (__mediumconst shr (0+16))
 27792  016FB6  22F8               	addwfc	tblptru,f,c
 27793  016FB8                     	endif
 27794  016FB8  0009               	tblrd		*+
 27795  016FBA  CFF5 F156          	movff	tablat,___flmul@b
 27796  016FBE  0009               	tblrd		*+
 27797  016FC0  CFF5 F157          	movff	tablat,___flmul@b+1
 27798  016FC4  0009               	tblrd		*+
 27799  016FC6  CFF5 F158          	movff	tablat,___flmul@b+2
 27800  016FCA  000A               	tblrd		*-
 27801  016FCC  CFF5 F159          	movff	tablat,___flmul@b+3
 27802  016FD0  ECE4  F0AB         	call	___flmul	;wreg free
 27803  016FD4  C156  F177         	movff	?___flmul,_fround$5162
 27804  016FD8  C157  F178         	movff	?___flmul+1,_fround$5162+1
 27805  016FDC  C158  F179         	movff	?___flmul+2,_fround$5162+2
 27806  016FE0  C159  F17A         	movff	?___flmul+3,_fround$5162+3
 27807                           
 27808                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27809  016FE4  C177  F156         	movff	_fround$5162,___flmul@b
 27810  016FE8  C178  F157         	movff	_fround$5162+1,___flmul@b+1
 27811  016FEC  C179  F158         	movff	_fround$5162+2,___flmul@b+2
 27812  016FF0  C17A  F159         	movff	_fround$5162+3,___flmul@b+3
 27813  016FF4  0E00               	movlw	0
 27814  016FF6  0101               	movlb	1	; () banked
 27815  016FF8  6F5A               	movwf	___flmul@a& (0+255),b
 27816  016FFA  0E00               	movlw	0
 27817  016FFC  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27818  016FFE  0E00               	movlw	0
 27819  017000  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27820  017002  0E3F               	movlw	63
 27821  017004  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27822  017006  ECE4  F0AB         	call	___flmul	;wreg free
 27823  01700A  C156  F16F         	movff	?___flmul,?_fround
 27824  01700E  C157  F170         	movff	?___flmul+1,?_fround+1
 27825  017012  C158  F171         	movff	?___flmul+2,?_fround+2
 27826  017016  C159  F172         	movff	?___flmul+3,?_fround+3
 27827  01701A  0012               	return	
 27828  01701C                     l1921:
 27829                           
 27830                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27831  01701C  0101               	movlb	1	; () banked
 27832  01701E  517B               	movf	fround@prec& (0+255),w,b
 27833  017020  0D04               	mullw	4
 27834  017022  0EDB               	movlw	low __npowers_
 27835  017024  24F3               	addwf	prodl,w,c
 27836  017026  6EF6               	movwf	tblptrl,c
 27837  017028  0ECE               	movlw	high __npowers_
 27838  01702A  20F4               	addwfc	prodh,w,c
 27839  01702C  6EF7               	movwf	tblptrh,c
 27840  01702E                     	if	1	;There are 3 active tblptr bytes
 27841  01702E  6AF8               	clrf	tblptru,c
 27842  017030  0E00               	movlw	low (__mediumconst shr (0+16))
 27843  017032  22F8               	addwfc	tblptru,f,c
 27844  017034                     	endif
 27845  017034  0009               	tblrd		*+
 27846  017036  CFF5 F156          	movff	tablat,___flmul@b
 27847  01703A  0009               	tblrd		*+
 27848  01703C  CFF5 F157          	movff	tablat,___flmul@b+1
 27849  017040  0009               	tblrd		*+
 27850  017042  CFF5 F158          	movff	tablat,___flmul@b+2
 27851  017046  000A               	tblrd		*-
 27852  017048  CFF5 F159          	movff	tablat,___flmul@b+3
 27853  01704C  0E00               	movlw	0
 27854  01704E  6F5A               	movwf	___flmul@a& (0+255),b
 27855  017050  0E00               	movlw	0
 27856  017052  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27857  017054  0E00               	movlw	0
 27858  017056  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27859  017058  0E3F               	movlw	63
 27860  01705A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27861  01705C  ECE4  F0AB         	call	___flmul	;wreg free
 27862  017060  C156  F16F         	movff	?___flmul,?_fround
 27863  017064  C157  F170         	movff	?___flmul+1,?_fround+1
 27864  017068  C158  F171         	movff	?___flmul+2,?_fround+2
 27865  01706C  C159  F172         	movff	?___flmul+3,?_fround+3
 27866  017070  0012               	return	
 27867  017072                     __end_of_fround:
 27868                           	opt stack 0
 27869                           tosu	equ	0xFFF
 27870                           tosh	equ	0xFFE
 27871                           tosl	equ	0xFFD
 27872                           pclath	equ	0xFFA
 27873                           tblptru	equ	0xFF8
 27874                           tblptrh	equ	0xFF7
 27875                           tblptrl	equ	0xFF6
 27876                           tablat	equ	0xFF5
 27877                           prodh	equ	0xFF4
 27878                           prodl	equ	0xFF3
 27879                           intcon	equ	0xFF2
 27880                           indf0	equ	0xFEF
 27881                           postinc0	equ	0xFEE
 27882                           fsr0h	equ	0xFEA
 27883                           fsr0l	equ	0xFE9
 27884                           wreg	equ	0xFE8
 27885                           indf1	equ	0xFE7
 27886                           postdec1	equ	0xFE5
 27887                           plusw1	equ	0xFE3
 27888                           fsr1h	equ	0xFE2
 27889                           fsr1l	equ	0xFE1
 27890                           indf2	equ	0xFDF
 27891                           postinc2	equ	0xFDE
 27892                           postdec2	equ	0xFDD
 27893                           plusw2	equ	0xFDB
 27894                           fsr2h	equ	0xFDA
 27895                           fsr2l	equ	0xFD9
 27896                           status	equ	0xFD8
 27897                           
 27898 ;; *************** function ___flmul *****************
 27899 ;; Defined at:
 27900 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 27901 ;; Parameters:    Size  Location     Type
 27902 ;;  b               4   86[BANK1 ] unsigned char 
 27903 ;;  a               4   90[BANK1 ] unsigned char 
 27904 ;; Auto vars:     Size  Location     Type
 27905 ;;  prod            4  105[BANK1 ] struct .
 27906 ;;  grs             4  100[BANK1 ] unsigned long 
 27907 ;;  temp            2  109[BANK1 ] struct .
 27908 ;;  bexp            1  104[BANK1 ] unsigned char 
 27909 ;;  aexp            1   99[BANK1 ] unsigned char 
 27910 ;;  sign            1   98[BANK1 ] unsigned char 
 27911 ;; Return value:  Size  Location     Type
 27912 ;;                  4   86[BANK1 ] unsigned char 
 27913 ;; Registers used:
 27914 ;;		wreg, status,2, status,0, prodl, prodh
 27915 ;; Tracked objects:
 27916 ;;		On entry : 0/0
 27917 ;;		On exit  : 0/0
 27918 ;;		Unchanged: 0/0
 27919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27920 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27921 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27922 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27923 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27924 ;;Total ram usage:       25 bytes
 27925 ;; Hardware stack levels used:    1
 27926 ;; Hardware stack levels required when called:   13
 27927 ;; This function calls:
 27928 ;;		Nothing
 27929 ;; This function is called by:
 27930 ;;		_ringBufferLUT
 27931 ;;		_fround
 27932 ;;		_scale
 27933 ;;		__doprnt
 27934 ;;		_ftoa
 27935 ;; This function uses a non-reentrant model
 27936 ;;
 27937                           
 27938                           	psect	text39
 27939  0157C8                     __ptext39:
 27940                           	opt stack 0
 27941  0157C8                     ___flmul:
 27942                           	opt stack 12
 27943                           
 27944                           ;incstack = 0
 27945  0157C8  0101               	movlb	1	; () banked
 27946  0157CA  5159               	movf	(___flmul@b+3)& (0+255),w,b
 27947  0157CC  0B80               	andlw	128
 27948  0157CE  6F62               	movwf	___flmul@sign& (0+255),b
 27949  0157D0  5159               	movf	(___flmul@b+3)& (0+255),w,b
 27950  0157D2  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 27951  0157D4  6F68               	movwf	___flmul@bexp& (0+255),b
 27952                           
 27953                           ; BSR set to: 1
 27954  0157D6  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 27955                           
 27956                           ; BSR set to: 1
 27957  0157D8  8168               	bsf	___flmul@bexp& (0+255),0,b
 27958                           
 27959                           ; BSR set to: 1
 27960                           
 27961                           ; BSR set to: 1
 27962  0157DA  5168               	movf	___flmul@bexp& (0+255),w,b
 27963  0157DC  B4D8               	btfsc	status,2,c
 27964  0157DE  D00D               	goto	l2797
 27965                           
 27966                           ; BSR set to: 1
 27967  0157E0  2968               	incf	___flmul@bexp& (0+255),w,b
 27968  0157E2  A4D8               	btfss	status,2,c
 27969  0157E4  D008               	goto	l2798
 27970                           
 27971                           ; BSR set to: 1
 27972  0157E6  0E00               	movlw	0
 27973  0157E8  6F56               	movwf	___flmul@b& (0+255),b
 27974  0157EA  0E00               	movlw	0
 27975  0157EC  6F57               	movwf	(___flmul@b+1)& (0+255),b
 27976  0157EE  0E00               	movlw	0
 27977  0157F0  6F58               	movwf	(___flmul@b+2)& (0+255),b
 27978  0157F2  0E00               	movlw	0
 27979  0157F4  6F59               	movwf	(___flmul@b+3)& (0+255),b
 27980  0157F6                     l2798:
 27981                           
 27982                           ; BSR set to: 1
 27983                           
 27984                           ; BSR set to: 1
 27985  0157F6  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 27986  0157F8  D008               	goto	l2799
 27987  0157FA                     l2797:
 27988                           
 27989                           ; BSR set to: 1
 27990                           
 27991                           ; BSR set to: 1
 27992  0157FA  0E00               	movlw	0
 27993  0157FC  6F56               	movwf	___flmul@b& (0+255),b
 27994  0157FE  0E00               	movlw	0
 27995  015800  6F57               	movwf	(___flmul@b+1)& (0+255),b
 27996  015802  0E00               	movlw	0
 27997  015804  6F58               	movwf	(___flmul@b+2)& (0+255),b
 27998  015806  0E00               	movlw	0
 27999  015808  6F59               	movwf	(___flmul@b+3)& (0+255),b
 28000  01580A                     l2799:
 28001                           
 28002                           ; BSR set to: 1
 28003                           
 28004                           ; BSR set to: 1
 28005  01580A  515D               	movf	(___flmul@a+3)& (0+255),w,b
 28006  01580C  0B80               	andlw	128
 28007  01580E  1B62               	xorwf	___flmul@sign& (0+255),f,b
 28008                           
 28009                           ; BSR set to: 1
 28010  015810  515D               	movf	(___flmul@a+3)& (0+255),w,b
 28011  015812  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 28012  015814  6F63               	movwf	___flmul@aexp& (0+255),b
 28013                           
 28014                           ; BSR set to: 1
 28015  015816  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 28016                           
 28017                           ; BSR set to: 1
 28018  015818  8163               	bsf	___flmul@aexp& (0+255),0,b
 28019                           
 28020                           ; BSR set to: 1
 28021                           
 28022                           ; BSR set to: 1
 28023  01581A  5163               	movf	___flmul@aexp& (0+255),w,b
 28024  01581C  B4D8               	btfsc	status,2,c
 28025  01581E  D00D               	goto	l2801
 28026                           
 28027                           ; BSR set to: 1
 28028  015820  2963               	incf	___flmul@aexp& (0+255),w,b
 28029  015822  A4D8               	btfss	status,2,c
 28030  015824  D008               	goto	l2802
 28031                           
 28032                           ; BSR set to: 1
 28033  015826  0E00               	movlw	0
 28034  015828  6F5A               	movwf	___flmul@a& (0+255),b
 28035  01582A  0E00               	movlw	0
 28036  01582C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28037  01582E  0E00               	movlw	0
 28038  015830  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28039  015832  0E00               	movlw	0
 28040  015834  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28041  015836                     l2802:
 28042                           
 28043                           ; BSR set to: 1
 28044                           
 28045                           ; BSR set to: 1
 28046  015836  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 28047  015838  D008               	goto	l2803
 28048  01583A                     l2801:
 28049                           
 28050                           ; BSR set to: 1
 28051                           
 28052                           ; BSR set to: 1
 28053  01583A  0E00               	movlw	0
 28054  01583C  6F5A               	movwf	___flmul@a& (0+255),b
 28055  01583E  0E00               	movlw	0
 28056  015840  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28057  015842  0E00               	movlw	0
 28058  015844  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28059  015846  0E00               	movlw	0
 28060  015848  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28061  01584A                     l2803:
 28062                           
 28063                           ; BSR set to: 1
 28064  01584A  5163               	movf	___flmul@aexp& (0+255),w,b
 28065  01584C  B4D8               	btfsc	status,2,c
 28066  01584E  D003               	goto	u17000
 28067                           
 28068                           ; BSR set to: 1
 28069  015850  5168               	movf	___flmul@bexp& (0+255),w,b
 28070  015852  A4D8               	btfss	status,2,c
 28071  015854  D009               	goto	l2804
 28072  015856                     u17000:
 28073                           
 28074                           ; BSR set to: 1
 28075                           
 28076                           ; BSR set to: 1
 28077  015856  0E00               	movlw	0
 28078  015858  6F56               	movwf	?___flmul& (0+255),b
 28079  01585A  0E00               	movlw	0
 28080  01585C  6F57               	movwf	(?___flmul+1)& (0+255),b
 28081  01585E  0E00               	movlw	0
 28082  015860  6F58               	movwf	(?___flmul+2)& (0+255),b
 28083  015862  0E00               	movlw	0
 28084  015864  6F59               	movwf	(?___flmul+3)& (0+255),b
 28085                           
 28086                           ; BSR set to: 1
 28087  015866  0012               	return	
 28088  015868                     l2804:
 28089                           
 28090                           ; BSR set to: 1
 28091                           
 28092                           ; BSR set to: 1
 28093  015868  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28094  01586A  0356               	mulwf	___flmul@b& (0+255),b
 28095  01586C  CFF3 F16D          	movff	prodl,___flmul@temp
 28096  015870  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28097                           
 28098                           ; BSR set to: 1
 28099  015874  516D               	movf	___flmul@temp& (0+255),w,b
 28100  015876  6F64               	movwf	___flmul@grs& (0+255),b
 28101  015878  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 28102  01587A  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 28103  01587C  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 28104                           
 28105                           ; BSR set to: 1
 28106  01587E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28107  015880  6F69               	movwf	___flmul@prod& (0+255),b
 28108  015882  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 28109  015884  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 28110  015886  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 28111  015888  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28112  01588A  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28113  01588C  CFF3 F16D          	movff	prodl,___flmul@temp
 28114  015890  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28115                           
 28116                           ; BSR set to: 1
 28117  015894  516D               	movf	___flmul@temp& (0+255),w,b
 28118  015896  2764               	addwf	___flmul@grs& (0+255),f,b
 28119  015898  0E00               	movlw	0
 28120  01589A  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28121  01589C  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28122  01589E  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28123                           
 28124                           ; BSR set to: 1
 28125  0158A0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28126  0158A2  2769               	addwf	___flmul@prod& (0+255),f,b
 28127  0158A4  0E00               	movlw	0
 28128  0158A6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28129  0158A8  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28130  0158AA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28131  0158AC  515A               	movf	___flmul@a& (0+255),w,b
 28132  0158AE  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28133  0158B0  CFF3 F16D          	movff	prodl,___flmul@temp
 28134  0158B4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28135                           
 28136                           ; BSR set to: 1
 28137  0158B8  516D               	movf	___flmul@temp& (0+255),w,b
 28138  0158BA  2764               	addwf	___flmul@grs& (0+255),f,b
 28139  0158BC  0E00               	movlw	0
 28140  0158BE  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28141  0158C0  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28142  0158C2  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28143                           
 28144                           ; BSR set to: 1
 28145  0158C4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28146  0158C6  2769               	addwf	___flmul@prod& (0+255),f,b
 28147  0158C8  0E00               	movlw	0
 28148  0158CA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28149  0158CC  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28150  0158CE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28151                           
 28152                           ; BSR set to: 1
 28153  0158D0  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28154  0158D4  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28155  0158D8  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28156  0158DC  6B64               	clrf	___flmul@grs& (0+255),b
 28157                           
 28158                           ; BSR set to: 1
 28159  0158DE  515A               	movf	___flmul@a& (0+255),w,b
 28160  0158E0  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28161  0158E2  CFF3 F16D          	movff	prodl,___flmul@temp
 28162  0158E6  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28163                           
 28164                           ; BSR set to: 1
 28165  0158EA  516D               	movf	___flmul@temp& (0+255),w,b
 28166  0158EC  2764               	addwf	___flmul@grs& (0+255),f,b
 28167  0158EE  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28168  0158F0  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28169  0158F2  0E00               	movlw	0
 28170  0158F4  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28171  0158F6  0E00               	movlw	0
 28172  0158F8  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28173                           
 28174                           ; BSR set to: 1
 28175  0158FA  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28176  0158FC  0356               	mulwf	___flmul@b& (0+255),b
 28177  0158FE  CFF3 F16D          	movff	prodl,___flmul@temp
 28178  015902  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28179                           
 28180                           ; BSR set to: 1
 28181  015906  516D               	movf	___flmul@temp& (0+255),w,b
 28182  015908  2764               	addwf	___flmul@grs& (0+255),f,b
 28183  01590A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28184  01590C  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28185  01590E  0E00               	movlw	0
 28186  015910  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28187  015912  0E00               	movlw	0
 28188  015914  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28189                           
 28190                           ; BSR set to: 1
 28191  015916  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28192  01591A  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28193  01591E  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28194  015922  6B64               	clrf	___flmul@grs& (0+255),b
 28195  015924  515A               	movf	___flmul@a& (0+255),w,b
 28196  015926  0356               	mulwf	___flmul@b& (0+255),b
 28197  015928  CFF3 F16D          	movff	prodl,___flmul@temp
 28198  01592C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28199                           
 28200                           ; BSR set to: 1
 28201  015930  516D               	movf	___flmul@temp& (0+255),w,b
 28202  015932  2764               	addwf	___flmul@grs& (0+255),f,b
 28203  015934  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28204  015936  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28205  015938  0E00               	movlw	0
 28206  01593A  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28207  01593C  0E00               	movlw	0
 28208  01593E  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28209                           
 28210                           ; BSR set to: 1
 28211  015940  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28212  015942  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28213  015944  CFF3 F16D          	movff	prodl,___flmul@temp
 28214  015948  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28215  01594C  516D               	movf	___flmul@temp& (0+255),w,b
 28216  01594E  2769               	addwf	___flmul@prod& (0+255),f,b
 28217  015950  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28218  015952  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28219  015954  0E00               	movlw	0
 28220  015956  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28221  015958  0E00               	movlw	0
 28222  01595A  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28223                           
 28224                           ; BSR set to: 1
 28225  01595C  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28226  01595E  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28227  015960  CFF3 F16D          	movff	prodl,___flmul@temp
 28228  015964  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28229                           
 28230                           ; BSR set to: 1
 28231  015968  516D               	movf	___flmul@temp& (0+255),w,b
 28232  01596A  2769               	addwf	___flmul@prod& (0+255),f,b
 28233  01596C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28234  01596E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28235  015970  0E00               	movlw	0
 28236  015972  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28237  015974  0E00               	movlw	0
 28238  015976  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28239  015978  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28240  01597A  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28241  01597C  CFF3 F16D          	movff	prodl,___flmul@temp
 28242  015980  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28243                           
 28244                           ; BSR set to: 1
 28245  015984  516D               	movf	___flmul@temp& (0+255),w,b
 28246  015986  6F5E               	movwf	??___flmul& (0+255),b
 28247  015988  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28248  01598A  6F5F               	movwf	(??___flmul+1)& (0+255),b
 28249  01598C  6B60               	clrf	(??___flmul+2)& (0+255),b
 28250  01598E  6B61               	clrf	(??___flmul+3)& (0+255),b
 28251  015990  C160  F161         	movff	??___flmul+2,??___flmul+3
 28252  015994  C15F  F160         	movff	??___flmul+1,??___flmul+2
 28253  015998  C15E  F15F         	movff	??___flmul,??___flmul+1
 28254  01599C  6B5E               	clrf	??___flmul& (0+255),b
 28255  01599E  515E               	movf	??___flmul& (0+255),w,b
 28256  0159A0  2769               	addwf	___flmul@prod& (0+255),f,b
 28257  0159A2  515F               	movf	(??___flmul+1)& (0+255),w,b
 28258  0159A4  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28259  0159A6  5160               	movf	(??___flmul+2)& (0+255),w,b
 28260  0159A8  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28261  0159AA  5161               	movf	(??___flmul+3)& (0+255),w,b
 28262  0159AC  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28263                           
 28264                           ; BSR set to: 1
 28265  0159AE  C164  F15E         	movff	___flmul@grs,??___flmul
 28266  0159B2  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 28267  0159B6  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 28268  0159BA  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 28269  0159BE  0E19               	movlw	25
 28270  0159C0  D005               	goto	u17010
 28271  0159C2                     u17015:
 28272  0159C2  90D8               	bcf	status,0,c
 28273  0159C4  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 28274  0159C6  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 28275  0159C8  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 28276  0159CA  335E               	rrcf	??___flmul& (0+255),f,b
 28277  0159CC                     u17010:
 28278  0159CC  2EE8               	decfsz	wreg,f,c
 28279  0159CE  D7F9               	goto	u17015
 28280  0159D0  515E               	movf	??___flmul& (0+255),w,b
 28281  0159D2  2769               	addwf	___flmul@prod& (0+255),f,b
 28282  0159D4  515F               	movf	(??___flmul+1)& (0+255),w,b
 28283  0159D6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28284  0159D8  5160               	movf	(??___flmul+2)& (0+255),w,b
 28285  0159DA  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28286  0159DC  5161               	movf	(??___flmul+3)& (0+255),w,b
 28287  0159DE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28288                           
 28289                           ; BSR set to: 1
 28290  0159E0  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28291  0159E4  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28292  0159E8  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28293  0159EC  6B64               	clrf	___flmul@grs& (0+255),b
 28294                           
 28295                           ; BSR set to: 1
 28296  0159EE  5163               	movf	___flmul@aexp& (0+255),w,b
 28297  0159F0  C168  F15E         	movff	___flmul@bexp,??___flmul
 28298  0159F4  6B5F               	clrf	(??___flmul+1)& (0+255),b
 28299  0159F6  275E               	addwf	??___flmul& (0+255),f,b
 28300  0159F8  0E00               	movlw	0
 28301  0159FA  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 28302  0159FC  0E82               	movlw	130
 28303  0159FE  255E               	addwf	??___flmul& (0+255),w,b
 28304  015A00  6F6D               	movwf	___flmul@temp& (0+255),b
 28305  015A02  0EFF               	movlw	255
 28306  015A04  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 28307  015A06  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 28308  015A08  D00F               	goto	l2808
 28309  015A0A                     
 28310                           ; BSR set to: 1
 28311                           
 28312                           ; BSR set to: 1
 28313  015A0A  90D8               	bcf	status,0,c
 28314  015A0C  3769               	rlcf	___flmul@prod& (0+255),f,b
 28315  015A0E  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 28316  015A10  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 28317  015A12  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 28318                           
 28319                           ; BSR set to: 1
 28320  015A14  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 28321                           
 28322                           ; BSR set to: 1
 28323  015A16  8169               	bsf	___flmul@prod& (0+255),0,b
 28324                           
 28325                           ; BSR set to: 1
 28326  015A18  90D8               	bcf	status,0,c
 28327  015A1A  3764               	rlcf	___flmul@grs& (0+255),f,b
 28328  015A1C  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 28329  015A1E  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 28330  015A20  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 28331  015A22  076D               	decf	___flmul@temp& (0+255),f,b
 28332  015A24  A0D8               	btfss	status,0,c
 28333  015A26  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 28334  015A28                     l2808:
 28335                           
 28336                           ; BSR set to: 1
 28337                           
 28338                           ; BSR set to: 1
 28339  015A28  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 28340  015A2A  D7EF               	goto	l2809
 28341                           
 28342                           ; BSR set to: 1
 28343                           
 28344                           ; BSR set to: 1
 28345  015A2C  0E00               	movlw	0
 28346  015A2E  6F63               	movwf	___flmul@aexp& (0+255),b
 28347                           
 28348                           ; BSR set to: 1
 28349  015A30  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 28350  015A32  D016               	goto	l2815
 28351                           
 28352                           ; BSR set to: 1
 28353  015A34  0EFF               	movlw	255
 28354  015A36  1564               	andwf	___flmul@grs& (0+255),w,b
 28355  015A38  6F5E               	movwf	??___flmul& (0+255),b
 28356  015A3A  0EFF               	movlw	255
 28357  015A3C  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 28358  015A3E  6F5F               	movwf	(??___flmul+1)& (0+255),b
 28359  015A40  0EFF               	movlw	255
 28360  015A42  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 28361  015A44  6F60               	movwf	(??___flmul+2)& (0+255),b
 28362  015A46  0E7F               	movlw	127
 28363  015A48  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 28364  015A4A  6F61               	movwf	(??___flmul+3)& (0+255),b
 28365  015A4C  515E               	movf	??___flmul& (0+255),w,b
 28366  015A4E  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 28367  015A50  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 28368  015A52  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 28369  015A54  A4D8               	btfss	status,2,c
 28370  015A56  D002               	goto	u17060
 28371                           
 28372                           ; BSR set to: 1
 28373                           
 28374                           ; BSR set to: 1
 28375  015A58  A169               	btfss	___flmul@prod& (0+255),0,b
 28376  015A5A  D002               	goto	l2815
 28377  015A5C                     u17060:
 28378                           
 28379                           ; BSR set to: 1
 28380  015A5C  0E01               	movlw	1
 28381  015A5E  6F63               	movwf	___flmul@aexp& (0+255),b
 28382  015A60                     l2815:
 28383                           
 28384                           ; BSR set to: 1
 28385                           
 28386                           ; BSR set to: 1
 28387                           
 28388                           ; BSR set to: 1
 28389  015A60  5163               	movf	___flmul@aexp& (0+255),w,b
 28390  015A62  B4D8               	btfsc	status,2,c
 28391  015A64  D01F               	goto	l2817
 28392                           
 28393                           ; BSR set to: 1
 28394  015A66  0E01               	movlw	1
 28395  015A68  2769               	addwf	___flmul@prod& (0+255),f,b
 28396  015A6A  0E00               	movlw	0
 28397  015A6C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28398  015A6E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28399  015A70  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28400                           
 28401                           ; BSR set to: 1
 28402  015A72  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 28403  015A74  D017               	goto	l2817
 28404                           
 28405                           ; BSR set to: 1
 28406  015A76  C169  F15E         	movff	___flmul@prod,??___flmul
 28407  015A7A  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 28408  015A7E  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 28409  015A82  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 28410  015A86  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 28411  015A88  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 28412  015A8A  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 28413  015A8C  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 28414  015A8E  335E               	rrcf	??___flmul& (0+255),f,b
 28415  015A90  C15E  F169         	movff	??___flmul,___flmul@prod
 28416  015A94  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 28417  015A98  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 28418  015A9C  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 28419                           
 28420                           ; BSR set to: 1
 28421  015AA0  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 28422  015AA2  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 28423  015AA4                     l2817:
 28424                           
 28425                           ; BSR set to: 1
 28426                           
 28427                           ; BSR set to: 1
 28428                           
 28429                           ; BSR set to: 1
 28430  015AA4  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28431  015AA6  D00D               	goto	l2818
 28432  015AA8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28433  015AAA  E103               	bnz	u17090
 28434  015AAC  296D               	incf	___flmul@temp& (0+255),w,b
 28435  015AAE  A0D8               	btfss	status,0,c
 28436  015AB0  D008               	goto	l2818
 28437  015AB2                     u17090:
 28438                           
 28439                           ; BSR set to: 1
 28440  015AB2  0E00               	movlw	0
 28441  015AB4  6F69               	movwf	___flmul@prod& (0+255),b
 28442  015AB6  0E00               	movlw	0
 28443  015AB8  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28444  015ABA  0E80               	movlw	128
 28445  015ABC  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28446  015ABE  0E7F               	movlw	127
 28447  015AC0  D020               	goto	L5
 28448  015AC2                     l2818:
 28449                           
 28450                           ; BSR set to: 1
 28451                           
 28452                           ; BSR set to: 1
 28453  015AC2  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28454  015AC4  D005               	goto	u17100
 28455  015AC6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28456  015AC8  E10E               	bnz	l2820
 28457  015ACA  056D               	decf	___flmul@temp& (0+255),w,b
 28458  015ACC  B0D8               	btfsc	status,0,c
 28459  015ACE  D00B               	goto	l2820
 28460  015AD0                     u17100:
 28461                           
 28462                           ; BSR set to: 1
 28463  015AD0  0E00               	movlw	0
 28464  015AD2  6F69               	movwf	___flmul@prod& (0+255),b
 28465  015AD4  0E00               	movlw	0
 28466  015AD6  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28467  015AD8  0E00               	movlw	0
 28468  015ADA  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28469  015ADC  0E00               	movlw	0
 28470  015ADE  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28471  015AE0  0E00               	movlw	0
 28472  015AE2  6F62               	movwf	___flmul@sign& (0+255),b
 28473  015AE4  D00F               	goto	l2821
 28474  015AE6                     l2820:
 28475                           
 28476                           ; BSR set to: 1
 28477  015AE6  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 28478                           
 28479                           ; BSR set to: 1
 28480  015AEA  0EFF               	movlw	255
 28481  015AEC  1769               	andwf	___flmul@prod& (0+255),f,b
 28482  015AEE  0EFF               	movlw	255
 28483  015AF0  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 28484  015AF2  0E7F               	movlw	127
 28485  015AF4  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 28486  015AF6  0E00               	movlw	0
 28487  015AF8  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 28488                           
 28489                           ; BSR set to: 1
 28490  015AFA  B168               	btfsc	___flmul@bexp& (0+255),0,b
 28491                           
 28492                           ; BSR set to: 1
 28493  015AFC  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 28494                           
 28495                           ; BSR set to: 1
 28496                           
 28497                           ; BSR set to: 1
 28498  015AFE  90D8               	bcf	status,0,c
 28499  015B00  3168               	rrcf	___flmul@bexp& (0+255),w,b
 28500  015B02                     L5:
 28501  015B02  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28502  015B04                     l2821:
 28503                           
 28504                           ; BSR set to: 1
 28505                           
 28506                           ; BSR set to: 1
 28507                           
 28508                           ; BSR set to: 1
 28509  015B04  5162               	movf	___flmul@sign& (0+255),w,b
 28510  015B06  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 28511                           
 28512                           ; BSR set to: 1
 28513  015B08  C169  F156         	movff	___flmul@prod,?___flmul
 28514  015B0C  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 28515  015B10  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 28516  015B14  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 28517  015B18  0012               	return	
 28518  015B1A                     __end_of___flmul:
 28519                           	opt stack 0
 28520                           tosu	equ	0xFFF
 28521                           tosh	equ	0xFFE
 28522                           tosl	equ	0xFFD
 28523                           pclath	equ	0xFFA
 28524                           tblptru	equ	0xFF8
 28525                           tblptrh	equ	0xFF7
 28526                           tblptrl	equ	0xFF6
 28527                           tablat	equ	0xFF5
 28528                           prodh	equ	0xFF4
 28529                           prodl	equ	0xFF3
 28530                           intcon	equ	0xFF2
 28531                           indf0	equ	0xFEF
 28532                           postinc0	equ	0xFEE
 28533                           fsr0h	equ	0xFEA
 28534                           fsr0l	equ	0xFE9
 28535                           wreg	equ	0xFE8
 28536                           indf1	equ	0xFE7
 28537                           postdec1	equ	0xFE5
 28538                           plusw1	equ	0xFE3
 28539                           fsr1h	equ	0xFE2
 28540                           fsr1l	equ	0xFE1
 28541                           indf2	equ	0xFDF
 28542                           postinc2	equ	0xFDE
 28543                           postdec2	equ	0xFDD
 28544                           plusw2	equ	0xFDB
 28545                           fsr2h	equ	0xFDA
 28546                           fsr2l	equ	0xFD9
 28547                           status	equ	0xFD8
 28548                           
 28549 ;; *************** function ___awmod *****************
 28550 ;; Defined at:
 28551 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 28552 ;; Parameters:    Size  Location     Type
 28553 ;;  dividend        2   23[BANK1 ] int 
 28554 ;;  divisor         2   25[BANK1 ] int 
 28555 ;; Auto vars:     Size  Location     Type
 28556 ;;  sign            1   28[BANK1 ] unsigned char 
 28557 ;;  counter         1   27[BANK1 ] unsigned char 
 28558 ;; Return value:  Size  Location     Type
 28559 ;;                  2   23[BANK1 ] int 
 28560 ;; Registers used:
 28561 ;;		wreg, status,2, status,0
 28562 ;; Tracked objects:
 28563 ;;		On entry : 0/0
 28564 ;;		On exit  : 0/0
 28565 ;;		Unchanged: 0/0
 28566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28567 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28568 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28570 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28571 ;;Total ram usage:        6 bytes
 28572 ;; Hardware stack levels used:    1
 28573 ;; Hardware stack levels required when called:   13
 28574 ;; This function calls:
 28575 ;;		Nothing
 28576 ;; This function is called by:
 28577 ;;		_fround
 28578 ;;		_scale
 28579 ;; This function uses a non-reentrant model
 28580 ;;
 28581                           
 28582                           	psect	text40
 28583  019DDE                     __ptext40:
 28584                           	opt stack 0
 28585  019DDE                     ___awmod:
 28586                           	opt stack 12
 28587                           
 28588                           ; BSR set to: 1
 28589                           ;incstack = 0
 28590  019DDE  0E00               	movlw	0
 28591  019DE0  0101               	movlb	1	; () banked
 28592  019DE2  6F1C               	movwf	___awmod@sign& (0+255),b
 28593                           
 28594                           ; BSR set to: 1
 28595  019DE4  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28596  019DE6  D006               	goto	l2347
 28597                           
 28598                           ; BSR set to: 1
 28599  019DE8  6D17               	negf	___awmod@dividend& (0+255),b
 28600  019DEA  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28601  019DEC  B0D8               	btfsc	status,0,c
 28602  019DEE  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28603                           
 28604                           ; BSR set to: 1
 28605  019DF0  0E01               	movlw	1
 28606  019DF2  6F1C               	movwf	___awmod@sign& (0+255),b
 28607  019DF4                     l2347:
 28608                           
 28609                           ; BSR set to: 1
 28610                           
 28611                           ; BSR set to: 1
 28612  019DF4  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28613  019DF6  D004               	goto	l2348
 28614                           
 28615                           ; BSR set to: 1
 28616  019DF8  6D19               	negf	___awmod@divisor& (0+255),b
 28617  019DFA  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 28618  019DFC  B0D8               	btfsc	status,0,c
 28619  019DFE  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 28620  019E00                     l2348:
 28621                           
 28622                           ; BSR set to: 1
 28623                           
 28624                           ; BSR set to: 1
 28625  019E00  5119               	movf	___awmod@divisor& (0+255),w,b
 28626  019E02  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28627  019E04  B4D8               	btfsc	status,2,c
 28628  019E06  D018               	goto	l2355
 28629                           
 28630                           ; BSR set to: 1
 28631  019E08  0E01               	movlw	1
 28632  019E0A  6F1B               	movwf	___awmod@counter& (0+255),b
 28633  019E0C  D004               	goto	l2350
 28634  019E0E                     
 28635                           ; BSR set to: 1
 28636                           
 28637                           ; BSR set to: 1
 28638  019E0E  90D8               	bcf	status,0,c
 28639  019E10  3719               	rlcf	___awmod@divisor& (0+255),f,b
 28640  019E12  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28641  019E14  2B1B               	incf	___awmod@counter& (0+255),f,b
 28642  019E16                     l2350:
 28643                           
 28644                           ; BSR set to: 1
 28645                           
 28646                           ; BSR set to: 1
 28647  019E16  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28648  019E18  D7FA               	goto	l2351
 28649  019E1A                     u17210:
 28650                           
 28651                           ; BSR set to: 1
 28652                           
 28653                           ; BSR set to: 1
 28654                           
 28655                           ; BSR set to: 1
 28656  019E1A  5119               	movf	___awmod@divisor& (0+255),w,b
 28657  019E1C  5D17               	subwf	___awmod@dividend& (0+255),w,b
 28658  019E1E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28659  019E20  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28660  019E22  A0D8               	btfss	status,0,c
 28661  019E24  D004               	goto	l2354
 28662                           
 28663                           ; BSR set to: 1
 28664  019E26  5119               	movf	___awmod@divisor& (0+255),w,b
 28665  019E28  5F17               	subwf	___awmod@dividend& (0+255),f,b
 28666  019E2A  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28667  019E2C  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28668  019E2E                     l2354:
 28669                           
 28670                           ; BSR set to: 1
 28671                           
 28672                           ; BSR set to: 1
 28673  019E2E  90D8               	bcf	status,0,c
 28674  019E30  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28675  019E32  3319               	rrcf	___awmod@divisor& (0+255),f,b
 28676                           
 28677                           ; BSR set to: 1
 28678  019E34  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 28679  019E36  D7F1               	goto	u17210
 28680  019E38                     l2355:
 28681                           
 28682                           ; BSR set to: 1
 28683                           
 28684                           ; BSR set to: 1
 28685                           
 28686                           ; BSR set to: 1
 28687  019E38  511C               	movf	___awmod@sign& (0+255),w,b
 28688  019E3A  B4D8               	btfsc	status,2,c
 28689  019E3C  D004               	goto	l2356
 28690                           
 28691                           ; BSR set to: 1
 28692  019E3E  6D17               	negf	___awmod@dividend& (0+255),b
 28693  019E40  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28694  019E42  B0D8               	btfsc	status,0,c
 28695  019E44  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28696  019E46                     l2356:
 28697                           
 28698                           ; BSR set to: 1
 28699                           
 28700                           ; BSR set to: 1
 28701  019E46  C117  F117         	movff	___awmod@dividend,?___awmod
 28702  019E4A  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 28703  019E4E  0012               	return	
 28704  019E50                     __end_of___awmod:
 28705                           	opt stack 0
 28706                           tosu	equ	0xFFF
 28707                           tosh	equ	0xFFE
 28708                           tosl	equ	0xFFD
 28709                           pclath	equ	0xFFA
 28710                           tblptru	equ	0xFF8
 28711                           tblptrh	equ	0xFF7
 28712                           tblptrl	equ	0xFF6
 28713                           tablat	equ	0xFF5
 28714                           prodh	equ	0xFF4
 28715                           prodl	equ	0xFF3
 28716                           intcon	equ	0xFF2
 28717                           indf0	equ	0xFEF
 28718                           postinc0	equ	0xFEE
 28719                           fsr0h	equ	0xFEA
 28720                           fsr0l	equ	0xFE9
 28721                           wreg	equ	0xFE8
 28722                           indf1	equ	0xFE7
 28723                           postdec1	equ	0xFE5
 28724                           plusw1	equ	0xFE3
 28725                           fsr1h	equ	0xFE2
 28726                           fsr1l	equ	0xFE1
 28727                           indf2	equ	0xFDF
 28728                           postinc2	equ	0xFDE
 28729                           postdec2	equ	0xFDD
 28730                           plusw2	equ	0xFDB
 28731                           fsr2h	equ	0xFDA
 28732                           fsr2l	equ	0xFD9
 28733                           status	equ	0xFD8
 28734                           
 28735 ;; *************** function ___awdiv *****************
 28736 ;; Defined at:
 28737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 28738 ;; Parameters:    Size  Location     Type
 28739 ;;  dividend        2   29[BANK1 ] int 
 28740 ;;  divisor         2   31[BANK1 ] int 
 28741 ;; Auto vars:     Size  Location     Type
 28742 ;;  quotient        2   35[BANK1 ] int 
 28743 ;;  sign            1   34[BANK1 ] unsigned char 
 28744 ;;  counter         1   33[BANK1 ] unsigned char 
 28745 ;; Return value:  Size  Location     Type
 28746 ;;                  2   29[BANK1 ] int 
 28747 ;; Registers used:
 28748 ;;		wreg, status,2, status,0
 28749 ;; Tracked objects:
 28750 ;;		On entry : 0/0
 28751 ;;		On exit  : 0/0
 28752 ;;		Unchanged: 0/0
 28753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28754 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28755 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28757 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28758 ;;Total ram usage:        8 bytes
 28759 ;; Hardware stack levels used:    1
 28760 ;; Hardware stack levels required when called:   13
 28761 ;; This function calls:
 28762 ;;		Nothing
 28763 ;; This function is called by:
 28764 ;;		_fround
 28765 ;;		_scale
 28766 ;;		__doprnt
 28767 ;; This function uses a non-reentrant model
 28768 ;;
 28769                           
 28770                           	psect	text41
 28771  019A56                     __ptext41:
 28772                           	opt stack 0
 28773  019A56                     ___awdiv:
 28774                           	opt stack 12
 28775                           
 28776                           ; BSR set to: 1
 28777                           ;incstack = 0
 28778  019A56  0E00               	movlw	0
 28779  019A58  0101               	movlb	1	; () banked
 28780  019A5A  6F22               	movwf	___awdiv@sign& (0+255),b
 28781                           
 28782                           ; BSR set to: 1
 28783  019A5C  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28784  019A5E  D006               	goto	l2334
 28785                           
 28786                           ; BSR set to: 1
 28787  019A60  6D1F               	negf	___awdiv@divisor& (0+255),b
 28788  019A62  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28789  019A64  B0D8               	btfsc	status,0,c
 28790  019A66  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28791                           
 28792                           ; BSR set to: 1
 28793  019A68  0E01               	movlw	1
 28794  019A6A  6F22               	movwf	___awdiv@sign& (0+255),b
 28795  019A6C                     l2334:
 28796                           
 28797                           ; BSR set to: 1
 28798                           
 28799                           ; BSR set to: 1
 28800  019A6C  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28801  019A6E  D006               	goto	l2335
 28802                           
 28803                           ; BSR set to: 1
 28804  019A70  6D1D               	negf	___awdiv@dividend& (0+255),b
 28805  019A72  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28806  019A74  B0D8               	btfsc	status,0,c
 28807  019A76  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28808                           
 28809                           ; BSR set to: 1
 28810  019A78  0E01               	movlw	1
 28811  019A7A  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 28812  019A7C                     l2335:
 28813                           
 28814                           ; BSR set to: 1
 28815                           
 28816                           ; BSR set to: 1
 28817  019A7C  0E00               	movlw	0
 28818  019A7E  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 28819  019A80  0E00               	movlw	0
 28820  019A82  6F23               	movwf	___awdiv@quotient& (0+255),b
 28821                           
 28822                           ; BSR set to: 1
 28823  019A84  511F               	movf	___awdiv@divisor& (0+255),w,b
 28824  019A86  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28825  019A88  B4D8               	btfsc	status,2,c
 28826  019A8A  D01C               	goto	l2342
 28827                           
 28828                           ; BSR set to: 1
 28829  019A8C  0E01               	movlw	1
 28830  019A8E  6F21               	movwf	___awdiv@counter& (0+255),b
 28831  019A90  D004               	goto	l2337
 28832  019A92                     
 28833                           ; BSR set to: 1
 28834                           
 28835                           ; BSR set to: 1
 28836  019A92  90D8               	bcf	status,0,c
 28837  019A94  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 28838  019A96  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28839  019A98  2B21               	incf	___awdiv@counter& (0+255),f,b
 28840  019A9A                     l2337:
 28841                           
 28842                           ; BSR set to: 1
 28843                           
 28844                           ; BSR set to: 1
 28845  019A9A  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28846  019A9C  D7FA               	goto	l2338
 28847  019A9E                     u17150:
 28848                           
 28849                           ; BSR set to: 1
 28850                           
 28851                           ; BSR set to: 1
 28852                           
 28853                           ; BSR set to: 1
 28854  019A9E  90D8               	bcf	status,0,c
 28855  019AA0  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 28856  019AA2  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28857                           
 28858                           ; BSR set to: 1
 28859  019AA4  511F               	movf	___awdiv@divisor& (0+255),w,b
 28860  019AA6  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 28861  019AA8  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28862  019AAA  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28863  019AAC  A0D8               	btfss	status,0,c
 28864  019AAE  D005               	goto	l2341
 28865                           
 28866                           ; BSR set to: 1
 28867  019AB0  511F               	movf	___awdiv@divisor& (0+255),w,b
 28868  019AB2  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 28869  019AB4  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28870  019AB6  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28871                           
 28872                           ; BSR set to: 1
 28873  019AB8  8123               	bsf	___awdiv@quotient& (0+255),0,b
 28874  019ABA                     l2341:
 28875                           
 28876                           ; BSR set to: 1
 28877                           
 28878                           ; BSR set to: 1
 28879  019ABA  90D8               	bcf	status,0,c
 28880  019ABC  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28881  019ABE  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 28882                           
 28883                           ; BSR set to: 1
 28884  019AC0  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 28885  019AC2  D7ED               	goto	u17150
 28886  019AC4                     l2342:
 28887                           
 28888                           ; BSR set to: 1
 28889                           
 28890                           ; BSR set to: 1
 28891                           
 28892                           ; BSR set to: 1
 28893  019AC4  5122               	movf	___awdiv@sign& (0+255),w,b
 28894  019AC6  B4D8               	btfsc	status,2,c
 28895  019AC8  D004               	goto	l2343
 28896                           
 28897                           ; BSR set to: 1
 28898  019ACA  6D23               	negf	___awdiv@quotient& (0+255),b
 28899  019ACC  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28900  019ACE  B0D8               	btfsc	status,0,c
 28901  019AD0  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28902  019AD2                     l2343:
 28903                           
 28904                           ; BSR set to: 1
 28905                           
 28906                           ; BSR set to: 1
 28907  019AD2  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 28908  019AD6  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 28909  019ADA  0012               	return	
 28910  019ADC                     __end_of___awdiv:
 28911                           	opt stack 0
 28912                           tosu	equ	0xFFF
 28913                           tosh	equ	0xFFE
 28914                           tosl	equ	0xFFD
 28915                           pclath	equ	0xFFA
 28916                           tblptru	equ	0xFF8
 28917                           tblptrh	equ	0xFF7
 28918                           tblptrl	equ	0xFF6
 28919                           tablat	equ	0xFF5
 28920                           prodh	equ	0xFF4
 28921                           prodl	equ	0xFF3
 28922                           intcon	equ	0xFF2
 28923                           indf0	equ	0xFEF
 28924                           postinc0	equ	0xFEE
 28925                           fsr0h	equ	0xFEA
 28926                           fsr0l	equ	0xFE9
 28927                           wreg	equ	0xFE8
 28928                           indf1	equ	0xFE7
 28929                           postdec1	equ	0xFE5
 28930                           plusw1	equ	0xFE3
 28931                           fsr1h	equ	0xFE2
 28932                           fsr1l	equ	0xFE1
 28933                           indf2	equ	0xFDF
 28934                           postinc2	equ	0xFDE
 28935                           postdec2	equ	0xFDD
 28936                           plusw2	equ	0xFDB
 28937                           fsr2h	equ	0xFDA
 28938                           fsr2l	equ	0xFD9
 28939                           status	equ	0xFD8
 28940                           
 28941 ;; *************** function __tdiv_to_l_ *****************
 28942 ;; Defined at:
 28943 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  f1              3   23[BANK1 ] float 
 28946 ;;  f2              3   26[BANK1 ] float 
 28947 ;; Auto vars:     Size  Location     Type
 28948 ;;  quot            4   32[BANK1 ] unsigned long 
 28949 ;;  exp1            1   37[BANK1 ] unsigned char 
 28950 ;;  cntr            1   36[BANK1 ] unsigned char 
 28951 ;; Return value:  Size  Location     Type
 28952 ;;                  4   23[BANK1 ] unsigned long 
 28953 ;; Registers used:
 28954 ;;		wreg, status,2, status,0
 28955 ;; Tracked objects:
 28956 ;;		On entry : 0/0
 28957 ;;		On exit  : 0/0
 28958 ;;		Unchanged: 0/0
 28959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28960 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28961 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28962 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28963 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28964 ;;Total ram usage:       15 bytes
 28965 ;; Hardware stack levels used:    1
 28966 ;; Hardware stack levels required when called:   13
 28967 ;; This function calls:
 28968 ;;		Nothing
 28969 ;; This function is called by:
 28970 ;;		__doprnt
 28971 ;; This function uses a non-reentrant model
 28972 ;;
 28973                           
 28974                           	psect	text42
 28975  0186D8                     __ptext42:
 28976                           	opt stack 0
 28977  0186D8                     __tdiv_to_l_:
 28978                           	opt stack 13
 28979                           
 28980                           ; BSR set to: 1
 28981                           ;incstack = 0
 28982  0186D8  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 28983  0186DC  0101               	movlb	1	; () banked
 28984  0186DE  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 28985  0186E0  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 28986  0186E2  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 28987  0186E4  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 28988  0186E6  E301               	bnc	u17921
 28989  0186E8  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 28990  0186EA                     u17921:
 28991  0186EA  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 28992  0186EC  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 28993  0186EE  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28994  0186F0  A4D8               	btfss	status,2,c
 28995  0186F2  D009               	goto	l2482
 28996                           
 28997                           ; BSR set to: 1
 28998  0186F4  0E00               	movlw	0
 28999  0186F6  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29000  0186F8  0E00               	movlw	0
 29001  0186FA  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29002  0186FC  0E00               	movlw	0
 29003  0186FE  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29004  018700  0E00               	movlw	0
 29005  018702  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29006                           
 29007                           ; BSR set to: 1
 29008  018704  0012               	return	
 29009  018706                     l2482:
 29010                           
 29011                           ; BSR set to: 1
 29012                           
 29013                           ; BSR set to: 1
 29014  018706  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29015  01870A  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29016  01870C  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29017  01870E  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29018  018710  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29019  018712  E301               	bnc	u17941
 29020  018714  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29021  018716                     u17941:
 29022  018716  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 29023  018718  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29024  01871A  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29025  01871C  A4D8               	btfss	status,2,c
 29026  01871E  D009               	goto	l2484
 29027                           
 29028                           ; BSR set to: 1
 29029  018720  0E00               	movlw	0
 29030  018722  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29031  018724  0E00               	movlw	0
 29032  018726  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29033  018728  0E00               	movlw	0
 29034  01872A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29035  01872C  0E00               	movlw	0
 29036  01872E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29037                           
 29038                           ; BSR set to: 1
 29039  018730  0012               	return	
 29040  018732                     l2484:
 29041                           
 29042                           ; BSR set to: 1
 29043                           
 29044                           ; BSR set to: 1
 29045  018732  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29046                           
 29047                           ; BSR set to: 1
 29048  018734  0EFF               	movlw	255
 29049  018736  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29050  018738  0EFF               	movlw	255
 29051  01873A  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29052  01873C  0E00               	movlw	0
 29053  01873E  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29054  018740  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29055                           
 29056                           ; BSR set to: 1
 29057  018742  0EFF               	movlw	255
 29058  018744  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29059  018746  0EFF               	movlw	255
 29060  018748  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29061  01874A  0E00               	movlw	0
 29062  01874C  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29063                           
 29064                           ; BSR set to: 1
 29065  01874E  0E00               	movlw	0
 29066  018750  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 29067  018752  0E00               	movlw	0
 29068  018754  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29069  018756  0E00               	movlw	0
 29070  018758  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29071  01875A  0E00               	movlw	0
 29072  01875C  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29073                           
 29074                           ; BSR set to: 1
 29075  01875E  0E7F               	movlw	127
 29076  018760  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29077                           
 29078                           ; BSR set to: 1
 29079  018762  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29080  018764  0F98               	addlw	152
 29081  018766  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29082                           
 29083                           ; BSR set to: 1
 29084  018768  0E18               	movlw	24
 29085  01876A  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29086  01876C                     l2485:
 29087                           
 29088                           ; BSR set to: 1
 29089  01876C  90D8               	bcf	status,0,c
 29090  01876E  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29091  018770  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29092  018772  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29093  018774  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29094                           
 29095                           ; BSR set to: 1
 29096  018776  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29097  018778  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29098  01877A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29099  01877C  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29100  01877E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29101  018780  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29102  018782  A0D8               	btfss	status,0,c
 29103  018784  D007               	goto	l2486
 29104                           
 29105                           ; BSR set to: 1
 29106  018786  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29107  018788  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29108  01878A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29109  01878C  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29110  01878E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29111  018790  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29112                           
 29113                           ; BSR set to: 1
 29114  018792  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29115  018794                     l2486:
 29116                           
 29117                           ; BSR set to: 1
 29118  018794  90D8               	bcf	status,0,c
 29119  018796  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29120  018798  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29121  01879A  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29122                           
 29123                           ; BSR set to: 1
 29124  01879C  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29125  01879E  D7E6               	goto	l2485
 29126                           
 29127                           ; BSR set to: 1
 29128                           
 29129                           ; BSR set to: 1
 29130  0187A0  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29131  0187A2  D016               	goto	l2488
 29132                           
 29133                           ; BSR set to: 1
 29134  0187A4  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29135  0187A6  0A80               	xorlw	128
 29136  0187A8  0F97               	addlw	151
 29137  0187AA  B0D8               	btfsc	status,0,c
 29138  0187AC  D009               	goto	l2489
 29139                           
 29140                           ; BSR set to: 1
 29141  0187AE  0E00               	movlw	0
 29142  0187B0  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29143  0187B2  0E00               	movlw	0
 29144  0187B4  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29145  0187B6  0E00               	movlw	0
 29146  0187B8  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29147  0187BA  0E00               	movlw	0
 29148  0187BC  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29149                           
 29150                           ; BSR set to: 1
 29151  0187BE  0012               	return	
 29152  0187C0                     l2489:
 29153                           
 29154                           ; BSR set to: 1
 29155                           
 29156                           ; BSR set to: 1
 29157                           
 29158                           ; BSR set to: 1
 29159  0187C0  90D8               	bcf	status,0,c
 29160  0187C2  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29161  0187C4  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29162  0187C6  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29163  0187C8  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29164                           
 29165                           ; BSR set to: 1
 29166  0187CA  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29167  0187CC  D7F9               	goto	l2489
 29168                           
 29169                           ; BSR set to: 1
 29170  0187CE  D015               	goto	u18000
 29171  0187D0                     l2488:
 29172                           
 29173                           ; BSR set to: 1
 29174                           
 29175                           ; BSR set to: 1
 29176  0187D0  0E17               	movlw	23
 29177  0187D2  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29178  0187D4  D00F               	goto	l2494
 29179                           
 29180                           ; BSR set to: 1
 29181  0187D6  0E00               	movlw	0
 29182  0187D8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29183  0187DA  0E00               	movlw	0
 29184  0187DC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29185  0187DE  0E00               	movlw	0
 29186  0187E0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29187  0187E2  0E00               	movlw	0
 29188  0187E4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29189                           
 29190                           ; BSR set to: 1
 29191  0187E6  0012               	return	
 29192  0187E8                     
 29193                           ; BSR set to: 1
 29194                           
 29195                           ; BSR set to: 1
 29196  0187E8  90D8               	bcf	status,0,c
 29197  0187EA  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29198  0187EC  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29199  0187EE  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29200  0187F0  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29201  0187F2  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29202  0187F4                     l2494:
 29203                           
 29204                           ; BSR set to: 1
 29205                           
 29206                           ; BSR set to: 1
 29207  0187F4  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29208  0187F6  A4D8               	btfss	status,2,c
 29209  0187F8  D7F7               	goto	l2495
 29210  0187FA                     u18000:
 29211                           
 29212                           ; BSR set to: 1
 29213                           
 29214                           ; BSR set to: 1
 29215  0187FA  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29216  0187FE  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29217  018802  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29218  018806  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29219                           
 29220                           ; BSR set to: 1
 29221  01880A  0012               	return		;funcret
 29222  01880C                     __end_of__tdiv_to_l_:
 29223                           	opt stack 0
 29224                           tosu	equ	0xFFF
 29225                           tosh	equ	0xFFE
 29226                           tosl	equ	0xFFD
 29227                           pclath	equ	0xFFA
 29228                           tblptru	equ	0xFF8
 29229                           tblptrh	equ	0xFF7
 29230                           tblptrl	equ	0xFF6
 29231                           tablat	equ	0xFF5
 29232                           prodh	equ	0xFF4
 29233                           prodl	equ	0xFF3
 29234                           intcon	equ	0xFF2
 29235                           indf0	equ	0xFEF
 29236                           postinc0	equ	0xFEE
 29237                           fsr0h	equ	0xFEA
 29238                           fsr0l	equ	0xFE9
 29239                           wreg	equ	0xFE8
 29240                           indf1	equ	0xFE7
 29241                           postdec1	equ	0xFE5
 29242                           plusw1	equ	0xFE3
 29243                           fsr1h	equ	0xFE2
 29244                           fsr1l	equ	0xFE1
 29245                           indf2	equ	0xFDF
 29246                           postinc2	equ	0xFDE
 29247                           postdec2	equ	0xFDD
 29248                           plusw2	equ	0xFDB
 29249                           fsr2h	equ	0xFDA
 29250                           fsr2l	equ	0xFD9
 29251                           status	equ	0xFD8
 29252                           
 29253 ;; *************** function __div_to_l_ *****************
 29254 ;; Defined at:
 29255 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 29256 ;; Parameters:    Size  Location     Type
 29257 ;;  f1              4   23[BANK1 ] unsigned long 
 29258 ;;  f2              4   27[BANK1 ] unsigned long 
 29259 ;; Auto vars:     Size  Location     Type
 29260 ;;  quot            4   31[BANK1 ] unsigned long 
 29261 ;;  exp1            1   36[BANK1 ] unsigned char 
 29262 ;;  cntr            1   35[BANK1 ] unsigned char 
 29263 ;; Return value:  Size  Location     Type
 29264 ;;                  4   23[BANK1 ] unsigned long 
 29265 ;; Registers used:
 29266 ;;		wreg, status,2, status,0
 29267 ;; Tracked objects:
 29268 ;;		On entry : 0/0
 29269 ;;		On exit  : 0/0
 29270 ;;		Unchanged: 0/0
 29271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29272 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29273 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29275 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29276 ;;Total ram usage:       14 bytes
 29277 ;; Hardware stack levels used:    1
 29278 ;; Hardware stack levels required when called:   13
 29279 ;; This function calls:
 29280 ;;		Nothing
 29281 ;; This function is called by:
 29282 ;;		__doprnt
 29283 ;; This function uses a non-reentrant model
 29284 ;;
 29285                           
 29286                           	psect	text43
 29287  01893E                     __ptext43:
 29288                           	opt stack 0
 29289  01893E                     __div_to_l_:
 29290                           	opt stack 13
 29291                           
 29292                           ; BSR set to: 1
 29293                           ;incstack = 0
 29294  01893E  0101               	movlb	1	; () banked
 29295  018940  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29296  018942  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29297  018944  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 29298  018946  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29299  018948  A4D8               	btfss	status,2,c
 29300  01894A  D009               	goto	l2378
 29301                           
 29302                           ; BSR set to: 1
 29303  01894C  0E00               	movlw	0
 29304  01894E  6F17               	movwf	?__div_to_l_& (0+255),b
 29305  018950  0E00               	movlw	0
 29306  018952  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29307  018954  0E00               	movlw	0
 29308  018956  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29309  018958  0E00               	movlw	0
 29310  01895A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29311                           
 29312                           ; BSR set to: 1
 29313  01895C  0012               	return	
 29314  01895E                     l2378:
 29315                           
 29316                           ; BSR set to: 1
 29317                           
 29318                           ; BSR set to: 1
 29319  01895E  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29320  018960  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29321  018962  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 29322  018964  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 29323  018966  A4D8               	btfss	status,2,c
 29324  018968  D009               	goto	l2380
 29325                           
 29326                           ; BSR set to: 1
 29327  01896A  0E00               	movlw	0
 29328  01896C  6F17               	movwf	?__div_to_l_& (0+255),b
 29329  01896E  0E00               	movlw	0
 29330  018970  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29331  018972  0E00               	movlw	0
 29332  018974  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29333  018976  0E00               	movlw	0
 29334  018978  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29335                           
 29336                           ; BSR set to: 1
 29337  01897A  0012               	return	
 29338  01897C                     l2380:
 29339                           
 29340                           ; BSR set to: 1
 29341                           
 29342                           ; BSR set to: 1
 29343  01897C  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29344                           
 29345                           ; BSR set to: 1
 29346  01897E  0EFF               	movlw	255
 29347  018980  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 29348  018982  0EFF               	movlw	255
 29349  018984  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29350  018986  0EFF               	movlw	255
 29351  018988  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29352  01898A  0E00               	movlw	0
 29353  01898C  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29354                           
 29355                           ; BSR set to: 1
 29356  01898E  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29357  018990  0EFF               	movlw	255
 29358  018992  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 29359  018994  0EFF               	movlw	255
 29360  018996  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29361  018998  0EFF               	movlw	255
 29362  01899A  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29363  01899C  0E00               	movlw	0
 29364  01899E  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29365                           
 29366                           ; BSR set to: 1
 29367  0189A0  0E00               	movlw	0
 29368  0189A2  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 29369  0189A4  0E00               	movlw	0
 29370  0189A6  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29371  0189A8  0E00               	movlw	0
 29372  0189AA  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29373  0189AC  0E00               	movlw	0
 29374  0189AE  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29375                           
 29376                           ; BSR set to: 1
 29377  0189B0  0E7F               	movlw	127
 29378  0189B2  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 29379                           
 29380                           ; BSR set to: 1
 29381  0189B4  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 29382  0189B6  0FA0               	addlw	160
 29383  0189B8  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 29384                           
 29385                           ; BSR set to: 1
 29386  0189BA  0E20               	movlw	32
 29387  0189BC  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 29388  0189BE                     
 29389                           ; BSR set to: 1
 29390                           
 29391                           ; BSR set to: 1
 29392  0189BE  90D8               	bcf	status,0,c
 29393  0189C0  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29394  0189C2  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29395  0189C4  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29396  0189C6  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29397                           
 29398                           ; BSR set to: 1
 29399  0189C8  511B               	movf	__div_to_l_@f2& (0+255),w,b
 29400  0189CA  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 29401  0189CC  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29402  0189CE  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29403  0189D0  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29404  0189D2  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29405  0189D4  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29406  0189D6  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29407  0189D8  A0D8               	btfss	status,0,c
 29408  0189DA  D009               	goto	l2382
 29409                           
 29410                           ; BSR set to: 1
 29411  0189DC  511B               	movf	__div_to_l_@f2& (0+255),w,b
 29412  0189DE  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 29413  0189E0  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29414  0189E2  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29415  0189E4  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29416  0189E6  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29417  0189E8  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29418  0189EA  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29419                           
 29420                           ; BSR set to: 1
 29421  0189EC  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 29422  0189EE                     l2382:
 29423                           
 29424                           ; BSR set to: 1
 29425                           
 29426                           ; BSR set to: 1
 29427  0189EE  90D8               	bcf	status,0,c
 29428  0189F0  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 29429  0189F2  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29430  0189F4  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29431  0189F6  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29432                           
 29433                           ; BSR set to: 1
 29434  0189F8  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29435  0189FA  D7E1               	goto	l2381
 29436                           
 29437                           ; BSR set to: 1
 29438                           
 29439                           ; BSR set to: 1
 29440  0189FC  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 29441  0189FE  D016               	goto	l2384
 29442                           
 29443                           ; BSR set to: 1
 29444  018A00  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29445  018A02  0A80               	xorlw	128
 29446  018A04  0F9F               	addlw	159
 29447  018A06  B0D8               	btfsc	status,0,c
 29448  018A08  D009               	goto	l2385
 29449                           
 29450                           ; BSR set to: 1
 29451  018A0A  0E00               	movlw	0
 29452  018A0C  6F17               	movwf	?__div_to_l_& (0+255),b
 29453  018A0E  0E00               	movlw	0
 29454  018A10  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29455  018A12  0E00               	movlw	0
 29456  018A14  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29457  018A16  0E00               	movlw	0
 29458  018A18  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29459                           
 29460                           ; BSR set to: 1
 29461  018A1A  0012               	return	
 29462  018A1C                     l2385:
 29463                           
 29464                           ; BSR set to: 1
 29465                           
 29466                           ; BSR set to: 1
 29467                           
 29468                           ; BSR set to: 1
 29469  018A1C  90D8               	bcf	status,0,c
 29470  018A1E  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29471  018A20  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29472  018A22  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29473  018A24  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29474                           
 29475                           ; BSR set to: 1
 29476  018A26  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29477  018A28  D7F9               	goto	l2385
 29478                           
 29479                           ; BSR set to: 1
 29480  018A2A  D015               	goto	u18070
 29481  018A2C                     l2384:
 29482                           
 29483                           ; BSR set to: 1
 29484                           
 29485                           ; BSR set to: 1
 29486  018A2C  0E1F               	movlw	31
 29487  018A2E  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29488  018A30  D00F               	goto	l2390
 29489                           
 29490                           ; BSR set to: 1
 29491  018A32  0E00               	movlw	0
 29492  018A34  6F17               	movwf	?__div_to_l_& (0+255),b
 29493  018A36  0E00               	movlw	0
 29494  018A38  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29495  018A3A  0E00               	movlw	0
 29496  018A3C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29497  018A3E  0E00               	movlw	0
 29498  018A40  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29499                           
 29500                           ; BSR set to: 1
 29501  018A42  0012               	return	
 29502  018A44                     
 29503                           ; BSR set to: 1
 29504                           
 29505                           ; BSR set to: 1
 29506  018A44  90D8               	bcf	status,0,c
 29507  018A46  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29508  018A48  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29509  018A4A  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29510  018A4C  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29511  018A4E  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 29512  018A50                     l2390:
 29513                           
 29514                           ; BSR set to: 1
 29515                           
 29516                           ; BSR set to: 1
 29517  018A50  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29518  018A52  A4D8               	btfss	status,2,c
 29519  018A54  D7F7               	goto	l2391
 29520  018A56                     u18070:
 29521                           
 29522                           ; BSR set to: 1
 29523                           
 29524                           ; BSR set to: 1
 29525  018A56  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 29526  018A5A  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29527  018A5E  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29528  018A62  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29529                           
 29530                           ; BSR set to: 1
 29531  018A66  0012               	return		;funcret
 29532  018A68                     __end_of__div_to_l_:
 29533                           	opt stack 0
 29534                           tosu	equ	0xFFF
 29535                           tosh	equ	0xFFE
 29536                           tosl	equ	0xFFD
 29537                           pclath	equ	0xFFA
 29538                           tblptru	equ	0xFF8
 29539                           tblptrh	equ	0xFF7
 29540                           tblptrl	equ	0xFF6
 29541                           tablat	equ	0xFF5
 29542                           prodh	equ	0xFF4
 29543                           prodl	equ	0xFF3
 29544                           intcon	equ	0xFF2
 29545                           indf0	equ	0xFEF
 29546                           postinc0	equ	0xFEE
 29547                           fsr0h	equ	0xFEA
 29548                           fsr0l	equ	0xFE9
 29549                           wreg	equ	0xFE8
 29550                           indf1	equ	0xFE7
 29551                           postdec1	equ	0xFE5
 29552                           plusw1	equ	0xFE3
 29553                           fsr1h	equ	0xFE2
 29554                           fsr1l	equ	0xFE1
 29555                           indf2	equ	0xFDF
 29556                           postinc2	equ	0xFDE
 29557                           postdec2	equ	0xFDD
 29558                           plusw2	equ	0xFDB
 29559                           fsr2h	equ	0xFDA
 29560                           fsr2l	equ	0xFD9
 29561                           status	equ	0xFD8
 29562                           
 29563 ;; *************** function ___xxtofl *****************
 29564 ;; Defined at:
 29565 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 29566 ;; Parameters:    Size  Location     Type
 29567 ;;  sign            1    wreg     unsigned char 
 29568 ;;  val             4   23[BANK1 ] long 
 29569 ;; Auto vars:     Size  Location     Type
 29570 ;;  sign            1   31[BANK1 ] unsigned char 
 29571 ;;  arg             4   33[BANK1 ] unsigned long 
 29572 ;;  exp             1   32[BANK1 ] unsigned char 
 29573 ;; Return value:  Size  Location     Type
 29574 ;;                  4   23[BANK1 ] unsigned char 
 29575 ;; Registers used:
 29576 ;;		wreg, status,2, status,0
 29577 ;; Tracked objects:
 29578 ;;		On entry : 0/0
 29579 ;;		On exit  : 0/0
 29580 ;;		Unchanged: 0/0
 29581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29582 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29583 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29584 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29585 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29586 ;;Total ram usage:       14 bytes
 29587 ;; Hardware stack levels used:    1
 29588 ;; Hardware stack levels required when called:   13
 29589 ;; This function calls:
 29590 ;;		Nothing
 29591 ;; This function is called by:
 29592 ;;		_ringBufferLUT
 29593 ;;		__doprnt
 29594 ;; This function uses a non-reentrant model
 29595 ;;
 29596                           
 29597                           	psect	text44
 29598  0181C8                     __ptext44:
 29599                           	opt stack 0
 29600  0181C8                     ___xxtofl:
 29601                           	opt stack 13
 29602                           
 29603                           ; BSR set to: 1
 29604                           ;incstack = 0
 29605                           ;___xxtofl@sign stored from wreg
 29606  0181C8  0101               	movlb	1	; () banked
 29607  0181CA  6F1F               	movwf	___xxtofl@sign& (0+255),b
 29608  0181CC  0101               	movlb	1	; () banked
 29609  0181CE  511F               	movf	___xxtofl@sign& (0+255),w,b
 29610  0181D0  A4D8               	btfss	status,2,c
 29611                           
 29612                           ; BSR set to: 1
 29613  0181D2  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29614  0181D4  D01A               	goto	l2900
 29615                           
 29616                           ; BSR set to: 1
 29617  0181D6  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 29618  0181DA  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 29619  0181DE  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 29620  0181E2  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 29621  0181E6  1F1B               	comf	??___xxtofl& (0+255),f,b
 29622  0181E8  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 29623  0181EA  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 29624  0181EC  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 29625  0181EE  2B1B               	incf	??___xxtofl& (0+255),f,b
 29626  0181F0  0E00               	movlw	0
 29627  0181F2  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 29628  0181F4  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 29629  0181F6  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 29630  0181F8  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 29631  0181FC  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 29632  018200  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 29633  018204  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 29634  018208  D008               	goto	l2901
 29635  01820A                     l2900:
 29636                           
 29637                           ; BSR set to: 1
 29638  01820A  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 29639  01820E  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 29640  018212  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 29641  018216  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 29642  01821A                     l2901:
 29643                           
 29644                           ; BSR set to: 1
 29645                           
 29646                           ; BSR set to: 1
 29647  01821A  5117               	movf	___xxtofl@val& (0+255),w,b
 29648  01821C  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 29649  01821E  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 29650  018220  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 29651  018222  A4D8               	btfss	status,2,c
 29652  018224  D009               	goto	l2902
 29653                           
 29654                           ; BSR set to: 1
 29655  018226  0E00               	movlw	0
 29656  018228  6F17               	movwf	?___xxtofl& (0+255),b
 29657  01822A  0E00               	movlw	0
 29658  01822C  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 29659  01822E  0E00               	movlw	0
 29660  018230  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 29661  018232  0E00               	movlw	0
 29662  018234  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 29663                           
 29664                           ; BSR set to: 1
 29665  018236  0012               	return	
 29666  018238                     l2902:
 29667                           
 29668                           ; BSR set to: 1
 29669                           
 29670                           ; BSR set to: 1
 29671  018238  0E96               	movlw	150
 29672  01823A  6F20               	movwf	___xxtofl@exp& (0+255),b
 29673  01823C  D006               	goto	l2904
 29674  01823E                     
 29675                           ; BSR set to: 1
 29676                           
 29677                           ; BSR set to: 1
 29678  01823E  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29679  018240  90D8               	bcf	status,0,c
 29680  018242  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29681  018244  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29682  018246  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29683  018248  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29684  01824A                     l2904:
 29685                           
 29686                           ; BSR set to: 1
 29687                           
 29688                           ; BSR set to: 1
 29689  01824A  0E00               	movlw	0
 29690  01824C  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29691  01824E  6F1B               	movwf	??___xxtofl& (0+255),b
 29692  018250  0E00               	movlw	0
 29693  018252  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29694  018254  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29695  018256  0E00               	movlw	0
 29696  018258  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29697  01825A  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29698  01825C  0EFE               	movlw	254
 29699  01825E  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29700  018260  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29701  018262  511B               	movf	??___xxtofl& (0+255),w,b
 29702  018264  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29703  018266  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29704  018268  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29705  01826A  B4D8               	btfsc	status,2,c
 29706  01826C  D00D               	goto	l2907
 29707  01826E  D7E7               	goto	l2905
 29708  018270                     
 29709                           ; BSR set to: 1
 29710                           
 29711                           ; BSR set to: 1
 29712  018270  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29713                           
 29714                           ; BSR set to: 1
 29715  018272  0E01               	movlw	1
 29716  018274  2721               	addwf	___xxtofl@arg& (0+255),f,b
 29717  018276  0E00               	movlw	0
 29718  018278  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 29719  01827A  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 29720  01827C  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 29721                           
 29722                           ; BSR set to: 1
 29723  01827E  90D8               	bcf	status,0,c
 29724  018280  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29725  018282  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29726  018284  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29727  018286  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29728  018288                     l2907:
 29729                           
 29730                           ; BSR set to: 1
 29731  018288  0E00               	movlw	0
 29732  01828A  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29733  01828C  6F1B               	movwf	??___xxtofl& (0+255),b
 29734  01828E  0E00               	movlw	0
 29735  018290  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29736  018292  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29737  018294  0E00               	movlw	0
 29738  018296  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29739  018298  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29740  01829A  0EFF               	movlw	255
 29741  01829C  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29742  01829E  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29743  0182A0  511B               	movf	??___xxtofl& (0+255),w,b
 29744  0182A2  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29745  0182A4  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29746  0182A6  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29747  0182A8  B4D8               	btfsc	status,2,c
 29748  0182AA  D007               	goto	l2910
 29749  0182AC  D7E1               	goto	l2908
 29750  0182AE                     
 29751                           ; BSR set to: 1
 29752                           
 29753                           ; BSR set to: 1
 29754  0182AE  0720               	decf	___xxtofl@exp& (0+255),f,b
 29755  0182B0  90D8               	bcf	status,0,c
 29756  0182B2  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 29757  0182B4  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 29758  0182B6  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 29759  0182B8  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 29760  0182BA                     l2910:
 29761                           
 29762                           ; BSR set to: 1
 29763                           
 29764                           ; BSR set to: 1
 29765  0182BA  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 29766  0182BC  D003               	goto	u18350
 29767                           
 29768                           ; BSR set to: 1
 29769  0182BE  0E02               	movlw	2
 29770  0182C0  6120               	cpfslt	___xxtofl@exp& (0+255),b
 29771  0182C2  D7F5               	goto	l2911
 29772  0182C4                     u18350:
 29773                           
 29774                           ; BSR set to: 1
 29775                           
 29776                           ; BSR set to: 1
 29777  0182C4  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 29778  0182C6  D008               	goto	l2915
 29779                           
 29780                           ; BSR set to: 1
 29781  0182C8  0EFF               	movlw	255
 29782  0182CA  1721               	andwf	___xxtofl@arg& (0+255),f,b
 29783  0182CC  0EFF               	movlw	255
 29784  0182CE  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 29785  0182D0  0E7F               	movlw	127
 29786  0182D2  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 29787  0182D4  0EFF               	movlw	255
 29788  0182D6  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 29789  0182D8                     l2915:
 29790                           
 29791                           ; BSR set to: 1
 29792  0182D8  90D8               	bcf	status,0,c
 29793  0182DA  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 29794  0182DC  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 29795  0182E0  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 29796  0182E2  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 29797  0182E4  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 29798  0182E6  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 29799  0182EA  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 29800  0182EC  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 29801  0182EE  6B1B               	clrf	??___xxtofl& (0+255),b
 29802  0182F0  511B               	movf	??___xxtofl& (0+255),w,b
 29803  0182F2  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 29804  0182F4  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 29805  0182F6  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 29806  0182F8  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 29807  0182FA  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 29808  0182FC  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 29809  0182FE  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 29810                           
 29811                           ; BSR set to: 1
 29812  018300  511F               	movf	___xxtofl@sign& (0+255),w,b
 29813  018302  A4D8               	btfss	status,2,c
 29814                           
 29815                           ; BSR set to: 1
 29816  018304  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29817  018306  D001               	goto	l2916
 29818                           
 29819                           ; BSR set to: 1
 29820  018308  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 29821  01830A                     l2916:
 29822                           
 29823                           ; BSR set to: 1
 29824                           
 29825                           ; BSR set to: 1
 29826  01830A  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 29827  01830E  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 29828  018312  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 29829  018316  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 29830  01831A  0012               	return	
 29831  01831C                     __end_of___xxtofl:
 29832                           	opt stack 0
 29833                           tosu	equ	0xFFF
 29834                           tosh	equ	0xFFE
 29835                           tosl	equ	0xFFD
 29836                           pclath	equ	0xFFA
 29837                           tblptru	equ	0xFF8
 29838                           tblptrh	equ	0xFF7
 29839                           tblptrl	equ	0xFF6
 29840                           tablat	equ	0xFF5
 29841                           prodh	equ	0xFF4
 29842                           prodl	equ	0xFF3
 29843                           intcon	equ	0xFF2
 29844                           indf0	equ	0xFEF
 29845                           postinc0	equ	0xFEE
 29846                           fsr0h	equ	0xFEA
 29847                           fsr0l	equ	0xFE9
 29848                           wreg	equ	0xFE8
 29849                           indf1	equ	0xFE7
 29850                           postdec1	equ	0xFE5
 29851                           plusw1	equ	0xFE3
 29852                           fsr1h	equ	0xFE2
 29853                           fsr1l	equ	0xFE1
 29854                           indf2	equ	0xFDF
 29855                           postinc2	equ	0xFDE
 29856                           postdec2	equ	0xFDD
 29857                           plusw2	equ	0xFDB
 29858                           fsr2h	equ	0xFDA
 29859                           fsr2l	equ	0xFD9
 29860                           status	equ	0xFD8
 29861                           
 29862 ;; *************** function ___wmul *****************
 29863 ;; Defined at:
 29864 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 29865 ;; Parameters:    Size  Location     Type
 29866 ;;  multiplier      2   23[BANK1 ] unsigned int 
 29867 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 29868 ;; Auto vars:     Size  Location     Type
 29869 ;;  product         2   27[BANK1 ] unsigned int 
 29870 ;; Return value:  Size  Location     Type
 29871 ;;                  2   23[BANK1 ] unsigned int 
 29872 ;; Registers used:
 29873 ;;		wreg, status,2, status,0, prodl, prodh
 29874 ;; Tracked objects:
 29875 ;;		On entry : 0/0
 29876 ;;		On exit  : 0/0
 29877 ;;		Unchanged: 0/0
 29878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29879 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29880 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29882 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29883 ;;Total ram usage:        6 bytes
 29884 ;; Hardware stack levels used:    1
 29885 ;; Hardware stack levels required when called:   13
 29886 ;; This function calls:
 29887 ;;		Nothing
 29888 ;; This function is called by:
 29889 ;;		_ringBufferLUT
 29890 ;;		__doprnt
 29891 ;;		_atoi
 29892 ;; This function uses a non-reentrant model
 29893 ;;
 29894                           
 29895                           	psect	text45
 29896  01AD20                     __ptext45:
 29897                           	opt stack 0
 29898  01AD20                     ___wmul:
 29899                           	opt stack 13
 29900                           
 29901                           ; BSR set to: 1
 29902                           ;incstack = 0
 29903  01AD20  0101               	movlb	1	; () banked
 29904  01AD22  5117               	movf	___wmul@multiplier& (0+255),w,b
 29905  01AD24  0319               	mulwf	___wmul@multiplicand& (0+255),b
 29906  01AD26  CFF3 F11B          	movff	prodl,___wmul@product
 29907  01AD2A  CFF4 F11C          	movff	prodh,___wmul@product+1
 29908  01AD2E  5117               	movf	___wmul@multiplier& (0+255),w,b
 29909  01AD30  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29910  01AD32  50F3               	movf	prodl,w,c
 29911  01AD34  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 29912  01AD36  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29913  01AD38  0319               	mulwf	___wmul@multiplicand& (0+255),b
 29914  01AD3A  50F3               	movf	prodl,w,c
 29915  01AD3C  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 29916                           
 29917                           ; BSR set to: 1
 29918  01AD3E  C11B  F117         	movff	___wmul@product,?___wmul
 29919  01AD42  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 29920  01AD46  0012               	return	
 29921  01AD48                     __end_of___wmul:
 29922                           	opt stack 0
 29923                           tosu	equ	0xFFF
 29924                           tosh	equ	0xFFE
 29925                           tosl	equ	0xFFD
 29926                           pclath	equ	0xFFA
 29927                           tblptru	equ	0xFF8
 29928                           tblptrh	equ	0xFF7
 29929                           tblptrl	equ	0xFF6
 29930                           tablat	equ	0xFF5
 29931                           prodh	equ	0xFF4
 29932                           prodl	equ	0xFF3
 29933                           intcon	equ	0xFF2
 29934                           indf0	equ	0xFEF
 29935                           postinc0	equ	0xFEE
 29936                           fsr0h	equ	0xFEA
 29937                           fsr0l	equ	0xFE9
 29938                           wreg	equ	0xFE8
 29939                           indf1	equ	0xFE7
 29940                           postdec1	equ	0xFE5
 29941                           plusw1	equ	0xFE3
 29942                           fsr1h	equ	0xFE2
 29943                           fsr1l	equ	0xFE1
 29944                           indf2	equ	0xFDF
 29945                           postinc2	equ	0xFDE
 29946                           postdec2	equ	0xFDD
 29947                           plusw2	equ	0xFDB
 29948                           fsr2h	equ	0xFDA
 29949                           fsr2l	equ	0xFD9
 29950                           status	equ	0xFD8
 29951                           
 29952 ;; *************** function ___llmod *****************
 29953 ;; Defined at:
 29954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 29955 ;; Parameters:    Size  Location     Type
 29956 ;;  dividend        4   36[BANK1 ] unsigned long 
 29957 ;;  divisor         4   40[BANK1 ] unsigned long 
 29958 ;; Auto vars:     Size  Location     Type
 29959 ;;  counter         1   44[BANK1 ] unsigned char 
 29960 ;; Return value:  Size  Location     Type
 29961 ;;                  4   36[BANK1 ] unsigned long 
 29962 ;; Registers used:
 29963 ;;		wreg, status,2, status,0
 29964 ;; Tracked objects:
 29965 ;;		On entry : 0/0
 29966 ;;		On exit  : 0/0
 29967 ;;		Unchanged: 0/0
 29968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29969 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29970 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29972 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29973 ;;Total ram usage:        9 bytes
 29974 ;; Hardware stack levels used:    1
 29975 ;; Hardware stack levels required when called:   13
 29976 ;; This function calls:
 29977 ;;		Nothing
 29978 ;; This function is called by:
 29979 ;;		__doprnt
 29980 ;; This function uses a non-reentrant model
 29981 ;;
 29982                           
 29983                           	psect	text46
 29984  01A000                     __ptext46:
 29985                           	opt stack 0
 29986  01A000                     ___llmod:
 29987                           	opt stack 13
 29988                           
 29989                           ; BSR set to: 1
 29990                           ;incstack = 0
 29991  01A000  0101               	movlb	1	; () banked
 29992  01A002  5128               	movf	___llmod@divisor& (0+255),w,b
 29993  01A004  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29994  01A006  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29995  01A008  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29996  01A00A  B4D8               	btfsc	status,2,c
 29997  01A00C  D024               	goto	l2605
 29998                           
 29999                           ; BSR set to: 1
 30000  01A00E  0E01               	movlw	1
 30001  01A010  6F2C               	movwf	___llmod@counter& (0+255),b
 30002  01A012  D006               	goto	l2600
 30003  01A014                     
 30004                           ; BSR set to: 1
 30005                           
 30006                           ; BSR set to: 1
 30007  01A014  90D8               	bcf	status,0,c
 30008  01A016  3728               	rlcf	___llmod@divisor& (0+255),f,b
 30009  01A018  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 30010  01A01A  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 30011  01A01C  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 30012  01A01E  2B2C               	incf	___llmod@counter& (0+255),f,b
 30013  01A020                     l2600:
 30014                           
 30015                           ; BSR set to: 1
 30016                           
 30017                           ; BSR set to: 1
 30018  01A020  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 30019  01A022  D7F8               	goto	l2601
 30020  01A024                     u18270:
 30021                           
 30022                           ; BSR set to: 1
 30023                           
 30024                           ; BSR set to: 1
 30025                           
 30026                           ; BSR set to: 1
 30027  01A024  5128               	movf	___llmod@divisor& (0+255),w,b
 30028  01A026  5D24               	subwf	___llmod@dividend& (0+255),w,b
 30029  01A028  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 30030  01A02A  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 30031  01A02C  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 30032  01A02E  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 30033  01A030  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 30034  01A032  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 30035  01A034  A0D8               	btfss	status,0,c
 30036  01A036  D008               	goto	l2604
 30037                           
 30038                           ; BSR set to: 1
 30039  01A038  5128               	movf	___llmod@divisor& (0+255),w,b
 30040  01A03A  5F24               	subwf	___llmod@dividend& (0+255),f,b
 30041  01A03C  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 30042  01A03E  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 30043  01A040  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 30044  01A042  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 30045  01A044  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 30046  01A046  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 30047  01A048                     l2604:
 30048                           
 30049                           ; BSR set to: 1
 30050                           
 30051                           ; BSR set to: 1
 30052  01A048  90D8               	bcf	status,0,c
 30053  01A04A  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 30054  01A04C  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 30055  01A04E  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 30056  01A050  3328               	rrcf	___llmod@divisor& (0+255),f,b
 30057                           
 30058                           ; BSR set to: 1
 30059  01A052  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 30060  01A054  D7E7               	goto	u18270
 30061  01A056                     l2605:
 30062                           
 30063                           ; BSR set to: 1
 30064                           
 30065                           ; BSR set to: 1
 30066  01A056  C124  F124         	movff	___llmod@dividend,?___llmod
 30067  01A05A  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 30068  01A05E  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 30069  01A062  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 30070                           
 30071                           ; BSR set to: 1
 30072  01A066  0012               	return		;funcret
 30073  01A068                     __end_of___llmod:
 30074                           	opt stack 0
 30075                           tosu	equ	0xFFF
 30076                           tosh	equ	0xFFE
 30077                           tosl	equ	0xFFD
 30078                           pclath	equ	0xFFA
 30079                           tblptru	equ	0xFF8
 30080                           tblptrh	equ	0xFF7
 30081                           tblptrl	equ	0xFF6
 30082                           tablat	equ	0xFF5
 30083                           prodh	equ	0xFF4
 30084                           prodl	equ	0xFF3
 30085                           intcon	equ	0xFF2
 30086                           indf0	equ	0xFEF
 30087                           postinc0	equ	0xFEE
 30088                           fsr0h	equ	0xFEA
 30089                           fsr0l	equ	0xFE9
 30090                           wreg	equ	0xFE8
 30091                           indf1	equ	0xFE7
 30092                           postdec1	equ	0xFE5
 30093                           plusw1	equ	0xFE3
 30094                           fsr1h	equ	0xFE2
 30095                           fsr1l	equ	0xFE1
 30096                           indf2	equ	0xFDF
 30097                           postinc2	equ	0xFDE
 30098                           postdec2	equ	0xFDD
 30099                           plusw2	equ	0xFDB
 30100                           fsr2h	equ	0xFDA
 30101                           fsr2l	equ	0xFD9
 30102                           status	equ	0xFD8
 30103                           
 30104 ;; *************** function ___lldiv *****************
 30105 ;; Defined at:
 30106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30107 ;; Parameters:    Size  Location     Type
 30108 ;;  dividend        4   23[BANK1 ] unsigned long 
 30109 ;;  divisor         4   27[BANK1 ] unsigned long 
 30110 ;; Auto vars:     Size  Location     Type
 30111 ;;  quotient        4   31[BANK1 ] unsigned long 
 30112 ;;  counter         1   35[BANK1 ] unsigned char 
 30113 ;; Return value:  Size  Location     Type
 30114 ;;                  4   23[BANK1 ] unsigned long 
 30115 ;; Registers used:
 30116 ;;		wreg, status,2, status,0
 30117 ;; Tracked objects:
 30118 ;;		On entry : 0/0
 30119 ;;		On exit  : 0/0
 30120 ;;		Unchanged: 0/0
 30121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30122 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30123 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30125 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30126 ;;Total ram usage:       13 bytes
 30127 ;; Hardware stack levels used:    1
 30128 ;; Hardware stack levels required when called:   13
 30129 ;; This function calls:
 30130 ;;		Nothing
 30131 ;; This function is called by:
 30132 ;;		__doprnt
 30133 ;; This function uses a non-reentrant model
 30134 ;;
 30135                           
 30136                           	psect	text47
 30137  019ADC                     __ptext47:
 30138                           	opt stack 0
 30139  019ADC                     ___lldiv:
 30140                           	opt stack 13
 30141                           
 30142                           ; BSR set to: 1
 30143                           ;incstack = 0
 30144  019ADC  0E00               	movlw	0
 30145  019ADE  0101               	movlb	1	; () banked
 30146  019AE0  6F1F               	movwf	___lldiv@quotient& (0+255),b
 30147  019AE2  0E00               	movlw	0
 30148  019AE4  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 30149  019AE6  0E00               	movlw	0
 30150  019AE8  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 30151  019AEA  0E00               	movlw	0
 30152  019AEC  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 30153                           
 30154                           ; BSR set to: 1
 30155  019AEE  511B               	movf	___lldiv@divisor& (0+255),w,b
 30156  019AF0  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30157  019AF2  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30158  019AF4  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30159  019AF6  B4D8               	btfsc	status,2,c
 30160  019AF8  D02A               	goto	l2595
 30161                           
 30162                           ; BSR set to: 1
 30163  019AFA  0E01               	movlw	1
 30164  019AFC  6F23               	movwf	___lldiv@counter& (0+255),b
 30165  019AFE  D006               	goto	l2590
 30166  019B00                     
 30167                           ; BSR set to: 1
 30168                           
 30169                           ; BSR set to: 1
 30170  019B00  90D8               	bcf	status,0,c
 30171  019B02  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 30172  019B04  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30173  019B06  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30174  019B08  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30175  019B0A  2B23               	incf	___lldiv@counter& (0+255),f,b
 30176  019B0C                     l2590:
 30177                           
 30178                           ; BSR set to: 1
 30179                           
 30180                           ; BSR set to: 1
 30181  019B0C  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30182  019B0E  D7F8               	goto	l2591
 30183  019B10                     u18240:
 30184                           
 30185                           ; BSR set to: 1
 30186                           
 30187                           ; BSR set to: 1
 30188                           
 30189                           ; BSR set to: 1
 30190  019B10  90D8               	bcf	status,0,c
 30191  019B12  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 30192  019B14  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30193  019B16  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30194  019B18  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30195                           
 30196                           ; BSR set to: 1
 30197  019B1A  511B               	movf	___lldiv@divisor& (0+255),w,b
 30198  019B1C  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 30199  019B1E  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30200  019B20  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30201  019B22  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30202  019B24  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30203  019B26  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30204  019B28  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30205  019B2A  A0D8               	btfss	status,0,c
 30206  019B2C  D009               	goto	l2594
 30207                           
 30208                           ; BSR set to: 1
 30209  019B2E  511B               	movf	___lldiv@divisor& (0+255),w,b
 30210  019B30  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 30211  019B32  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30212  019B34  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30213  019B36  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30214  019B38  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30215  019B3A  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30216  019B3C  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30217                           
 30218                           ; BSR set to: 1
 30219  019B3E  811F               	bsf	___lldiv@quotient& (0+255),0,b
 30220  019B40                     l2594:
 30221                           
 30222                           ; BSR set to: 1
 30223                           
 30224                           ; BSR set to: 1
 30225  019B40  90D8               	bcf	status,0,c
 30226  019B42  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30227  019B44  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30228  019B46  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30229  019B48  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 30230                           
 30231                           ; BSR set to: 1
 30232  019B4A  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 30233  019B4C  D7E1               	goto	u18240
 30234  019B4E                     l2595:
 30235                           
 30236                           ; BSR set to: 1
 30237                           
 30238                           ; BSR set to: 1
 30239  019B4E  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 30240  019B52  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 30241  019B56  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 30242  019B5A  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 30243                           
 30244                           ; BSR set to: 1
 30245  019B5E  0012               	return		;funcret
 30246  019B60                     __end_of___lldiv:
 30247                           	opt stack 0
 30248                           tosu	equ	0xFFF
 30249                           tosh	equ	0xFFE
 30250                           tosl	equ	0xFFD
 30251                           pclath	equ	0xFFA
 30252                           tblptru	equ	0xFF8
 30253                           tblptrh	equ	0xFF7
 30254                           tblptrl	equ	0xFF6
 30255                           tablat	equ	0xFF5
 30256                           prodh	equ	0xFF4
 30257                           prodl	equ	0xFF3
 30258                           intcon	equ	0xFF2
 30259                           indf0	equ	0xFEF
 30260                           postinc0	equ	0xFEE
 30261                           fsr0h	equ	0xFEA
 30262                           fsr0l	equ	0xFE9
 30263                           wreg	equ	0xFE8
 30264                           indf1	equ	0xFE7
 30265                           postdec1	equ	0xFE5
 30266                           plusw1	equ	0xFE3
 30267                           fsr1h	equ	0xFE2
 30268                           fsr1l	equ	0xFE1
 30269                           indf2	equ	0xFDF
 30270                           postinc2	equ	0xFDE
 30271                           postdec2	equ	0xFDD
 30272                           plusw2	equ	0xFDB
 30273                           fsr2h	equ	0xFDA
 30274                           fsr2l	equ	0xFD9
 30275                           status	equ	0xFD8
 30276                           
 30277 ;; *************** function ___fltol *****************
 30278 ;; Defined at:
 30279 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 30280 ;; Parameters:    Size  Location     Type
 30281 ;;  f1              4  120[BANK1 ] unsigned long 
 30282 ;; Auto vars:     Size  Location     Type
 30283 ;;  exp1            1  129[BANK1 ] unsigned char 
 30284 ;;  sign1           1  128[BANK1 ] unsigned char 
 30285 ;; Return value:  Size  Location     Type
 30286 ;;                  4  120[BANK1 ] long 
 30287 ;; Registers used:
 30288 ;;		wreg, status,2, status,0
 30289 ;; Tracked objects:
 30290 ;;		On entry : 0/0
 30291 ;;		On exit  : 0/0
 30292 ;;		Unchanged: 0/0
 30293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30294 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30295 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30296 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30297 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30298 ;;Total ram usage:       10 bytes
 30299 ;; Hardware stack levels used:    1
 30300 ;; Hardware stack levels required when called:   13
 30301 ;; This function calls:
 30302 ;;		Nothing
 30303 ;; This function is called by:
 30304 ;;		__doprnt
 30305 ;;		_ftoa
 30306 ;; This function uses a non-reentrant model
 30307 ;;
 30308                           
 30309                           	psect	text48
 30310  019210                     __ptext48:
 30311                           	opt stack 0
 30312  019210                     ___fltol:
 30313                           	opt stack 13
 30314                           
 30315                           ; BSR set to: 1
 30316                           ;incstack = 0
 30317  019210  0101               	movlb	1	; () banked
 30318  019212  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 30319  019214  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 30320  019216  6F81               	movwf	___fltol@exp1& (0+255),b
 30321  019218  5181               	movf	___fltol@exp1& (0+255),w,b
 30322  01921A  A4D8               	btfss	status,2,c
 30323  01921C  D009               	goto	l2425
 30324                           
 30325                           ; BSR set to: 1
 30326  01921E  0E00               	movlw	0
 30327  019220  6F78               	movwf	?___fltol& (0+255),b
 30328  019222  0E00               	movlw	0
 30329  019224  6F79               	movwf	(?___fltol+1)& (0+255),b
 30330  019226  0E00               	movlw	0
 30331  019228  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30332  01922A  0E00               	movlw	0
 30333  01922C  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30334                           
 30335                           ; BSR set to: 1
 30336  01922E  0012               	return	
 30337  019230                     l2425:
 30338                           
 30339                           ; BSR set to: 1
 30340                           
 30341                           ; BSR set to: 1
 30342  019230  C178  F17C         	movff	___fltol@f1,??___fltol
 30343  019234  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 30344  019238  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 30345  01923C  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 30346  019240  0E20               	movlw	32
 30347  019242  D005               	goto	u18170
 30348  019244                     u18175:
 30349  019244  90D8               	bcf	status,0,c
 30350  019246  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 30351  019248  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 30352  01924A  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 30353  01924C  337C               	rrcf	??___fltol& (0+255),f,b
 30354  01924E                     u18170:
 30355  01924E  2EE8               	decfsz	wreg,f,c
 30356  019250  D7F9               	goto	u18175
 30357  019252  517C               	movf	??___fltol& (0+255),w,b
 30358  019254  6F80               	movwf	___fltol@sign1& (0+255),b
 30359                           
 30360                           ; BSR set to: 1
 30361  019256  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 30362                           
 30363                           ; BSR set to: 1
 30364  019258  0EFF               	movlw	255
 30365  01925A  1778               	andwf	___fltol@f1& (0+255),f,b
 30366  01925C  0EFF               	movlw	255
 30367  01925E  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 30368  019260  0EFF               	movlw	255
 30369  019262  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 30370  019264  0E00               	movlw	0
 30371  019266  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 30372                           
 30373                           ; BSR set to: 1
 30374  019268  0E96               	movlw	150
 30375  01926A  5F81               	subwf	___fltol@exp1& (0+255),f,b
 30376                           
 30377                           ; BSR set to: 1
 30378  01926C  AF81               	btfss	___fltol@exp1& (0+255),7,b
 30379  01926E  D016               	goto	l2427
 30380                           
 30381                           ; BSR set to: 1
 30382  019270  5181               	movf	___fltol@exp1& (0+255),w,b
 30383  019272  0A80               	xorlw	128
 30384  019274  0F97               	addlw	151
 30385  019276  B0D8               	btfsc	status,0,c
 30386  019278  D009               	goto	l2428
 30387                           
 30388                           ; BSR set to: 1
 30389  01927A  0E00               	movlw	0
 30390  01927C  6F78               	movwf	?___fltol& (0+255),b
 30391  01927E  0E00               	movlw	0
 30392  019280  6F79               	movwf	(?___fltol+1)& (0+255),b
 30393  019282  0E00               	movlw	0
 30394  019284  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30395  019286  0E00               	movlw	0
 30396  019288  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30397                           
 30398                           ; BSR set to: 1
 30399  01928A  0012               	return	
 30400  01928C                     l2428:
 30401                           
 30402                           ; BSR set to: 1
 30403                           
 30404                           ; BSR set to: 1
 30405                           
 30406                           ; BSR set to: 1
 30407  01928C  90D8               	bcf	status,0,c
 30408  01928E  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 30409  019290  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 30410  019292  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 30411  019294  3378               	rrcf	___fltol@f1& (0+255),f,b
 30412                           
 30413                           ; BSR set to: 1
 30414  019296  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 30415  019298  D7F9               	goto	l2428
 30416                           
 30417                           ; BSR set to: 1
 30418  01929A  D015               	goto	u18210
 30419  01929C                     l2427:
 30420                           
 30421                           ; BSR set to: 1
 30422                           
 30423                           ; BSR set to: 1
 30424  01929C  0E1F               	movlw	31
 30425  01929E  6581               	cpfsgt	___fltol@exp1& (0+255),b
 30426  0192A0  D00F               	goto	l2433
 30427                           
 30428                           ; BSR set to: 1
 30429  0192A2  0E00               	movlw	0
 30430  0192A4  6F78               	movwf	?___fltol& (0+255),b
 30431  0192A6  0E00               	movlw	0
 30432  0192A8  6F79               	movwf	(?___fltol+1)& (0+255),b
 30433  0192AA  0E00               	movlw	0
 30434  0192AC  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30435  0192AE  0E00               	movlw	0
 30436  0192B0  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30437                           
 30438                           ; BSR set to: 1
 30439  0192B2  0012               	return	
 30440  0192B4                     
 30441                           ; BSR set to: 1
 30442                           
 30443                           ; BSR set to: 1
 30444  0192B4  90D8               	bcf	status,0,c
 30445  0192B6  3778               	rlcf	___fltol@f1& (0+255),f,b
 30446  0192B8  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 30447  0192BA  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 30448  0192BC  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 30449  0192BE  0781               	decf	___fltol@exp1& (0+255),f,b
 30450  0192C0                     l2433:
 30451                           
 30452                           ; BSR set to: 1
 30453                           
 30454                           ; BSR set to: 1
 30455  0192C0  5181               	movf	___fltol@exp1& (0+255),w,b
 30456  0192C2  A4D8               	btfss	status,2,c
 30457  0192C4  D7F7               	goto	l2434
 30458  0192C6                     u18210:
 30459                           
 30460                           ; BSR set to: 1
 30461                           
 30462                           ; BSR set to: 1
 30463                           
 30464                           ; BSR set to: 1
 30465  0192C6  5180               	movf	___fltol@sign1& (0+255),w,b
 30466  0192C8  B4D8               	btfsc	status,2,c
 30467  0192CA  D008               	goto	l2436
 30468                           
 30469                           ; BSR set to: 1
 30470  0192CC  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 30471  0192CE  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 30472  0192D0  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 30473  0192D2  6D78               	negf	___fltol@f1& (0+255),b
 30474  0192D4  0E00               	movlw	0
 30475  0192D6  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 30476  0192D8  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 30477  0192DA  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 30478  0192DC                     l2436:
 30479                           
 30480                           ; BSR set to: 1
 30481                           
 30482                           ; BSR set to: 1
 30483  0192DC  C178  F178         	movff	___fltol@f1,?___fltol
 30484  0192E0  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 30485  0192E4  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 30486  0192E8  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 30487  0192EC  0012               	return	
 30488  0192EE                     __end_of___fltol:
 30489                           	opt stack 0
 30490                           tosu	equ	0xFFF
 30491                           tosh	equ	0xFFE
 30492                           tosl	equ	0xFFD
 30493                           pclath	equ	0xFFA
 30494                           tblptru	equ	0xFF8
 30495                           tblptrh	equ	0xFF7
 30496                           tblptrl	equ	0xFF6
 30497                           tablat	equ	0xFF5
 30498                           prodh	equ	0xFF4
 30499                           prodl	equ	0xFF3
 30500                           intcon	equ	0xFF2
 30501                           indf0	equ	0xFEF
 30502                           postinc0	equ	0xFEE
 30503                           fsr0h	equ	0xFEA
 30504                           fsr0l	equ	0xFE9
 30505                           wreg	equ	0xFE8
 30506                           indf1	equ	0xFE7
 30507                           postdec1	equ	0xFE5
 30508                           plusw1	equ	0xFE3
 30509                           fsr1h	equ	0xFE2
 30510                           fsr1l	equ	0xFE1
 30511                           indf2	equ	0xFDF
 30512                           postinc2	equ	0xFDE
 30513                           postdec2	equ	0xFDD
 30514                           plusw2	equ	0xFDB
 30515                           fsr2h	equ	0xFDA
 30516                           fsr2l	equ	0xFD9
 30517                           status	equ	0xFD8
 30518                           
 30519 ;; *************** function ___flsub *****************
 30520 ;; Defined at:
 30521 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30522 ;; Parameters:    Size  Location     Type
 30523 ;;  b               4   61[BANK1 ] long 
 30524 ;;  a               4   65[BANK1 ] long 
 30525 ;; Auto vars:     Size  Location     Type
 30526 ;;		None
 30527 ;; Return value:  Size  Location     Type
 30528 ;;                  4   61[BANK1 ] long 
 30529 ;; Registers used:
 30530 ;;		wreg, status,2, status,0, cstack
 30531 ;; Tracked objects:
 30532 ;;		On entry : 0/0
 30533 ;;		On exit  : 0/0
 30534 ;;		Unchanged: 0/0
 30535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30536 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30539 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30540 ;;Total ram usage:        8 bytes
 30541 ;; Hardware stack levels used:    1
 30542 ;; Hardware stack levels required when called:   14
 30543 ;; This function calls:
 30544 ;;		___fladd
 30545 ;; This function is called by:
 30546 ;;		__doprnt
 30547 ;; This function uses a non-reentrant model
 30548 ;;
 30549                           
 30550                           	psect	text49
 30551  01A694                     __ptext49:
 30552                           	opt stack 0
 30553  01A694                     ___flsub:
 30554                           	opt stack 12
 30555                           
 30556                           ; BSR set to: 1
 30557                           ;incstack = 0
 30558  01A694  0E00               	movlw	0
 30559  01A696  0101               	movlb	1	; () banked
 30560  01A698  1B41               	xorwf	___flsub@a& (0+255),f,b
 30561  01A69A  0E00               	movlw	0
 30562  01A69C  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 30563  01A69E  0E00               	movlw	0
 30564  01A6A0  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 30565  01A6A2  0E80               	movlw	128
 30566  01A6A4  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 30567                           
 30568                           ; BSR set to: 1
 30569  01A6A6  C13D  F129         	movff	___flsub@b,___fladd@b
 30570  01A6AA  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 30571  01A6AE  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 30572  01A6B2  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 30573  01A6B6  C141  F12D         	movff	___flsub@a,___fladd@a
 30574  01A6BA  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 30575  01A6BE  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 30576  01A6C2  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 30577  01A6C6  EC35  F0AF         	call	___fladd	;wreg free
 30578  01A6CA  C129  F13D         	movff	?___fladd,?___flsub
 30579  01A6CE  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 30580  01A6D2  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 30581  01A6D6  C12C  F140         	movff	?___fladd+3,?___flsub+3
 30582  01A6DA  0012               	return	
 30583  01A6DC                     __end_of___flsub:
 30584                           	opt stack 0
 30585                           tosu	equ	0xFFF
 30586                           tosh	equ	0xFFE
 30587                           tosl	equ	0xFFD
 30588                           pclath	equ	0xFFA
 30589                           tblptru	equ	0xFF8
 30590                           tblptrh	equ	0xFF7
 30591                           tblptrl	equ	0xFF6
 30592                           tablat	equ	0xFF5
 30593                           prodh	equ	0xFF4
 30594                           prodl	equ	0xFF3
 30595                           intcon	equ	0xFF2
 30596                           indf0	equ	0xFEF
 30597                           postinc0	equ	0xFEE
 30598                           fsr0h	equ	0xFEA
 30599                           fsr0l	equ	0xFE9
 30600                           wreg	equ	0xFE8
 30601                           indf1	equ	0xFE7
 30602                           postdec1	equ	0xFE5
 30603                           plusw1	equ	0xFE3
 30604                           fsr1h	equ	0xFE2
 30605                           fsr1l	equ	0xFE1
 30606                           indf2	equ	0xFDF
 30607                           postinc2	equ	0xFDE
 30608                           postdec2	equ	0xFDD
 30609                           plusw2	equ	0xFDB
 30610                           fsr2h	equ	0xFDA
 30611                           fsr2l	equ	0xFD9
 30612                           status	equ	0xFD8
 30613                           
 30614 ;; *************** function ___fladd *****************
 30615 ;; Defined at:
 30616 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30617 ;; Parameters:    Size  Location     Type
 30618 ;;  b               4   41[BANK1 ] long 
 30619 ;;  a               4   45[BANK1 ] long 
 30620 ;; Auto vars:     Size  Location     Type
 30621 ;;  grs             1   60[BANK1 ] unsigned char 
 30622 ;;  bexp            1   59[BANK1 ] unsigned char 
 30623 ;;  aexp            1   58[BANK1 ] unsigned char 
 30624 ;;  signs           1   57[BANK1 ] unsigned char 
 30625 ;; Return value:  Size  Location     Type
 30626 ;;                  4   41[BANK1 ] unsigned char 
 30627 ;; Registers used:
 30628 ;;		wreg, status,2, status,0
 30629 ;; Tracked objects:
 30630 ;;		On entry : 0/0
 30631 ;;		On exit  : 0/0
 30632 ;;		Unchanged: 0/0
 30633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30634 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30635 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30636 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30637 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30638 ;;Total ram usage:       20 bytes
 30639 ;; Hardware stack levels used:    1
 30640 ;; Hardware stack levels required when called:   13
 30641 ;; This function calls:
 30642 ;;		Nothing
 30643 ;; This function is called by:
 30644 ;;		_ringBufferLUT
 30645 ;;		__doprnt
 30646 ;;		___flsub
 30647 ;; This function uses a non-reentrant model
 30648 ;;
 30649                           
 30650                           	psect	text50
 30651  015E6A                     __ptext50:
 30652                           	opt stack 0
 30653  015E6A                     ___fladd:
 30654                           	opt stack 12
 30655                           
 30656                           ;incstack = 0
 30657  015E6A  0101               	movlb	1	; () banked
 30658  015E6C  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30659  015E6E  0B80               	andlw	128
 30660  015E70  6F39               	movwf	___fladd@signs& (0+255),b
 30661  015E72  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30662  015E74  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 30663  015E76  6F3B               	movwf	___fladd@bexp& (0+255),b
 30664                           
 30665                           ; BSR set to: 1
 30666  015E78  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 30667                           
 30668                           ; BSR set to: 1
 30669  015E7A  813B               	bsf	___fladd@bexp& (0+255),0,b
 30670                           
 30671                           ; BSR set to: 1
 30672                           
 30673                           ; BSR set to: 1
 30674  015E7C  513B               	movf	___fladd@bexp& (0+255),w,b
 30675  015E7E  B4D8               	btfsc	status,2,c
 30676  015E80  D00D               	goto	l2706
 30677                           
 30678                           ; BSR set to: 1
 30679  015E82  293B               	incf	___fladd@bexp& (0+255),w,b
 30680  015E84  A4D8               	btfss	status,2,c
 30681  015E86  D008               	goto	l2707
 30682                           
 30683                           ; BSR set to: 1
 30684  015E88  0E00               	movlw	0
 30685  015E8A  6F29               	movwf	___fladd@b& (0+255),b
 30686  015E8C  0E00               	movlw	0
 30687  015E8E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30688  015E90  0E00               	movlw	0
 30689  015E92  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30690  015E94  0E00               	movlw	0
 30691  015E96  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30692  015E98                     l2707:
 30693                           
 30694                           ; BSR set to: 1
 30695                           
 30696                           ; BSR set to: 1
 30697  015E98  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 30698  015E9A  D006               	goto	L6
 30699  015E9C                     l2706:
 30700                           
 30701                           ; BSR set to: 1
 30702                           
 30703                           ; BSR set to: 1
 30704  015E9C  0E00               	movlw	0
 30705  015E9E  6F29               	movwf	___fladd@b& (0+255),b
 30706  015EA0  0E00               	movlw	0
 30707  015EA2  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30708  015EA4  0E00               	movlw	0
 30709  015EA6  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30710  015EA8                     L6:
 30711  015EA8  0E00               	movlw	0
 30712  015EAA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30713                           
 30714                           ; BSR set to: 1
 30715                           
 30716                           ; BSR set to: 1
 30717  015EAC  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30718  015EAE  0B80               	andlw	128
 30719  015EB0  6F3A               	movwf	___fladd@aexp& (0+255),b
 30720                           
 30721                           ; BSR set to: 1
 30722  015EB2  5139               	movf	___fladd@signs& (0+255),w,b
 30723  015EB4  193A               	xorwf	___fladd@aexp& (0+255),w,b
 30724  015EB6  A4D8               	btfss	status,2,c
 30725                           
 30726                           ; BSR set to: 1
 30727  015EB8  8D39               	bsf	___fladd@signs& (0+255),6,b
 30728                           
 30729                           ; BSR set to: 1
 30730                           
 30731                           ; BSR set to: 1
 30732  015EBA  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30733  015EBC  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 30734  015EBE  6F3A               	movwf	___fladd@aexp& (0+255),b
 30735                           
 30736                           ; BSR set to: 1
 30737  015EC0  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 30738                           
 30739                           ; BSR set to: 1
 30740  015EC2  813A               	bsf	___fladd@aexp& (0+255),0,b
 30741                           
 30742                           ; BSR set to: 1
 30743                           
 30744                           ; BSR set to: 1
 30745  015EC4  513A               	movf	___fladd@aexp& (0+255),w,b
 30746  015EC6  B4D8               	btfsc	status,2,c
 30747  015EC8  D00D               	goto	l2711
 30748                           
 30749                           ; BSR set to: 1
 30750  015ECA  293A               	incf	___fladd@aexp& (0+255),w,b
 30751  015ECC  A4D8               	btfss	status,2,c
 30752  015ECE  D008               	goto	l2712
 30753                           
 30754                           ; BSR set to: 1
 30755  015ED0  0E00               	movlw	0
 30756  015ED2  6F2D               	movwf	___fladd@a& (0+255),b
 30757  015ED4  0E00               	movlw	0
 30758  015ED6  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 30759  015ED8  0E00               	movlw	0
 30760  015EDA  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 30761  015EDC  0E00               	movlw	0
 30762  015EDE  6F30               	movwf	(___fladd@a+3)& (0+255),b
 30763  015EE0                     l2712:
 30764                           
 30765                           ; BSR set to: 1
 30766                           
 30767                           ; BSR set to: 1
 30768  015EE0  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 30769  015EE2  D006               	goto	L7
 30770  015EE4                     l2711:
 30771                           
 30772                           ; BSR set to: 1
 30773                           
 30774                           ; BSR set to: 1
 30775  015EE4  0E00               	movlw	0
 30776  015EE6  6F2D               	movwf	___fladd@a& (0+255),b
 30777  015EE8  0E00               	movlw	0
 30778  015EEA  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 30779  015EEC  0E00               	movlw	0
 30780  015EEE  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 30781  015EF0                     L7:
 30782  015EF0  0E00               	movlw	0
 30783  015EF2  6F30               	movwf	(___fladd@a+3)& (0+255),b
 30784                           
 30785                           ; BSR set to: 1
 30786                           
 30787                           ; BSR set to: 1
 30788  015EF4  513B               	movf	___fladd@bexp& (0+255),w,b
 30789  015EF6  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 30790  015EF8  B0D8               	btfsc	status,0,c
 30791  015EFA  D022               	goto	l2714
 30792                           
 30793                           ; BSR set to: 1
 30794  015EFC  AD39               	btfss	___fladd@signs& (0+255),6,b
 30795  015EFE  D002               	goto	l2715
 30796                           
 30797                           ; BSR set to: 1
 30798  015F00  0E80               	movlw	128
 30799  015F02  1B39               	xorwf	___fladd@signs& (0+255),f,b
 30800  015F04                     l2715:
 30801                           
 30802                           ; BSR set to: 1
 30803                           
 30804                           ; BSR set to: 1
 30805  015F04  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 30806                           
 30807                           ; BSR set to: 1
 30808  015F08  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 30809                           
 30810                           ; BSR set to: 1
 30811  015F0C  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 30812                           
 30813                           ; BSR set to: 1
 30814  015F10  C129  F13C         	movff	___fladd@b,___fladd@grs
 30815                           
 30816                           ; BSR set to: 1
 30817  015F14  C12D  F129         	movff	___fladd@a,___fladd@b
 30818                           
 30819                           ; BSR set to: 1
 30820  015F18  C13C  F12D         	movff	___fladd@grs,___fladd@a
 30821                           
 30822                           ; BSR set to: 1
 30823  015F1C  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 30824                           
 30825                           ; BSR set to: 1
 30826  015F20  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 30827                           
 30828                           ; BSR set to: 1
 30829  015F24  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 30830                           
 30831                           ; BSR set to: 1
 30832  015F28  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 30833                           
 30834                           ; BSR set to: 1
 30835  015F2C  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 30836                           
 30837                           ; BSR set to: 1
 30838  015F30  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 30839                           
 30840                           ; BSR set to: 1
 30841  015F34  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 30842                           
 30843                           ; BSR set to: 1
 30844  015F38  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 30845                           
 30846                           ; BSR set to: 1
 30847  015F3C  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 30848  015F40                     l2714:
 30849                           
 30850                           ; BSR set to: 1
 30851                           
 30852                           ; BSR set to: 1
 30853  015F40  0E00               	movlw	0
 30854  015F42  6F3C               	movwf	___fladd@grs& (0+255),b
 30855                           
 30856                           ; BSR set to: 1
 30857  015F44  513B               	movf	___fladd@bexp& (0+255),w,b
 30858  015F46  6F31               	movwf	??___fladd& (0+255),b
 30859  015F48  6B32               	clrf	(??___fladd+1)& (0+255),b
 30860  015F4A  1F31               	comf	??___fladd& (0+255),f,b
 30861  015F4C  1F32               	comf	(??___fladd+1)& (0+255),f,b
 30862  015F4E  4B31               	infsnz	??___fladd& (0+255),f,b
 30863  015F50  2B32               	incf	(??___fladd+1)& (0+255),f,b
 30864  015F52  513A               	movf	___fladd@aexp& (0+255),w,b
 30865  015F54  6F33               	movwf	(??___fladd+2)& (0+255),b
 30866  015F56  6B34               	clrf	(??___fladd+3)& (0+255),b
 30867  015F58  5131               	movf	??___fladd& (0+255),w,b
 30868  015F5A  2733               	addwf	(??___fladd+2)& (0+255),f,b
 30869  015F5C  5132               	movf	(??___fladd+1)& (0+255),w,b
 30870  015F5E  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 30871  015F60  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 30872  015F62  D02C               	goto	l2718
 30873  015F64  5134               	movf	(??___fladd+3)& (0+255),w,b
 30874  015F66  E104               	bnz	u16630
 30875  015F68  0E1A               	movlw	26
 30876  015F6A  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 30877  015F6C  A0D8               	btfss	status,0,c
 30878  015F6E  D026               	goto	l2718
 30879  015F70                     u16630:
 30880                           
 30881                           ; BSR set to: 1
 30882  015F70  5129               	movf	___fladd@b& (0+255),w,b
 30883  015F72  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 30884  015F74  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 30885  015F76  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 30886  015F78  B4D8               	btfsc	status,2,c
 30887  015F7A  D002               	goto	u16640
 30888  015F7C  0E01               	movlw	1
 30889  015F7E  D001               	goto	u16650
 30890  015F80                     u16640:
 30891  015F80  0E00               	movlw	0
 30892  015F82                     u16650:
 30893  015F82  6F3C               	movwf	___fladd@grs& (0+255),b
 30894                           
 30895                           ; BSR set to: 1
 30896  015F84  0E00               	movlw	0
 30897  015F86  6F29               	movwf	___fladd@b& (0+255),b
 30898  015F88  0E00               	movlw	0
 30899  015F8A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30900  015F8C  0E00               	movlw	0
 30901  015F8E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30902  015F90  0E00               	movlw	0
 30903  015F92  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30904                           
 30905                           ; BSR set to: 1
 30906  015F94  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 30907  015F98  D015               	goto	u16680
 30908  015F9A                     l2719:
 30909                           
 30910                           ; BSR set to: 1
 30911  015F9A  A13C               	btfss	___fladd@grs& (0+255),0,b
 30912  015F9C  D005               	goto	l2720
 30913                           
 30914                           ; BSR set to: 1
 30915  015F9E  90D8               	bcf	status,0,c
 30916  015FA0  313C               	rrcf	___fladd@grs& (0+255),w,b
 30917  015FA2  0901               	iorlw	1
 30918  015FA4  6F3C               	movwf	___fladd@grs& (0+255),b
 30919  015FA6  D002               	goto	l2721
 30920  015FA8                     l2720:
 30921                           
 30922                           ; BSR set to: 1
 30923                           
 30924                           ; BSR set to: 1
 30925  015FA8  90D8               	bcf	status,0,c
 30926  015FAA  333C               	rrcf	___fladd@grs& (0+255),f,b
 30927  015FAC                     l2721:
 30928                           
 30929                           ; BSR set to: 1
 30930                           
 30931                           ; BSR set to: 1
 30932  015FAC  B129               	btfsc	___fladd@b& (0+255),0,b
 30933                           
 30934                           ; BSR set to: 1
 30935  015FAE  8F3C               	bsf	___fladd@grs& (0+255),7,b
 30936                           
 30937                           ; BSR set to: 1
 30938                           
 30939                           ; BSR set to: 1
 30940  015FB0  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 30941  015FB2  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 30942  015FB4  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 30943  015FB6  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 30944  015FB8  3329               	rrcf	___fladd@b& (0+255),f,b
 30945                           
 30946                           ; BSR set to: 1
 30947  015FBA  2B3B               	incf	___fladd@bexp& (0+255),f,b
 30948  015FBC                     l2718:
 30949                           
 30950                           ; BSR set to: 1
 30951  015FBC  513A               	movf	___fladd@aexp& (0+255),w,b
 30952  015FBE  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 30953  015FC0  A0D8               	btfss	status,0,c
 30954  015FC2  D7EB               	goto	l2719
 30955  015FC4                     u16680:
 30956                           
 30957                           ; BSR set to: 1
 30958                           
 30959                           ; BSR set to: 1
 30960  015FC4  BD39               	btfsc	___fladd@signs& (0+255),6,b
 30961  015FC6  D029               	goto	l2724
 30962                           
 30963                           ; BSR set to: 1
 30964  015FC8  513B               	movf	___fladd@bexp& (0+255),w,b
 30965  015FCA  A4D8               	btfss	status,2,c
 30966  015FCC  D009               	goto	l2725
 30967                           
 30968                           ; BSR set to: 1
 30969  015FCE  0E00               	movlw	0
 30970  015FD0  6F29               	movwf	?___fladd& (0+255),b
 30971  015FD2  0E00               	movlw	0
 30972  015FD4  6F2A               	movwf	(?___fladd+1)& (0+255),b
 30973  015FD6  0E00               	movlw	0
 30974  015FD8  6F2B               	movwf	(?___fladd+2)& (0+255),b
 30975  015FDA  0E00               	movlw	0
 30976  015FDC  6F2C               	movwf	(?___fladd+3)& (0+255),b
 30977                           
 30978                           ; BSR set to: 1
 30979  015FDE  0012               	return	
 30980  015FE0                     l2725:
 30981                           
 30982                           ; BSR set to: 1
 30983                           
 30984                           ; BSR set to: 1
 30985  015FE0  512D               	movf	___fladd@a& (0+255),w,b
 30986  015FE2  2729               	addwf	___fladd@b& (0+255),f,b
 30987  015FE4  512E               	movf	(___fladd@a+1)& (0+255),w,b
 30988  015FE6  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 30989  015FE8  512F               	movf	(___fladd@a+2)& (0+255),w,b
 30990  015FEA  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 30991  015FEC  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30992  015FEE  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 30993                           
 30994                           ; BSR set to: 1
 30995  015FF0  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 30996  015FF2  D083               	goto	u16810
 30997                           
 30998                           ; BSR set to: 1
 30999  015FF4  A13C               	btfss	___fladd@grs& (0+255),0,b
 31000  015FF6  D006               	goto	l2728
 31001                           
 31002                           ; BSR set to: 1
 31003  015FF8  90D8               	bcf	status,0,c
 31004  015FFA  333C               	rrcf	___fladd@grs& (0+255),f,b
 31005  015FFC  513C               	movf	___fladd@grs& (0+255),w,b
 31006  015FFE  0901               	iorlw	1
 31007  016000  6F3C               	movwf	___fladd@grs& (0+255),b
 31008  016002  D002               	goto	l2729
 31009  016004                     l2728:
 31010                           
 31011                           ; BSR set to: 1
 31012                           
 31013                           ; BSR set to: 1
 31014  016004  90D8               	bcf	status,0,c
 31015  016006  333C               	rrcf	___fladd@grs& (0+255),f,b
 31016  016008                     l2729:
 31017                           
 31018                           ; BSR set to: 1
 31019                           
 31020                           ; BSR set to: 1
 31021  016008  B129               	btfsc	___fladd@b& (0+255),0,b
 31022                           
 31023                           ; BSR set to: 1
 31024  01600A  8F3C               	bsf	___fladd@grs& (0+255),7,b
 31025                           
 31026                           ; BSR set to: 1
 31027                           
 31028                           ; BSR set to: 1
 31029  01600C  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 31030  01600E  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 31031  016010  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 31032  016012  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 31033  016014  3329               	rrcf	___fladd@b& (0+255),f,b
 31034                           
 31035                           ; BSR set to: 1
 31036  016016  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31037                           
 31038                           ; BSR set to: 1
 31039  016018  D070               	goto	u16810
 31040  01601A                     l2724:
 31041                           
 31042                           ; BSR set to: 1
 31043                           
 31044                           ; BSR set to: 1
 31045  01601A  512D               	movf	___fladd@a& (0+255),w,b
 31046  01601C  5D29               	subwf	___fladd@b& (0+255),w,b
 31047  01601E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31048  016020  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 31049  016022  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31050  016024  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 31051  016026  512C               	movf	(___fladd@b+3)& (0+255),w,b
 31052  016028  0A80               	xorlw	128
 31053  01602A  6F31               	movwf	??___fladd& (0+255),b
 31054  01602C  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31055  01602E  0A80               	xorlw	128
 31056  016030  5931               	subwfb	??___fladd& (0+255),w,b
 31057  016032  B0D8               	btfsc	status,0,c
 31058  016034  D036               	goto	l2732
 31059                           
 31060                           ; BSR set to: 1
 31061  016036  C129  F131         	movff	___fladd@b,??___fladd
 31062  01603A  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 31063  01603E  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 31064  016042  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 31065  016046  1F31               	comf	??___fladd& (0+255),f,b
 31066  016048  1F32               	comf	(??___fladd+1)& (0+255),f,b
 31067  01604A  1F33               	comf	(??___fladd+2)& (0+255),f,b
 31068  01604C  1F34               	comf	(??___fladd+3)& (0+255),f,b
 31069  01604E  2B31               	incf	??___fladd& (0+255),f,b
 31070  016050  0E00               	movlw	0
 31071  016052  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 31072  016054  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 31073  016056  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 31074  016058  512D               	movf	___fladd@a& (0+255),w,b
 31075  01605A  2531               	addwf	??___fladd& (0+255),w,b
 31076  01605C  6F35               	movwf	(??___fladd+4)& (0+255),b
 31077  01605E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31078  016060  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 31079  016062  6F36               	movwf	(??___fladd+5)& (0+255),b
 31080  016064  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31081  016066  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 31082  016068  6F37               	movwf	(??___fladd+6)& (0+255),b
 31083  01606A  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31084  01606C  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 31085  01606E  6F38               	movwf	(??___fladd+7)& (0+255),b
 31086  016070  0EFF               	movlw	255
 31087  016072  2535               	addwf	(??___fladd+4)& (0+255),w,b
 31088  016074  6F29               	movwf	___fladd@b& (0+255),b
 31089  016076  0EFF               	movlw	255
 31090  016078  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 31091  01607A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31092  01607C  0EFF               	movlw	255
 31093  01607E  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 31094  016080  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31095  016082  0EFF               	movlw	255
 31096  016084  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 31097  016086  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31098  016088  0E80               	movlw	128
 31099  01608A  1B39               	xorwf	___fladd@signs& (0+255),f,b
 31100                           
 31101                           ; BSR set to: 1
 31102  01608C  6D3C               	negf	___fladd@grs& (0+255),b
 31103                           
 31104                           ; BSR set to: 1
 31105  01608E  513C               	movf	___fladd@grs& (0+255),w,b
 31106  016090  A4D8               	btfss	status,2,c
 31107  016092  D00F               	goto	l2734
 31108                           
 31109                           ; BSR set to: 1
 31110  016094  0E01               	movlw	1
 31111  016096  2729               	addwf	___fladd@b& (0+255),f,b
 31112  016098  0E00               	movlw	0
 31113  01609A  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31114  01609C  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31115  01609E  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31116                           
 31117                           ; BSR set to: 1
 31118  0160A0  D008               	goto	l2734
 31119  0160A2                     l2732:
 31120                           
 31121                           ; BSR set to: 1
 31122                           
 31123                           ; BSR set to: 1
 31124  0160A2  512D               	movf	___fladd@a& (0+255),w,b
 31125  0160A4  5F29               	subwf	___fladd@b& (0+255),f,b
 31126  0160A6  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31127  0160A8  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 31128  0160AA  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31129  0160AC  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 31130  0160AE  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31131  0160B0  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 31132  0160B2                     l2734:
 31133                           
 31134                           ; BSR set to: 1
 31135  0160B2  5129               	movf	___fladd@b& (0+255),w,b
 31136  0160B4  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 31137  0160B6  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 31138  0160B8  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 31139  0160BA  A4D8               	btfss	status,2,c
 31140  0160BC  D01C               	goto	l2741
 31141                           
 31142                           ; BSR set to: 1
 31143  0160BE  513C               	movf	___fladd@grs& (0+255),w,b
 31144  0160C0  A4D8               	btfss	status,2,c
 31145  0160C2  D019               	goto	l2741
 31146                           
 31147                           ; BSR set to: 1
 31148  0160C4  0E00               	movlw	0
 31149  0160C6  6F29               	movwf	?___fladd& (0+255),b
 31150  0160C8  0E00               	movlw	0
 31151  0160CA  6F2A               	movwf	(?___fladd+1)& (0+255),b
 31152  0160CC  0E00               	movlw	0
 31153  0160CE  6F2B               	movwf	(?___fladd+2)& (0+255),b
 31154  0160D0  0E00               	movlw	0
 31155  0160D2  6F2C               	movwf	(?___fladd+3)& (0+255),b
 31156                           
 31157                           ; BSR set to: 1
 31158  0160D4  0012               	return	
 31159  0160D6                     
 31160                           ; BSR set to: 1
 31161                           
 31162                           ; BSR set to: 1
 31163  0160D6  90D8               	bcf	status,0,c
 31164  0160D8  3729               	rlcf	___fladd@b& (0+255),f,b
 31165  0160DA  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 31166  0160DC  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 31167  0160DE  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 31168                           
 31169                           ; BSR set to: 1
 31170  0160E0  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 31171                           
 31172                           ; BSR set to: 1
 31173  0160E2  8129               	bsf	___fladd@b& (0+255),0,b
 31174                           
 31175                           ; BSR set to: 1
 31176                           
 31177                           ; BSR set to: 1
 31178  0160E4  A13C               	btfss	___fladd@grs& (0+255),0,b
 31179  0160E6  D002               	goto	l2739
 31180                           
 31181                           ; BSR set to: 1
 31182  0160E8  80D8               	bsf	status,0,c
 31183  0160EA  D001               	goto	L8
 31184  0160EC                     l2739:
 31185                           
 31186                           ; BSR set to: 1
 31187                           
 31188                           ; BSR set to: 1
 31189  0160EC  90D8               	bcf	status,0,c
 31190  0160EE                     L8:
 31191  0160EE  373C               	rlcf	___fladd@grs& (0+255),f,b
 31192                           
 31193                           ; BSR set to: 1
 31194                           
 31195                           ; BSR set to: 1
 31196  0160F0  513B               	movf	___fladd@bexp& (0+255),w,b
 31197  0160F2  A4D8               	btfss	status,2,c
 31198                           
 31199                           ; BSR set to: 1
 31200  0160F4  073B               	decf	___fladd@bexp& (0+255),f,b
 31201  0160F6                     l2741:
 31202                           
 31203                           ; BSR set to: 1
 31204                           
 31205                           ; BSR set to: 1
 31206                           
 31207                           ; BSR set to: 1
 31208  0160F6  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 31209  0160F8  D7EE               	goto	l2737
 31210  0160FA                     u16810:
 31211                           
 31212                           ; BSR set to: 1
 31213                           
 31214                           ; BSR set to: 1
 31215                           
 31216                           ; BSR set to: 1
 31217  0160FA  0E00               	movlw	0
 31218  0160FC  6F3A               	movwf	___fladd@aexp& (0+255),b
 31219                           
 31220                           ; BSR set to: 1
 31221  0160FE  AF3C               	btfss	___fladd@grs& (0+255),7,b
 31222  016100  D00A               	goto	l2746
 31223                           
 31224                           ; BSR set to: 1
 31225  016102  C13C  F131         	movff	___fladd@grs,??___fladd
 31226  016106  0E7F               	movlw	127
 31227  016108  1731               	andwf	??___fladd& (0+255),f,b
 31228  01610A  A4D8               	btfss	status,2,c
 31229  01610C  D002               	goto	u16840
 31230                           
 31231                           ; BSR set to: 1
 31232                           
 31233                           ; BSR set to: 1
 31234  01610E  A129               	btfss	___fladd@b& (0+255),0,b
 31235  016110  D002               	goto	l2746
 31236  016112                     u16840:
 31237                           
 31238                           ; BSR set to: 1
 31239  016112  0E01               	movlw	1
 31240  016114  6F3A               	movwf	___fladd@aexp& (0+255),b
 31241  016116                     l2746:
 31242                           
 31243                           ; BSR set to: 1
 31244                           
 31245                           ; BSR set to: 1
 31246                           
 31247                           ; BSR set to: 1
 31248  016116  513A               	movf	___fladd@aexp& (0+255),w,b
 31249  016118  B4D8               	btfsc	status,2,c
 31250  01611A  D020               	goto	l2749
 31251                           
 31252                           ; BSR set to: 1
 31253  01611C  0E01               	movlw	1
 31254  01611E  2729               	addwf	___fladd@b& (0+255),f,b
 31255  016120  0E00               	movlw	0
 31256  016122  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31257  016124  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31258  016126  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31259                           
 31260                           ; BSR set to: 1
 31261  016128  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 31262  01612A  D018               	goto	l2749
 31263                           
 31264                           ; BSR set to: 1
 31265  01612C  C129  F131         	movff	___fladd@b,??___fladd
 31266  016130  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 31267  016134  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 31268  016138  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 31269  01613C  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 31270  01613E  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 31271  016140  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 31272  016142  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 31273  016144  3331               	rrcf	??___fladd& (0+255),f,b
 31274  016146  C131  F129         	movff	??___fladd,___fladd@b
 31275  01614A  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 31276  01614E  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 31277  016152  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 31278  016156  293B               	incf	___fladd@bexp& (0+255),w,b
 31279  016158  A4D8               	btfss	status,2,c
 31280                           
 31281                           ; BSR set to: 1
 31282  01615A  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31283  01615C                     l2749:
 31284                           
 31285                           ; BSR set to: 1
 31286                           
 31287                           ; BSR set to: 1
 31288                           
 31289                           ; BSR set to: 1
 31290                           
 31291                           ; BSR set to: 1
 31292  01615C  293B               	incf	___fladd@bexp& (0+255),w,b
 31293  01615E  B4D8               	btfsc	status,2,c
 31294  016160  D003               	goto	u16890
 31295                           
 31296                           ; BSR set to: 1
 31297  016162  513B               	movf	___fladd@bexp& (0+255),w,b
 31298  016164  A4D8               	btfss	status,2,c
 31299  016166  D00D               	goto	l2753
 31300  016168                     u16890:
 31301                           
 31302                           ; BSR set to: 1
 31303                           
 31304                           ; BSR set to: 1
 31305  016168  0E00               	movlw	0
 31306  01616A  6F29               	movwf	___fladd@b& (0+255),b
 31307  01616C  0E00               	movlw	0
 31308  01616E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31309  016170  0E00               	movlw	0
 31310  016172  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31311  016174  0E00               	movlw	0
 31312  016176  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31313  016178  513B               	movf	___fladd@bexp& (0+255),w,b
 31314  01617A  A4D8               	btfss	status,2,c
 31315  01617C  D002               	goto	l2753
 31316                           
 31317                           ; BSR set to: 1
 31318  01617E  0E00               	movlw	0
 31319  016180  6F39               	movwf	___fladd@signs& (0+255),b
 31320  016182                     l2753:
 31321                           
 31322                           ; BSR set to: 1
 31323                           
 31324                           ; BSR set to: 1
 31325                           
 31326                           ; BSR set to: 1
 31327  016182  A13B               	btfss	___fladd@bexp& (0+255),0,b
 31328  016184  D002               	goto	l2754
 31329                           
 31330                           ; BSR set to: 1
 31331  016186  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 31332  016188  D001               	goto	l2755
 31333  01618A                     l2754:
 31334                           
 31335                           ; BSR set to: 1
 31336                           
 31337                           ; BSR set to: 1
 31338  01618A  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 31339  01618C                     l2755:
 31340                           
 31341                           ; BSR set to: 1
 31342                           
 31343                           ; BSR set to: 1
 31344  01618C  90D8               	bcf	status,0,c
 31345  01618E  313B               	rrcf	___fladd@bexp& (0+255),w,b
 31346  016190  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31347                           
 31348                           ; BSR set to: 1
 31349  016192  BF39               	btfsc	___fladd@signs& (0+255),7,b
 31350                           
 31351                           ; BSR set to: 1
 31352  016194  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 31353                           
 31354                           ; BSR set to: 1
 31355                           
 31356                           ; BSR set to: 1
 31357  016196  C129  F129         	movff	___fladd@b,?___fladd
 31358  01619A  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 31359  01619E  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 31360  0161A2  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 31361  0161A6  0012               	return	
 31362  0161A8                     __end_of___fladd:
 31363                           	opt stack 0
 31364                           tosu	equ	0xFFF
 31365                           tosh	equ	0xFFE
 31366                           tosl	equ	0xFFD
 31367                           pclath	equ	0xFFA
 31368                           tblptru	equ	0xFF8
 31369                           tblptrh	equ	0xFF7
 31370                           tblptrl	equ	0xFF6
 31371                           tablat	equ	0xFF5
 31372                           prodh	equ	0xFF4
 31373                           prodl	equ	0xFF3
 31374                           intcon	equ	0xFF2
 31375                           indf0	equ	0xFEF
 31376                           postinc0	equ	0xFEE
 31377                           fsr0h	equ	0xFEA
 31378                           fsr0l	equ	0xFE9
 31379                           wreg	equ	0xFE8
 31380                           indf1	equ	0xFE7
 31381                           postdec1	equ	0xFE5
 31382                           plusw1	equ	0xFE3
 31383                           fsr1h	equ	0xFE2
 31384                           fsr1l	equ	0xFE1
 31385                           indf2	equ	0xFDF
 31386                           postinc2	equ	0xFDE
 31387                           postdec2	equ	0xFDD
 31388                           plusw2	equ	0xFDB
 31389                           fsr2h	equ	0xFDA
 31390                           fsr2l	equ	0xFD9
 31391                           status	equ	0xFD8
 31392                           
 31393 ;; *************** function ___flneg *****************
 31394 ;; Defined at:
 31395 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 31396 ;; Parameters:    Size  Location     Type
 31397 ;;  f1              4   37[BANK1 ] unsigned char 
 31398 ;; Auto vars:     Size  Location     Type
 31399 ;;		None
 31400 ;; Return value:  Size  Location     Type
 31401 ;;                  4   37[BANK1 ] unsigned char 
 31402 ;; Registers used:
 31403 ;;		wreg, status,2, status,0
 31404 ;; Tracked objects:
 31405 ;;		On entry : 0/0
 31406 ;;		On exit  : 0/0
 31407 ;;		Unchanged: 0/0
 31408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31409 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31412 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31413 ;;Total ram usage:        4 bytes
 31414 ;; Hardware stack levels used:    1
 31415 ;; Hardware stack levels required when called:   13
 31416 ;; This function calls:
 31417 ;;		Nothing
 31418 ;; This function is called by:
 31419 ;;		_ringBufferLUT
 31420 ;;		__doprnt
 31421 ;; This function uses a non-reentrant model
 31422 ;;
 31423                           
 31424                           	psect	text51
 31425  01AC68                     __ptext51:
 31426                           	opt stack 0
 31427  01AC68                     ___flneg:
 31428                           	opt stack 13
 31429                           
 31430                           ; BSR set to: 1
 31431                           ;incstack = 0
 31432  01AC68  0101               	movlb	1	; () banked
 31433  01AC6A  5125               	movf	___flneg@f1& (0+255),w,b
 31434  01AC6C  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31435  01AC6E  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31436  01AC70  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31437  01AC72  B4D8               	btfsc	status,2,c
 31438  01AC74  D008               	goto	l2402
 31439                           
 31440                           ; BSR set to: 1
 31441  01AC76  0E00               	movlw	0
 31442  01AC78  1B25               	xorwf	___flneg@f1& (0+255),f,b
 31443  01AC7A  0E00               	movlw	0
 31444  01AC7C  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31445  01AC7E  0E00               	movlw	0
 31446  01AC80  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31447  01AC82  0E80               	movlw	128
 31448  01AC84  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31449  01AC86                     l2402:
 31450                           
 31451                           ; BSR set to: 1
 31452                           
 31453                           ; BSR set to: 1
 31454  01AC86  C125  F125         	movff	___flneg@f1,?___flneg
 31455  01AC8A  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 31456  01AC8E  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 31457  01AC92  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 31458  01AC96  0012               	return	
 31459  01AC98                     __end_of___flneg:
 31460                           	opt stack 0
 31461                           tosu	equ	0xFFF
 31462                           tosh	equ	0xFFE
 31463                           tosl	equ	0xFFD
 31464                           pclath	equ	0xFFA
 31465                           tblptru	equ	0xFF8
 31466                           tblptrh	equ	0xFF7
 31467                           tblptrl	equ	0xFF6
 31468                           tablat	equ	0xFF5
 31469                           prodh	equ	0xFF4
 31470                           prodl	equ	0xFF3
 31471                           intcon	equ	0xFF2
 31472                           indf0	equ	0xFEF
 31473                           postinc0	equ	0xFEE
 31474                           fsr0h	equ	0xFEA
 31475                           fsr0l	equ	0xFE9
 31476                           wreg	equ	0xFE8
 31477                           indf1	equ	0xFE7
 31478                           postdec1	equ	0xFE5
 31479                           plusw1	equ	0xFE3
 31480                           fsr1h	equ	0xFE2
 31481                           fsr1l	equ	0xFE1
 31482                           indf2	equ	0xFDF
 31483                           postinc2	equ	0xFDE
 31484                           postdec2	equ	0xFDD
 31485                           plusw2	equ	0xFDB
 31486                           fsr2h	equ	0xFDA
 31487                           fsr2l	equ	0xFD9
 31488                           status	equ	0xFD8
 31489                           
 31490 ;; *************** function _saveSRAMMaxToEEPROM *****************
 31491 ;; Defined at:
 31492 ;;		line 155 in file "main.c"
 31493 ;; Parameters:    Size  Location     Type
 31494 ;;		None
 31495 ;; Auto vars:     Size  Location     Type
 31496 ;;		None
 31497 ;; Return value:  Size  Location     Type
 31498 ;;                  1    wreg      void 
 31499 ;; Registers used:
 31500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31501 ;; Tracked objects:
 31502 ;;		On entry : 0/0
 31503 ;;		On exit  : 0/0
 31504 ;;		Unchanged: 0/0
 31505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31510 ;;Total ram usage:        0 bytes
 31511 ;; Hardware stack levels used:    1
 31512 ;; Hardware stack levels required when called:   15
 31513 ;; This function calls:
 31514 ;;		___flge
 31515 ;;		_writeDoubleToEEPROM
 31516 ;; This function is called by:
 31517 ;;		_main
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text52
 31522  01788A                     __ptext52:
 31523                           	opt stack 0
 31524  01788A                     _saveSRAMMaxToEEPROM:
 31525                           	opt stack 15
 31526                           
 31527                           ;main.c: 159: if (Irms > max_Irms) {
 31528                           
 31529                           ; BSR set to: 1
 31530                           ;incstack = 0
 31531  01788A  C224  F117         	movff	_max_Irms,___flge@ff1	;volatile
 31532  01788E  C225  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 31533  017892  C226  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 31534  017896  C227  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 31535  01789A  C1CA  F11B         	movff	_Irms,___flge@ff2	;volatile
 31536  01789E  C1CB  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 31537  0178A2  C1CC  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 31538  0178A6  C1CD  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 31539  0178AA  EC5A  F0C6         	call	___flge	;wreg free
 31540  0178AE  0101               	movlb	1	; () banked
 31541  0178B0  B0D8               	btfsc	status,0,c
 31542  0178B2  D01E               	goto	l1172
 31543                           
 31544                           ; BSR set to: 1
 31545                           ;main.c: 160: writeDoubleToEEPROM(Irms, max_Irms_address);
 31546  0178B4  C1CA  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 31547  0178B8  C1CB  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 31548  0178BC  C1CC  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 31549  0178C0  C1CD  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 31550  0178C4  0E61               	movlw	low _max_Irms_address
 31551  0178C6  6EF6               	movwf	tblptrl,c
 31552  0178C8                     	if	1	;There is more than 1 active tblptr byte
 31553  0178C8  0ECF               	movlw	high _max_Irms_address
 31554  0178CA  6EF7               	movwf	tblptrh,c
 31555  0178CC                     	endif
 31556  0178CC                     	if	1	;There are 3 active tblptr bytes
 31557  0178CC  0E00               	movlw	low (_max_Irms_address shr (0+16))
 31558  0178CE  6EF8               	movwf	tblptru,c
 31559  0178D0                     	endif
 31560  0178D0  0009               	tblrd		*+
 31561  0178D2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31562  0178D6  000A               	tblrd		*-
 31563  0178D8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31564  0178DC  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31565                           
 31566                           ;main.c: 161: max_Irms = Irms;
 31567  0178E0  C1CA  F224         	movff	_Irms,_max_Irms	;volatile
 31568  0178E4  C1CB  F225         	movff	_Irms+1,_max_Irms+1	;volatile
 31569  0178E8  C1CC  F226         	movff	_Irms+2,_max_Irms+2	;volatile
 31570  0178EC  C1CD  F227         	movff	_Irms+3,_max_Irms+3	;volatile
 31571  0178F0                     l1172:
 31572                           
 31573                           ;main.c: 162: }
 31574                           ;main.c: 164: if (Avg_Power > max_Power) {
 31575  0178F0  C220  F117         	movff	_max_Power,___flge@ff1	;volatile
 31576  0178F4  C221  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 31577  0178F8  C222  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 31578  0178FC  C223  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 31579  017900  C1C6  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 31580  017904  C1C7  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 31581  017908  C1C8  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 31582  01790C  C1C9  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 31583  017910  EC5A  F0C6         	call	___flge	;wreg free
 31584  017914  0101               	movlb	1	; () banked
 31585  017916  B0D8               	btfsc	status,0,c
 31586  017918  D01E               	goto	l1173
 31587                           
 31588                           ; BSR set to: 1
 31589                           ;main.c: 165: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 31590  01791A  C1C6  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 31591  01791E  C1C7  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 31592  017922  C1C8  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 31593  017926  C1C9  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 31594  01792A  0E5F               	movlw	low _max_Power_address
 31595  01792C  6EF6               	movwf	tblptrl,c
 31596  01792E                     	if	1	;There is more than 1 active tblptr byte
 31597  01792E  0ECF               	movlw	high _max_Power_address
 31598  017930  6EF7               	movwf	tblptrh,c
 31599  017932                     	endif
 31600  017932                     	if	1	;There are 3 active tblptr bytes
 31601  017932  0E00               	movlw	low (_max_Power_address shr (0+16))
 31602  017934  6EF8               	movwf	tblptru,c
 31603  017936                     	endif
 31604  017936  0009               	tblrd		*+
 31605  017938  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31606  01793C  000A               	tblrd		*-
 31607  01793E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31608  017942  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31609                           
 31610                           ;main.c: 166: max_Power = Avg_Power;
 31611  017946  C1C6  F220         	movff	_Avg_Power,_max_Power	;volatile
 31612  01794A  C1C7  F221         	movff	_Avg_Power+1,_max_Power+1	;volatile
 31613  01794E  C1C8  F222         	movff	_Avg_Power+2,_max_Power+2	;volatile
 31614  017952  C1C9  F223         	movff	_Avg_Power+3,_max_Power+3	;volatile
 31615  017956                     l1173:
 31616                           
 31617                           ;main.c: 167: }
 31618                           ;main.c: 169: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 31619  017956  C21C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 31620  01795A  C21D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 31621  01795E  C21E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 31622  017962  C21F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 31623  017966  C1DA  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 31624  01796A  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 31625  01796E  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 31626  017972  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 31627  017976  EC5A  F0C6         	call	___flge	;wreg free
 31628  01797A  0101               	movlb	1	; () banked
 31629  01797C  B0D8               	btfsc	status,0,c
 31630  01797E  D01E               	goto	l1174
 31631                           
 31632                           ; BSR set to: 1
 31633                           ;main.c: 170: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 31634  017980  C1DA  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31635  017984  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31636  017988  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31637  01798C  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31638  017990  0E5D               	movlw	low _max_POS3P3_ADC_Result_address
 31639  017992  6EF6               	movwf	tblptrl,c
 31640  017994                     	if	1	;There is more than 1 active tblptr byte
 31641  017994  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 31642  017996  6EF7               	movwf	tblptrh,c
 31643  017998                     	endif
 31644  017998                     	if	1	;There are 3 active tblptr bytes
 31645  017998  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 31646  01799A  6EF8               	movwf	tblptru,c
 31647  01799C                     	endif
 31648  01799C  0009               	tblrd		*+
 31649  01799E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31650  0179A2  000A               	tblrd		*-
 31651  0179A4  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31652  0179A8  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31653                           
 31654                           ;main.c: 171: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 31655  0179AC  C1DA  F21C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 31656  0179B0  C1DB  F21D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 31657  0179B4  C1DC  F21E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 31658  0179B8  C1DD  F21F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 31659  0179BC                     l1174:
 31660                           
 31661                           ;main.c: 172: }
 31662                           ;main.c: 174: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 31663  0179BC  C218  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 31664  0179C0  C219  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 31665  0179C4  C21A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 31666  0179C8  C21B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 31667  0179CC  C1D6  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 31668  0179D0  C1D7  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 31669  0179D4  C1D8  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 31670  0179D8  C1D9  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 31671  0179DC  EC5A  F0C6         	call	___flge	;wreg free
 31672  0179E0  0101               	movlb	1	; () banked
 31673  0179E2  B0D8               	btfsc	status,0,c
 31674  0179E4  D01E               	goto	l1175
 31675                           
 31676                           ; BSR set to: 1
 31677                           ;main.c: 175: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 31678  0179E6  C1D6  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31679  0179EA  C1D7  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31680  0179EE  C1D8  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31681  0179F2  C1D9  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31682  0179F6  0E5B               	movlw	low _max_POS12_ADC_Result_address
 31683  0179F8  6EF6               	movwf	tblptrl,c
 31684  0179FA                     	if	1	;There is more than 1 active tblptr byte
 31685  0179FA  0ECF               	movlw	high _max_POS12_ADC_Result_address
 31686  0179FC  6EF7               	movwf	tblptrh,c
 31687  0179FE                     	endif
 31688  0179FE                     	if	1	;There are 3 active tblptr bytes
 31689  0179FE  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 31690  017A00  6EF8               	movwf	tblptru,c
 31691  017A02                     	endif
 31692  017A02  0009               	tblrd		*+
 31693  017A04  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31694  017A08  000A               	tblrd		*-
 31695  017A0A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31696  017A0E  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31697                           
 31698                           ;main.c: 176: max_POS12_ADC_Result = POS12_ADC_Result;
 31699  017A12  C1D6  F218         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 31700  017A16  C1D7  F219         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 31701  017A1A  C1D8  F21A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 31702  017A1E  C1D9  F21B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 31703  017A22                     l1175:
 31704                           
 31705                           ;main.c: 177: }
 31706                           ;main.c: 179: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 31707  017A22  C214  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 31708  017A26  C215  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 31709  017A2A  C216  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 31710  017A2E  C217  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 31711  017A32  C1D2  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 31712  017A36  C1D3  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 31713  017A3A  C1D4  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 31714  017A3E  C1D5  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 31715  017A42  EC5A  F0C6         	call	___flge	;wreg free
 31716  017A46  0101               	movlb	1	; () banked
 31717  017A48  B0D8               	btfsc	status,0,c
 31718  017A4A  D01E               	goto	l1176
 31719                           
 31720                           ; BSR set to: 1
 31721                           ;main.c: 180: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 31722  017A4C  C1D2  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31723  017A50  C1D3  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31724  017A54  C1D4  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31725  017A58  C1D5  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31726  017A5C  0E59               	movlw	low _max_Temp_ADC_Result_address
 31727  017A5E  6EF6               	movwf	tblptrl,c
 31728  017A60                     	if	1	;There is more than 1 active tblptr byte
 31729  017A60  0ECF               	movlw	high _max_Temp_ADC_Result_address
 31730  017A62  6EF7               	movwf	tblptrh,c
 31731  017A64                     	endif
 31732  017A64                     	if	1	;There are 3 active tblptr bytes
 31733  017A64  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 31734  017A66  6EF8               	movwf	tblptru,c
 31735  017A68                     	endif
 31736  017A68  0009               	tblrd		*+
 31737  017A6A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31738  017A6E  000A               	tblrd		*-
 31739  017A70  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31740  017A74  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31741                           
 31742                           ;main.c: 181: max_Temp_ADC_Result = Temp_ADC_Result;
 31743  017A78  C1D2  F214         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 31744  017A7C  C1D3  F215         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 31745  017A80  C1D4  F216         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 31746  017A84  C1D5  F217         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 31747  017A88                     l1176:
 31748                           
 31749                           ;main.c: 182: }
 31750                           ;main.c: 184: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 31751  017A88  C210  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 31752  017A8C  C211  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 31753  017A90  C212  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 31754  017A94  C213  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 31755  017A98  C1E2  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 31756  017A9C  C1E3  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 31757  017AA0  C1E4  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 31758  017AA4  C1E5  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 31759  017AA8  EC5A  F0C6         	call	___flge	;wreg free
 31760  017AAC  0101               	movlb	1	; () banked
 31761  017AAE  B0D8               	btfsc	status,0,c
 31762  017AB0  0012               	return	
 31763                           
 31764                           ; BSR set to: 1
 31765                           ;main.c: 185: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 31766  017AB2  C1E2  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31767  017AB6  C1E3  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31768  017ABA  C1E4  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31769  017ABE  C1E5  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31770  017AC2  0E57               	movlw	low _max_FVR_ADC_Result_address
 31771  017AC4  6EF6               	movwf	tblptrl,c
 31772  017AC6                     	if	1	;There is more than 1 active tblptr byte
 31773  017AC6  0ECF               	movlw	high _max_FVR_ADC_Result_address
 31774  017AC8  6EF7               	movwf	tblptrh,c
 31775  017ACA                     	endif
 31776  017ACA                     	if	1	;There are 3 active tblptr bytes
 31777  017ACA  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 31778  017ACC  6EF8               	movwf	tblptru,c
 31779  017ACE                     	endif
 31780  017ACE  0009               	tblrd		*+
 31781  017AD0  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31782  017AD4  000A               	tblrd		*-
 31783  017AD6  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31784  017ADA  ECC7  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31785                           
 31786                           ;main.c: 186: max_FVR_ADC_Result = FVR_ADC_Result;
 31787  017ADE  C1E2  F210         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 31788  017AE2  C1E3  F211         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 31789  017AE6  C1E4  F212         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 31790  017AEA  C1E5  F213         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 31791  017AEE  0012               	return	
 31792  017AF0                     __end_of_saveSRAMMaxToEEPROM:
 31793                           	opt stack 0
 31794                           tosu	equ	0xFFF
 31795                           tosh	equ	0xFFE
 31796                           tosl	equ	0xFFD
 31797                           pclath	equ	0xFFA
 31798                           tblptru	equ	0xFF8
 31799                           tblptrh	equ	0xFF7
 31800                           tblptrl	equ	0xFF6
 31801                           tablat	equ	0xFF5
 31802                           prodh	equ	0xFF4
 31803                           prodl	equ	0xFF3
 31804                           intcon	equ	0xFF2
 31805                           indf0	equ	0xFEF
 31806                           postinc0	equ	0xFEE
 31807                           fsr0h	equ	0xFEA
 31808                           fsr0l	equ	0xFE9
 31809                           wreg	equ	0xFE8
 31810                           indf1	equ	0xFE7
 31811                           postdec1	equ	0xFE5
 31812                           plusw1	equ	0xFE3
 31813                           fsr1h	equ	0xFE2
 31814                           fsr1l	equ	0xFE1
 31815                           indf2	equ	0xFDF
 31816                           postinc2	equ	0xFDE
 31817                           postdec2	equ	0xFDD
 31818                           plusw2	equ	0xFDB
 31819                           fsr2h	equ	0xFDA
 31820                           fsr2l	equ	0xFD9
 31821                           status	equ	0xFD8
 31822                           
 31823 ;; *************** function _writeDoubleToEEPROM *****************
 31824 ;; Defined at:
 31825 ;;		line 6 in file "double_to_EEPROM.c"
 31826 ;; Parameters:    Size  Location     Type
 31827 ;;  input_double    4   27[BANK1 ] void 
 31828 ;;  starting_add    2   31[BANK1 ] unsigned int 
 31829 ;; Auto vars:     Size  Location     Type
 31830 ;;  byte_index      2   37[BANK1 ] int 
 31831 ;;  input_data      4   33[BANK1 ] struct .
 31832 ;; Return value:  Size  Location     Type
 31833 ;;                  1    wreg      void 
 31834 ;; Registers used:
 31835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31836 ;; Tracked objects:
 31837 ;;		On entry : 0/0
 31838 ;;		On exit  : 0/0
 31839 ;;		Unchanged: 0/0
 31840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31841 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31842 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31844 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31845 ;;Total ram usage:       12 bytes
 31846 ;; Hardware stack levels used:    1
 31847 ;; Hardware stack levels required when called:   14
 31848 ;; This function calls:
 31849 ;;		_DATAEE_WriteByte
 31850 ;; This function is called by:
 31851 ;;		_saveSRAMMaxToEEPROM
 31852 ;;		_ringBufferLUT
 31853 ;; This function uses a non-reentrant model
 31854 ;;
 31855                           
 31856                           	psect	text53
 31857  01A38E                     __ptext53:
 31858                           	opt stack 0
 31859  01A38E                     _writeDoubleToEEPROM:
 31860                           	opt stack 14
 31861                           
 31862                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 31863                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 31864                           
 31865                           ;incstack = 0
 31866  01A38E  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 31867  01A392  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 31868  01A396  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 31869  01A39A  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 31870                           
 31871                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 31872  01A39E  0E00               	movlw	0
 31873  01A3A0  0101               	movlb	1	; () banked
 31874  01A3A2  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 31875  01A3A4  0E00               	movlw	0
 31876  01A3A6  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 31877  01A3A8                     l16072:
 31878                           
 31879                           ; BSR set to: 1
 31880  01A3A8  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31881  01A3AA  E118               	bnz	l1642
 31882  01A3AC  0E04               	movlw	4
 31883  01A3AE  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31884  01A3B0  B0D8               	btfsc	status,0,c
 31885  01A3B2  0012               	return	
 31886                           
 31887                           ; BSR set to: 1
 31888                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 31889                           
 31890                           ; BSR set to: 1
 31891                           
 31892                           ; BSR set to: 1
 31893  01A3B4  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 31894  01A3B6  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31895  01A3B8  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 31896  01A3BA  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 31897  01A3BC  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31898  01A3BE  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 31899  01A3C0  0E21               	movlw	low writeDoubleToEEPROM@input_data
 31900  01A3C2  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31901  01A3C4  6ED9               	movwf	fsr2l,c
 31902  01A3C6  0E01               	movlw	high writeDoubleToEEPROM@input_data
 31903  01A3C8  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31904  01A3CA  6EDA               	movwf	fsr2h,c
 31905  01A3CC  50DF               	movf	indf2,w,c
 31906  01A3CE  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 31907  01A3D0  EC58  F0D4         	call	_DATAEE_WriteByte	;wreg free
 31908  01A3D4  0101               	movlb	1	; () banked
 31909  01A3D6  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 31910  01A3D8  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 31911  01A3DA  D7E6               	goto	l16072
 31912  01A3DC                     l1642:
 31913                           
 31914                           ; BSR set to: 1
 31915  01A3DC  0012               	return		;funcret
 31916  01A3DE                     __end_of_writeDoubleToEEPROM:
 31917                           	opt stack 0
 31918                           tosu	equ	0xFFF
 31919                           tosh	equ	0xFFE
 31920                           tosl	equ	0xFFD
 31921                           pclath	equ	0xFFA
 31922                           tblptru	equ	0xFF8
 31923                           tblptrh	equ	0xFF7
 31924                           tblptrl	equ	0xFF6
 31925                           tablat	equ	0xFF5
 31926                           prodh	equ	0xFF4
 31927                           prodl	equ	0xFF3
 31928                           intcon	equ	0xFF2
 31929                           indf0	equ	0xFEF
 31930                           postinc0	equ	0xFEE
 31931                           fsr0h	equ	0xFEA
 31932                           fsr0l	equ	0xFE9
 31933                           wreg	equ	0xFE8
 31934                           indf1	equ	0xFE7
 31935                           postdec1	equ	0xFE5
 31936                           plusw1	equ	0xFE3
 31937                           fsr1h	equ	0xFE2
 31938                           fsr1l	equ	0xFE1
 31939                           indf2	equ	0xFDF
 31940                           postinc2	equ	0xFDE
 31941                           postdec2	equ	0xFDD
 31942                           plusw2	equ	0xFDB
 31943                           fsr2h	equ	0xFDA
 31944                           fsr2l	equ	0xFD9
 31945                           status	equ	0xFD8
 31946                           
 31947 ;; *************** function _DATAEE_WriteByte *****************
 31948 ;; Defined at:
 31949 ;;		line 168 in file "mcc_generated_files/memory.c"
 31950 ;; Parameters:    Size  Location     Type
 31951 ;;  bAdd            2   23[BANK1 ] unsigned int 
 31952 ;;  bData           1   25[BANK1 ] unsigned char 
 31953 ;; Auto vars:     Size  Location     Type
 31954 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 31955 ;; Return value:  Size  Location     Type
 31956 ;;                  1    wreg      void 
 31957 ;; Registers used:
 31958 ;;		wreg, status,2, status,0
 31959 ;; Tracked objects:
 31960 ;;		On entry : 0/0
 31961 ;;		On exit  : 0/0
 31962 ;;		Unchanged: 0/0
 31963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31964 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31965 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31967 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31968 ;;Total ram usage:        4 bytes
 31969 ;; Hardware stack levels used:    1
 31970 ;; Hardware stack levels required when called:   13
 31971 ;; This function calls:
 31972 ;;		Nothing
 31973 ;; This function is called by:
 31974 ;;		_writeDoubleToEEPROM
 31975 ;; This function uses a non-reentrant model
 31976 ;;
 31977                           
 31978                           	psect	text54
 31979  01A8B0                     __ptext54:
 31980                           	opt stack 0
 31981  01A8B0                     _DATAEE_WriteByte:
 31982                           	opt stack 14
 31983                           
 31984                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 31985                           
 31986                           ; BSR set to: 1
 31987                           ;incstack = 0
 31988  01A8B0  0E00               	movlw	0
 31989  01A8B2  BEF2               	btfsc	intcon,7,c	;volatile
 31990  01A8B4  0E01               	movlw	1
 31991  01A8B6  0101               	movlb	1	; () banked
 31992  01A8B8  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 31993                           
 31994                           ; BSR set to: 1
 31995                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 31996  01A8BA  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 31997  01A8BC  0B03               	andlw	3
 31998  01A8BE  6E75               	movwf	3957,c	;volatile
 31999                           
 32000                           ; BSR set to: 1
 32001                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 32002  01A8C0  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 32003                           
 32004                           ; BSR set to: 1
 32005                           ;memory.c: 174: NVMDAT = bData;
 32006  01A8C4  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 32007                           
 32008                           ; BSR set to: 1
 32009                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 32010  01A8C8  0E3F               	movlw	-193
 32011  01A8CA  1677               	andwf	3959,f,c	;volsfr
 32012                           
 32013                           ; BSR set to: 1
 32014                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 32015  01A8CC  8477               	bsf	3959,2,c	;volsfr
 32016                           
 32017                           ; BSR set to: 1
 32018                           ;memory.c: 177: INTCONbits.GIE = 0;
 32019  01A8CE  9EF2               	bcf	intcon,7,c	;volatile
 32020                           
 32021                           ; BSR set to: 1
 32022                           ;memory.c: 178: NVMCON2 = 0x55;
 32023  01A8D0  0E55               	movlw	85
 32024  01A8D2  6E78               	movwf	3960,c	;volsfr
 32025                           
 32026                           ; BSR set to: 1
 32027                           ;memory.c: 179: NVMCON2 = 0xAA;
 32028  01A8D4  0EAA               	movlw	170
 32029  01A8D6  6E78               	movwf	3960,c	;volsfr
 32030                           
 32031                           ; BSR set to: 1
 32032                           ;memory.c: 180: NVMCON1bits.WR = 1;
 32033  01A8D8  8277               	bsf	3959,1,c	;volsfr
 32034  01A8DA                     
 32035                           ; BSR set to: 1
 32036                           ;memory.c: 183: {
 32037  01A8DA  B277               	btfsc	3959,1,c	;volsfr
 32038  01A8DC  D7FE               	goto	l837
 32039                           
 32040                           ;memory.c: 184: }
 32041                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 32042  01A8DE  9477               	bcf	3959,2,c	;volsfr
 32043                           
 32044                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 32045  01A8E0  0101               	movlb	1	; () banked
 32046  01A8E2  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 32047  01A8E4  D002               	bra	u20115
 32048  01A8E6  9EF2               	bcf	intcon,7,c	;volatile
 32049  01A8E8  D001               	bra	u20116
 32050  01A8EA                     u20115:
 32051  01A8EA  8EF2               	bsf	intcon,7,c	;volatile
 32052  01A8EC                     u20116:
 32053  01A8EC  0012               	return		;funcret
 32054  01A8EE                     __end_of_DATAEE_WriteByte:
 32055                           	opt stack 0
 32056                           tosu	equ	0xFFF
 32057                           tosh	equ	0xFFE
 32058                           tosl	equ	0xFFD
 32059                           pclath	equ	0xFFA
 32060                           tblptru	equ	0xFF8
 32061                           tblptrh	equ	0xFF7
 32062                           tblptrl	equ	0xFF6
 32063                           tablat	equ	0xFF5
 32064                           prodh	equ	0xFF4
 32065                           prodl	equ	0xFF3
 32066                           intcon	equ	0xFF2
 32067                           indf0	equ	0xFEF
 32068                           postinc0	equ	0xFEE
 32069                           fsr0h	equ	0xFEA
 32070                           fsr0l	equ	0xFE9
 32071                           wreg	equ	0xFE8
 32072                           indf1	equ	0xFE7
 32073                           postdec1	equ	0xFE5
 32074                           plusw1	equ	0xFE3
 32075                           fsr1h	equ	0xFE2
 32076                           fsr1l	equ	0xFE1
 32077                           indf2	equ	0xFDF
 32078                           postinc2	equ	0xFDE
 32079                           postdec2	equ	0xFDD
 32080                           plusw2	equ	0xFDB
 32081                           fsr2h	equ	0xFDA
 32082                           fsr2l	equ	0xFD9
 32083                           status	equ	0xFD8
 32084                           
 32085 ;; *************** function ___flge *****************
 32086 ;; Defined at:
 32087 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 32088 ;; Parameters:    Size  Location     Type
 32089 ;;  ff1             4   23[BANK1 ] void 
 32090 ;;  ff2             4   27[BANK1 ] void 
 32091 ;; Auto vars:     Size  Location     Type
 32092 ;;		None
 32093 ;; Return value:  Size  Location     Type
 32094 ;;		None               void
 32095 ;; Registers used:
 32096 ;;		wreg, status,2, status,0
 32097 ;; Tracked objects:
 32098 ;;		On entry : 0/0
 32099 ;;		On exit  : 0/0
 32100 ;;		Unchanged: 0/0
 32101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32102 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32104 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32105 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32106 ;;Total ram usage:       12 bytes
 32107 ;; Hardware stack levels used:    1
 32108 ;; Hardware stack levels required when called:   13
 32109 ;; This function calls:
 32110 ;;		Nothing
 32111 ;; This function is called by:
 32112 ;;		_saveSRAMMaxToEEPROM
 32113 ;;		__doprnt
 32114 ;; This function uses a non-reentrant model
 32115 ;;
 32116                           
 32117                           	psect	text55
 32118  018CB4                     __ptext55:
 32119                           	opt stack 0
 32120  018CB4                     ___flge:
 32121                           	opt stack 13
 32122                           
 32123                           ;incstack = 0
 32124  018CB4  0E00               	movlw	0
 32125  018CB6  0101               	movlb	1	; () banked
 32126  018CB8  1517               	andwf	___flge@ff1& (0+255),w,b
 32127  018CBA  6F1F               	movwf	??___flge& (0+255),b
 32128  018CBC  0E00               	movlw	0
 32129  018CBE  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 32130  018CC0  6F20               	movwf	(??___flge+1)& (0+255),b
 32131  018CC2  0E80               	movlw	128
 32132  018CC4  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 32133  018CC6  6F21               	movwf	(??___flge+2)& (0+255),b
 32134  018CC8  0E7F               	movlw	127
 32135  018CCA  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 32136  018CCC  6F22               	movwf	(??___flge+3)& (0+255),b
 32137  018CCE  511F               	movf	??___flge& (0+255),w,b
 32138  018CD0  1120               	iorwf	(??___flge+1)& (0+255),w,b
 32139  018CD2  1121               	iorwf	(??___flge+2)& (0+255),w,b
 32140  018CD4  1122               	iorwf	(??___flge+3)& (0+255),w,b
 32141  018CD6  A4D8               	btfss	status,2,c
 32142  018CD8  D008               	goto	l2395
 32143                           
 32144                           ; BSR set to: 1
 32145  018CDA  0E00               	movlw	0
 32146  018CDC  6F17               	movwf	___flge@ff1& (0+255),b
 32147  018CDE  0E00               	movlw	0
 32148  018CE0  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 32149  018CE2  0E00               	movlw	0
 32150  018CE4  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 32151  018CE6  0E00               	movlw	0
 32152  018CE8  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 32153  018CEA                     l2395:
 32154                           
 32155                           ; BSR set to: 1
 32156                           
 32157                           ; BSR set to: 1
 32158  018CEA  0E00               	movlw	0
 32159  018CEC  151B               	andwf	___flge@ff2& (0+255),w,b
 32160  018CEE  6F1F               	movwf	??___flge& (0+255),b
 32161  018CF0  0E00               	movlw	0
 32162  018CF2  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 32163  018CF4  6F20               	movwf	(??___flge+1)& (0+255),b
 32164  018CF6  0E80               	movlw	128
 32165  018CF8  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 32166  018CFA  6F21               	movwf	(??___flge+2)& (0+255),b
 32167  018CFC  0E7F               	movlw	127
 32168  018CFE  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 32169  018D00  6F22               	movwf	(??___flge+3)& (0+255),b
 32170  018D02  511F               	movf	??___flge& (0+255),w,b
 32171  018D04  1120               	iorwf	(??___flge+1)& (0+255),w,b
 32172  018D06  1121               	iorwf	(??___flge+2)& (0+255),w,b
 32173  018D08  1122               	iorwf	(??___flge+3)& (0+255),w,b
 32174  018D0A  A4D8               	btfss	status,2,c
 32175  018D0C  D008               	goto	l2396
 32176                           
 32177                           ; BSR set to: 1
 32178  018D0E  0E00               	movlw	0
 32179  018D10  6F1B               	movwf	___flge@ff2& (0+255),b
 32180  018D12  0E00               	movlw	0
 32181  018D14  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 32182  018D16  0E00               	movlw	0
 32183  018D18  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 32184  018D1A  0E00               	movlw	0
 32185  018D1C  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 32186  018D1E                     l2396:
 32187                           
 32188                           ; BSR set to: 1
 32189                           
 32190                           ; BSR set to: 1
 32191  018D1E  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 32192  018D20  D01D               	goto	l2397
 32193                           
 32194                           ; BSR set to: 1
 32195  018D22  C117  F11F         	movff	___flge@ff1,??___flge
 32196  018D26  C118  F120         	movff	___flge@ff1+1,??___flge+1
 32197  018D2A  C119  F121         	movff	___flge@ff1+2,??___flge+2
 32198  018D2E  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 32199  018D32  1F1F               	comf	??___flge& (0+255),f,b
 32200  018D34  1F20               	comf	(??___flge+1)& (0+255),f,b
 32201  018D36  1F21               	comf	(??___flge+2)& (0+255),f,b
 32202  018D38  1F22               	comf	(??___flge+3)& (0+255),f,b
 32203  018D3A  2B1F               	incf	??___flge& (0+255),f,b
 32204  018D3C  0E00               	movlw	0
 32205  018D3E  2320               	addwfc	(??___flge+1)& (0+255),f,b
 32206  018D40  2321               	addwfc	(??___flge+2)& (0+255),f,b
 32207  018D42  2322               	addwfc	(??___flge+3)& (0+255),f,b
 32208  018D44  0E00               	movlw	0
 32209  018D46  251F               	addwf	??___flge& (0+255),w,b
 32210  018D48  6F17               	movwf	___flge@ff1& (0+255),b
 32211  018D4A  0E00               	movlw	0
 32212  018D4C  2120               	addwfc	(??___flge+1)& (0+255),w,b
 32213  018D4E  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 32214  018D50  0E00               	movlw	0
 32215  018D52  2121               	addwfc	(??___flge+2)& (0+255),w,b
 32216  018D54  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 32217  018D56  0E80               	movlw	128
 32218  018D58  2122               	addwfc	(??___flge+3)& (0+255),w,b
 32219  018D5A  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 32220  018D5C                     l2397:
 32221                           
 32222                           ; BSR set to: 1
 32223                           
 32224                           ; BSR set to: 1
 32225  018D5C  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 32226  018D5E  D01D               	goto	l2398
 32227                           
 32228                           ; BSR set to: 1
 32229  018D60  C11B  F11F         	movff	___flge@ff2,??___flge
 32230  018D64  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 32231  018D68  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 32232  018D6C  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 32233  018D70  1F1F               	comf	??___flge& (0+255),f,b
 32234  018D72  1F20               	comf	(??___flge+1)& (0+255),f,b
 32235  018D74  1F21               	comf	(??___flge+2)& (0+255),f,b
 32236  018D76  1F22               	comf	(??___flge+3)& (0+255),f,b
 32237  018D78  2B1F               	incf	??___flge& (0+255),f,b
 32238  018D7A  0E00               	movlw	0
 32239  018D7C  2320               	addwfc	(??___flge+1)& (0+255),f,b
 32240  018D7E  2321               	addwfc	(??___flge+2)& (0+255),f,b
 32241  018D80  2322               	addwfc	(??___flge+3)& (0+255),f,b
 32242  018D82  0E00               	movlw	0
 32243  018D84  251F               	addwf	??___flge& (0+255),w,b
 32244  018D86  6F1B               	movwf	___flge@ff2& (0+255),b
 32245  018D88  0E00               	movlw	0
 32246  018D8A  2120               	addwfc	(??___flge+1)& (0+255),w,b
 32247  018D8C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 32248  018D8E  0E00               	movlw	0
 32249  018D90  2121               	addwfc	(??___flge+2)& (0+255),w,b
 32250  018D92  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 32251  018D94  0E80               	movlw	128
 32252  018D96  2122               	addwfc	(??___flge+3)& (0+255),w,b
 32253  018D98  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 32254  018D9A                     l2398:
 32255                           
 32256                           ; BSR set to: 1
 32257  018D9A  0E00               	movlw	0
 32258  018D9C  1B17               	xorwf	___flge@ff1& (0+255),f,b
 32259  018D9E  0E00               	movlw	0
 32260  018DA0  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 32261  018DA2  0E00               	movlw	0
 32262  018DA4  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 32263  018DA6  0E80               	movlw	128
 32264  018DA8  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 32265  018DAA  0E00               	movlw	0
 32266  018DAC  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 32267  018DAE  0E00               	movlw	0
 32268  018DB0  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 32269  018DB2  0E00               	movlw	0
 32270  018DB4  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 32271  018DB6  0E80               	movlw	128
 32272  018DB8  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 32273  018DBA  511B               	movf	___flge@ff2& (0+255),w,b
 32274  018DBC  5D17               	subwf	___flge@ff1& (0+255),w,b
 32275  018DBE  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 32276  018DC0  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 32277  018DC2  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 32278  018DC4  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 32279  018DC6  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 32280  018DC8  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 32281  018DCA  B0D8               	btfsc	status,0,c
 32282  018DCC  D002               	goto	l13606
 32283                           
 32284                           ; BSR set to: 1
 32285  018DCE  90D8               	bcf	status,0,c
 32286  018DD0  0012               	return	
 32287  018DD2                     l13606:
 32288                           
 32289                           ; BSR set to: 1
 32290                           
 32291                           ; BSR set to: 1
 32292  018DD2  80D8               	bsf	status,0,c
 32293                           
 32294                           ; BSR set to: 1
 32295  018DD4  0012               	return	
 32296  018DD6                     __end_of___flge:
 32297                           	opt stack 0
 32298                           tosu	equ	0xFFF
 32299                           tosh	equ	0xFFE
 32300                           tosl	equ	0xFFD
 32301                           pclath	equ	0xFFA
 32302                           tblptru	equ	0xFF8
 32303                           tblptrh	equ	0xFF7
 32304                           tblptrl	equ	0xFF6
 32305                           tablat	equ	0xFF5
 32306                           prodh	equ	0xFF4
 32307                           prodl	equ	0xFF3
 32308                           intcon	equ	0xFF2
 32309                           indf0	equ	0xFEF
 32310                           postinc0	equ	0xFEE
 32311                           fsr0h	equ	0xFEA
 32312                           fsr0l	equ	0xFE9
 32313                           wreg	equ	0xFE8
 32314                           indf1	equ	0xFE7
 32315                           postdec1	equ	0xFE5
 32316                           plusw1	equ	0xFE3
 32317                           fsr1h	equ	0xFE2
 32318                           fsr1l	equ	0xFE1
 32319                           indf2	equ	0xFDF
 32320                           postinc2	equ	0xFDE
 32321                           postdec2	equ	0xFDD
 32322                           plusw2	equ	0xFDB
 32323                           fsr2h	equ	0xFDA
 32324                           fsr2l	equ	0xFD9
 32325                           status	equ	0xFD8
 32326                           
 32327 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 32328 ;; Defined at:
 32329 ;;		line 192 in file "main.c"
 32330 ;; Parameters:    Size  Location     Type
 32331 ;;		None
 32332 ;; Auto vars:     Size  Location     Type
 32333 ;;		None
 32334 ;; Return value:  Size  Location     Type
 32335 ;;                  1    wreg      void 
 32336 ;; Registers used:
 32337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32338 ;; Tracked objects:
 32339 ;;		On entry : 0/0
 32340 ;;		On exit  : 0/0
 32341 ;;		Unchanged: 0/0
 32342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32347 ;;Total ram usage:        0 bytes
 32348 ;; Hardware stack levels used:    1
 32349 ;; Hardware stack levels required when called:   15
 32350 ;; This function calls:
 32351 ;;		_readDoubleFromEEPROM
 32352 ;; This function is called by:
 32353 ;;		_main
 32354 ;; This function uses a non-reentrant model
 32355 ;;
 32356                           
 32357                           	psect	text56
 32358  0185A2                     __ptext56:
 32359                           	opt stack 0
 32360  0185A2                     _recoverSRAMMaxFromEEPROM:
 32361                           	opt stack 15
 32362                           
 32363                           ;main.c: 194: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 32364                           
 32365                           ; BSR set to: 1
 32366                           ;incstack = 0
 32367  0185A2  0E61               	movlw	low _max_Irms_address
 32368  0185A4  6EF6               	movwf	tblptrl,c
 32369  0185A6                     	if	1	;There is more than 1 active tblptr byte
 32370  0185A6  0ECF               	movlw	high _max_Irms_address
 32371  0185A8  6EF7               	movwf	tblptrh,c
 32372  0185AA                     	endif
 32373  0185AA                     	if	1	;There are 3 active tblptr bytes
 32374  0185AA  0E00               	movlw	low (_max_Irms_address shr (0+16))
 32375  0185AC  6EF8               	movwf	tblptru,c
 32376  0185AE                     	endif
 32377  0185AE  0009               	tblrd		*+
 32378  0185B0  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32379  0185B4  000A               	tblrd		*-
 32380  0185B6  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32381  0185BA  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32382  0185BE  C119  F224         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 32383  0185C2  C11A  F225         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 32384  0185C6  C11B  F226         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 32385  0185CA  C11C  F227         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 32386                           
 32387                           ;main.c: 195: max_Power = readDoubleFromEEPROM(max_Power_address);
 32388  0185CE  0E5F               	movlw	low _max_Power_address
 32389  0185D0  6EF6               	movwf	tblptrl,c
 32390  0185D2                     	if	1	;There is more than 1 active tblptr byte
 32391  0185D2  0ECF               	movlw	high _max_Power_address
 32392  0185D4  6EF7               	movwf	tblptrh,c
 32393  0185D6                     	endif
 32394  0185D6                     	if	1	;There are 3 active tblptr bytes
 32395  0185D6  0E00               	movlw	low (_max_Power_address shr (0+16))
 32396  0185D8  6EF8               	movwf	tblptru,c
 32397  0185DA                     	endif
 32398  0185DA  0009               	tblrd		*+
 32399  0185DC  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32400  0185E0  000A               	tblrd		*-
 32401  0185E2  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32402  0185E6  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32403  0185EA  C119  F220         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 32404  0185EE  C11A  F221         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 32405  0185F2  C11B  F222         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 32406  0185F6  C11C  F223         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 32407                           
 32408                           ;main.c: 196: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 32409  0185FA  0E5D               	movlw	low _max_POS3P3_ADC_Result_address
 32410  0185FC  6EF6               	movwf	tblptrl,c
 32411  0185FE                     	if	1	;There is more than 1 active tblptr byte
 32412  0185FE  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 32413  018600  6EF7               	movwf	tblptrh,c
 32414  018602                     	endif
 32415  018602                     	if	1	;There are 3 active tblptr bytes
 32416  018602  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 32417  018604  6EF8               	movwf	tblptru,c
 32418  018606                     	endif
 32419  018606  0009               	tblrd		*+
 32420  018608  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32421  01860C  000A               	tblrd		*-
 32422  01860E  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32423  018612  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32424  018616  C119  F21C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 32425  01861A  C11A  F21D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 32426  01861E  C11B  F21E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 32427  018622  C11C  F21F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 32428                           
 32429                           ;main.c: 197: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 32430  018626  0E5B               	movlw	low _max_POS12_ADC_Result_address
 32431  018628  6EF6               	movwf	tblptrl,c
 32432  01862A                     	if	1	;There is more than 1 active tblptr byte
 32433  01862A  0ECF               	movlw	high _max_POS12_ADC_Result_address
 32434  01862C  6EF7               	movwf	tblptrh,c
 32435  01862E                     	endif
 32436  01862E                     	if	1	;There are 3 active tblptr bytes
 32437  01862E  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 32438  018630  6EF8               	movwf	tblptru,c
 32439  018632                     	endif
 32440  018632  0009               	tblrd		*+
 32441  018634  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32442  018638  000A               	tblrd		*-
 32443  01863A  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32444  01863E  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32445  018642  C119  F218         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 32446  018646  C11A  F219         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 32447  01864A  C11B  F21A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 32448  01864E  C11C  F21B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 32449                           
 32450                           ;main.c: 198: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 32451  018652  0E59               	movlw	low _max_Temp_ADC_Result_address
 32452  018654  6EF6               	movwf	tblptrl,c
 32453  018656                     	if	1	;There is more than 1 active tblptr byte
 32454  018656  0ECF               	movlw	high _max_Temp_ADC_Result_address
 32455  018658  6EF7               	movwf	tblptrh,c
 32456  01865A                     	endif
 32457  01865A                     	if	1	;There are 3 active tblptr bytes
 32458  01865A  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 32459  01865C  6EF8               	movwf	tblptru,c
 32460  01865E                     	endif
 32461  01865E  0009               	tblrd		*+
 32462  018660  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32463  018664  000A               	tblrd		*-
 32464  018666  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32465  01866A  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32466  01866E  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 32467  018672  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 32468  018676  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 32469  01867A  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 32470                           
 32471                           ;main.c: 199: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 32472  01867E  0E57               	movlw	low _max_FVR_ADC_Result_address
 32473  018680  6EF6               	movwf	tblptrl,c
 32474  018682                     	if	1	;There is more than 1 active tblptr byte
 32475  018682  0ECF               	movlw	high _max_FVR_ADC_Result_address
 32476  018684  6EF7               	movwf	tblptrh,c
 32477  018686                     	endif
 32478  018686                     	if	1	;There are 3 active tblptr bytes
 32479  018686  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 32480  018688  6EF8               	movwf	tblptru,c
 32481  01868A                     	endif
 32482  01868A  0009               	tblrd		*+
 32483  01868C  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32484  018690  000A               	tblrd		*-
 32485  018692  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32486  018696  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32487  01869A  C119  F210         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 32488  01869E  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 32489  0186A2  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 32490  0186A6  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 32491                           
 32492                           ;main.c: 200: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 32493  0186AA  0E63               	movlw	low _Total_Energy_address
 32494  0186AC  6EF6               	movwf	tblptrl,c
 32495  0186AE                     	if	1	;There is more than 1 active tblptr byte
 32496  0186AE  0ECF               	movlw	high _Total_Energy_address
 32497  0186B0  6EF7               	movwf	tblptrh,c
 32498  0186B2                     	endif
 32499  0186B2                     	if	1	;There are 3 active tblptr bytes
 32500  0186B2  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 32501  0186B4  6EF8               	movwf	tblptru,c
 32502  0186B6                     	endif
 32503  0186B6  0009               	tblrd		*+
 32504  0186B8  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32505  0186BC  000A               	tblrd		*-
 32506  0186BE  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32507  0186C2  EC4D  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32508  0186C6  C119  F0F6         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 32509  0186CA  C11A  F0F7         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 32510  0186CE  C11B  F0F8         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 32511  0186D2  C11C  F0F9         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 32512  0186D6  0012               	return		;funcret
 32513  0186D8                     __end_of_recoverSRAMMaxFromEEPROM:
 32514                           	opt stack 0
 32515                           tosu	equ	0xFFF
 32516                           tosh	equ	0xFFE
 32517                           tosl	equ	0xFFD
 32518                           pclath	equ	0xFFA
 32519                           tblptru	equ	0xFF8
 32520                           tblptrh	equ	0xFF7
 32521                           tblptrl	equ	0xFF6
 32522                           tablat	equ	0xFF5
 32523                           prodh	equ	0xFF4
 32524                           prodl	equ	0xFF3
 32525                           intcon	equ	0xFF2
 32526                           indf0	equ	0xFEF
 32527                           postinc0	equ	0xFEE
 32528                           fsr0h	equ	0xFEA
 32529                           fsr0l	equ	0xFE9
 32530                           wreg	equ	0xFE8
 32531                           indf1	equ	0xFE7
 32532                           postdec1	equ	0xFE5
 32533                           plusw1	equ	0xFE3
 32534                           fsr1h	equ	0xFE2
 32535                           fsr1l	equ	0xFE1
 32536                           indf2	equ	0xFDF
 32537                           postinc2	equ	0xFDE
 32538                           postdec2	equ	0xFDD
 32539                           plusw2	equ	0xFDB
 32540                           fsr2h	equ	0xFDA
 32541                           fsr2l	equ	0xFD9
 32542                           status	equ	0xFD8
 32543                           
 32544 ;; *************** function _readDoubleFromEEPROM *****************
 32545 ;; Defined at:
 32546 ;;		line 22 in file "double_to_EEPROM.c"
 32547 ;; Parameters:    Size  Location     Type
 32548 ;;  starting_add    2   25[BANK1 ] unsigned int 
 32549 ;; Auto vars:     Size  Location     Type
 32550 ;;  byte_index      2   33[BANK1 ] int 
 32551 ;;  output_data     4   29[BANK1 ] struct .
 32552 ;; Return value:  Size  Location     Type
 32553 ;;                  4   25[BANK1 ] struct .
 32554 ;; Registers used:
 32555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32556 ;; Tracked objects:
 32557 ;;		On entry : 0/0
 32558 ;;		On exit  : 0/0
 32559 ;;		Unchanged: 0/0
 32560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32561 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32562 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32564 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32565 ;;Total ram usage:       10 bytes
 32566 ;; Hardware stack levels used:    1
 32567 ;; Hardware stack levels required when called:   14
 32568 ;; This function calls:
 32569 ;;		_DATAEE_ReadByte
 32570 ;; This function is called by:
 32571 ;;		_recoverSRAMMaxFromEEPROM
 32572 ;;		_ringBufferLUT
 32573 ;; This function uses a non-reentrant model
 32574 ;;
 32575                           
 32576                           	psect	text57
 32577  01A29A                     __ptext57:
 32578                           	opt stack 0
 32579  01A29A                     _readDoubleFromEEPROM:
 32580                           	opt stack 14
 32581                           
 32582                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 32583                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 32584                           
 32585                           ;incstack = 0
 32586  01A29A  0E00               	movlw	0
 32587  01A29C  0101               	movlb	1	; () banked
 32588  01A29E  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 32589  01A2A0  0E00               	movlw	0
 32590  01A2A2  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 32591                           
 32592                           ; BSR set to: 1
 32593  01A2A4  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32594  01A2A6  E119               	bnz	l1646
 32595  01A2A8  D014               	goto	L9
 32596  01A2AA                     
 32597                           ; BSR set to: 1
 32598                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 32599                           
 32600                           ; BSR set to: 1
 32601  01A2AA  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 32602  01A2AC  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32603  01A2AE  6ED9               	movwf	fsr2l,c
 32604  01A2B0  0E01               	movlw	high readDoubleFromEEPROM@output_data
 32605  01A2B2  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32606  01A2B4  6EDA               	movwf	fsr2h,c
 32607  01A2B6  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 32608  01A2B8  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32609  01A2BA  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 32610  01A2BC  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 32611  01A2BE  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32612  01A2C0  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 32613  01A2C2  ECE4  F0D7         	call	_DATAEE_ReadByte	;wreg free
 32614  01A2C6  6EDF               	movwf	indf2,c
 32615  01A2C8  0101               	movlb	1	; () banked
 32616  01A2CA  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 32617  01A2CC  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 32618                           
 32619                           ; BSR set to: 1
 32620  01A2CE  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32621  01A2D0  E104               	bnz	u20630
 32622  01A2D2                     L9:
 32623  01A2D2  0E04               	movlw	4
 32624  01A2D4  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32625  01A2D6  A0D8               	btfss	status,0,c
 32626  01A2D8  D7E8               	goto	l1645
 32627  01A2DA                     u20630:
 32628  01A2DA                     l1646:
 32629                           
 32630                           ; BSR set to: 1
 32631                           ;double_to_EEPROM.c: 32: }
 32632                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 32633  01A2DA  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 32634  01A2DE  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 32635  01A2E2  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 32636  01A2E6  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 32637                           
 32638                           ; BSR set to: 1
 32639  01A2EA  0012               	return		;funcret
 32640  01A2EC                     __end_of_readDoubleFromEEPROM:
 32641                           	opt stack 0
 32642                           tosu	equ	0xFFF
 32643                           tosh	equ	0xFFE
 32644                           tosl	equ	0xFFD
 32645                           pclath	equ	0xFFA
 32646                           tblptru	equ	0xFF8
 32647                           tblptrh	equ	0xFF7
 32648                           tblptrl	equ	0xFF6
 32649                           tablat	equ	0xFF5
 32650                           prodh	equ	0xFF4
 32651                           prodl	equ	0xFF3
 32652                           intcon	equ	0xFF2
 32653                           indf0	equ	0xFEF
 32654                           postinc0	equ	0xFEE
 32655                           fsr0h	equ	0xFEA
 32656                           fsr0l	equ	0xFE9
 32657                           wreg	equ	0xFE8
 32658                           indf1	equ	0xFE7
 32659                           postdec1	equ	0xFE5
 32660                           plusw1	equ	0xFE3
 32661                           fsr1h	equ	0xFE2
 32662                           fsr1l	equ	0xFE1
 32663                           indf2	equ	0xFDF
 32664                           postinc2	equ	0xFDE
 32665                           postdec2	equ	0xFDD
 32666                           plusw2	equ	0xFDB
 32667                           fsr2h	equ	0xFDA
 32668                           fsr2l	equ	0xFD9
 32669                           status	equ	0xFD8
 32670                           
 32671 ;; *************** function _DATAEE_ReadByte *****************
 32672 ;; Defined at:
 32673 ;;		line 190 in file "mcc_generated_files/memory.c"
 32674 ;; Parameters:    Size  Location     Type
 32675 ;;  bAdd            2   23[BANK1 ] unsigned int 
 32676 ;; Auto vars:     Size  Location     Type
 32677 ;;		None
 32678 ;; Return value:  Size  Location     Type
 32679 ;;                  1    wreg      unsigned char 
 32680 ;; Registers used:
 32681 ;;		wreg, status,2, status,0
 32682 ;; Tracked objects:
 32683 ;;		On entry : 0/0
 32684 ;;		On exit  : 0/0
 32685 ;;		Unchanged: 0/0
 32686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32687 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32690 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32691 ;;Total ram usage:        2 bytes
 32692 ;; Hardware stack levels used:    1
 32693 ;; Hardware stack levels required when called:   13
 32694 ;; This function calls:
 32695 ;;		Nothing
 32696 ;; This function is called by:
 32697 ;;		_readDoubleFromEEPROM
 32698 ;; This function uses a non-reentrant model
 32699 ;;
 32700                           
 32701                           	psect	text58
 32702  01AFC8                     __ptext58:
 32703                           	opt stack 0
 32704  01AFC8                     _DATAEE_ReadByte:
 32705                           	opt stack 14
 32706                           
 32707                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 32708                           
 32709                           ; BSR set to: 1
 32710                           ;incstack = 0
 32711  01AFC8  0101               	movlb	1	; () banked
 32712  01AFCA  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 32713  01AFCC  0B03               	andlw	3
 32714  01AFCE  6E75               	movwf	3957,c	;volatile
 32715                           
 32716                           ; BSR set to: 1
 32717                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 32718  01AFD0  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 32719                           
 32720                           ; BSR set to: 1
 32721                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 32722  01AFD4  0E3F               	movlw	-193
 32723  01AFD6  1677               	andwf	3959,f,c	;volsfr
 32724                           
 32725                           ; BSR set to: 1
 32726                           ;memory.c: 195: NVMCON1bits.RD = 1;
 32727  01AFD8  8077               	bsf	3959,0,c	;volsfr
 32728                           
 32729                           ; BSR set to: 1
 32730                           ;memory.c: 196: __nop();
 32731  01AFDA  F000               	nop	
 32732                           
 32733                           ;memory.c: 197: __nop();
 32734  01AFDC  F000               	nop	
 32735                           
 32736                           ;memory.c: 199: return (NVMDAT);
 32737  01AFDE  5076               	movf	3958,w,c	;volatile
 32738  01AFE0  0012               	return	
 32739  01AFE2                     __end_of_DATAEE_ReadByte:
 32740                           	opt stack 0
 32741                           tosu	equ	0xFFF
 32742                           tosh	equ	0xFFE
 32743                           tosl	equ	0xFFD
 32744                           pclath	equ	0xFFA
 32745                           tblptru	equ	0xFF8
 32746                           tblptrh	equ	0xFF7
 32747                           tblptrl	equ	0xFF6
 32748                           tablat	equ	0xFF5
 32749                           prodh	equ	0xFF4
 32750                           prodl	equ	0xFF3
 32751                           intcon	equ	0xFF2
 32752                           indf0	equ	0xFEF
 32753                           postinc0	equ	0xFEE
 32754                           fsr0h	equ	0xFEA
 32755                           fsr0l	equ	0xFE9
 32756                           wreg	equ	0xFE8
 32757                           indf1	equ	0xFE7
 32758                           postdec1	equ	0xFE5
 32759                           plusw1	equ	0xFE3
 32760                           fsr1h	equ	0xFE2
 32761                           fsr1l	equ	0xFE1
 32762                           indf2	equ	0xFDF
 32763                           postinc2	equ	0xFDE
 32764                           postdec2	equ	0xFDD
 32765                           plusw2	equ	0xFDB
 32766                           fsr2h	equ	0xFDA
 32767                           fsr2l	equ	0xFD9
 32768                           status	equ	0xFD8
 32769                           
 32770 ;; *************** function _getCauseOfReset *****************
 32771 ;; Defined at:
 32772 ;;		line 11 in file "cause_of_reset.c"
 32773 ;; Parameters:    Size  Location     Type
 32774 ;;		None
 32775 ;; Auto vars:     Size  Location     Type
 32776 ;;  return_reset    1   23[BANK1 ] enum E17455
 32777 ;; Return value:  Size  Location     Type
 32778 ;;                  1    wreg      enum E18124
 32779 ;; Registers used:
 32780 ;;		wreg, status,2
 32781 ;; Tracked objects:
 32782 ;;		On entry : 0/0
 32783 ;;		On exit  : 0/0
 32784 ;;		Unchanged: 0/0
 32785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32787 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32789 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32790 ;;Total ram usage:        1 bytes
 32791 ;; Hardware stack levels used:    1
 32792 ;; Hardware stack levels required when called:   13
 32793 ;; This function calls:
 32794 ;;		Nothing
 32795 ;; This function is called by:
 32796 ;;		_main
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800                           	psect	text59
 32801  01A2EC                     __ptext59:
 32802                           	opt stack 0
 32803  01A2EC                     _getCauseOfReset:
 32804                           	opt stack 17
 32805                           
 32806                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 32807                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 32808                           
 32809                           ;incstack = 0
 32810  01A2EC  AED7               	btfss	4055,7,c	;volatile
 32811  01A2EE  D002               	goto	l1612
 32812                           
 32813                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 32814  01A2F0  0E07               	movlw	7
 32815  01A2F2  D019               	goto	L16
 32816  01A2F4                     l1612:
 32817                           
 32818                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 32819  01A2F4  ACD7               	btfss	4055,6,c	;volatile
 32820  01A2F6  D002               	goto	l1614
 32821                           
 32822                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 32823  01A2F8  0E08               	movlw	8
 32824  01A2FA  D015               	goto	L16
 32825  01A2FC                     l1614:
 32826                           
 32827                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 32828  01A2FC  BAD7               	btfsc	4055,5,c	;volatile
 32829  01A2FE  D002               	goto	l1616
 32830                           
 32831                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 32832  01A300  0E05               	movlw	5
 32833  01A302  D011               	goto	L16
 32834  01A304                     l1616:
 32835                           
 32836                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 32837  01A304  B6D7               	btfsc	4055,3,c	;volatile
 32838  01A306  D002               	goto	l1618
 32839                           
 32840                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 32841  01A308  0E03               	movlw	3
 32842  01A30A  D00D               	goto	L16
 32843  01A30C                     l1618:
 32844                           
 32845                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 32846  01A30C  B4D7               	btfsc	4055,2,c	;volatile
 32847  01A30E  D002               	goto	l1620
 32848                           
 32849                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 32850  01A310  0E06               	movlw	6
 32851  01A312  D009               	goto	L16
 32852  01A314                     l1620:
 32853                           
 32854                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 32855  01A314  B2D7               	btfsc	4055,1,c	;volatile
 32856  01A316  D002               	goto	l1622
 32857                           
 32858                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 32859  01A318  0E01               	movlw	1
 32860  01A31A  D005               	goto	L16
 32861  01A31C                     l1622:
 32862                           
 32863                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 32864  01A31C  B0D7               	btfsc	4055,0,c	;volatile
 32865  01A31E  D002               	goto	l1624
 32866                           
 32867                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 32868  01A320  0E02               	movlw	2
 32869  01A322  D001               	goto	L16
 32870  01A324                     l1624:
 32871                           
 32872                           ;cause_of_reset.c: 60: else {
 32873                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 32874                           
 32875                           ; BSR set to: 1
 32876  01A324  0E00               	movlw	0
 32877  01A326                     L16:
 32878  01A326  0101               	movlb	1	; () banked
 32879  01A328  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 32880                           
 32881                           ; BSR set to: 1
 32882                           ;cause_of_reset.c: 64: }
 32883                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 32884                           
 32885                           ; BSR set to: 1
 32886                           
 32887                           ; BSR set to: 1
 32888                           
 32889                           ; BSR set to: 1
 32890                           
 32891                           ; BSR set to: 1
 32892                           
 32893                           ; BSR set to: 1
 32894                           
 32895                           ; BSR set to: 1
 32896                           
 32897                           ; BSR set to: 1
 32898  01A32A  9ED7               	bcf	4055,7,c	;volatile
 32899                           
 32900                           ; BSR set to: 1
 32901                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 32902  01A32C  9CD7               	bcf	4055,6,c	;volatile
 32903                           
 32904                           ; BSR set to: 1
 32905                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 32906  01A32E  8AD7               	bsf	4055,5,c	;volatile
 32907                           
 32908                           ; BSR set to: 1
 32909                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 32910  01A330  88D7               	bsf	4055,4,c	;volatile
 32911                           
 32912                           ; BSR set to: 1
 32913                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 32914  01A332  86D7               	bsf	4055,3,c	;volatile
 32915                           
 32916                           ; BSR set to: 1
 32917                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 32918  01A334  84D7               	bsf	4055,2,c	;volatile
 32919                           
 32920                           ; BSR set to: 1
 32921                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 32922  01A336  82D7               	bsf	4055,1,c	;volatile
 32923                           
 32924                           ; BSR set to: 1
 32925                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 32926  01A338  80D7               	bsf	4055,0,c	;volatile
 32927                           
 32928                           ;cause_of_reset.c: 76: return return_reset_cause;
 32929  01A33A  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 32930  01A33C  0012               	return	
 32931  01A33E                     __end_of_getCauseOfReset:
 32932                           	opt stack 0
 32933                           tosu	equ	0xFFF
 32934                           tosh	equ	0xFFE
 32935                           tosl	equ	0xFFD
 32936                           pclath	equ	0xFFA
 32937                           tblptru	equ	0xFF8
 32938                           tblptrh	equ	0xFF7
 32939                           tblptrl	equ	0xFF6
 32940                           tablat	equ	0xFF5
 32941                           prodh	equ	0xFF4
 32942                           prodl	equ	0xFF3
 32943                           intcon	equ	0xFF2
 32944                           indf0	equ	0xFEF
 32945                           postinc0	equ	0xFEE
 32946                           fsr0h	equ	0xFEA
 32947                           fsr0l	equ	0xFE9
 32948                           wreg	equ	0xFE8
 32949                           indf1	equ	0xFE7
 32950                           postdec1	equ	0xFE5
 32951                           plusw1	equ	0xFE3
 32952                           fsr1h	equ	0xFE2
 32953                           fsr1l	equ	0xFE1
 32954                           indf2	equ	0xFDF
 32955                           postinc2	equ	0xFDE
 32956                           postdec2	equ	0xFDD
 32957                           plusw2	equ	0xFDB
 32958                           fsr2h	equ	0xFDA
 32959                           fsr2l	equ	0xFD9
 32960                           status	equ	0xFD8
 32961                           
 32962 ;; *************** function _SYSTEM_Initialize *****************
 32963 ;; Defined at:
 32964 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32965 ;; Parameters:    Size  Location     Type
 32966 ;;		None
 32967 ;; Auto vars:     Size  Location     Type
 32968 ;;		None
 32969 ;; Return value:  Size  Location     Type
 32970 ;;                  1    wreg      void 
 32971 ;; Registers used:
 32972 ;;		wreg, status,2, status,0, cstack
 32973 ;; Tracked objects:
 32974 ;;		On entry : 0/0
 32975 ;;		On exit  : 0/0
 32976 ;;		Unchanged: 0/0
 32977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32982 ;;Total ram usage:        0 bytes
 32983 ;; Hardware stack levels used:    1
 32984 ;; Hardware stack levels required when called:   15
 32985 ;; This function calls:
 32986 ;;		_ADCC_Initialize
 32987 ;;		_EUSART2_Initialize
 32988 ;;		_EXT_INT_Initialize
 32989 ;;		_FVR_Initialize
 32990 ;;		_HLVD_Initialize
 32991 ;;		_I2C1_Initialize
 32992 ;;		_INTERRUPT_Initialize
 32993 ;;		_OSCILLATOR_Initialize
 32994 ;;		_PIN_MANAGER_Initialize
 32995 ;;		_PMD_Initialize
 32996 ;;		_TMR4_Initialize
 32997 ;;		_TMR5_Initialize
 32998 ;;		_TMR6_Initialize
 32999 ;;		_TMR7_Initialize
 33000 ;; This function is called by:
 33001 ;;		_main
 33002 ;; This function uses a non-reentrant model
 33003 ;;
 33004                           
 33005                           	psect	text60
 33006  01AA1A                     __ptext60:
 33007                           	opt stack 0
 33008  01AA1A                     _SYSTEM_Initialize:
 33009                           	opt stack 15
 33010                           
 33011                           ;mcc.c: 52: INTERRUPT_Initialize();
 33012                           
 33013                           ; BSR set to: 1
 33014                           ;incstack = 0
 33015  01AA1A  ECBB  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 33016                           
 33017                           ;mcc.c: 53: PMD_Initialize();
 33018  01AA1E  EC9F  F0D7         	call	_PMD_Initialize	;wreg free
 33019                           
 33020                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 33021  01AA22  EC52  F0CA         	call	_PIN_MANAGER_Initialize	;wreg free
 33022                           
 33023                           ;mcc.c: 55: OSCILLATOR_Initialize();
 33024  01AA26  ECAD  F0D7         	call	_OSCILLATOR_Initialize	;wreg free
 33025                           
 33026                           ;mcc.c: 56: I2C1_Initialize();
 33027  01AA2A  EC7F  F0D5         	call	_I2C1_Initialize	;wreg free
 33028                           
 33029                           ;mcc.c: 57: HLVD_Initialize();
 33030  01AA2E  EC75  F0D8         	call	_HLVD_Initialize	;wreg free
 33031                           
 33032                           ;mcc.c: 58: FVR_Initialize();
 33033  01AA32  ECDE  F0D8         	call	_FVR_Initialize	;wreg free
 33034                           
 33035                           ;mcc.c: 59: TMR7_Initialize();
 33036  01AA36  EC23  F0D1         	call	_TMR7_Initialize	;wreg free
 33037                           
 33038                           ;mcc.c: 60: ADCC_Initialize();
 33039  01AA3A  EC97  F0CF         	call	_ADCC_Initialize	;wreg free
 33040                           
 33041                           ;mcc.c: 61: TMR4_Initialize();
 33042  01AA3E  EC4C  F0D6         	call	_TMR4_Initialize	;wreg free
 33043                           
 33044                           ;mcc.c: 62: EXT_INT_Initialize();
 33045  01AA42  EC81  F0D7         	call	_EXT_INT_Initialize	;wreg free
 33046                           
 33047                           ;mcc.c: 63: TMR6_Initialize();
 33048  01AA46  EC03  F0D6         	call	_TMR6_Initialize	;wreg free
 33049                           
 33050                           ;mcc.c: 64: TMR5_Initialize();
 33051  01AA4A  ECEF  F0D1         	call	_TMR5_Initialize	;wreg free
 33052                           
 33053                           ;mcc.c: 65: EUSART2_Initialize();
 33054  01AA4E  EC34  F0D0         	call	_EUSART2_Initialize	;wreg free
 33055  01AA52  0012               	return		;funcret
 33056  01AA54                     __end_of_SYSTEM_Initialize:
 33057                           	opt stack 0
 33058                           tosu	equ	0xFFF
 33059                           tosh	equ	0xFFE
 33060                           tosl	equ	0xFFD
 33061                           pclath	equ	0xFFA
 33062                           tblptru	equ	0xFF8
 33063                           tblptrh	equ	0xFF7
 33064                           tblptrl	equ	0xFF6
 33065                           tablat	equ	0xFF5
 33066                           prodh	equ	0xFF4
 33067                           prodl	equ	0xFF3
 33068                           intcon	equ	0xFF2
 33069                           indf0	equ	0xFEF
 33070                           postinc0	equ	0xFEE
 33071                           fsr0h	equ	0xFEA
 33072                           fsr0l	equ	0xFE9
 33073                           wreg	equ	0xFE8
 33074                           indf1	equ	0xFE7
 33075                           postdec1	equ	0xFE5
 33076                           plusw1	equ	0xFE3
 33077                           fsr1h	equ	0xFE2
 33078                           fsr1l	equ	0xFE1
 33079                           indf2	equ	0xFDF
 33080                           postinc2	equ	0xFDE
 33081                           postdec2	equ	0xFDD
 33082                           plusw2	equ	0xFDB
 33083                           fsr2h	equ	0xFDA
 33084                           fsr2l	equ	0xFD9
 33085                           status	equ	0xFD8
 33086                           
 33087 ;; *************** function _TMR7_Initialize *****************
 33088 ;; Defined at:
 33089 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 33090 ;; Parameters:    Size  Location     Type
 33091 ;;		None
 33092 ;; Auto vars:     Size  Location     Type
 33093 ;;		None
 33094 ;; Return value:  Size  Location     Type
 33095 ;;                  1    wreg      void 
 33096 ;; Registers used:
 33097 ;;		wreg, status,2, status,0, cstack
 33098 ;; Tracked objects:
 33099 ;;		On entry : 0/0
 33100 ;;		On exit  : 0/0
 33101 ;;		Unchanged: 0/0
 33102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33105 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33106 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33107 ;;Total ram usage:        2 bytes
 33108 ;; Hardware stack levels used:    1
 33109 ;; Hardware stack levels required when called:   14
 33110 ;; This function calls:
 33111 ;;		_TMR7_SetInterruptHandler
 33112 ;; This function is called by:
 33113 ;;		_SYSTEM_Initialize
 33114 ;; This function uses a non-reentrant model
 33115 ;;
 33116                           
 33117                           	psect	text61
 33118  01A246                     __ptext61:
 33119                           	opt stack 0
 33120  01A246                     _TMR7_Initialize:
 33121                           	opt stack 15
 33122                           
 33123                           ;tmr7.c: 69: T7GCON = 0x00;
 33124                           
 33125                           ;incstack = 0
 33126  01A246  0E00               	movlw	0
 33127  01A248  010F               	movlb	15	; () banked
 33128  01A24A  6F31               	movwf	49,b	;volatile
 33129                           
 33130                           ;tmr7.c: 72: T7GATE = 0x00;
 33131  01A24C  0E00               	movlw	0
 33132  01A24E  6F32               	movwf	50,b	;volatile
 33133                           
 33134                           ;tmr7.c: 75: T7CLK = 0x03;
 33135  01A250  0E03               	movlw	3
 33136  01A252  6F33               	movwf	51,b	;volatile
 33137                           
 33138                           ;tmr7.c: 78: TMR7H = 0xEC;
 33139  01A254  0EEC               	movlw	236
 33140  01A256  6F2F               	movwf	47,b	;volatile
 33141                           
 33142                           ;tmr7.c: 81: TMR7L = 0x78;
 33143  01A258  0E78               	movlw	120
 33144  01A25A  6F2E               	movwf	46,b	;volatile
 33145                           
 33146                           ; BSR set to: 15
 33147                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 33148  01A25C  512E               	movf	46,w,b	;volatile
 33149  01A25E  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 33150  01A262  0101               	movlb	1	; () banked
 33151  01A264  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 33152  01A266  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 33153  01A26A  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 33154  01A26C  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 33155  01A26E  0102               	movlb	2	; () banked
 33156  01A270  6F68               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 33157  01A272  0101               	movlb	1	; () banked
 33158  01A274  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 33159  01A276  0102               	movlb	2	; () banked
 33160  01A278  6F69               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 33161                           
 33162                           ; BSR set to: 2
 33163                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 33164  01A27A  010E               	movlb	14	; () banked
 33165  01A27C  9D38               	bcf	56,6,b	;volatile
 33166                           
 33167                           ; BSR set to: 14
 33168                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 33169  01A27E  8D2E               	bsf	46,6,b	;volatile
 33170                           
 33171                           ; BSR set to: 14
 33172                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 33173  01A280  0EF2               	movlw	low _TMR7_DefaultInterruptHandler
 33174  01A282  0101               	movlb	1	; () banked
 33175  01A284  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 33176  01A286  0EB1               	movlw	high _TMR7_DefaultInterruptHandler
 33177  01A288  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33178  01A28A  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 33179  01A28C  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33180  01A28E  EC84  F0D8         	call	_TMR7_SetInterruptHandler	;wreg free
 33181                           
 33182                           ;tmr7.c: 96: T7CON = 0x31;
 33183  01A292  0E31               	movlw	49
 33184  01A294  010F               	movlb	15	; () banked
 33185  01A296  6F30               	movwf	48,b	;volatile
 33186                           
 33187                           ; BSR set to: 15
 33188  01A298  0012               	return		;funcret
 33189  01A29A                     __end_of_TMR7_Initialize:
 33190                           	opt stack 0
 33191                           tosu	equ	0xFFF
 33192                           tosh	equ	0xFFE
 33193                           tosl	equ	0xFFD
 33194                           pclath	equ	0xFFA
 33195                           tblptru	equ	0xFF8
 33196                           tblptrh	equ	0xFF7
 33197                           tblptrl	equ	0xFF6
 33198                           tablat	equ	0xFF5
 33199                           prodh	equ	0xFF4
 33200                           prodl	equ	0xFF3
 33201                           intcon	equ	0xFF2
 33202                           indf0	equ	0xFEF
 33203                           postinc0	equ	0xFEE
 33204                           fsr0h	equ	0xFEA
 33205                           fsr0l	equ	0xFE9
 33206                           wreg	equ	0xFE8
 33207                           indf1	equ	0xFE7
 33208                           postdec1	equ	0xFE5
 33209                           plusw1	equ	0xFE3
 33210                           fsr1h	equ	0xFE2
 33211                           fsr1l	equ	0xFE1
 33212                           indf2	equ	0xFDF
 33213                           postinc2	equ	0xFDE
 33214                           postdec2	equ	0xFDD
 33215                           plusw2	equ	0xFDB
 33216                           fsr2h	equ	0xFDA
 33217                           fsr2l	equ	0xFD9
 33218                           status	equ	0xFD8
 33219                           
 33220 ;; *************** function _TMR7_SetInterruptHandler *****************
 33221 ;; Defined at:
 33222 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 33223 ;; Parameters:    Size  Location     Type
 33224 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33225 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 33226 ;; Auto vars:     Size  Location     Type
 33227 ;;		None
 33228 ;; Return value:  Size  Location     Type
 33229 ;;                  1    wreg      void 
 33230 ;; Registers used:
 33231 ;;		wreg, status,2, status,0
 33232 ;; Tracked objects:
 33233 ;;		On entry : 0/0
 33234 ;;		On exit  : 0/0
 33235 ;;		Unchanged: 0/0
 33236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33237 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33240 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33241 ;;Total ram usage:        3 bytes
 33242 ;; Hardware stack levels used:    1
 33243 ;; Hardware stack levels required when called:   13
 33244 ;; This function calls:
 33245 ;;		Nothing
 33246 ;; This function is called by:
 33247 ;;		_TMR7_Initialize
 33248 ;;		_main
 33249 ;; This function uses a non-reentrant model
 33250 ;;
 33251                           
 33252                           	psect	text62
 33253  01B108                     __ptext62:
 33254                           	opt stack 0
 33255  01B108                     _TMR7_SetInterruptHandler:
 33256                           	opt stack 17
 33257                           
 33258                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 33259                           
 33260                           ; BSR set to: 15
 33261                           ;incstack = 0
 33262  01B108  C117  F24D         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 33263  01B10C  C118  F24E         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 33264  01B110  C119  F24F         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 33265  01B114  0012               	return		;funcret
 33266  01B116                     __end_of_TMR7_SetInterruptHandler:
 33267                           	opt stack 0
 33268                           tosu	equ	0xFFF
 33269                           tosh	equ	0xFFE
 33270                           tosl	equ	0xFFD
 33271                           pclath	equ	0xFFA
 33272                           tblptru	equ	0xFF8
 33273                           tblptrh	equ	0xFF7
 33274                           tblptrl	equ	0xFF6
 33275                           tablat	equ	0xFF5
 33276                           prodh	equ	0xFF4
 33277                           prodl	equ	0xFF3
 33278                           intcon	equ	0xFF2
 33279                           indf0	equ	0xFEF
 33280                           postinc0	equ	0xFEE
 33281                           fsr0h	equ	0xFEA
 33282                           fsr0l	equ	0xFE9
 33283                           wreg	equ	0xFE8
 33284                           indf1	equ	0xFE7
 33285                           postdec1	equ	0xFE5
 33286                           plusw1	equ	0xFE3
 33287                           fsr1h	equ	0xFE2
 33288                           fsr1l	equ	0xFE1
 33289                           indf2	equ	0xFDF
 33290                           postinc2	equ	0xFDE
 33291                           postdec2	equ	0xFDD
 33292                           plusw2	equ	0xFDB
 33293                           fsr2h	equ	0xFDA
 33294                           fsr2l	equ	0xFD9
 33295                           status	equ	0xFD8
 33296                           
 33297 ;; *************** function _TMR6_Initialize *****************
 33298 ;; Defined at:
 33299 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 33300 ;; Parameters:    Size  Location     Type
 33301 ;;		None
 33302 ;; Auto vars:     Size  Location     Type
 33303 ;;		None
 33304 ;; Return value:  Size  Location     Type
 33305 ;;                  1    wreg      void 
 33306 ;; Registers used:
 33307 ;;		wreg, status,2, status,0, cstack
 33308 ;; Tracked objects:
 33309 ;;		On entry : 0/0
 33310 ;;		On exit  : 0/0
 33311 ;;		Unchanged: 0/0
 33312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33317 ;;Total ram usage:        0 bytes
 33318 ;; Hardware stack levels used:    1
 33319 ;; Hardware stack levels required when called:   14
 33320 ;; This function calls:
 33321 ;;		_TMR6_SetInterruptHandler
 33322 ;; This function is called by:
 33323 ;;		_SYSTEM_Initialize
 33324 ;; This function uses a non-reentrant model
 33325 ;;
 33326                           
 33327                           	psect	text63
 33328  01AC06                     __ptext63:
 33329                           	opt stack 0
 33330  01AC06                     _TMR6_Initialize:
 33331                           	opt stack 15
 33332                           
 33333                           ;tmr6.c: 69: T6CLKCON = 0x04;
 33334                           
 33335                           ;incstack = 0
 33336  01AC06  0E04               	movlw	4
 33337  01AC08  6EB3               	movwf	4019,c	;volatile
 33338                           
 33339                           ;tmr6.c: 72: T6HLT = 0x20;
 33340  01AC0A  0E20               	movlw	32
 33341  01AC0C  6EB2               	movwf	4018,c	;volatile
 33342                           
 33343                           ;tmr6.c: 75: T6RST = 0x00;
 33344  01AC0E  0E00               	movlw	0
 33345  01AC10  6EB4               	movwf	4020,c	;volatile
 33346                           
 33347                           ;tmr6.c: 78: T6PR = 0xF1;
 33348  01AC12  0EF1               	movlw	241
 33349  01AC14  6EB0               	movwf	4016,c	;volatile
 33350                           
 33351                           ;tmr6.c: 81: T6TMR = 0x00;
 33352  01AC16  0E00               	movlw	0
 33353  01AC18  6EAF               	movwf	4015,c	;volatile
 33354                           
 33355                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 33356  01AC1A  010E               	movlb	14	; () banked
 33357  01AC1C  9B38               	bcf	56,5,b	;volatile
 33358                           
 33359                           ; BSR set to: 14
 33360                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 33361  01AC1E  8B2E               	bsf	46,5,b	;volatile
 33362                           
 33363                           ; BSR set to: 14
 33364                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 33365  01AC20  0EF4               	movlw	low _TMR6_DefaultInterruptHandler
 33366  01AC22  0101               	movlb	1	; () banked
 33367  01AC24  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 33368  01AC26  0EB1               	movlw	high _TMR6_DefaultInterruptHandler
 33369  01AC28  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33370  01AC2A  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33371  01AC2C  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33372  01AC2E  EC8B  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 33373                           
 33374                           ;tmr6.c: 93: T6CON = 0xBF;
 33375  01AC32  0EBF               	movlw	191
 33376  01AC34  6EB1               	movwf	4017,c	;volatile
 33377  01AC36  0012               	return		;funcret
 33378  01AC38                     __end_of_TMR6_Initialize:
 33379                           	opt stack 0
 33380                           tosu	equ	0xFFF
 33381                           tosh	equ	0xFFE
 33382                           tosl	equ	0xFFD
 33383                           pclath	equ	0xFFA
 33384                           tblptru	equ	0xFF8
 33385                           tblptrh	equ	0xFF7
 33386                           tblptrl	equ	0xFF6
 33387                           tablat	equ	0xFF5
 33388                           prodh	equ	0xFF4
 33389                           prodl	equ	0xFF3
 33390                           intcon	equ	0xFF2
 33391                           indf0	equ	0xFEF
 33392                           postinc0	equ	0xFEE
 33393                           fsr0h	equ	0xFEA
 33394                           fsr0l	equ	0xFE9
 33395                           wreg	equ	0xFE8
 33396                           indf1	equ	0xFE7
 33397                           postdec1	equ	0xFE5
 33398                           plusw1	equ	0xFE3
 33399                           fsr1h	equ	0xFE2
 33400                           fsr1l	equ	0xFE1
 33401                           indf2	equ	0xFDF
 33402                           postinc2	equ	0xFDE
 33403                           postdec2	equ	0xFDD
 33404                           plusw2	equ	0xFDB
 33405                           fsr2h	equ	0xFDA
 33406                           fsr2l	equ	0xFD9
 33407                           status	equ	0xFD8
 33408                           
 33409 ;; *************** function _TMR6_SetInterruptHandler *****************
 33410 ;; Defined at:
 33411 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 33412 ;; Parameters:    Size  Location     Type
 33413 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33414 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 33415 ;; Auto vars:     Size  Location     Type
 33416 ;;		None
 33417 ;; Return value:  Size  Location     Type
 33418 ;;                  1    wreg      void 
 33419 ;; Registers used:
 33420 ;;		wreg, status,2, status,0
 33421 ;; Tracked objects:
 33422 ;;		On entry : 0/0
 33423 ;;		On exit  : 0/0
 33424 ;;		Unchanged: 0/0
 33425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33426 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33429 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33430 ;;Total ram usage:        3 bytes
 33431 ;; Hardware stack levels used:    1
 33432 ;; Hardware stack levels required when called:   13
 33433 ;; This function calls:
 33434 ;;		Nothing
 33435 ;; This function is called by:
 33436 ;;		_TMR6_Initialize
 33437 ;;		_main
 33438 ;; This function uses a non-reentrant model
 33439 ;;
 33440                           
 33441                           	psect	text64
 33442  01B116                     __ptext64:
 33443                           	opt stack 0
 33444  01B116                     _TMR6_SetInterruptHandler:
 33445                           	opt stack 17
 33446                           
 33447                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 33448                           
 33449                           ;incstack = 0
 33450  01B116  C117  F253         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 33451  01B11A  C118  F254         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 33452  01B11E  C119  F255         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 33453  01B122  0012               	return		;funcret
 33454  01B124                     __end_of_TMR6_SetInterruptHandler:
 33455                           	opt stack 0
 33456                           tosu	equ	0xFFF
 33457                           tosh	equ	0xFFE
 33458                           tosl	equ	0xFFD
 33459                           pclath	equ	0xFFA
 33460                           tblptru	equ	0xFF8
 33461                           tblptrh	equ	0xFF7
 33462                           tblptrl	equ	0xFF6
 33463                           tablat	equ	0xFF5
 33464                           prodh	equ	0xFF4
 33465                           prodl	equ	0xFF3
 33466                           intcon	equ	0xFF2
 33467                           indf0	equ	0xFEF
 33468                           postinc0	equ	0xFEE
 33469                           fsr0h	equ	0xFEA
 33470                           fsr0l	equ	0xFE9
 33471                           wreg	equ	0xFE8
 33472                           indf1	equ	0xFE7
 33473                           postdec1	equ	0xFE5
 33474                           plusw1	equ	0xFE3
 33475                           fsr1h	equ	0xFE2
 33476                           fsr1l	equ	0xFE1
 33477                           indf2	equ	0xFDF
 33478                           postinc2	equ	0xFDE
 33479                           postdec2	equ	0xFDD
 33480                           plusw2	equ	0xFDB
 33481                           fsr2h	equ	0xFDA
 33482                           fsr2l	equ	0xFD9
 33483                           status	equ	0xFD8
 33484                           
 33485 ;; *************** function _TMR5_Initialize *****************
 33486 ;; Defined at:
 33487 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 33488 ;; Parameters:    Size  Location     Type
 33489 ;;		None
 33490 ;; Auto vars:     Size  Location     Type
 33491 ;;		None
 33492 ;; Return value:  Size  Location     Type
 33493 ;;                  1    wreg      void 
 33494 ;; Registers used:
 33495 ;;		wreg, status,2, status,0, cstack
 33496 ;; Tracked objects:
 33497 ;;		On entry : 0/0
 33498 ;;		On exit  : 0/0
 33499 ;;		Unchanged: 0/0
 33500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33503 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33504 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33505 ;;Total ram usage:        2 bytes
 33506 ;; Hardware stack levels used:    1
 33507 ;; Hardware stack levels required when called:   14
 33508 ;; This function calls:
 33509 ;;		_TMR5_SetInterruptHandler
 33510 ;; This function is called by:
 33511 ;;		_SYSTEM_Initialize
 33512 ;; This function uses a non-reentrant model
 33513 ;;
 33514                           
 33515                           	psect	text65
 33516  01A3DE                     __ptext65:
 33517                           	opt stack 0
 33518  01A3DE                     _TMR5_Initialize:
 33519                           	opt stack 15
 33520                           
 33521                           ;tmr5.c: 69: T5GCON = 0x00;
 33522                           
 33523                           ;incstack = 0
 33524  01A3DE  0E00               	movlw	0
 33525  01A3E0  6EC4               	movwf	4036,c	;volatile
 33526                           
 33527                           ;tmr5.c: 72: T5GATE = 0x00;
 33528  01A3E2  0E00               	movlw	0
 33529  01A3E4  6EC5               	movwf	4037,c	;volatile
 33530                           
 33531                           ;tmr5.c: 75: T5CLK = 0x01;
 33532  01A3E6  0E01               	movlw	1
 33533  01A3E8  6EC6               	movwf	4038,c	;volatile
 33534                           
 33535                           ;tmr5.c: 78: TMR5H = 0x00;
 33536  01A3EA  0E00               	movlw	0
 33537  01A3EC  6EC2               	movwf	4034,c	;volatile
 33538                           
 33539                           ;tmr5.c: 81: TMR5L = 0x00;
 33540  01A3EE  0E00               	movlw	0
 33541  01A3F0  6EC1               	movwf	4033,c	;volatile
 33542                           
 33543                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 33544  01A3F2  50C1               	movf	4033,w,c	;volatile
 33545  01A3F4  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 33546  01A3F8  0101               	movlb	1	; () banked
 33547  01A3FA  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 33548  01A3FC  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 33549  01A400  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 33550  01A402  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 33551  01A404  0102               	movlb	2	; () banked
 33552  01A406  6F66               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33553  01A408  0101               	movlb	1	; () banked
 33554  01A40A  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 33555  01A40C  0102               	movlb	2	; () banked
 33556  01A40E  6F67               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33557                           
 33558                           ; BSR set to: 2
 33559                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 33560  01A410  010E               	movlb	14	; () banked
 33561  01A412  9938               	bcf	56,4,b	;volatile
 33562                           
 33563                           ; BSR set to: 14
 33564                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 33565  01A414  892E               	bsf	46,4,b	;volatile
 33566                           
 33567                           ; BSR set to: 14
 33568                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 33569  01A416  0EF6               	movlw	low _TMR5_DefaultInterruptHandler
 33570  01A418  0101               	movlb	1	; () banked
 33571  01A41A  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 33572  01A41C  0EB1               	movlw	high _TMR5_DefaultInterruptHandler
 33573  01A41E  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33574  01A420  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33575  01A422  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33576  01A424  EC92  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 33577                           
 33578                           ;tmr5.c: 96: T5CON = 0x13;
 33579  01A428  0E13               	movlw	19
 33580  01A42A  6EC3               	movwf	4035,c	;volatile
 33581  01A42C  0012               	return		;funcret
 33582  01A42E                     __end_of_TMR5_Initialize:
 33583                           	opt stack 0
 33584                           tosu	equ	0xFFF
 33585                           tosh	equ	0xFFE
 33586                           tosl	equ	0xFFD
 33587                           pclath	equ	0xFFA
 33588                           tblptru	equ	0xFF8
 33589                           tblptrh	equ	0xFF7
 33590                           tblptrl	equ	0xFF6
 33591                           tablat	equ	0xFF5
 33592                           prodh	equ	0xFF4
 33593                           prodl	equ	0xFF3
 33594                           intcon	equ	0xFF2
 33595                           indf0	equ	0xFEF
 33596                           postinc0	equ	0xFEE
 33597                           fsr0h	equ	0xFEA
 33598                           fsr0l	equ	0xFE9
 33599                           wreg	equ	0xFE8
 33600                           indf1	equ	0xFE7
 33601                           postdec1	equ	0xFE5
 33602                           plusw1	equ	0xFE3
 33603                           fsr1h	equ	0xFE2
 33604                           fsr1l	equ	0xFE1
 33605                           indf2	equ	0xFDF
 33606                           postinc2	equ	0xFDE
 33607                           postdec2	equ	0xFDD
 33608                           plusw2	equ	0xFDB
 33609                           fsr2h	equ	0xFDA
 33610                           fsr2l	equ	0xFD9
 33611                           status	equ	0xFD8
 33612                           
 33613 ;; *************** function _TMR5_SetInterruptHandler *****************
 33614 ;; Defined at:
 33615 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 33616 ;; Parameters:    Size  Location     Type
 33617 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33618 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 33619 ;; Auto vars:     Size  Location     Type
 33620 ;;		None
 33621 ;; Return value:  Size  Location     Type
 33622 ;;                  1    wreg      void 
 33623 ;; Registers used:
 33624 ;;		wreg, status,2, status,0
 33625 ;; Tracked objects:
 33626 ;;		On entry : 0/0
 33627 ;;		On exit  : 0/0
 33628 ;;		Unchanged: 0/0
 33629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33630 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33633 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33634 ;;Total ram usage:        3 bytes
 33635 ;; Hardware stack levels used:    1
 33636 ;; Hardware stack levels required when called:   13
 33637 ;; This function calls:
 33638 ;;		Nothing
 33639 ;; This function is called by:
 33640 ;;		_TMR5_Initialize
 33641 ;;		_main
 33642 ;; This function uses a non-reentrant model
 33643 ;;
 33644                           
 33645                           	psect	text66
 33646  01B124                     __ptext66:
 33647                           	opt stack 0
 33648  01B124                     _TMR5_SetInterruptHandler:
 33649                           	opt stack 17
 33650                           
 33651                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 33652                           
 33653                           ;incstack = 0
 33654  01B124  C117  F24A         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 33655  01B128  C118  F24B         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 33656  01B12C  C119  F24C         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 33657  01B130  0012               	return		;funcret
 33658  01B132                     __end_of_TMR5_SetInterruptHandler:
 33659                           	opt stack 0
 33660                           tosu	equ	0xFFF
 33661                           tosh	equ	0xFFE
 33662                           tosl	equ	0xFFD
 33663                           pclath	equ	0xFFA
 33664                           tblptru	equ	0xFF8
 33665                           tblptrh	equ	0xFF7
 33666                           tblptrl	equ	0xFF6
 33667                           tablat	equ	0xFF5
 33668                           prodh	equ	0xFF4
 33669                           prodl	equ	0xFF3
 33670                           intcon	equ	0xFF2
 33671                           indf0	equ	0xFEF
 33672                           postinc0	equ	0xFEE
 33673                           fsr0h	equ	0xFEA
 33674                           fsr0l	equ	0xFE9
 33675                           wreg	equ	0xFE8
 33676                           indf1	equ	0xFE7
 33677                           postdec1	equ	0xFE5
 33678                           plusw1	equ	0xFE3
 33679                           fsr1h	equ	0xFE2
 33680                           fsr1l	equ	0xFE1
 33681                           indf2	equ	0xFDF
 33682                           postinc2	equ	0xFDE
 33683                           postdec2	equ	0xFDD
 33684                           plusw2	equ	0xFDB
 33685                           fsr2h	equ	0xFDA
 33686                           fsr2l	equ	0xFD9
 33687                           status	equ	0xFD8
 33688                           
 33689 ;; *************** function _TMR4_Initialize *****************
 33690 ;; Defined at:
 33691 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 33692 ;; Parameters:    Size  Location     Type
 33693 ;;		None
 33694 ;; Auto vars:     Size  Location     Type
 33695 ;;		None
 33696 ;; Return value:  Size  Location     Type
 33697 ;;                  1    wreg      void 
 33698 ;; Registers used:
 33699 ;;		wreg, status,2, status,0, cstack
 33700 ;; Tracked objects:
 33701 ;;		On entry : 0/0
 33702 ;;		On exit  : 0/0
 33703 ;;		Unchanged: 0/0
 33704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33709 ;;Total ram usage:        0 bytes
 33710 ;; Hardware stack levels used:    1
 33711 ;; Hardware stack levels required when called:   14
 33712 ;; This function calls:
 33713 ;;		_TMR4_SetInterruptHandler
 33714 ;; This function is called by:
 33715 ;;		_SYSTEM_Initialize
 33716 ;; This function uses a non-reentrant model
 33717 ;;
 33718                           
 33719                           	psect	text67
 33720  01AC98                     __ptext67:
 33721                           	opt stack 0
 33722  01AC98                     _TMR4_Initialize:
 33723                           	opt stack 15
 33724                           
 33725                           ;tmr4.c: 69: T4CLKCON = 0x04;
 33726                           
 33727                           ;incstack = 0
 33728  01AC98  0E04               	movlw	4
 33729  01AC9A  6EB9               	movwf	4025,c	;volatile
 33730                           
 33731                           ;tmr4.c: 72: T4HLT = 0xA0;
 33732  01AC9C  0EA0               	movlw	160
 33733  01AC9E  6EB8               	movwf	4024,c	;volatile
 33734                           
 33735                           ;tmr4.c: 75: T4RST = 0x00;
 33736  01ACA0  0E00               	movlw	0
 33737  01ACA2  6EBA               	movwf	4026,c	;volatile
 33738                           
 33739                           ;tmr4.c: 78: T4PR = 0xE2;
 33740  01ACA4  0EE2               	movlw	226
 33741  01ACA6  6EB6               	movwf	4022,c	;volatile
 33742                           
 33743                           ;tmr4.c: 81: T4TMR = 0x00;
 33744  01ACA8  0E00               	movlw	0
 33745  01ACAA  6EB5               	movwf	4021,c	;volatile
 33746                           
 33747                           ;tmr4.c: 84: PIR5bits.TMR4IF = 0;
 33748  01ACAC  010E               	movlb	14	; () banked
 33749  01ACAE  9738               	bcf	56,3,b	;volatile
 33750                           
 33751                           ; BSR set to: 14
 33752                           ;tmr4.c: 87: PIE5bits.TMR4IE = 1;
 33753  01ACB0  872E               	bsf	46,3,b	;volatile
 33754                           
 33755                           ; BSR set to: 14
 33756                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 33757  01ACB2  0EF8               	movlw	low _TMR4_DefaultInterruptHandler
 33758  01ACB4  0101               	movlb	1	; () banked
 33759  01ACB6  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 33760  01ACB8  0EB1               	movlw	high _TMR4_DefaultInterruptHandler
 33761  01ACBA  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33762  01ACBC  0E01               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
 33763  01ACBE  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33764  01ACC0  EC99  F0D8         	call	_TMR4_SetInterruptHandler	;wreg free
 33765                           
 33766                           ;tmr4.c: 93: T4CON = 0xFF;
 33767  01ACC4  68B7               	setf	4023,c	;volatile
 33768  01ACC6  0012               	return		;funcret
 33769  01ACC8                     __end_of_TMR4_Initialize:
 33770                           	opt stack 0
 33771                           tosu	equ	0xFFF
 33772                           tosh	equ	0xFFE
 33773                           tosl	equ	0xFFD
 33774                           pclath	equ	0xFFA
 33775                           tblptru	equ	0xFF8
 33776                           tblptrh	equ	0xFF7
 33777                           tblptrl	equ	0xFF6
 33778                           tablat	equ	0xFF5
 33779                           prodh	equ	0xFF4
 33780                           prodl	equ	0xFF3
 33781                           intcon	equ	0xFF2
 33782                           indf0	equ	0xFEF
 33783                           postinc0	equ	0xFEE
 33784                           fsr0h	equ	0xFEA
 33785                           fsr0l	equ	0xFE9
 33786                           wreg	equ	0xFE8
 33787                           indf1	equ	0xFE7
 33788                           postdec1	equ	0xFE5
 33789                           plusw1	equ	0xFE3
 33790                           fsr1h	equ	0xFE2
 33791                           fsr1l	equ	0xFE1
 33792                           indf2	equ	0xFDF
 33793                           postinc2	equ	0xFDE
 33794                           postdec2	equ	0xFDD
 33795                           plusw2	equ	0xFDB
 33796                           fsr2h	equ	0xFDA
 33797                           fsr2l	equ	0xFD9
 33798                           status	equ	0xFD8
 33799                           
 33800 ;; *************** function _TMR4_SetInterruptHandler *****************
 33801 ;; Defined at:
 33802 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 33803 ;; Parameters:    Size  Location     Type
 33804 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33805 ;;		 -> writeEnergyToEEPROMCallback(1), TMR4_DefaultInterruptHandler(1), 
 33806 ;; Auto vars:     Size  Location     Type
 33807 ;;		None
 33808 ;; Return value:  Size  Location     Type
 33809 ;;                  1    wreg      void 
 33810 ;; Registers used:
 33811 ;;		wreg, status,2, status,0
 33812 ;; Tracked objects:
 33813 ;;		On entry : 0/0
 33814 ;;		On exit  : 0/0
 33815 ;;		Unchanged: 0/0
 33816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33817 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33820 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33821 ;;Total ram usage:        3 bytes
 33822 ;; Hardware stack levels used:    1
 33823 ;; Hardware stack levels required when called:   13
 33824 ;; This function calls:
 33825 ;;		Nothing
 33826 ;; This function is called by:
 33827 ;;		_TMR4_Initialize
 33828 ;;		_main
 33829 ;; This function uses a non-reentrant model
 33830 ;;
 33831                           
 33832                           	psect	text68
 33833  01B132                     __ptext68:
 33834                           	opt stack 0
 33835  01B132                     _TMR4_SetInterruptHandler:
 33836                           	opt stack 17
 33837                           
 33838                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
 33839                           
 33840                           ;incstack = 0
 33841  01B132  C117  F244         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 33842  01B136  C118  F245         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 33843  01B13A  C119  F246         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
 33844  01B13E  0012               	return		;funcret
 33845  01B140                     __end_of_TMR4_SetInterruptHandler:
 33846                           	opt stack 0
 33847                           tosu	equ	0xFFF
 33848                           tosh	equ	0xFFE
 33849                           tosl	equ	0xFFD
 33850                           pclath	equ	0xFFA
 33851                           tblptru	equ	0xFF8
 33852                           tblptrh	equ	0xFF7
 33853                           tblptrl	equ	0xFF6
 33854                           tablat	equ	0xFF5
 33855                           prodh	equ	0xFF4
 33856                           prodl	equ	0xFF3
 33857                           intcon	equ	0xFF2
 33858                           indf0	equ	0xFEF
 33859                           postinc0	equ	0xFEE
 33860                           fsr0h	equ	0xFEA
 33861                           fsr0l	equ	0xFE9
 33862                           wreg	equ	0xFE8
 33863                           indf1	equ	0xFE7
 33864                           postdec1	equ	0xFE5
 33865                           plusw1	equ	0xFE3
 33866                           fsr1h	equ	0xFE2
 33867                           fsr1l	equ	0xFE1
 33868                           indf2	equ	0xFDF
 33869                           postinc2	equ	0xFDE
 33870                           postdec2	equ	0xFDD
 33871                           plusw2	equ	0xFDB
 33872                           fsr2h	equ	0xFDA
 33873                           fsr2l	equ	0xFD9
 33874                           status	equ	0xFD8
 33875                           
 33876 ;; *************** function _PMD_Initialize *****************
 33877 ;; Defined at:
 33878 ;;		line 86 in file "mcc_generated_files/mcc.c"
 33879 ;; Parameters:    Size  Location     Type
 33880 ;;		None
 33881 ;; Auto vars:     Size  Location     Type
 33882 ;;		None
 33883 ;; Return value:  Size  Location     Type
 33884 ;;                  1    wreg      void 
 33885 ;; Registers used:
 33886 ;;		wreg, status,2
 33887 ;; Tracked objects:
 33888 ;;		On entry : 0/0
 33889 ;;		On exit  : 0/0
 33890 ;;		Unchanged: 0/0
 33891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33896 ;;Total ram usage:        0 bytes
 33897 ;; Hardware stack levels used:    1
 33898 ;; Hardware stack levels required when called:   13
 33899 ;; This function calls:
 33900 ;;		Nothing
 33901 ;; This function is called by:
 33902 ;;		_SYSTEM_Initialize
 33903 ;; This function uses a non-reentrant model
 33904 ;;
 33905                           
 33906                           	psect	text69
 33907  01AF3E                     __ptext69:
 33908                           	opt stack 0
 33909  01AF3E                     _PMD_Initialize:
 33910                           	opt stack 16
 33911                           
 33912                           ;mcc.c: 89: PMD0 = 0x1A;
 33913                           
 33914                           ;incstack = 0
 33915  01AF3E  0E1A               	movlw	26
 33916  01AF40  010E               	movlb	14	; () banked
 33917  01AF42  6F4C               	movwf	76,b	;volatile
 33918                           
 33919                           ;mcc.c: 91: PMD1 = 0x00;
 33920  01AF44  0E00               	movlw	0
 33921  01AF46  6F4D               	movwf	77,b	;volatile
 33922                           
 33923                           ;mcc.c: 93: PMD2 = 0x2E;
 33924  01AF48  0E2E               	movlw	46
 33925  01AF4A  6F4E               	movwf	78,b	;volatile
 33926                           
 33927                           ;mcc.c: 95: PMD3 = 0x4F;
 33928  01AF4C  0E4F               	movlw	79
 33929  01AF4E  6F4F               	movwf	79,b	;volatile
 33930                           
 33931                           ;mcc.c: 97: PMD4 = 0x7F;
 33932  01AF50  0E7F               	movlw	127
 33933  01AF52  6F50               	movwf	80,b	;volatile
 33934                           
 33935                           ;mcc.c: 99: PMD5 = 0x74;
 33936  01AF54  0E74               	movlw	116
 33937  01AF56  6F51               	movwf	81,b	;volatile
 33938                           
 33939                           ; BSR set to: 14
 33940  01AF58  0012               	return		;funcret
 33941  01AF5A                     __end_of_PMD_Initialize:
 33942                           	opt stack 0
 33943                           tosu	equ	0xFFF
 33944                           tosh	equ	0xFFE
 33945                           tosl	equ	0xFFD
 33946                           pclath	equ	0xFFA
 33947                           tblptru	equ	0xFF8
 33948                           tblptrh	equ	0xFF7
 33949                           tblptrl	equ	0xFF6
 33950                           tablat	equ	0xFF5
 33951                           prodh	equ	0xFF4
 33952                           prodl	equ	0xFF3
 33953                           intcon	equ	0xFF2
 33954                           indf0	equ	0xFEF
 33955                           postinc0	equ	0xFEE
 33956                           fsr0h	equ	0xFEA
 33957                           fsr0l	equ	0xFE9
 33958                           wreg	equ	0xFE8
 33959                           indf1	equ	0xFE7
 33960                           postdec1	equ	0xFE5
 33961                           plusw1	equ	0xFE3
 33962                           fsr1h	equ	0xFE2
 33963                           fsr1l	equ	0xFE1
 33964                           indf2	equ	0xFDF
 33965                           postinc2	equ	0xFDE
 33966                           postdec2	equ	0xFDD
 33967                           plusw2	equ	0xFDB
 33968                           fsr2h	equ	0xFDA
 33969                           fsr2l	equ	0xFD9
 33970                           status	equ	0xFD8
 33971                           
 33972 ;; *************** function _PIN_MANAGER_Initialize *****************
 33973 ;; Defined at:
 33974 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 33975 ;; Parameters:    Size  Location     Type
 33976 ;;		None
 33977 ;; Auto vars:     Size  Location     Type
 33978 ;;		None
 33979 ;; Return value:  Size  Location     Type
 33980 ;;                  1    wreg      void 
 33981 ;; Registers used:
 33982 ;;		wreg, status,2
 33983 ;; Tracked objects:
 33984 ;;		On entry : 0/0
 33985 ;;		On exit  : 0/0
 33986 ;;		Unchanged: 0/0
 33987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33992 ;;Total ram usage:        0 bytes
 33993 ;; Hardware stack levels used:    1
 33994 ;; Hardware stack levels required when called:   13
 33995 ;; This function calls:
 33996 ;;		Nothing
 33997 ;; This function is called by:
 33998 ;;		_SYSTEM_Initialize
 33999 ;; This function uses a non-reentrant model
 34000 ;;
 34001                           
 34002                           	psect	text70
 34003  0194A4                     __ptext70:
 34004                           	opt stack 0
 34005  0194A4                     _PIN_MANAGER_Initialize:
 34006                           	opt stack 16
 34007                           
 34008                           ;pin_manager.c: 62: LATE = 0x00;
 34009                           
 34010                           ; BSR set to: 14
 34011                           ;incstack = 0
 34012  0194A4  0E00               	movlw	0
 34013  0194A6  6E7D               	movwf	3965,c	;volatile
 34014                           
 34015                           ;pin_manager.c: 63: LATD = 0x00;
 34016  0194A8  0E00               	movlw	0
 34017  0194AA  6E7C               	movwf	3964,c	;volatile
 34018                           
 34019                           ;pin_manager.c: 64: LATA = 0x00;
 34020  0194AC  0E00               	movlw	0
 34021  0194AE  6E79               	movwf	3961,c	;volatile
 34022                           
 34023                           ;pin_manager.c: 65: LATF = 0x00;
 34024  0194B0  0E00               	movlw	0
 34025  0194B2  6E7E               	movwf	3966,c	;volatile
 34026                           
 34027                           ;pin_manager.c: 66: LATB = 0x00;
 34028  0194B4  0E00               	movlw	0
 34029  0194B6  6E7A               	movwf	3962,c	;volatile
 34030                           
 34031                           ;pin_manager.c: 67: LATG = 0x00;
 34032  0194B8  0E00               	movlw	0
 34033  0194BA  6E7F               	movwf	3967,c	;volatile
 34034                           
 34035                           ;pin_manager.c: 68: LATC = 0x00;
 34036  0194BC  0E00               	movlw	0
 34037  0194BE  6E7B               	movwf	3963,c	;volatile
 34038                           
 34039                           ;pin_manager.c: 69: LATH = 0x00;
 34040  0194C0  0E00               	movlw	0
 34041  0194C2  6E80               	movwf	3968,c	;volatile
 34042                           
 34043                           ;pin_manager.c: 74: TRISE = 0x04;
 34044  0194C4  0E04               	movlw	4
 34045  0194C6  6E85               	movwf	3973,c	;volatile
 34046                           
 34047                           ;pin_manager.c: 75: TRISF = 0x00;
 34048  0194C8  0E00               	movlw	0
 34049  0194CA  6E86               	movwf	3974,c	;volatile
 34050                           
 34051                           ;pin_manager.c: 76: TRISA = 0xBD;
 34052  0194CC  0EBD               	movlw	189
 34053  0194CE  6E81               	movwf	3969,c	;volatile
 34054                           
 34055                           ;pin_manager.c: 77: TRISG = 0x40;
 34056  0194D0  0E40               	movlw	64
 34057  0194D2  6E87               	movwf	3975,c	;volatile
 34058                           
 34059                           ;pin_manager.c: 78: TRISB = 0x00;
 34060  0194D4  0E00               	movlw	0
 34061  0194D6  6E82               	movwf	3970,c	;volatile
 34062                           
 34063                           ;pin_manager.c: 79: TRISH = 0x00;
 34064  0194D8  0E00               	movlw	0
 34065  0194DA  6E88               	movwf	3976,c	;volatile
 34066                           
 34067                           ;pin_manager.c: 80: TRISC = 0xC0;
 34068  0194DC  0EC0               	movlw	192
 34069  0194DE  6E83               	movwf	3971,c	;volatile
 34070                           
 34071                           ;pin_manager.c: 81: TRISD = 0x00;
 34072  0194E0  0E00               	movlw	0
 34073  0194E2  6E84               	movwf	3972,c	;volatile
 34074                           
 34075                           ;pin_manager.c: 86: ANSELD = 0x00;
 34076  0194E4  0E00               	movlw	0
 34077  0194E6  010E               	movlb	14	; () banked
 34078  0194E8  6FA7               	movwf	167,b	;volatile
 34079                           
 34080                           ;pin_manager.c: 87: ANSELB = 0x00;
 34081  0194EA  0E00               	movlw	0
 34082  0194EC  6F9A               	movwf	154,b	;volatile
 34083                           
 34084                           ;pin_manager.c: 88: ANSELE = 0x04;
 34085  0194EE  0E04               	movlw	4
 34086  0194F0  6FAF               	movwf	175,b	;volatile
 34087                           
 34088                           ;pin_manager.c: 89: ANSELG = 0x20;
 34089  0194F2  0E20               	movlw	32
 34090  0194F4  6FBC               	movwf	188,b	;volatile
 34091                           
 34092                           ;pin_manager.c: 90: ANSELF = 0x00;
 34093  0194F6  0E00               	movlw	0
 34094  0194F8  6FB4               	movwf	180,b	;volatile
 34095                           
 34096                           ;pin_manager.c: 91: ANSELA = 0x9D;
 34097  0194FA  0E9D               	movlw	157
 34098  0194FC  6F92               	movwf	146,b	;volatile
 34099                           
 34100                           ;pin_manager.c: 96: WPUD = 0x00;
 34101  0194FE  0E00               	movlw	0
 34102  019500  6FA6               	movwf	166,b	;volatile
 34103                           
 34104                           ;pin_manager.c: 97: WPUF = 0x00;
 34105  019502  0E00               	movlw	0
 34106  019504  6FB3               	movwf	179,b	;volatile
 34107                           
 34108                           ;pin_manager.c: 98: WPUE = 0x00;
 34109  019506  0E00               	movlw	0
 34110  019508  6FAE               	movwf	174,b	;volatile
 34111                           
 34112                           ;pin_manager.c: 99: WPUB = 0x00;
 34113  01950A  0E00               	movlw	0
 34114  01950C  6F99               	movwf	153,b	;volatile
 34115                           
 34116                           ;pin_manager.c: 100: WPUG = 0x00;
 34117  01950E  0E00               	movlw	0
 34118  019510  6FBB               	movwf	187,b	;volatile
 34119                           
 34120                           ;pin_manager.c: 101: WPUA = 0x00;
 34121  019512  0E00               	movlw	0
 34122  019514  6F91               	movwf	145,b	;volatile
 34123                           
 34124                           ;pin_manager.c: 102: WPUC = 0x00;
 34125  019516  0E00               	movlw	0
 34126  019518  6FA1               	movwf	161,b	;volatile
 34127                           
 34128                           ;pin_manager.c: 103: WPUH = 0x00;
 34129  01951A  0E00               	movlw	0
 34130  01951C  6FC0               	movwf	192,b	;volatile
 34131                           
 34132                           ;pin_manager.c: 108: ODCONE = 0x00;
 34133  01951E  0E00               	movlw	0
 34134  019520  6FAD               	movwf	173,b	;volatile
 34135                           
 34136                           ;pin_manager.c: 109: ODCONF = 0x01;
 34137  019522  0E01               	movlw	1
 34138  019524  6FB2               	movwf	178,b	;volatile
 34139                           
 34140                           ;pin_manager.c: 110: ODCONA = 0x00;
 34141  019526  0E00               	movlw	0
 34142  019528  6F90               	movwf	144,b	;volatile
 34143                           
 34144                           ;pin_manager.c: 111: ODCONG = 0x00;
 34145  01952A  0E00               	movlw	0
 34146  01952C  6FBA               	movwf	186,b	;volatile
 34147                           
 34148                           ;pin_manager.c: 112: ODCONB = 0x00;
 34149  01952E  0E00               	movlw	0
 34150  019530  6F98               	movwf	152,b	;volatile
 34151                           
 34152                           ;pin_manager.c: 113: ODCONH = 0x00;
 34153  019532  0E00               	movlw	0
 34154  019534  6FBF               	movwf	191,b	;volatile
 34155                           
 34156                           ;pin_manager.c: 114: ODCONC = 0x00;
 34157  019536  0E00               	movlw	0
 34158  019538  6FA0               	movwf	160,b	;volatile
 34159                           
 34160                           ;pin_manager.c: 115: ODCOND = 0x00;
 34161  01953A  0E00               	movlw	0
 34162  01953C  6FA5               	movwf	165,b	;volatile
 34163                           
 34164                           ; BSR set to: 14
 34165                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 34166  01953E  698F               	setf	143,b	;volatile
 34167                           
 34168                           ; BSR set to: 14
 34169                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 34170  019540  6997               	setf	151,b	;volatile
 34171                           
 34172                           ; BSR set to: 14
 34173                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 34174  019542  699F               	setf	159,b	;volatile
 34175                           
 34176                           ; BSR set to: 14
 34177                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 34178  019544  69A4               	setf	164,b	;volatile
 34179                           
 34180                           ; BSR set to: 14
 34181                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 34182  019546  69AC               	setf	172,b	;volatile
 34183                           
 34184                           ; BSR set to: 14
 34185                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 34186  019548  69B1               	setf	177,b	;volatile
 34187                           
 34188                           ; BSR set to: 14
 34189                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 34190  01954A  69B9               	setf	185,b	;volatile
 34191                           
 34192                           ; BSR set to: 14
 34193                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 34194  01954C  69BE               	setf	190,b	;volatile
 34195                           
 34196                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 34197  01954E  0E0E               	movlw	14
 34198  019550  6F89               	movwf	137,b	;volatile
 34199                           
 34200                           ;pin_manager.c: 137: SSP1CLKPPS = 0x17;
 34201  019552  0E17               	movlw	23
 34202  019554  6F19               	movwf	25,b	;volatile
 34203                           
 34204                           ;pin_manager.c: 138: INT0PPS = 0x05;
 34205  019556  0E05               	movlw	5
 34206  019558  010D               	movlb	13	; () banked
 34207  01955A  6FF0               	movwf	240,b	;volatile
 34208                           
 34209                           ;pin_manager.c: 139: RC6PPS = 0x1A;
 34210  01955C  0E1A               	movlw	26
 34211  01955E  010E               	movlb	14	; () banked
 34212  019560  6F68               	movwf	104,b	;volatile
 34213                           
 34214                           ;pin_manager.c: 140: RX2PPS = 0x36;
 34215  019562  0E36               	movlw	54
 34216  019564  6F11               	movwf	17,b	;volatile
 34217                           
 34218                           ;pin_manager.c: 141: RC7PPS = 0x19;
 34219  019566  0E19               	movlw	25
 34220  019568  6F69               	movwf	105,b	;volatile
 34221                           
 34222                           ;pin_manager.c: 142: SSP1DATPPS = 0x16;
 34223  01956A  0E16               	movlw	22
 34224  01956C  6F1A               	movwf	26,b	;volatile
 34225                           
 34226                           ; BSR set to: 14
 34227  01956E  0012               	return		;funcret
 34228  019570                     __end_of_PIN_MANAGER_Initialize:
 34229                           	opt stack 0
 34230                           tosu	equ	0xFFF
 34231                           tosh	equ	0xFFE
 34232                           tosl	equ	0xFFD
 34233                           pclath	equ	0xFFA
 34234                           tblptru	equ	0xFF8
 34235                           tblptrh	equ	0xFF7
 34236                           tblptrl	equ	0xFF6
 34237                           tablat	equ	0xFF5
 34238                           prodh	equ	0xFF4
 34239                           prodl	equ	0xFF3
 34240                           intcon	equ	0xFF2
 34241                           indf0	equ	0xFEF
 34242                           postinc0	equ	0xFEE
 34243                           fsr0h	equ	0xFEA
 34244                           fsr0l	equ	0xFE9
 34245                           wreg	equ	0xFE8
 34246                           indf1	equ	0xFE7
 34247                           postdec1	equ	0xFE5
 34248                           plusw1	equ	0xFE3
 34249                           fsr1h	equ	0xFE2
 34250                           fsr1l	equ	0xFE1
 34251                           indf2	equ	0xFDF
 34252                           postinc2	equ	0xFDE
 34253                           postdec2	equ	0xFDD
 34254                           plusw2	equ	0xFDB
 34255                           fsr2h	equ	0xFDA
 34256                           fsr2l	equ	0xFD9
 34257                           status	equ	0xFD8
 34258                           
 34259 ;; *************** function _OSCILLATOR_Initialize *****************
 34260 ;; Defined at:
 34261 ;;		line 68 in file "mcc_generated_files/mcc.c"
 34262 ;; Parameters:    Size  Location     Type
 34263 ;;		None
 34264 ;; Auto vars:     Size  Location     Type
 34265 ;;		None
 34266 ;; Return value:  Size  Location     Type
 34267 ;;                  1    wreg      void 
 34268 ;; Registers used:
 34269 ;;		wreg, status,2
 34270 ;; Tracked objects:
 34271 ;;		On entry : 0/0
 34272 ;;		On exit  : 0/0
 34273 ;;		Unchanged: 0/0
 34274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34279 ;;Total ram usage:        0 bytes
 34280 ;; Hardware stack levels used:    1
 34281 ;; Hardware stack levels required when called:   13
 34282 ;; This function calls:
 34283 ;;		Nothing
 34284 ;; This function is called by:
 34285 ;;		_SYSTEM_Initialize
 34286 ;; This function uses a non-reentrant model
 34287 ;;
 34288                           
 34289                           	psect	text71
 34290  01AF5A                     __ptext71:
 34291                           	opt stack 0
 34292  01AF5A                     _OSCILLATOR_Initialize:
 34293                           	opt stack 16
 34294                           
 34295                           ;mcc.c: 71: OSCCON1 = 0x20;
 34296                           
 34297                           ; BSR set to: 14
 34298                           ;incstack = 0
 34299  01AF5A  0E20               	movlw	32
 34300  01AF5C  010E               	movlb	14	; () banked
 34301  01AF5E  6F43               	movwf	67,b	;volatile
 34302                           
 34303                           ;mcc.c: 73: OSCCON3 = 0x00;
 34304  01AF60  0E00               	movlw	0
 34305  01AF62  6F45               	movwf	69,b	;volatile
 34306                           
 34307                           ;mcc.c: 75: OSCEN = 0x00;
 34308  01AF64  0E00               	movlw	0
 34309  01AF66  6F47               	movwf	71,b	;volatile
 34310                           
 34311                           ;mcc.c: 77: OSCFRQ = 0x02;
 34312  01AF68  0E02               	movlw	2
 34313  01AF6A  6F49               	movwf	73,b	;volatile
 34314                           
 34315                           ;mcc.c: 79: OSCTUNE = 0x00;
 34316  01AF6C  0E00               	movlw	0
 34317  01AF6E  6F48               	movwf	72,b	;volatile
 34318  01AF70                     
 34319                           ; BSR set to: 14
 34320                           
 34321                           ; BSR set to: 14
 34322                           ;mcc.c: 82: {
 34323  01AF70  B146               	btfsc	70,0,b	;volatile
 34324  01AF72  0012               	return	
 34325  01AF74  D7FD               	goto	l65
 34326  01AF76                     __end_of_OSCILLATOR_Initialize:
 34327                           	opt stack 0
 34328                           tosu	equ	0xFFF
 34329                           tosh	equ	0xFFE
 34330                           tosl	equ	0xFFD
 34331                           pclath	equ	0xFFA
 34332                           tblptru	equ	0xFF8
 34333                           tblptrh	equ	0xFF7
 34334                           tblptrl	equ	0xFF6
 34335                           tablat	equ	0xFF5
 34336                           prodh	equ	0xFF4
 34337                           prodl	equ	0xFF3
 34338                           intcon	equ	0xFF2
 34339                           indf0	equ	0xFEF
 34340                           postinc0	equ	0xFEE
 34341                           fsr0h	equ	0xFEA
 34342                           fsr0l	equ	0xFE9
 34343                           wreg	equ	0xFE8
 34344                           indf1	equ	0xFE7
 34345                           postdec1	equ	0xFE5
 34346                           plusw1	equ	0xFE3
 34347                           fsr1h	equ	0xFE2
 34348                           fsr1l	equ	0xFE1
 34349                           indf2	equ	0xFDF
 34350                           postinc2	equ	0xFDE
 34351                           postdec2	equ	0xFDD
 34352                           plusw2	equ	0xFDB
 34353                           fsr2h	equ	0xFDA
 34354                           fsr2l	equ	0xFD9
 34355                           status	equ	0xFD8
 34356                           
 34357 ;; *************** function _INTERRUPT_Initialize *****************
 34358 ;; Defined at:
 34359 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34360 ;; Parameters:    Size  Location     Type
 34361 ;;		None
 34362 ;; Auto vars:     Size  Location     Type
 34363 ;;		None
 34364 ;; Return value:  Size  Location     Type
 34365 ;;                  1    wreg      void 
 34366 ;; Registers used:
 34367 ;;		None
 34368 ;; Tracked objects:
 34369 ;;		On entry : 0/0
 34370 ;;		On exit  : 0/0
 34371 ;;		Unchanged: 0/0
 34372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34377 ;;Total ram usage:        0 bytes
 34378 ;; Hardware stack levels used:    1
 34379 ;; Hardware stack levels required when called:   13
 34380 ;; This function calls:
 34381 ;;		Nothing
 34382 ;; This function is called by:
 34383 ;;		_SYSTEM_Initialize
 34384 ;; This function uses a non-reentrant model
 34385 ;;
 34386                           
 34387                           	psect	text72
 34388  01AF76                     __ptext72:
 34389                           	opt stack 0
 34390  01AF76                     _INTERRUPT_Initialize:
 34391                           	opt stack 16
 34392                           
 34393                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 34394                           
 34395                           ; BSR set to: 14
 34396                           ;incstack = 0
 34397  01AF76  8AF2               	bsf	intcon,5,c	;volatile
 34398                           
 34399                           ;interrupt_manager.c: 60: IPR3bits.BCL1IP = 1;
 34400  01AF78  010E               	movlb	14	; () banked
 34401  01AF7A  8322               	bsf	34,1,b	;volatile
 34402                           
 34403                           ;interrupt_manager.c: 63: IPR3bits.SSP1IP = 1;
 34404  01AF7C  8122               	bsf	34,0,b	;volatile
 34405                           
 34406                           ;interrupt_manager.c: 66: IPR5bits.TMR4IP = 1;
 34407  01AF7E  8724               	bsf	36,3,b	;volatile
 34408                           
 34409                           ;interrupt_manager.c: 69: IPR2bits.HLVDIP = 1;
 34410  01AF80  8F21               	bsf	33,7,b	;volatile
 34411                           
 34412                           ;interrupt_manager.c: 72: IPR0bits.INT0IP = 1;
 34413  01AF82  811F               	bsf	31,0,b	;volatile
 34414                           
 34415                           ;interrupt_manager.c: 75: IPR3bits.RC2IP = 1;
 34416  01AF84  8F22               	bsf	34,7,b	;volatile
 34417                           
 34418                           ;interrupt_manager.c: 78: IPR5bits.TMR5IP = 1;
 34419  01AF86  8924               	bsf	36,4,b	;volatile
 34420                           
 34421                           ;interrupt_manager.c: 81: IPR1bits.ADTIP = 1;
 34422  01AF88  8320               	bsf	32,1,b	;volatile
 34423                           
 34424                           ;interrupt_manager.c: 85: IPR5bits.TMR6IP = 0;
 34425  01AF8A  9B24               	bcf	36,5,b	;volatile
 34426                           
 34427                           ;interrupt_manager.c: 88: IPR3bits.TX2IP = 0;
 34428  01AF8C  9D22               	bcf	34,6,b	;volatile
 34429                           
 34430                           ;interrupt_manager.c: 91: IPR5bits.TMR7IP = 0;
 34431  01AF8E  9D24               	bcf	36,6,b	;volatile
 34432                           
 34433                           ; BSR set to: 14
 34434  01AF90  0012               	return		;funcret
 34435  01AF92                     __end_of_INTERRUPT_Initialize:
 34436                           	opt stack 0
 34437                           tosu	equ	0xFFF
 34438                           tosh	equ	0xFFE
 34439                           tosl	equ	0xFFD
 34440                           pclath	equ	0xFFA
 34441                           tblptru	equ	0xFF8
 34442                           tblptrh	equ	0xFF7
 34443                           tblptrl	equ	0xFF6
 34444                           tablat	equ	0xFF5
 34445                           prodh	equ	0xFF4
 34446                           prodl	equ	0xFF3
 34447                           intcon	equ	0xFF2
 34448                           indf0	equ	0xFEF
 34449                           postinc0	equ	0xFEE
 34450                           fsr0h	equ	0xFEA
 34451                           fsr0l	equ	0xFE9
 34452                           wreg	equ	0xFE8
 34453                           indf1	equ	0xFE7
 34454                           postdec1	equ	0xFE5
 34455                           plusw1	equ	0xFE3
 34456                           fsr1h	equ	0xFE2
 34457                           fsr1l	equ	0xFE1
 34458                           indf2	equ	0xFDF
 34459                           postinc2	equ	0xFDE
 34460                           postdec2	equ	0xFDD
 34461                           plusw2	equ	0xFDB
 34462                           fsr2h	equ	0xFDA
 34463                           fsr2l	equ	0xFD9
 34464                           status	equ	0xFD8
 34465                           
 34466 ;; *************** function _I2C1_Initialize *****************
 34467 ;; Defined at:
 34468 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 34469 ;; Parameters:    Size  Location     Type
 34470 ;;		None
 34471 ;; Auto vars:     Size  Location     Type
 34472 ;;		None
 34473 ;; Return value:  Size  Location     Type
 34474 ;;                  1    wreg      void 
 34475 ;; Registers used:
 34476 ;;		wreg, status,2, status,0
 34477 ;; Tracked objects:
 34478 ;;		On entry : 0/0
 34479 ;;		On exit  : 0/0
 34480 ;;		Unchanged: 0/0
 34481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34486 ;;Total ram usage:        0 bytes
 34487 ;; Hardware stack levels used:    1
 34488 ;; Hardware stack levels required when called:   13
 34489 ;; This function calls:
 34490 ;;		Nothing
 34491 ;; This function is called by:
 34492 ;;		_SYSTEM_Initialize
 34493 ;; This function uses a non-reentrant model
 34494 ;;
 34495                           
 34496                           	psect	text73
 34497  01AAFE                     __ptext73:
 34498                           	opt stack 0
 34499  01AAFE                     _I2C1_Initialize:
 34500                           	opt stack 16
 34501                           
 34502                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
 34503                           
 34504                           ; BSR set to: 14
 34505                           ;incstack = 0
 34506  01AAFE  0E8E               	movlw	low _i2c1_tr_queue
 34507  01AB00  0102               	movlb	2	; () banked
 34508  01AB02  6F0B               	movwf	(_i2c1_object+2)& (0+255),b
 34509  01AB04  0E02               	movlw	high _i2c1_tr_queue
 34510  01AB06  6F0C               	movwf	(_i2c1_object+3)& (0+255),b
 34511                           
 34512                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
 34513  01AB08  0E8E               	movlw	low _i2c1_tr_queue
 34514  01AB0A  6F09               	movwf	_i2c1_object& (0+255),b
 34515  01AB0C  0E02               	movlw	high _i2c1_tr_queue
 34516  01AB0E  6F0A               	movwf	(_i2c1_object+1)& (0+255),b
 34517                           
 34518                           ; BSR set to: 2
 34519                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
 34520  01AB10  830D               	bsf	(_i2c1_object+4)& (0+255),1,b
 34521                           
 34522                           ; BSR set to: 2
 34523                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
 34524  01AB12  910D               	bcf	(_i2c1_object+4)& (0+255),0,b
 34525                           
 34526                           ; BSR set to: 2
 34527                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
 34528  01AB14  0E00               	movlw	0
 34529  01AB16  6F0F               	movwf	(_i2c1_object+6)& (0+255),b
 34530                           
 34531                           ; BSR set to: 2
 34532                           ;i2c1.c: 208: SSP1STAT = 0x00;
 34533  01AB18  0E00               	movlw	0
 34534  01AB1A  6E94               	movwf	3988,c	;volatile
 34535                           
 34536                           ; BSR set to: 2
 34537                           ;i2c1.c: 210: SSP1CON1 = 0x28;
 34538  01AB1C  0E28               	movlw	40
 34539  01AB1E  6E95               	movwf	3989,c	;volatile
 34540                           
 34541                           ; BSR set to: 2
 34542                           ;i2c1.c: 212: SSP1CON3 = 0x00;
 34543  01AB20  0E00               	movlw	0
 34544  01AB22  6E97               	movwf	3991,c	;volatile
 34545                           
 34546                           ; BSR set to: 2
 34547                           ;i2c1.c: 214: SSP1ADD = 0x3F;
 34548  01AB24  0E3F               	movlw	63
 34549  01AB26  6E92               	movwf	3986,c	;volatile
 34550                           
 34551                           ; BSR set to: 2
 34552                           ;i2c1.c: 217: PIR3bits.SSP1IF = 0;
 34553  01AB28  010E               	movlb	14	; () banked
 34554  01AB2A  9136               	bcf	54,0,b	;volatile
 34555                           
 34556                           ; BSR set to: 14
 34557                           ;i2c1.c: 218: PIR3bits.BCL1IF = 0;
 34558  01AB2C  9336               	bcf	54,1,b	;volatile
 34559                           
 34560                           ; BSR set to: 14
 34561                           ;i2c1.c: 221: PIE3bits.SSP1IE = 1;
 34562  01AB2E  812C               	bsf	44,0,b	;volatile
 34563                           
 34564                           ; BSR set to: 14
 34565                           ;i2c1.c: 222: PIE3bits.BCL1IE = 1;
 34566  01AB30  832C               	bsf	44,1,b	;volatile
 34567                           
 34568                           ; BSR set to: 14
 34569  01AB32  0012               	return		;funcret
 34570  01AB34                     __end_of_I2C1_Initialize:
 34571                           	opt stack 0
 34572                           tosu	equ	0xFFF
 34573                           tosh	equ	0xFFE
 34574                           tosl	equ	0xFFD
 34575                           pclath	equ	0xFFA
 34576                           tblptru	equ	0xFF8
 34577                           tblptrh	equ	0xFF7
 34578                           tblptrl	equ	0xFF6
 34579                           tablat	equ	0xFF5
 34580                           prodh	equ	0xFF4
 34581                           prodl	equ	0xFF3
 34582                           intcon	equ	0xFF2
 34583                           indf0	equ	0xFEF
 34584                           postinc0	equ	0xFEE
 34585                           fsr0h	equ	0xFEA
 34586                           fsr0l	equ	0xFE9
 34587                           wreg	equ	0xFE8
 34588                           indf1	equ	0xFE7
 34589                           postdec1	equ	0xFE5
 34590                           plusw1	equ	0xFE3
 34591                           fsr1h	equ	0xFE2
 34592                           fsr1l	equ	0xFE1
 34593                           indf2	equ	0xFDF
 34594                           postinc2	equ	0xFDE
 34595                           postdec2	equ	0xFDD
 34596                           plusw2	equ	0xFDB
 34597                           fsr2h	equ	0xFDA
 34598                           fsr2l	equ	0xFD9
 34599                           status	equ	0xFD8
 34600                           
 34601 ;; *************** function _HLVD_Initialize *****************
 34602 ;; Defined at:
 34603 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 34604 ;; Parameters:    Size  Location     Type
 34605 ;;		None
 34606 ;; Auto vars:     Size  Location     Type
 34607 ;;		None
 34608 ;; Return value:  Size  Location     Type
 34609 ;;                  1    wreg      void 
 34610 ;; Registers used:
 34611 ;;		wreg, status,2
 34612 ;; Tracked objects:
 34613 ;;		On entry : 0/0
 34614 ;;		On exit  : 0/0
 34615 ;;		Unchanged: 0/0
 34616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34621 ;;Total ram usage:        0 bytes
 34622 ;; Hardware stack levels used:    1
 34623 ;; Hardware stack levels required when called:   13
 34624 ;; This function calls:
 34625 ;;		Nothing
 34626 ;; This function is called by:
 34627 ;;		_SYSTEM_Initialize
 34628 ;; This function uses a non-reentrant model
 34629 ;;
 34630                           
 34631                           	psect	text74
 34632  01B0EA                     __ptext74:
 34633                           	opt stack 0
 34634  01B0EA                     _HLVD_Initialize:
 34635                           	opt stack 16
 34636                           
 34637                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 34638                           
 34639                           ; BSR set to: 14
 34640                           ;incstack = 0
 34641  01B0EA  0E07               	movlw	7
 34642  01B0EC  010E               	movlb	14	; () banked
 34643  01B0EE  6FC3               	movwf	195,b	;volatile
 34644                           
 34645                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 34646  01B0F0  0E81               	movlw	129
 34647  01B0F2  6FC2               	movwf	194,b	;volatile
 34648                           
 34649                           ; BSR set to: 14
 34650                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 34651  01B0F4  9F35               	bcf	53,7,b	;volatile
 34652                           
 34653                           ; BSR set to: 14
 34654                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 34655  01B0F6  8F2B               	bsf	43,7,b	;volatile
 34656                           
 34657                           ; BSR set to: 14
 34658  01B0F8  0012               	return		;funcret
 34659  01B0FA                     __end_of_HLVD_Initialize:
 34660                           	opt stack 0
 34661                           tosu	equ	0xFFF
 34662                           tosh	equ	0xFFE
 34663                           tosl	equ	0xFFD
 34664                           pclath	equ	0xFFA
 34665                           tblptru	equ	0xFF8
 34666                           tblptrh	equ	0xFF7
 34667                           tblptrl	equ	0xFF6
 34668                           tablat	equ	0xFF5
 34669                           prodh	equ	0xFF4
 34670                           prodl	equ	0xFF3
 34671                           intcon	equ	0xFF2
 34672                           indf0	equ	0xFEF
 34673                           postinc0	equ	0xFEE
 34674                           fsr0h	equ	0xFEA
 34675                           fsr0l	equ	0xFE9
 34676                           wreg	equ	0xFE8
 34677                           indf1	equ	0xFE7
 34678                           postdec1	equ	0xFE5
 34679                           plusw1	equ	0xFE3
 34680                           fsr1h	equ	0xFE2
 34681                           fsr1l	equ	0xFE1
 34682                           indf2	equ	0xFDF
 34683                           postinc2	equ	0xFDE
 34684                           postdec2	equ	0xFDD
 34685                           plusw2	equ	0xFDB
 34686                           fsr2h	equ	0xFDA
 34687                           fsr2l	equ	0xFD9
 34688                           status	equ	0xFD8
 34689                           
 34690 ;; *************** function _FVR_Initialize *****************
 34691 ;; Defined at:
 34692 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34693 ;; Parameters:    Size  Location     Type
 34694 ;;		None
 34695 ;; Auto vars:     Size  Location     Type
 34696 ;;		None
 34697 ;; Return value:  Size  Location     Type
 34698 ;;                  1    wreg      void 
 34699 ;; Registers used:
 34700 ;;		wreg, status,2
 34701 ;; Tracked objects:
 34702 ;;		On entry : 0/0
 34703 ;;		On exit  : 0/0
 34704 ;;		Unchanged: 0/0
 34705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34710 ;;Total ram usage:        0 bytes
 34711 ;; Hardware stack levels used:    1
 34712 ;; Hardware stack levels required when called:   13
 34713 ;; This function calls:
 34714 ;;		Nothing
 34715 ;; This function is called by:
 34716 ;;		_SYSTEM_Initialize
 34717 ;; This function uses a non-reentrant model
 34718 ;;
 34719                           
 34720                           	psect	text75
 34721  01B1BC                     __ptext75:
 34722                           	opt stack 0
 34723  01B1BC                     _FVR_Initialize:
 34724                           	opt stack 16
 34725                           
 34726                           ;fvr.c: 61: FVRCON = 0xA6;
 34727                           
 34728                           ; BSR set to: 14
 34729                           ;incstack = 0
 34730  01B1BC  0EA6               	movlw	166
 34731  01B1BE  010E               	movlb	14	; () banked
 34732  01B1C0  6FC4               	movwf	196,b	;volatile
 34733                           
 34734                           ; BSR set to: 14
 34735  01B1C2  0012               	return		;funcret
 34736  01B1C4                     __end_of_FVR_Initialize:
 34737                           	opt stack 0
 34738                           tosu	equ	0xFFF
 34739                           tosh	equ	0xFFE
 34740                           tosl	equ	0xFFD
 34741                           pclath	equ	0xFFA
 34742                           tblptru	equ	0xFF8
 34743                           tblptrh	equ	0xFF7
 34744                           tblptrl	equ	0xFF6
 34745                           tablat	equ	0xFF5
 34746                           prodh	equ	0xFF4
 34747                           prodl	equ	0xFF3
 34748                           intcon	equ	0xFF2
 34749                           indf0	equ	0xFEF
 34750                           postinc0	equ	0xFEE
 34751                           fsr0h	equ	0xFEA
 34752                           fsr0l	equ	0xFE9
 34753                           wreg	equ	0xFE8
 34754                           indf1	equ	0xFE7
 34755                           postdec1	equ	0xFE5
 34756                           plusw1	equ	0xFE3
 34757                           fsr1h	equ	0xFE2
 34758                           fsr1l	equ	0xFE1
 34759                           indf2	equ	0xFDF
 34760                           postinc2	equ	0xFDE
 34761                           postdec2	equ	0xFDD
 34762                           plusw2	equ	0xFDB
 34763                           fsr2h	equ	0xFDA
 34764                           fsr2l	equ	0xFD9
 34765                           status	equ	0xFD8
 34766                           
 34767 ;; *************** function _EXT_INT_Initialize *****************
 34768 ;; Defined at:
 34769 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 34770 ;; Parameters:    Size  Location     Type
 34771 ;;		None
 34772 ;; Auto vars:     Size  Location     Type
 34773 ;;		None
 34774 ;; Return value:  Size  Location     Type
 34775 ;;                  1    wreg      void 
 34776 ;; Registers used:
 34777 ;;		wreg, status,2, status,0, cstack
 34778 ;; Tracked objects:
 34779 ;;		On entry : 0/0
 34780 ;;		On exit  : 0/0
 34781 ;;		Unchanged: 0/0
 34782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34787 ;;Total ram usage:        0 bytes
 34788 ;; Hardware stack levels used:    1
 34789 ;; Hardware stack levels required when called:   14
 34790 ;; This function calls:
 34791 ;;		_INT0_SetInterruptHandler
 34792 ;; This function is called by:
 34793 ;;		_SYSTEM_Initialize
 34794 ;; This function uses a non-reentrant model
 34795 ;;
 34796                           
 34797                           	psect	text76
 34798  01AF02                     __ptext76:
 34799                           	opt stack 0
 34800  01AF02                     _EXT_INT_Initialize:
 34801                           	opt stack 15
 34802                           
 34803                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 34804                           
 34805                           ; BSR set to: 14
 34806                           ;incstack = 0
 34807  01AF02  010E               	movlb	14	; () banked
 34808  01AF04  9133               	bcf	51,0,b	;volatile
 34809                           
 34810                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 34811  01AF06  80F2               	bsf	intcon,0,c	;volatile
 34812                           
 34813                           ; BSR set to: 14
 34814                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 34815  01AF08  0EFA               	movlw	low _INT0_DefaultInterruptHandler
 34816  01AF0A  0101               	movlb	1	; () banked
 34817  01AF0C  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 34818  01AF0E  0EB1               	movlw	high _INT0_DefaultInterruptHandler
 34819  01AF10  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 34820  01AF12  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34821  01AF14  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 34822  01AF16  ECA0  F0D8         	call	_INT0_SetInterruptHandler	;wreg free
 34823                           
 34824                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 34825  01AF1A  010E               	movlb	14	; () banked
 34826  01AF1C  8129               	bsf	41,0,b	;volatile
 34827                           
 34828                           ; BSR set to: 14
 34829  01AF1E  0012               	return		;funcret
 34830  01AF20                     __end_of_EXT_INT_Initialize:
 34831                           	opt stack 0
 34832                           tosu	equ	0xFFF
 34833                           tosh	equ	0xFFE
 34834                           tosl	equ	0xFFD
 34835                           pclath	equ	0xFFA
 34836                           tblptru	equ	0xFF8
 34837                           tblptrh	equ	0xFF7
 34838                           tblptrl	equ	0xFF6
 34839                           tablat	equ	0xFF5
 34840                           prodh	equ	0xFF4
 34841                           prodl	equ	0xFF3
 34842                           intcon	equ	0xFF2
 34843                           indf0	equ	0xFEF
 34844                           postinc0	equ	0xFEE
 34845                           fsr0h	equ	0xFEA
 34846                           fsr0l	equ	0xFE9
 34847                           wreg	equ	0xFE8
 34848                           indf1	equ	0xFE7
 34849                           postdec1	equ	0xFE5
 34850                           plusw1	equ	0xFE3
 34851                           fsr1h	equ	0xFE2
 34852                           fsr1l	equ	0xFE1
 34853                           indf2	equ	0xFDF
 34854                           postinc2	equ	0xFDE
 34855                           postdec2	equ	0xFDD
 34856                           plusw2	equ	0xFDB
 34857                           fsr2h	equ	0xFDA
 34858                           fsr2l	equ	0xFD9
 34859                           status	equ	0xFD8
 34860                           
 34861 ;; *************** function _INT0_SetInterruptHandler *****************
 34862 ;; Defined at:
 34863 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 34864 ;; Parameters:    Size  Location     Type
 34865 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 34866 ;;		 -> dimmingOffTimeCallback(1), INT0_DefaultInterruptHandler(1), 
 34867 ;; Auto vars:     Size  Location     Type
 34868 ;;		None
 34869 ;; Return value:  Size  Location     Type
 34870 ;;                  1    wreg      void 
 34871 ;; Registers used:
 34872 ;;		wreg, status,2, status,0
 34873 ;; Tracked objects:
 34874 ;;		On entry : 0/0
 34875 ;;		On exit  : 0/0
 34876 ;;		Unchanged: 0/0
 34877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34878 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34881 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34882 ;;Total ram usage:        3 bytes
 34883 ;; Hardware stack levels used:    1
 34884 ;; Hardware stack levels required when called:   13
 34885 ;; This function calls:
 34886 ;;		Nothing
 34887 ;; This function is called by:
 34888 ;;		_EXT_INT_Initialize
 34889 ;;		_main
 34890 ;; This function uses a non-reentrant model
 34891 ;;
 34892                           
 34893                           	psect	text77
 34894  01B140                     __ptext77:
 34895                           	opt stack 0
 34896  01B140                     _INT0_SetInterruptHandler:
 34897                           	opt stack 15
 34898                           
 34899                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 34900                           
 34901                           ; BSR set to: 14
 34902                           ;incstack = 0
 34903  01B140  C117  F247         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 34904  01B144  C118  F248         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 34905  01B148  C119  F249         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 34906  01B14C  0012               	return		;funcret
 34907  01B14E                     __end_of_INT0_SetInterruptHandler:
 34908                           	opt stack 0
 34909                           tosu	equ	0xFFF
 34910                           tosh	equ	0xFFE
 34911                           tosl	equ	0xFFD
 34912                           pclath	equ	0xFFA
 34913                           tblptru	equ	0xFF8
 34914                           tblptrh	equ	0xFF7
 34915                           tblptrl	equ	0xFF6
 34916                           tablat	equ	0xFF5
 34917                           prodh	equ	0xFF4
 34918                           prodl	equ	0xFF3
 34919                           intcon	equ	0xFF2
 34920                           indf0	equ	0xFEF
 34921                           postinc0	equ	0xFEE
 34922                           fsr0h	equ	0xFEA
 34923                           fsr0l	equ	0xFE9
 34924                           wreg	equ	0xFE8
 34925                           indf1	equ	0xFE7
 34926                           postdec1	equ	0xFE5
 34927                           plusw1	equ	0xFE3
 34928                           fsr1h	equ	0xFE2
 34929                           fsr1l	equ	0xFE1
 34930                           indf2	equ	0xFDF
 34931                           postinc2	equ	0xFDE
 34932                           postdec2	equ	0xFDD
 34933                           plusw2	equ	0xFDB
 34934                           fsr2h	equ	0xFDA
 34935                           fsr2l	equ	0xFD9
 34936                           status	equ	0xFD8
 34937                           
 34938 ;; *************** function _EUSART2_Initialize *****************
 34939 ;; Defined at:
 34940 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 34941 ;; Parameters:    Size  Location     Type
 34942 ;;		None
 34943 ;; Auto vars:     Size  Location     Type
 34944 ;;		None
 34945 ;; Return value:  Size  Location     Type
 34946 ;;                  1    wreg      void 
 34947 ;; Registers used:
 34948 ;;		wreg, status,2, status,0, cstack
 34949 ;; Tracked objects:
 34950 ;;		On entry : 0/0
 34951 ;;		On exit  : 0/0
 34952 ;;		Unchanged: 0/0
 34953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34958 ;;Total ram usage:        0 bytes
 34959 ;; Hardware stack levels used:    1
 34960 ;; Hardware stack levels required when called:   14
 34961 ;; This function calls:
 34962 ;;		_EUSART2_SetRxInterruptHandler
 34963 ;;		_EUSART2_SetTxInterruptHandler
 34964 ;; This function is called by:
 34965 ;;		_SYSTEM_Initialize
 34966 ;; This function uses a non-reentrant model
 34967 ;;
 34968                           
 34969                           	psect	text78
 34970  01A068                     __ptext78:
 34971                           	opt stack 0
 34972  01A068                     _EUSART2_Initialize:
 34973                           	opt stack 15
 34974                           
 34975                           ;eusart2.c: 83: PIE3bits.RC2IE = 0;
 34976                           
 34977                           ;incstack = 0
 34978  01A068  010E               	movlb	14	; () banked
 34979  01A06A  9F2C               	bcf	44,7,b	;volatile
 34980                           
 34981                           ; BSR set to: 14
 34982                           ;eusart2.c: 84: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 34983  01A06C  0E70               	movlw	low _EUSART2_Receive_ISR
 34984  01A06E  0101               	movlb	1	; () banked
 34985  01A070  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 34986  01A072  0E95               	movlw	high _EUSART2_Receive_ISR
 34987  01A074  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 34988  01A076  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 34989  01A078  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 34990  01A07A  ECAE  F0D8         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 34991                           
 34992                           ;eusart2.c: 85: PIE3bits.TX2IE = 0;
 34993  01A07E  010E               	movlb	14	; () banked
 34994  01A080  9D2C               	bcf	44,6,b	;volatile
 34995                           
 34996                           ;eusart2.c: 86: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 34997  01A082  0E34               	movlw	low _EUSART2_Transmit_ISR
 34998  01A084  0101               	movlb	1	; () banked
 34999  01A086  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 35000  01A088  0EAB               	movlw	high _EUSART2_Transmit_ISR
 35001  01A08A  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 35002  01A08C  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 35003  01A08E  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 35004  01A090  ECA7  F0D8         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 35005                           
 35006                           ;eusart2.c: 90: BAUD2CON = 0x08;
 35007  01A094  0E08               	movlw	8
 35008  01A096  010E               	movlb	14	; () banked
 35009  01A098  6FF7               	movwf	247,b	;volatile
 35010                           
 35011                           ; BSR set to: 14
 35012                           ;eusart2.c: 93: RC2STA = 0x90;
 35013  01A09A  0E90               	movlw	144
 35014  01A09C  6FF5               	movwf	245,b	;volatile
 35015                           
 35016                           ; BSR set to: 14
 35017                           ;eusart2.c: 96: TX2STA = 0x24;
 35018  01A09E  0E24               	movlw	36
 35019  01A0A0  6FF6               	movwf	246,b	;volatile
 35020                           
 35021                           ; BSR set to: 14
 35022                           ;eusart2.c: 99: SP2BRGL = 0x8A;
 35023  01A0A2  0E8A               	movlw	138
 35024  01A0A4  6FF3               	movwf	243,b	;volatile
 35025                           
 35026                           ; BSR set to: 14
 35027                           ;eusart2.c: 102: SP2BRGH = 0x00;
 35028  01A0A6  0E00               	movlw	0
 35029  01A0A8  6FF4               	movwf	244,b	;volatile
 35030                           
 35031                           ; BSR set to: 14
 35032                           ;eusart2.c: 106: eusart2TxHead = 0;
 35033  01A0AA  0E00               	movlw	0
 35034  01A0AC  0101               	movlb	1	; () banked
 35035  01A0AE  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 35036                           
 35037                           ; BSR set to: 1
 35038                           ;eusart2.c: 107: eusart2TxTail = 0;
 35039  01A0B0  0E00               	movlw	0
 35040  01A0B2  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 35041                           
 35042                           ; BSR set to: 1
 35043                           ;eusart2.c: 108: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 35044  01A0B4  0E80               	movlw	128
 35045  01A0B6  6FDF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 35046                           
 35047                           ; BSR set to: 1
 35048                           ;eusart2.c: 110: eusart2RxHead = 0;
 35049  01A0B8  0E00               	movlw	0
 35050  01A0BA  0100               	movlb	0	; () banked
 35051  01A0BC  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 35052                           
 35053                           ; BSR set to: 0
 35054                           ;eusart2.c: 111: eusart2RxTail = 0;
 35055  01A0BE  0E00               	movlw	0
 35056  01A0C0  0101               	movlb	1	; () banked
 35057  01A0C2  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 35058                           
 35059                           ; BSR set to: 1
 35060                           ;eusart2.c: 112: eusart2RxCount = 0;
 35061  01A0C4  0E00               	movlw	0
 35062  01A0C6  0102               	movlb	2	; () banked
 35063  01A0C8  6F72               	movwf	_eusart2RxCount& (0+255),b	;volatile
 35064                           
 35065                           ; BSR set to: 2
 35066                           ;eusart2.c: 115: PIE3bits.RC2IE = 1;
 35067  01A0CA  010E               	movlb	14	; () banked
 35068  01A0CC  8F2C               	bsf	44,7,b	;volatile
 35069                           
 35070                           ; BSR set to: 14
 35071  01A0CE  0012               	return		;funcret
 35072  01A0D0                     __end_of_EUSART2_Initialize:
 35073                           	opt stack 0
 35074                           tosu	equ	0xFFF
 35075                           tosh	equ	0xFFE
 35076                           tosl	equ	0xFFD
 35077                           pclath	equ	0xFFA
 35078                           tblptru	equ	0xFF8
 35079                           tblptrh	equ	0xFF7
 35080                           tblptrl	equ	0xFF6
 35081                           tablat	equ	0xFF5
 35082                           prodh	equ	0xFF4
 35083                           prodl	equ	0xFF3
 35084                           intcon	equ	0xFF2
 35085                           indf0	equ	0xFEF
 35086                           postinc0	equ	0xFEE
 35087                           fsr0h	equ	0xFEA
 35088                           fsr0l	equ	0xFE9
 35089                           wreg	equ	0xFE8
 35090                           indf1	equ	0xFE7
 35091                           postdec1	equ	0xFE5
 35092                           plusw1	equ	0xFE3
 35093                           fsr1h	equ	0xFE2
 35094                           fsr1l	equ	0xFE1
 35095                           indf2	equ	0xFDF
 35096                           postinc2	equ	0xFDE
 35097                           postdec2	equ	0xFDD
 35098                           plusw2	equ	0xFDB
 35099                           fsr2h	equ	0xFDA
 35100                           fsr2l	equ	0xFD9
 35101                           status	equ	0xFD8
 35102                           
 35103 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 35104 ;; Defined at:
 35105 ;;		line 270 in file "mcc_generated_files/eusart2.c"
 35106 ;; Parameters:    Size  Location     Type
 35107 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 35108 ;;		 -> EUSART2_Transmit_ISR(1), 
 35109 ;; Auto vars:     Size  Location     Type
 35110 ;;		None
 35111 ;; Return value:  Size  Location     Type
 35112 ;;                  1    wreg      void 
 35113 ;; Registers used:
 35114 ;;		wreg, status,2, status,0
 35115 ;; Tracked objects:
 35116 ;;		On entry : 0/0
 35117 ;;		On exit  : 0/0
 35118 ;;		Unchanged: 0/0
 35119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35120 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35123 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35124 ;;Total ram usage:        3 bytes
 35125 ;; Hardware stack levels used:    1
 35126 ;; Hardware stack levels required when called:   13
 35127 ;; This function calls:
 35128 ;;		Nothing
 35129 ;; This function is called by:
 35130 ;;		_EUSART2_Initialize
 35131 ;; This function uses a non-reentrant model
 35132 ;;
 35133                           
 35134                           	psect	text79
 35135  01B14E                     __ptext79:
 35136                           	opt stack 0
 35137  01B14E                     _EUSART2_SetTxInterruptHandler:
 35138                           	opt stack 15
 35139                           
 35140                           ;eusart2.c: 271: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 35141                           
 35142                           ; BSR set to: 14
 35143                           ;incstack = 0
 35144  01B14E  C117  F259         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 35145  01B152  C118  F25A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 35146  01B156  C119  F25B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 35147  01B15A  0012               	return		;funcret
 35148  01B15C                     __end_of_EUSART2_SetTxInterruptHandler:
 35149                           	opt stack 0
 35150                           tosu	equ	0xFFF
 35151                           tosh	equ	0xFFE
 35152                           tosl	equ	0xFFD
 35153                           pclath	equ	0xFFA
 35154                           tblptru	equ	0xFF8
 35155                           tblptrh	equ	0xFF7
 35156                           tblptrl	equ	0xFF6
 35157                           tablat	equ	0xFF5
 35158                           prodh	equ	0xFF4
 35159                           prodl	equ	0xFF3
 35160                           intcon	equ	0xFF2
 35161                           indf0	equ	0xFEF
 35162                           postinc0	equ	0xFEE
 35163                           fsr0h	equ	0xFEA
 35164                           fsr0l	equ	0xFE9
 35165                           wreg	equ	0xFE8
 35166                           indf1	equ	0xFE7
 35167                           postdec1	equ	0xFE5
 35168                           plusw1	equ	0xFE3
 35169                           fsr1h	equ	0xFE2
 35170                           fsr1l	equ	0xFE1
 35171                           indf2	equ	0xFDF
 35172                           postinc2	equ	0xFDE
 35173                           postdec2	equ	0xFDD
 35174                           plusw2	equ	0xFDB
 35175                           fsr2h	equ	0xFDA
 35176                           fsr2l	equ	0xFD9
 35177                           status	equ	0xFD8
 35178                           
 35179 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 35180 ;; Defined at:
 35181 ;;		line 274 in file "mcc_generated_files/eusart2.c"
 35182 ;; Parameters:    Size  Location     Type
 35183 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 35184 ;;		 -> EUSART2_Receive_ISR(1), 
 35185 ;; Auto vars:     Size  Location     Type
 35186 ;;		None
 35187 ;; Return value:  Size  Location     Type
 35188 ;;                  1    wreg      void 
 35189 ;; Registers used:
 35190 ;;		wreg, status,2, status,0
 35191 ;; Tracked objects:
 35192 ;;		On entry : 0/0
 35193 ;;		On exit  : 0/0
 35194 ;;		Unchanged: 0/0
 35195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35196 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35199 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35200 ;;Total ram usage:        3 bytes
 35201 ;; Hardware stack levels used:    1
 35202 ;; Hardware stack levels required when called:   13
 35203 ;; This function calls:
 35204 ;;		Nothing
 35205 ;; This function is called by:
 35206 ;;		_EUSART2_Initialize
 35207 ;; This function uses a non-reentrant model
 35208 ;;
 35209                           
 35210                           	psect	text80
 35211  01B15C                     __ptext80:
 35212                           	opt stack 0
 35213  01B15C                     _EUSART2_SetRxInterruptHandler:
 35214                           	opt stack 15
 35215                           
 35216                           ;eusart2.c: 275: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 35217                           
 35218                           ;incstack = 0
 35219  01B15C  C117  F256         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 35220  01B160  C118  F257         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 35221  01B164  C119  F258         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 35222  01B168  0012               	return		;funcret
 35223  01B16A                     __end_of_EUSART2_SetRxInterruptHandler:
 35224                           	opt stack 0
 35225                           tosu	equ	0xFFF
 35226                           tosh	equ	0xFFE
 35227                           tosl	equ	0xFFD
 35228                           pclath	equ	0xFFA
 35229                           tblptru	equ	0xFF8
 35230                           tblptrh	equ	0xFF7
 35231                           tblptrl	equ	0xFF6
 35232                           tablat	equ	0xFF5
 35233                           prodh	equ	0xFF4
 35234                           prodl	equ	0xFF3
 35235                           intcon	equ	0xFF2
 35236                           indf0	equ	0xFEF
 35237                           postinc0	equ	0xFEE
 35238                           fsr0h	equ	0xFEA
 35239                           fsr0l	equ	0xFE9
 35240                           wreg	equ	0xFE8
 35241                           indf1	equ	0xFE7
 35242                           postdec1	equ	0xFE5
 35243                           plusw1	equ	0xFE3
 35244                           fsr1h	equ	0xFE2
 35245                           fsr1l	equ	0xFE1
 35246                           indf2	equ	0xFDF
 35247                           postinc2	equ	0xFDE
 35248                           postdec2	equ	0xFDD
 35249                           plusw2	equ	0xFDB
 35250                           fsr2h	equ	0xFDA
 35251                           fsr2l	equ	0xFD9
 35252                           status	equ	0xFD8
 35253                           
 35254 ;; *************** function _ADCC_Initialize *****************
 35255 ;; Defined at:
 35256 ;;		line 63 in file "mcc_generated_files/adcc.c"
 35257 ;; Parameters:    Size  Location     Type
 35258 ;;		None
 35259 ;; Auto vars:     Size  Location     Type
 35260 ;;		None
 35261 ;; Return value:  Size  Location     Type
 35262 ;;                  1    wreg      void 
 35263 ;; Registers used:
 35264 ;;		wreg, status,2, status,0, cstack
 35265 ;; Tracked objects:
 35266 ;;		On entry : 0/0
 35267 ;;		On exit  : 0/0
 35268 ;;		Unchanged: 0/0
 35269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35274 ;;Total ram usage:        0 bytes
 35275 ;; Hardware stack levels used:    1
 35276 ;; Hardware stack levels required when called:   14
 35277 ;; This function calls:
 35278 ;;		_ADCC_SetADTIInterruptHandler
 35279 ;; This function is called by:
 35280 ;;		_SYSTEM_Initialize
 35281 ;; This function uses a non-reentrant model
 35282 ;;
 35283                           
 35284                           	psect	text81
 35285  019F2E                     __ptext81:
 35286                           	opt stack 0
 35287  019F2E                     _ADCC_Initialize:
 35288                           	opt stack 15
 35289                           
 35290                           ;adcc.c: 67: ADLTHL = 0x00;
 35291                           
 35292                           ;incstack = 0
 35293  019F2E  0E00               	movlw	0
 35294  019F30  6E6A               	movwf	3946,c	;volatile
 35295                           
 35296                           ;adcc.c: 69: ADLTHH = 0x00;
 35297  019F32  0E00               	movlw	0
 35298  019F34  6E6B               	movwf	3947,c	;volatile
 35299                           
 35300                           ;adcc.c: 71: ADUTHL = 0x00;
 35301  019F36  0E00               	movlw	0
 35302  019F38  6E6C               	movwf	3948,c	;volatile
 35303                           
 35304                           ;adcc.c: 73: ADUTHH = 0x00;
 35305  019F3A  0E00               	movlw	0
 35306  019F3C  6E6D               	movwf	3949,c	;volatile
 35307                           
 35308                           ;adcc.c: 75: ADSTPTL = 0x00;
 35309  019F3E  0E00               	movlw	0
 35310  019F40  6E68               	movwf	3944,c	;volatile
 35311                           
 35312                           ;adcc.c: 77: ADSTPTH = 0x00;
 35313  019F42  0E00               	movlw	0
 35314  019F44  6E69               	movwf	3945,c	;volatile
 35315                           
 35316                           ;adcc.c: 79: ADRPT = 0xFF;
 35317  019F46  6866               	setf	3942,c	;volatile
 35318                           
 35319                           ;adcc.c: 81: ADPCH = 0x00;
 35320  019F48  0E00               	movlw	0
 35321  019F4A  010F               	movlb	15	; () banked
 35322  019F4C  6F5F               	movwf	95,b	;volatile
 35323                           
 35324                           ;adcc.c: 83: ADCAP = 0x00;
 35325  019F4E  0E00               	movlw	0
 35326  019F50  6F5D               	movwf	93,b	;volatile
 35327                           
 35328                           ;adcc.c: 85: ADCON1 = 0x00;
 35329  019F52  0E00               	movlw	0
 35330  019F54  6F59               	movwf	89,b	;volatile
 35331                           
 35332                           ;adcc.c: 87: ADCON2 = 0x04;
 35333  019F56  0E04               	movlw	4
 35334  019F58  6F5A               	movwf	90,b	;volatile
 35335                           
 35336                           ;adcc.c: 89: ADCON3 = 0x5F;
 35337  019F5A  0E5F               	movlw	95
 35338  019F5C  6F5B               	movwf	91,b	;volatile
 35339                           
 35340                           ;adcc.c: 91: ADSTAT = 0x00;
 35341  019F5E  0E00               	movlw	0
 35342  019F60  6E65               	movwf	3941,c	;volatile
 35343                           
 35344                           ;adcc.c: 93: ADREF = 0x12;
 35345  019F62  0E12               	movlw	18
 35346  019F64  6F58               	movwf	88,b	;volatile
 35347                           
 35348                           ;adcc.c: 95: ADACT = 0x00;
 35349  019F66  0E00               	movlw	0
 35350  019F68  6F56               	movwf	86,b	;volatile
 35351                           
 35352                           ;adcc.c: 97: ADCLK = 0x1F;
 35353  019F6A  0E1F               	movlw	31
 35354  019F6C  6F57               	movwf	87,b	;volatile
 35355                           
 35356                           ;adcc.c: 99: ADCON0 = 0xC4;
 35357  019F6E  0EC4               	movlw	196
 35358  019F70  6E60               	movwf	3936,c	;volatile
 35359                           
 35360                           ; BSR set to: 15
 35361                           ;adcc.c: 101: ADACQ = 0xFF;
 35362  019F72  695C               	setf	92,b	;volatile
 35363                           
 35364                           ; BSR set to: 15
 35365                           ;adcc.c: 104: ADCON2bits.ADCRS = 7;
 35366  019F74  895A               	bsf	90,4,b	;volatile
 35367  019F76  8B5A               	bsf	90,5,b	;volatile
 35368  019F78  8D5A               	bsf	90,6,b	;volatile
 35369                           
 35370                           ;adcc.c: 105: ADCAP = 20;
 35371  019F7A  0E14               	movlw	20
 35372  019F7C  6F5D               	movwf	93,b	;volatile
 35373                           
 35374                           ; BSR set to: 15
 35375                           ;adcc.c: 108: PIR1bits.ADTIF = 0;
 35376  019F7E  010E               	movlb	14	; () banked
 35377  019F80  9334               	bcf	52,1,b	;volatile
 35378                           
 35379                           ; BSR set to: 14
 35380                           ;adcc.c: 110: PIE1bits.ADTIE = 1;
 35381  019F82  832A               	bsf	42,1,b	;volatile
 35382                           
 35383                           ; BSR set to: 14
 35384                           ;adcc.c: 112: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 35385  019F84  0EFC               	movlw	low _ADCC_DefaultInterruptHandler
 35386  019F86  0101               	movlb	1	; () banked
 35387  019F88  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 35388  019F8A  0EB1               	movlw	high _ADCC_DefaultInterruptHandler
 35389  019F8C  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 35390  019F8E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35391  019F90  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 35392  019F92  ECB5  F0D8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35393  019F96  0012               	return		;funcret
 35394  019F98                     __end_of_ADCC_Initialize:
 35395                           	opt stack 0
 35396                           tosu	equ	0xFFF
 35397                           tosh	equ	0xFFE
 35398                           tosl	equ	0xFFD
 35399                           pclath	equ	0xFFA
 35400                           tblptru	equ	0xFF8
 35401                           tblptrh	equ	0xFF7
 35402                           tblptrl	equ	0xFF6
 35403                           tablat	equ	0xFF5
 35404                           prodh	equ	0xFF4
 35405                           prodl	equ	0xFF3
 35406                           intcon	equ	0xFF2
 35407                           indf0	equ	0xFEF
 35408                           postinc0	equ	0xFEE
 35409                           fsr0h	equ	0xFEA
 35410                           fsr0l	equ	0xFE9
 35411                           wreg	equ	0xFE8
 35412                           indf1	equ	0xFE7
 35413                           postdec1	equ	0xFE5
 35414                           plusw1	equ	0xFE3
 35415                           fsr1h	equ	0xFE2
 35416                           fsr1l	equ	0xFE1
 35417                           indf2	equ	0xFDF
 35418                           postinc2	equ	0xFDE
 35419                           postdec2	equ	0xFDD
 35420                           plusw2	equ	0xFDB
 35421                           fsr2h	equ	0xFDA
 35422                           fsr2l	equ	0xFD9
 35423                           status	equ	0xFD8
 35424                           
 35425 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35426 ;; Defined at:
 35427 ;;		line 310 in file "mcc_generated_files/adcc.c"
 35428 ;; Parameters:    Size  Location     Type
 35429 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 35430 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 35431 ;; Auto vars:     Size  Location     Type
 35432 ;;		None
 35433 ;; Return value:  Size  Location     Type
 35434 ;;                  1    wreg      void 
 35435 ;; Registers used:
 35436 ;;		wreg, status,2, status,0
 35437 ;; Tracked objects:
 35438 ;;		On entry : 0/0
 35439 ;;		On exit  : 0/0
 35440 ;;		Unchanged: 0/0
 35441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35442 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35445 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35446 ;;Total ram usage:        3 bytes
 35447 ;; Hardware stack levels used:    1
 35448 ;; Hardware stack levels required when called:   13
 35449 ;; This function calls:
 35450 ;;		Nothing
 35451 ;; This function is called by:
 35452 ;;		_ADCC_Initialize
 35453 ;;		_main
 35454 ;; This function uses a non-reentrant model
 35455 ;;
 35456                           
 35457                           	psect	text82
 35458  01B16A                     __ptext82:
 35459                           	opt stack 0
 35460  01B16A                     _ADCC_SetADTIInterruptHandler:
 35461                           	opt stack 15
 35462                           
 35463                           ;adcc.c: 311: ADCC_ADTI_InterruptHandler = InterruptHandler;
 35464                           
 35465                           ;incstack = 0
 35466  01B16A  C117  F250         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 35467  01B16E  C118  F251         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 35468  01B172  C119  F252         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 35469  01B176  0012               	return		;funcret
 35470  01B178                     __end_of_ADCC_SetADTIInterruptHandler:
 35471                           	opt stack 0
 35472                           tosu	equ	0xFFF
 35473                           tosh	equ	0xFFE
 35474                           tosl	equ	0xFFD
 35475                           pclath	equ	0xFFA
 35476                           tblptru	equ	0xFF8
 35477                           tblptrh	equ	0xFF7
 35478                           tblptrl	equ	0xFF6
 35479                           tablat	equ	0xFF5
 35480                           prodh	equ	0xFF4
 35481                           prodl	equ	0xFF3
 35482                           intcon	equ	0xFF2
 35483                           indf0	equ	0xFEF
 35484                           postinc0	equ	0xFEE
 35485                           fsr0h	equ	0xFEA
 35486                           fsr0l	equ	0xFE9
 35487                           wreg	equ	0xFE8
 35488                           indf1	equ	0xFE7
 35489                           postdec1	equ	0xFE5
 35490                           plusw1	equ	0xFE3
 35491                           fsr1h	equ	0xFE2
 35492                           fsr1l	equ	0xFE1
 35493                           indf2	equ	0xFDF
 35494                           postinc2	equ	0xFDE
 35495                           postdec2	equ	0xFDD
 35496                           plusw2	equ	0xFDB
 35497                           fsr2h	equ	0xFDA
 35498                           fsr2l	equ	0xFD9
 35499                           status	equ	0xFD8
 35500                           
 35501 ;; *************** function _OLED_YX *****************
 35502 ;; Defined at:
 35503 ;;		line 212 in file "oled.c"
 35504 ;; Parameters:    Size  Location     Type
 35505 ;;  Row             1    wreg     unsigned char 
 35506 ;;  Column          1   43[BANK1 ] unsigned char 
 35507 ;; Auto vars:     Size  Location     Type
 35508 ;;  Row             1   45[BANK1 ] unsigned char 
 35509 ;; Return value:  Size  Location     Type
 35510 ;;                  1    wreg      void 
 35511 ;; Registers used:
 35512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35513 ;; Tracked objects:
 35514 ;;		On entry : 0/0
 35515 ;;		On exit  : 0/0
 35516 ;;		Unchanged: 0/0
 35517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35518 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35519 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35520 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35521 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35522 ;;Total ram usage:        3 bytes
 35523 ;; Hardware stack levels used:    1
 35524 ;; Hardware stack levels required when called:   17
 35525 ;; This function calls:
 35526 ;;		_OLED_Command
 35527 ;; This function is called by:
 35528 ;;		_main
 35529 ;; This function uses a non-reentrant model
 35530 ;;
 35531                           
 35532                           	psect	text83
 35533  01A966                     __ptext83:
 35534                           	opt stack 0
 35535  01A966                     _OLED_YX:
 35536                           	opt stack 13
 35537                           
 35538                           ;incstack = 0
 35539                           ;OLED_YX@Row stored from wreg
 35540  01A966  0101               	movlb	1	; () banked
 35541  01A968  6F2D               	movwf	OLED_YX@Row& (0+255),b
 35542                           
 35543                           ;oled.c: 214: OLED_Command(0xB0 + Row);
 35544  01A96A  0101               	movlb	1	; () banked
 35545  01A96C  512D               	movf	OLED_YX@Row& (0+255),w,b
 35546  01A96E  0FB0               	addlw	176
 35547  01A970  EC25  F0D3         	call	_OLED_Command
 35548                           
 35549                           ;oled.c: 216: OLED_Command(0x00 + (8 * Column & 0x0F));
 35550  01A974  0101               	movlb	1	; () banked
 35551  01A976  512B               	movf	OLED_YX@Column& (0+255),w,b
 35552  01A978  0D08               	mullw	8
 35553  01A97A  50F3               	movf	prodl,w,c
 35554  01A97C  0B0F               	andlw	15
 35555  01A97E  EC25  F0D3         	call	_OLED_Command
 35556                           
 35557                           ;oled.c: 218: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 35558  01A982  0101               	movlb	1	; () banked
 35559  01A984  512B               	movf	OLED_YX@Column& (0+255),w,b
 35560  01A986  0D08               	mullw	8
 35561  01A988  0E04               	movlw	4
 35562  01A98A  6F2C               	movwf	??_OLED_YX& (0+255),b
 35563  01A98C                     u23655:
 35564  01A98C  34F4               	rlcf	prodh,w,c
 35565  01A98E  32F4               	rrcf	prodh,f,c
 35566  01A990  32F3               	rrcf	prodl,f,c
 35567  01A992  2F2C               	decfsz	??_OLED_YX& (0+255),f,b
 35568  01A994  D7FB               	goto	u23655
 35569  01A996  50F3               	movf	prodl,w,c
 35570  01A998  0B0F               	andlw	15
 35571  01A99A  0F10               	addlw	16
 35572  01A99C  EC25  F0D3         	call	_OLED_Command
 35573  01A9A0  0012               	return		;funcret
 35574  01A9A2                     __end_of_OLED_YX:
 35575                           	opt stack 0
 35576                           tosu	equ	0xFFF
 35577                           tosh	equ	0xFFE
 35578                           tosl	equ	0xFFD
 35579                           pclath	equ	0xFFA
 35580                           tblptru	equ	0xFF8
 35581                           tblptrh	equ	0xFF7
 35582                           tblptrl	equ	0xFF6
 35583                           tablat	equ	0xFF5
 35584                           prodh	equ	0xFF4
 35585                           prodl	equ	0xFF3
 35586                           intcon	equ	0xFF2
 35587                           indf0	equ	0xFEF
 35588                           postinc0	equ	0xFEE
 35589                           fsr0h	equ	0xFEA
 35590                           fsr0l	equ	0xFE9
 35591                           wreg	equ	0xFE8
 35592                           indf1	equ	0xFE7
 35593                           postdec1	equ	0xFE5
 35594                           plusw1	equ	0xFE3
 35595                           fsr1h	equ	0xFE2
 35596                           fsr1l	equ	0xFE1
 35597                           indf2	equ	0xFDF
 35598                           postinc2	equ	0xFDE
 35599                           postdec2	equ	0xFDD
 35600                           plusw2	equ	0xFDB
 35601                           fsr2h	equ	0xFDA
 35602                           fsr2l	equ	0xFD9
 35603                           status	equ	0xFD8
 35604                           
 35605 ;; *************** function _OLED_Write_String *****************
 35606 ;; Defined at:
 35607 ;;		line 269 in file "oled.c"
 35608 ;; Parameters:    Size  Location     Type
 35609 ;;  s               2   56[BANK1 ] PTR unsigned char 
 35610 ;;		 -> ftoa@buf(17), STR_190(1), STR_189(1), OLED_Write_Integer@s(20), 
 35611 ;;		 -> STR_5(12), STR_4(13), STR_3(10), STR_2(15), 
 35612 ;; Auto vars:     Size  Location     Type
 35613 ;;		None
 35614 ;; Return value:  Size  Location     Type
 35615 ;;                  1    wreg      void 
 35616 ;; Registers used:
 35617 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35618 ;; Tracked objects:
 35619 ;;		On entry : 0/0
 35620 ;;		On exit  : 0/0
 35621 ;;		Unchanged: 0/0
 35622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35623 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35626 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35627 ;;Total ram usage:        2 bytes
 35628 ;; Hardware stack levels used:    1
 35629 ;; Hardware stack levels required when called:   17
 35630 ;; This function calls:
 35631 ;;		_OLED_PutChar
 35632 ;; This function is called by:
 35633 ;;		_main
 35634 ;;		_OLED_Write_Integer
 35635 ;;		_OLED_Write_Float
 35636 ;; This function uses a non-reentrant model
 35637 ;;
 35638                           
 35639                           	psect	text84
 35640  01A1EE                     __ptext84:
 35641                           	opt stack 0
 35642  01A1EE                     _OLED_Write_String:
 35643                           	opt stack 13
 35644                           
 35645                           ;oled.c: 271: while(*s) {
 35646                           
 35647                           ;incstack = 0
 35648  01A1EE  D016               	goto	l1707
 35649  01A1F0                     
 35650                           ;oled.c: 273: OLED_PutChar(*s++);
 35651  01A1F0  C138  FFF6         	movff	OLED_Write_String@s,tblptrl
 35652  01A1F4  C139  FFF7         	movff	OLED_Write_String@s+1,tblptrh
 35653  01A1F8  0E00               	movlw	low (__mediumconst shr (0+16))
 35654  01A1FA  6EF8               	movwf	tblptru,c
 35655  01A1FC  0E0D               	movlw	(high __ramtop+-1)
 35656  01A1FE  64F7               	cpfsgt	tblptrh,c
 35657  01A200  D003               	bra	u23667
 35658  01A202  0008               	tblrd		*
 35659  01A204  50F5               	movf	tablat,w,c
 35660  01A206  D005               	bra	u23660
 35661  01A208                     u23667:
 35662  01A208  CFF6 FFE9          	movff	tblptrl,fsr0l
 35663  01A20C  CFF7 FFEA          	movff	tblptrh,fsr0h
 35664  01A210  50EF               	movf	indf0,w,c
 35665  01A212                     u23660:
 35666  01A212  EC67  F0CB         	call	_OLED_PutChar
 35667  01A216  0101               	movlb	1	; () banked
 35668  01A218  4B38               	infsnz	OLED_Write_String@s& (0+255),f,b
 35669  01A21A  2B39               	incf	(OLED_Write_String@s+1)& (0+255),f,b
 35670  01A21C                     l1707:
 35671                           
 35672                           ; BSR set to: 1
 35673  01A21C  C138  FFF6         	movff	OLED_Write_String@s,tblptrl
 35674  01A220  C139  FFF7         	movff	OLED_Write_String@s+1,tblptrh
 35675  01A224  0E00               	movlw	low (__mediumconst shr (0+16))
 35676  01A226  6EF8               	movwf	tblptru,c
 35677  01A228  0E0D               	movlw	(high __ramtop+-1)
 35678  01A22A  64F7               	cpfsgt	tblptrh,c
 35679  01A22C  D003               	bra	u23677
 35680  01A22E  0008               	tblrd		*
 35681  01A230  50F5               	movf	tablat,w,c
 35682  01A232  D005               	bra	u23670
 35683  01A234                     u23677:
 35684  01A234  CFF6 FFE9          	movff	tblptrl,fsr0l
 35685  01A238  CFF7 FFEA          	movff	tblptrh,fsr0h
 35686  01A23C  50EF               	movf	indf0,w,c
 35687  01A23E                     u23670:
 35688  01A23E  0900               	iorlw	0
 35689  01A240  B4D8               	btfsc	status,2,c
 35690  01A242  0012               	return	
 35691  01A244  D7D5               	goto	l1708
 35692  01A246                     __end_of_OLED_Write_String:
 35693                           	opt stack 0
 35694                           tosu	equ	0xFFF
 35695                           tosh	equ	0xFFE
 35696                           tosl	equ	0xFFD
 35697                           pclath	equ	0xFFA
 35698                           tblptru	equ	0xFF8
 35699                           tblptrh	equ	0xFF7
 35700                           tblptrl	equ	0xFF6
 35701                           tablat	equ	0xFF5
 35702                           prodh	equ	0xFF4
 35703                           prodl	equ	0xFF3
 35704                           intcon	equ	0xFF2
 35705                           indf0	equ	0xFEF
 35706                           postinc0	equ	0xFEE
 35707                           fsr0h	equ	0xFEA
 35708                           fsr0l	equ	0xFE9
 35709                           wreg	equ	0xFE8
 35710                           indf1	equ	0xFE7
 35711                           postdec1	equ	0xFE5
 35712                           plusw1	equ	0xFE3
 35713                           fsr1h	equ	0xFE2
 35714                           fsr1l	equ	0xFE1
 35715                           indf2	equ	0xFDF
 35716                           postinc2	equ	0xFDE
 35717                           postdec2	equ	0xFDD
 35718                           plusw2	equ	0xFDB
 35719                           fsr2h	equ	0xFDA
 35720                           fsr2l	equ	0xFD9
 35721                           status	equ	0xFD8
 35722                           
 35723 ;; *************** function _OLED_Init *****************
 35724 ;; Defined at:
 35725 ;;		line 154 in file "oled.c"
 35726 ;; Parameters:    Size  Location     Type
 35727 ;;		None
 35728 ;; Auto vars:     Size  Location     Type
 35729 ;;		None
 35730 ;; Return value:  Size  Location     Type
 35731 ;;                  1    wreg      void 
 35732 ;; Registers used:
 35733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35734 ;; Tracked objects:
 35735 ;;		On entry : 0/0
 35736 ;;		On exit  : 0/0
 35737 ;;		Unchanged: 0/0
 35738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35743 ;;Total ram usage:        0 bytes
 35744 ;; Hardware stack levels used:    1
 35745 ;; Hardware stack levels required when called:   17
 35746 ;; This function calls:
 35747 ;;		_OLED_Command
 35748 ;; This function is called by:
 35749 ;;		_main
 35750 ;; This function uses a non-reentrant model
 35751 ;;
 35752                           
 35753                           	psect	text85
 35754  019818                     __ptext85:
 35755                           	opt stack 0
 35756  019818                     _OLED_Init:
 35757                           	opt stack 13
 35758                           
 35759                           ;oled.c: 156: OLED_Command(0xAE);
 35760                           
 35761                           ;incstack = 0
 35762  019818  0EAE               	movlw	174
 35763  01981A  EC25  F0D3         	call	_OLED_Command
 35764                           
 35765                           ;oled.c: 158: OLED_Command(0xD5);
 35766  01981E  0ED5               	movlw	213
 35767  019820  EC25  F0D3         	call	_OLED_Command
 35768                           
 35769                           ;oled.c: 160: OLED_Command(0x80);
 35770  019824  0E80               	movlw	128
 35771  019826  EC25  F0D3         	call	_OLED_Command
 35772                           
 35773                           ;oled.c: 162: OLED_Command(0xA8);
 35774  01982A  0EA8               	movlw	168
 35775  01982C  EC25  F0D3         	call	_OLED_Command
 35776                           
 35777                           ;oled.c: 164: OLED_Command(0x1F);
 35778  019830  0E1F               	movlw	31
 35779  019832  EC25  F0D3         	call	_OLED_Command
 35780                           
 35781                           ;oled.c: 166: OLED_Command(0xD3);
 35782  019836  0ED3               	movlw	211
 35783  019838  EC25  F0D3         	call	_OLED_Command
 35784                           
 35785                           ;oled.c: 168: OLED_Command(0x0);
 35786  01983C  0E00               	movlw	0
 35787  01983E  EC25  F0D3         	call	_OLED_Command
 35788                           
 35789                           ;oled.c: 170: OLED_Command(0x40 | 0x0);
 35790  019842  0E40               	movlw	64
 35791  019844  EC25  F0D3         	call	_OLED_Command
 35792                           
 35793                           ;oled.c: 172: OLED_Command(0x8D);
 35794  019848  0E8D               	movlw	141
 35795  01984A  EC25  F0D3         	call	_OLED_Command
 35796                           
 35797                           ;oled.c: 174: OLED_Command(0xAF);
 35798  01984E  0EAF               	movlw	175
 35799  019850  EC25  F0D3         	call	_OLED_Command
 35800                           
 35801                           ;oled.c: 176: OLED_Command(0x20);
 35802  019854  0E20               	movlw	32
 35803  019856  EC25  F0D3         	call	_OLED_Command
 35804                           
 35805                           ;oled.c: 178: OLED_Command(0x00);
 35806  01985A  0E00               	movlw	0
 35807  01985C  EC25  F0D3         	call	_OLED_Command
 35808                           
 35809                           ;oled.c: 180: OLED_Command(0xA0 | 0x1);
 35810  019860  0EA1               	movlw	161
 35811  019862  EC25  F0D3         	call	_OLED_Command
 35812                           
 35813                           ;oled.c: 182: OLED_Command(0xC8);
 35814  019866  0EC8               	movlw	200
 35815  019868  EC25  F0D3         	call	_OLED_Command
 35816                           
 35817                           ;oled.c: 184: OLED_Command(0xDA);
 35818  01986C  0EDA               	movlw	218
 35819  01986E  EC25  F0D3         	call	_OLED_Command
 35820                           
 35821                           ;oled.c: 186: OLED_Command(0x02);
 35822  019872  0E02               	movlw	2
 35823  019874  EC25  F0D3         	call	_OLED_Command
 35824                           
 35825                           ;oled.c: 188: OLED_Command(0x81);
 35826  019878  0E81               	movlw	129
 35827  01987A  EC25  F0D3         	call	_OLED_Command
 35828                           
 35829                           ;oled.c: 190: OLED_Command(0x8F);
 35830  01987E  0E8F               	movlw	143
 35831  019880  EC25  F0D3         	call	_OLED_Command
 35832                           
 35833                           ;oled.c: 192: OLED_Command(0xD9);
 35834  019884  0ED9               	movlw	217
 35835  019886  EC25  F0D3         	call	_OLED_Command
 35836                           
 35837                           ;oled.c: 194: OLED_Command(0xF1);
 35838  01988A  0EF1               	movlw	241
 35839  01988C  EC25  F0D3         	call	_OLED_Command
 35840                           
 35841                           ;oled.c: 196: OLED_Command(0xDB);
 35842  019890  0EDB               	movlw	219
 35843  019892  EC25  F0D3         	call	_OLED_Command
 35844                           
 35845                           ;oled.c: 198: OLED_Command(0x40);
 35846  019896  0E40               	movlw	64
 35847  019898  EC25  F0D3         	call	_OLED_Command
 35848                           
 35849                           ;oled.c: 200: OLED_Command(0xA4);
 35850  01989C  0EA4               	movlw	164
 35851  01989E  EC25  F0D3         	call	_OLED_Command
 35852                           
 35853                           ;oled.c: 202: OLED_Command(0xA6);
 35854  0198A2  0EA6               	movlw	166
 35855  0198A4  EC25  F0D3         	call	_OLED_Command
 35856                           
 35857                           ;oled.c: 204: OLED_Command(0xAF);
 35858  0198A8  0EAF               	movlw	175
 35859  0198AA  EC25  F0D3         	call	_OLED_Command
 35860                           
 35861                           ;oled.c: 207: __nop();
 35862  0198AE  F000               	nop	
 35863  0198B0  0012               	return		;funcret
 35864  0198B2                     __end_of_OLED_Init:
 35865                           	opt stack 0
 35866                           tosu	equ	0xFFF
 35867                           tosh	equ	0xFFE
 35868                           tosl	equ	0xFFD
 35869                           pclath	equ	0xFFA
 35870                           tblptru	equ	0xFF8
 35871                           tblptrh	equ	0xFF7
 35872                           tblptrl	equ	0xFF6
 35873                           tablat	equ	0xFF5
 35874                           prodh	equ	0xFF4
 35875                           prodl	equ	0xFF3
 35876                           intcon	equ	0xFF2
 35877                           indf0	equ	0xFEF
 35878                           postinc0	equ	0xFEE
 35879                           fsr0h	equ	0xFEA
 35880                           fsr0l	equ	0xFE9
 35881                           wreg	equ	0xFE8
 35882                           indf1	equ	0xFE7
 35883                           postdec1	equ	0xFE5
 35884                           plusw1	equ	0xFE3
 35885                           fsr1h	equ	0xFE2
 35886                           fsr1l	equ	0xFE1
 35887                           indf2	equ	0xFDF
 35888                           postinc2	equ	0xFDE
 35889                           postdec2	equ	0xFDD
 35890                           plusw2	equ	0xFDB
 35891                           fsr2h	equ	0xFDA
 35892                           fsr2l	equ	0xFD9
 35893                           status	equ	0xFD8
 35894                           
 35895 ;; *************** function _OLED_Command *****************
 35896 ;; Defined at:
 35897 ;;		line 110 in file "oled.c"
 35898 ;; Parameters:    Size  Location     Type
 35899 ;;  temp            1    wreg     unsigned char 
 35900 ;; Auto vars:     Size  Location     Type
 35901 ;;  temp            1   39[BANK1 ] unsigned char 
 35902 ;;  data_array      2   41[BANK1 ] unsigned char [2]
 35903 ;;  length          1   40[BANK1 ] unsigned char 
 35904 ;; Return value:  Size  Location     Type
 35905 ;;                  1    wreg      void 
 35906 ;; Registers used:
 35907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35908 ;; Tracked objects:
 35909 ;;		On entry : 0/0
 35910 ;;		On exit  : 0/0
 35911 ;;		Unchanged: 0/0
 35912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35914 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35916 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35917 ;;Total ram usage:        4 bytes
 35918 ;; Hardware stack levels used:    1
 35919 ;; Hardware stack levels required when called:   16
 35920 ;; This function calls:
 35921 ;;		_I2C1_MasterWrite
 35922 ;; This function is called by:
 35923 ;;		_OLED_Init
 35924 ;;		_OLED_YX
 35925 ;; This function uses a non-reentrant model
 35926 ;;
 35927                           
 35928                           	psect	text86
 35929  01A64A                     __ptext86:
 35930                           	opt stack 0
 35931  01A64A                     _OLED_Command:
 35932                           	opt stack 13
 35933                           
 35934                           ;incstack = 0
 35935                           ;OLED_Command@temp stored from wreg
 35936  01A64A  0101               	movlb	1	; () banked
 35937  01A64C  6F27               	movwf	OLED_Command@temp& (0+255),b
 35938                           
 35939                           ;oled.c: 112: uint8_t length;
 35940                           ;oled.c: 114: uint8_t data_array[2];
 35941                           ;oled.c: 115: data_array[0] = 0x00;
 35942  01A64E  0E00               	movlw	0
 35943  01A650  0101               	movlb	1	; () banked
 35944  01A652  6F29               	movwf	OLED_Command@data_array& (0+255),b
 35945                           
 35946                           ; BSR set to: 1
 35947                           ;oled.c: 116: data_array[1] = temp;
 35948  01A654  C127  F12A         	movff	OLED_Command@temp,OLED_Command@data_array+1
 35949                           
 35950                           ; BSR set to: 1
 35951                           ;oled.c: 119: length = 2;
 35952  01A658  0E02               	movlw	2
 35953  01A65A  6F28               	movwf	OLED_Command@length& (0+255),b
 35954                           
 35955                           ; BSR set to: 1
 35956                           ;oled.c: 121: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 35957  01A65C  0E29               	movlw	low OLED_Command@data_array
 35958  01A65E  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 35959  01A660  0E01               	movlw	high OLED_Command@data_array
 35960  01A662  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 35961  01A664  C128  F122         	movff	OLED_Command@length,I2C1_MasterWrite@length
 35962  01A668  0E00               	movlw	0
 35963  01A66A  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 35964  01A66C  0E3C               	movlw	60
 35965  01A66E  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 35966  01A670  0EE8               	movlw	low _OLED_I2C_Status
 35967  01A672  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 35968  01A674  0E01               	movlw	high _OLED_I2C_Status
 35969  01A676  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 35970  01A678  EC17  F0D2         	call	_I2C1_MasterWrite	;wreg free
 35971  01A67C  0E02               	movlw	2
 35972  01A67E  0101               	movlb	1	; () banked
 35973  01A680  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 35974  01A682  B4D8               	btfsc	status,2,c
 35975  01A684  D7FB               	goto	l1671
 35976                           
 35977                           ; BSR set to: 1
 35978                           ;oled.c: 125: if (OLED_I2C_Status == I2C1_MESSAGE_FAIL) {
 35979                           
 35980                           ; BSR set to: 1
 35981  01A686  05E8               	decf	_OLED_I2C_Status& (0+255),w,b
 35982  01A688  A4D8               	btfss	status,2,c
 35983  01A68A  0012               	return	
 35984                           
 35985                           ; BSR set to: 1
 35986                           ;oled.c: 126: error_handler.I2C_COMM_error_flag = 1;
 35987  01A68C  0E01               	movlw	1
 35988  01A68E  0102               	movlb	2	; () banked
 35989  01A690  6F07               	movwf	(_error_handler+7)& (0+255),b
 35990  01A692  0012               	return	
 35991  01A694                     __end_of_OLED_Command:
 35992                           	opt stack 0
 35993                           tosu	equ	0xFFF
 35994                           tosh	equ	0xFFE
 35995                           tosl	equ	0xFFD
 35996                           pclath	equ	0xFFA
 35997                           tblptru	equ	0xFF8
 35998                           tblptrh	equ	0xFF7
 35999                           tblptrl	equ	0xFF6
 36000                           tablat	equ	0xFF5
 36001                           prodh	equ	0xFF4
 36002                           prodl	equ	0xFF3
 36003                           intcon	equ	0xFF2
 36004                           indf0	equ	0xFEF
 36005                           postinc0	equ	0xFEE
 36006                           fsr0h	equ	0xFEA
 36007                           fsr0l	equ	0xFE9
 36008                           wreg	equ	0xFE8
 36009                           indf1	equ	0xFE7
 36010                           postdec1	equ	0xFE5
 36011                           plusw1	equ	0xFE3
 36012                           fsr1h	equ	0xFE2
 36013                           fsr1l	equ	0xFE1
 36014                           indf2	equ	0xFDF
 36015                           postinc2	equ	0xFDE
 36016                           postdec2	equ	0xFDD
 36017                           plusw2	equ	0xFDB
 36018                           fsr2h	equ	0xFDA
 36019                           fsr2l	equ	0xFD9
 36020                           status	equ	0xFD8
 36021                           
 36022 ;; *************** function _OLED_Clear *****************
 36023 ;; Defined at:
 36024 ;;		line 254 in file "oled.c"
 36025 ;; Parameters:    Size  Location     Type
 36026 ;;		None
 36027 ;; Auto vars:     Size  Location     Type
 36028 ;;  col             2   58[BANK1 ] unsigned int 
 36029 ;;  row             2   56[BANK1 ] unsigned int 
 36030 ;; Return value:  Size  Location     Type
 36031 ;;                  1    wreg      void 
 36032 ;; Registers used:
 36033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36034 ;; Tracked objects:
 36035 ;;		On entry : 0/0
 36036 ;;		On exit  : 0/0
 36037 ;;		Unchanged: 0/0
 36038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36040 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36042 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36043 ;;Total ram usage:        4 bytes
 36044 ;; Hardware stack levels used:    1
 36045 ;; Hardware stack levels required when called:   17
 36046 ;; This function calls:
 36047 ;;		_OLED_PutChar
 36048 ;; This function is called by:
 36049 ;;		_main
 36050 ;; This function uses a non-reentrant model
 36051 ;;
 36052                           
 36053                           	psect	text87
 36054  01A7F0                     __ptext87:
 36055                           	opt stack 0
 36056  01A7F0                     _OLED_Clear:
 36057                           	opt stack 13
 36058                           
 36059                           ;oled.c: 256: for(uint16_t row = 0; row < 8; row++) {
 36060                           
 36061                           ;incstack = 0
 36062  01A7F0  0E00               	movlw	0
 36063  01A7F2  0101               	movlb	1	; () banked
 36064  01A7F4  6F39               	movwf	(OLED_Clear@row+1)& (0+255),b
 36065  01A7F6  0E00               	movlw	0
 36066  01A7F8  6F38               	movwf	OLED_Clear@row& (0+255),b
 36067  01A7FA                     l17894:
 36068                           
 36069                           ; BSR set to: 1
 36070  01A7FA  5139               	movf	(OLED_Clear@row+1)& (0+255),w,b
 36071  01A7FC  E118               	bnz	l1704
 36072  01A7FE  0E08               	movlw	8
 36073  01A800  5D38               	subwf	OLED_Clear@row& (0+255),w,b
 36074  01A802  B0D8               	btfsc	status,0,c
 36075  01A804  0012               	return	
 36076                           
 36077                           ; BSR set to: 1
 36078                           ;oled.c: 258: for(uint16_t col = 0; col < 16; col++) {
 36079                           
 36080                           ; BSR set to: 1
 36081                           
 36082                           ; BSR set to: 1
 36083  01A806  0E00               	movlw	0
 36084  01A808  6F3B               	movwf	(OLED_Clear@col+1)& (0+255),b
 36085  01A80A  0E00               	movlw	0
 36086  01A80C  6F3A               	movwf	OLED_Clear@col& (0+255),b
 36087  01A80E                     l17900:
 36088                           
 36089                           ; BSR set to: 1
 36090  01A80E  513B               	movf	(OLED_Clear@col+1)& (0+255),w,b
 36091  01A810  E10B               	bnz	l17910
 36092  01A812  0E10               	movlw	16
 36093  01A814  5D3A               	subwf	OLED_Clear@col& (0+255),w,b
 36094  01A816  B0D8               	btfsc	status,0,c
 36095  01A818  D007               	goto	u23630
 36096                           
 36097                           ; BSR set to: 1
 36098                           ;oled.c: 260: OLED_PutChar('\0');
 36099                           
 36100                           ; BSR set to: 1
 36101                           
 36102                           ; BSR set to: 1
 36103  01A81A  0E00               	movlw	0
 36104  01A81C  EC67  F0CB         	call	_OLED_PutChar
 36105  01A820  0101               	movlb	1	; () banked
 36106  01A822  4B3A               	infsnz	OLED_Clear@col& (0+255),f,b
 36107  01A824  2B3B               	incf	(OLED_Clear@col+1)& (0+255),f,b
 36108  01A826  D7F3               	goto	l17900
 36109  01A828                     u23630:
 36110  01A828                     l17910:
 36111                           
 36112                           ; BSR set to: 1
 36113  01A828  4B38               	infsnz	OLED_Clear@row& (0+255),f,b
 36114  01A82A  2B39               	incf	(OLED_Clear@row+1)& (0+255),f,b
 36115  01A82C  D7E6               	goto	l17894
 36116  01A82E                     l1704:
 36117                           
 36118                           ; BSR set to: 1
 36119  01A82E  0012               	return		;funcret
 36120  01A830                     __end_of_OLED_Clear:
 36121                           	opt stack 0
 36122                           tosu	equ	0xFFF
 36123                           tosh	equ	0xFFE
 36124                           tosl	equ	0xFFD
 36125                           pclath	equ	0xFFA
 36126                           tblptru	equ	0xFF8
 36127                           tblptrh	equ	0xFF7
 36128                           tblptrl	equ	0xFF6
 36129                           tablat	equ	0xFF5
 36130                           prodh	equ	0xFF4
 36131                           prodl	equ	0xFF3
 36132                           intcon	equ	0xFF2
 36133                           indf0	equ	0xFEF
 36134                           postinc0	equ	0xFEE
 36135                           fsr0h	equ	0xFEA
 36136                           fsr0l	equ	0xFE9
 36137                           wreg	equ	0xFE8
 36138                           indf1	equ	0xFE7
 36139                           postdec1	equ	0xFE5
 36140                           plusw1	equ	0xFE3
 36141                           fsr1h	equ	0xFE2
 36142                           fsr1l	equ	0xFE1
 36143                           indf2	equ	0xFDF
 36144                           postinc2	equ	0xFDE
 36145                           postdec2	equ	0xFDD
 36146                           plusw2	equ	0xFDB
 36147                           fsr2h	equ	0xFDA
 36148                           fsr2l	equ	0xFD9
 36149                           status	equ	0xFD8
 36150                           
 36151 ;; *************** function _OLED_PutChar *****************
 36152 ;; Defined at:
 36153 ;;		line 223 in file "oled.c"
 36154 ;; Parameters:    Size  Location     Type
 36155 ;;  ch              1    wreg     unsigned char 
 36156 ;; Auto vars:     Size  Location     Type
 36157 ;;  ch              1   55[BANK1 ] unsigned char 
 36158 ;;  data_array      9   43[BANK1 ] unsigned char [9]
 36159 ;;  input_base      2   52[BANK1 ] PTR const unsigned char 
 36160 ;;		 -> OledFont(768), 
 36161 ;;  length          1   54[BANK1 ] unsigned char 
 36162 ;; Return value:  Size  Location     Type
 36163 ;;                  1    wreg      void 
 36164 ;; Registers used:
 36165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36166 ;; Tracked objects:
 36167 ;;		On entry : 0/0
 36168 ;;		On exit  : 0/0
 36169 ;;		Unchanged: 0/0
 36170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36172 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36173 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36174 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36175 ;;Total ram usage:       17 bytes
 36176 ;; Hardware stack levels used:    1
 36177 ;; Hardware stack levels required when called:   16
 36178 ;; This function calls:
 36179 ;;		_I2C1_MasterWrite
 36180 ;;		_memmove
 36181 ;; This function is called by:
 36182 ;;		_OLED_Clear
 36183 ;;		_OLED_Write_String
 36184 ;; This function uses a non-reentrant model
 36185 ;;
 36186                           
 36187                           	psect	text88
 36188  0196CE                     __ptext88:
 36189                           	opt stack 0
 36190  0196CE                     _OLED_PutChar:
 36191                           	opt stack 13
 36192                           
 36193                           ; BSR set to: 1
 36194                           ;incstack = 0
 36195                           ;OLED_PutChar@ch stored from wreg
 36196  0196CE  0101               	movlb	1	; () banked
 36197  0196D0  6F37               	movwf	OLED_PutChar@ch& (0+255),b
 36198                           
 36199                           ;oled.c: 225: if((ch < 32) || (ch > 127)) {
 36200  0196D2  0E1F               	movlw	31
 36201  0196D4  0101               	movlb	1	; () banked
 36202  0196D6  6537               	cpfsgt	OLED_PutChar@ch& (0+255),b
 36203  0196D8  D003               	goto	u23280
 36204                           
 36205                           ; BSR set to: 1
 36206  0196DA  0E7F               	movlw	127
 36207  0196DC  6537               	cpfsgt	OLED_PutChar@ch& (0+255),b
 36208  0196DE  D002               	goto	l1690
 36209  0196E0                     u23280:
 36210                           
 36211                           ; BSR set to: 1
 36212                           ;oled.c: 227: ch = ' ';
 36213                           
 36214                           ; BSR set to: 1
 36215  0196E0  0E20               	movlw	32
 36216  0196E2  6F37               	movwf	OLED_PutChar@ch& (0+255),b
 36217  0196E4                     l1690:
 36218                           
 36219                           ; BSR set to: 1
 36220                           ;oled.c: 229: }
 36221                           ;oled.c: 231: uint8_t length;
 36222                           ;oled.c: 233: uint8_t data_array[9];
 36223                           ;oled.c: 235: data_array[0] = 0x40;
 36224  0196E4  0E40               	movlw	64
 36225  0196E6  6F2B               	movwf	OLED_PutChar@data_array& (0+255),b
 36226                           
 36227                           ; BSR set to: 1
 36228                           ;oled.c: 237: const uint8_t *input_base = &OledFont[ch - 32][0];
 36229  0196E8  0E00               	movlw	0
 36230  0196EA  6F27               	movwf	??_OLED_PutChar& (0+255),b
 36231  0196EC  0EFF               	movlw	255
 36232  0196EE  6F28               	movwf	(??_OLED_PutChar+1)& (0+255),b
 36233  0196F0  5137               	movf	OLED_PutChar@ch& (0+255),w,b
 36234  0196F2  6F29               	movwf	(??_OLED_PutChar+2)& (0+255),b
 36235  0196F4  6B2A               	clrf	(??_OLED_PutChar+3)& (0+255),b
 36236  0196F6  90D8               	bcf	status,0,c
 36237  0196F8  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36238  0196FA  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36239  0196FC  90D8               	bcf	status,0,c
 36240  0196FE  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36241  019700  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36242  019702  90D8               	bcf	status,0,c
 36243  019704  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36244  019706  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36245  019708  5127               	movf	??_OLED_PutChar& (0+255),w,b
 36246  01970A  2729               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 36247  01970C  5128               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 36248  01970E  232A               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 36249  019710  0E65               	movlw	low _OledFont
 36250  019712  2529               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 36251  019714  6F34               	movwf	OLED_PutChar@input_base& (0+255),b
 36252  019716  0ECF               	movlw	high _OledFont
 36253  019718  212A               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 36254  01971A  6F35               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 36255                           
 36256                           ; BSR set to: 1
 36257                           ;oled.c: 239: memmove(data_array + 1, input_base, 8);
 36258  01971C  0E2C               	movlw	low (OLED_PutChar@data_array+1)
 36259  01971E  6F17               	movwf	memmove@d1& (0+255),b
 36260  019720  0E01               	movlw	high (OLED_PutChar@data_array+1)
 36261  019722  6F18               	movwf	(memmove@d1+1)& (0+255),b
 36262  019724  C134  F119         	movff	OLED_PutChar@input_base,memmove@s1
 36263  019728  C135  F11A         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 36264  01972C  0E00               	movlw	0
 36265  01972E  6F1C               	movwf	(memmove@n+1)& (0+255),b
 36266  019730  0E08               	movlw	8
 36267  019732  6F1B               	movwf	memmove@n& (0+255),b
 36268  019734  EC10  F0CB         	call	_memmove	;wreg free
 36269                           
 36270                           ;oled.c: 242: length = 9;
 36271  019738  0E09               	movlw	9
 36272  01973A  0101               	movlb	1	; () banked
 36273  01973C  6F36               	movwf	OLED_PutChar@length& (0+255),b
 36274                           
 36275                           ; BSR set to: 1
 36276                           ;oled.c: 244: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 36277  01973E  0E2B               	movlw	low OLED_PutChar@data_array
 36278  019740  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 36279  019742  0E01               	movlw	high OLED_PutChar@data_array
 36280  019744  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 36281  019746  C136  F122         	movff	OLED_PutChar@length,I2C1_MasterWrite@length
 36282  01974A  0E00               	movlw	0
 36283  01974C  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 36284  01974E  0E3C               	movlw	60
 36285  019750  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 36286  019752  0EE8               	movlw	low _OLED_I2C_Status
 36287  019754  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 36288  019756  0E01               	movlw	high _OLED_I2C_Status
 36289  019758  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 36290  01975A  EC17  F0D2         	call	_I2C1_MasterWrite	;wreg free
 36291  01975E  0E02               	movlw	2
 36292  019760  0101               	movlb	1	; () banked
 36293  019762  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36294  019764  B4D8               	btfsc	status,2,c
 36295  019766  D7FB               	goto	l1694
 36296                           
 36297                           ; BSR set to: 1
 36298                           ;oled.c: 248: if (OLED_I2C_Status == I2C1_MESSAGE_FAIL) {
 36299                           
 36300                           ; BSR set to: 1
 36301  019768  05E8               	decf	_OLED_I2C_Status& (0+255),w,b
 36302  01976A  A4D8               	btfss	status,2,c
 36303  01976C  0012               	return	
 36304                           
 36305                           ; BSR set to: 1
 36306                           ;oled.c: 249: error_handler.I2C_COMM_error_flag = 1;
 36307  01976E  0E01               	movlw	1
 36308  019770  0102               	movlb	2	; () banked
 36309  019772  6F07               	movwf	(_error_handler+7)& (0+255),b
 36310  019774  0012               	return	
 36311  019776                     __end_of_OLED_PutChar:
 36312                           	opt stack 0
 36313                           tosu	equ	0xFFF
 36314                           tosh	equ	0xFFE
 36315                           tosl	equ	0xFFD
 36316                           pclath	equ	0xFFA
 36317                           tblptru	equ	0xFF8
 36318                           tblptrh	equ	0xFF7
 36319                           tblptrl	equ	0xFF6
 36320                           tablat	equ	0xFF5
 36321                           prodh	equ	0xFF4
 36322                           prodl	equ	0xFF3
 36323                           intcon	equ	0xFF2
 36324                           indf0	equ	0xFEF
 36325                           postinc0	equ	0xFEE
 36326                           fsr0h	equ	0xFEA
 36327                           fsr0l	equ	0xFE9
 36328                           wreg	equ	0xFE8
 36329                           indf1	equ	0xFE7
 36330                           postdec1	equ	0xFE5
 36331                           plusw1	equ	0xFE3
 36332                           fsr1h	equ	0xFE2
 36333                           fsr1l	equ	0xFE1
 36334                           indf2	equ	0xFDF
 36335                           postinc2	equ	0xFDE
 36336                           postdec2	equ	0xFDD
 36337                           plusw2	equ	0xFDB
 36338                           fsr2h	equ	0xFDA
 36339                           fsr2l	equ	0xFD9
 36340                           status	equ	0xFD8
 36341                           
 36342 ;; *************** function _memmove *****************
 36343 ;; Defined at:
 36344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memmove.c"
 36345 ;; Parameters:    Size  Location     Type
 36346 ;;  d1              2   23[BANK1 ] PTR void 
 36347 ;;		 -> OLED_PutChar@data_array(9), 
 36348 ;;  s1              2   25[BANK1 ] PTR const void 
 36349 ;;		 -> OledFont(768), 
 36350 ;;  n               2   27[BANK1 ] unsigned int 
 36351 ;; Auto vars:     Size  Location     Type
 36352 ;;  s               2   33[BANK1 ] PTR const unsigned char 
 36353 ;;		 -> OledFont(768), 
 36354 ;;  d               2   31[BANK1 ] PTR unsigned char 
 36355 ;;		 -> OLED_PutChar@data_array(9), 
 36356 ;; Return value:  Size  Location     Type
 36357 ;;                  2   23[BANK1 ] PTR void 
 36358 ;; Registers used:
 36359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36360 ;; Tracked objects:
 36361 ;;		On entry : 0/0
 36362 ;;		On exit  : 0/0
 36363 ;;		Unchanged: 0/0
 36364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36365 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36366 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36367 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36368 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36369 ;;Total ram usage:       12 bytes
 36370 ;; Hardware stack levels used:    1
 36371 ;; Hardware stack levels required when called:   13
 36372 ;; This function calls:
 36373 ;;		Nothing
 36374 ;; This function is called by:
 36375 ;;		_OLED_PutChar
 36376 ;; This function uses a non-reentrant model
 36377 ;;
 36378                           
 36379                           	psect	text89
 36380  019620                     __ptext89:
 36381                           	opt stack 0
 36382  019620                     _memmove:
 36383                           	opt stack 15
 36384                           
 36385                           ;incstack = 0
 36386  019620  C119  F121         	movff	memmove@s1,memmove@s
 36387  019624  C11A  F122         	movff	memmove@s1+1,memmove@s+1
 36388  019628  C117  F11F         	movff	memmove@d1,memmove@d
 36389  01962C  C118  F120         	movff	memmove@d1+1,memmove@d+1
 36390  019630  0101               	movlb	1	; () banked
 36391  019632  511F               	movf	memmove@d& (0+255),w,b
 36392  019634  5D21               	subwf	memmove@s& (0+255),w,b
 36393  019636  5120               	movf	(memmove@d+1)& (0+255),w,b
 36394  019638  5922               	subwfb	(memmove@s+1)& (0+255),w,b
 36395  01963A  B0D8               	btfsc	status,0,c
 36396  01963C  D02F               	goto	l2667
 36397                           
 36398                           ; BSR set to: 1
 36399  01963E  511B               	movf	memmove@n& (0+255),w,b
 36400  019640  2521               	addwf	memmove@s& (0+255),w,b
 36401  019642  6F1D               	movwf	??_memmove& (0+255),b
 36402  019644  511C               	movf	(memmove@n+1)& (0+255),w,b
 36403  019646  2122               	addwfc	(memmove@s+1)& (0+255),w,b
 36404  019648  6F1E               	movwf	(??_memmove+1)& (0+255),b
 36405  01964A  511D               	movf	??_memmove& (0+255),w,b
 36406  01964C  5D1F               	subwf	memmove@d& (0+255),w,b
 36407  01964E  511E               	movf	(??_memmove+1)& (0+255),w,b
 36408  019650  5920               	subwfb	(memmove@d+1)& (0+255),w,b
 36409  019652  B0D8               	btfsc	status,0,c
 36410  019654  D023               	goto	l2667
 36411                           
 36412                           ; BSR set to: 1
 36413  019656  511B               	movf	memmove@n& (0+255),w,b
 36414  019658  2721               	addwf	memmove@s& (0+255),f,b
 36415  01965A  511C               	movf	(memmove@n+1)& (0+255),w,b
 36416  01965C  2322               	addwfc	(memmove@s+1)& (0+255),f,b
 36417  01965E  511B               	movf	memmove@n& (0+255),w,b
 36418  019660  271F               	addwf	memmove@d& (0+255),f,b
 36419  019662  511C               	movf	(memmove@n+1)& (0+255),w,b
 36420  019664  2320               	addwfc	(memmove@d+1)& (0+255),f,b
 36421  019666                     
 36422                           ; BSR set to: 1
 36423                           
 36424                           ; BSR set to: 1
 36425  019666  0721               	decf	memmove@s& (0+255),f,b
 36426  019668  A0D8               	btfss	status,0,c
 36427  01966A  0722               	decf	(memmove@s+1)& (0+255),f,b
 36428  01966C  C121  FFF6         	movff	memmove@s,tblptrl
 36429  019670  C122  FFF7         	movff	memmove@s+1,tblptrh
 36430  019674                     	if	0	;tblptru may be non-zero
 36431  019674                     	endif
 36432  019674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36433  019674  0E00               	movlw	low (__mediumconst shr (0+16))
 36434  019676  6EF8               	movwf	tblptru,c
 36435  019678                     	endif
 36436  019678  071F               	decf	memmove@d& (0+255),f,b
 36437  01967A  A0D8               	btfss	status,0,c
 36438  01967C  0720               	decf	(memmove@d+1)& (0+255),f,b
 36439  01967E  C11F  FFD9         	movff	memmove@d,fsr2l
 36440  019682  C120  FFDA         	movff	memmove@d+1,fsr2h
 36441  019686  0008               	tblrd		*
 36442  019688  CFF5 FFDF          	movff	tablat,indf2
 36443                           
 36444                           ; BSR set to: 1
 36445  01968C  071B               	decf	memmove@n& (0+255),f,b
 36446  01968E  A0D8               	btfss	status,0,c
 36447  019690  071C               	decf	(memmove@n+1)& (0+255),f,b
 36448  019692  511B               	movf	memmove@n& (0+255),w,b
 36449  019694  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36450  019696  B4D8               	btfsc	status,2,c
 36451  019698  0012               	return	
 36452  01969A  D7E5               	goto	l2668
 36453  01969C                     l2667:
 36454                           
 36455                           ; BSR set to: 1
 36456                           
 36457                           ; BSR set to: 1
 36458  01969C  511B               	movf	memmove@n& (0+255),w,b
 36459  01969E  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36460  0196A0  B4D8               	btfsc	status,2,c
 36461  0196A2  0012               	return	
 36462                           
 36463                           ; BSR set to: 1
 36464                           
 36465                           ; BSR set to: 1
 36466  0196A4  C121  FFF6         	movff	memmove@s,tblptrl
 36467  0196A8  C122  FFF7         	movff	memmove@s+1,tblptrh
 36468  0196AC                     	if	0	;tblptru may be non-zero
 36469  0196AC                     	endif
 36470  0196AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36471  0196AC  0E00               	movlw	low (__mediumconst shr (0+16))
 36472  0196AE  6EF8               	movwf	tblptru,c
 36473  0196B0                     	endif
 36474  0196B0  C11F  FFD9         	movff	memmove@d,fsr2l
 36475  0196B4  C120  FFDA         	movff	memmove@d+1,fsr2h
 36476  0196B8  0008               	tblrd		*
 36477  0196BA  CFF5 FFDF          	movff	tablat,indf2
 36478                           
 36479                           ; BSR set to: 1
 36480  0196BE  4B21               	infsnz	memmove@s& (0+255),f,b
 36481  0196C0  2B22               	incf	(memmove@s+1)& (0+255),f,b
 36482                           
 36483                           ; BSR set to: 1
 36484  0196C2  4B1F               	infsnz	memmove@d& (0+255),f,b
 36485  0196C4  2B20               	incf	(memmove@d+1)& (0+255),f,b
 36486                           
 36487                           ; BSR set to: 1
 36488  0196C6  071B               	decf	memmove@n& (0+255),f,b
 36489  0196C8  A0D8               	btfss	status,0,c
 36490  0196CA  071C               	decf	(memmove@n+1)& (0+255),f,b
 36491  0196CC  D7E7               	goto	l2667
 36492  0196CE                     __end_of_memmove:
 36493                           	opt stack 0
 36494                           tosu	equ	0xFFF
 36495                           tosh	equ	0xFFE
 36496                           tosl	equ	0xFFD
 36497                           pclath	equ	0xFFA
 36498                           tblptru	equ	0xFF8
 36499                           tblptrh	equ	0xFF7
 36500                           tblptrl	equ	0xFF6
 36501                           tablat	equ	0xFF5
 36502                           prodh	equ	0xFF4
 36503                           prodl	equ	0xFF3
 36504                           intcon	equ	0xFF2
 36505                           indf0	equ	0xFEF
 36506                           postinc0	equ	0xFEE
 36507                           fsr0h	equ	0xFEA
 36508                           fsr0l	equ	0xFE9
 36509                           wreg	equ	0xFE8
 36510                           indf1	equ	0xFE7
 36511                           postdec1	equ	0xFE5
 36512                           plusw1	equ	0xFE3
 36513                           fsr1h	equ	0xFE2
 36514                           fsr1l	equ	0xFE1
 36515                           indf2	equ	0xFDF
 36516                           postinc2	equ	0xFDE
 36517                           postdec2	equ	0xFDD
 36518                           plusw2	equ	0xFDB
 36519                           fsr2h	equ	0xFDA
 36520                           fsr2l	equ	0xFD9
 36521                           status	equ	0xFD8
 36522                           
 36523 ;; *************** function _I2C1_MasterWrite *****************
 36524 ;; Defined at:
 36525 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 36526 ;; Parameters:    Size  Location     Type
 36527 ;;  pdata           2   32[BANK1 ] PTR unsigned char 
 36528 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 36529 ;;  length          1   34[BANK1 ] unsigned char 
 36530 ;;  address         2   35[BANK1 ] unsigned int 
 36531 ;;  pflag           2   37[BANK1 ] PTR enum E17311
 36532 ;;		 -> OLED_I2C_Status(1), 
 36533 ;; Auto vars:     Size  Location     Type
 36534 ;;		None
 36535 ;; Return value:  Size  Location     Type
 36536 ;;                  1    wreg      void 
 36537 ;; Registers used:
 36538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36539 ;; Tracked objects:
 36540 ;;		On entry : 0/0
 36541 ;;		On exit  : 0/0
 36542 ;;		Unchanged: 0/0
 36543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36544 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36547 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36548 ;;Total ram usage:        7 bytes
 36549 ;; Hardware stack levels used:    1
 36550 ;; Hardware stack levels required when called:   15
 36551 ;; This function calls:
 36552 ;;		_I2C1_MasterTRBInsert
 36553 ;;		_I2C1_MasterWriteTRBBuild
 36554 ;; This function is called by:
 36555 ;;		_OLED_Command
 36556 ;;		_OLED_PutChar
 36557 ;;		_OLED_Data
 36558 ;; This function uses a non-reentrant model
 36559 ;;
 36560                           
 36561                           	psect	text90
 36562  01A42E                     __ptext90:
 36563                           	opt stack 0
 36564  01A42E                     _I2C1_MasterWrite:
 36565                           	opt stack 13
 36566                           
 36567                           ;i2c1.c: 606: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 36568                           ;i2c1.c: 609: if (i2c1_object.trStatus.s.full != 1)
 36569                           
 36570                           ; BSR set to: 1
 36571                           ;incstack = 0
 36572  01A42E  0102               	movlb	2	; () banked
 36573  01A430  B10D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 36574  01A432  D01E               	goto	l1828
 36575                           
 36576                           ; BSR set to: 2
 36577                           ;i2c1.c: 610: {
 36578                           ;i2c1.c: 611: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 36579  01A434  0E89               	movlw	low I2C1_MasterWrite@trBlock
 36580  01A436  0101               	movlb	1	; () banked
 36581  01A438  6F17               	movwf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
 36582  01A43A  0E02               	movlw	high I2C1_MasterWrite@trBlock
 36583  01A43C  6F18               	movwf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 36584  01A43E  C120  F119         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 36585  01A442  C121  F11A         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 36586  01A446  C122  F11B         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 36587  01A44A  C123  F11C         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 36588  01A44E  C124  F11D         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 36589  01A452  EC92  F0D3         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 36590                           
 36591                           ;i2c1.c: 612: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 36592  01A456  0E89               	movlw	low I2C1_MasterWrite@trBlock
 36593  01A458  0101               	movlb	1	; () banked
 36594  01A45A  6F17               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
 36595  01A45C  0E02               	movlw	high I2C1_MasterWrite@trBlock
 36596  01A45E  6F18               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
 36597  01A460  C125  F119         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 36598  01A464  C126  F11A         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 36599  01A468  0E01               	movlw	1
 36600  01A46A  ECBB  F0CB         	call	_I2C1_MasterTRBInsert
 36601                           
 36602                           ;i2c1.c: 613: }
 36603  01A46E  0012               	return	
 36604  01A470                     l1828:
 36605                           
 36606                           ;i2c1.c: 614: else
 36607                           ;i2c1.c: 615: {
 36608                           ;i2c1.c: 616: *pflag = I2C1_MESSAGE_FAIL;
 36609  01A470  C125  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 36610  01A474  C126  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 36611  01A478  0E01               	movlw	1
 36612  01A47A  6EDF               	movwf	indf2,c
 36613  01A47C  0012               	return	
 36614  01A47E                     __end_of_I2C1_MasterWrite:
 36615                           	opt stack 0
 36616                           tosu	equ	0xFFF
 36617                           tosh	equ	0xFFE
 36618                           tosl	equ	0xFFD
 36619                           pclath	equ	0xFFA
 36620                           tblptru	equ	0xFF8
 36621                           tblptrh	equ	0xFF7
 36622                           tblptrl	equ	0xFF6
 36623                           tablat	equ	0xFF5
 36624                           prodh	equ	0xFF4
 36625                           prodl	equ	0xFF3
 36626                           intcon	equ	0xFF2
 36627                           indf0	equ	0xFEF
 36628                           postinc0	equ	0xFEE
 36629                           fsr0h	equ	0xFEA
 36630                           fsr0l	equ	0xFE9
 36631                           wreg	equ	0xFE8
 36632                           indf1	equ	0xFE7
 36633                           postdec1	equ	0xFE5
 36634                           plusw1	equ	0xFE3
 36635                           fsr1h	equ	0xFE2
 36636                           fsr1l	equ	0xFE1
 36637                           indf2	equ	0xFDF
 36638                           postinc2	equ	0xFDE
 36639                           postdec2	equ	0xFDD
 36640                           plusw2	equ	0xFDB
 36641                           fsr2h	equ	0xFDA
 36642                           fsr2l	equ	0xFD9
 36643                           status	equ	0xFD8
 36644                           
 36645 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 36646 ;; Defined at:
 36647 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 36648 ;; Parameters:    Size  Location     Type
 36649 ;;  ptrb            2   23[BANK1 ] PTR struct .
 36650 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 36651 ;;  pdata           2   25[BANK1 ] PTR unsigned char 
 36652 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 36653 ;;  length          1   27[BANK1 ] unsigned char 
 36654 ;;  address         2   28[BANK1 ] unsigned int 
 36655 ;; Auto vars:     Size  Location     Type
 36656 ;;		None
 36657 ;; Return value:  Size  Location     Type
 36658 ;;                  1    wreg      void 
 36659 ;; Registers used:
 36660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36661 ;; Tracked objects:
 36662 ;;		On entry : 0/0
 36663 ;;		On exit  : 0/0
 36664 ;;		Unchanged: 0/0
 36665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36666 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36668 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36669 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;Total ram usage:        9 bytes
 36671 ;; Hardware stack levels used:    1
 36672 ;; Hardware stack levels required when called:   13
 36673 ;; This function calls:
 36674 ;;		Nothing
 36675 ;; This function is called by:
 36676 ;;		_I2C1_MasterWrite
 36677 ;; This function uses a non-reentrant model
 36678 ;;
 36679                           
 36680                           	psect	text91
 36681  01A724                     __ptext91:
 36682                           	opt stack 0
 36683  01A724                     _I2C1_MasterWriteTRBBuild:
 36684                           	opt stack 14
 36685                           
 36686                           ;i2c1.c: 727: ptrb->address = address << 1;
 36687                           
 36688                           ;incstack = 0
 36689  01A724  C11C  F11E         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 36690  01A728  C11D  F11F         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 36691  01A72C  90D8               	bcf	status,0,c
 36692  01A72E  0101               	movlb	1	; () banked
 36693  01A730  371E               	rlcf	??_I2C1_MasterWriteTRBBuild& (0+255),f,b
 36694  01A732  371F               	rlcf	(??_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
 36695  01A734  C117  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 36696  01A738  C118  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 36697  01A73C  C11E  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 36698  01A740  C11F  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 36699                           
 36700                           ; BSR set to: 1
 36701                           ;i2c1.c: 728: ptrb->length = length;
 36702  01A744  EE20 F002          	lfsr	2,2
 36703  01A748  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 36704  01A74A  26D9               	addwf	fsr2l,f,c
 36705  01A74C  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 36706  01A74E  22DA               	addwfc	fsr2h,f,c
 36707  01A750  C11B  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 36708                           
 36709                           ; BSR set to: 1
 36710                           ;i2c1.c: 729: ptrb->pbuffer = pdata;
 36711  01A754  EE20 F003          	lfsr	2,3
 36712  01A758  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 36713  01A75A  26D9               	addwf	fsr2l,f,c
 36714  01A75C  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 36715  01A75E  22DA               	addwfc	fsr2h,f,c
 36716  01A760  C119  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 36717  01A764  C11A  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 36718                           
 36719                           ; BSR set to: 1
 36720  01A768  0012               	return		;funcret
 36721  01A76A                     __end_of_I2C1_MasterWriteTRBBuild:
 36722                           	opt stack 0
 36723                           tosu	equ	0xFFF
 36724                           tosh	equ	0xFFE
 36725                           tosl	equ	0xFFD
 36726                           pclath	equ	0xFFA
 36727                           tblptru	equ	0xFF8
 36728                           tblptrh	equ	0xFF7
 36729                           tblptrl	equ	0xFF6
 36730                           tablat	equ	0xFF5
 36731                           prodh	equ	0xFF4
 36732                           prodl	equ	0xFF3
 36733                           intcon	equ	0xFF2
 36734                           indf0	equ	0xFEF
 36735                           postinc0	equ	0xFEE
 36736                           fsr0h	equ	0xFEA
 36737                           fsr0l	equ	0xFE9
 36738                           wreg	equ	0xFE8
 36739                           indf1	equ	0xFE7
 36740                           postdec1	equ	0xFE5
 36741                           plusw1	equ	0xFE3
 36742                           fsr1h	equ	0xFE2
 36743                           fsr1l	equ	0xFE1
 36744                           indf2	equ	0xFDF
 36745                           postinc2	equ	0xFDE
 36746                           postdec2	equ	0xFDD
 36747                           plusw2	equ	0xFDB
 36748                           fsr2h	equ	0xFDA
 36749                           fsr2l	equ	0xFD9
 36750                           status	equ	0xFD8
 36751                           
 36752 ;; *************** function _I2C1_MasterTRBInsert *****************
 36753 ;; Defined at:
 36754 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 36755 ;; Parameters:    Size  Location     Type
 36756 ;;  count           1    wreg     unsigned char 
 36757 ;;  ptrb_list       2   23[BANK1 ] PTR struct .
 36758 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 36759 ;;  pflag           2   25[BANK1 ] PTR enum E17311
 36760 ;;		 -> OLED_I2C_Status(1), 
 36761 ;; Auto vars:     Size  Location     Type
 36762 ;;  count           1   28[BANK1 ] unsigned char 
 36763 ;; Return value:  Size  Location     Type
 36764 ;;                  1    wreg      void 
 36765 ;; Registers used:
 36766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36767 ;; Tracked objects:
 36768 ;;		On entry : 0/0
 36769 ;;		On exit  : 0/0
 36770 ;;		Unchanged: 0/0
 36771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36772 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36773 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36774 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36775 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36776 ;;Total ram usage:        6 bytes
 36777 ;; Hardware stack levels used:    1
 36778 ;; Hardware stack levels required when called:   14
 36779 ;; This function calls:
 36780 ;;		_I2C1_WaitForLastPacketToComplete
 36781 ;; This function is called by:
 36782 ;;		_I2C1_MasterWrite
 36783 ;;		_I2C1_MasterRead
 36784 ;; This function uses a non-reentrant model
 36785 ;;
 36786                           
 36787                           	psect	text92
 36788  019776                     __ptext92:
 36789                           	opt stack 0
 36790  019776                     _I2C1_MasterTRBInsert:
 36791                           	opt stack 13
 36792                           
 36793                           ; BSR set to: 1
 36794                           ;incstack = 0
 36795                           ;I2C1_MasterTRBInsert@count stored from wreg
 36796  019776  0101               	movlb	1	; () banked
 36797  019778  6F1C               	movwf	I2C1_MasterTRBInsert@count& (0+255),b
 36798                           
 36799                           ;i2c1.c: 661: if (i2c1_object.trStatus.s.full != 1)
 36800  01977A  0102               	movlb	2	; () banked
 36801  01977C  B10D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 36802  01977E  D039               	goto	l1846
 36803                           
 36804                           ; BSR set to: 2
 36805                           ;i2c1.c: 662: {
 36806                           ;i2c1.c: 663: *pflag = I2C1_MESSAGE_PENDING;
 36807  019780  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 36808  019784  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 36809  019788  0E02               	movlw	2
 36810  01978A  6EDF               	movwf	indf2,c
 36811                           
 36812                           ; BSR set to: 2
 36813                           ;i2c1.c: 665: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 36814  01978C  EE20 F001          	lfsr	2,1
 36815  019790  5109               	movf	_i2c1_object& (0+255),w,b
 36816  019792  26D9               	addwf	fsr2l,f,c
 36817  019794  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 36818  019796  22DA               	addwfc	fsr2h,f,c
 36819  019798  C117  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 36820  01979C  C118  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 36821                           
 36822                           ; BSR set to: 2
 36823                           ;i2c1.c: 666: i2c1_object.pTrTail->count = count;
 36824  0197A0  C209  FFD9         	movff	_i2c1_object,fsr2l
 36825  0197A4  C20A  FFDA         	movff	_i2c1_object+1,fsr2h
 36826  0197A8  C11C  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 36827                           
 36828                           ; BSR set to: 2
 36829                           ;i2c1.c: 667: i2c1_object.pTrTail->pTrFlag = pflag;
 36830  0197AC  EE20 F003          	lfsr	2,3
 36831  0197B0  5109               	movf	_i2c1_object& (0+255),w,b
 36832  0197B2  26D9               	addwf	fsr2l,f,c
 36833  0197B4  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 36834  0197B6  22DA               	addwfc	fsr2h,f,c
 36835  0197B8  C119  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 36836  0197BC  C11A  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 36837                           
 36838                           ; BSR set to: 2
 36839                           ;i2c1.c: 668: i2c1_object.pTrTail++;
 36840  0197C0  0E05               	movlw	5
 36841  0197C2  2709               	addwf	_i2c1_object& (0+255),f,b
 36842  0197C4  0E00               	movlw	0
 36843  0197C6  230A               	addwfc	(_i2c1_object+1)& (0+255),f,b
 36844                           
 36845                           ; BSR set to: 2
 36846                           ;i2c1.c: 671: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 36847  0197C8  0E93               	movlw	low (_i2c1_tr_queue+5)
 36848  0197CA  1909               	xorwf	_i2c1_object& (0+255),w,b
 36849  0197CC  E108               	bnz	l15774
 36850  0197CE  0E02               	movlw	high (_i2c1_tr_queue+5)
 36851  0197D0  190A               	xorwf	(_i2c1_object+1)& (0+255),w,b
 36852  0197D2  A4D8               	btfss	status,2,c
 36853  0197D4  D004               	goto	l1847
 36854                           
 36855                           ; BSR set to: 2
 36856                           ;i2c1.c: 672: {
 36857                           ;i2c1.c: 674: i2c1_object.pTrTail = i2c1_tr_queue;
 36858  0197D6  0E8E               	movlw	low _i2c1_tr_queue
 36859  0197D8  6F09               	movwf	_i2c1_object& (0+255),b
 36860  0197DA  0E02               	movlw	high _i2c1_tr_queue
 36861  0197DC  6F0A               	movwf	(_i2c1_object+1)& (0+255),b
 36862  0197DE                     l1847:
 36863  0197DE                     l15774:
 36864                           
 36865                           ; BSR set to: 2
 36866                           ;i2c1.c: 675: }
 36867                           ;i2c1.c: 679: i2c1_object.trStatus.s.empty = 0;
 36868  0197DE  930D               	bcf	(_i2c1_object+4)& (0+255),1,b
 36869                           
 36870                           ;i2c1.c: 682: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 36871  0197E0  5109               	movf	_i2c1_object& (0+255),w,b
 36872  0197E2  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 36873  0197E4  E10C               	bnz	l15780
 36874  0197E6  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 36875  0197E8  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 36876  0197EA  A4D8               	btfss	status,2,c
 36877  0197EC  D008               	goto	l1849
 36878                           
 36879                           ; BSR set to: 2
 36880                           ;i2c1.c: 683: {
 36881                           ;i2c1.c: 685: i2c1_object.trStatus.s.full = 1;
 36882  0197EE  810D               	bsf	(_i2c1_object+4)& (0+255),0,b
 36883                           
 36884                           ; BSR set to: 2
 36885                           ;i2c1.c: 686: }
 36886                           ;i2c1.c: 688: }
 36887  0197F0  D006               	goto	l1849
 36888  0197F2                     l1846:
 36889                           
 36890                           ; BSR set to: 2
 36891                           ;i2c1.c: 689: else
 36892                           ;i2c1.c: 690: {
 36893                           ;i2c1.c: 691: *pflag = I2C1_MESSAGE_FAIL;
 36894                           
 36895                           ; BSR set to: 2
 36896  0197F2  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 36897  0197F6  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 36898  0197FA  0E01               	movlw	1
 36899  0197FC  6EDF               	movwf	indf2,c
 36900  0197FE                     l1849:
 36901  0197FE                     l15780:
 36902                           
 36903                           ; BSR set to: 2
 36904                           ;i2c1.c: 692: }
 36905                           ;i2c1.c: 695: if (*pflag == I2C1_MESSAGE_PENDING)
 36906  0197FE  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 36907  019802  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 36908  019806  0E02               	movlw	2
 36909  019808  18DE               	xorwf	postinc2,w,c
 36910  01980A  A4D8               	btfss	status,2,c
 36911  01980C  0012               	return	
 36912                           
 36913                           ; BSR set to: 2
 36914                           ;i2c1.c: 696: {
 36915                           ;i2c1.c: 697: I2C1_WaitForLastPacketToComplete();
 36916  01980E  ECCF  F0D8         	call	_I2C1_WaitForLastPacketToComplete	;wreg free
 36917                           
 36918                           ;i2c1.c: 702: PIR3bits.SSP1IF = 1;
 36919  019812  010E               	movlb	14	; () banked
 36920  019814  8136               	bsf	54,0,b	;volatile
 36921  019816  0012               	return	
 36922  019818                     __end_of_I2C1_MasterTRBInsert:
 36923                           	opt stack 0
 36924                           tosu	equ	0xFFF
 36925                           tosh	equ	0xFFE
 36926                           tosl	equ	0xFFD
 36927                           pclath	equ	0xFFA
 36928                           tblptru	equ	0xFF8
 36929                           tblptrh	equ	0xFF7
 36930                           tblptrl	equ	0xFF6
 36931                           tablat	equ	0xFF5
 36932                           prodh	equ	0xFF4
 36933                           prodl	equ	0xFF3
 36934                           intcon	equ	0xFF2
 36935                           indf0	equ	0xFEF
 36936                           postinc0	equ	0xFEE
 36937                           fsr0h	equ	0xFEA
 36938                           fsr0l	equ	0xFE9
 36939                           wreg	equ	0xFE8
 36940                           indf1	equ	0xFE7
 36941                           postdec1	equ	0xFE5
 36942                           plusw1	equ	0xFE3
 36943                           fsr1h	equ	0xFE2
 36944                           fsr1l	equ	0xFE1
 36945                           indf2	equ	0xFDF
 36946                           postinc2	equ	0xFDE
 36947                           postdec2	equ	0xFDD
 36948                           plusw2	equ	0xFDB
 36949                           fsr2h	equ	0xFDA
 36950                           fsr2l	equ	0xFD9
 36951                           status	equ	0xFD8
 36952                           
 36953 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 36954 ;; Defined at:
 36955 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 36956 ;; Parameters:    Size  Location     Type
 36957 ;;		None
 36958 ;; Auto vars:     Size  Location     Type
 36959 ;;		None
 36960 ;; Return value:  Size  Location     Type
 36961 ;;                  1    wreg      void 
 36962 ;; Registers used:
 36963 ;;		wreg, status,2
 36964 ;; Tracked objects:
 36965 ;;		On entry : 0/0
 36966 ;;		On exit  : 0/0
 36967 ;;		Unchanged: 0/0
 36968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36973 ;;Total ram usage:        0 bytes
 36974 ;; Hardware stack levels used:    1
 36975 ;; Hardware stack levels required when called:   13
 36976 ;; This function calls:
 36977 ;;		Nothing
 36978 ;; This function is called by:
 36979 ;;		_I2C1_MasterTRBInsert
 36980 ;; This function uses a non-reentrant model
 36981 ;;
 36982                           
 36983                           	psect	text93
 36984  01B19E                     __ptext93:
 36985                           	opt stack 0
 36986  01B19E                     _I2C1_WaitForLastPacketToComplete:
 36987                           	opt stack 13
 36988                           
 36989                           ;i2c1.c: 647: {
 36990                           
 36991                           ;i2c1.c: 646: while(i2c1_state != S_MASTER_IDLE)
 36992                           
 36993                           ;incstack = 0
 36994  01B19E  0102               	movlb	2	; () banked
 36995  01B1A0  516D               	movf	_i2c1_state& (0+255),w,b
 36996  01B1A2  B4D8               	btfsc	status,2,c
 36997  01B1A4  0012               	return	
 36998  01B1A6  D7FB               	goto	_I2C1_WaitForLastPacketToComplete
 36999  01B1A8                     __end_of_I2C1_WaitForLastPacketToComplete:
 37000                           	opt stack 0
 37001                           tosu	equ	0xFFF
 37002                           tosh	equ	0xFFE
 37003                           tosl	equ	0xFFD
 37004                           pclath	equ	0xFFA
 37005                           tblptru	equ	0xFF8
 37006                           tblptrh	equ	0xFF7
 37007                           tblptrl	equ	0xFF6
 37008                           tablat	equ	0xFF5
 37009                           prodh	equ	0xFF4
 37010                           prodl	equ	0xFF3
 37011                           intcon	equ	0xFF2
 37012                           indf0	equ	0xFEF
 37013                           postinc0	equ	0xFEE
 37014                           fsr0h	equ	0xFEA
 37015                           fsr0l	equ	0xFE9
 37016                           wreg	equ	0xFE8
 37017                           indf1	equ	0xFE7
 37018                           postdec1	equ	0xFE5
 37019                           plusw1	equ	0xFE3
 37020                           fsr1h	equ	0xFE2
 37021                           fsr1l	equ	0xFE1
 37022                           indf2	equ	0xFDF
 37023                           postinc2	equ	0xFDE
 37024                           postdec2	equ	0xFDD
 37025                           plusw2	equ	0xFDB
 37026                           fsr2h	equ	0xFDA
 37027                           fsr2l	equ	0xFD9
 37028                           status	equ	0xFD8
 37029                           
 37030 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 37031 ;; Defined at:
 37032 ;;		line 136 in file "mcc_generated_files/interrupt_manager.c"
 37033 ;; Parameters:    Size  Location     Type
 37034 ;;		None
 37035 ;; Auto vars:     Size  Location     Type
 37036 ;;		None
 37037 ;; Return value:  Size  Location     Type
 37038 ;;                  1    wreg      void 
 37039 ;; Registers used:
 37040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37041 ;; Tracked objects:
 37042 ;;		On entry : 0/0
 37043 ;;		On exit  : 0/0
 37044 ;;		Unchanged: 0/0
 37045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37048 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37049 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37050 ;;Total ram usage:       21 bytes
 37051 ;; Hardware stack levels used:    1
 37052 ;; Hardware stack levels required when called:   12
 37053 ;; This function calls:
 37054 ;;		Absolute function
 37055 ;;		_EUSART2_Transmit_ISR
 37056 ;;		_TMR6_ISR
 37057 ;;		_TMR7_ISR
 37058 ;; This function is called by:
 37059 ;;		Interrupt level 1
 37060 ;; This function uses a non-reentrant model
 37061 ;;
 37062                           
 37063                           	psect	intcodelo
 37064  000018                     __pintcodelo:
 37065                           	opt stack 0
 37066  000018                     _INTERRUPT_InterruptManagerLow:
 37067                           	opt stack 10
 37068                           
 37069                           ; BSR set to: 2
 37070                           ;incstack = 0
 37071  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37072  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 37073  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 37074  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 37075  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 37076  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 37077  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 37078  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 37079  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 37080  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 37081  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 37082  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 37083  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 37084  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 37085  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 37086  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 37087  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 37088  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 37089  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 37090  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 37091  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 37092  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 37093                           
 37094                           ;interrupt_manager.c: 139: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 37095  00006E  010E               	movlb	14	; () banked
 37096  000070  BB2E               	btfsc	46,5,b	;volatile
 37097                           
 37098                           ; BSR set to: 14
 37099  000072  AB38               	btfss	56,5,b	;volatile
 37100  000074  D003               	goto	i1l267
 37101                           
 37102                           ; BSR set to: 14
 37103                           ;interrupt_manager.c: 140: {
 37104                           ;interrupt_manager.c: 141: TMR6_ISR();
 37105  000076  ECA4  F0D6         	call	_TMR6_ISR	;wreg free
 37106                           
 37107                           ;interrupt_manager.c: 142: }
 37108  00007A  D015               	goto	i1l271
 37109  00007C                     i1l267:
 37110                           
 37111                           ; BSR set to: 14
 37112                           ;interrupt_manager.c: 143: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 37113  00007C  BD2C               	btfsc	44,6,b	;volatile
 37114                           
 37115                           ; BSR set to: 14
 37116  00007E  AD36               	btfss	54,6,b	;volatile
 37117  000080  D00D               	goto	i1l269
 37118                           
 37119                           ; BSR set to: 14
 37120                           ;interrupt_manager.c: 144: {
 37121                           ;interrupt_manager.c: 145: EUSART2_TxDefaultInterruptHandler();
 37122  000082  D801               	call	i1u3444_28
 37123  000084  D010               	goto	i1l271
 37124  000086                     i1u3444_28:
 37125  000086  0005               	push	
 37126  000088  6EFA               	movwf	pclath,c
 37127  00008A  0102               	movlb	2	; () banked
 37128  00008C  5159               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 37129  00008E  6EFD               	movwf	tosl,c
 37130  000090  515A               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 37131  000092  6EFE               	movwf	tosh,c
 37132  000094  515B               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 37133  000096  6EFF               	movwf	tosu,c
 37134  000098  50FA               	movf	pclath,w,c
 37135  00009A  0012               	return		;indir
 37136  00009C                     i1l269:
 37137                           
 37138                           ; BSR set to: 14
 37139                           ;interrupt_manager.c: 147: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 37140  00009C  BD2E               	btfsc	46,6,b	;volatile
 37141                           
 37142                           ; BSR set to: 14
 37143  00009E  AD38               	btfss	56,6,b	;volatile
 37144  0000A0  D002               	goto	i1l271
 37145                           
 37146                           ; BSR set to: 14
 37147                           ;interrupt_manager.c: 148: {
 37148                           ;interrupt_manager.c: 149: TMR7_ISR();
 37149  0000A2  ECCF  F0D5         	call	_TMR7_ISR	;wreg free
 37150  0000A6                     i1l271:
 37151                           
 37152                           ;interrupt_manager.c: 151: else
 37153                           ;interrupt_manager.c: 152: {
 37154  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 37155  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 37156  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 37157  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 37158  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 37159  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 37160  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 37161  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 37162  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 37163  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 37164  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 37165  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 37166  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 37167  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 37168  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 37169  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 37170  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 37171  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 37172  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 37173  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 37174  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 37175  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37176  0000FC  0010               	retfie	
 37177  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 37178                           	opt stack 0
 37179                           tosu	equ	0xFFF
 37180                           tosh	equ	0xFFE
 37181                           tosl	equ	0xFFD
 37182                           pclatu	equ	0xFFB
 37183                           pclath	equ	0xFFA
 37184                           tblptru	equ	0xFF8
 37185                           tblptrh	equ	0xFF7
 37186                           tblptrl	equ	0xFF6
 37187                           tablat	equ	0xFF5
 37188                           prodh	equ	0xFF4
 37189                           prodl	equ	0xFF3
 37190                           intcon	equ	0xFF2
 37191                           indf0	equ	0xFEF
 37192                           postinc0	equ	0xFEE
 37193                           fsr0h	equ	0xFEA
 37194                           fsr0l	equ	0xFE9
 37195                           wreg	equ	0xFE8
 37196                           indf1	equ	0xFE7
 37197                           postdec1	equ	0xFE5
 37198                           plusw1	equ	0xFE3
 37199                           fsr1h	equ	0xFE2
 37200                           fsr1l	equ	0xFE1
 37201                           bsr	equ	0xFE0
 37202                           indf2	equ	0xFDF
 37203                           postinc2	equ	0xFDE
 37204                           postdec2	equ	0xFDD
 37205                           plusw2	equ	0xFDB
 37206                           fsr2h	equ	0xFDA
 37207                           fsr2l	equ	0xFD9
 37208                           status	equ	0xFD8
 37209                           
 37210 ;; *************** function _TMR7_ISR *****************
 37211 ;; Defined at:
 37212 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 37213 ;; Parameters:    Size  Location     Type
 37214 ;;		None
 37215 ;; Auto vars:     Size  Location     Type
 37216 ;;		None
 37217 ;; Return value:  Size  Location     Type
 37218 ;;                  1    wreg      void 
 37219 ;; Registers used:
 37220 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37221 ;; Tracked objects:
 37222 ;;		On entry : 0/0
 37223 ;;		On exit  : 0/0
 37224 ;;		Unchanged: 0/0
 37225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37230 ;;Total ram usage:        0 bytes
 37231 ;; Hardware stack levels used:    1
 37232 ;; Hardware stack levels required when called:   11
 37233 ;; This function calls:
 37234 ;;		Absolute function
 37235 ;;		_TMR7_DefaultInterruptHandler
 37236 ;;		_TMR7_WriteTimer
 37237 ;;		_acquisitionTimerCallback
 37238 ;; This function is called by:
 37239 ;;		_INTERRUPT_InterruptManagerLow
 37240 ;; This function uses a non-reentrant model
 37241 ;;
 37242                           
 37243                           	psect	text95
 37244  01AB9E                     __ptext95:
 37245                           	opt stack 0
 37246  01AB9E                     _TMR7_ISR:
 37247                           	opt stack 10
 37248                           
 37249                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 37250                           
 37251                           ;incstack = 0
 37252  01AB9E  010E               	movlb	14	; () banked
 37253  01ABA0  9D38               	bcf	56,6,b	;volatile
 37254                           
 37255                           ; BSR set to: 14
 37256                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 37257  01ABA2  C268  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 37258  01ABA6  C269  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 37259  01ABAA  ECDF  F0D6         	call	_TMR7_WriteTimer	;wreg free
 37260                           
 37261                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 37262  01ABAE  0102               	movlb	2	; () banked
 37263  01ABB0  514D               	movf	_TMR7_InterruptHandler& (0+255),w,b
 37264  01ABB2  114E               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 37265  01ABB4  114F               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 37266  01ABB6  B4D8               	btfsc	status,2,c
 37267  01ABB8  0012               	return	
 37268                           
 37269                           ; BSR set to: 2
 37270                           ;tmr7.c: 172: {
 37271                           ;tmr7.c: 173: TMR7_InterruptHandler();
 37272  01ABBA  D801               	call	i1u3411_28
 37273  01ABBC  0012               	return	
 37274  01ABBE                     i1u3411_28:
 37275  01ABBE  0005               	push	
 37276  01ABC0  6EFA               	movwf	pclath,c
 37277  01ABC2  514D               	movf	_TMR7_InterruptHandler& (0+255),w,b
 37278  01ABC4  6EFD               	movwf	tosl,c
 37279  01ABC6  514E               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 37280  01ABC8  6EFE               	movwf	tosh,c
 37281  01ABCA  514F               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 37282  01ABCC  6EFF               	movwf	tosu,c
 37283  01ABCE  50FA               	movf	pclath,w,c
 37284  01ABD0  0012               	return		;indir
 37285  01ABD2                     __end_of_TMR7_ISR:
 37286                           	opt stack 0
 37287                           tosu	equ	0xFFF
 37288                           tosh	equ	0xFFE
 37289                           tosl	equ	0xFFD
 37290                           pclatu	equ	0xFFB
 37291                           pclath	equ	0xFFA
 37292                           tblptru	equ	0xFF8
 37293                           tblptrh	equ	0xFF7
 37294                           tblptrl	equ	0xFF6
 37295                           tablat	equ	0xFF5
 37296                           prodh	equ	0xFF4
 37297                           prodl	equ	0xFF3
 37298                           intcon	equ	0xFF2
 37299                           indf0	equ	0xFEF
 37300                           postinc0	equ	0xFEE
 37301                           fsr0h	equ	0xFEA
 37302                           fsr0l	equ	0xFE9
 37303                           wreg	equ	0xFE8
 37304                           indf1	equ	0xFE7
 37305                           postdec1	equ	0xFE5
 37306                           plusw1	equ	0xFE3
 37307                           fsr1h	equ	0xFE2
 37308                           fsr1l	equ	0xFE1
 37309                           bsr	equ	0xFE0
 37310                           indf2	equ	0xFDF
 37311                           postinc2	equ	0xFDE
 37312                           postdec2	equ	0xFDD
 37313                           plusw2	equ	0xFDB
 37314                           fsr2h	equ	0xFDA
 37315                           fsr2l	equ	0xFD9
 37316                           status	equ	0xFD8
 37317                           
 37318 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 37319 ;; Defined at:
 37320 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 37321 ;; Parameters:    Size  Location     Type
 37322 ;;		None
 37323 ;; Auto vars:     Size  Location     Type
 37324 ;;		None
 37325 ;; Return value:  Size  Location     Type
 37326 ;;                  1    wreg      void 
 37327 ;; Registers used:
 37328 ;;		None
 37329 ;; Tracked objects:
 37330 ;;		On entry : 0/0
 37331 ;;		On exit  : 0/0
 37332 ;;		Unchanged: 0/0
 37333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37338 ;;Total ram usage:        0 bytes
 37339 ;; Hardware stack levels used:    1
 37340 ;; Hardware stack levels required when called:    9
 37341 ;; This function calls:
 37342 ;;		Nothing
 37343 ;; This function is called by:
 37344 ;;		_TMR7_Initialize
 37345 ;;		_TMR7_ISR
 37346 ;; This function uses a non-reentrant model
 37347 ;;
 37348                           
 37349                           	psect	text96
 37350  01B1F2                     __ptext96:
 37351                           	opt stack 0
 37352  01B1F2                     _TMR7_DefaultInterruptHandler:
 37353                           	opt stack 11
 37354                           
 37355                           ;incstack = 0
 37356  01B1F2  0012               	return		;funcret
 37357  01B1F4                     __end_of_TMR7_DefaultInterruptHandler:
 37358                           	opt stack 0
 37359                           tosu	equ	0xFFF
 37360                           tosh	equ	0xFFE
 37361                           tosl	equ	0xFFD
 37362                           pclatu	equ	0xFFB
 37363                           pclath	equ	0xFFA
 37364                           tblptru	equ	0xFF8
 37365                           tblptrh	equ	0xFF7
 37366                           tblptrl	equ	0xFF6
 37367                           tablat	equ	0xFF5
 37368                           prodh	equ	0xFF4
 37369                           prodl	equ	0xFF3
 37370                           intcon	equ	0xFF2
 37371                           indf0	equ	0xFEF
 37372                           postinc0	equ	0xFEE
 37373                           fsr0h	equ	0xFEA
 37374                           fsr0l	equ	0xFE9
 37375                           wreg	equ	0xFE8
 37376                           indf1	equ	0xFE7
 37377                           postdec1	equ	0xFE5
 37378                           plusw1	equ	0xFE3
 37379                           fsr1h	equ	0xFE2
 37380                           fsr1l	equ	0xFE1
 37381                           bsr	equ	0xFE0
 37382                           indf2	equ	0xFDF
 37383                           postinc2	equ	0xFDE
 37384                           postdec2	equ	0xFDD
 37385                           plusw2	equ	0xFDB
 37386                           fsr2h	equ	0xFDA
 37387                           fsr2l	equ	0xFD9
 37388                           status	equ	0xFD8
 37389                           
 37390 ;; *************** function _acquisitionTimerCallback *****************
 37391 ;; Defined at:
 37392 ;;		line 411 in file "main.c"
 37393 ;; Parameters:    Size  Location     Type
 37394 ;;		None
 37395 ;; Auto vars:     Size  Location     Type
 37396 ;;		None
 37397 ;; Return value:  Size  Location     Type
 37398 ;;                  1    wreg      void 
 37399 ;; Registers used:
 37400 ;;		wreg, status,2, cstack
 37401 ;; Tracked objects:
 37402 ;;		On entry : 0/0
 37403 ;;		On exit  : 0/0
 37404 ;;		Unchanged: 0/0
 37405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37410 ;;Total ram usage:        0 bytes
 37411 ;; Hardware stack levels used:    1
 37412 ;; Hardware stack levels required when called:   10
 37413 ;; This function calls:
 37414 ;;		_ADCC_ClearAccumulator
 37415 ;;		_ADCC_DischargeSampleCapacitor
 37416 ;;		_ADCC_StartConversion
 37417 ;; This function is called by:
 37418 ;;		_main
 37419 ;;		_TMR7_ISR
 37420 ;; This function uses a non-reentrant model
 37421 ;;
 37422                           
 37423                           	psect	text97
 37424  01B0A8                     __ptext97:
 37425                           	opt stack 0
 37426  01B0A8                     _acquisitionTimerCallback:
 37427                           	opt stack 10
 37428                           
 37429                           ;main.c: 414: ADCC_DischargeSampleCapacitor();
 37430                           
 37431                           ;incstack = 0
 37432  01B0A8  ECE2  F0D8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 37433                           
 37434                           ;main.c: 417: ADCC_ClearAccumulator();
 37435  01B0AC  ECE9  F0D8         	call	_ADCC_ClearAccumulator	;wreg free
 37436                           
 37437                           ;main.c: 420: ADCC_StartConversion(next_channel);
 37438  01B0B0  0102               	movlb	2	; () banked
 37439  01B0B2  51F4               	movf	_next_channel& (0+255),w,b
 37440  01B0B4  ECBC  F0D8         	call	_ADCC_StartConversion
 37441  01B0B8  0012               	return		;funcret
 37442  01B0BA                     __end_of_acquisitionTimerCallback:
 37443                           	opt stack 0
 37444                           tosu	equ	0xFFF
 37445                           tosh	equ	0xFFE
 37446                           tosl	equ	0xFFD
 37447                           pclatu	equ	0xFFB
 37448                           pclath	equ	0xFFA
 37449                           tblptru	equ	0xFF8
 37450                           tblptrh	equ	0xFF7
 37451                           tblptrl	equ	0xFF6
 37452                           tablat	equ	0xFF5
 37453                           prodh	equ	0xFF4
 37454                           prodl	equ	0xFF3
 37455                           intcon	equ	0xFF2
 37456                           indf0	equ	0xFEF
 37457                           postinc0	equ	0xFEE
 37458                           fsr0h	equ	0xFEA
 37459                           fsr0l	equ	0xFE9
 37460                           wreg	equ	0xFE8
 37461                           indf1	equ	0xFE7
 37462                           postdec1	equ	0xFE5
 37463                           plusw1	equ	0xFE3
 37464                           fsr1h	equ	0xFE2
 37465                           fsr1l	equ	0xFE1
 37466                           bsr	equ	0xFE0
 37467                           indf2	equ	0xFDF
 37468                           postinc2	equ	0xFDE
 37469                           postdec2	equ	0xFDD
 37470                           plusw2	equ	0xFDB
 37471                           fsr2h	equ	0xFDA
 37472                           fsr2l	equ	0xFD9
 37473                           status	equ	0xFD8
 37474                           
 37475 ;; *************** function _ADCC_StartConversion *****************
 37476 ;; Defined at:
 37477 ;;		line 115 in file "mcc_generated_files/adcc.c"
 37478 ;; Parameters:    Size  Location     Type
 37479 ;;  channel         1    wreg     enum E17782
 37480 ;; Auto vars:     Size  Location     Type
 37481 ;;  channel         1    0[BANK1 ] enum E17782
 37482 ;; Return value:  Size  Location     Type
 37483 ;;                  1    wreg      void 
 37484 ;; Registers used:
 37485 ;;		wreg
 37486 ;; Tracked objects:
 37487 ;;		On entry : 0/0
 37488 ;;		On exit  : 0/0
 37489 ;;		Unchanged: 0/0
 37490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37492 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37494 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37495 ;;Total ram usage:        1 bytes
 37496 ;; Hardware stack levels used:    1
 37497 ;; Hardware stack levels required when called:    9
 37498 ;; This function calls:
 37499 ;;		Nothing
 37500 ;; This function is called by:
 37501 ;;		_acquisitionTimerCallback
 37502 ;; This function uses a non-reentrant model
 37503 ;;
 37504                           
 37505                           	psect	text98
 37506  01B178                     __ptext98:
 37507                           	opt stack 0
 37508  01B178                     _ADCC_StartConversion:
 37509                           	opt stack 10
 37510                           
 37511                           ;incstack = 0
 37512                           ;ADCC_StartConversion@channel stored from wreg
 37513  01B178  0101               	movlb	1	; () banked
 37514  01B17A  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 37515                           
 37516                           ;adcc.c: 118: ADPCH = channel;
 37517  01B17C  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 37518                           
 37519                           ;adcc.c: 121: ADCON0bits.ADON = 1;
 37520  01B180  8E60               	bsf	3936,7,c	;volatile
 37521                           
 37522                           ;adcc.c: 124: ADCON0bits.ADGO = 1;
 37523  01B182  8060               	bsf	3936,0,c	;volatile
 37524  01B184  0012               	return		;funcret
 37525  01B186                     __end_of_ADCC_StartConversion:
 37526                           	opt stack 0
 37527                           tosu	equ	0xFFF
 37528                           tosh	equ	0xFFE
 37529                           tosl	equ	0xFFD
 37530                           pclatu	equ	0xFFB
 37531                           pclath	equ	0xFFA
 37532                           tblptru	equ	0xFF8
 37533                           tblptrh	equ	0xFF7
 37534                           tblptrl	equ	0xFF6
 37535                           tablat	equ	0xFF5
 37536                           prodh	equ	0xFF4
 37537                           prodl	equ	0xFF3
 37538                           intcon	equ	0xFF2
 37539                           indf0	equ	0xFEF
 37540                           postinc0	equ	0xFEE
 37541                           fsr0h	equ	0xFEA
 37542                           fsr0l	equ	0xFE9
 37543                           wreg	equ	0xFE8
 37544                           indf1	equ	0xFE7
 37545                           postdec1	equ	0xFE5
 37546                           plusw1	equ	0xFE3
 37547                           fsr1h	equ	0xFE2
 37548                           fsr1l	equ	0xFE1
 37549                           bsr	equ	0xFE0
 37550                           indf2	equ	0xFDF
 37551                           postinc2	equ	0xFDE
 37552                           postdec2	equ	0xFDD
 37553                           plusw2	equ	0xFDB
 37554                           fsr2h	equ	0xFDA
 37555                           fsr2l	equ	0xFD9
 37556                           status	equ	0xFD8
 37557                           
 37558 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 37559 ;; Defined at:
 37560 ;;		line 177 in file "mcc_generated_files/adcc.c"
 37561 ;; Parameters:    Size  Location     Type
 37562 ;;		None
 37563 ;; Auto vars:     Size  Location     Type
 37564 ;;		None
 37565 ;; Return value:  Size  Location     Type
 37566 ;;                  1    wreg      void 
 37567 ;; Registers used:
 37568 ;;		wreg, status,2
 37569 ;; Tracked objects:
 37570 ;;		On entry : 0/0
 37571 ;;		On exit  : 0/0
 37572 ;;		Unchanged: 0/0
 37573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37578 ;;Total ram usage:        0 bytes
 37579 ;; Hardware stack levels used:    1
 37580 ;; Hardware stack levels required when called:    9
 37581 ;; This function calls:
 37582 ;;		Nothing
 37583 ;; This function is called by:
 37584 ;;		_acquisitionTimerCallback
 37585 ;; This function uses a non-reentrant model
 37586 ;;
 37587                           
 37588                           	psect	text99
 37589  01B1C4                     __ptext99:
 37590                           	opt stack 0
 37591  01B1C4                     _ADCC_DischargeSampleCapacitor:
 37592                           	opt stack 10
 37593                           
 37594                           ;adcc.c: 180: ADPCH = 0x3c;
 37595                           
 37596                           ;incstack = 0
 37597  01B1C4  0E3C               	movlw	60
 37598  01B1C6  010F               	movlb	15	; () banked
 37599  01B1C8  6F5F               	movwf	95,b	;volatile
 37600                           
 37601                           ; BSR set to: 15
 37602  01B1CA  0012               	return		;funcret
 37603  01B1CC                     __end_of_ADCC_DischargeSampleCapacitor:
 37604                           	opt stack 0
 37605                           tosu	equ	0xFFF
 37606                           tosh	equ	0xFFE
 37607                           tosl	equ	0xFFD
 37608                           pclatu	equ	0xFFB
 37609                           pclath	equ	0xFFA
 37610                           tblptru	equ	0xFF8
 37611                           tblptrh	equ	0xFF7
 37612                           tblptrl	equ	0xFF6
 37613                           tablat	equ	0xFF5
 37614                           prodh	equ	0xFF4
 37615                           prodl	equ	0xFF3
 37616                           intcon	equ	0xFF2
 37617                           indf0	equ	0xFEF
 37618                           postinc0	equ	0xFEE
 37619                           fsr0h	equ	0xFEA
 37620                           fsr0l	equ	0xFE9
 37621                           wreg	equ	0xFE8
 37622                           indf1	equ	0xFE7
 37623                           postdec1	equ	0xFE5
 37624                           plusw1	equ	0xFE3
 37625                           fsr1h	equ	0xFE2
 37626                           fsr1l	equ	0xFE1
 37627                           bsr	equ	0xFE0
 37628                           indf2	equ	0xFDF
 37629                           postinc2	equ	0xFDE
 37630                           postdec2	equ	0xFDD
 37631                           plusw2	equ	0xFDB
 37632                           fsr2h	equ	0xFDA
 37633                           fsr2l	equ	0xFD9
 37634                           status	equ	0xFD8
 37635                           
 37636 ;; *************** function _ADCC_ClearAccumulator *****************
 37637 ;; Defined at:
 37638 ;;		line 207 in file "mcc_generated_files/adcc.c"
 37639 ;; Parameters:    Size  Location     Type
 37640 ;;		None
 37641 ;; Auto vars:     Size  Location     Type
 37642 ;;		None
 37643 ;; Return value:  Size  Location     Type
 37644 ;;                  1    wreg      void 
 37645 ;; Registers used:
 37646 ;;		None
 37647 ;; Tracked objects:
 37648 ;;		On entry : 0/0
 37649 ;;		On exit  : 0/0
 37650 ;;		Unchanged: 0/0
 37651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37656 ;;Total ram usage:        0 bytes
 37657 ;; Hardware stack levels used:    1
 37658 ;; Hardware stack levels required when called:    9
 37659 ;; This function calls:
 37660 ;;		Nothing
 37661 ;; This function is called by:
 37662 ;;		_acquisitionTimerCallback
 37663 ;; This function uses a non-reentrant model
 37664 ;;
 37665                           
 37666                           	psect	text100
 37667  01B1D2                     __ptext100:
 37668                           	opt stack 0
 37669  01B1D2                     _ADCC_ClearAccumulator:
 37670                           	opt stack 10
 37671                           
 37672                           ;adcc.c: 210: ADCON2bits.ADACLR = 1;
 37673                           
 37674                           ; BSR set to: 15
 37675                           ;incstack = 0
 37676  01B1D2  010F               	movlb	15	; () banked
 37677  01B1D4  875A               	bsf	90,3,b	;volatile
 37678                           
 37679                           ; BSR set to: 15
 37680  01B1D6  0012               	return		;funcret
 37681  01B1D8                     __end_of_ADCC_ClearAccumulator:
 37682                           	opt stack 0
 37683                           tosu	equ	0xFFF
 37684                           tosh	equ	0xFFE
 37685                           tosl	equ	0xFFD
 37686                           pclatu	equ	0xFFB
 37687                           pclath	equ	0xFFA
 37688                           tblptru	equ	0xFF8
 37689                           tblptrh	equ	0xFF7
 37690                           tblptrl	equ	0xFF6
 37691                           tablat	equ	0xFF5
 37692                           prodh	equ	0xFF4
 37693                           prodl	equ	0xFF3
 37694                           intcon	equ	0xFF2
 37695                           indf0	equ	0xFEF
 37696                           postinc0	equ	0xFEE
 37697                           fsr0h	equ	0xFEA
 37698                           fsr0l	equ	0xFE9
 37699                           wreg	equ	0xFE8
 37700                           indf1	equ	0xFE7
 37701                           postdec1	equ	0xFE5
 37702                           plusw1	equ	0xFE3
 37703                           fsr1h	equ	0xFE2
 37704                           fsr1l	equ	0xFE1
 37705                           bsr	equ	0xFE0
 37706                           indf2	equ	0xFDF
 37707                           postinc2	equ	0xFDE
 37708                           postdec2	equ	0xFDD
 37709                           plusw2	equ	0xFDB
 37710                           fsr2h	equ	0xFDA
 37711                           fsr2l	equ	0xFD9
 37712                           status	equ	0xFD8
 37713                           
 37714 ;; *************** function _TMR7_WriteTimer *****************
 37715 ;; Defined at:
 37716 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 37717 ;; Parameters:    Size  Location     Type
 37718 ;;  timerVal        2    0[BANK1 ] unsigned int 
 37719 ;; Auto vars:     Size  Location     Type
 37720 ;;		None
 37721 ;; Return value:  Size  Location     Type
 37722 ;;                  1    wreg      void 
 37723 ;; Registers used:
 37724 ;;		wreg, status,2
 37725 ;; Tracked objects:
 37726 ;;		On entry : 0/0
 37727 ;;		On exit  : 0/0
 37728 ;;		Unchanged: 0/0
 37729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37730 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37733 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37734 ;;Total ram usage:        2 bytes
 37735 ;; Hardware stack levels used:    1
 37736 ;; Hardware stack levels required when called:    9
 37737 ;; This function calls:
 37738 ;;		Nothing
 37739 ;; This function is called by:
 37740 ;;		_TMR7_ISR
 37741 ;;		_TMR7_Reload
 37742 ;; This function uses a non-reentrant model
 37743 ;;
 37744                           
 37745                           	psect	text101
 37746  01ADBE                     __ptext101:
 37747                           	opt stack 0
 37748  01ADBE                     _TMR7_WriteTimer:
 37749                           	opt stack 11
 37750                           
 37751                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 37752                           
 37753                           ; BSR set to: 15
 37754                           ;incstack = 0
 37755  01ADBE  010F               	movlb	15	; () banked
 37756  01ADC0  A530               	btfss	48,2,b	;volatile
 37757  01ADC2  D009               	goto	i1l688
 37758                           
 37759                           ; BSR set to: 15
 37760                           ;tmr7.c: 130: {
 37761                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 37762  01ADC4  9130               	bcf	48,0,b	;volatile
 37763                           
 37764                           ; BSR set to: 15
 37765                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 37766  01ADC6  0101               	movlb	1	; () banked
 37767  01ADC8  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 37768  01ADCA  010F               	movlb	15	; () banked
 37769  01ADCC  6F2F               	movwf	47,b	;volatile
 37770                           
 37771                           ; BSR set to: 15
 37772                           ;tmr7.c: 136: TMR7L = timerVal;
 37773  01ADCE  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 37774                           
 37775                           ; BSR set to: 15
 37776                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 37777  01ADD2  8130               	bsf	48,0,b	;volatile
 37778                           
 37779                           ;tmr7.c: 140: }
 37780  01ADD4  0012               	return	
 37781  01ADD6                     i1l688:
 37782                           
 37783                           ; BSR set to: 15
 37784                           ;tmr7.c: 141: else
 37785                           ;tmr7.c: 142: {
 37786                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 37787                           
 37788                           ; BSR set to: 15
 37789  01ADD6  0101               	movlb	1	; () banked
 37790  01ADD8  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 37791  01ADDA  010F               	movlb	15	; () banked
 37792  01ADDC  6F2F               	movwf	47,b	;volatile
 37793                           
 37794                           ; BSR set to: 15
 37795                           ;tmr7.c: 145: TMR7L = timerVal;
 37796  01ADDE  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 37797  01ADE2  0012               	return	
 37798  01ADE4                     __end_of_TMR7_WriteTimer:
 37799                           	opt stack 0
 37800                           tosu	equ	0xFFF
 37801                           tosh	equ	0xFFE
 37802                           tosl	equ	0xFFD
 37803                           pclatu	equ	0xFFB
 37804                           pclath	equ	0xFFA
 37805                           tblptru	equ	0xFF8
 37806                           tblptrh	equ	0xFF7
 37807                           tblptrl	equ	0xFF6
 37808                           tablat	equ	0xFF5
 37809                           prodh	equ	0xFF4
 37810                           prodl	equ	0xFF3
 37811                           intcon	equ	0xFF2
 37812                           indf0	equ	0xFEF
 37813                           postinc0	equ	0xFEE
 37814                           fsr0h	equ	0xFEA
 37815                           fsr0l	equ	0xFE9
 37816                           wreg	equ	0xFE8
 37817                           indf1	equ	0xFE7
 37818                           postdec1	equ	0xFE5
 37819                           plusw1	equ	0xFE3
 37820                           fsr1h	equ	0xFE2
 37821                           fsr1l	equ	0xFE1
 37822                           bsr	equ	0xFE0
 37823                           indf2	equ	0xFDF
 37824                           postinc2	equ	0xFDE
 37825                           postdec2	equ	0xFDD
 37826                           plusw2	equ	0xFDB
 37827                           fsr2h	equ	0xFDA
 37828                           fsr2l	equ	0xFD9
 37829                           status	equ	0xFD8
 37830                           
 37831 ;; *************** function _TMR6_ISR *****************
 37832 ;; Defined at:
 37833 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 37834 ;; Parameters:    Size  Location     Type
 37835 ;;		None
 37836 ;; Auto vars:     Size  Location     Type
 37837 ;;		None
 37838 ;; Return value:  Size  Location     Type
 37839 ;;                  1    wreg      void 
 37840 ;; Registers used:
 37841 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37842 ;; Tracked objects:
 37843 ;;		On entry : 0/0
 37844 ;;		On exit  : 0/0
 37845 ;;		Unchanged: 0/0
 37846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37851 ;;Total ram usage:        0 bytes
 37852 ;; Hardware stack levels used:    1
 37853 ;; Hardware stack levels required when called:   10
 37854 ;; This function calls:
 37855 ;;		Absolute function
 37856 ;;		_TMR6_DefaultInterruptHandler
 37857 ;;		_heartbeatTimerCallback
 37858 ;; This function is called by:
 37859 ;;		_INTERRUPT_InterruptManagerLow
 37860 ;; This function uses a non-reentrant model
 37861 ;;
 37862                           
 37863                           	psect	text102
 37864  01AD48                     __ptext102:
 37865                           	opt stack 0
 37866  01AD48                     _TMR6_ISR:
 37867                           	opt stack 11
 37868                           
 37869                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 37870                           
 37871                           ; BSR set to: 15
 37872                           ;incstack = 0
 37873  01AD48  010E               	movlb	14	; () banked
 37874  01AD4A  9B38               	bcf	56,5,b	;volatile
 37875                           
 37876                           ; BSR set to: 14
 37877                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 37878  01AD4C  0102               	movlb	2	; () banked
 37879  01AD4E  5153               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37880  01AD50  1154               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37881  01AD52  1155               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37882  01AD54  B4D8               	btfsc	status,2,c
 37883  01AD56  0012               	return	
 37884                           
 37885                           ; BSR set to: 2
 37886                           ;tmr6.c: 172: {
 37887                           ;tmr6.c: 173: TMR6_InterruptHandler();
 37888  01AD58  D801               	call	i1u3409_28
 37889  01AD5A  0012               	return	
 37890  01AD5C                     i1u3409_28:
 37891  01AD5C  0005               	push	
 37892  01AD5E  6EFA               	movwf	pclath,c
 37893  01AD60  5153               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37894  01AD62  6EFD               	movwf	tosl,c
 37895  01AD64  5154               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37896  01AD66  6EFE               	movwf	tosh,c
 37897  01AD68  5155               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37898  01AD6A  6EFF               	movwf	tosu,c
 37899  01AD6C  50FA               	movf	pclath,w,c
 37900  01AD6E  0012               	return		;indir
 37901  01AD70                     __end_of_TMR6_ISR:
 37902                           	opt stack 0
 37903                           tosu	equ	0xFFF
 37904                           tosh	equ	0xFFE
 37905                           tosl	equ	0xFFD
 37906                           pclatu	equ	0xFFB
 37907                           pclath	equ	0xFFA
 37908                           tblptru	equ	0xFF8
 37909                           tblptrh	equ	0xFF7
 37910                           tblptrl	equ	0xFF6
 37911                           tablat	equ	0xFF5
 37912                           prodh	equ	0xFF4
 37913                           prodl	equ	0xFF3
 37914                           intcon	equ	0xFF2
 37915                           indf0	equ	0xFEF
 37916                           postinc0	equ	0xFEE
 37917                           fsr0h	equ	0xFEA
 37918                           fsr0l	equ	0xFE9
 37919                           wreg	equ	0xFE8
 37920                           indf1	equ	0xFE7
 37921                           postdec1	equ	0xFE5
 37922                           plusw1	equ	0xFE3
 37923                           fsr1h	equ	0xFE2
 37924                           fsr1l	equ	0xFE1
 37925                           bsr	equ	0xFE0
 37926                           indf2	equ	0xFDF
 37927                           postinc2	equ	0xFDE
 37928                           postdec2	equ	0xFDD
 37929                           plusw2	equ	0xFDB
 37930                           fsr2h	equ	0xFDA
 37931                           fsr2l	equ	0xFD9
 37932                           status	equ	0xFD8
 37933                           
 37934 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 37935 ;; Defined at:
 37936 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 37937 ;; Parameters:    Size  Location     Type
 37938 ;;		None
 37939 ;; Auto vars:     Size  Location     Type
 37940 ;;		None
 37941 ;; Return value:  Size  Location     Type
 37942 ;;                  1    wreg      void 
 37943 ;; Registers used:
 37944 ;;		None
 37945 ;; Tracked objects:
 37946 ;;		On entry : 0/0
 37947 ;;		On exit  : 0/0
 37948 ;;		Unchanged: 0/0
 37949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37954 ;;Total ram usage:        0 bytes
 37955 ;; Hardware stack levels used:    1
 37956 ;; Hardware stack levels required when called:    9
 37957 ;; This function calls:
 37958 ;;		Nothing
 37959 ;; This function is called by:
 37960 ;;		_TMR6_Initialize
 37961 ;;		_TMR6_ISR
 37962 ;; This function uses a non-reentrant model
 37963 ;;
 37964                           
 37965                           	psect	text103
 37966  01B1F4                     __ptext103:
 37967                           	opt stack 0
 37968  01B1F4                     _TMR6_DefaultInterruptHandler:
 37969                           	opt stack 11
 37970                           
 37971                           ;incstack = 0
 37972  01B1F4  0012               	return		;funcret
 37973  01B1F6                     __end_of_TMR6_DefaultInterruptHandler:
 37974                           	opt stack 0
 37975                           tosu	equ	0xFFF
 37976                           tosh	equ	0xFFE
 37977                           tosl	equ	0xFFD
 37978                           pclatu	equ	0xFFB
 37979                           pclath	equ	0xFFA
 37980                           tblptru	equ	0xFF8
 37981                           tblptrh	equ	0xFF7
 37982                           tblptrl	equ	0xFF6
 37983                           tablat	equ	0xFF5
 37984                           prodh	equ	0xFF4
 37985                           prodl	equ	0xFF3
 37986                           intcon	equ	0xFF2
 37987                           indf0	equ	0xFEF
 37988                           postinc0	equ	0xFEE
 37989                           fsr0h	equ	0xFEA
 37990                           fsr0l	equ	0xFE9
 37991                           wreg	equ	0xFE8
 37992                           indf1	equ	0xFE7
 37993                           postdec1	equ	0xFE5
 37994                           plusw1	equ	0xFE3
 37995                           fsr1h	equ	0xFE2
 37996                           fsr1l	equ	0xFE1
 37997                           bsr	equ	0xFE0
 37998                           indf2	equ	0xFDF
 37999                           postinc2	equ	0xFDE
 38000                           postdec2	equ	0xFDD
 38001                           plusw2	equ	0xFDB
 38002                           fsr2h	equ	0xFDA
 38003                           fsr2l	equ	0xFD9
 38004                           status	equ	0xFD8
 38005                           
 38006 ;; *************** function _heartbeatTimerCallback *****************
 38007 ;; Defined at:
 38008 ;;		line 210 in file "main.c"
 38009 ;; Parameters:    Size  Location     Type
 38010 ;;		None
 38011 ;; Auto vars:     Size  Location     Type
 38012 ;;		None
 38013 ;; Return value:  Size  Location     Type
 38014 ;;                  1    wreg      void 
 38015 ;; Registers used:
 38016 ;;		wreg, status,2, status,0
 38017 ;; Tracked objects:
 38018 ;;		On entry : 0/0
 38019 ;;		On exit  : 0/0
 38020 ;;		Unchanged: 0/0
 38021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38024 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38025 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38026 ;;Total ram usage:        1 bytes
 38027 ;; Hardware stack levels used:    1
 38028 ;; Hardware stack levels required when called:    9
 38029 ;; This function calls:
 38030 ;;		Nothing
 38031 ;; This function is called by:
 38032 ;;		_main
 38033 ;;		_TMR6_ISR
 38034 ;; This function uses a non-reentrant model
 38035 ;;
 38036                           
 38037                           	psect	text104
 38038  01A830                     __ptext104:
 38039                           	opt stack 0
 38040  01A830                     _heartbeatTimerCallback:
 38041                           	opt stack 11
 38042                           
 38043                           ;main.c: 213: LATFbits.LATF2 = !LATFbits.LATF2;
 38044                           
 38045                           ;incstack = 0
 38046  01A830  B47E               	btfsc	3966,2,c	;volatile
 38047  01A832  D004               	goto	i1u1464_20
 38048  01A834  0101               	movlb	1	; () banked
 38049  01A836  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 38050  01A838  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 38051  01A83A  D002               	goto	i1u1465_28
 38052  01A83C                     i1u1464_20:
 38053  01A83C  0101               	movlb	1	; () banked
 38054  01A83E  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 38055  01A840                     i1u1465_28:
 38056  01A840  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 38057  01A842  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 38058  01A844  507E               	movf	3966,w,c	;volatile
 38059  01A846  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 38060  01A848  0BFB               	andlw	-5
 38061  01A84A  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 38062  01A84C  6E7E               	movwf	3966,c	;volatile
 38063                           
 38064                           ;main.c: 216: dev_on_time++;
 38065  01A84E  0E01               	movlw	1
 38066  01A850  0102               	movlb	2	; () banked
 38067  01A852  272C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 38068  01A854  0E00               	movlw	0
 38069  01A856  232D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 38070  01A858  232E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 38071  01A85A  232F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 38072                           
 38073                           ; BSR set to: 2
 38074                           ;main.c: 219: if (load_enable) {
 38075  01A85C  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 38076  01A85E  D006               	goto	i1l1184
 38077                           
 38078                           ; BSR set to: 2
 38079                           ;main.c: 221: load_on_time++;
 38080  01A860  0E01               	movlw	1
 38081  01A862  2728               	addwf	_load_on_time& (0+255),f,b	;volatile
 38082  01A864  0E00               	movlw	0
 38083  01A866  2329               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 38084  01A868  232A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 38085  01A86A  232B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 38086  01A86C                     i1l1184:
 38087                           
 38088                           ; BSR set to: 2
 38089  01A86C  0004               	clrwdt		;# 
 38090  01A86E  0012               	return		;funcret
 38091  01A870                     __end_of_heartbeatTimerCallback:
 38092                           	opt stack 0
 38093                           tosu	equ	0xFFF
 38094                           tosh	equ	0xFFE
 38095                           tosl	equ	0xFFD
 38096                           pclatu	equ	0xFFB
 38097                           pclath	equ	0xFFA
 38098                           tblptru	equ	0xFF8
 38099                           tblptrh	equ	0xFF7
 38100                           tblptrl	equ	0xFF6
 38101                           tablat	equ	0xFF5
 38102                           prodh	equ	0xFF4
 38103                           prodl	equ	0xFF3
 38104                           intcon	equ	0xFF2
 38105                           indf0	equ	0xFEF
 38106                           postinc0	equ	0xFEE
 38107                           fsr0h	equ	0xFEA
 38108                           fsr0l	equ	0xFE9
 38109                           wreg	equ	0xFE8
 38110                           indf1	equ	0xFE7
 38111                           postdec1	equ	0xFE5
 38112                           plusw1	equ	0xFE3
 38113                           fsr1h	equ	0xFE2
 38114                           fsr1l	equ	0xFE1
 38115                           bsr	equ	0xFE0
 38116                           indf2	equ	0xFDF
 38117                           postinc2	equ	0xFDE
 38118                           postdec2	equ	0xFDD
 38119                           plusw2	equ	0xFDB
 38120                           fsr2h	equ	0xFDA
 38121                           fsr2l	equ	0xFD9
 38122                           status	equ	0xFD8
 38123                           
 38124 ;; *************** function _EUSART2_Transmit_ISR *****************
 38125 ;; Defined at:
 38126 ;;		line 190 in file "mcc_generated_files/eusart2.c"
 38127 ;; Parameters:    Size  Location     Type
 38128 ;;		None
 38129 ;; Auto vars:     Size  Location     Type
 38130 ;;		None
 38131 ;; Return value:  Size  Location     Type
 38132 ;;                  1    wreg      void 
 38133 ;; Registers used:
 38134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38135 ;; Tracked objects:
 38136 ;;		On entry : 0/0
 38137 ;;		On exit  : 0/0
 38138 ;;		Unchanged: 0/0
 38139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38144 ;;Total ram usage:        0 bytes
 38145 ;; Hardware stack levels used:    1
 38146 ;; Hardware stack levels required when called:    9
 38147 ;; This function calls:
 38148 ;;		Nothing
 38149 ;; This function is called by:
 38150 ;;		_EUSART2_Initialize
 38151 ;;		_INTERRUPT_InterruptManagerLow
 38152 ;; This function uses a non-reentrant model
 38153 ;;
 38154                           
 38155                           	psect	text105
 38156  01AB34                     __ptext105:
 38157                           	opt stack 0
 38158  01AB34                     _EUSART2_Transmit_ISR:
 38159                           	opt stack 12
 38160                           
 38161                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 38162                           
 38163                           ;incstack = 0
 38164  01AB34  0E80               	movlw	128
 38165  01AB36  0101               	movlb	1	; () banked
 38166  01AB38  61DF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 38167  01AB3A  D014               	goto	i1l445
 38168                           
 38169                           ; BSR set to: 1
 38170                           ;eusart2.c: 195: {
 38171                           ;eusart2.c: 196: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 38172  01AB3C  51E0               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 38173  01AB3E  0D01               	mullw	1
 38174  01AB40  0E00               	movlw	low _eusart2TxBuffer
 38175  01AB42  24F3               	addwf	prodl,w,c
 38176  01AB44  6ED9               	movwf	fsr2l,c
 38177  01AB46  0E03               	movlw	high _eusart2TxBuffer
 38178  01AB48  20F4               	addwfc	prodh,w,c
 38179  01AB4A  6EDA               	movwf	fsr2h,c
 38180  01AB4C  50DF               	movf	indf2,w,c
 38181  01AB4E  010E               	movlb	14	; () banked
 38182  01AB50  6FF2               	movwf	242,b	;volatile
 38183                           
 38184                           ; BSR set to: 14
 38185  01AB52  0101               	movlb	1	; () banked
 38186  01AB54  2BE0               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 38187                           
 38188                           ; BSR set to: 1
 38189                           ;eusart2.c: 197: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 38190  01AB56  0E7F               	movlw	127
 38191  01AB58  65E0               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 38192  01AB5A  D002               	goto	i1l446
 38193                           
 38194                           ; BSR set to: 1
 38195                           ;eusart2.c: 198: {
 38196                           ;eusart2.c: 199: eusart2TxTail = 0;
 38197  01AB5C  0E00               	movlw	0
 38198  01AB5E  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 38199  01AB60                     i1l446:
 38200                           
 38201                           ; BSR set to: 1
 38202                           ;eusart2.c: 200: }
 38203                           ;eusart2.c: 201: eusart2TxBufferRemaining++;
 38204                           
 38205                           ; BSR set to: 1
 38206  01AB60  2BDF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 38207                           
 38208                           ;eusart2.c: 202: }
 38209  01AB62  0012               	return	
 38210  01AB64                     i1l445:
 38211                           
 38212                           ; BSR set to: 1
 38213                           ;eusart2.c: 203: else
 38214                           ;eusart2.c: 204: {
 38215                           ;eusart2.c: 205: PIE3bits.TX2IE = 0;
 38216  01AB64  010E               	movlb	14	; () banked
 38217  01AB66  9D2C               	bcf	44,6,b	;volatile
 38218  01AB68  0012               	return	
 38219  01AB6A                     __end_of_EUSART2_Transmit_ISR:
 38220                           	opt stack 0
 38221                           tosu	equ	0xFFF
 38222                           tosh	equ	0xFFE
 38223                           tosl	equ	0xFFD
 38224                           pclatu	equ	0xFFB
 38225                           pclath	equ	0xFFA
 38226                           tblptru	equ	0xFF8
 38227                           tblptrh	equ	0xFF7
 38228                           tblptrl	equ	0xFF6
 38229                           tablat	equ	0xFF5
 38230                           prodh	equ	0xFF4
 38231                           prodl	equ	0xFF3
 38232                           intcon	equ	0xFF2
 38233                           indf0	equ	0xFEF
 38234                           postinc0	equ	0xFEE
 38235                           fsr0h	equ	0xFEA
 38236                           fsr0l	equ	0xFE9
 38237                           wreg	equ	0xFE8
 38238                           indf1	equ	0xFE7
 38239                           postdec1	equ	0xFE5
 38240                           plusw1	equ	0xFE3
 38241                           fsr1h	equ	0xFE2
 38242                           fsr1l	equ	0xFE1
 38243                           bsr	equ	0xFE0
 38244                           indf2	equ	0xFDF
 38245                           postinc2	equ	0xFDE
 38246                           postdec2	equ	0xFDD
 38247                           plusw2	equ	0xFDB
 38248                           fsr2h	equ	0xFDA
 38249                           fsr2l	equ	0xFD9
 38250                           status	equ	0xFD8
 38251                           
 38252 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 38253 ;; Defined at:
 38254 ;;		line 95 in file "mcc_generated_files/interrupt_manager.c"
 38255 ;; Parameters:    Size  Location     Type
 38256 ;;		None
 38257 ;; Auto vars:     Size  Location     Type
 38258 ;;		None
 38259 ;; Return value:  Size  Location     Type
 38260 ;;                  1    wreg      void 
 38261 ;; Registers used:
 38262 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38263 ;; Tracked objects:
 38264 ;;		On entry : 0/0
 38265 ;;		On exit  : 0/0
 38266 ;;		Unchanged: 0/0
 38267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38270 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38271 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38272 ;;Total ram usage:       18 bytes
 38273 ;; Hardware stack levels used:    1
 38274 ;; Hardware stack levels required when called:    8
 38275 ;; This function calls:
 38276 ;;		Absolute function
 38277 ;;		_ADCC_ThresholdISR
 38278 ;;		_EUSART2_Receive_ISR
 38279 ;;		_HLVD_ISR
 38280 ;;		_I2C1_BusCollisionISR
 38281 ;;		_I2C1_ISR
 38282 ;;		_INT0_ISR
 38283 ;;		_TMR4_ISR
 38284 ;;		_TMR5_ISR
 38285 ;; This function is called by:
 38286 ;;		Interrupt level 2
 38287 ;; This function uses a non-reentrant model
 38288 ;;
 38289                           
 38290                           	psect	intcode
 38291  000008                     __pintcode:
 38292                           	opt stack 0
 38293  000008                     _INTERRUPT_InterruptManagerHigh:
 38294                           	opt stack 10
 38295                           
 38296                           ;incstack = 0
 38297  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38298  00000A  EF04  F0C8         	goto	int_func
 38299                           tosu	equ	0xFFF
 38300                           tosh	equ	0xFFE
 38301                           tosl	equ	0xFFD
 38302                           pclatu	equ	0xFFB
 38303                           pclath	equ	0xFFA
 38304                           tblptru	equ	0xFF8
 38305                           tblptrh	equ	0xFF7
 38306                           tblptrl	equ	0xFF6
 38307                           tablat	equ	0xFF5
 38308                           prodh	equ	0xFF4
 38309                           prodl	equ	0xFF3
 38310                           intcon	equ	0xFF2
 38311                           indf0	equ	0xFEF
 38312                           postinc0	equ	0xFEE
 38313                           fsr0h	equ	0xFEA
 38314                           fsr0l	equ	0xFE9
 38315                           wreg	equ	0xFE8
 38316                           indf1	equ	0xFE7
 38317                           postdec1	equ	0xFE5
 38318                           plusw1	equ	0xFE3
 38319                           fsr1h	equ	0xFE2
 38320                           fsr1l	equ	0xFE1
 38321                           bsr	equ	0xFE0
 38322                           indf2	equ	0xFDF
 38323                           postinc2	equ	0xFDE
 38324                           postdec2	equ	0xFDD
 38325                           plusw2	equ	0xFDB
 38326                           fsr2h	equ	0xFDA
 38327                           fsr2l	equ	0xFD9
 38328                           status	equ	0xFD8
 38329                           
 38330                           	psect	intcode_body
 38331  019008                     __pintcode_body:
 38332                           	opt stack 10
 38333  019008                     int_func:
 38334                           	opt stack 10
 38335  019008  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 38336  01900C  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 38337  019010  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 38338  019014  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 38339  019018  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 38340  01901C  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 38341  019020  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 38342  019024  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 38343  019028  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 38344  01902C  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 38345  019030  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 38346  019034  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 38347  019038  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 38348  01903C  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 38349  019040  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 38350  019044  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 38351  019048  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 38352  01904C  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 38353                           
 38354                           ;interrupt_manager.c: 98: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 38355  019050  010E               	movlb	14	; () banked
 38356  019052  B32C               	btfsc	44,1,b	;volatile
 38357                           
 38358                           ; BSR set to: 14
 38359  019054  A336               	btfss	54,1,b	;volatile
 38360  019056  D003               	goto	i2l246
 38361                           
 38362                           ; BSR set to: 14
 38363                           ;interrupt_manager.c: 99: {
 38364                           ;interrupt_manager.c: 100: I2C1_BusCollisionISR();
 38365  019058  ECEC  F0D8         	call	_I2C1_BusCollisionISR	;wreg free
 38366                           
 38367                           ;interrupt_manager.c: 101: }
 38368  01905C  D033               	goto	i2l260
 38369  01905E                     i2l246:
 38370                           
 38371                           ; BSR set to: 14
 38372                           ;interrupt_manager.c: 102: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 38373  01905E  B12C               	btfsc	44,0,b	;volatile
 38374                           
 38375                           ; BSR set to: 14
 38376  019060  A136               	btfss	54,0,b	;volatile
 38377  019062  D003               	goto	i2l248
 38378                           
 38379                           ; BSR set to: 14
 38380                           ;interrupt_manager.c: 103: {
 38381                           ;interrupt_manager.c: 104: I2C1_ISR();
 38382  019064  EC78  F0BD         	call	_I2C1_ISR	;wreg free
 38383                           
 38384                           ;interrupt_manager.c: 105: }
 38385  019068  D02D               	goto	i2l260
 38386  01906A                     i2l248:
 38387                           
 38388                           ; BSR set to: 14
 38389                           ;interrupt_manager.c: 106: else if(PIE5bits.TMR4IE == 1 && PIR5bits.TMR4IF == 1)
 38390  01906A  B72E               	btfsc	46,3,b	;volatile
 38391                           
 38392                           ; BSR set to: 14
 38393  01906C  A738               	btfss	56,3,b	;volatile
 38394  01906E  D003               	goto	i2l250
 38395                           
 38396                           ; BSR set to: 14
 38397                           ;interrupt_manager.c: 107: {
 38398                           ;interrupt_manager.c: 108: TMR4_ISR();
 38399  019070  ECF2  F0D6         	call	_TMR4_ISR	;wreg free
 38400                           
 38401                           ;interrupt_manager.c: 109: }
 38402  019074  D027               	goto	i2l260
 38403  019076                     i2l250:
 38404                           
 38405                           ; BSR set to: 14
 38406                           ;interrupt_manager.c: 110: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 38407  019076  BF2B               	btfsc	43,7,b	;volatile
 38408                           
 38409                           ; BSR set to: 14
 38410  019078  AF35               	btfss	53,7,b	;volatile
 38411  01907A  D003               	goto	i2l252
 38412                           
 38413                           ; BSR set to: 14
 38414                           ;interrupt_manager.c: 111: {
 38415                           ;interrupt_manager.c: 112: HLVD_ISR();
 38416  01907C  EC63  F0D5         	call	_HLVD_ISR	;wreg free
 38417                           
 38418                           ;interrupt_manager.c: 113: }
 38419  019080  D021               	goto	i2l260
 38420  019082                     i2l252:
 38421                           
 38422                           ; BSR set to: 14
 38423                           ;interrupt_manager.c: 114: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 38424  019082  B129               	btfsc	41,0,b	;volatile
 38425                           
 38426                           ; BSR set to: 14
 38427  019084  A133               	btfss	51,0,b	;volatile
 38428  019086  D003               	goto	i2l254
 38429                           
 38430                           ; BSR set to: 14
 38431                           ;interrupt_manager.c: 115: {
 38432                           ;interrupt_manager.c: 116: INT0_ISR();
 38433  019088  ECD4  F0D8         	call	_INT0_ISR	;wreg free
 38434                           
 38435                           ;interrupt_manager.c: 117: }
 38436  01908C  D01B               	goto	i2l260
 38437  01908E                     i2l254:
 38438                           
 38439                           ; BSR set to: 14
 38440                           ;interrupt_manager.c: 118: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38441  01908E  BF2C               	btfsc	44,7,b	;volatile
 38442                           
 38443                           ; BSR set to: 14
 38444  019090  AF36               	btfss	54,7,b	;volatile
 38445  019092  D00D               	goto	i2l256
 38446                           
 38447                           ; BSR set to: 14
 38448                           ;interrupt_manager.c: 119: {
 38449                           ;interrupt_manager.c: 120: EUSART2_RxDefaultInterruptHandler();
 38450  019094  D801               	call	i2u3435_48
 38451  019096  D016               	goto	i2l260
 38452  019098                     i2u3435_48:
 38453  019098  0005               	push	
 38454  01909A  6EFA               	movwf	pclath,c
 38455  01909C  0102               	movlb	2	; () banked
 38456  01909E  5156               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38457  0190A0  6EFD               	movwf	tosl,c
 38458  0190A2  5157               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38459  0190A4  6EFE               	movwf	tosh,c
 38460  0190A6  5158               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 38461  0190A8  6EFF               	movwf	tosu,c
 38462  0190AA  50FA               	movf	pclath,w,c
 38463  0190AC  0012               	return		;indir
 38464  0190AE                     i2l256:
 38465                           
 38466                           ; BSR set to: 14
 38467                           ;interrupt_manager.c: 122: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 38468  0190AE  B92E               	btfsc	46,4,b	;volatile
 38469                           
 38470                           ; BSR set to: 14
 38471  0190B0  A938               	btfss	56,4,b	;volatile
 38472  0190B2  D003               	goto	i2l258
 38473                           
 38474                           ; BSR set to: 14
 38475                           ;interrupt_manager.c: 123: {
 38476                           ;interrupt_manager.c: 124: TMR5_ISR();
 38477  0190B4  ECE9  F0D5         	call	_TMR5_ISR	;wreg free
 38478                           
 38479                           ;interrupt_manager.c: 125: }
 38480  0190B8  D005               	goto	i2l260
 38481  0190BA                     i2l258:
 38482                           
 38483                           ; BSR set to: 14
 38484                           ;interrupt_manager.c: 126: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 38485  0190BA  B32A               	btfsc	42,1,b	;volatile
 38486                           
 38487                           ; BSR set to: 14
 38488  0190BC  A334               	btfss	52,1,b	;volatile
 38489  0190BE  D002               	goto	i2l260
 38490                           
 38491                           ; BSR set to: 14
 38492                           ;interrupt_manager.c: 127: {
 38493                           ;interrupt_manager.c: 128: ADCC_ThresholdISR();
 38494  0190C0  ECB8  F0D6         	call	_ADCC_ThresholdISR	;wreg free
 38495  0190C4                     i2l260:
 38496                           
 38497                           ;interrupt_manager.c: 130: else
 38498                           ;interrupt_manager.c: 131: {
 38499  0190C4  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 38500  0190C8  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 38501  0190CC  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 38502  0190D0  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 38503  0190D4  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 38504  0190D8  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 38505  0190DC  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 38506  0190E0  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 38507  0190E4  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 38508  0190E8  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 38509  0190EC  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 38510  0190F0  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 38511  0190F4  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 38512  0190F8  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 38513  0190FC  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38514  019100  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38515  019104  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38516  019108  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38517  01910C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38518  01910E  0011               	retfie		f
 38519  019110                     __end_of_INTERRUPT_InterruptManagerHigh:
 38520                           	opt stack 0
 38521                           tosu	equ	0xFFF
 38522                           tosh	equ	0xFFE
 38523                           tosl	equ	0xFFD
 38524                           pclatu	equ	0xFFB
 38525                           pclath	equ	0xFFA
 38526                           tblptru	equ	0xFF8
 38527                           tblptrh	equ	0xFF7
 38528                           tblptrl	equ	0xFF6
 38529                           tablat	equ	0xFF5
 38530                           prodh	equ	0xFF4
 38531                           prodl	equ	0xFF3
 38532                           intcon	equ	0xFF2
 38533                           indf0	equ	0xFEF
 38534                           postinc0	equ	0xFEE
 38535                           fsr0h	equ	0xFEA
 38536                           fsr0l	equ	0xFE9
 38537                           wreg	equ	0xFE8
 38538                           indf1	equ	0xFE7
 38539                           postdec1	equ	0xFE5
 38540                           plusw1	equ	0xFE3
 38541                           fsr1h	equ	0xFE2
 38542                           fsr1l	equ	0xFE1
 38543                           bsr	equ	0xFE0
 38544                           indf2	equ	0xFDF
 38545                           postinc2	equ	0xFDE
 38546                           postdec2	equ	0xFDD
 38547                           plusw2	equ	0xFDB
 38548                           fsr2h	equ	0xFDA
 38549                           fsr2l	equ	0xFD9
 38550                           status	equ	0xFD8
 38551                           
 38552 ;; *************** function _TMR5_ISR *****************
 38553 ;; Defined at:
 38554 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 38555 ;; Parameters:    Size  Location     Type
 38556 ;;		None
 38557 ;; Auto vars:     Size  Location     Type
 38558 ;;		None
 38559 ;; Return value:  Size  Location     Type
 38560 ;;                  1    wreg      void 
 38561 ;; Registers used:
 38562 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38563 ;; Tracked objects:
 38564 ;;		On entry : 0/0
 38565 ;;		On exit  : 0/0
 38566 ;;		Unchanged: 0/0
 38567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38572 ;;Total ram usage:        0 bytes
 38573 ;; Hardware stack levels used:    1
 38574 ;; Hardware stack levels required when called:    2
 38575 ;; This function calls:
 38576 ;;		Absolute function
 38577 ;;		_TMR5_DefaultInterruptHandler
 38578 ;;		_TMR5_WriteTimer
 38579 ;;		_dimmingOnTimeCallback
 38580 ;; This function is called by:
 38581 ;;		_INTERRUPT_InterruptManagerHigh
 38582 ;; This function uses a non-reentrant model
 38583 ;;
 38584                           
 38585                           	psect	text107
 38586  01ABD2                     __ptext107:
 38587                           	opt stack 0
 38588  01ABD2                     _TMR5_ISR:
 38589                           	opt stack 15
 38590                           
 38591                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 38592                           
 38593                           ;incstack = 0
 38594  01ABD2  010E               	movlb	14	; () banked
 38595  01ABD4  9938               	bcf	56,4,b	;volatile
 38596                           
 38597                           ; BSR set to: 14
 38598                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 38599  01ABD6  C266  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 38600  01ABDA  C267  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 38601  01ABDE  ECC9  F0D7         	call	_TMR5_WriteTimer	;wreg free
 38602                           
 38603                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 38604  01ABE2  0102               	movlb	2	; () banked
 38605  01ABE4  514A               	movf	_TMR5_InterruptHandler& (0+255),w,b
 38606  01ABE6  114B               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 38607  01ABE8  114C               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 38608  01ABEA  B4D8               	btfsc	status,2,c
 38609  01ABEC  0012               	return	
 38610                           
 38611                           ; BSR set to: 2
 38612                           ;tmr5.c: 172: {
 38613                           ;tmr5.c: 173: TMR5_InterruptHandler();
 38614  01ABEE  D801               	call	i2u3405_48
 38615  01ABF0  0012               	return	
 38616  01ABF2                     i2u3405_48:
 38617  01ABF2  0005               	push	
 38618  01ABF4  6EFA               	movwf	pclath,c
 38619  01ABF6  514A               	movf	_TMR5_InterruptHandler& (0+255),w,b
 38620  01ABF8  6EFD               	movwf	tosl,c
 38621  01ABFA  514B               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 38622  01ABFC  6EFE               	movwf	tosh,c
 38623  01ABFE  514C               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 38624  01AC00  6EFF               	movwf	tosu,c
 38625  01AC02  50FA               	movf	pclath,w,c
 38626  01AC04  0012               	return		;indir
 38627  01AC06                     __end_of_TMR5_ISR:
 38628                           	opt stack 0
 38629                           tosu	equ	0xFFF
 38630                           tosh	equ	0xFFE
 38631                           tosl	equ	0xFFD
 38632                           pclatu	equ	0xFFB
 38633                           pclath	equ	0xFFA
 38634                           tblptru	equ	0xFF8
 38635                           tblptrh	equ	0xFF7
 38636                           tblptrl	equ	0xFF6
 38637                           tablat	equ	0xFF5
 38638                           prodh	equ	0xFF4
 38639                           prodl	equ	0xFF3
 38640                           intcon	equ	0xFF2
 38641                           indf0	equ	0xFEF
 38642                           postinc0	equ	0xFEE
 38643                           fsr0h	equ	0xFEA
 38644                           fsr0l	equ	0xFE9
 38645                           wreg	equ	0xFE8
 38646                           indf1	equ	0xFE7
 38647                           postdec1	equ	0xFE5
 38648                           plusw1	equ	0xFE3
 38649                           fsr1h	equ	0xFE2
 38650                           fsr1l	equ	0xFE1
 38651                           bsr	equ	0xFE0
 38652                           indf2	equ	0xFDF
 38653                           postinc2	equ	0xFDE
 38654                           postdec2	equ	0xFDD
 38655                           plusw2	equ	0xFDB
 38656                           fsr2h	equ	0xFDA
 38657                           fsr2l	equ	0xFD9
 38658                           status	equ	0xFD8
 38659                           
 38660 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 38661 ;; Defined at:
 38662 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 38663 ;; Parameters:    Size  Location     Type
 38664 ;;		None
 38665 ;; Auto vars:     Size  Location     Type
 38666 ;;		None
 38667 ;; Return value:  Size  Location     Type
 38668 ;;                  1    wreg      void 
 38669 ;; Registers used:
 38670 ;;		None
 38671 ;; Tracked objects:
 38672 ;;		On entry : 0/0
 38673 ;;		On exit  : 0/0
 38674 ;;		Unchanged: 0/0
 38675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38680 ;;Total ram usage:        0 bytes
 38681 ;; Hardware stack levels used:    1
 38682 ;; This function calls:
 38683 ;;		Nothing
 38684 ;; This function is called by:
 38685 ;;		_TMR5_Initialize
 38686 ;;		_TMR5_ISR
 38687 ;; This function uses a non-reentrant model
 38688 ;;
 38689                           
 38690                           	psect	text108
 38691  01B1F6                     __ptext108:
 38692                           	opt stack 0
 38693  01B1F6                     _TMR5_DefaultInterruptHandler:
 38694                           	opt stack 16
 38695                           
 38696                           ;incstack = 0
 38697  01B1F6  0012               	return		;funcret
 38698  01B1F8                     __end_of_TMR5_DefaultInterruptHandler:
 38699                           	opt stack 0
 38700                           tosu	equ	0xFFF
 38701                           tosh	equ	0xFFE
 38702                           tosl	equ	0xFFD
 38703                           pclatu	equ	0xFFB
 38704                           pclath	equ	0xFFA
 38705                           tblptru	equ	0xFF8
 38706                           tblptrh	equ	0xFF7
 38707                           tblptrl	equ	0xFF6
 38708                           tablat	equ	0xFF5
 38709                           prodh	equ	0xFF4
 38710                           prodl	equ	0xFF3
 38711                           intcon	equ	0xFF2
 38712                           indf0	equ	0xFEF
 38713                           postinc0	equ	0xFEE
 38714                           fsr0h	equ	0xFEA
 38715                           fsr0l	equ	0xFE9
 38716                           wreg	equ	0xFE8
 38717                           indf1	equ	0xFE7
 38718                           postdec1	equ	0xFE5
 38719                           plusw1	equ	0xFE3
 38720                           fsr1h	equ	0xFE2
 38721                           fsr1l	equ	0xFE1
 38722                           bsr	equ	0xFE0
 38723                           indf2	equ	0xFDF
 38724                           postinc2	equ	0xFDE
 38725                           postdec2	equ	0xFDD
 38726                           plusw2	equ	0xFDB
 38727                           fsr2h	equ	0xFDA
 38728                           fsr2l	equ	0xFD9
 38729                           status	equ	0xFD8
 38730                           
 38731 ;; *************** function _dimmingOnTimeCallback *****************
 38732 ;; Defined at:
 38733 ;;		line 440 in file "main.c"
 38734 ;; Parameters:    Size  Location     Type
 38735 ;;		None
 38736 ;; Auto vars:     Size  Location     Type
 38737 ;;		None
 38738 ;; Return value:  Size  Location     Type
 38739 ;;                  1    wreg      void 
 38740 ;; Registers used:
 38741 ;;		cstack
 38742 ;; Tracked objects:
 38743 ;;		On entry : 0/0
 38744 ;;		On exit  : 0/0
 38745 ;;		Unchanged: 0/0
 38746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38751 ;;Total ram usage:        0 bytes
 38752 ;; Hardware stack levels used:    1
 38753 ;; Hardware stack levels required when called:    1
 38754 ;; This function calls:
 38755 ;;		i2_TMR5_StopTimer
 38756 ;; This function is called by:
 38757 ;;		_main
 38758 ;;		_TMR5_ISR
 38759 ;; This function uses a non-reentrant model
 38760 ;;
 38761                           
 38762                           	psect	text109
 38763  01B186                     __ptext109:
 38764                           	opt stack 0
 38765  01B186                     _dimmingOnTimeCallback:
 38766                           	opt stack 15
 38767                           
 38768                           ;main.c: 443: LATGbits.LATG1 = 1;
 38769                           
 38770                           ;incstack = 0
 38771  01B186  827F               	bsf	3967,1,c	;volatile
 38772                           
 38773                           ;main.c: 446: TMR5_StopTimer();
 38774  01B188  ECF1  F0D8         	call	i2_TMR5_StopTimer	;wreg free
 38775                           
 38776                           ;main.c: 449: PIE5bits.TMR5IE = 0;
 38777  01B18C  010E               	movlb	14	; () banked
 38778  01B18E  992E               	bcf	46,4,b	;volatile
 38779                           
 38780                           ; BSR set to: 14
 38781  01B190  0012               	return		;funcret
 38782  01B192                     __end_of_dimmingOnTimeCallback:
 38783                           	opt stack 0
 38784                           tosu	equ	0xFFF
 38785                           tosh	equ	0xFFE
 38786                           tosl	equ	0xFFD
 38787                           pclatu	equ	0xFFB
 38788                           pclath	equ	0xFFA
 38789                           tblptru	equ	0xFF8
 38790                           tblptrh	equ	0xFF7
 38791                           tblptrl	equ	0xFF6
 38792                           tablat	equ	0xFF5
 38793                           prodh	equ	0xFF4
 38794                           prodl	equ	0xFF3
 38795                           intcon	equ	0xFF2
 38796                           indf0	equ	0xFEF
 38797                           postinc0	equ	0xFEE
 38798                           fsr0h	equ	0xFEA
 38799                           fsr0l	equ	0xFE9
 38800                           wreg	equ	0xFE8
 38801                           indf1	equ	0xFE7
 38802                           postdec1	equ	0xFE5
 38803                           plusw1	equ	0xFE3
 38804                           fsr1h	equ	0xFE2
 38805                           fsr1l	equ	0xFE1
 38806                           bsr	equ	0xFE0
 38807                           indf2	equ	0xFDF
 38808                           postinc2	equ	0xFDE
 38809                           postdec2	equ	0xFDD
 38810                           plusw2	equ	0xFDB
 38811                           fsr2h	equ	0xFDA
 38812                           fsr2l	equ	0xFD9
 38813                           status	equ	0xFD8
 38814                           
 38815 ;; *************** function i2_TMR5_StopTimer *****************
 38816 ;; Defined at:
 38817 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 38818 ;; Parameters:    Size  Location     Type
 38819 ;;		None
 38820 ;; Auto vars:     Size  Location     Type
 38821 ;;		None
 38822 ;; Return value:  Size  Location     Type
 38823 ;;                  1    wreg      void 
 38824 ;; Registers used:
 38825 ;;		None
 38826 ;; Tracked objects:
 38827 ;;		On entry : 0/0
 38828 ;;		On exit  : 0/0
 38829 ;;		Unchanged: 0/0
 38830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38835 ;;Total ram usage:        0 bytes
 38836 ;; Hardware stack levels used:    1
 38837 ;; This function calls:
 38838 ;;		Nothing
 38839 ;; This function is called by:
 38840 ;;		_dimmingOnTimeCallback
 38841 ;; This function uses a non-reentrant model
 38842 ;;
 38843                           
 38844                           	psect	text110
 38845  01B1E2                     __ptext110:
 38846                           	opt stack 0
 38847  01B1E2                     i2_TMR5_StopTimer:
 38848                           	opt stack 15
 38849                           
 38850                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 38851                           
 38852                           ; BSR set to: 14
 38853                           ;incstack = 0
 38854  01B1E2  90C3               	bcf	4035,0,c	;volatile
 38855  01B1E4  0012               	return		;funcret
 38856  01B1E6                     __end_ofi2_TMR5_StopTimer:
 38857                           	opt stack 0
 38858                           tosu	equ	0xFFF
 38859                           tosh	equ	0xFFE
 38860                           tosl	equ	0xFFD
 38861                           pclatu	equ	0xFFB
 38862                           pclath	equ	0xFFA
 38863                           tblptru	equ	0xFF8
 38864                           tblptrh	equ	0xFF7
 38865                           tblptrl	equ	0xFF6
 38866                           tablat	equ	0xFF5
 38867                           prodh	equ	0xFF4
 38868                           prodl	equ	0xFF3
 38869                           intcon	equ	0xFF2
 38870                           indf0	equ	0xFEF
 38871                           postinc0	equ	0xFEE
 38872                           fsr0h	equ	0xFEA
 38873                           fsr0l	equ	0xFE9
 38874                           wreg	equ	0xFE8
 38875                           indf1	equ	0xFE7
 38876                           postdec1	equ	0xFE5
 38877                           plusw1	equ	0xFE3
 38878                           fsr1h	equ	0xFE2
 38879                           fsr1l	equ	0xFE1
 38880                           bsr	equ	0xFE0
 38881                           indf2	equ	0xFDF
 38882                           postinc2	equ	0xFDE
 38883                           postdec2	equ	0xFDD
 38884                           plusw2	equ	0xFDB
 38885                           fsr2h	equ	0xFDA
 38886                           fsr2l	equ	0xFD9
 38887                           status	equ	0xFD8
 38888                           
 38889 ;; *************** function _TMR4_ISR *****************
 38890 ;; Defined at:
 38891 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 38892 ;; Parameters:    Size  Location     Type
 38893 ;;		None
 38894 ;; Auto vars:     Size  Location     Type
 38895 ;;		None
 38896 ;; Return value:  Size  Location     Type
 38897 ;;                  1    wreg      void 
 38898 ;; Registers used:
 38899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 38900 ;; Tracked objects:
 38901 ;;		On entry : 0/0
 38902 ;;		On exit  : 0/0
 38903 ;;		Unchanged: 0/0
 38904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38909 ;;Total ram usage:        0 bytes
 38910 ;; Hardware stack levels used:    1
 38911 ;; Hardware stack levels required when called:    4
 38912 ;; This function calls:
 38913 ;;		_TMR4_CallBack
 38914 ;; This function is called by:
 38915 ;;		_INTERRUPT_InterruptManagerHigh
 38916 ;; This function uses a non-reentrant model
 38917 ;;
 38918                           
 38919                           	psect	text111
 38920  01ADE4                     __ptext111:
 38921                           	opt stack 0
 38922  01ADE4                     _TMR4_ISR:
 38923                           	opt stack 13
 38924                           
 38925                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;
 38926                           ;tmr4.c: 170: PIR5bits.TMR4IF = 0;
 38927                           
 38928                           ;incstack = 0
 38929  01ADE4  010E               	movlb	14	; () banked
 38930  01ADE6  9738               	bcf	56,3,b	;volatile
 38931                           
 38932                           ; BSR set to: 14
 38933                           ;tmr4.c: 173: if (++CountCallBack >= 8)
 38934  01ADE8  0102               	movlb	2	; () banked
 38935  01ADEA  4B64               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 38936  01ADEC  2B65               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 38937  01ADEE  5165               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 38938  01ADF0  E104               	bnz	i2u3403_40
 38939  01ADF2  0E08               	movlw	8
 38940  01ADF4  5D64               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 38941  01ADF6  A0D8               	btfss	status,0,c
 38942  01ADF8  0012               	return	
 38943  01ADFA                     i2u3403_40:
 38944                           
 38945                           ; BSR set to: 2
 38946                           ;tmr4.c: 174: {
 38947                           ;tmr4.c: 176: TMR4_CallBack();
 38948  01ADFA  EC2B  F0D7         	call	_TMR4_CallBack	;wreg free
 38949                           
 38950                           ;tmr4.c: 179: CountCallBack = 0;
 38951  01ADFE  0E00               	movlw	0
 38952  01AE00  0102               	movlb	2	; () banked
 38953  01AE02  6F65               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 38954  01AE04  0E00               	movlw	0
 38955  01AE06  6F64               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 38956  01AE08  0012               	return	
 38957  01AE0A                     __end_of_TMR4_ISR:
 38958                           	opt stack 0
 38959                           tosu	equ	0xFFF
 38960                           tosh	equ	0xFFE
 38961                           tosl	equ	0xFFD
 38962                           pclatu	equ	0xFFB
 38963                           pclath	equ	0xFFA
 38964                           tblptru	equ	0xFF8
 38965                           tblptrh	equ	0xFF7
 38966                           tblptrl	equ	0xFF6
 38967                           tablat	equ	0xFF5
 38968                           prodh	equ	0xFF4
 38969                           prodl	equ	0xFF3
 38970                           intcon	equ	0xFF2
 38971                           indf0	equ	0xFEF
 38972                           postinc0	equ	0xFEE
 38973                           fsr0h	equ	0xFEA
 38974                           fsr0l	equ	0xFE9
 38975                           wreg	equ	0xFE8
 38976                           indf1	equ	0xFE7
 38977                           postdec1	equ	0xFE5
 38978                           plusw1	equ	0xFE3
 38979                           fsr1h	equ	0xFE2
 38980                           fsr1l	equ	0xFE1
 38981                           bsr	equ	0xFE0
 38982                           indf2	equ	0xFDF
 38983                           postinc2	equ	0xFDE
 38984                           postdec2	equ	0xFDD
 38985                           plusw2	equ	0xFDB
 38986                           fsr2h	equ	0xFDA
 38987                           fsr2l	equ	0xFD9
 38988                           status	equ	0xFD8
 38989                           
 38990 ;; *************** function _TMR4_CallBack *****************
 38991 ;; Defined at:
 38992 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 38993 ;; Parameters:    Size  Location     Type
 38994 ;;		None
 38995 ;; Auto vars:     Size  Location     Type
 38996 ;;		None
 38997 ;; Return value:  Size  Location     Type
 38998 ;;                  1    wreg      void 
 38999 ;; Registers used:
 39000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 39001 ;; Tracked objects:
 39002 ;;		On entry : 0/0
 39003 ;;		On exit  : 0/0
 39004 ;;		Unchanged: 0/0
 39005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39010 ;;Total ram usage:        0 bytes
 39011 ;; Hardware stack levels used:    1
 39012 ;; Hardware stack levels required when called:    3
 39013 ;; This function calls:
 39014 ;;		Absolute function
 39015 ;;		_TMR4_DefaultInterruptHandler
 39016 ;;		_writeEnergyToEEPROMCallback
 39017 ;; This function is called by:
 39018 ;;		_TMR4_ISR
 39019 ;; This function uses a non-reentrant model
 39020 ;;
 39021                           
 39022                           	psect	text112
 39023  01AE56                     __ptext112:
 39024                           	opt stack 0
 39025  01AE56                     _TMR4_CallBack:
 39026                           	opt stack 13
 39027                           
 39028                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
 39029                           
 39030                           ; BSR set to: 2
 39031                           ;incstack = 0
 39032  01AE56  0102               	movlb	2	; () banked
 39033  01AE58  5144               	movf	_TMR4_InterruptHandler& (0+255),w,b
 39034  01AE5A  1145               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 39035  01AE5C  1146               	iorwf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 39036  01AE5E  B4D8               	btfsc	status,2,c
 39037  01AE60  0012               	return	
 39038                           
 39039                           ; BSR set to: 2
 39040                           ;tmr4.c: 188: {
 39041                           ;tmr4.c: 189: TMR4_InterruptHandler();
 39042  01AE62  D801               	call	i2u3334_48
 39043  01AE64  0012               	return	
 39044  01AE66                     i2u3334_48:
 39045  01AE66  0005               	push	
 39046  01AE68  6EFA               	movwf	pclath,c
 39047  01AE6A  5144               	movf	_TMR4_InterruptHandler& (0+255),w,b
 39048  01AE6C  6EFD               	movwf	tosl,c
 39049  01AE6E  5145               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 39050  01AE70  6EFE               	movwf	tosh,c
 39051  01AE72  5146               	movf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 39052  01AE74  6EFF               	movwf	tosu,c
 39053  01AE76  50FA               	movf	pclath,w,c
 39054  01AE78  0012               	return		;indir
 39055  01AE7A                     __end_of_TMR4_CallBack:
 39056                           	opt stack 0
 39057                           tosu	equ	0xFFF
 39058                           tosh	equ	0xFFE
 39059                           tosl	equ	0xFFD
 39060                           pclatu	equ	0xFFB
 39061                           pclath	equ	0xFFA
 39062                           tblptru	equ	0xFF8
 39063                           tblptrh	equ	0xFF7
 39064                           tblptrl	equ	0xFF6
 39065                           tablat	equ	0xFF5
 39066                           prodh	equ	0xFF4
 39067                           prodl	equ	0xFF3
 39068                           intcon	equ	0xFF2
 39069                           indf0	equ	0xFEF
 39070                           postinc0	equ	0xFEE
 39071                           fsr0h	equ	0xFEA
 39072                           fsr0l	equ	0xFE9
 39073                           wreg	equ	0xFE8
 39074                           indf1	equ	0xFE7
 39075                           postdec1	equ	0xFE5
 39076                           plusw1	equ	0xFE3
 39077                           fsr1h	equ	0xFE2
 39078                           fsr1l	equ	0xFE1
 39079                           bsr	equ	0xFE0
 39080                           indf2	equ	0xFDF
 39081                           postinc2	equ	0xFDE
 39082                           postdec2	equ	0xFDD
 39083                           plusw2	equ	0xFDB
 39084                           fsr2h	equ	0xFDA
 39085                           fsr2l	equ	0xFD9
 39086                           status	equ	0xFD8
 39087                           
 39088 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 39089 ;; Defined at:
 39090 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 39091 ;; Parameters:    Size  Location     Type
 39092 ;;		None
 39093 ;; Auto vars:     Size  Location     Type
 39094 ;;		None
 39095 ;; Return value:  Size  Location     Type
 39096 ;;                  1    wreg      void 
 39097 ;; Registers used:
 39098 ;;		None
 39099 ;; Tracked objects:
 39100 ;;		On entry : 0/0
 39101 ;;		On exit  : 0/0
 39102 ;;		Unchanged: 0/0
 39103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39108 ;;Total ram usage:        0 bytes
 39109 ;; Hardware stack levels used:    1
 39110 ;; This function calls:
 39111 ;;		Nothing
 39112 ;; This function is called by:
 39113 ;;		_TMR4_Initialize
 39114 ;;		_TMR4_CallBack
 39115 ;; This function uses a non-reentrant model
 39116 ;;
 39117                           
 39118                           	psect	text113
 39119  01B1F8                     __ptext113:
 39120                           	opt stack 0
 39121  01B1F8                     _TMR4_DefaultInterruptHandler:
 39122                           	opt stack 15
 39123                           
 39124                           ;incstack = 0
 39125  01B1F8  0012               	return		;funcret
 39126  01B1FA                     __end_of_TMR4_DefaultInterruptHandler:
 39127                           	opt stack 0
 39128                           tosu	equ	0xFFF
 39129                           tosh	equ	0xFFE
 39130                           tosl	equ	0xFFD
 39131                           pclatu	equ	0xFFB
 39132                           pclath	equ	0xFFA
 39133                           tblptru	equ	0xFF8
 39134                           tblptrh	equ	0xFF7
 39135                           tblptrl	equ	0xFF6
 39136                           tablat	equ	0xFF5
 39137                           prodh	equ	0xFF4
 39138                           prodl	equ	0xFF3
 39139                           intcon	equ	0xFF2
 39140                           indf0	equ	0xFEF
 39141                           postinc0	equ	0xFEE
 39142                           fsr0h	equ	0xFEA
 39143                           fsr0l	equ	0xFE9
 39144                           wreg	equ	0xFE8
 39145                           indf1	equ	0xFE7
 39146                           postdec1	equ	0xFE5
 39147                           plusw1	equ	0xFE3
 39148                           fsr1h	equ	0xFE2
 39149                           fsr1l	equ	0xFE1
 39150                           bsr	equ	0xFE0
 39151                           indf2	equ	0xFDF
 39152                           postinc2	equ	0xFDE
 39153                           postdec2	equ	0xFDD
 39154                           plusw2	equ	0xFDB
 39155                           fsr2h	equ	0xFDA
 39156                           fsr2l	equ	0xFD9
 39157                           status	equ	0xFD8
 39158                           
 39159 ;; *************** function _writeEnergyToEEPROMCallback *****************
 39160 ;; Defined at:
 39161 ;;		line 457 in file "main.c"
 39162 ;; Parameters:    Size  Location     Type
 39163 ;;		None
 39164 ;; Auto vars:     Size  Location     Type
 39165 ;;  current_valu    4   63[COMRAM] void 
 39166 ;; Return value:  Size  Location     Type
 39167 ;;                  1    wreg      void 
 39168 ;; Registers used:
 39169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39170 ;; Tracked objects:
 39171 ;;		On entry : 0/0
 39172 ;;		On exit  : 0/0
 39173 ;;		Unchanged: 0/0
 39174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39176 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39179 ;;Total ram usage:        4 bytes
 39180 ;; Hardware stack levels used:    1
 39181 ;; Hardware stack levels required when called:    2
 39182 ;; This function calls:
 39183 ;;		i2___flge
 39184 ;;		i2_readDoubleFromEEPROM
 39185 ;;		i2_writeDoubleToEEPROM
 39186 ;; This function is called by:
 39187 ;;		_main
 39188 ;;		_TMR4_CallBack
 39189 ;; This function uses a non-reentrant model
 39190 ;;
 39191                           
 39192                           	psect	text114
 39193  019BE4                     __ptext114:
 39194                           	opt stack 0
 39195  019BE4                     _writeEnergyToEEPROMCallback:
 39196                           	opt stack 13
 39197                           
 39198                           ;main.c: 459: double current_value = readDoubleFromEEPROM(Total_Energy_address);
 39199                           
 39200                           ;incstack = 0
 39201  019BE4  0E63               	movlw	low _Total_Energy_address
 39202  019BE6  6EF6               	movwf	tblptrl,c
 39203  019BE8                     	if	1	;There is more than 1 active tblptr byte
 39204  019BE8  0ECF               	movlw	high _Total_Energy_address
 39205  019BEA  6EF7               	movwf	tblptrh,c
 39206  019BEC                     	endif
 39207  019BEC                     	if	1	;There are 3 active tblptr bytes
 39208  019BEC  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 39209  019BEE  6EF8               	movwf	tblptru,c
 39210  019BF0                     	endif
 39211  019BF0  0009               	tblrd		*+
 39212  019BF2  CFF5 F003          	movff	tablat,i2readDoubleFromEEPROM@starting_address
 39213  019BF6  000A               	tblrd		*-
 39214  019BF8  CFF5 F004          	movff	tablat,i2readDoubleFromEEPROM@starting_address+1
 39215  019BFC  EC66  F0D2         	call	i2_readDoubleFromEEPROM	;wreg free
 39216  019C00  C003  F040         	movff	?i2_readDoubleFromEEPROM,writeEnergyToEEPROMCallback@current_value
 39217  019C04  C004  F041         	movff	?i2_readDoubleFromEEPROM+1,writeEnergyToEEPROMCallback@current_value+1
 39218  019C08  C005  F042         	movff	?i2_readDoubleFromEEPROM+2,writeEnergyToEEPROMCallback@current_value+2
 39219  019C0C  C006  F043         	movff	?i2_readDoubleFromEEPROM+3,writeEnergyToEEPROMCallback@current_value+3
 39220                           
 39221                           ;main.c: 461: if (Total_Energy > current_value) {
 39222  019C10  C040  F034         	movff	writeEnergyToEEPROMCallback@current_value,i2___flge@ff1
 39223  019C14  C041  F035         	movff	writeEnergyToEEPROMCallback@current_value+1,i2___flge@ff1+1
 39224  019C18  C042  F036         	movff	writeEnergyToEEPROMCallback@current_value+2,i2___flge@ff1+2
 39225  019C1C  C043  F037         	movff	writeEnergyToEEPROMCallback@current_value+3,i2___flge@ff1+3
 39226  019C20  C0F6  F038         	movff	_Total_Energy,i2___flge@ff2	;volatile
 39227  019C24  C0F7  F039         	movff	_Total_Energy+1,i2___flge@ff2+1	;volatile
 39228  019C28  C0F8  F03A         	movff	_Total_Energy+2,i2___flge@ff2+2	;volatile
 39229  019C2C  C0F9  F03B         	movff	_Total_Energy+3,i2___flge@ff2+3	;volatile
 39230  019C30  ECEB  F0C6         	call	i2___flge	;wreg free
 39231  019C34  B0D8               	btfsc	status,0,c
 39232  019C36  0012               	return	
 39233                           
 39234                           ;main.c: 463: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 39235  019C38  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 39236  019C3C  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 39237  019C40  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 39238  019C44  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 39239  019C48  0E63               	movlw	low _Total_Energy_address
 39240  019C4A  6EF6               	movwf	tblptrl,c
 39241  019C4C                     	if	1	;There is more than 1 active tblptr byte
 39242  019C4C  0ECF               	movlw	high _Total_Energy_address
 39243  019C4E  6EF7               	movwf	tblptrh,c
 39244  019C50                     	endif
 39245  019C50                     	if	1	;There are 3 active tblptr bytes
 39246  019C50  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 39247  019C52  6EF8               	movwf	tblptru,c
 39248  019C54                     	endif
 39249  019C54  0009               	tblrd		*+
 39250  019C56  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 39251  019C5A  000A               	tblrd		*-
 39252  019C5C  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 39253  019C60  ECD9  F0D2         	call	i2_writeDoubleToEEPROM	;wreg free
 39254  019C64  0012               	return	
 39255  019C66                     __end_of_writeEnergyToEEPROMCallback:
 39256                           	opt stack 0
 39257                           tosu	equ	0xFFF
 39258                           tosh	equ	0xFFE
 39259                           tosl	equ	0xFFD
 39260                           pclatu	equ	0xFFB
 39261                           pclath	equ	0xFFA
 39262                           tblptru	equ	0xFF8
 39263                           tblptrh	equ	0xFF7
 39264                           tblptrl	equ	0xFF6
 39265                           tablat	equ	0xFF5
 39266                           prodh	equ	0xFF4
 39267                           prodl	equ	0xFF3
 39268                           intcon	equ	0xFF2
 39269                           indf0	equ	0xFEF
 39270                           postinc0	equ	0xFEE
 39271                           fsr0h	equ	0xFEA
 39272                           fsr0l	equ	0xFE9
 39273                           wreg	equ	0xFE8
 39274                           indf1	equ	0xFE7
 39275                           postdec1	equ	0xFE5
 39276                           plusw1	equ	0xFE3
 39277                           fsr1h	equ	0xFE2
 39278                           fsr1l	equ	0xFE1
 39279                           bsr	equ	0xFE0
 39280                           indf2	equ	0xFDF
 39281                           postinc2	equ	0xFDE
 39282                           postdec2	equ	0xFDD
 39283                           plusw2	equ	0xFDB
 39284                           fsr2h	equ	0xFDA
 39285                           fsr2l	equ	0xFD9
 39286                           status	equ	0xFD8
 39287                           
 39288 ;; *************** function i2_readDoubleFromEEPROM *****************
 39289 ;; Defined at:
 39290 ;;		line 22 in file "double_to_EEPROM.c"
 39291 ;; Parameters:    Size  Location     Type
 39292 ;;  starting_add    2    2[COMRAM] unsigned int 
 39293 ;; Auto vars:     Size  Location     Type
 39294 ;;  readDoubleFr    4    6[COMRAM] struct .
 39295 ;;  readDoubleFr    2   10[COMRAM] int 
 39296 ;; Return value:  Size  Location     Type
 39297 ;;                  4    2[COMRAM] int 
 39298 ;; Registers used:
 39299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39300 ;; Tracked objects:
 39301 ;;		On entry : 0/0
 39302 ;;		On exit  : 0/0
 39303 ;;		Unchanged: 0/0
 39304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39306 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39308 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39309 ;;Total ram usage:       10 bytes
 39310 ;; Hardware stack levels used:    1
 39311 ;; Hardware stack levels required when called:    1
 39312 ;; This function calls:
 39313 ;;		i2_DATAEE_ReadByte
 39314 ;; This function is called by:
 39315 ;;		_writeEnergyToEEPROMCallback
 39316 ;; This function uses a non-reentrant model
 39317 ;;
 39318                           
 39319                           	psect	text115
 39320  01A4CC                     __ptext115:
 39321                           	opt stack 0
 39322  01A4CC                     i2_readDoubleFromEEPROM:
 39323                           	opt stack 13
 39324                           
 39325                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 39326                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 39327                           
 39328                           ;incstack = 0
 39329  01A4CC  0E00               	movlw	0
 39330  01A4CE  6E0C               	movwf	i2readDoubleFromEEPROM@byte_index+1,c
 39331  01A4D0  0E00               	movlw	0
 39332  01A4D2  6E0B               	movwf	i2readDoubleFromEEPROM@byte_index,c
 39333  01A4D4  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 39334  01A4D6  E118               	bnz	i2l1646
 39335  01A4D8  D013               	goto	L17
 39336  01A4DA                     
 39337                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 39338  01A4DA  0E07               	movlw	low i2readDoubleFromEEPROM@output_data
 39339  01A4DC  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 39340  01A4DE  6ED9               	movwf	fsr2l,c
 39341  01A4E0  0E00               	movlw	high i2readDoubleFromEEPROM@output_data
 39342  01A4E2  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 39343  01A4E4  6EDA               	movwf	fsr2h,c
 39344  01A4E6  5003               	movf	i2readDoubleFromEEPROM@starting_address,w,c
 39345  01A4E8  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 39346  01A4EA  6E01               	movwf	i2DATAEE_ReadByte@bAdd,c
 39347  01A4EC  5004               	movf	i2readDoubleFromEEPROM@starting_address+1,w,c
 39348  01A4EE  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 39349  01A4F0  6E02               	movwf	i2DATAEE_ReadByte@bAdd+1,c
 39350  01A4F2  EC0A  F0D8         	call	i2_DATAEE_ReadByte	;wreg free
 39351  01A4F6  6EDF               	movwf	indf2,c
 39352  01A4F8  4A0B               	infsnz	i2readDoubleFromEEPROM@byte_index,f,c
 39353  01A4FA  2A0C               	incf	i2readDoubleFromEEPROM@byte_index+1,f,c
 39354  01A4FC  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 39355  01A4FE  E104               	bnz	i2u1250_40
 39356  01A500                     L17:
 39357  01A500  0E04               	movlw	4
 39358  01A502  5C0B               	subwf	i2readDoubleFromEEPROM@byte_index,w,c
 39359  01A504  A0D8               	btfss	status,0,c
 39360  01A506  D7E9               	goto	i2l1645
 39361  01A508                     i2u1250_40:
 39362  01A508                     i2l1646:
 39363                           
 39364                           ;double_to_EEPROM.c: 32: }
 39365                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 39366  01A508  C007  F003         	movff	i2readDoubleFromEEPROM@output_data,?i2_readDoubleFromEEPROM
 39367  01A50C  C008  F004         	movff	i2readDoubleFromEEPROM@output_data+1,?i2_readDoubleFromEEPROM+1
 39368  01A510  C009  F005         	movff	i2readDoubleFromEEPROM@output_data+2,?i2_readDoubleFromEEPROM+2
 39369  01A514  C00A  F006         	movff	i2readDoubleFromEEPROM@output_data+3,?i2_readDoubleFromEEPROM+3
 39370  01A518  0012               	return		;funcret
 39371  01A51A                     __end_ofi2_readDoubleFromEEPROM:
 39372                           	opt stack 0
 39373                           tosu	equ	0xFFF
 39374                           tosh	equ	0xFFE
 39375                           tosl	equ	0xFFD
 39376                           pclatu	equ	0xFFB
 39377                           pclath	equ	0xFFA
 39378                           tblptru	equ	0xFF8
 39379                           tblptrh	equ	0xFF7
 39380                           tblptrl	equ	0xFF6
 39381                           tablat	equ	0xFF5
 39382                           prodh	equ	0xFF4
 39383                           prodl	equ	0xFF3
 39384                           intcon	equ	0xFF2
 39385                           indf0	equ	0xFEF
 39386                           postinc0	equ	0xFEE
 39387                           fsr0h	equ	0xFEA
 39388                           fsr0l	equ	0xFE9
 39389                           wreg	equ	0xFE8
 39390                           indf1	equ	0xFE7
 39391                           postdec1	equ	0xFE5
 39392                           plusw1	equ	0xFE3
 39393                           fsr1h	equ	0xFE2
 39394                           fsr1l	equ	0xFE1
 39395                           bsr	equ	0xFE0
 39396                           indf2	equ	0xFDF
 39397                           postinc2	equ	0xFDE
 39398                           postdec2	equ	0xFDD
 39399                           plusw2	equ	0xFDB
 39400                           fsr2h	equ	0xFDA
 39401                           fsr2l	equ	0xFD9
 39402                           status	equ	0xFD8
 39403                           
 39404 ;; *************** function i2_DATAEE_ReadByte *****************
 39405 ;; Defined at:
 39406 ;;		line 190 in file "mcc_generated_files/memory.c"
 39407 ;; Parameters:    Size  Location     Type
 39408 ;;  bAdd            2    0[COMRAM] unsigned int 
 39409 ;; Auto vars:     Size  Location     Type
 39410 ;;		None
 39411 ;; Return value:  Size  Location     Type
 39412 ;;                  1    wreg      unsigned char 
 39413 ;; Registers used:
 39414 ;;		wreg, status,2, status,0
 39415 ;; Tracked objects:
 39416 ;;		On entry : 0/0
 39417 ;;		On exit  : 0/0
 39418 ;;		Unchanged: 0/0
 39419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39424 ;;Total ram usage:        2 bytes
 39425 ;; Hardware stack levels used:    1
 39426 ;; This function calls:
 39427 ;;		Nothing
 39428 ;; This function is called by:
 39429 ;;		i2_readDoubleFromEEPROM
 39430 ;; This function uses a non-reentrant model
 39431 ;;
 39432                           
 39433                           	psect	text116
 39434  01B014                     __ptext116:
 39435                           	opt stack 0
 39436  01B014                     i2_DATAEE_ReadByte:
 39437                           	opt stack 13
 39438                           
 39439                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 39440                           
 39441                           ;incstack = 0
 39442  01B014  5002               	movf	i2DATAEE_ReadByte@bAdd+1,w,c
 39443  01B016  0B03               	andlw	3
 39444  01B018  6E75               	movwf	3957,c	;volatile
 39445                           
 39446                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 39447  01B01A  C001  FF74         	movff	i2DATAEE_ReadByte@bAdd,3956	;volatile
 39448                           
 39449                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 39450  01B01E  0E3F               	movlw	-193
 39451  01B020  1677               	andwf	3959,f,c	;volsfr
 39452                           
 39453                           ;memory.c: 195: NVMCON1bits.RD = 1;
 39454  01B022  8077               	bsf	3959,0,c	;volsfr
 39455                           
 39456                           ;memory.c: 196: __nop();
 39457  01B024  F000               	nop	
 39458                           
 39459                           ;memory.c: 197: __nop();
 39460  01B026  F000               	nop	
 39461                           
 39462                           ;memory.c: 199: return (NVMDAT);
 39463  01B028  5076               	movf	3958,w,c	;volatile
 39464  01B02A  0012               	return	
 39465  01B02C                     __end_ofi2_DATAEE_ReadByte:
 39466                           	opt stack 0
 39467                           tosu	equ	0xFFF
 39468                           tosh	equ	0xFFE
 39469                           tosl	equ	0xFFD
 39470                           pclatu	equ	0xFFB
 39471                           pclath	equ	0xFFA
 39472                           tblptru	equ	0xFF8
 39473                           tblptrh	equ	0xFF7
 39474                           tblptrl	equ	0xFF6
 39475                           tablat	equ	0xFF5
 39476                           prodh	equ	0xFF4
 39477                           prodl	equ	0xFF3
 39478                           intcon	equ	0xFF2
 39479                           indf0	equ	0xFEF
 39480                           postinc0	equ	0xFEE
 39481                           fsr0h	equ	0xFEA
 39482                           fsr0l	equ	0xFE9
 39483                           wreg	equ	0xFE8
 39484                           indf1	equ	0xFE7
 39485                           postdec1	equ	0xFE5
 39486                           plusw1	equ	0xFE3
 39487                           fsr1h	equ	0xFE2
 39488                           fsr1l	equ	0xFE1
 39489                           bsr	equ	0xFE0
 39490                           indf2	equ	0xFDF
 39491                           postinc2	equ	0xFDE
 39492                           postdec2	equ	0xFDD
 39493                           plusw2	equ	0xFDB
 39494                           fsr2h	equ	0xFDA
 39495                           fsr2l	equ	0xFD9
 39496                           status	equ	0xFD8
 39497                           
 39498 ;; *************** function _INT0_ISR *****************
 39499 ;; Defined at:
 39500 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 39501 ;; Parameters:    Size  Location     Type
 39502 ;;		None
 39503 ;; Auto vars:     Size  Location     Type
 39504 ;;		None
 39505 ;; Return value:  Size  Location     Type
 39506 ;;                  1    wreg      void 
 39507 ;; Registers used:
 39508 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39509 ;; Tracked objects:
 39510 ;;		On entry : 0/0
 39511 ;;		On exit  : 0/0
 39512 ;;		Unchanged: 0/0
 39513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39518 ;;Total ram usage:        0 bytes
 39519 ;; Hardware stack levels used:    1
 39520 ;; Hardware stack levels required when called:    3
 39521 ;; This function calls:
 39522 ;;		_INT0_CallBack
 39523 ;; This function is called by:
 39524 ;;		_INTERRUPT_InterruptManagerHigh
 39525 ;; This function uses a non-reentrant model
 39526 ;;
 39527                           
 39528                           	psect	text117
 39529  01B1A8                     __ptext117:
 39530                           	opt stack 0
 39531  01B1A8                     _INT0_ISR:
 39532                           	opt stack 14
 39533                           
 39534                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 39535                           
 39536                           ;incstack = 0
 39537  01B1A8  010E               	movlb	14	; () banked
 39538  01B1AA  9133               	bcf	51,0,b	;volatile
 39539                           
 39540                           ; BSR set to: 14
 39541                           ;ext_int.c: 37: INT0_CallBack();
 39542  01B1AC  EC3D  F0D7         	call	_INT0_CallBack	;wreg free
 39543  01B1B0  0012               	return		;funcret
 39544  01B1B2                     __end_of_INT0_ISR:
 39545                           	opt stack 0
 39546                           tosu	equ	0xFFF
 39547                           tosh	equ	0xFFE
 39548                           tosl	equ	0xFFD
 39549                           pclatu	equ	0xFFB
 39550                           pclath	equ	0xFFA
 39551                           tblptru	equ	0xFF8
 39552                           tblptrh	equ	0xFF7
 39553                           tblptrl	equ	0xFF6
 39554                           tablat	equ	0xFF5
 39555                           prodh	equ	0xFF4
 39556                           prodl	equ	0xFF3
 39557                           intcon	equ	0xFF2
 39558                           indf0	equ	0xFEF
 39559                           postinc0	equ	0xFEE
 39560                           fsr0h	equ	0xFEA
 39561                           fsr0l	equ	0xFE9
 39562                           wreg	equ	0xFE8
 39563                           indf1	equ	0xFE7
 39564                           postdec1	equ	0xFE5
 39565                           plusw1	equ	0xFE3
 39566                           fsr1h	equ	0xFE2
 39567                           fsr1l	equ	0xFE1
 39568                           bsr	equ	0xFE0
 39569                           indf2	equ	0xFDF
 39570                           postinc2	equ	0xFDE
 39571                           postdec2	equ	0xFDD
 39572                           plusw2	equ	0xFDB
 39573                           fsr2h	equ	0xFDA
 39574                           fsr2l	equ	0xFD9
 39575                           status	equ	0xFD8
 39576                           
 39577 ;; *************** function _INT0_CallBack *****************
 39578 ;; Defined at:
 39579 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 39580 ;; Parameters:    Size  Location     Type
 39581 ;;		None
 39582 ;; Auto vars:     Size  Location     Type
 39583 ;;		None
 39584 ;; Return value:  Size  Location     Type
 39585 ;;                  1    wreg      void 
 39586 ;; Registers used:
 39587 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39588 ;; Tracked objects:
 39589 ;;		On entry : 0/0
 39590 ;;		On exit  : 0/0
 39591 ;;		Unchanged: 0/0
 39592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39597 ;;Total ram usage:        0 bytes
 39598 ;; Hardware stack levels used:    1
 39599 ;; Hardware stack levels required when called:    2
 39600 ;; This function calls:
 39601 ;;		Absolute function
 39602 ;;		_INT0_DefaultInterruptHandler
 39603 ;;		_dimmingOffTimeCallback
 39604 ;; This function is called by:
 39605 ;;		_INT0_ISR
 39606 ;; This function uses a non-reentrant model
 39607 ;;
 39608                           
 39609                           	psect	text118
 39610  01AE7A                     __ptext118:
 39611                           	opt stack 0
 39612  01AE7A                     _INT0_CallBack:
 39613                           	opt stack 14
 39614                           
 39615                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 39616                           
 39617                           ;incstack = 0
 39618  01AE7A  0102               	movlb	2	; () banked
 39619  01AE7C  5147               	movf	_INT0_InterruptHandler& (0+255),w,b
 39620  01AE7E  1148               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39621  01AE80  1149               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39622  01AE82  B4D8               	btfsc	status,2,c
 39623  01AE84  0012               	return	
 39624                           
 39625                           ; BSR set to: 2
 39626                           ;ext_int.c: 45: {
 39627                           ;ext_int.c: 46: INT0_InterruptHandler();
 39628  01AE86  D801               	call	i2u3332_48
 39629  01AE88  0012               	return	
 39630  01AE8A                     i2u3332_48:
 39631  01AE8A  0005               	push	
 39632  01AE8C  6EFA               	movwf	pclath,c
 39633  01AE8E  5147               	movf	_INT0_InterruptHandler& (0+255),w,b
 39634  01AE90  6EFD               	movwf	tosl,c
 39635  01AE92  5148               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39636  01AE94  6EFE               	movwf	tosh,c
 39637  01AE96  5149               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39638  01AE98  6EFF               	movwf	tosu,c
 39639  01AE9A  50FA               	movf	pclath,w,c
 39640  01AE9C  0012               	return		;indir
 39641  01AE9E                     __end_of_INT0_CallBack:
 39642                           	opt stack 0
 39643                           tosu	equ	0xFFF
 39644                           tosh	equ	0xFFE
 39645                           tosl	equ	0xFFD
 39646                           pclatu	equ	0xFFB
 39647                           pclath	equ	0xFFA
 39648                           tblptru	equ	0xFF8
 39649                           tblptrh	equ	0xFF7
 39650                           tblptrl	equ	0xFF6
 39651                           tablat	equ	0xFF5
 39652                           prodh	equ	0xFF4
 39653                           prodl	equ	0xFF3
 39654                           intcon	equ	0xFF2
 39655                           indf0	equ	0xFEF
 39656                           postinc0	equ	0xFEE
 39657                           fsr0h	equ	0xFEA
 39658                           fsr0l	equ	0xFE9
 39659                           wreg	equ	0xFE8
 39660                           indf1	equ	0xFE7
 39661                           postdec1	equ	0xFE5
 39662                           plusw1	equ	0xFE3
 39663                           fsr1h	equ	0xFE2
 39664                           fsr1l	equ	0xFE1
 39665                           bsr	equ	0xFE0
 39666                           indf2	equ	0xFDF
 39667                           postinc2	equ	0xFDE
 39668                           postdec2	equ	0xFDD
 39669                           plusw2	equ	0xFDB
 39670                           fsr2h	equ	0xFDA
 39671                           fsr2l	equ	0xFD9
 39672                           status	equ	0xFD8
 39673                           
 39674 ;; *************** function _INT0_DefaultInterruptHandler *****************
 39675 ;; Defined at:
 39676 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 39677 ;; Parameters:    Size  Location     Type
 39678 ;;		None
 39679 ;; Auto vars:     Size  Location     Type
 39680 ;;		None
 39681 ;; Return value:  Size  Location     Type
 39682 ;;                  1    wreg      void 
 39683 ;; Registers used:
 39684 ;;		None
 39685 ;; Tracked objects:
 39686 ;;		On entry : 0/0
 39687 ;;		On exit  : 0/0
 39688 ;;		Unchanged: 0/0
 39689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39694 ;;Total ram usage:        0 bytes
 39695 ;; Hardware stack levels used:    1
 39696 ;; This function calls:
 39697 ;;		Nothing
 39698 ;; This function is called by:
 39699 ;;		_EXT_INT_Initialize
 39700 ;;		_INT0_CallBack
 39701 ;; This function uses a non-reentrant model
 39702 ;;
 39703                           
 39704                           	psect	text119
 39705  01B1FA                     __ptext119:
 39706                           	opt stack 0
 39707  01B1FA                     _INT0_DefaultInterruptHandler:
 39708                           	opt stack 15
 39709                           
 39710                           ;incstack = 0
 39711  01B1FA  0012               	return		;funcret
 39712  01B1FC                     __end_of_INT0_DefaultInterruptHandler:
 39713                           	opt stack 0
 39714                           tosu	equ	0xFFF
 39715                           tosh	equ	0xFFE
 39716                           tosl	equ	0xFFD
 39717                           pclatu	equ	0xFFB
 39718                           pclath	equ	0xFFA
 39719                           tblptru	equ	0xFF8
 39720                           tblptrh	equ	0xFF7
 39721                           tblptrl	equ	0xFF6
 39722                           tablat	equ	0xFF5
 39723                           prodh	equ	0xFF4
 39724                           prodl	equ	0xFF3
 39725                           intcon	equ	0xFF2
 39726                           indf0	equ	0xFEF
 39727                           postinc0	equ	0xFEE
 39728                           fsr0h	equ	0xFEA
 39729                           fsr0l	equ	0xFE9
 39730                           wreg	equ	0xFE8
 39731                           indf1	equ	0xFE7
 39732                           postdec1	equ	0xFE5
 39733                           plusw1	equ	0xFE3
 39734                           fsr1h	equ	0xFE2
 39735                           fsr1l	equ	0xFE1
 39736                           bsr	equ	0xFE0
 39737                           indf2	equ	0xFDF
 39738                           postinc2	equ	0xFDE
 39739                           postdec2	equ	0xFDD
 39740                           plusw2	equ	0xFDB
 39741                           fsr2h	equ	0xFDA
 39742                           fsr2l	equ	0xFD9
 39743                           status	equ	0xFD8
 39744                           
 39745 ;; *************** function _dimmingOffTimeCallback *****************
 39746 ;; Defined at:
 39747 ;;		line 425 in file "main.c"
 39748 ;; Parameters:    Size  Location     Type
 39749 ;;		None
 39750 ;; Auto vars:     Size  Location     Type
 39751 ;;		None
 39752 ;; Return value:  Size  Location     Type
 39753 ;;                  1    wreg      void 
 39754 ;; Registers used:
 39755 ;;		wreg, status,2, cstack
 39756 ;; Tracked objects:
 39757 ;;		On entry : 0/0
 39758 ;;		On exit  : 0/0
 39759 ;;		Unchanged: 0/0
 39760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39765 ;;Total ram usage:        0 bytes
 39766 ;; Hardware stack levels used:    1
 39767 ;; Hardware stack levels required when called:    1
 39768 ;; This function calls:
 39769 ;;		_TMR5_StartTimer
 39770 ;;		_TMR5_WriteTimer
 39771 ;; This function is called by:
 39772 ;;		_main
 39773 ;;		_INT0_CallBack
 39774 ;; This function uses a non-reentrant model
 39775 ;;
 39776                           
 39777                           	psect	text120
 39778  01B02C                     __ptext120:
 39779                           	opt stack 0
 39780  01B02C                     _dimmingOffTimeCallback:
 39781                           	opt stack 14
 39782                           
 39783                           ;main.c: 428: LATGbits.LATG1 = 0;
 39784                           
 39785                           ;incstack = 0
 39786  01B02C  927F               	bcf	3967,1,c	;volatile
 39787                           
 39788                           ;main.c: 431: TMR5_WriteTimer(dimming_period);
 39789  01B02E  C0F0  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 39790  01B032  C0F1  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 39791  01B036  ECC9  F0D7         	call	_TMR5_WriteTimer	;wreg free
 39792                           
 39793                           ;main.c: 432: TMR5_StartTimer();
 39794  01B03A  ECF3  F0D8         	call	_TMR5_StartTimer	;wreg free
 39795                           
 39796                           ;main.c: 435: PIE5bits.TMR5IE = 1;
 39797  01B03E  010E               	movlb	14	; () banked
 39798  01B040  892E               	bsf	46,4,b	;volatile
 39799                           
 39800                           ; BSR set to: 14
 39801  01B042  0012               	return		;funcret
 39802  01B044                     __end_of_dimmingOffTimeCallback:
 39803                           	opt stack 0
 39804                           tosu	equ	0xFFF
 39805                           tosh	equ	0xFFE
 39806                           tosl	equ	0xFFD
 39807                           pclatu	equ	0xFFB
 39808                           pclath	equ	0xFFA
 39809                           tblptru	equ	0xFF8
 39810                           tblptrh	equ	0xFF7
 39811                           tblptrl	equ	0xFF6
 39812                           tablat	equ	0xFF5
 39813                           prodh	equ	0xFF4
 39814                           prodl	equ	0xFF3
 39815                           intcon	equ	0xFF2
 39816                           indf0	equ	0xFEF
 39817                           postinc0	equ	0xFEE
 39818                           fsr0h	equ	0xFEA
 39819                           fsr0l	equ	0xFE9
 39820                           wreg	equ	0xFE8
 39821                           indf1	equ	0xFE7
 39822                           postdec1	equ	0xFE5
 39823                           plusw1	equ	0xFE3
 39824                           fsr1h	equ	0xFE2
 39825                           fsr1l	equ	0xFE1
 39826                           bsr	equ	0xFE0
 39827                           indf2	equ	0xFDF
 39828                           postinc2	equ	0xFDE
 39829                           postdec2	equ	0xFDD
 39830                           plusw2	equ	0xFDB
 39831                           fsr2h	equ	0xFDA
 39832                           fsr2l	equ	0xFD9
 39833                           status	equ	0xFD8
 39834                           
 39835 ;; *************** function _TMR5_WriteTimer *****************
 39836 ;; Defined at:
 39837 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 39838 ;; Parameters:    Size  Location     Type
 39839 ;;  timerVal        2    0[COMRAM] unsigned int 
 39840 ;; Auto vars:     Size  Location     Type
 39841 ;;		None
 39842 ;; Return value:  Size  Location     Type
 39843 ;;                  1    wreg      void 
 39844 ;; Registers used:
 39845 ;;		wreg, status,2
 39846 ;; Tracked objects:
 39847 ;;		On entry : 0/0
 39848 ;;		On exit  : 0/0
 39849 ;;		Unchanged: 0/0
 39850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39855 ;;Total ram usage:        2 bytes
 39856 ;; Hardware stack levels used:    1
 39857 ;; This function calls:
 39858 ;;		Nothing
 39859 ;; This function is called by:
 39860 ;;		_TMR5_ISR
 39861 ;;		_dimmingOffTimeCallback
 39862 ;;		_TMR5_Reload
 39863 ;; This function uses a non-reentrant model
 39864 ;;
 39865                           
 39866                           	psect	text121
 39867  01AF92                     __ptext121:
 39868                           	opt stack 0
 39869  01AF92                     _TMR5_WriteTimer:
 39870                           	opt stack 16
 39871                           
 39872                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 39873                           
 39874                           ; BSR set to: 14
 39875                           ;incstack = 0
 39876  01AF92  A4C3               	btfss	4035,2,c	;volatile
 39877  01AF94  D007               	goto	i2l762
 39878                           
 39879                           ;tmr5.c: 130: {
 39880                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 39881  01AF96  90C3               	bcf	4035,0,c	;volatile
 39882                           
 39883                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 39884  01AF98  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 39885  01AF9A  6EC2               	movwf	4034,c	;volatile
 39886                           
 39887                           ;tmr5.c: 136: TMR5L = timerVal;
 39888  01AF9C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 39889                           
 39890                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 39891  01AFA0  80C3               	bsf	4035,0,c	;volatile
 39892                           
 39893                           ;tmr5.c: 140: }
 39894  01AFA2  0012               	return	
 39895  01AFA4                     i2l762:
 39896                           
 39897                           ;tmr5.c: 141: else
 39898                           ;tmr5.c: 142: {
 39899                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 39900  01AFA4  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 39901  01AFA6  6EC2               	movwf	4034,c	;volatile
 39902                           
 39903                           ;tmr5.c: 145: TMR5L = timerVal;
 39904  01AFA8  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 39905  01AFAC  0012               	return	
 39906  01AFAE                     __end_of_TMR5_WriteTimer:
 39907                           	opt stack 0
 39908                           tosu	equ	0xFFF
 39909                           tosh	equ	0xFFE
 39910                           tosl	equ	0xFFD
 39911                           pclatu	equ	0xFFB
 39912                           pclath	equ	0xFFA
 39913                           tblptru	equ	0xFF8
 39914                           tblptrh	equ	0xFF7
 39915                           tblptrl	equ	0xFF6
 39916                           tablat	equ	0xFF5
 39917                           prodh	equ	0xFF4
 39918                           prodl	equ	0xFF3
 39919                           intcon	equ	0xFF2
 39920                           indf0	equ	0xFEF
 39921                           postinc0	equ	0xFEE
 39922                           fsr0h	equ	0xFEA
 39923                           fsr0l	equ	0xFE9
 39924                           wreg	equ	0xFE8
 39925                           indf1	equ	0xFE7
 39926                           postdec1	equ	0xFE5
 39927                           plusw1	equ	0xFE3
 39928                           fsr1h	equ	0xFE2
 39929                           fsr1l	equ	0xFE1
 39930                           bsr	equ	0xFE0
 39931                           indf2	equ	0xFDF
 39932                           postinc2	equ	0xFDE
 39933                           postdec2	equ	0xFDD
 39934                           plusw2	equ	0xFDB
 39935                           fsr2h	equ	0xFDA
 39936                           fsr2l	equ	0xFD9
 39937                           status	equ	0xFD8
 39938                           
 39939 ;; *************** function _TMR5_StartTimer *****************
 39940 ;; Defined at:
 39941 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 39942 ;; Parameters:    Size  Location     Type
 39943 ;;		None
 39944 ;; Auto vars:     Size  Location     Type
 39945 ;;		None
 39946 ;; Return value:  Size  Location     Type
 39947 ;;                  1    wreg      void 
 39948 ;; Registers used:
 39949 ;;		None
 39950 ;; Tracked objects:
 39951 ;;		On entry : 0/0
 39952 ;;		On exit  : 0/0
 39953 ;;		Unchanged: 0/0
 39954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39959 ;;Total ram usage:        0 bytes
 39960 ;; Hardware stack levels used:    1
 39961 ;; This function calls:
 39962 ;;		Nothing
 39963 ;; This function is called by:
 39964 ;;		_dimmingOffTimeCallback
 39965 ;; This function uses a non-reentrant model
 39966 ;;
 39967                           
 39968                           	psect	text122
 39969  01B1E6                     __ptext122:
 39970                           	opt stack 0
 39971  01B1E6                     _TMR5_StartTimer:
 39972                           	opt stack 14
 39973                           
 39974                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 39975                           
 39976                           ;incstack = 0
 39977  01B1E6  80C3               	bsf	4035,0,c	;volatile
 39978  01B1E8  0012               	return		;funcret
 39979  01B1EA                     __end_of_TMR5_StartTimer:
 39980                           	opt stack 0
 39981                           tosu	equ	0xFFF
 39982                           tosh	equ	0xFFE
 39983                           tosl	equ	0xFFD
 39984                           pclatu	equ	0xFFB
 39985                           pclath	equ	0xFFA
 39986                           tblptru	equ	0xFF8
 39987                           tblptrh	equ	0xFF7
 39988                           tblptrl	equ	0xFF6
 39989                           tablat	equ	0xFF5
 39990                           prodh	equ	0xFF4
 39991                           prodl	equ	0xFF3
 39992                           intcon	equ	0xFF2
 39993                           indf0	equ	0xFEF
 39994                           postinc0	equ	0xFEE
 39995                           fsr0h	equ	0xFEA
 39996                           fsr0l	equ	0xFE9
 39997                           wreg	equ	0xFE8
 39998                           indf1	equ	0xFE7
 39999                           postdec1	equ	0xFE5
 40000                           plusw1	equ	0xFE3
 40001                           fsr1h	equ	0xFE2
 40002                           fsr1l	equ	0xFE1
 40003                           bsr	equ	0xFE0
 40004                           indf2	equ	0xFDF
 40005                           postinc2	equ	0xFDE
 40006                           postdec2	equ	0xFDD
 40007                           plusw2	equ	0xFDB
 40008                           fsr2h	equ	0xFDA
 40009                           fsr2l	equ	0xFD9
 40010                           status	equ	0xFD8
 40011                           
 40012 ;; *************** function _I2C1_ISR *****************
 40013 ;; Defined at:
 40014 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 40015 ;; Parameters:    Size  Location     Type
 40016 ;;		None
 40017 ;; Auto vars:     Size  Location     Type
 40018 ;;		None
 40019 ;; Return value:  Size  Location     Type
 40020 ;;                  1    wreg      void 
 40021 ;; Registers used:
 40022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40023 ;; Tracked objects:
 40024 ;;		On entry : 0/0
 40025 ;;		On exit  : 0/0
 40026 ;;		Unchanged: 0/0
 40027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40032 ;;Total ram usage:        2 bytes
 40033 ;; Hardware stack levels used:    1
 40034 ;; Hardware stack levels required when called:    1
 40035 ;; This function calls:
 40036 ;;		_I2C1_FunctionComplete
 40037 ;;		_I2C1_Stop
 40038 ;; This function is called by:
 40039 ;;		_INTERRUPT_InterruptManagerHigh
 40040 ;; This function uses a non-reentrant model
 40041 ;;
 40042                           
 40043                           	psect	text123
 40044  017AF0                     __ptext123:
 40045                           	opt stack 0
 40046  017AF0                     _I2C1_ISR:
 40047                           	opt stack 16
 40048                           
 40049                           ;i2c1.c: 238: static uint8_t *pi2c_buf_ptr;
 40050                           ;i2c1.c: 239: static uint16_t i2c_address = 0;
 40051                           ;i2c1.c: 240: static uint8_t i2c_bytes_left = 0;
 40052                           ;i2c1.c: 241: static uint8_t i2c_10bit_address_restart = 0;
 40053                           ;i2c1.c: 243: PIR3bits.SSP1IF = 0;
 40054                           
 40055                           ;incstack = 0
 40056  017AF0  010E               	movlb	14	; () banked
 40057  017AF2  9136               	bcf	54,0,b	;volatile
 40058                           
 40059                           ;i2c1.c: 247: if(SSP1CON1bits.WCOL)
 40060  017AF4  AE95               	btfss	3989,7,c	;volatile
 40061  017AF6  D104               	goto	i2l1775
 40062                           
 40063                           ; BSR set to: 14
 40064                           ;i2c1.c: 248: {
 40065                           ;i2c1.c: 250: SSP1CON1bits.WCOL = 0;
 40066  017AF8  9E95               	bcf	3989,7,c	;volatile
 40067                           
 40068                           ; BSR set to: 14
 40069                           ;i2c1.c: 251: i2c1_state = S_MASTER_IDLE;
 40070  017AFA  0E00               	movlw	0
 40071  017AFC  0102               	movlb	2	; () banked
 40072  017AFE  6F6D               	movwf	_i2c1_state& (0+255),b
 40073                           
 40074                           ; BSR set to: 2
 40075                           ;i2c1.c: 252: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 40076  017B00  EE20 F003          	lfsr	2,3
 40077  017B04  5160               	movf	_p_i2c1_current& (0+255),w,b
 40078  017B06  26D9               	addwf	fsr2l,f,c
 40079  017B08  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40080  017B0A  22DA               	addwfc	fsr2h,f,c
 40081  017B0C  CFDE F004          	movff	postinc2,??_I2C1_ISR
 40082  017B10  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 40083  017B14  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 40084  017B18  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 40085  017B1C  0E01               	movlw	1
 40086  017B1E  6EDF               	movwf	indf2,c
 40087                           
 40088                           ; BSR set to: 2
 40089                           ;i2c1.c: 255: p_i2c1_current = (0);
 40090  017B20  0E00               	movlw	0
 40091  017B22  6F60               	movwf	_p_i2c1_current& (0+255),b
 40092  017B24  0E00               	movlw	0
 40093  017B26  6F61               	movwf	(_p_i2c1_current+1)& (0+255),b
 40094                           
 40095                           ; BSR set to: 2
 40096                           ;i2c1.c: 257: return;
 40097  017B28  0012               	return	
 40098  017B2A                     i2l1776:
 40099                           
 40100                           ; BSR set to: 2
 40101                           ;i2c1.c: 265: if(i2c1_object.trStatus.s.empty != 1)
 40102  017B2A  B30D               	btfsc	(_i2c1_object+4)& (0+255),1,b
 40103  017B2C  0012               	return	
 40104                           
 40105                           ; BSR set to: 2
 40106                           ;i2c1.c: 266: {
 40107                           ;i2c1.c: 268: p_i2c1_current = i2c1_object.pTrHead;
 40108  017B2E  C20B  F260         	movff	_i2c1_object+2,_p_i2c1_current
 40109  017B32  C20C  F261         	movff	_i2c1_object+3,_p_i2c1_current+1
 40110                           
 40111                           ; BSR set to: 2
 40112                           ;i2c1.c: 269: i2c1_trb_count = i2c1_object.pTrHead->count;
 40113  017B36  C20B  FFD9         	movff	_i2c1_object+2,fsr2l
 40114  017B3A  C20C  FFDA         	movff	_i2c1_object+3,fsr2h
 40115  017B3E  50DF               	movf	indf2,w,c
 40116  017B40  6F6C               	movwf	_i2c1_trb_count& (0+255),b
 40117                           
 40118                           ; BSR set to: 2
 40119                           ;i2c1.c: 270: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 40120  017B42  EE20 F001          	lfsr	2,1
 40121  017B46  510B               	movf	(_i2c1_object+2)& (0+255),w,b
 40122  017B48  26D9               	addwf	fsr2l,f,c
 40123  017B4A  510C               	movf	(_i2c1_object+3)& (0+255),w,b
 40124  017B4C  22DA               	addwfc	fsr2h,f,c
 40125  017B4E  CFDE F262          	movff	postinc2,_p_i2c1_trb_current
 40126  017B52  CFDD F263          	movff	postdec2,_p_i2c1_trb_current+1
 40127                           
 40128                           ; BSR set to: 2
 40129                           ;i2c1.c: 272: i2c1_object.pTrHead++;
 40130  017B56  0E05               	movlw	5
 40131  017B58  270B               	addwf	(_i2c1_object+2)& (0+255),f,b
 40132  017B5A  0E00               	movlw	0
 40133  017B5C  230C               	addwfc	(_i2c1_object+3)& (0+255),f,b
 40134                           
 40135                           ; BSR set to: 2
 40136                           ;i2c1.c: 275: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 40137  017B5E  0E93               	movlw	low (_i2c1_tr_queue+5)
 40138  017B60  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 40139  017B62  E108               	bnz	i2l12998
 40140  017B64  0E02               	movlw	high (_i2c1_tr_queue+5)
 40141  017B66  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 40142  017B68  A4D8               	btfss	status,2,c
 40143  017B6A  D004               	goto	i2l1778
 40144                           
 40145                           ; BSR set to: 2
 40146                           ;i2c1.c: 276: {
 40147                           ;i2c1.c: 278: i2c1_object.pTrHead = i2c1_tr_queue;
 40148  017B6C  0E8E               	movlw	low _i2c1_tr_queue
 40149  017B6E  6F0B               	movwf	(_i2c1_object+2)& (0+255),b
 40150  017B70  0E02               	movlw	high _i2c1_tr_queue
 40151  017B72  6F0C               	movwf	(_i2c1_object+3)& (0+255),b
 40152  017B74                     i2l1778:
 40153  017B74                     i2l12998:
 40154                           
 40155                           ; BSR set to: 2
 40156                           ;i2c1.c: 279: }
 40157                           ;i2c1.c: 283: i2c1_object.trStatus.s.full = 0;
 40158  017B74  910D               	bcf	(_i2c1_object+4)& (0+255),0,b
 40159                           
 40160                           ;i2c1.c: 286: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 40161  017B76  5109               	movf	_i2c1_object& (0+255),w,b
 40162  017B78  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 40163  017B7A  E104               	bnz	i2l1779
 40164  017B7C  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 40165  017B7E  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 40166  017B80  B4D8               	btfsc	status,2,c
 40167                           
 40168                           ; BSR set to: 2
 40169                           ;i2c1.c: 287: {
 40170                           ;i2c1.c: 289: i2c1_object.trStatus.s.empty = 1;
 40171  017B82  830D               	bsf	(_i2c1_object+4)& (0+255),1,b
 40172  017B84                     i2l1779:
 40173                           
 40174                           ; BSR set to: 2
 40175                           ;i2c1.c: 290: }
 40176                           ;i2c1.c: 293: SSP1CON2bits.SEN = 1;
 40177  017B84  8096               	bsf	3990,0,c	;volatile
 40178                           
 40179                           ; BSR set to: 2
 40180                           ;i2c1.c: 296: i2c1_state = S_MASTER_SEND_ADDR;
 40181  017B86  0E02               	movlw	2
 40182  017B88  6F6D               	movwf	_i2c1_state& (0+255),b
 40183                           
 40184                           ; BSR set to: 2
 40185                           ;i2c1.c: 297: }
 40186                           ;i2c1.c: 299: break;
 40187  017B8A  0012               	return	
 40188  017B8C                     i2l1781:
 40189                           
 40190                           ; BSR set to: 2
 40191                           ;i2c1.c: 306: SSP1CON2bits.RSEN = 1;
 40192  017B8C  8296               	bsf	3990,1,c	;volatile
 40193                           
 40194                           ; BSR set to: 2
 40195                           ;i2c1.c: 309: i2c1_state = S_MASTER_SEND_ADDR;
 40196  017B8E  0E02               	movlw	2
 40197  017B90  6F6D               	movwf	_i2c1_state& (0+255),b
 40198                           
 40199                           ;i2c1.c: 311: break;
 40200  017B92  0012               	return	
 40201  017B94                     i2l1782:
 40202                           
 40203                           ; BSR set to: 2
 40204                           ;i2c1.c: 315: if(SSP1CON2bits.ACKSTAT)
 40205  017B94  AC96               	btfss	3990,6,c	;volatile
 40206  017B96  D005               	goto	i2l1783
 40207                           
 40208                           ; BSR set to: 2
 40209                           ;i2c1.c: 316: {
 40210                           ;i2c1.c: 317: i2c1_object.i2cErrors++;
 40211  017B98  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40212                           
 40213                           ; BSR set to: 2
 40214                           ;i2c1.c: 318: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40215  017B9A  0E04               	movlw	4
 40216  017B9C  EC38  F0D4         	call	_I2C1_Stop
 40217                           
 40218                           ;i2c1.c: 319: }
 40219  017BA0  0012               	return	
 40220  017BA2                     i2l1783:
 40221                           
 40222                           ;i2c1.c: 320: else
 40223                           ;i2c1.c: 321: {
 40224                           ;i2c1.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 40225  017BA2  90D8               	bcf	status,0,c
 40226  017BA4  0101               	movlb	1	; () banked
 40227  017BA6  31E7               	rrcf	(I2C1_ISR@i2c_address+1)& (0+255),w,b
 40228  017BA8  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 40229  017BAA  31E6               	rrcf	I2C1_ISR@i2c_address& (0+255),w,b
 40230  017BAC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 40231  017BAE  5004               	movf	??_I2C1_ISR,w,c
 40232  017BB0  6E91               	movwf	3985,c	;volatile
 40233                           
 40234                           ; BSR set to: 1
 40235                           ;i2c1.c: 326: if(i2c_address & 0x01)
 40236  017BB2  A1E6               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40237  017BB4  D004               	goto	i2l1785
 40238                           
 40239                           ; BSR set to: 1
 40240                           ;i2c1.c: 327: {
 40241                           ;i2c1.c: 330: i2c1_state = S_MASTER_10BIT_RESTART;
 40242  017BB6  0E0B               	movlw	11
 40243  017BB8  0102               	movlb	2	; () banked
 40244  017BBA  6F6D               	movwf	_i2c1_state& (0+255),b
 40245                           
 40246                           ;i2c1.c: 331: }
 40247  017BBC  0012               	return	
 40248  017BBE                     i2l1785:
 40249                           
 40250                           ;i2c1.c: 332: else
 40251                           ;i2c1.c: 333: {
 40252                           ;i2c1.c: 335: i2c1_state = S_MASTER_SEND_DATA;
 40253                           
 40254                           ; BSR set to: 2
 40255  017BBE  0E03               	movlw	3
 40256  017BC0  0102               	movlb	2	; () banked
 40257  017BC2  6F6D               	movwf	_i2c1_state& (0+255),b
 40258                           
 40259                           ; BSR set to: 2
 40260                           ;i2c1.c: 336: }
 40261                           ;i2c1.c: 337: }
 40262                           ;i2c1.c: 339: break;
 40263                           
 40264                           ; BSR set to: 2
 40265  017BC4  0012               	return	
 40266  017BC6                     i2l1787:
 40267                           
 40268                           ; BSR set to: 2
 40269                           ;i2c1.c: 343: if(SSP1CON2bits.ACKSTAT)
 40270  017BC6  AC96               	btfss	3990,6,c	;volatile
 40271  017BC8  D005               	goto	i2l1788
 40272                           
 40273                           ; BSR set to: 2
 40274                           ;i2c1.c: 344: {
 40275                           ;i2c1.c: 345: i2c1_object.i2cErrors++;
 40276  017BCA  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40277                           
 40278                           ; BSR set to: 2
 40279                           ;i2c1.c: 346: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40280  017BCC  0E04               	movlw	4
 40281  017BCE  EC38  F0D4         	call	_I2C1_Stop
 40282                           
 40283                           ;i2c1.c: 347: }
 40284  017BD2  0012               	return	
 40285  017BD4                     i2l1788:
 40286                           
 40287                           ; BSR set to: 2
 40288                           ;i2c1.c: 348: else
 40289                           ;i2c1.c: 349: {
 40290                           ;i2c1.c: 352: SSP1CON2bits.RSEN = 1;
 40291  017BD4  8296               	bsf	3990,1,c	;volatile
 40292                           
 40293                           ; BSR set to: 2
 40294                           ;i2c1.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 40295  017BD6  C1E6  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 40296  017BDA  C1E7  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 40297  017BDE  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 40298  017BE2  6A05               	clrf	??_I2C1_ISR+1,c
 40299  017BE4  0E06               	movlw	6
 40300  017BE6  1604               	andwf	??_I2C1_ISR,f,c
 40301  017BE8  0E00               	movlw	0
 40302  017BEA  1605               	andwf	??_I2C1_ISR+1,f,c
 40303  017BEC  0EF0               	movlw	240
 40304  017BEE  1004               	iorwf	??_I2C1_ISR,w,c
 40305  017BF0  0101               	movlb	1	; () banked
 40306  017BF2  6FE6               	movwf	I2C1_ISR@i2c_address& (0+255),b
 40307  017BF4  5005               	movf	??_I2C1_ISR+1,w,c
 40308  017BF6  6FE7               	movwf	(I2C1_ISR@i2c_address+1)& (0+255),b
 40309                           
 40310                           ; BSR set to: 1
 40311                           ;i2c1.c: 359: i2c_address |= 0x0001;
 40312  017BF8  81E6               	bsf	I2C1_ISR@i2c_address& (0+255),0,b
 40313                           
 40314                           ; BSR set to: 1
 40315                           ;i2c1.c: 362: i2c_10bit_address_restart = 1;
 40316  017BFA  0E01               	movlw	1
 40317  017BFC  0102               	movlb	2	; () banked
 40318  017BFE  6F6A               	movwf	I2C1_ISR@i2c_10bit_address_restart& (0+255),b
 40319                           
 40320                           ; BSR set to: 2
 40321                           ;i2c1.c: 365: i2c1_state = S_MASTER_SEND_ADDR;
 40322  017C00  0E02               	movlw	2
 40323  017C02  6F6D               	movwf	_i2c1_state& (0+255),b
 40324                           
 40325                           ; BSR set to: 2
 40326                           ;i2c1.c: 366: }
 40327                           ;i2c1.c: 368: break;
 40328  017C04  0012               	return	
 40329  017C06                     
 40330                           ; BSR set to: 2
 40331                           ;i2c1.c: 383: if(i2c_10bit_address_restart != 1)
 40332                           
 40333                           ; BSR set to: 2
 40334  017C06  056A               	decf	I2C1_ISR@i2c_10bit_address_restart& (0+255),w,b
 40335  017C08  B4D8               	btfsc	status,2,c
 40336  017C0A  D01A               	goto	i2l1792
 40337                           
 40338                           ; BSR set to: 2
 40339                           ;i2c1.c: 384: {
 40340                           ;i2c1.c: 386: i2c_address = p_i2c1_trb_current->address;
 40341  017C0C  C262  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 40342  017C10  C263  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 40343  017C14  CFDE F1E6          	movff	postinc2,I2C1_ISR@i2c_address
 40344  017C18  CFDD F1E7          	movff	postdec2,I2C1_ISR@i2c_address+1
 40345                           
 40346                           ; BSR set to: 2
 40347                           ;i2c1.c: 387: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 40348  017C1C  EE20 F003          	lfsr	2,3
 40349  017C20  5162               	movf	_p_i2c1_trb_current& (0+255),w,b
 40350  017C22  26D9               	addwf	fsr2l,f,c
 40351  017C24  5163               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40352  017C26  22DA               	addwfc	fsr2h,f,c
 40353  017C28  CFDE F25E          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 40354  017C2C  CFDD F25F          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 40355                           
 40356                           ; BSR set to: 2
 40357                           ;i2c1.c: 388: i2c_bytes_left = p_i2c1_trb_current->length;
 40358  017C30  EE20 F002          	lfsr	2,2
 40359  017C34  5162               	movf	_p_i2c1_trb_current& (0+255),w,b
 40360  017C36  26D9               	addwf	fsr2l,f,c
 40361  017C38  5163               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40362  017C3A  22DA               	addwfc	fsr2h,f,c
 40363  017C3C  50DF               	movf	indf2,w,c
 40364  017C3E  6F6B               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 40365  017C40                     i2l1792:
 40366                           
 40367                           ;i2c1.c: 411: else
 40368                           ;i2c1.c: 412: {
 40369                           ;i2c1.c: 414: SSP1BUF = i2c_address;
 40370  017C40  C1E6  FF91         	movff	I2C1_ISR@i2c_address,3985	;volatile
 40371                           
 40372                           ;i2c1.c: 415: if(i2c_address & 0x01)
 40373  017C44  0101               	movlb	1	; () banked
 40374  017C46  A1E6               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40375  017C48  D004               	goto	i2l1796
 40376                           
 40377                           ; BSR set to: 1
 40378                           ;i2c1.c: 416: {
 40379                           ;i2c1.c: 418: i2c1_state = S_MASTER_ACK_ADDR;
 40380  017C4A  0E05               	movlw	5
 40381  017C4C  0102               	movlb	2	; () banked
 40382  017C4E  6F6D               	movwf	_i2c1_state& (0+255),b
 40383                           
 40384                           ;i2c1.c: 419: }
 40385  017C50  0012               	return	
 40386  017C52                     i2l1796:
 40387                           
 40388                           ;i2c1.c: 420: else
 40389                           ;i2c1.c: 421: {
 40390                           ;i2c1.c: 423: i2c1_state = S_MASTER_SEND_DATA;
 40391                           
 40392                           ; BSR set to: 2
 40393  017C52  0E03               	movlw	3
 40394  017C54  0102               	movlb	2	; () banked
 40395  017C56  6F6D               	movwf	_i2c1_state& (0+255),b
 40396                           
 40397                           ; BSR set to: 2
 40398                           ;i2c1.c: 424: }
 40399                           ;i2c1.c: 425: }
 40400                           ;i2c1.c: 426: break;
 40401                           
 40402                           ; BSR set to: 2
 40403  017C58  0012               	return	
 40404  017C5A                     i2l1798:
 40405                           
 40406                           ; BSR set to: 2
 40407                           ;i2c1.c: 431: if(SSP1CON2bits.ACKSTAT)
 40408  017C5A  AC96               	btfss	3990,6,c	;volatile
 40409  017C5C  D006               	goto	i2l1799
 40410                           
 40411                           ; BSR set to: 2
 40412                           ;i2c1.c: 432: {
 40413                           ;i2c1.c: 434: i2c1_object.i2cErrors++;
 40414  017C5E  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40415                           
 40416                           ; BSR set to: 2
 40417                           ;i2c1.c: 437: SSP1CON2bits.ACKSTAT = 0;
 40418  017C60  9C96               	bcf	3990,6,c	;volatile
 40419                           
 40420                           ; BSR set to: 2
 40421                           ;i2c1.c: 440: I2C1_Stop(I2C1_DATA_NO_ACK);
 40422  017C62  0E05               	movlw	5
 40423  017C64  EC38  F0D4         	call	_I2C1_Stop
 40424                           
 40425                           ;i2c1.c: 442: }
 40426  017C68  0012               	return	
 40427  017C6A                     i2l1799:
 40428                           
 40429                           ;i2c1.c: 443: else
 40430                           ;i2c1.c: 444: {
 40431                           ;i2c1.c: 446: if(i2c_bytes_left-- == 0U)
 40432  017C6A  0102               	movlb	2	; () banked
 40433  017C6C  076B               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40434  017C6E  296B               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 40435  017C70  A4D8               	btfss	status,2,c
 40436  017C72  D00E               	goto	i2l1801
 40437                           
 40438                           ; BSR set to: 2
 40439                           ;i2c1.c: 447: {
 40440                           ;i2c1.c: 451: p_i2c1_trb_current++;
 40441  017C74  0E05               	movlw	5
 40442  017C76  2762               	addwf	_p_i2c1_trb_current& (0+255),f,b
 40443  017C78  0E00               	movlw	0
 40444  017C7A  2363               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 40445                           
 40446                           ; BSR set to: 2
 40447                           ;i2c1.c: 454: if(--i2c1_trb_count == 0)
 40448  017C7C  2F6C               	decfsz	_i2c1_trb_count& (0+255),f,b
 40449  017C7E  D004               	goto	i2l1802
 40450                           
 40451                           ; BSR set to: 2
 40452                           ;i2c1.c: 455: {
 40453                           ;i2c1.c: 456: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40454  017C80  0E00               	movlw	0
 40455  017C82  EC38  F0D4         	call	_I2C1_Stop
 40456                           
 40457                           ;i2c1.c: 457: }
 40458  017C86  0012               	return	
 40459  017C88                     i2l1802:
 40460                           
 40461                           ; BSR set to: 2
 40462                           ;i2c1.c: 458: else
 40463                           ;i2c1.c: 459: {
 40464                           ;i2c1.c: 466: SSP1CON2bits.RSEN = 1;
 40465  017C88  8296               	bsf	3990,1,c	;volatile
 40466                           
 40467                           ; BSR set to: 2
 40468                           ;i2c1.c: 469: i2c1_state = S_MASTER_SEND_ADDR;
 40469  017C8A  0E02               	movlw	2
 40470  017C8C  6F6D               	movwf	_i2c1_state& (0+255),b
 40471                           
 40472                           ; BSR set to: 2
 40473                           ;i2c1.c: 471: }
 40474                           ;i2c1.c: 472: }
 40475  017C8E  0012               	return	
 40476  017C90                     i2l1801:
 40477                           
 40478                           ; BSR set to: 2
 40479                           ;i2c1.c: 473: else
 40480                           ;i2c1.c: 474: {
 40481                           ;i2c1.c: 476: SSP1BUF = *pi2c_buf_ptr++;
 40482                           
 40483                           ; BSR set to: 2
 40484  017C90  C25E  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 40485  017C94  C25F  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 40486  017C98  50DF               	movf	indf2,w,c
 40487  017C9A  6E91               	movwf	3985,c	;volatile
 40488                           
 40489                           ; BSR set to: 2
 40490  017C9C  4B5E               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 40491  017C9E  2B5F               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 40492                           
 40493                           ; BSR set to: 2
 40494                           ;i2c1.c: 477: }
 40495                           ;i2c1.c: 478: }
 40496                           ;i2c1.c: 479: break;
 40497                           
 40498                           ; BSR set to: 2
 40499  017CA0  0012               	return	
 40500  017CA2                     i2l1805:
 40501                           
 40502                           ; BSR set to: 2
 40503                           ;i2c1.c: 484: if(SSP1CON2bits.ACKSTAT)
 40504  017CA2  AC96               	btfss	3990,6,c	;volatile
 40505  017CA4  D006               	goto	i2l1806
 40506                           
 40507                           ; BSR set to: 2
 40508                           ;i2c1.c: 485: {
 40509                           ;i2c1.c: 488: i2c1_object.i2cErrors++;
 40510  017CA6  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40511                           
 40512                           ; BSR set to: 2
 40513                           ;i2c1.c: 491: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40514  017CA8  0E04               	movlw	4
 40515  017CAA  EC38  F0D4         	call	_I2C1_Stop
 40516                           
 40517                           ;i2c1.c: 494: SSP1CON2bits.ACKSTAT = 0;
 40518  017CAE  9C96               	bcf	3990,6,c	;volatile
 40519                           
 40520                           ;i2c1.c: 495: }
 40521  017CB0  0012               	return	
 40522  017CB2                     i2l1806:
 40523                           
 40524                           ; BSR set to: 2
 40525                           ;i2c1.c: 496: else
 40526                           ;i2c1.c: 497: {
 40527                           ;i2c1.c: 498: SSP1CON2bits.RCEN = 1;
 40528  017CB2  8696               	bsf	3990,3,c	;volatile
 40529                           
 40530                           ; BSR set to: 2
 40531                           ;i2c1.c: 499: i2c1_state = S_MASTER_ACK_RCV_DATA;
 40532  017CB4  0E08               	movlw	8
 40533  017CB6  6F6D               	movwf	_i2c1_state& (0+255),b
 40534                           
 40535                           ; BSR set to: 2
 40536                           ;i2c1.c: 500: }
 40537                           ;i2c1.c: 501: break;
 40538  017CB8  0012               	return	
 40539  017CBA                     
 40540                           ; BSR set to: 2
 40541                           ;i2c1.c: 508: i2c1_state = S_MASTER_ACK_RCV_DATA;
 40542                           
 40543                           ; BSR set to: 2
 40544  017CBA  0E08               	movlw	8
 40545  017CBC  6F6D               	movwf	_i2c1_state& (0+255),b
 40546                           
 40547                           ; BSR set to: 2
 40548                           ;i2c1.c: 511: SSP1CON2bits.RCEN = 1;
 40549  017CBE  8696               	bsf	3990,3,c	;volatile
 40550                           
 40551                           ;i2c1.c: 513: break;
 40552  017CC0  0012               	return	
 40553  017CC2                     
 40554                           ; BSR set to: 2
 40555                           ;i2c1.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
 40556                           
 40557                           ; BSR set to: 2
 40558  017CC2  C25E  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 40559  017CC6  C25F  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 40560  017CCA  CF91 FFDF          	movff	3985,indf2	;volatile
 40561                           
 40562                           ; BSR set to: 2
 40563  017CCE  4B5E               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 40564  017CD0  2B5F               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 40565                           
 40566                           ; BSR set to: 2
 40567                           ;i2c1.c: 521: if(--i2c_bytes_left)
 40568  017CD2  0E01               	movlw	1
 40569  017CD4  5F6B               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40570  017CD6  B4D8               	btfsc	status,2,c
 40571  017CD8  D004               	goto	i2l1810
 40572                           
 40573                           ; BSR set to: 2
 40574                           ;i2c1.c: 522: {
 40575                           ;i2c1.c: 528: SSP1CON2bits.ACKDT = 0;
 40576  017CDA  9A96               	bcf	3990,5,c	;volatile
 40577                           
 40578                           ; BSR set to: 2
 40579                           ;i2c1.c: 531: i2c1_state = S_MASTER_RCV_DATA;
 40580  017CDC  0E06               	movlw	6
 40581  017CDE  6F6D               	movwf	_i2c1_state& (0+255),b
 40582                           
 40583                           ;i2c1.c: 532: }
 40584  017CE0  D003               	goto	i2l1811
 40585  017CE2                     i2l1810:
 40586                           
 40587                           ; BSR set to: 2
 40588                           ;i2c1.c: 533: else
 40589                           ;i2c1.c: 534: {
 40590                           ;i2c1.c: 538: SSP1CON2bits.ACKDT = 1;
 40591  017CE2  8A96               	bsf	3990,5,c	;volatile
 40592                           
 40593                           ; BSR set to: 2
 40594                           ;i2c1.c: 540: I2C1_FunctionComplete();
 40595  017CE4  ECF1  F0D7         	call	_I2C1_FunctionComplete	;wreg free
 40596  017CE8                     i2l1811:
 40597                           
 40598                           ;i2c1.c: 541: }
 40599                           ;i2c1.c: 544: SSP1CON2bits.ACKEN = 1;
 40600  017CE8  8896               	bsf	3990,4,c	;volatile
 40601                           
 40602                           ;i2c1.c: 545: break;
 40603  017CEA  0012               	return	
 40604  017CEC                     
 40605                           ;i2c1.c: 548: case S_MASTER_SEND_STOP:
 40606                           ;i2c1.c: 551: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40607  017CEC  0E00               	movlw	0
 40608  017CEE  EC38  F0D4         	call	_I2C1_Stop
 40609                           
 40610                           ;i2c1.c: 552: break;
 40611  017CF2  0012               	return	
 40612  017CF4                     
 40613                           ;i2c1.c: 558: i2c1_object.i2cErrors++;
 40614  017CF4  0102               	movlb	2	; () banked
 40615  017CF6  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40616                           
 40617                           ; BSR set to: 2
 40618                           ;i2c1.c: 559: I2C1_Stop(I2C1_LOST_STATE);
 40619  017CF8  0E06               	movlw	6
 40620  017CFA  EC38  F0D4         	call	_I2C1_Stop
 40621                           
 40622                           ;i2c1.c: 562: }
 40623                           
 40624                           ;i2c1.c: 560: break;
 40625  017CFE  0012               	return	
 40626  017D00                     i2l1775:
 40627  017D00  0102               	movlb	2	; () banked
 40628  017D02  516D               	movf	_i2c1_state& (0+255),w,b
 40629                           
 40630                           ; Switch size 1, requested type "space"
 40631                           ; Number of cases is 11, Range of values is 0 to 11
 40632                           ; switch strategies available:
 40633                           ; Name         Instructions Cycles
 40634                           ; simple_byte           34    18 (average)
 40635                           ;	Chosen strategy is simple_byte
 40636  017D04  0A00               	xorlw	0	; case 0
 40637  017D06  B4D8               	btfsc	status,2,c
 40638  017D08  D710               	goto	i2l1776
 40639  017D0A  0A01               	xorlw	1	; case 1
 40640  017D0C  B4D8               	btfsc	status,2,c
 40641  017D0E  D73E               	goto	i2l1781
 40642  017D10  0A03               	xorlw	3	; case 2
 40643  017D12  B4D8               	btfsc	status,2,c
 40644  017D14  D778               	goto	i2l1790
 40645  017D16  0A01               	xorlw	1	; case 3
 40646  017D18  B4D8               	btfsc	status,2,c
 40647  017D1A  D79F               	goto	i2l1798
 40648  017D1C  0A07               	xorlw	7	; case 4
 40649  017D1E  B4D8               	btfsc	status,2,c
 40650  017D20  D7E5               	goto	i2l1812
 40651  017D22  0A01               	xorlw	1	; case 5
 40652  017D24  B4D8               	btfsc	status,2,c
 40653  017D26  D7BD               	goto	i2l1805
 40654  017D28  0A03               	xorlw	3	; case 6
 40655  017D2A  B4D8               	btfsc	status,2,c
 40656  017D2C  D7C6               	goto	i2l1808
 40657  017D2E  0A01               	xorlw	1	; case 7
 40658  017D30  B4D8               	btfsc	status,2,c
 40659  017D32  D7DC               	goto	i2l1812
 40660  017D34  0A0F               	xorlw	15	; case 8
 40661  017D36  B4D8               	btfsc	status,2,c
 40662  017D38  D7C4               	goto	i2l1809
 40663  017D3A  0A02               	xorlw	2	; case 10
 40664  017D3C  B4D8               	btfsc	status,2,c
 40665  017D3E  D72A               	goto	i2l1782
 40666  017D40  0A01               	xorlw	1	; case 11
 40667  017D42  B4D8               	btfsc	status,2,c
 40668  017D44  D740               	goto	i2l1787
 40669  017D46  D7D6               	goto	i2l1814
 40670  017D48                     __end_of_I2C1_ISR:
 40671                           	opt stack 0
 40672                           tosu	equ	0xFFF
 40673                           tosh	equ	0xFFE
 40674                           tosl	equ	0xFFD
 40675                           pclatu	equ	0xFFB
 40676                           pclath	equ	0xFFA
 40677                           tblptru	equ	0xFF8
 40678                           tblptrh	equ	0xFF7
 40679                           tblptrl	equ	0xFF6
 40680                           tablat	equ	0xFF5
 40681                           prodh	equ	0xFF4
 40682                           prodl	equ	0xFF3
 40683                           intcon	equ	0xFF2
 40684                           indf0	equ	0xFEF
 40685                           postinc0	equ	0xFEE
 40686                           fsr0h	equ	0xFEA
 40687                           fsr0l	equ	0xFE9
 40688                           wreg	equ	0xFE8
 40689                           indf1	equ	0xFE7
 40690                           postdec1	equ	0xFE5
 40691                           plusw1	equ	0xFE3
 40692                           fsr1h	equ	0xFE2
 40693                           fsr1l	equ	0xFE1
 40694                           bsr	equ	0xFE0
 40695                           indf2	equ	0xFDF
 40696                           postinc2	equ	0xFDE
 40697                           postdec2	equ	0xFDD
 40698                           plusw2	equ	0xFDB
 40699                           fsr2h	equ	0xFDA
 40700                           fsr2l	equ	0xFD9
 40701                           status	equ	0xFD8
 40702                           
 40703 ;; *************** function _I2C1_Stop *****************
 40704 ;; Defined at:
 40705 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 40706 ;; Parameters:    Size  Location     Type
 40707 ;;  completion_c    1    wreg     enum E17311
 40708 ;; Auto vars:     Size  Location     Type
 40709 ;;  completion_c    1    2[COMRAM] enum E17311
 40710 ;; Return value:  Size  Location     Type
 40711 ;;                  1    wreg      void 
 40712 ;; Registers used:
 40713 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40714 ;; Tracked objects:
 40715 ;;		On entry : 0/0
 40716 ;;		On exit  : 0/0
 40717 ;;		Unchanged: 0/0
 40718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40723 ;;Total ram usage:        3 bytes
 40724 ;; Hardware stack levels used:    1
 40725 ;; This function calls:
 40726 ;;		Nothing
 40727 ;; This function is called by:
 40728 ;;		_I2C1_ISR
 40729 ;; This function uses a non-reentrant model
 40730 ;;
 40731                           
 40732                           	psect	text124
 40733  01A870                     __ptext124:
 40734                           	opt stack 0
 40735  01A870                     _I2C1_Stop:
 40736                           	opt stack 16
 40737                           
 40738                           ;incstack = 0
 40739                           ;I2C1_Stop@completion_code stored from wreg
 40740  01A870  6E03               	movwf	I2C1_Stop@completion_code,c
 40741                           
 40742                           ;i2c1.c: 586: SSP1CON2bits.PEN = 1;
 40743  01A872  8496               	bsf	3990,2,c	;volatile
 40744                           
 40745                           ;i2c1.c: 589: if (p_i2c1_current->pTrFlag != (0))
 40746  01A874  0102               	movlb	2	; () banked
 40747  01A876  EE20 F003          	lfsr	2,3
 40748  01A87A  5160               	movf	_p_i2c1_current& (0+255),w,b
 40749  01A87C  26D9               	addwf	fsr2l,f,c
 40750  01A87E  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40751  01A880  22DA               	addwfc	fsr2h,f,c
 40752  01A882  50DE               	movf	postinc2,w,c
 40753  01A884  10DE               	iorwf	postinc2,w,c
 40754  01A886  B4D8               	btfsc	status,2,c
 40755  01A888  D010               	goto	i2l1822
 40756                           
 40757                           ; BSR set to: 2
 40758                           ;i2c1.c: 590: {
 40759                           ;i2c1.c: 592: *(p_i2c1_current->pTrFlag) = completion_code;
 40760  01A88A  EE20 F003          	lfsr	2,3
 40761  01A88E  5160               	movf	_p_i2c1_current& (0+255),w,b
 40762  01A890  26D9               	addwf	fsr2l,f,c
 40763  01A892  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40764  01A894  22DA               	addwfc	fsr2h,f,c
 40765  01A896  CFDE F001          	movff	postinc2,??_I2C1_Stop
 40766  01A89A  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 40767  01A89E  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 40768  01A8A2  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 40769  01A8A6  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 40770  01A8AA                     i2l1822:
 40771                           
 40772                           ; BSR set to: 2
 40773                           ;i2c1.c: 593: }
 40774                           ;i2c1.c: 596: i2c1_state = S_MASTER_IDLE;
 40775                           
 40776                           ; BSR set to: 2
 40777  01A8AA  0E00               	movlw	0
 40778  01A8AC  6F6D               	movwf	_i2c1_state& (0+255),b
 40779                           
 40780                           ; BSR set to: 2
 40781  01A8AE  0012               	return		;funcret
 40782  01A8B0                     __end_of_I2C1_Stop:
 40783                           	opt stack 0
 40784                           tosu	equ	0xFFF
 40785                           tosh	equ	0xFFE
 40786                           tosl	equ	0xFFD
 40787                           pclatu	equ	0xFFB
 40788                           pclath	equ	0xFFA
 40789                           tblptru	equ	0xFF8
 40790                           tblptrh	equ	0xFF7
 40791                           tblptrl	equ	0xFF6
 40792                           tablat	equ	0xFF5
 40793                           prodh	equ	0xFF4
 40794                           prodl	equ	0xFF3
 40795                           intcon	equ	0xFF2
 40796                           indf0	equ	0xFEF
 40797                           postinc0	equ	0xFEE
 40798                           fsr0h	equ	0xFEA
 40799                           fsr0l	equ	0xFE9
 40800                           wreg	equ	0xFE8
 40801                           indf1	equ	0xFE7
 40802                           postdec1	equ	0xFE5
 40803                           plusw1	equ	0xFE3
 40804                           fsr1h	equ	0xFE2
 40805                           fsr1l	equ	0xFE1
 40806                           bsr	equ	0xFE0
 40807                           indf2	equ	0xFDF
 40808                           postinc2	equ	0xFDE
 40809                           postdec2	equ	0xFDD
 40810                           plusw2	equ	0xFDB
 40811                           fsr2h	equ	0xFDA
 40812                           fsr2l	equ	0xFD9
 40813                           status	equ	0xFD8
 40814                           
 40815 ;; *************** function _I2C1_FunctionComplete *****************
 40816 ;; Defined at:
 40817 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 40818 ;; Parameters:    Size  Location     Type
 40819 ;;		None
 40820 ;; Auto vars:     Size  Location     Type
 40821 ;;		None
 40822 ;; Return value:  Size  Location     Type
 40823 ;;                  1    wreg      void 
 40824 ;; Registers used:
 40825 ;;		wreg, status,2, status,0
 40826 ;; Tracked objects:
 40827 ;;		On entry : 0/0
 40828 ;;		On exit  : 0/0
 40829 ;;		Unchanged: 0/0
 40830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40835 ;;Total ram usage:        0 bytes
 40836 ;; Hardware stack levels used:    1
 40837 ;; This function calls:
 40838 ;;		Nothing
 40839 ;; This function is called by:
 40840 ;;		_I2C1_ISR
 40841 ;; This function uses a non-reentrant model
 40842 ;;
 40843                           
 40844                           	psect	text125
 40845  01AFE2                     __ptext125:
 40846                           	opt stack 0
 40847  01AFE2                     _I2C1_FunctionComplete:
 40848                           	opt stack 16
 40849                           
 40850                           ;i2c1.c: 569: p_i2c1_trb_current++;
 40851                           
 40852                           ; BSR set to: 2
 40853                           ;incstack = 0
 40854  01AFE2  0E05               	movlw	5
 40855  01AFE4  0102               	movlb	2	; () banked
 40856  01AFE6  2762               	addwf	_p_i2c1_trb_current& (0+255),f,b
 40857  01AFE8  0E00               	movlw	0
 40858  01AFEA  2363               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 40859                           
 40860                           ; BSR set to: 2
 40861                           ;i2c1.c: 572: if(--i2c1_trb_count == 0)
 40862  01AFEC  2F6C               	decfsz	_i2c1_trb_count& (0+255),f,b
 40863  01AFEE  D003               	goto	i2l1817
 40864                           
 40865                           ; BSR set to: 2
 40866                           ;i2c1.c: 573: {
 40867                           ;i2c1.c: 574: i2c1_state = S_MASTER_SEND_STOP;
 40868  01AFF0  0E04               	movlw	4
 40869  01AFF2  6F6D               	movwf	_i2c1_state& (0+255),b
 40870                           
 40871                           ;i2c1.c: 575: }
 40872  01AFF4  0012               	return	
 40873  01AFF6                     i2l1817:
 40874                           
 40875                           ; BSR set to: 2
 40876                           ;i2c1.c: 576: else
 40877                           ;i2c1.c: 577: {
 40878                           ;i2c1.c: 578: i2c1_state = S_MASTER_RESTART;
 40879                           
 40880                           ; BSR set to: 2
 40881  01AFF6  0E01               	movlw	1
 40882  01AFF8  6F6D               	movwf	_i2c1_state& (0+255),b
 40883  01AFFA  0012               	return	
 40884  01AFFC                     __end_of_I2C1_FunctionComplete:
 40885                           	opt stack 0
 40886                           tosu	equ	0xFFF
 40887                           tosh	equ	0xFFE
 40888                           tosl	equ	0xFFD
 40889                           pclatu	equ	0xFFB
 40890                           pclath	equ	0xFFA
 40891                           tblptru	equ	0xFF8
 40892                           tblptrh	equ	0xFF7
 40893                           tblptrl	equ	0xFF6
 40894                           tablat	equ	0xFF5
 40895                           prodh	equ	0xFF4
 40896                           prodl	equ	0xFF3
 40897                           intcon	equ	0xFF2
 40898                           indf0	equ	0xFEF
 40899                           postinc0	equ	0xFEE
 40900                           fsr0h	equ	0xFEA
 40901                           fsr0l	equ	0xFE9
 40902                           wreg	equ	0xFE8
 40903                           indf1	equ	0xFE7
 40904                           postdec1	equ	0xFE5
 40905                           plusw1	equ	0xFE3
 40906                           fsr1h	equ	0xFE2
 40907                           fsr1l	equ	0xFE1
 40908                           bsr	equ	0xFE0
 40909                           indf2	equ	0xFDF
 40910                           postinc2	equ	0xFDE
 40911                           postdec2	equ	0xFDD
 40912                           plusw2	equ	0xFDB
 40913                           fsr2h	equ	0xFDA
 40914                           fsr2l	equ	0xFD9
 40915                           status	equ	0xFD8
 40916                           
 40917 ;; *************** function _I2C1_BusCollisionISR *****************
 40918 ;; Defined at:
 40919 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 40920 ;; Parameters:    Size  Location     Type
 40921 ;;		None
 40922 ;; Auto vars:     Size  Location     Type
 40923 ;;		None
 40924 ;; Return value:  Size  Location     Type
 40925 ;;                  1    wreg      void 
 40926 ;; Registers used:
 40927 ;;		None
 40928 ;; Tracked objects:
 40929 ;;		On entry : 0/0
 40930 ;;		On exit  : 0/0
 40931 ;;		Unchanged: 0/0
 40932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40937 ;;Total ram usage:        0 bytes
 40938 ;; Hardware stack levels used:    1
 40939 ;; This function calls:
 40940 ;;		Nothing
 40941 ;; This function is called by:
 40942 ;;		_INTERRUPT_InterruptManagerHigh
 40943 ;; This function uses a non-reentrant model
 40944 ;;
 40945                           
 40946                           	psect	text126
 40947  01B1D8                     __ptext126:
 40948                           	opt stack 0
 40949  01B1D8                     _I2C1_BusCollisionISR:
 40950                           	opt stack 17
 40951                           
 40952                           ;i2c1.c: 745: PIR3bits.BCL1IF = 0;
 40953                           
 40954                           ; BSR set to: 2
 40955                           ;incstack = 0
 40956  01B1D8  010E               	movlb	14	; () banked
 40957  01B1DA  9336               	bcf	54,1,b	;volatile
 40958                           
 40959                           ; BSR set to: 14
 40960  01B1DC  0012               	return		;funcret
 40961  01B1DE                     __end_of_I2C1_BusCollisionISR:
 40962                           	opt stack 0
 40963                           tosu	equ	0xFFF
 40964                           tosh	equ	0xFFE
 40965                           tosl	equ	0xFFD
 40966                           pclatu	equ	0xFFB
 40967                           pclath	equ	0xFFA
 40968                           tblptru	equ	0xFF8
 40969                           tblptrh	equ	0xFF7
 40970                           tblptrl	equ	0xFF6
 40971                           tablat	equ	0xFF5
 40972                           prodh	equ	0xFF4
 40973                           prodl	equ	0xFF3
 40974                           intcon	equ	0xFF2
 40975                           indf0	equ	0xFEF
 40976                           postinc0	equ	0xFEE
 40977                           fsr0h	equ	0xFEA
 40978                           fsr0l	equ	0xFE9
 40979                           wreg	equ	0xFE8
 40980                           indf1	equ	0xFE7
 40981                           postdec1	equ	0xFE5
 40982                           plusw1	equ	0xFE3
 40983                           fsr1h	equ	0xFE2
 40984                           fsr1l	equ	0xFE1
 40985                           bsr	equ	0xFE0
 40986                           indf2	equ	0xFDF
 40987                           postinc2	equ	0xFDE
 40988                           postdec2	equ	0xFDD
 40989                           plusw2	equ	0xFDB
 40990                           fsr2h	equ	0xFDA
 40991                           fsr2l	equ	0xFD9
 40992                           status	equ	0xFD8
 40993                           
 40994 ;; *************** function _HLVD_ISR *****************
 40995 ;; Defined at:
 40996 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 40997 ;; Parameters:    Size  Location     Type
 40998 ;;		None
 40999 ;; Auto vars:     Size  Location     Type
 41000 ;;		None
 41001 ;; Return value:  Size  Location     Type
 41002 ;;                  1    wreg      void 
 41003 ;; Registers used:
 41004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41005 ;; Tracked objects:
 41006 ;;		On entry : 0/0
 41007 ;;		On exit  : 0/0
 41008 ;;		Unchanged: 0/0
 41009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41014 ;;Total ram usage:        0 bytes
 41015 ;; Hardware stack levels used:    1
 41016 ;; Hardware stack levels required when called:    2
 41017 ;; This function calls:
 41018 ;;		i2_writeDoubleToEEPROM
 41019 ;; This function is called by:
 41020 ;;		_INTERRUPT_InterruptManagerHigh
 41021 ;; This function uses a non-reentrant model
 41022 ;;
 41023                           
 41024                           	psect	text127
 41025  01AAC6                     __ptext127:
 41026                           	opt stack 0
 41027  01AAC6                     _HLVD_ISR:
 41028                           	opt stack 15
 41029                           
 41030                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 41031                           
 41032                           ; BSR set to: 14
 41033                           ;incstack = 0
 41034  01AAC6  010E               	movlb	14	; () banked
 41035  01AAC8  9F35               	bcf	53,7,b	;volatile
 41036                           
 41037                           ;hlvd.c: 127: SBOREN = 0;
 41038  01AACA  9F4B               	bcf	75,7,b	;volatile
 41039                           
 41040                           ; BSR set to: 14
 41041                           ;hlvd.c: 130: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 41042  01AACC  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 41043  01AAD0  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 41044  01AAD4  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 41045  01AAD8  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 41046  01AADC  0E63               	movlw	low _Total_Energy_address
 41047  01AADE  6EF6               	movwf	tblptrl,c
 41048  01AAE0                     	if	1	;There is more than 1 active tblptr byte
 41049  01AAE0  0ECF               	movlw	high _Total_Energy_address
 41050  01AAE2  6EF7               	movwf	tblptrh,c
 41051  01AAE4                     	endif
 41052  01AAE4                     	if	1	;There are 3 active tblptr bytes
 41053  01AAE4  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 41054  01AAE6  6EF8               	movwf	tblptru,c
 41055  01AAE8                     	endif
 41056  01AAE8  0009               	tblrd		*+
 41057  01AAEA  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 41058  01AAEE  000A               	tblrd		*-
 41059  01AAF0  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 41060  01AAF4  ECD9  F0D2         	call	i2_writeDoubleToEEPROM	;wreg free
 41061                           
 41062                           ;hlvd.c: 133: SBOREN = 1;
 41063  01AAF8  010E               	movlb	14	; () banked
 41064  01AAFA  8F4B               	bsf	75,7,b	;volatile
 41065                           
 41066                           ; BSR set to: 14
 41067  01AAFC  0012               	return		;funcret
 41068  01AAFE                     __end_of_HLVD_ISR:
 41069                           	opt stack 0
 41070                           tosu	equ	0xFFF
 41071                           tosh	equ	0xFFE
 41072                           tosl	equ	0xFFD
 41073                           pclatu	equ	0xFFB
 41074                           pclath	equ	0xFFA
 41075                           tblptru	equ	0xFF8
 41076                           tblptrh	equ	0xFF7
 41077                           tblptrl	equ	0xFF6
 41078                           tablat	equ	0xFF5
 41079                           prodh	equ	0xFF4
 41080                           prodl	equ	0xFF3
 41081                           intcon	equ	0xFF2
 41082                           indf0	equ	0xFEF
 41083                           postinc0	equ	0xFEE
 41084                           fsr0h	equ	0xFEA
 41085                           fsr0l	equ	0xFE9
 41086                           wreg	equ	0xFE8
 41087                           indf1	equ	0xFE7
 41088                           postdec1	equ	0xFE5
 41089                           plusw1	equ	0xFE3
 41090                           fsr1h	equ	0xFE2
 41091                           fsr1l	equ	0xFE1
 41092                           bsr	equ	0xFE0
 41093                           indf2	equ	0xFDF
 41094                           postinc2	equ	0xFDE
 41095                           postdec2	equ	0xFDD
 41096                           plusw2	equ	0xFDB
 41097                           fsr2h	equ	0xFDA
 41098                           fsr2l	equ	0xFD9
 41099                           status	equ	0xFD8
 41100                           
 41101 ;; *************** function i2_writeDoubleToEEPROM *****************
 41102 ;; Defined at:
 41103 ;;		line 6 in file "double_to_EEPROM.c"
 41104 ;; Parameters:    Size  Location     Type
 41105 ;;  input_double    4    4[COMRAM] void 
 41106 ;;  starting_add    2    8[COMRAM] unsigned int 
 41107 ;; Auto vars:     Size  Location     Type
 41108 ;;  writeDoubleT    4   10[COMRAM] struct .
 41109 ;;  writeDoubleT    2   14[COMRAM] int 
 41110 ;; Return value:  Size  Location     Type
 41111 ;;                  1    wreg      void 
 41112 ;; Registers used:
 41113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41114 ;; Tracked objects:
 41115 ;;		On entry : 0/0
 41116 ;;		On exit  : 0/0
 41117 ;;		Unchanged: 0/0
 41118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41120 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41122 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41123 ;;Total ram usage:       12 bytes
 41124 ;; Hardware stack levels used:    1
 41125 ;; Hardware stack levels required when called:    1
 41126 ;; This function calls:
 41127 ;;		i2_DATAEE_WriteByte
 41128 ;; This function is called by:
 41129 ;;		_HLVD_ISR
 41130 ;;		_writeEnergyToEEPROMCallback
 41131 ;; This function uses a non-reentrant model
 41132 ;;
 41133                           
 41134                           	psect	text128
 41135  01A5B2                     __ptext128:
 41136                           	opt stack 0
 41137  01A5B2                     i2_writeDoubleToEEPROM:
 41138                           	opt stack 13
 41139                           
 41140                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 41141                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 41142                           
 41143                           ; BSR set to: 14
 41144                           ;incstack = 0
 41145  01A5B2  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 41146  01A5B6  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 41147  01A5BA  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 41148  01A5BE  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 41149                           
 41150                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 41151  01A5C2  0E00               	movlw	0
 41152  01A5C4  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 41153  01A5C6  0E00               	movlw	0
 41154  01A5C8  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 41155  01A5CA                     i2l10958:
 41156  01A5CA  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 41157  01A5CC  E117               	bnz	i2l1642
 41158  01A5CE  0E04               	movlw	4
 41159  01A5D0  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 41160  01A5D2  B0D8               	btfsc	status,0,c
 41161  01A5D4  0012               	return	
 41162                           
 41163                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 41164  01A5D6  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 41165  01A5D8  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 41166  01A5DA  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 41167  01A5DC  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 41168  01A5DE  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 41169  01A5E0  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 41170  01A5E2  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 41171  01A5E4  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 41172  01A5E6  6ED9               	movwf	fsr2l,c
 41173  01A5E8  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 41174  01A5EA  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 41175  01A5EC  6EDA               	movwf	fsr2h,c
 41176  01A5EE  50DF               	movf	indf2,w,c
 41177  01A5F0  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 41178  01A5F2  EC2A  F0D5         	call	i2_DATAEE_WriteByte	;wreg free
 41179  01A5F6  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 41180  01A5F8  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 41181  01A5FA  D7E7               	goto	i2l10958
 41182  01A5FC                     i2l1642:
 41183  01A5FC  0012               	return		;funcret
 41184  01A5FE                     __end_ofi2_writeDoubleToEEPROM:
 41185                           	opt stack 0
 41186                           tosu	equ	0xFFF
 41187                           tosh	equ	0xFFE
 41188                           tosl	equ	0xFFD
 41189                           pclatu	equ	0xFFB
 41190                           pclath	equ	0xFFA
 41191                           tblptru	equ	0xFF8
 41192                           tblptrh	equ	0xFF7
 41193                           tblptrl	equ	0xFF6
 41194                           tablat	equ	0xFF5
 41195                           prodh	equ	0xFF4
 41196                           prodl	equ	0xFF3
 41197                           intcon	equ	0xFF2
 41198                           indf0	equ	0xFEF
 41199                           postinc0	equ	0xFEE
 41200                           fsr0h	equ	0xFEA
 41201                           fsr0l	equ	0xFE9
 41202                           wreg	equ	0xFE8
 41203                           indf1	equ	0xFE7
 41204                           postdec1	equ	0xFE5
 41205                           plusw1	equ	0xFE3
 41206                           fsr1h	equ	0xFE2
 41207                           fsr1l	equ	0xFE1
 41208                           bsr	equ	0xFE0
 41209                           indf2	equ	0xFDF
 41210                           postinc2	equ	0xFDE
 41211                           postdec2	equ	0xFDD
 41212                           plusw2	equ	0xFDB
 41213                           fsr2h	equ	0xFDA
 41214                           fsr2l	equ	0xFD9
 41215                           status	equ	0xFD8
 41216                           
 41217 ;; *************** function i2_DATAEE_WriteByte *****************
 41218 ;; Defined at:
 41219 ;;		line 168 in file "mcc_generated_files/memory.c"
 41220 ;; Parameters:    Size  Location     Type
 41221 ;;  bAdd            2    0[COMRAM] unsigned int 
 41222 ;;  bData           1    2[COMRAM] unsigned char 
 41223 ;; Auto vars:     Size  Location     Type
 41224 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 41225 ;; Return value:  Size  Location     Type
 41226 ;;                  1    wreg      void 
 41227 ;; Registers used:
 41228 ;;		wreg, status,2, status,0
 41229 ;; Tracked objects:
 41230 ;;		On entry : 0/0
 41231 ;;		On exit  : 0/0
 41232 ;;		Unchanged: 0/0
 41233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41234 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41238 ;;Total ram usage:        4 bytes
 41239 ;; Hardware stack levels used:    1
 41240 ;; This function calls:
 41241 ;;		Nothing
 41242 ;; This function is called by:
 41243 ;;		i2_writeDoubleToEEPROM
 41244 ;; This function uses a non-reentrant model
 41245 ;;
 41246                           
 41247                           	psect	text129
 41248  01AA54                     __ptext129:
 41249                           	opt stack 0
 41250  01AA54                     i2_DATAEE_WriteByte:
 41251                           	opt stack 13
 41252                           
 41253                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 41254                           
 41255                           ;incstack = 0
 41256  01AA54  0E00               	movlw	0
 41257  01AA56  BEF2               	btfsc	intcon,7,c	;volatile
 41258  01AA58  0E01               	movlw	1
 41259  01AA5A  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 41260                           
 41261                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 41262  01AA5C  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 41263  01AA5E  0B03               	andlw	3
 41264  01AA60  6E75               	movwf	3957,c	;volatile
 41265                           
 41266                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 41267  01AA62  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 41268                           
 41269                           ;memory.c: 174: NVMDAT = bData;
 41270  01AA66  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 41271                           
 41272                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 41273  01AA6A  0E3F               	movlw	-193
 41274  01AA6C  1677               	andwf	3959,f,c	;volsfr
 41275                           
 41276                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 41277  01AA6E  8477               	bsf	3959,2,c	;volsfr
 41278                           
 41279                           ;memory.c: 177: INTCONbits.GIE = 0;
 41280  01AA70  9EF2               	bcf	intcon,7,c	;volatile
 41281                           
 41282                           ;memory.c: 178: NVMCON2 = 0x55;
 41283  01AA72  0E55               	movlw	85
 41284  01AA74  6E78               	movwf	3960,c	;volsfr
 41285                           
 41286                           ;memory.c: 179: NVMCON2 = 0xAA;
 41287  01AA76  0EAA               	movlw	170
 41288  01AA78  6E78               	movwf	3960,c	;volsfr
 41289                           
 41290                           ;memory.c: 180: NVMCON1bits.WR = 1;
 41291  01AA7A  8277               	bsf	3959,1,c	;volsfr
 41292  01AA7C                     
 41293                           ;memory.c: 183: {
 41294  01AA7C  B277               	btfsc	3959,1,c	;volsfr
 41295  01AA7E  D7FE               	goto	i2l837
 41296                           
 41297                           ;memory.c: 184: }
 41298                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 41299  01AA80  9477               	bcf	3959,2,c	;volsfr
 41300                           
 41301                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 41302  01AA82  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 41303  01AA84  D002               	bra	i2u1214_45
 41304  01AA86  9EF2               	bcf	intcon,7,c	;volatile
 41305  01AA88  D001               	bra	i2u1214_46
 41306  01AA8A                     i2u1214_45:
 41307  01AA8A  8EF2               	bsf	intcon,7,c	;volatile
 41308  01AA8C                     i2u1214_46:
 41309  01AA8C  0012               	return		;funcret
 41310  01AA8E                     __end_ofi2_DATAEE_WriteByte:
 41311                           	opt stack 0
 41312                           tosu	equ	0xFFF
 41313                           tosh	equ	0xFFE
 41314                           tosl	equ	0xFFD
 41315                           pclatu	equ	0xFFB
 41316                           pclath	equ	0xFFA
 41317                           tblptru	equ	0xFF8
 41318                           tblptrh	equ	0xFF7
 41319                           tblptrl	equ	0xFF6
 41320                           tablat	equ	0xFF5
 41321                           prodh	equ	0xFF4
 41322                           prodl	equ	0xFF3
 41323                           intcon	equ	0xFF2
 41324                           indf0	equ	0xFEF
 41325                           postinc0	equ	0xFEE
 41326                           fsr0h	equ	0xFEA
 41327                           fsr0l	equ	0xFE9
 41328                           wreg	equ	0xFE8
 41329                           indf1	equ	0xFE7
 41330                           postdec1	equ	0xFE5
 41331                           plusw1	equ	0xFE3
 41332                           fsr1h	equ	0xFE2
 41333                           fsr1l	equ	0xFE1
 41334                           bsr	equ	0xFE0
 41335                           indf2	equ	0xFDF
 41336                           postinc2	equ	0xFDE
 41337                           postdec2	equ	0xFDD
 41338                           plusw2	equ	0xFDB
 41339                           fsr2h	equ	0xFDA
 41340                           fsr2l	equ	0xFD9
 41341                           status	equ	0xFD8
 41342                           
 41343 ;; *************** function _EUSART2_Receive_ISR *****************
 41344 ;; Defined at:
 41345 ;;		line 209 in file "mcc_generated_files/eusart2.c"
 41346 ;; Parameters:    Size  Location     Type
 41347 ;;		None
 41348 ;; Auto vars:     Size  Location     Type
 41349 ;;		None
 41350 ;; Return value:  Size  Location     Type
 41351 ;;                  1    wreg      void 
 41352 ;; Registers used:
 41353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41354 ;; Tracked objects:
 41355 ;;		On entry : 0/0
 41356 ;;		On exit  : 0/0
 41357 ;;		Unchanged: 0/0
 41358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41363 ;;Total ram usage:        0 bytes
 41364 ;; Hardware stack levels used:    1
 41365 ;; Hardware stack levels required when called:    4
 41366 ;; This function calls:
 41367 ;;		i2_printf
 41368 ;; This function is called by:
 41369 ;;		_EUSART2_Initialize
 41370 ;;		_INTERRUPT_InterruptManagerHigh
 41371 ;; This function uses a non-reentrant model
 41372 ;;
 41373                           
 41374                           	psect	text130
 41375  019570                     __ptext130:
 41376                           	opt stack 0
 41377  019570                     _EUSART2_Receive_ISR:
 41378                           	opt stack 13
 41379                           
 41380                           ;eusart2.c: 212: if(1 == RC2STAbits.OERR)
 41381                           
 41382                           ;incstack = 0
 41383  019570  010E               	movlb	14	; () banked
 41384  019572  A3F5               	btfss	245,1,b	;volatile
 41385  019574  D005               	goto	i2l451
 41386                           
 41387                           ; BSR set to: 14
 41388                           ;eusart2.c: 213: {
 41389                           ;eusart2.c: 216: RC2STAbits.CREN = 0;
 41390  019576  99F5               	bcf	245,4,b	;volatile
 41391                           
 41392                           ;eusart2.c: 217: RC2STAbits.CREN = 1;
 41393  019578  89F5               	bsf	245,4,b	;volatile
 41394                           
 41395                           ; BSR set to: 14
 41396                           ;eusart2.c: 218: error_handler.USB_UART_COMM_error_flag = 1;
 41397  01957A  0E01               	movlw	1
 41398  01957C  0102               	movlb	2	; () banked
 41399  01957E  6F08               	movwf	(_error_handler+8)& (0+255),b
 41400  019580                     i2l451:
 41401                           
 41402                           ;eusart2.c: 219: }
 41403                           ;eusart2.c: 222: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 41404                           
 41405                           ; BSR set to: 2
 41406  019580  0100               	movlb	0	; () banked
 41407  019582  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41408  019584  0D01               	mullw	1
 41409  019586  0E80               	movlw	low _eusart2RxBuffer
 41410  019588  24F3               	addwf	prodl,w,c
 41411  01958A  6ED9               	movwf	fsr2l,c
 41412  01958C  0E03               	movlw	high _eusart2RxBuffer
 41413  01958E  20F4               	addwfc	prodh,w,c
 41414  019590  6EDA               	movwf	fsr2h,c
 41415  019592  CEF1 FFDF          	movff	3825,indf2	;volatile
 41416                           
 41417                           ; BSR set to: 0
 41418  019596  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 41419                           
 41420                           ; BSR set to: 0
 41421                           ;eusart2.c: 223: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 41422  019598  0E3F               	movlw	63
 41423  01959A  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 41424  01959C  D002               	goto	i2l452
 41425                           
 41426                           ; BSR set to: 0
 41427                           ;eusart2.c: 224: {
 41428                           ;eusart2.c: 225: eusart2RxHead = 0;
 41429  01959E  0E00               	movlw	0
 41430  0195A0  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 41431  0195A2                     i2l452:
 41432                           
 41433                           ; BSR set to: 0
 41434                           ;eusart2.c: 226: }
 41435                           ;eusart2.c: 227: eusart2RxCount++;
 41436                           
 41437                           ; BSR set to: 0
 41438  0195A2  0102               	movlb	2	; () banked
 41439  0195A4  2B72               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 41440                           
 41441                           ; BSR set to: 2
 41442                           ;eusart2.c: 233: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 41443  0195A6  0E0A               	movlw	10
 41444  0195A8  010E               	movlb	14	; () banked
 41445  0195AA  19F1               	xorwf	241,w,b	;volatile
 41446  0195AC  B4D8               	btfsc	status,2,c
 41447  0195AE  D004               	goto	i2u3415_40
 41448                           
 41449                           ; BSR set to: 14
 41450  0195B0  0E0D               	movlw	13
 41451  0195B2  19F1               	xorwf	241,w,b	;volatile
 41452  0195B4  A4D8               	btfss	status,2,c
 41453  0195B6  D006               	goto	i2l453
 41454  0195B8                     i2u3415_40:
 41455                           
 41456                           ; BSR set to: 14
 41457                           ;eusart2.c: 235: eusart2RxStringReady = 1;
 41458  0195B8  0100               	movlb	0	; () banked
 41459  0195BA  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 41460                           
 41461                           ; BSR set to: 0
 41462                           ;eusart2.c: 238: RC2REG = 0;
 41463  0195BC  0E00               	movlw	0
 41464  0195BE  010E               	movlb	14	; () banked
 41465  0195C0  6FF1               	movwf	241,b	;volatile
 41466                           
 41467                           ;eusart2.c: 240: }
 41468  0195C2  D002               	goto	i2l456
 41469  0195C4                     i2l453:
 41470                           
 41471                           ; BSR set to: 14
 41472                           ;eusart2.c: 242: else {
 41473                           ;eusart2.c: 244: eusart2RxStringReady = 0;
 41474  0195C4  0100               	movlb	0	; () banked
 41475  0195C6  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 41476  0195C8                     i2l456:
 41477                           
 41478                           ;eusart2.c: 246: }
 41479                           ;eusart2.c: 249: if((RC2REG == (int) '\b')) {
 41480                           
 41481                           ; BSR set to: 0
 41482  0195C8  0E08               	movlw	8
 41483  0195CA  010E               	movlb	14	; () banked
 41484  0195CC  19F1               	xorwf	241,w,b	;volatile
 41485  0195CE  A4D8               	btfss	status,2,c
 41486  0195D0  0012               	return	
 41487                           
 41488                           ; BSR set to: 14
 41489                           ;eusart2.c: 251: eusart2RxBuffer[eusart2RxHead] = '\0';
 41490  0195D2  0100               	movlb	0	; () banked
 41491  0195D4  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41492  0195D6  0D01               	mullw	1
 41493  0195D8  0E80               	movlw	low _eusart2RxBuffer
 41494  0195DA  24F3               	addwf	prodl,w,c
 41495  0195DC  6ED9               	movwf	fsr2l,c
 41496  0195DE  0E03               	movlw	high _eusart2RxBuffer
 41497  0195E0  20F4               	addwfc	prodh,w,c
 41498  0195E2  6EDA               	movwf	fsr2h,c
 41499  0195E4  0E00               	movlw	0
 41500  0195E6  6EDF               	movwf	indf2,c
 41501                           
 41502                           ; BSR set to: 0
 41503                           ;eusart2.c: 252: eusart2RxHead--;
 41504  0195E8  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 41505                           
 41506                           ; BSR set to: 0
 41507                           ;eusart2.c: 255: printf("\033[K");
 41508  0195EA  0EC8               	movlw	low STR_1
 41509  0195EC  6FB2               	movwf	i2printf@f& (0+255),b
 41510  0195EE  0EFF               	movlw	high STR_1
 41511  0195F0  6FB3               	movwf	(i2printf@f+1)& (0+255),b
 41512  0195F2  ECD1  F0D4         	call	i2_printf	;wreg free
 41513                           
 41514                           ;eusart2.c: 257: if(eusart2RxHead != eusart2RxTail) {
 41515  0195F6  0101               	movlb	1	; () banked
 41516  0195F8  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 41517  0195FA  0100               	movlb	0	; () banked
 41518  0195FC  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 41519  0195FE  B4D8               	btfsc	status,2,c
 41520  019600  D00B               	goto	i2l458
 41521                           
 41522                           ; BSR set to: 0
 41523                           ;eusart2.c: 259: eusart2RxBuffer[eusart2RxHead] = '\0';
 41524  019602  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41525  019604  0D01               	mullw	1
 41526  019606  0E80               	movlw	low _eusart2RxBuffer
 41527  019608  24F3               	addwf	prodl,w,c
 41528  01960A  6ED9               	movwf	fsr2l,c
 41529  01960C  0E03               	movlw	high _eusart2RxBuffer
 41530  01960E  20F4               	addwfc	prodh,w,c
 41531  019610  6EDA               	movwf	fsr2h,c
 41532  019612  0E00               	movlw	0
 41533  019614  6EDF               	movwf	indf2,c
 41534                           
 41535                           ; BSR set to: 0
 41536                           ;eusart2.c: 260: eusart2RxHead--;
 41537  019616  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 41538  019618                     i2l458:
 41539                           
 41540                           ; BSR set to: 0
 41541                           ;eusart2.c: 262: }
 41542                           ;eusart2.c: 264: RC2REG = 0;
 41543                           
 41544                           ; BSR set to: 0
 41545  019618  0E00               	movlw	0
 41546  01961A  010E               	movlb	14	; () banked
 41547  01961C  6FF1               	movwf	241,b	;volatile
 41548  01961E  0012               	return	
 41549  019620                     __end_of_EUSART2_Receive_ISR:
 41550                           	opt stack 0
 41551                           tosu	equ	0xFFF
 41552                           tosh	equ	0xFFE
 41553                           tosl	equ	0xFFD
 41554                           pclatu	equ	0xFFB
 41555                           pclath	equ	0xFFA
 41556                           tblptru	equ	0xFF8
 41557                           tblptrh	equ	0xFF7
 41558                           tblptrl	equ	0xFF6
 41559                           tablat	equ	0xFF5
 41560                           prodh	equ	0xFF4
 41561                           prodl	equ	0xFF3
 41562                           intcon	equ	0xFF2
 41563                           indf0	equ	0xFEF
 41564                           postinc0	equ	0xFEE
 41565                           fsr0h	equ	0xFEA
 41566                           fsr0l	equ	0xFE9
 41567                           wreg	equ	0xFE8
 41568                           indf1	equ	0xFE7
 41569                           postdec1	equ	0xFE5
 41570                           plusw1	equ	0xFE3
 41571                           fsr1h	equ	0xFE2
 41572                           fsr1l	equ	0xFE1
 41573                           bsr	equ	0xFE0
 41574                           indf2	equ	0xFDF
 41575                           postinc2	equ	0xFDE
 41576                           postdec2	equ	0xFDD
 41577                           plusw2	equ	0xFDB
 41578                           fsr2h	equ	0xFDA
 41579                           fsr2l	equ	0xFD9
 41580                           status	equ	0xFD8
 41581                           
 41582 ;; *************** function i2_printf *****************
 41583 ;; Defined at:
 41584 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 41585 ;; Parameters:    Size  Location     Type
 41586 ;;  f               2   82[BANK0 ] PTR const unsigned char 
 41587 ;;		 -> STR_175(13), STR_174(31), STR_173(26), STR_172(28), 
 41588 ;;		 -> STR_171(426), STR_169(30), STR_168(46), STR_167(39), 
 41589 ;;		 -> STR_166(62), STR_165(55), STR_164(470), STR_162(3086), 
 41590 ;;		 -> STR_160(492), STR_158(748), STR_156(720), STR_154(974), 
 41591 ;;		 -> STR_152(54), STR_150(54), STR_148(45), STR_146(51), 
 41592 ;;		 -> STR_144(52), STR_142(46), STR_140(51), STR_138(53), 
 41593 ;;		 -> STR_136(58), STR_134(71), STR_133(63), STR_132(37), 
 41594 ;;		 -> STR_131(46), STR_130(102), STR_129(86), STR_127(25), 
 41595 ;;		 -> STR_125(42), STR_124(53), STR_123(31), STR_121(29), 
 41596 ;;		 -> STR_120(28), STR_118(42), STR_116(41), STR_114(34), 
 41597 ;;		 -> STR_112(53), STR_111(52), STR_110(105), STR_109(105), 
 41598 ;;		 -> STR_107(59), STR_105(73), STR_103(56), STR_101(34), 
 41599 ;;		 -> STR_99(34), STR_97(32), STR_95(37), STR_93(58), 
 41600 ;;		 -> STR_91(36), STR_89(36), STR_87(37), STR_85(34), 
 41601 ;;		 -> STR_83(38), STR_82(60), STR_81(31), STR_80(23), 
 41602 ;;		 -> STR_79(65), STR_77(23), STR_75(27), STR_74(48), 
 41603 ;;		 -> STR_73(15), STR_72(13), STR_71(12), STR_70(11), 
 41604 ;;		 -> STR_69(10), STR_68(11), STR_67(24), STR_66(46), 
 41605 ;;		 -> STR_65(25), STR_63(54), STR_62(64), STR_60(59), 
 41606 ;;		 -> STR_58(85), STR_56(47), STR_55(17), STR_52(52), 
 41607 ;;		 -> STR_50(4), STR_49(5), STR_47(4), STR_46(5), 
 41608 ;;		 -> STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), STR_13(4), 
 41609 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(3), 
 41610 ;;		 -> STR_8(372), STR_7(4), STR_6(5), STR_1(4), 
 41611 ;; Auto vars:     Size  Location     Type
 41612 ;;  printf          5   86[BANK0 ] struct __prbuf
 41613 ;;  printf          2   84[BANK0 ] PTR void [1]
 41614 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 41615 ;; Return value:  Size  Location     Type
 41616 ;;                  2   82[BANK0 ] int 
 41617 ;; Registers used:
 41618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41619 ;; Tracked objects:
 41620 ;;		On entry : 0/0
 41621 ;;		On exit  : 0/0
 41622 ;;		Unchanged: 0/0
 41623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41625 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41627 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41628 ;;Total ram usage:        9 bytes
 41629 ;; Hardware stack levels used:    1
 41630 ;; Hardware stack levels required when called:    3
 41631 ;; This function calls:
 41632 ;;		i2__doprnt
 41633 ;; This function is called by:
 41634 ;;		_EUSART2_Receive_ISR
 41635 ;; This function uses a non-reentrant model
 41636 ;;
 41637                           
 41638                           	psect	text131
 41639  01A9A2                     __ptext131:
 41640                           	opt stack 0
 41641  01A9A2                     i2_printf:
 41642                           	opt stack 13
 41643                           
 41644                           ; BSR set to: 14
 41645                           ;incstack = 0
 41646  01A9A2  0E00               	movlw	0
 41647  01A9A4  0100               	movlb	0	; () banked
 41648  01A9A6  6FB6               	movwf	i2printf@pb& (0+255),b
 41649  01A9A8  0E00               	movlw	0
 41650  01A9AA  6FB7               	movwf	(i2printf@pb+1)& (0+255),b
 41651  01A9AC  0EB2               	movlw	low i2_putch
 41652  01A9AE  6FB8               	movwf	(i2printf@pb+2)& (0+255),b
 41653  01A9B0  0EB1               	movlw	high i2_putch
 41654  01A9B2  6FB9               	movwf	(i2printf@pb+3)& (0+255),b
 41655  01A9B4  0E01               	movlw	low (i2_putch shr (0+16))
 41656  01A9B6  6FBA               	movwf	(i2printf@pb+4)& (0+255),b
 41657  01A9B8  0EB4               	movlw	low (?i2_printf+2)
 41658  01A9BA  6FB4               	movwf	i2printf@ap& (0+255),b
 41659  01A9BC  0E00               	movlw	high (?i2_printf+2)
 41660  01A9BE  6FB5               	movwf	(i2printf@ap+1)& (0+255),b
 41661                           
 41662                           ; BSR set to: 0
 41663                           ;	Return value of i2_printf is never used
 41664  01A9C0  0EB6               	movlw	low i2printf@pb
 41665  01A9C2  6F88               	movwf	i2__doprnt@pb& (0+255),b
 41666  01A9C4  0E00               	movlw	high i2printf@pb
 41667  01A9C6  6F89               	movwf	(i2__doprnt@pb+1)& (0+255),b
 41668  01A9C8  C0B2  F08A         	movff	i2printf@f,i2__doprnt@f
 41669  01A9CC  C0B3  F08B         	movff	i2printf@f+1,i2__doprnt@f+1
 41670  01A9D0  0EB4               	movlw	low i2printf@ap
 41671  01A9D2  6F8C               	movwf	i2__doprnt@ap& (0+255),b
 41672  01A9D4  0E00               	movlw	high i2printf@ap
 41673  01A9D6  6F8D               	movwf	(i2__doprnt@ap+1)& (0+255),b
 41674  01A9D8  ECBA  F095         	call	i2__doprnt	;wreg free
 41675  01A9DC  0012               	return	
 41676  01A9DE                     __end_ofi2_printf:
 41677                           	opt stack 0
 41678                           tosu	equ	0xFFF
 41679                           tosh	equ	0xFFE
 41680                           tosl	equ	0xFFD
 41681                           pclatu	equ	0xFFB
 41682                           pclath	equ	0xFFA
 41683                           tblptru	equ	0xFF8
 41684                           tblptrh	equ	0xFF7
 41685                           tblptrl	equ	0xFF6
 41686                           tablat	equ	0xFF5
 41687                           prodh	equ	0xFF4
 41688                           prodl	equ	0xFF3
 41689                           intcon	equ	0xFF2
 41690                           indf0	equ	0xFEF
 41691                           postinc0	equ	0xFEE
 41692                           fsr0h	equ	0xFEA
 41693                           fsr0l	equ	0xFE9
 41694                           wreg	equ	0xFE8
 41695                           indf1	equ	0xFE7
 41696                           postdec1	equ	0xFE5
 41697                           plusw1	equ	0xFE3
 41698                           fsr1h	equ	0xFE2
 41699                           fsr1l	equ	0xFE1
 41700                           bsr	equ	0xFE0
 41701                           indf2	equ	0xFDF
 41702                           postinc2	equ	0xFDE
 41703                           postdec2	equ	0xFDD
 41704                           plusw2	equ	0xFDB
 41705                           fsr2h	equ	0xFDA
 41706                           fsr2l	equ	0xFD9
 41707                           status	equ	0xFD8
 41708                           
 41709 ;; *************** function i2__doprnt *****************
 41710 ;; Defined at:
 41711 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 41712 ;; Parameters:    Size  Location     Type
 41713 ;;  pb              2   40[BANK0 ] PTR struct __prbuf
 41714 ;;		 -> sprintf@pb(5), printf@pb(5), 
 41715 ;;  f               2   42[BANK0 ] PTR const unsigned char 
 41716 ;;		 -> STR_193(11), STR_175(13), STR_174(31), STR_173(26), 
 41717 ;;		 -> STR_172(28), STR_171(426), STR_169(30), STR_168(46), 
 41718 ;;		 -> STR_167(39), STR_166(62), STR_165(55), STR_164(470), 
 41719 ;;		 -> STR_162(3086), STR_160(492), STR_158(748), STR_156(720), 
 41720 ;;		 -> STR_154(974), STR_152(54), STR_150(54), STR_148(45), 
 41721 ;;		 -> STR_146(51), STR_144(52), STR_142(46), STR_140(51), 
 41722 ;;		 -> STR_138(53), STR_136(58), STR_134(71), STR_133(63), 
 41723 ;;		 -> STR_132(37), STR_131(46), STR_130(102), STR_129(86), 
 41724 ;;		 -> STR_127(25), STR_125(42), STR_124(53), STR_123(31), 
 41725 ;;		 -> STR_121(29), STR_120(28), STR_118(42), STR_116(41), 
 41726 ;;		 -> STR_114(34), STR_112(53), STR_111(52), STR_110(105), 
 41727 ;;		 -> STR_109(105), STR_107(59), STR_105(73), STR_103(56), 
 41728 ;;		 -> STR_101(34), STR_99(34), STR_97(32), STR_95(37), 
 41729 ;;		 -> STR_93(58), STR_91(36), STR_89(36), STR_87(37), 
 41730 ;;		 -> STR_85(34), STR_83(38), STR_82(60), STR_81(31), 
 41731 ;;		 -> STR_80(23), STR_79(65), STR_77(23), STR_75(27), 
 41732 ;;		 -> STR_74(48), STR_73(15), STR_72(13), STR_71(12), 
 41733 ;;		 -> STR_70(11), STR_69(10), STR_68(11), STR_67(24), 
 41734 ;;		 -> STR_66(46), STR_65(25), STR_63(54), STR_62(64), 
 41735 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 41736 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 41737 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 41738 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 41739 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 41740 ;;		 -> STR_1(4), 
 41741 ;;  ap              2   44[BANK0 ] PTR PTR void 
 41742 ;;		 -> sprintf@ap(2), printf@ap(2), 
 41743 ;; Auto vars:     Size  Location     Type
 41744 ;;  _doprnt         4   71[BANK0 ] unsigned long 
 41745 ;;  _doprnt         4   67[BANK0 ] unsigned long 
 41746 ;;  _doprnt         4   63[BANK0 ] struct .
 41747 ;;  _doprnt         2   79[BANK0 ] int 
 41748 ;;  _doprnt         2   77[BANK0 ] unsigned short 
 41749 ;;  _doprnt         2   75[BANK0 ] int 
 41750 ;;  _doprnt         2   61[BANK0 ] int 
 41751 ;;  _doprnt         2   59[BANK0 ] unsigned int 
 41752 ;;  _doprnt         2   57[BANK0 ] PTR const unsigned char 
 41753 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_191(7), 
 41754 ;;		 -> _doprnt@c(1), STR_188(16), STR_187(22), STR_186(21), 
 41755 ;;		 -> STR_185(27), STR_184(41), STR_183(32), STR_182(19), 
 41756 ;;		 -> STR_181(16), STR_180(15), STR_179(16), STR_178(10), 
 41757 ;;		 -> STR_177(13), STR_176(12), NULL(0), TRIAC_Firing_Angle(4), 
 41758 ;;  _doprnt         1   81[BANK0 ] char 
 41759 ;;  _doprnt         1   56[BANK0 ] unsigned char 
 41760 ;;  _doprnt         1    0        unsigned char 
 41761 ;; Return value:  Size  Location     Type
 41762 ;;                  2   40[BANK0 ] int 
 41763 ;; Registers used:
 41764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41765 ;; Tracked objects:
 41766 ;;		On entry : 0/0
 41767 ;;		On exit  : 0/0
 41768 ;;		Unchanged: 0/0
 41769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41770 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41771 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41772 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41773 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41774 ;;Total ram usage:       42 bytes
 41775 ;; Hardware stack levels used:    1
 41776 ;; Hardware stack levels required when called:    2
 41777 ;; This function calls:
 41778 ;;		Absolute function
 41779 ;;		i2___awdiv
 41780 ;;		i2___fladd
 41781 ;;		i2___flge
 41782 ;;		i2___flmul
 41783 ;;		i2___flneg
 41784 ;;		i2___flsub
 41785 ;;		i2___fltol
 41786 ;;		i2___lldiv
 41787 ;;		i2___llmod
 41788 ;;		i2___wmul
 41789 ;;		i2___xxtofl
 41790 ;;		i2__div_to_l_
 41791 ;;		i2__tdiv_to_l_
 41792 ;;		i2_fround
 41793 ;;		i2_isdigit
 41794 ;;		i2_putch
 41795 ;;		i2_scale
 41796 ;; This function is called by:
 41797 ;;		i2_printf
 41798 ;; This function uses a non-reentrant model
 41799 ;;
 41800                           
 41801                           	psect	text132
 41802  012B74                     __ptext132:
 41803                           	opt stack 0
 41804  012B74                     i2__doprnt:
 41805                           	opt stack 13
 41806                           
 41807                           ;doprnt.c: 499: signed char c;
 41808                           ;doprnt.c: 501: int width;
 41809                           ;doprnt.c: 504: int prec;
 41810                           ;doprnt.c: 508: unsigned short flag;
 41811                           ;doprnt.c: 515: char d;
 41812                           ;doprnt.c: 516: double fval;
 41813                           ;doprnt.c: 517: int exp;
 41814                           ;doprnt.c: 523: union {
 41815                           ;doprnt.c: 524: unsigned long vd;
 41816                           ;doprnt.c: 525: double integ;
 41817                           ;doprnt.c: 526: } tmpval;
 41818                           ;doprnt.c: 528: unsigned long val;
 41819                           ;doprnt.c: 529: unsigned len;
 41820                           ;doprnt.c: 530: const char * cp;
 41821                           ;doprnt.c: 536: while(c = *f++) {
 41822                           
 41823                           ;incstack = 0
 41824  012B74  EF19  F0A0         	goto	i2u3328_40
 41825  012B78                     
 41826                           ;doprnt.c: 538: if(c != '%')
 41827  012B78  0E25               	movlw	37
 41828  012B7A  0100               	movlb	0	; () banked
 41829  012B7C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 41830  012B7E  B4D8               	btfsc	status,2,c
 41831  012B80  D036               	goto	i2l1936
 41832                           
 41833                           ; BSR set to: 0
 41834                           ;doprnt.c: 540: {
 41835                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 41836  012B82  EE20 F002          	lfsr	2,2
 41837  012B86  5188               	movf	i2__doprnt@pb& (0+255),w,b
 41838  012B88  26D9               	addwf	fsr2l,f,c
 41839  012B8A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41840  012B8C  22DA               	addwfc	fsr2h,f,c
 41841  012B8E  50DE               	movf	postinc2,w,c
 41842  012B90  10DE               	iorwf	postinc2,w,c
 41843  012B92  10DE               	iorwf	postinc2,w,c
 41844  012B94  B4D8               	btfsc	status,2,c
 41845  012B96  D014               	goto	i2l1937
 41846                           
 41847                           ; BSR set to: 0
 41848  012B98  EE20 F002          	lfsr	2,2
 41849  012B9C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 41850  012B9E  26D9               	addwf	fsr2l,f,c
 41851  012BA0  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 41852  012BA2  22DA               	addwfc	fsr2h,f,c
 41853  012BA4  D802               	call	i2u3218_48
 41854  012BA6  EF19  F0A0         	goto	i2u3328_40
 41855  012BAA                     i2u3218_48:
 41856  012BAA  0005               	push	
 41857  012BAC  6EFA               	movwf	pclath,c
 41858  012BAE  50DE               	movf	postinc2,w,c
 41859  012BB0  6EFD               	movwf	tosl,c
 41860  012BB2  50DE               	movf	postinc2,w,c
 41861  012BB4  6EFE               	movwf	tosh,c
 41862  012BB6  50DE               	movf	postinc2,w,c
 41863  012BB8  6EFF               	movwf	tosu,c
 41864  012BBA  50FA               	movf	pclath,w,c
 41865  012BBC  51B1               	movf	i2__doprnt@c& (0+255),w,b
 41866  012BBE  0012               	return		;indir
 41867  012BC0                     i2l1937:
 41868  012BC0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 41869  012BC4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41870  012BC8  CFDE F08E          	movff	postinc2,??i2__doprnt
 41871  012BCC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 41872  012BD0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 41873  012BD4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 41874  012BD8  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 41875  012BDC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 41876  012BE0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 41877  012BE4  2ADE               	incf	postinc2,f,c
 41878  012BE6  0E00               	movlw	0
 41879  012BE8  22DD               	addwfc	postdec2,f,c
 41880                           
 41881                           ;doprnt.c: 542: continue;
 41882  012BEA  EF19  F0A0         	goto	i2u3328_40
 41883  012BEE                     i2l1936:
 41884                           
 41885                           ;doprnt.c: 543: }
 41886                           ;doprnt.c: 546: width = 0;
 41887  012BEE  0E00               	movlw	0
 41888  012BF0  0100               	movlb	0	; () banked
 41889  012BF2  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 41890  012BF4  0E00               	movlw	0
 41891  012BF6  6FAB               	movwf	i2__doprnt@width& (0+255),b
 41892                           
 41893                           ;doprnt.c: 548: flag = 0;
 41894  012BF8  0E00               	movlw	0
 41895  012BFA  6FAE               	movwf	(i2__doprnt@flag+1)& (0+255),b
 41896  012BFC  0E00               	movlw	0
 41897  012BFE  6FAD               	movwf	i2__doprnt@flag& (0+255),b
 41898                           
 41899                           ; BSR set to: 0
 41900                           ;doprnt.c: 551: switch(*f) {
 41901                           
 41902                           ;doprnt.c: 550: for(;;) {
 41903  012C00  D004               	goto	i2l1940
 41904  012C02                     
 41905                           ;doprnt.c: 580: flag |= 0x04;
 41906                           
 41907                           ; BSR set to: 0
 41908  012C02  0100               	movlb	0	; () banked
 41909  012C04  85AD               	bsf	i2__doprnt@flag& (0+255),2,b
 41910                           
 41911                           ;doprnt.c: 581: f++;
 41912  012C06  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 41913  012C08  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 41914  012C0A                     i2l1940:
 41915                           
 41916                           ; BSR set to: 0
 41917  012C0A  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41918  012C0E  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41919  012C12  0E00               	movlw	low (__mediumconst shr (0+16))
 41920  012C14  6EF8               	movwf	tblptru,c
 41921  012C16  0E0D               	movlw	(high __ramtop+-1)
 41922  012C18  64F7               	cpfsgt	tblptrh,c
 41923  012C1A  D003               	bra	i2u3219_47
 41924  012C1C  0008               	tblrd		*
 41925  012C1E  50F5               	movf	tablat,w,c
 41926  012C20  D005               	bra	i2u3219_40
 41927  012C22                     i2u3219_47:
 41928  012C22  CFF6 FFE9          	movff	tblptrl,fsr0l
 41929  012C26  CFF7 FFEA          	movff	tblptrh,fsr0h
 41930  012C2A  50EF               	movf	indf0,w,c
 41931  012C2C                     i2u3219_40:
 41932                           
 41933                           ; Switch size 1, requested type "space"
 41934                           ; Number of cases is 1, Range of values is 48 to 48
 41935                           ; switch strategies available:
 41936                           ; Name         Instructions Cycles
 41937                           ; simple_byte            4     3 (average)
 41938                           ;	Chosen strategy is simple_byte
 41939  012C2C  0A30               	xorlw	48	; case 48
 41940  012C2E  B4D8               	btfsc	status,2,c
 41941  012C30  D7E8               	goto	i2l1941
 41942                           
 41943                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 41944                           
 41945                           ;doprnt.c: 586: }
 41946                           
 41947                           ;doprnt.c: 585: break;
 41948  012C32  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41949  012C36  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41950  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
 41951  012C3C  6EF8               	movwf	tblptru,c
 41952  012C3E  0E0D               	movlw	(high __ramtop+-1)
 41953  012C40  64F7               	cpfsgt	tblptrh,c
 41954  012C42  D003               	bra	i2u3220_47
 41955  012C44  0008               	tblrd		*
 41956  012C46  50F5               	movf	tablat,w,c
 41957  012C48  D005               	bra	i2u3220_40
 41958  012C4A                     i2u3220_47:
 41959  012C4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 41960  012C4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 41961  012C52  50EF               	movf	indf0,w,c
 41962  012C54                     i2u3220_40:
 41963  012C54  EC90  F0D7         	call	i2_isdigit
 41964  012C58  A0D8               	btfss	status,0,c
 41965  012C5A  D04B               	goto	i2u3224_40
 41966                           
 41967                           ;doprnt.c: 598: width = 0;
 41968  012C5C  0E00               	movlw	0
 41969  012C5E  0100               	movlb	0	; () banked
 41970  012C60  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 41971  012C62  0E00               	movlw	0
 41972  012C64  6FAB               	movwf	i2__doprnt@width& (0+255),b
 41973  012C66                     
 41974                           ;doprnt.c: 600: width *= 10;
 41975                           
 41976                           ; BSR set to: 0
 41977  012C66  C0AB  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 41978  012C6A  C0AC  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 41979  012C6E  0E00               	movlw	0
 41980  012C70  6E04               	movwf	i2___wmul@multiplicand+1,c
 41981  012C72  0E0A               	movlw	10
 41982  012C74  6E03               	movwf	i2___wmul@multiplicand,c
 41983  012C76  EC05  F0D7         	call	i2___wmul	;wreg free
 41984  012C7A  C001  F0AB         	movff	?i2___wmul,i2__doprnt@width
 41985  012C7E  C002  F0AC         	movff	?i2___wmul+1,i2__doprnt@width+1
 41986                           
 41987                           ;doprnt.c: 601: width += *f++ - '0';
 41988  012C82  0ED0               	movlw	208
 41989  012C84  0100               	movlb	0	; () banked
 41990  012C86  6F8E               	movwf	??i2__doprnt& (0+255),b
 41991  012C88  0EFF               	movlw	255
 41992  012C8A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 41993  012C8C  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 41994  012C90  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 41995  012C94  0E00               	movlw	low (__mediumconst shr (0+16))
 41996  012C96  6EF8               	movwf	tblptru,c
 41997  012C98  0E0D               	movlw	(high __ramtop+-1)
 41998  012C9A  64F7               	cpfsgt	tblptrh,c
 41999  012C9C  D003               	bra	i2u3222_47
 42000  012C9E  0008               	tblrd		*
 42001  012CA0  50F5               	movf	tablat,w,c
 42002  012CA2  D005               	bra	i2u3222_40
 42003  012CA4                     i2u3222_47:
 42004  012CA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 42005  012CA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 42006  012CAC  50EF               	movf	indf0,w,c
 42007  012CAE                     i2u3222_40:
 42008  012CAE  0100               	movlb	0	; () banked
 42009  012CB0  6F90               	movwf	(??i2__doprnt+2)& (0+255),b
 42010  012CB2  6B91               	clrf	(??i2__doprnt+3)& (0+255),b
 42011  012CB4  518E               	movf	??i2__doprnt& (0+255),w,b
 42012  012CB6  2790               	addwf	(??i2__doprnt+2)& (0+255),f,b
 42013  012CB8  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 42014  012CBA  2391               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 42015  012CBC  5190               	movf	(??i2__doprnt+2)& (0+255),w,b
 42016  012CBE  27AB               	addwf	i2__doprnt@width& (0+255),f,b
 42017  012CC0  5191               	movf	(??i2__doprnt+3)& (0+255),w,b
 42018  012CC2  23AC               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 42019                           
 42020                           ; BSR set to: 0
 42021  012CC4  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42022  012CC6  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42023                           
 42024                           ; BSR set to: 0
 42025                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 42026  012CC8  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42027  012CCC  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42028  012CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 42029  012CD2  6EF8               	movwf	tblptru,c
 42030  012CD4  0E0D               	movlw	(high __ramtop+-1)
 42031  012CD6  64F7               	cpfsgt	tblptrh,c
 42032  012CD8  D003               	bra	i2u3223_47
 42033  012CDA  0008               	tblrd		*
 42034  012CDC  50F5               	movf	tablat,w,c
 42035  012CDE  D005               	bra	i2u3223_40
 42036  012CE0                     i2u3223_47:
 42037  012CE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 42038  012CE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 42039  012CE8  50EF               	movf	indf0,w,c
 42040  012CEA                     i2u3223_40:
 42041  012CEA  EC90  F0D7         	call	i2_isdigit
 42042  012CEE  B0D8               	btfsc	status,0,c
 42043  012CF0  D7BA               	goto	i2l1946
 42044  012CF2                     i2u3224_40:
 42045                           
 42046                           ;doprnt.c: 608: }
 42047                           ;doprnt.c: 611: if(*f == '.') {
 42048  012CF2  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42049  012CF6  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42050  012CFA  0E00               	movlw	low (__mediumconst shr (0+16))
 42051  012CFC  6EF8               	movwf	tblptru,c
 42052  012CFE  0E0D               	movlw	(high __ramtop+-1)
 42053  012D00  64F7               	cpfsgt	tblptrh,c
 42054  012D02  D003               	bra	i2u3225_47
 42055  012D04  0008               	tblrd		*
 42056  012D06  50F5               	movf	tablat,w,c
 42057  012D08  D005               	bra	i2u3225_40
 42058  012D0A                     i2u3225_47:
 42059  012D0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 42060  012D0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 42061  012D12  50EF               	movf	indf0,w,c
 42062  012D14                     i2u3225_40:
 42063  012D14  0A2E               	xorlw	46
 42064  012D16  A4D8               	btfss	status,2,c
 42065  012D18  D048               	goto	i2l1948
 42066                           
 42067                           ;doprnt.c: 612: flag |= 0x4000;
 42068  012D1A  0100               	movlb	0	; () banked
 42069  012D1C  8DAE               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 42070                           
 42071                           ;doprnt.c: 613: f++;
 42072  012D1E  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42073  012D20  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42074                           
 42075                           ; BSR set to: 0
 42076                           ;doprnt.c: 620: {
 42077                           ;doprnt.c: 621: prec = 0;
 42078  012D22  0E00               	movlw	0
 42079  012D24  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42080  012D26  0E00               	movlw	0
 42081  012D28  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42082                           
 42083                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 42084  012D2A  D029               	goto	i2l1949
 42085  012D2C                     
 42086                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 42087                           
 42088                           ; BSR set to: 0
 42089  012D2C  C0AF  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 42090  012D30  C0B0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 42091  012D34  0E00               	movlw	0
 42092  012D36  6E04               	movwf	i2___wmul@multiplicand+1,c
 42093  012D38  0E0A               	movlw	10
 42094  012D3A  6E03               	movwf	i2___wmul@multiplicand,c
 42095  012D3C  EC05  F0D7         	call	i2___wmul	;wreg free
 42096  012D40  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42097  012D44  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42098  012D48  0E00               	movlw	low (__mediumconst shr (0+16))
 42099  012D4A  6EF8               	movwf	tblptru,c
 42100  012D4C  0E0D               	movlw	(high __ramtop+-1)
 42101  012D4E  64F7               	cpfsgt	tblptrh,c
 42102  012D50  D003               	bra	i2u3227_47
 42103  012D52  0008               	tblrd		*
 42104  012D54  50F5               	movf	tablat,w,c
 42105  012D56  D005               	bra	i2u3227_40
 42106  012D58                     i2u3227_47:
 42107  012D58  CFF6 FFE9          	movff	tblptrl,fsr0l
 42108  012D5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 42109  012D60  50EF               	movf	indf0,w,c
 42110  012D62                     i2u3227_40:
 42111  012D62  0100               	movlb	0	; () banked
 42112  012D64  6F8E               	movwf	??i2__doprnt& (0+255),b
 42113  012D66  518E               	movf	??i2__doprnt& (0+255),w,b
 42114  012D68  2601               	addwf	?i2___wmul,f,c
 42115  012D6A  0E00               	movlw	0
 42116  012D6C  2202               	addwfc	?i2___wmul+1,f,c
 42117  012D6E  0ED0               	movlw	208
 42118  012D70  2401               	addwf	?i2___wmul,w,c
 42119  012D72  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42120  012D74  0EFF               	movlw	255
 42121  012D76  2002               	addwfc	?i2___wmul+1,w,c
 42122  012D78  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42123                           
 42124                           ; BSR set to: 0
 42125  012D7A  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42126  012D7C  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42127  012D7E                     i2l1949:
 42128                           
 42129                           ; BSR set to: 0
 42130                           
 42131                           ; BSR set to: 0
 42132  012D7E  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42133  012D82  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42134  012D86  0E00               	movlw	low (__mediumconst shr (0+16))
 42135  012D88  6EF8               	movwf	tblptru,c
 42136  012D8A  0E0D               	movlw	(high __ramtop+-1)
 42137  012D8C  64F7               	cpfsgt	tblptrh,c
 42138  012D8E  D003               	bra	i2u3228_47
 42139  012D90  0008               	tblrd		*
 42140  012D92  50F5               	movf	tablat,w,c
 42141  012D94  D005               	bra	i2u3228_40
 42142  012D96                     i2u3228_47:
 42143  012D96  CFF6 FFE9          	movff	tblptrl,fsr0l
 42144  012D9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 42145  012D9E  50EF               	movf	indf0,w,c
 42146  012DA0                     i2u3228_40:
 42147  012DA0  EC90  F0D7         	call	i2_isdigit
 42148  012DA4  A0D8               	btfss	status,0,c
 42149  012DA6  D12A               	goto	i2l1954
 42150  012DA8  D7C1               	goto	i2l1950
 42151  012DAA                     i2l1948:
 42152                           
 42153                           ;doprnt.c: 626: prec = 0;
 42154  012DAA  0E00               	movlw	0
 42155  012DAC  0100               	movlb	0	; () banked
 42156  012DAE  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42157  012DB0  0E00               	movlw	0
 42158  012DB2  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42159                           
 42160                           ; BSR set to: 0
 42161                           ;doprnt.c: 628: flag |= 0x1000;
 42162  012DB4  89AE               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 42163                           
 42164                           ; BSR set to: 0
 42165                           ;doprnt.c: 635: switch(c = *f++) {
 42166                           
 42167                           ;doprnt.c: 630: }
 42168                           ;doprnt.c: 633: loop:
 42169                           
 42170                           ; BSR set to: 0
 42171  012DB6  D122               	goto	i2l1954
 42172  012DB8                     
 42173                           ; BSR set to: 0
 42174                           ;doprnt.c: 643: flag |= 0x10;
 42175                           
 42176                           ; BSR set to: 0
 42177  012DB8  89AD               	bsf	i2__doprnt@flag& (0+255),4,b
 42178                           
 42179                           ;doprnt.c: 644: goto loop;
 42180  012DBA  D120               	goto	i2l1954
 42181  012DBC                     
 42182                           ; BSR set to: 0
 42183                           ;doprnt.c: 663: flag |= 0x400;
 42184                           
 42185                           ; BSR set to: 0
 42186  012DBC  85AE               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 42187                           
 42188                           ; BSR set to: 0
 42189                           ;doprnt.c: 698: case 'i':
 42190                           ;doprnt.c: 699: break;
 42191                           
 42192                           ; BSR set to: 0
 42193                           
 42194                           ;doprnt.c: 697: case 'd':
 42195                           
 42196                           ;doprnt.c: 664: break;
 42197  012DBE  D159               	goto	i2l1959
 42198  012DC0                     
 42199                           ; BSR set to: 0
 42200                           ;doprnt.c: 718: case 'x':
 42201                           ;doprnt.c: 721: flag |= 0x80;
 42202                           
 42203                           ; BSR set to: 0
 42204                           
 42205                           ; BSR set to: 0
 42206  012DC0  8FAD               	bsf	i2__doprnt@flag& (0+255),7,b
 42207                           
 42208                           ;doprnt.c: 723: break;
 42209  012DC2  D157               	goto	i2l1959
 42210  012DC4                     
 42211                           ; BSR set to: 0
 42212                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 42213                           
 42214                           ; BSR set to: 0
 42215  012DC4  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42216  012DC8  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42217  012DCC  CFDF F08E          	movff	indf2,??i2__doprnt
 42218  012DD0  0E02               	movlw	2
 42219  012DD2  26DE               	addwf	postinc2,f,c
 42220  012DD4  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42221  012DD8  0E00               	movlw	0
 42222  012DDA  22DD               	addwfc	postdec2,f,c
 42223  012DDC  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42224  012DE0  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42225  012DE4  CFDE F099          	movff	postinc2,i2__doprnt@cp
 42226  012DE8  CFDD F09A          	movff	postdec2,i2__doprnt@cp+1
 42227                           
 42228                           ; BSR set to: 0
 42229                           ;doprnt.c: 740: if(!cp)
 42230  012DEC  5199               	movf	i2__doprnt@cp& (0+255),w,b
 42231  012DEE  119A               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 42232  012DF0  A4D8               	btfss	status,2,c
 42233  012DF2  D004               	goto	i2l1965
 42234                           
 42235                           ; BSR set to: 0
 42236                           ;doprnt.c: 741: cp = "(null)";
 42237  012DF4  0E9B               	movlw	low STR_191
 42238  012DF6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 42239  012DF8  0EFF               	movlw	high STR_191
 42240  012DFA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 42241  012DFC                     i2l1965:
 42242                           
 42243                           ; BSR set to: 0
 42244                           ;doprnt.c: 745: len = 0;
 42245                           
 42246                           ; BSR set to: 0
 42247  012DFC  0E00               	movlw	0
 42248  012DFE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 42249  012E00  0E00               	movlw	0
 42250  012E02  6F9B               	movwf	i2__doprnt@len& (0+255),b
 42251                           
 42252                           ;doprnt.c: 746: while(cp[len])
 42253  012E04  D003               	goto	i2l1966
 42254  012E06                     
 42255                           ;doprnt.c: 747: len++;
 42256                           
 42257                           ; BSR set to: 0
 42258  012E06  0100               	movlb	0	; () banked
 42259  012E08  4B9B               	infsnz	i2__doprnt@len& (0+255),f,b
 42260  012E0A  2B9C               	incf	(i2__doprnt@len+1)& (0+255),f,b
 42261  012E0C                     i2l1966:
 42262                           
 42263                           ; BSR set to: 0
 42264                           
 42265                           ; BSR set to: 0
 42266  012E0C  519B               	movf	i2__doprnt@len& (0+255),w,b
 42267  012E0E  2599               	addwf	i2__doprnt@cp& (0+255),w,b
 42268  012E10  6F8E               	movwf	??i2__doprnt& (0+255),b
 42269  012E12  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42270  012E14  219A               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 42271  012E16  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42272  012E18  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 42273  012E1C  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 42274  012E20  0E00               	movlw	low (__mediumconst shr (0+16))
 42275  012E22  6EF8               	movwf	tblptru,c
 42276  012E24  0E0D               	movlw	(high __ramtop+-1)
 42277  012E26  64F7               	cpfsgt	tblptrh,c
 42278  012E28  D003               	bra	i2u3231_47
 42279  012E2A  0008               	tblrd		*
 42280  012E2C  50F5               	movf	tablat,w,c
 42281  012E2E  D005               	bra	i2u3231_40
 42282  012E30                     i2u3231_47:
 42283  012E30  CFF6 FFE9          	movff	tblptrl,fsr0l
 42284  012E34  CFF7 FFEA          	movff	tblptrh,fsr0h
 42285  012E38  50EF               	movf	indf0,w,c
 42286  012E3A                     i2u3231_40:
 42287  012E3A  0900               	iorlw	0
 42288  012E3C  A4D8               	btfss	status,2,c
 42289  012E3E  D7E3               	goto	i2l1967
 42290  012E40                     i2u3232_40:
 42291                           
 42292                           ;doprnt.c: 753: if(prec && prec < len)
 42293                           
 42294                           ;doprnt.c: 750: dostring:
 42295  012E40  0100               	movlb	0	; () banked
 42296  012E42  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42297  012E44  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42298  012E46  B4D8               	btfsc	status,2,c
 42299  012E48  D00A               	goto	i2l1970
 42300                           
 42301                           ; BSR set to: 0
 42302  012E4A  519B               	movf	i2__doprnt@len& (0+255),w,b
 42303  012E4C  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 42304  012E4E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42305  012E50  59B0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 42306  012E52  B0D8               	btfsc	status,0,c
 42307  012E54  D004               	goto	i2l1970
 42308                           
 42309                           ; BSR set to: 0
 42310                           ;doprnt.c: 754: len = prec;
 42311  012E56  C0AF  F09B         	movff	i2__doprnt@prec,i2__doprnt@len
 42312  012E5A  C0B0  F09C         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 42313  012E5E                     i2l1970:
 42314                           
 42315                           ; BSR set to: 0
 42316                           ;doprnt.c: 757: if(width > len)
 42317                           
 42318                           ; BSR set to: 0
 42319  012E5E  51AB               	movf	i2__doprnt@width& (0+255),w,b
 42320  012E60  5D9B               	subwf	i2__doprnt@len& (0+255),w,b
 42321  012E62  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42322  012E64  599C               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 42323  012E66  B0D8               	btfsc	status,0,c
 42324  012E68  D005               	goto	i2l1971
 42325                           
 42326                           ; BSR set to: 0
 42327                           ;doprnt.c: 758: width -= len;
 42328  012E6A  519B               	movf	i2__doprnt@len& (0+255),w,b
 42329  012E6C  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 42330  012E6E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42331  012E70  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42332  012E72  D038               	goto	i2l1976
 42333  012E74                     i2l1971:
 42334                           
 42335                           ; BSR set to: 0
 42336                           ;doprnt.c: 759: else
 42337                           ;doprnt.c: 760: width = 0;
 42338                           
 42339                           ; BSR set to: 0
 42340  012E74  0E00               	movlw	0
 42341  012E76  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42342  012E78  0E00               	movlw	0
 42343  012E7A  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42344                           
 42345                           ; BSR set to: 0
 42346                           ;doprnt.c: 764: while(width--)
 42347  012E7C  D033               	goto	i2l1976
 42348  012E7E                     i2l22378:
 42349                           
 42350                           ; BSR set to: 0
 42351                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 42352  012E7E  EE20 F002          	lfsr	2,2
 42353  012E82  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42354  012E84  26D9               	addwf	fsr2l,f,c
 42355  012E86  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42356  012E88  22DA               	addwfc	fsr2h,f,c
 42357  012E8A  50DE               	movf	postinc2,w,c
 42358  012E8C  10DE               	iorwf	postinc2,w,c
 42359  012E8E  10DE               	iorwf	postinc2,w,c
 42360  012E90  B4D8               	btfsc	status,2,c
 42361  012E92  D013               	goto	i2l1975
 42362                           
 42363                           ; BSR set to: 0
 42364  012E94  EE20 F002          	lfsr	2,2
 42365  012E98  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42366  012E9A  26D9               	addwf	fsr2l,f,c
 42367  012E9C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42368  012E9E  22DA               	addwfc	fsr2h,f,c
 42369  012EA0  D801               	call	i2u3237_48
 42370  012EA2  D020               	goto	i2l1976
 42371  012EA4                     i2u3237_48:
 42372  012EA4  0005               	push	
 42373  012EA6  6EFA               	movwf	pclath,c
 42374  012EA8  50DE               	movf	postinc2,w,c
 42375  012EAA  6EFD               	movwf	tosl,c
 42376  012EAC  50DE               	movf	postinc2,w,c
 42377  012EAE  6EFE               	movwf	tosh,c
 42378  012EB0  50DE               	movf	postinc2,w,c
 42379  012EB2  6EFF               	movwf	tosu,c
 42380  012EB4  50FA               	movf	pclath,w,c
 42381  012EB6  0E20               	movlw	32
 42382  012EB8  0012               	return		;indir
 42383  012EBA                     i2l1975:
 42384  012EBA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42385  012EBE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42386  012EC2  CFDE F08E          	movff	postinc2,??i2__doprnt
 42387  012EC6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42388  012ECA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42389  012ECE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42390  012ED2  0E20               	movlw	32
 42391  012ED4  6EDF               	movwf	indf2,c
 42392  012ED6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42393  012EDA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42394  012EDE  2ADE               	incf	postinc2,f,c
 42395  012EE0  0E00               	movlw	0
 42396  012EE2  22DD               	addwfc	postdec2,f,c
 42397  012EE4                     i2l1976:
 42398  012EE4  0100               	movlb	0	; () banked
 42399  012EE6  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42400  012EE8  A0D8               	btfss	status,0,c
 42401  012EEA  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42402  012EEC  29AB               	incf	i2__doprnt@width& (0+255),w,b
 42403  012EEE  E1C7               	bnz	i2l22378
 42404  012EF0  29AC               	incf	(i2__doprnt@width+1)& (0+255),w,b
 42405  012EF2  B4D8               	btfsc	status,2,c
 42406  012EF4  D05B               	goto	i2l1981
 42407  012EF6  D7C3               	goto	i2l1974
 42408  012EF8                     i2l22388:
 42409                           
 42410                           ; BSR set to: 0
 42411                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 42412  012EF8  EE20 F002          	lfsr	2,2
 42413  012EFC  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42414  012EFE  26D9               	addwf	fsr2l,f,c
 42415  012F00  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42416  012F02  22DA               	addwfc	fsr2h,f,c
 42417  012F04  50DE               	movf	postinc2,w,c
 42418  012F06  10DE               	iorwf	postinc2,w,c
 42419  012F08  10DE               	iorwf	postinc2,w,c
 42420  012F0A  B4D8               	btfsc	status,2,c
 42421  012F0C  D027               	goto	i2l1980
 42422                           
 42423                           ; BSR set to: 0
 42424  012F0E  EE20 F002          	lfsr	2,2
 42425  012F12  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42426  012F14  26D9               	addwf	fsr2l,f,c
 42427  012F16  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42428  012F18  22DA               	addwfc	fsr2h,f,c
 42429  012F1A  D801               	call	i2u3240_48
 42430  012F1C  D01B               	goto	i2u3240_49
 42431  012F1E                     i2u3240_48:
 42432  012F1E  0005               	push	
 42433  012F20  6EFA               	movwf	pclath,c
 42434  012F22  50DE               	movf	postinc2,w,c
 42435  012F24  6EFD               	movwf	tosl,c
 42436  012F26  50DE               	movf	postinc2,w,c
 42437  012F28  6EFE               	movwf	tosh,c
 42438  012F2A  50DE               	movf	postinc2,w,c
 42439  012F2C  6EFF               	movwf	tosu,c
 42440  012F2E  50FA               	movf	pclath,w,c
 42441  012F30  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42442  012F34  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42443  012F38  0E00               	movlw	low (__mediumconst shr (0+16))
 42444  012F3A  6EF8               	movwf	tblptru,c
 42445  012F3C  0E0D               	movlw	(high __ramtop+-1)
 42446  012F3E  64F7               	cpfsgt	tblptrh,c
 42447  012F40  D003               	bra	i2u3241_47
 42448  012F42  0008               	tblrd		*
 42449  012F44  50F5               	movf	tablat,w,c
 42450  012F46  D005               	bra	i2u3241_40
 42451  012F48                     i2u3241_47:
 42452  012F48  CFF6 FFE9          	movff	tblptrl,fsr0l
 42453  012F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 42454  012F50  50EF               	movf	indf0,w,c
 42455  012F52                     i2u3241_40:
 42456  012F52  0012               	return		;indir
 42457  012F54                     i2u3240_49:
 42458  012F54  0100               	movlb	0	; () banked
 42459  012F56  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 42460  012F58  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 42461  012F5A  D028               	goto	i2l1981
 42462  012F5C                     i2l1980:
 42463                           
 42464                           ; BSR set to: 0
 42465                           
 42466                           ; BSR set to: 0
 42467  012F5C  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42468  012F60  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42469  012F64  0E00               	movlw	low (__mediumconst shr (0+16))
 42470  012F66  6EF8               	movwf	tblptru,c
 42471  012F68  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42472  012F6C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42473  012F70  CFDE F08E          	movff	postinc2,??i2__doprnt
 42474  012F74  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42475  012F78  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42476  012F7C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42477  012F80  0E0D               	movlw	(high __ramtop+-1)
 42478  012F82  64F7               	cpfsgt	tblptrh,c
 42479  012F84  D003               	bra	i2u3242_47
 42480  012F86  0008               	tblrd		*
 42481  012F88  50F5               	movf	tablat,w,c
 42482  012F8A  D005               	bra	i2u3242_40
 42483  012F8C                     i2u3242_47:
 42484  012F8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 42485  012F90  CFF7 FFEA          	movff	tblptrh,fsr0h
 42486  012F94  50EF               	movf	indf0,w,c
 42487  012F96                     i2u3242_40:
 42488  012F96  6EDF               	movwf	indf2,c
 42489  012F98  0100               	movlb	0	; () banked
 42490  012F9A  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 42491  012F9C  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 42492                           
 42493                           ; BSR set to: 0
 42494  012F9E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42495  012FA2  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42496  012FA6  2ADE               	incf	postinc2,f,c
 42497  012FA8  0E00               	movlw	0
 42498  012FAA  22DD               	addwfc	postdec2,f,c
 42499  012FAC                     i2l1981:
 42500                           
 42501                           ; BSR set to: 0
 42502                           
 42503                           ; BSR set to: 0
 42504                           
 42505                           ; BSR set to: 0
 42506  012FAC  079B               	decf	i2__doprnt@len& (0+255),f,b
 42507  012FAE  A0D8               	btfss	status,0,c
 42508  012FB0  079C               	decf	(i2__doprnt@len+1)& (0+255),f,b
 42509  012FB2  299B               	incf	i2__doprnt@len& (0+255),w,b
 42510  012FB4  E1A1               	bnz	i2l22388
 42511  012FB6  299C               	incf	(i2__doprnt@len+1)& (0+255),w,b
 42512  012FB8  B4D8               	btfsc	status,2,c
 42513  012FBA  EF19  F0A0         	goto	i2u3328_40
 42514  012FBE  D79C               	goto	i2l1979
 42515  012FC0                     
 42516                           ; BSR set to: 0
 42517                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 42518                           
 42519                           ; BSR set to: 0
 42520  012FC0  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42521  012FC4  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42522  012FC8  CFDF F08E          	movff	indf2,??i2__doprnt
 42523  012FCC  0E02               	movlw	2
 42524  012FCE  26DE               	addwf	postinc2,f,c
 42525  012FD0  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42526  012FD4  0E00               	movlw	0
 42527  012FD6  22DD               	addwfc	postdec2,f,c
 42528  012FD8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42529  012FDC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42530  012FE0  50DF               	movf	indf2,w,c
 42531  012FE2  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42532  012FE4                     
 42533                           ; BSR set to: 0
 42534                           ;doprnt.c: 805: cp = (char *)&c;
 42535                           
 42536                           ; BSR set to: 0
 42537  012FE4  0EB1               	movlw	low i2__doprnt@c
 42538  012FE6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 42539  012FE8  0E00               	movlw	high i2__doprnt@c
 42540  012FEA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 42541                           
 42542                           ; BSR set to: 0
 42543                           ;doprnt.c: 806: len = 1;
 42544  012FEC  0E00               	movlw	0
 42545  012FEE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 42546  012FF0  0E01               	movlw	1
 42547  012FF2  6F9B               	movwf	i2__doprnt@len& (0+255),b
 42548                           
 42549                           ;doprnt.c: 807: goto dostring;
 42550  012FF4  D725               	goto	i2u3232_40
 42551  012FF6                     
 42552                           ; BSR set to: 0
 42553                           ;doprnt.c: 818: flag |= 0xC0;
 42554                           
 42555                           ; BSR set to: 0
 42556  012FF6  0EC0               	movlw	192
 42557  012FF8  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 42558                           
 42559                           ; BSR set to: 0
 42560                           ;doprnt.c: 822: }
 42561                           
 42562                           ;doprnt.c: 819: break;
 42563  012FFA  D03B               	goto	i2l1959
 42564  012FFC                     i2l1954:
 42565                           
 42566                           ; BSR set to: 0
 42567  012FFC  0100               	movlb	0	; () banked
 42568  012FFE  518A               	movf	i2__doprnt@f& (0+255),w,b
 42569  013000  6F8E               	movwf	??i2__doprnt& (0+255),b
 42570  013002  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 42571  013004  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42572  013006  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42573  013008  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42574  01300A  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 42575  01300E  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 42576  013012  0E00               	movlw	low (__mediumconst shr (0+16))
 42577  013014  6EF8               	movwf	tblptru,c
 42578  013016  0E0D               	movlw	(high __ramtop+-1)
 42579  013018  64F7               	cpfsgt	tblptrh,c
 42580  01301A  D003               	bra	i2u3244_47
 42581  01301C  0008               	tblrd		*
 42582  01301E  50F5               	movf	tablat,w,c
 42583  013020  D005               	bra	i2u3244_40
 42584  013022                     i2u3244_47:
 42585  013022  CFF6 FFE9          	movff	tblptrl,fsr0l
 42586  013026  CFF7 FFEA          	movff	tblptrh,fsr0h
 42587  01302A  50EF               	movf	indf0,w,c
 42588  01302C                     i2u3244_40:
 42589  01302C  0100               	movlb	0	; () banked
 42590  01302E  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42591  013030  51B1               	movf	i2__doprnt@c& (0+255),w,b
 42592                           
 42593                           ; Switch size 1, requested type "space"
 42594                           ; Number of cases is 10, Range of values is 0 to 120
 42595                           ; switch strategies available:
 42596                           ; Name         Instructions Cycles
 42597                           ; simple_byte           31    16 (average)
 42598                           ;	Chosen strategy is simple_byte
 42599  013032  0A00               	xorlw	0	; case 0
 42600  013034  B4D8               	btfsc	status,2,c
 42601  013036  EF37  F0A0         	goto	i2u3330_40
 42602  01303A  0A58               	xorlw	88	; case 88
 42603  01303C  B4D8               	btfsc	status,2,c
 42604  01303E  D6C0               	goto	i2l1962
 42605  013040  0A3B               	xorlw	59	; case 99
 42606  013042  B4D8               	btfsc	status,2,c
 42607  013044  D7BD               	goto	i2l1983
 42608  013046  0A07               	xorlw	7	; case 100
 42609  013048  B4D8               	btfsc	status,2,c
 42610  01304A  D013               	goto	i2l1959
 42611  01304C  0A02               	xorlw	2	; case 102
 42612  01304E  B4D8               	btfsc	status,2,c
 42613  013050  D6B5               	goto	i2l1958
 42614  013052  0A0F               	xorlw	15	; case 105
 42615  013054  B4D8               	btfsc	status,2,c
 42616  013056  D00D               	goto	i2l1959
 42617  013058  0A05               	xorlw	5	; case 108
 42618  01305A  B4D8               	btfsc	status,2,c
 42619  01305C  D6AD               	goto	i2l1957
 42620  01305E  0A1F               	xorlw	31	; case 115
 42621  013060  B4D8               	btfsc	status,2,c
 42622  013062  D6B0               	goto	i2l1964
 42623  013064  0A06               	xorlw	6	; case 117
 42624  013066  B4D8               	btfsc	status,2,c
 42625  013068  D7C6               	goto	i2l1985
 42626  01306A  0A0D               	xorlw	13	; case 120
 42627  01306C  B4D8               	btfsc	status,2,c
 42628  01306E  D6A8               	goto	i2l1962
 42629  013070  D7B9               	goto	i2l1984
 42630  013072                     i2l1959:
 42631                           
 42632                           ; BSR set to: 0
 42633                           ;doprnt.c: 825: if(flag & (0x700)) {
 42634                           
 42635                           ; BSR set to: 0
 42636  013072  0E07               	movlw	7
 42637  013074  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42638  013076  B4D8               	btfsc	status,2,c
 42639  013078  EF2E  F09D         	goto	i2l1986
 42640                           
 42641                           ; BSR set to: 0
 42642                           ;doprnt.c: 827: if(flag & 0x1000)
 42643  01307C  A9AE               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 42644  01307E  D004               	goto	i2l1987
 42645                           
 42646                           ; BSR set to: 0
 42647                           ;doprnt.c: 829: prec = 6;
 42648  013080  0E00               	movlw	0
 42649  013082  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42650  013084  0E06               	movlw	6
 42651  013086  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42652  013088                     i2l1987:
 42653                           
 42654                           ; BSR set to: 0
 42655                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 42656                           
 42657                           ; BSR set to: 0
 42658  013088  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42659  01308C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42660  013090  CFDF F08E          	movff	indf2,??i2__doprnt
 42661  013094  0E04               	movlw	4
 42662  013096  26DE               	addwf	postinc2,f,c
 42663  013098  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42664  01309C  0E00               	movlw	0
 42665  01309E  22DD               	addwfc	postdec2,f,c
 42666  0130A0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42667  0130A4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42668  0130A8  CFDE F0A3          	movff	postinc2,i2__doprnt@fval
 42669  0130AC  CFDE F0A4          	movff	postinc2,i2__doprnt@fval+1
 42670  0130B0  CFDE F0A5          	movff	postinc2,i2__doprnt@fval+2
 42671  0130B4  CFDE F0A6          	movff	postinc2,i2__doprnt@fval+3
 42672                           
 42673                           ; BSR set to: 0
 42674                           ;doprnt.c: 831: if(fval < 0.0) {
 42675  0130B8  AFA6               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 42676  0130BA  D015               	goto	i2l1988
 42677                           
 42678                           ; BSR set to: 0
 42679                           ;doprnt.c: 832: fval = -fval;
 42680  0130BC  C0A3  F02C         	movff	i2__doprnt@fval,i2___flneg@f1
 42681  0130C0  C0A4  F02D         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 42682  0130C4  C0A5  F02E         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 42683  0130C8  C0A6  F02F         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 42684  0130CC  EC64  F0D6         	call	i2___flneg
 42685  0130D0  C02C  F0A3         	movff	?i2___flneg,i2__doprnt@fval
 42686  0130D4  C02D  F0A4         	movff	?i2___flneg+1,i2__doprnt@fval+1
 42687  0130D8  C02E  F0A5         	movff	?i2___flneg+2,i2__doprnt@fval+2
 42688  0130DC  C02F  F0A6         	movff	?i2___flneg+3,i2__doprnt@fval+3
 42689                           
 42690                           ;doprnt.c: 833: flag |= 0x03;
 42691  0130E0  0E03               	movlw	3
 42692  0130E2  0100               	movlb	0	; () banked
 42693  0130E4  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 42694  0130E6                     i2l1988:
 42695                           
 42696                           ; BSR set to: 0
 42697                           ;doprnt.c: 834: }
 42698                           ;doprnt.c: 835: exp = 0;
 42699                           
 42700                           ; BSR set to: 0
 42701  0130E6  0E00               	movlw	0
 42702  0130E8  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 42703  0130EA  0E00               	movlw	0
 42704  0130EC  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42705                           
 42706                           ; BSR set to: 0
 42707                           ;doprnt.c: 836: if( fval!=0) {
 42708  0130EE  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 42709  0130F0  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 42710  0130F2  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 42711  0130F4  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 42712  0130F6  B4D8               	btfsc	status,2,c
 42713  0130F8  D082               	goto	i2l1993
 42714                           
 42715                           ; BSR set to: 0
 42716                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 42717  0130FA  35A5               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 42718  0130FC  35A6               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 42719  0130FE  0F82               	addlw	130
 42720  013100  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42721  013102  6B9E               	clrf	(i2__doprnt@exp+1)& (0+255),b
 42722  013104  0EFF               	movlw	255
 42723  013106  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 42724                           
 42725                           ; BSR set to: 0
 42726                           ;doprnt.c: 838: exp--;
 42727  013108  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42728  01310A  A0D8               	btfss	status,0,c
 42729  01310C  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42730                           
 42731                           ; BSR set to: 0
 42732                           ;doprnt.c: 839: exp *= 3;
 42733  01310E  C09D  F001         	movff	i2__doprnt@exp,i2___wmul@multiplier
 42734  013112  C09E  F002         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 42735  013116  0E00               	movlw	0
 42736  013118  6E04               	movwf	i2___wmul@multiplicand+1,c
 42737  01311A  0E03               	movlw	3
 42738  01311C  6E03               	movwf	i2___wmul@multiplicand,c
 42739  01311E  EC05  F0D7         	call	i2___wmul	;wreg free
 42740  013122  C001  F09D         	movff	?i2___wmul,i2__doprnt@exp
 42741  013126  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@exp+1
 42742                           
 42743                           ;doprnt.c: 840: exp /= 10;
 42744  01312A  C09D  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 42745  01312E  C09E  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 42746  013132  0E00               	movlw	0
 42747  013134  6E0A               	movwf	i2___awdiv@divisor+1,c
 42748  013136  0E0A               	movlw	10
 42749  013138  6E09               	movwf	i2___awdiv@divisor,c
 42750  01313A  ECB0  F0CD         	call	i2___awdiv	;wreg free
 42751  01313E  C007  F09D         	movff	?i2___awdiv,i2__doprnt@exp
 42752  013142  C008  F09E         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 42753                           
 42754                           ;doprnt.c: 841: if(exp < 0)
 42755  013146  0100               	movlb	0	; () banked
 42756  013148  AF9E               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 42757  01314A  D003               	goto	i2l1990
 42758                           
 42759                           ; BSR set to: 0
 42760                           ;doprnt.c: 842: exp--;
 42761  01314C  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42762  01314E  A0D8               	btfss	status,0,c
 42763  013150  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42764  013152                     i2l1990:
 42765                           
 42766                           ; BSR set to: 0
 42767                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 42768                           
 42769                           ; BSR set to: 0
 42770  013152  519D               	movf	i2__doprnt@exp& (0+255),w,b
 42771  013154  0800               	sublw	0
 42772  013156  ECF0  F0A7         	call	i2_scale
 42773  01315A  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 42774  01315E  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 42775  013162  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 42776  013166  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 42777                           
 42778                           ;doprnt.c: 847: tmpval.integ *= fval;
 42779  01316A  C09F  F030         	movff	i2__doprnt@tmpval,i2___flmul@b
 42780  01316E  C0A0  F031         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 42781  013172  C0A1  F032         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 42782  013176  C0A2  F033         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 42783  01317A  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 42784  01317E  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 42785  013182  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 42786  013186  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 42787  01318A  EC8D  F0AD         	call	i2___flmul	;wreg free
 42788  01318E  C030  F09F         	movff	?i2___flmul,i2__doprnt@tmpval
 42789  013192  C031  F0A0         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 42790  013196  C032  F0A1         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 42791  01319A  C033  F0A2         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 42792                           
 42793                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 42794  01319E  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 42795  0131A2  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 42796  0131A6  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 42797  0131AA  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 42798  0131AE  0E00               	movlw	0
 42799  0131B0  6E38               	movwf	i2___flge@ff2,c
 42800  0131B2  0E00               	movlw	0
 42801  0131B4  6E39               	movwf	i2___flge@ff2+1,c
 42802  0131B6  0E80               	movlw	128
 42803  0131B8  6E3A               	movwf	i2___flge@ff2+2,c
 42804  0131BA  0E3F               	movlw	63
 42805  0131BC  6E3B               	movwf	i2___flge@ff2+3,c
 42806  0131BE  ECEB  F0C6         	call	i2___flge	;wreg free
 42807  0131C2  B0D8               	btfsc	status,0,c
 42808  0131C4  D005               	goto	i2l1991
 42809                           
 42810                           ;doprnt.c: 849: exp--;
 42811  0131C6  0100               	movlb	0	; () banked
 42812  0131C8  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42813  0131CA  A0D8               	btfss	status,0,c
 42814  0131CC  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42815  0131CE  D017               	goto	i2l1993
 42816  0131D0                     i2l1991:
 42817                           
 42818                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 42819                           
 42820                           ; BSR set to: 0
 42821  0131D0  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 42822  0131D4  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 42823  0131D8  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 42824  0131DC  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 42825  0131E0  0E00               	movlw	0
 42826  0131E2  6E38               	movwf	i2___flge@ff2,c
 42827  0131E4  0E00               	movlw	0
 42828  0131E6  6E39               	movwf	i2___flge@ff2+1,c
 42829  0131E8  0E20               	movlw	32
 42830  0131EA  6E3A               	movwf	i2___flge@ff2+2,c
 42831  0131EC  0E41               	movlw	65
 42832  0131EE  6E3B               	movwf	i2___flge@ff2+3,c
 42833  0131F0  ECEB  F0C6         	call	i2___flge	;wreg free
 42834  0131F4  A0D8               	btfss	status,0,c
 42835  0131F6  D003               	goto	i2l1993
 42836                           
 42837                           ;doprnt.c: 851: exp++;
 42838  0131F8  0100               	movlb	0	; () banked
 42839  0131FA  4B9D               	infsnz	i2__doprnt@exp& (0+255),f,b
 42840  0131FC  2B9E               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 42841  0131FE                     i2l1993:
 42842                           
 42843                           ;doprnt.c: 852: }
 42844                           ;doprnt.c: 1112: if(prec <= 12)
 42845                           
 42846                           ; BSR set to: 0
 42847                           
 42848                           ; BSR set to: 0
 42849                           
 42850                           ; BSR set to: 0
 42851  0131FE  0100               	movlb	0	; () banked
 42852  013200  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 42853  013202  D006               	goto	i2u3252_40
 42854  013204  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 42855  013206  E121               	bnz	i2l22460
 42856  013208  0E0D               	movlw	13
 42857  01320A  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 42858  01320C  B0D8               	btfsc	status,0,c
 42859  01320E  D01D               	goto	i2l1994
 42860  013210                     i2u3252_40:
 42861                           
 42862                           ; BSR set to: 0
 42863                           ;doprnt.c: 1113: fval += fround(prec);
 42864  013210  C0A3  F056         	movff	i2__doprnt@fval,i2___fladd@b
 42865  013214  C0A4  F057         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 42866  013218  C0A5  F058         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 42867  01321C  C0A6  F059         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 42868  013220  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42869  013222  ECEE  F0BA         	call	i2_fround
 42870  013226  C049  F05A         	movff	?i2_fround,i2___fladd@a
 42871  01322A  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 42872  01322E  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 42873  013232  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 42874  013236  ECD4  F0B0         	call	i2___fladd	;wreg free
 42875  01323A  C056  F0A3         	movff	?i2___fladd,i2__doprnt@fval
 42876  01323E  C057  F0A4         	movff	?i2___fladd+1,i2__doprnt@fval+1
 42877  013242  C058  F0A5         	movff	?i2___fladd+2,i2__doprnt@fval+2
 42878  013246  C059  F0A6         	movff	?i2___fladd+3,i2__doprnt@fval+3
 42879  01324A                     i2l1994:
 42880  01324A                     i2l22460:
 42881                           
 42882                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 42883  01324A  0100               	movlb	0	; () banked
 42884  01324C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 42885  01324E  D006               	goto	i2u3253_40
 42886  013250  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 42887  013252  E122               	bnz	i2l22468
 42888  013254  0E0A               	movlw	10
 42889  013256  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 42890  013258  B0D8               	btfsc	status,0,c
 42891  01325A  D01E               	goto	i2u3256_40
 42892  01325C                     i2u3253_40:
 42893                           
 42894                           ; BSR set to: 0
 42895  01325C  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 42896  01325E  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 42897  013260  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 42898  013262  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 42899  013264  B4D8               	btfsc	status,2,c
 42900  013266  D063               	goto	i2l1995
 42901                           
 42902                           ; BSR set to: 0
 42903  013268  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 42904  01326C  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 42905  013270  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 42906  013274  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 42907  013278  EC77  F0C9         	call	i2___fltol	;wreg free
 42908  01327C  0100               	movlb	0	; () banked
 42909  01327E  516C               	movf	?i2___fltol& (0+255),w,b
 42910  013280  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 42911  013282  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 42912  013284  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 42913  013286  B4D8               	btfsc	status,2,c
 42914                           
 42915                           ; BSR set to: 0
 42916  013288  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 42917  01328A  D051               	goto	i2l1995
 42918  01328C  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 42919  01328E  E104               	bnz	i2l22468
 42920  013290  0E02               	movlw	2
 42921  013292  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 42922  013294  A0D8               	btfss	status,0,c
 42923  013296  D04B               	goto	i2l1995
 42924  013298                     i2u3256_40:
 42925  013298                     i2l22468:
 42926                           
 42927                           ; BSR set to: 0
 42928                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 42929  013298  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 42930  01329C  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 42931  0132A0  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 42932  0132A4  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 42933  0132A8  0E5F               	movlw	95
 42934  0132AA  6E38               	movwf	i2___flge@ff2,c
 42935  0132AC  0E70               	movlw	112
 42936  0132AE  6E39               	movwf	i2___flge@ff2+1,c
 42937  0132B0  0E89               	movlw	137
 42938  0132B2  6E3A               	movwf	i2___flge@ff2+2,c
 42939  0132B4  0E40               	movlw	64
 42940  0132B6  6E3B               	movwf	i2___flge@ff2+3,c
 42941  0132B8  ECEB  F0C6         	call	i2___flge	;wreg free
 42942  0132BC  B0D8               	btfsc	status,0,c
 42943  0132BE  D003               	goto	i2l1998
 42944                           
 42945                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 42946  0132C0  0100               	movlb	0	; () banked
 42947  0132C2  0EF7               	movlw	247
 42948  0132C4  D002               	goto	L18
 42949  0132C6                     i2l1998:
 42950                           
 42951                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 42952                           
 42953                           ; BSR set to: 0
 42954  0132C6  0100               	movlb	0	; () banked
 42955  0132C8  0EF8               	movlw	248
 42956  0132CA                     L18:
 42957  0132CA  279D               	addwf	i2__doprnt@exp& (0+255),f,b
 42958  0132CC  0EFF               	movlw	255
 42959  0132CE  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 42960                           
 42961                           ; BSR set to: 0
 42962                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 42963                           
 42964                           ; BSR set to: 0
 42965  0132D0  519D               	movf	i2__doprnt@exp& (0+255),w,b
 42966  0132D2  ECF0  F0A7         	call	i2_scale
 42967  0132D6  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 42968  0132DA  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 42969  0132DE  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 42970  0132E2  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 42971  0132E6  C0A3  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 42972  0132EA  C0A4  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 42973  0132EE  C0A5  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 42974  0132F2  C0A6  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 42975  0132F6  C09F  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 42976  0132FA  C0A0  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 42977  0132FE  C0A1  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 42978  013302  C0A2  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 42979  013306  EC34  F0C5         	call	i2__div_to_l_	;wreg free
 42980  01330A  C001  F0A7         	movff	?i2__div_to_l_,i2__doprnt@val
 42981  01330E  C002  F0A8         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 42982  013312  C003  F0A9         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 42983  013316  C004  F0AA         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 42984                           
 42985                           ;doprnt.c: 1129: fval = 0.0;
 42986  01331A  0E00               	movlw	0
 42987  01331C  0100               	movlb	0	; () banked
 42988  01331E  6FA3               	movwf	i2__doprnt@fval& (0+255),b
 42989  013320  0E00               	movlw	0
 42990  013322  6FA4               	movwf	(i2__doprnt@fval+1)& (0+255),b
 42991  013324  0E00               	movlw	0
 42992  013326  6FA5               	movwf	(i2__doprnt@fval+2)& (0+255),b
 42993  013328  0E00               	movlw	0
 42994  01332A  6FA6               	movwf	(i2__doprnt@fval+3)& (0+255),b
 42995                           
 42996                           ;doprnt.c: 1130: } else {
 42997  01332C  D03C               	goto	i2l2004
 42998  01332E                     i2l1995:
 42999                           
 43000                           ; BSR set to: 0
 43001                           ;doprnt.c: 1131: val = (unsigned long)fval;
 43002                           
 43003                           ; BSR set to: 0
 43004  01332E  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 43005  013332  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 43006  013336  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 43007  01333A  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 43008  01333E  EC77  F0C9         	call	i2___fltol	;wreg free
 43009  013342  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 43010  013346  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 43011  01334A  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 43012  01334E  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 43013                           
 43014                           ;doprnt.c: 1132: fval -= (double)val;
 43015  013352  C0A3  F080         	movff	i2__doprnt@fval,i2___flsub@b
 43016  013356  C0A4  F081         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 43017  01335A  C0A5  F082         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 43018  01335E  C0A6  F083         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 43019  013362  C0A7  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 43020  013366  C0A8  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 43021  01336A  C0A9  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 43022  01336E  C0AA  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 43023  013372  0E00               	movlw	0
 43024  013374  EC8E  F0C1         	call	i2___xxtofl
 43025  013378  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 43026  01337C  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 43027  013380  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 43028  013384  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 43029  013388  EC6E  F0D3         	call	i2___flsub	;wreg free
 43030  01338C  C080  F0A3         	movff	?i2___flsub,i2__doprnt@fval
 43031  013390  C081  F0A4         	movff	?i2___flsub+1,i2__doprnt@fval+1
 43032  013394  C082  F0A5         	movff	?i2___flsub+2,i2__doprnt@fval+2
 43033  013398  C083  F0A6         	movff	?i2___flsub+3,i2__doprnt@fval+3
 43034                           
 43035                           ;doprnt.c: 1133: exp = 0;
 43036  01339C  0E00               	movlw	0
 43037  01339E  0100               	movlb	0	; () banked
 43038  0133A0  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 43039  0133A2  0E00               	movlw	0
 43040  0133A4  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 43041  0133A6                     i2l2004:
 43042                           
 43043                           ; BSR set to: 0
 43044                           ;doprnt.c: 1134: }
 43045                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 43046                           
 43047                           ; BSR set to: 0
 43048  0133A6  0E01               	movlw	1
 43049  0133A8  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43050  0133AA                     i2l22488:
 43051                           
 43052                           ; BSR set to: 0
 43053  0133AA  0E0A               	movlw	10
 43054  0133AC  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 43055  0133AE  B4D8               	btfsc	status,2,c
 43056  0133B0  D01B               	goto	i2u3260_40
 43057                           
 43058                           ; BSR set to: 0
 43059                           ;doprnt.c: 1137: if(val < dpowers[c])
 43060                           
 43061                           ; BSR set to: 0
 43062                           
 43063                           ; BSR set to: 0
 43064  0133B2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43065  0133B4  0D04               	mullw	4
 43066  0133B6  0E0F               	movlw	low _dpowers
 43067  0133B8  24F3               	addwf	prodl,w,c
 43068  0133BA  6EF6               	movwf	tblptrl,c
 43069  0133BC  0ECF               	movlw	high _dpowers
 43070  0133BE  20F4               	addwfc	prodh,w,c
 43071  0133C0  6EF7               	movwf	tblptrh,c
 43072  0133C2                     	if	1	;There are 3 active tblptr bytes
 43073  0133C2  6AF8               	clrf	tblptru,c
 43074  0133C4  0E00               	movlw	low (__mediumconst shr (0+16))
 43075  0133C6  22F8               	addwfc	tblptru,f,c
 43076  0133C8                     	endif
 43077  0133C8  0009               	tblrd		*+
 43078  0133CA  50F5               	movf	tablat,w,c
 43079  0133CC  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 43080  0133CE  0009               	tblrd		*+
 43081  0133D0  50F5               	movf	tablat,w,c
 43082  0133D2  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43083  0133D4  0009               	tblrd		*+
 43084  0133D6  50F5               	movf	tablat,w,c
 43085  0133D8  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43086  0133DA  0009               	tblrd		*+
 43087  0133DC  50F5               	movf	tablat,w,c
 43088  0133DE  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43089  0133E0  A0D8               	btfss	status,0,c
 43090  0133E2  D002               	goto	i2u3260_40
 43091                           
 43092                           ; BSR set to: 0
 43093                           
 43094                           ; BSR set to: 0
 43095                           
 43096                           ; BSR set to: 0
 43097                           ;doprnt.c: 1138: break;
 43098  0133E4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 43099  0133E6  D7E1               	goto	i2l22488
 43100  0133E8                     i2u3260_40:
 43101                           
 43102                           ; BSR set to: 0
 43103                           ;doprnt.c: 1142: width -= prec + c + exp;
 43104                           
 43105                           ; BSR set to: 0
 43106  0133E8  C0B1  F08E         	movff	i2__doprnt@c,??i2__doprnt
 43107  0133EC  6B8F               	clrf	(??i2__doprnt+1)& (0+255),b
 43108  0133EE  BF8E               	btfsc	??i2__doprnt& (0+255),7,b
 43109  0133F0  078F               	decf	(??i2__doprnt+1)& (0+255),f,b
 43110  0133F2  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43111  0133F4  278E               	addwf	??i2__doprnt& (0+255),f,b
 43112  0133F6  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43113  0133F8  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 43114  0133FA  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43115  0133FC  278E               	addwf	??i2__doprnt& (0+255),f,b
 43116  0133FE  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43117  013400  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 43118  013402  518E               	movf	??i2__doprnt& (0+255),w,b
 43119  013404  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 43120  013406  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 43121  013408  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43122                           
 43123                           ;doprnt.c: 1143: if(
 43124                           ;doprnt.c: 1147: prec)
 43125  01340A  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43126  01340C  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43127  01340E  B4D8               	btfsc	status,2,c
 43128  013410  D003               	goto	i2l2008
 43129                           
 43130                           ; BSR set to: 0
 43131                           ;doprnt.c: 1148: width--;
 43132  013412  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43133  013414  A0D8               	btfss	status,0,c
 43134  013416  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43135  013418                     i2l2008:
 43136                           
 43137                           ; BSR set to: 0
 43138                           ;doprnt.c: 1149: if(flag & 0x03)
 43139                           
 43140                           ; BSR set to: 0
 43141  013418  0E03               	movlw	3
 43142  01341A  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43143  01341C  6F8E               	movwf	??i2__doprnt& (0+255),b
 43144  01341E  0E00               	movlw	0
 43145  013420  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43146  013422  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43147  013424  518E               	movf	??i2__doprnt& (0+255),w,b
 43148  013426  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43149  013428  B4D8               	btfsc	status,2,c
 43150  01342A  D003               	goto	i2l2009
 43151                           
 43152                           ; BSR set to: 0
 43153                           ;doprnt.c: 1150: width--;
 43154  01342C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43155  01342E  A0D8               	btfss	status,0,c
 43156  013430  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43157  013432                     i2l2009:
 43158                           
 43159                           ; BSR set to: 0
 43160                           ;doprnt.c: 1153: if(flag & 0x04) {
 43161                           
 43162                           ; BSR set to: 0
 43163  013432  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 43164  013434  D0B6               	goto	i2l2020
 43165                           
 43166                           ; BSR set to: 0
 43167                           ;doprnt.c: 1157: if(flag & 0x03)
 43168  013436  0E03               	movlw	3
 43169  013438  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43170  01343A  6F8E               	movwf	??i2__doprnt& (0+255),b
 43171  01343C  0E00               	movlw	0
 43172  01343E  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43173  013440  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43174  013442  518E               	movf	??i2__doprnt& (0+255),w,b
 43175  013444  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43176  013446  B4D8               	btfsc	status,2,c
 43177  013448  D06C               	goto	i2l2014
 43178                           
 43179                           ; BSR set to: 0
 43180                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43181  01344A  EE20 F002          	lfsr	2,2
 43182  01344E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43183  013450  26D9               	addwf	fsr2l,f,c
 43184  013452  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43185  013454  22DA               	addwfc	fsr2h,f,c
 43186  013456  50DE               	movf	postinc2,w,c
 43187  013458  10DE               	iorwf	postinc2,w,c
 43188  01345A  10DE               	iorwf	postinc2,w,c
 43189  01345C  B4D8               	btfsc	status,2,c
 43190  01345E  D013               	goto	i2l2012
 43191                           
 43192                           ; BSR set to: 0
 43193  013460  EE20 F002          	lfsr	2,2
 43194  013464  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43195  013466  26D9               	addwf	fsr2l,f,c
 43196  013468  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43197  01346A  22DA               	addwfc	fsr2h,f,c
 43198  01346C  D801               	call	i2u3266_48
 43199  01346E  D059               	goto	i2l2014
 43200  013470                     i2u3266_48:
 43201  013470  0005               	push	
 43202  013472  6EFA               	movwf	pclath,c
 43203  013474  50DE               	movf	postinc2,w,c
 43204  013476  6EFD               	movwf	tosl,c
 43205  013478  50DE               	movf	postinc2,w,c
 43206  01347A  6EFE               	movwf	tosh,c
 43207  01347C  50DE               	movf	postinc2,w,c
 43208  01347E  6EFF               	movwf	tosu,c
 43209  013480  50FA               	movf	pclath,w,c
 43210  013482  0E2D               	movlw	45
 43211  013484  0012               	return		;indir
 43212  013486                     i2l2012:
 43213  013486  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43214  01348A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43215  01348E  CFDE F08E          	movff	postinc2,??i2__doprnt
 43216  013492  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43217  013496  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43218  01349A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43219  01349E  0E2D               	movlw	45
 43220  0134A0  6EDF               	movwf	indf2,c
 43221  0134A2  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43222  0134A6  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43223  0134AA  2ADE               	incf	postinc2,f,c
 43224  0134AC  0E00               	movlw	0
 43225  0134AE  22DD               	addwfc	postdec2,f,c
 43226                           
 43227                           ;doprnt.c: 1168: while(width > 0) {
 43228  0134B0  D038               	goto	i2l2014
 43229  0134B2                     i2l22520:
 43230                           
 43231                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43232  0134B2  0100               	movlb	0	; () banked
 43233  0134B4  EE20 F002          	lfsr	2,2
 43234  0134B8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43235  0134BA  26D9               	addwf	fsr2l,f,c
 43236  0134BC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43237  0134BE  22DA               	addwfc	fsr2h,f,c
 43238  0134C0  50DE               	movf	postinc2,w,c
 43239  0134C2  10DE               	iorwf	postinc2,w,c
 43240  0134C4  10DE               	iorwf	postinc2,w,c
 43241  0134C6  B4D8               	btfsc	status,2,c
 43242  0134C8  D013               	goto	i2l2016
 43243                           
 43244                           ; BSR set to: 0
 43245  0134CA  EE20 F002          	lfsr	2,2
 43246  0134CE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43247  0134D0  26D9               	addwf	fsr2l,f,c
 43248  0134D2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43249  0134D4  22DA               	addwfc	fsr2h,f,c
 43250  0134D6  D801               	call	i2u3268_48
 43251  0134D8  D020               	goto	i2l2017
 43252  0134DA                     i2u3268_48:
 43253  0134DA  0005               	push	
 43254  0134DC  6EFA               	movwf	pclath,c
 43255  0134DE  50DE               	movf	postinc2,w,c
 43256  0134E0  6EFD               	movwf	tosl,c
 43257  0134E2  50DE               	movf	postinc2,w,c
 43258  0134E4  6EFE               	movwf	tosh,c
 43259  0134E6  50DE               	movf	postinc2,w,c
 43260  0134E8  6EFF               	movwf	tosu,c
 43261  0134EA  50FA               	movf	pclath,w,c
 43262  0134EC  0E30               	movlw	48
 43263  0134EE  0012               	return		;indir
 43264  0134F0                     i2l2016:
 43265  0134F0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43266  0134F4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43267  0134F8  CFDE F08E          	movff	postinc2,??i2__doprnt
 43268  0134FC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43269  013500  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43270  013504  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43271  013508  0E30               	movlw	48
 43272  01350A  6EDF               	movwf	indf2,c
 43273  01350C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43274  013510  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43275  013514  2ADE               	incf	postinc2,f,c
 43276  013516  0E00               	movlw	0
 43277  013518  22DD               	addwfc	postdec2,f,c
 43278  01351A                     i2l2017:
 43279                           
 43280                           ;doprnt.c: 1170: width--;
 43281  01351A  0100               	movlb	0	; () banked
 43282  01351C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43283  01351E  A0D8               	btfss	status,0,c
 43284  013520  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43285  013522                     i2l2014:
 43286                           
 43287                           ; BSR set to: 0
 43288  013522  0100               	movlb	0	; () banked
 43289  013524  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 43290  013526  D0F5               	goto	i2l2031
 43291  013528  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43292  01352A  E1C3               	bnz	i2l22520
 43293  01352C  05AB               	decf	i2__doprnt@width& (0+255),w,b
 43294  01352E  A0D8               	btfss	status,0,c
 43295  013530  D0F0               	goto	i2l2031
 43296  013532  D7BF               	goto	i2l2015
 43297  013534                     i2l22532:
 43298                           
 43299                           ; BSR set to: 0
 43300                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 43301  013534  EE20 F002          	lfsr	2,2
 43302  013538  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43303  01353A  26D9               	addwf	fsr2l,f,c
 43304  01353C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43305  01353E  22DA               	addwfc	fsr2h,f,c
 43306  013540  50DE               	movf	postinc2,w,c
 43307  013542  10DE               	iorwf	postinc2,w,c
 43308  013544  10DE               	iorwf	postinc2,w,c
 43309  013546  B4D8               	btfsc	status,2,c
 43310  013548  D013               	goto	i2l2022
 43311                           
 43312                           ; BSR set to: 0
 43313  01354A  EE20 F002          	lfsr	2,2
 43314  01354E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43315  013550  26D9               	addwf	fsr2l,f,c
 43316  013552  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43317  013554  22DA               	addwfc	fsr2h,f,c
 43318  013556  D801               	call	i2u3271_48
 43319  013558  D020               	goto	i2l2023
 43320  01355A                     i2u3271_48:
 43321  01355A  0005               	push	
 43322  01355C  6EFA               	movwf	pclath,c
 43323  01355E  50DE               	movf	postinc2,w,c
 43324  013560  6EFD               	movwf	tosl,c
 43325  013562  50DE               	movf	postinc2,w,c
 43326  013564  6EFE               	movwf	tosh,c
 43327  013566  50DE               	movf	postinc2,w,c
 43328  013568  6EFF               	movwf	tosu,c
 43329  01356A  50FA               	movf	pclath,w,c
 43330  01356C  0E20               	movlw	32
 43331  01356E  0012               	return		;indir
 43332  013570                     i2l2022:
 43333  013570  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43334  013574  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43335  013578  CFDE F08E          	movff	postinc2,??i2__doprnt
 43336  01357C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43337  013580  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43338  013584  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43339  013588  0E20               	movlw	32
 43340  01358A  6EDF               	movwf	indf2,c
 43341  01358C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43342  013590  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43343  013594  2ADE               	incf	postinc2,f,c
 43344  013596  0E00               	movlw	0
 43345  013598  22DD               	addwfc	postdec2,f,c
 43346  01359A                     i2l2023:
 43347                           
 43348                           ;doprnt.c: 1182: width--;
 43349  01359A  0100               	movlb	0	; () banked
 43350  01359C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43351  01359E  A0D8               	btfss	status,0,c
 43352  0135A0  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43353  0135A2                     i2l2020:
 43354                           
 43355                           ; BSR set to: 0
 43356                           
 43357                           ; BSR set to: 0
 43358  0135A2  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 43359  0135A4  D005               	goto	i2u3272_40
 43360  0135A6  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43361  0135A8  E1C5               	bnz	i2l22532
 43362  0135AA  05AB               	decf	i2__doprnt@width& (0+255),w,b
 43363  0135AC  B0D8               	btfsc	status,0,c
 43364  0135AE  D7C2               	goto	i2l2021
 43365  0135B0                     i2u3272_40:
 43366                           
 43367                           ; BSR set to: 0
 43368                           ;doprnt.c: 1183: }
 43369                           ;doprnt.c: 1188: if(flag & 0x03)
 43370                           
 43371                           ; BSR set to: 0
 43372  0135B0  0E03               	movlw	3
 43373  0135B2  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43374  0135B4  6F8E               	movwf	??i2__doprnt& (0+255),b
 43375  0135B6  0E00               	movlw	0
 43376  0135B8  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43377  0135BA  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43378  0135BC  518E               	movf	??i2__doprnt& (0+255),w,b
 43379  0135BE  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43380  0135C0  B4D8               	btfsc	status,2,c
 43381  0135C2  D0A7               	goto	i2l2031
 43382                           
 43383                           ; BSR set to: 0
 43384                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43385  0135C4  EE20 F002          	lfsr	2,2
 43386  0135C8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43387  0135CA  26D9               	addwf	fsr2l,f,c
 43388  0135CC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43389  0135CE  22DA               	addwfc	fsr2h,f,c
 43390  0135D0  50DE               	movf	postinc2,w,c
 43391  0135D2  10DE               	iorwf	postinc2,w,c
 43392  0135D4  10DE               	iorwf	postinc2,w,c
 43393  0135D6  B4D8               	btfsc	status,2,c
 43394  0135D8  D013               	goto	i2l2026
 43395                           
 43396                           ; BSR set to: 0
 43397  0135DA  EE20 F002          	lfsr	2,2
 43398  0135DE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43399  0135E0  26D9               	addwf	fsr2l,f,c
 43400  0135E2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43401  0135E4  22DA               	addwfc	fsr2h,f,c
 43402  0135E6  D801               	call	i2u3275_48
 43403  0135E8  D094               	goto	i2l2031
 43404  0135EA                     i2u3275_48:
 43405  0135EA  0005               	push	
 43406  0135EC  6EFA               	movwf	pclath,c
 43407  0135EE  50DE               	movf	postinc2,w,c
 43408  0135F0  6EFD               	movwf	tosl,c
 43409  0135F2  50DE               	movf	postinc2,w,c
 43410  0135F4  6EFE               	movwf	tosh,c
 43411  0135F6  50DE               	movf	postinc2,w,c
 43412  0135F8  6EFF               	movwf	tosu,c
 43413  0135FA  50FA               	movf	pclath,w,c
 43414  0135FC  0E2D               	movlw	45
 43415  0135FE  0012               	return		;indir
 43416  013600                     i2l2026:
 43417  013600  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43418  013604  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43419  013608  CFDE F08E          	movff	postinc2,??i2__doprnt
 43420  01360C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43421  013610  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43422  013614  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43423  013618  0E2D               	movlw	45
 43424  01361A  D073               	goto	L19
 43425  01361C                     
 43426                           ;doprnt.c: 1200: {
 43427                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 43428  01361C  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43429  013620  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43430  013624  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43431  013628  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43432  01362C  0100               	movlb	0	; () banked
 43433  01362E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43434  013630  0D04               	mullw	4
 43435  013632  0E0F               	movlw	low _dpowers
 43436  013634  24F3               	addwf	prodl,w,c
 43437  013636  6EF6               	movwf	tblptrl,c
 43438  013638  0ECF               	movlw	high _dpowers
 43439  01363A  20F4               	addwfc	prodh,w,c
 43440  01363C  6EF7               	movwf	tblptrh,c
 43441  01363E                     	if	1	;There are 3 active tblptr bytes
 43442  01363E  6AF8               	clrf	tblptru,c
 43443  013640  0E00               	movlw	low (__mediumconst shr (0+16))
 43444  013642  22F8               	addwfc	tblptru,f,c
 43445  013644                     	endif
 43446  013644  0009               	tblrd		*+
 43447  013646  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43448  01364A  0009               	tblrd		*+
 43449  01364C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43450  013650  0009               	tblrd		*+
 43451  013652  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43452  013656  000A               	tblrd		*-
 43453  013658  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43454  01365C  EC33  F0CE         	call	i2___lldiv
 43455  013660  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 43456  013664  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 43457  013668  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 43458  01366C  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 43459                           
 43460                           ;doprnt.c: 1202: tmpval.vd %= 10;
 43461  013670  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 43462  013674  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 43463  013678  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 43464  01367C  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 43465  013680  0E0A               	movlw	10
 43466  013682  6E12               	movwf	i2___llmod@divisor,c
 43467  013684  0E00               	movlw	0
 43468  013686  6E13               	movwf	i2___llmod@divisor+1,c
 43469  013688  0E00               	movlw	0
 43470  01368A  6E14               	movwf	i2___llmod@divisor+2,c
 43471  01368C  0E00               	movlw	0
 43472  01368E  6E15               	movwf	i2___llmod@divisor+3,c
 43473  013690  EC68  F0D0         	call	i2___llmod	;wreg free
 43474  013694  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 43475  013698  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 43476  01369C  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 43477  0136A0  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 43478                           
 43479                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 43480  0136A4  0100               	movlb	0	; () banked
 43481  0136A6  EE20 F002          	lfsr	2,2
 43482  0136AA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43483  0136AC  26D9               	addwf	fsr2l,f,c
 43484  0136AE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43485  0136B0  22DA               	addwfc	fsr2h,f,c
 43486  0136B2  50DE               	movf	postinc2,w,c
 43487  0136B4  10DE               	iorwf	postinc2,w,c
 43488  0136B6  10DE               	iorwf	postinc2,w,c
 43489  0136B8  B4D8               	btfsc	status,2,c
 43490  0136BA  D014               	goto	i2l2030
 43491                           
 43492                           ; BSR set to: 0
 43493  0136BC  EE20 F002          	lfsr	2,2
 43494  0136C0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43495  0136C2  26D9               	addwf	fsr2l,f,c
 43496  0136C4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43497  0136C6  22DA               	addwfc	fsr2h,f,c
 43498  0136C8  D801               	call	i2u3277_48
 43499  0136CA  D023               	goto	i2l2031
 43500  0136CC                     i2u3277_48:
 43501  0136CC  0005               	push	
 43502  0136CE  6EFA               	movwf	pclath,c
 43503  0136D0  50DE               	movf	postinc2,w,c
 43504  0136D2  6EFD               	movwf	tosl,c
 43505  0136D4  50DE               	movf	postinc2,w,c
 43506  0136D6  6EFE               	movwf	tosh,c
 43507  0136D8  50DE               	movf	postinc2,w,c
 43508  0136DA  6EFF               	movwf	tosu,c
 43509  0136DC  50FA               	movf	pclath,w,c
 43510  0136DE  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43511  0136E0  0F30               	addlw	48
 43512  0136E2  0012               	return		;indir
 43513  0136E4                     i2l2030:
 43514  0136E4  0100               	movlb	0	; () banked
 43515  0136E6  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43516  0136E8  0F30               	addlw	48
 43517  0136EA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43518  0136EE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43519  0136F2  CFDE F08E          	movff	postinc2,??i2__doprnt
 43520  0136F6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43521  0136FA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43522  0136FE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43523  013702                     L19:
 43524  013702  6EDF               	movwf	indf2,c
 43525  013704  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43526  013708  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43527  01370C  2ADE               	incf	postinc2,f,c
 43528  01370E  0E00               	movlw	0
 43529  013710  22DD               	addwfc	postdec2,f,c
 43530  013712                     i2l2031:
 43531                           
 43532                           ; BSR set to: 0
 43533                           
 43534                           ; BSR set to: 0
 43535  013712  0100               	movlb	0	; () banked
 43536  013714  07B1               	decf	i2__doprnt@c& (0+255),f,b
 43537  013716  29B1               	incf	i2__doprnt@c& (0+255),w,b
 43538  013718  B4D8               	btfsc	status,2,c
 43539  01371A  D038               	goto	i2l2033
 43540  01371C  D77F               	goto	i2l2029
 43541  01371E                     i2l22566:
 43542                           
 43543                           ; BSR set to: 0
 43544                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43545  01371E  EE20 F002          	lfsr	2,2
 43546  013722  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43547  013724  26D9               	addwf	fsr2l,f,c
 43548  013726  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43549  013728  22DA               	addwfc	fsr2h,f,c
 43550  01372A  50DE               	movf	postinc2,w,c
 43551  01372C  10DE               	iorwf	postinc2,w,c
 43552  01372E  10DE               	iorwf	postinc2,w,c
 43553  013730  B4D8               	btfsc	status,2,c
 43554  013732  D013               	goto	i2l2035
 43555                           
 43556                           ; BSR set to: 0
 43557  013734  EE20 F002          	lfsr	2,2
 43558  013738  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43559  01373A  26D9               	addwf	fsr2l,f,c
 43560  01373C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43561  01373E  22DA               	addwfc	fsr2h,f,c
 43562  013740  D801               	call	i2u3280_48
 43563  013742  D020               	goto	i2l2036
 43564  013744                     i2u3280_48:
 43565  013744  0005               	push	
 43566  013746  6EFA               	movwf	pclath,c
 43567  013748  50DE               	movf	postinc2,w,c
 43568  01374A  6EFD               	movwf	tosl,c
 43569  01374C  50DE               	movf	postinc2,w,c
 43570  01374E  6EFE               	movwf	tosh,c
 43571  013750  50DE               	movf	postinc2,w,c
 43572  013752  6EFF               	movwf	tosu,c
 43573  013754  50FA               	movf	pclath,w,c
 43574  013756  0E30               	movlw	48
 43575  013758  0012               	return		;indir
 43576  01375A                     i2l2035:
 43577  01375A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43578  01375E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43579  013762  CFDE F08E          	movff	postinc2,??i2__doprnt
 43580  013766  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43581  01376A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43582  01376E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43583  013772  0E30               	movlw	48
 43584  013774  6EDF               	movwf	indf2,c
 43585  013776  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43586  01377A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43587  01377E  2ADE               	incf	postinc2,f,c
 43588  013780  0E00               	movlw	0
 43589  013782  22DD               	addwfc	postdec2,f,c
 43590  013784                     i2l2036:
 43591                           
 43592                           ;doprnt.c: 1209: exp--;
 43593  013784  0100               	movlb	0	; () banked
 43594  013786  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43595  013788  A0D8               	btfss	status,0,c
 43596  01378A  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43597  01378C                     i2l2033:
 43598                           
 43599                           ; BSR set to: 0
 43600                           
 43601                           ; BSR set to: 0
 43602  01378C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43603  01378E  D005               	goto	i2u3281_40
 43604  013790  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43605  013792  E1C5               	bnz	i2l22566
 43606  013794  059D               	decf	i2__doprnt@exp& (0+255),w,b
 43607  013796  B0D8               	btfsc	status,0,c
 43608  013798  D7C2               	goto	i2l2034
 43609  01379A                     i2u3281_40:
 43610                           
 43611                           ; BSR set to: 0
 43612                           ;doprnt.c: 1210: }
 43613                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 43614                           
 43615                           ; BSR set to: 0
 43616  01379A  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 43617  01379C  D009               	goto	i2l2038
 43618  01379E  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43619  0137A0  E104               	bnz	i2u3282_40
 43620  0137A2  0E09               	movlw	9
 43621  0137A4  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43622  0137A6  A0D8               	btfss	status,0,c
 43623  0137A8  D003               	goto	i2l2038
 43624  0137AA                     i2u3282_40:
 43625                           
 43626                           ; BSR set to: 0
 43627                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 43628  0137AA  0E08               	movlw	8
 43629  0137AC  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43630  0137AE  D002               	goto	i2l2039
 43631  0137B0                     i2l2038:
 43632                           
 43633                           ; BSR set to: 0
 43634                           ;doprnt.c: 1213: else
 43635                           ;doprnt.c: 1214: c = prec;
 43636  0137B0  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 43637  0137B4                     i2l2039:
 43638                           
 43639                           ; BSR set to: 0
 43640                           ;doprnt.c: 1215: prec -= c;
 43641                           
 43642                           ; BSR set to: 0
 43643  0137B4  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43644  0137B6  5FAF               	subwf	i2__doprnt@prec& (0+255),f,b
 43645  0137B8  0E00               	movlw	0
 43646  0137BA  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 43647  0137BC  0EFF               	movlw	255
 43648  0137BE  5BB0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 43649                           
 43650                           ; BSR set to: 0
 43651                           ;doprnt.c: 1219: if(c)
 43652  0137C0  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43653  0137C2  B4D8               	btfsc	status,2,c
 43654  0137C4  D033               	goto	i2l2042
 43655                           
 43656                           ; BSR set to: 0
 43657                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 43658  0137C6  EE20 F002          	lfsr	2,2
 43659  0137CA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43660  0137CC  26D9               	addwf	fsr2l,f,c
 43661  0137CE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43662  0137D0  22DA               	addwfc	fsr2h,f,c
 43663  0137D2  50DE               	movf	postinc2,w,c
 43664  0137D4  10DE               	iorwf	postinc2,w,c
 43665  0137D6  10DE               	iorwf	postinc2,w,c
 43666  0137D8  B4D8               	btfsc	status,2,c
 43667  0137DA  D013               	goto	i2l2041
 43668                           
 43669                           ; BSR set to: 0
 43670  0137DC  EE20 F002          	lfsr	2,2
 43671  0137E0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43672  0137E2  26D9               	addwf	fsr2l,f,c
 43673  0137E4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43674  0137E6  22DA               	addwfc	fsr2h,f,c
 43675  0137E8  D801               	call	i2u3285_48
 43676  0137EA  D020               	goto	i2l2042
 43677  0137EC                     i2u3285_48:
 43678  0137EC  0005               	push	
 43679  0137EE  6EFA               	movwf	pclath,c
 43680  0137F0  50DE               	movf	postinc2,w,c
 43681  0137F2  6EFD               	movwf	tosl,c
 43682  0137F4  50DE               	movf	postinc2,w,c
 43683  0137F6  6EFE               	movwf	tosh,c
 43684  0137F8  50DE               	movf	postinc2,w,c
 43685  0137FA  6EFF               	movwf	tosu,c
 43686  0137FC  50FA               	movf	pclath,w,c
 43687  0137FE  0E2E               	movlw	46
 43688  013800  0012               	return		;indir
 43689  013802                     i2l2041:
 43690  013802  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43691  013806  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43692  01380A  CFDE F08E          	movff	postinc2,??i2__doprnt
 43693  01380E  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43694  013812  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43695  013816  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43696  01381A  0E2E               	movlw	46
 43697  01381C  6EDF               	movwf	indf2,c
 43698  01381E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43699  013822  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43700  013826  2ADE               	incf	postinc2,f,c
 43701  013828  0E00               	movlw	0
 43702  01382A  22DD               	addwfc	postdec2,f,c
 43703  01382C                     i2l2042:
 43704                           
 43705                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 43706  01382C  0100               	movlb	0	; () banked
 43707  01382E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43708  013830  ECF0  F0A7         	call	i2_scale
 43709  013834  C049  F094         	movff	?i2_scale,i2__doprnt$5409
 43710  013838  C04A  F095         	movff	?i2_scale+1,i2__doprnt$5409+1
 43711  01383C  C04B  F096         	movff	?i2_scale+2,i2__doprnt$5409+2
 43712  013840  C04C  F097         	movff	?i2_scale+3,i2__doprnt$5409+3
 43713                           
 43714                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 43715  013844  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 43716  013848  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 43717  01384C  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 43718  013850  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 43719  013854  C094  F030         	movff	i2__doprnt$5409,i2___flmul@b
 43720  013858  C095  F031         	movff	i2__doprnt$5409+1,i2___flmul@b+1
 43721  01385C  C096  F032         	movff	i2__doprnt$5409+2,i2___flmul@b+2
 43722  013860  C097  F033         	movff	i2__doprnt$5409+3,i2___flmul@b+3
 43723  013864  EC8D  F0AD         	call	i2___flmul	;wreg free
 43724  013868  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 43725  01386C  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 43726  013870  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 43727  013874  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 43728  013878  EC77  F0C9         	call	i2___fltol	;wreg free
 43729  01387C  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 43730  013880  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 43731  013884  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 43732  013888  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 43733                           
 43734                           ;doprnt.c: 1228: while(c--) {
 43735  01388C  D0A5               	goto	i2l2043
 43736  01388E                     
 43737                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 43738  01388E  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43739  013892  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43740  013896  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43741  01389A  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43742  01389E  0100               	movlb	0	; () banked
 43743  0138A0  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43744  0138A2  0D04               	mullw	4
 43745  0138A4  0E0F               	movlw	low _dpowers
 43746  0138A6  24F3               	addwf	prodl,w,c
 43747  0138A8  6EF6               	movwf	tblptrl,c
 43748  0138AA  0ECF               	movlw	high _dpowers
 43749  0138AC  20F4               	addwfc	prodh,w,c
 43750  0138AE  6EF7               	movwf	tblptrh,c
 43751  0138B0                     	if	1	;There are 3 active tblptr bytes
 43752  0138B0  6AF8               	clrf	tblptru,c
 43753  0138B2  0E00               	movlw	low (__mediumconst shr (0+16))
 43754  0138B4  22F8               	addwfc	tblptru,f,c
 43755  0138B6                     	endif
 43756  0138B6  0009               	tblrd		*+
 43757  0138B8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43758  0138BC  0009               	tblrd		*+
 43759  0138BE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43760  0138C2  0009               	tblrd		*+
 43761  0138C4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43762  0138C8  000A               	tblrd		*-
 43763  0138CA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43764  0138CE  EC33  F0CE         	call	i2___lldiv	;wreg free
 43765  0138D2  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 43766  0138D6  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 43767  0138DA  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 43768  0138DE  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 43769                           
 43770                           ;doprnt.c: 1230: tmpval.vd %= 10;
 43771  0138E2  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 43772  0138E6  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 43773  0138EA  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 43774  0138EE  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 43775  0138F2  0E0A               	movlw	10
 43776  0138F4  6E12               	movwf	i2___llmod@divisor,c
 43777  0138F6  0E00               	movlw	0
 43778  0138F8  6E13               	movwf	i2___llmod@divisor+1,c
 43779  0138FA  0E00               	movlw	0
 43780  0138FC  6E14               	movwf	i2___llmod@divisor+2,c
 43781  0138FE  0E00               	movlw	0
 43782  013900  6E15               	movwf	i2___llmod@divisor+3,c
 43783  013902  EC68  F0D0         	call	i2___llmod	;wreg free
 43784  013906  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 43785  01390A  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 43786  01390E  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 43787  013912  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 43788                           
 43789                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 43790  013916  0100               	movlb	0	; () banked
 43791  013918  EE20 F002          	lfsr	2,2
 43792  01391C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43793  01391E  26D9               	addwf	fsr2l,f,c
 43794  013920  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43795  013922  22DA               	addwfc	fsr2h,f,c
 43796  013924  50DE               	movf	postinc2,w,c
 43797  013926  10DE               	iorwf	postinc2,w,c
 43798  013928  10DE               	iorwf	postinc2,w,c
 43799  01392A  B4D8               	btfsc	status,2,c
 43800  01392C  D014               	goto	i2l2045
 43801                           
 43802                           ; BSR set to: 0
 43803  01392E  EE20 F002          	lfsr	2,2
 43804  013932  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43805  013934  26D9               	addwf	fsr2l,f,c
 43806  013936  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43807  013938  22DA               	addwfc	fsr2h,f,c
 43808  01393A  D801               	call	i2u3287_48
 43809  01393C  D023               	goto	i2l2046
 43810  01393E                     i2u3287_48:
 43811  01393E  0005               	push	
 43812  013940  6EFA               	movwf	pclath,c
 43813  013942  50DE               	movf	postinc2,w,c
 43814  013944  6EFD               	movwf	tosl,c
 43815  013946  50DE               	movf	postinc2,w,c
 43816  013948  6EFE               	movwf	tosh,c
 43817  01394A  50DE               	movf	postinc2,w,c
 43818  01394C  6EFF               	movwf	tosu,c
 43819  01394E  50FA               	movf	pclath,w,c
 43820  013950  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43821  013952  0F30               	addlw	48
 43822  013954  0012               	return		;indir
 43823  013956                     i2l2045:
 43824  013956  0100               	movlb	0	; () banked
 43825  013958  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43826  01395A  0F30               	addlw	48
 43827  01395C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43828  013960  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43829  013964  CFDE F08E          	movff	postinc2,??i2__doprnt
 43830  013968  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43831  01396C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43832  013970  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43833  013974  6EDF               	movwf	indf2,c
 43834  013976  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43835  01397A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43836  01397E  2ADE               	incf	postinc2,f,c
 43837  013980  0E00               	movlw	0
 43838  013982  22DD               	addwfc	postdec2,f,c
 43839  013984                     i2l2046:
 43840                           
 43841                           ;doprnt.c: 1232: val %= dpowers[c];
 43842                           
 43843                           ; BSR set to: 0
 43844  013984  C0A7  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 43845  013988  C0A8  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 43846  01398C  C0A9  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 43847  013990  C0AA  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 43848  013994  0100               	movlb	0	; () banked
 43849  013996  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43850  013998  0D04               	mullw	4
 43851  01399A  0E0F               	movlw	low _dpowers
 43852  01399C  24F3               	addwf	prodl,w,c
 43853  01399E  6EF6               	movwf	tblptrl,c
 43854  0139A0  0ECF               	movlw	high _dpowers
 43855  0139A2  20F4               	addwfc	prodh,w,c
 43856  0139A4  6EF7               	movwf	tblptrh,c
 43857  0139A6                     	if	1	;There are 3 active tblptr bytes
 43858  0139A6  6AF8               	clrf	tblptru,c
 43859  0139A8  0E00               	movlw	low (__mediumconst shr (0+16))
 43860  0139AA  22F8               	addwfc	tblptru,f,c
 43861  0139AC                     	endif
 43862  0139AC  0009               	tblrd		*+
 43863  0139AE  CFF5 F012          	movff	tablat,i2___llmod@divisor
 43864  0139B2  0009               	tblrd		*+
 43865  0139B4  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 43866  0139B8  0009               	tblrd		*+
 43867  0139BA  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 43868  0139BE  000A               	tblrd		*-
 43869  0139C0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 43870  0139C4  EC68  F0D0         	call	i2___llmod
 43871  0139C8  C00E  F0A7         	movff	?i2___llmod,i2__doprnt@val
 43872  0139CC  C00F  F0A8         	movff	?i2___llmod+1,i2__doprnt@val+1
 43873  0139D0  C010  F0A9         	movff	?i2___llmod+2,i2__doprnt@val+2
 43874  0139D4  C011  F0AA         	movff	?i2___llmod+3,i2__doprnt@val+3
 43875  0139D8                     i2l2043:
 43876  0139D8  0100               	movlb	0	; () banked
 43877  0139DA  07B1               	decf	i2__doprnt@c& (0+255),f,b
 43878  0139DC  29B1               	incf	i2__doprnt@c& (0+255),w,b
 43879  0139DE  B4D8               	btfsc	status,2,c
 43880  0139E0  D038               	goto	i2l2048
 43881  0139E2  D755               	goto	i2l2044
 43882  0139E4                     
 43883                           ; BSR set to: 0
 43884                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43885                           
 43886                           ; BSR set to: 0
 43887  0139E4  EE20 F002          	lfsr	2,2
 43888  0139E8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43889  0139EA  26D9               	addwf	fsr2l,f,c
 43890  0139EC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43891  0139EE  22DA               	addwfc	fsr2h,f,c
 43892  0139F0  50DE               	movf	postinc2,w,c
 43893  0139F2  10DE               	iorwf	postinc2,w,c
 43894  0139F4  10DE               	iorwf	postinc2,w,c
 43895  0139F6  B4D8               	btfsc	status,2,c
 43896  0139F8  D013               	goto	i2l2050
 43897                           
 43898                           ; BSR set to: 0
 43899  0139FA  EE20 F002          	lfsr	2,2
 43900  0139FE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43901  013A00  26D9               	addwf	fsr2l,f,c
 43902  013A02  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43903  013A04  22DA               	addwfc	fsr2h,f,c
 43904  013A06  D801               	call	i2u3290_48
 43905  013A08  D020               	goto	i2l2051
 43906  013A0A                     i2u3290_48:
 43907  013A0A  0005               	push	
 43908  013A0C  6EFA               	movwf	pclath,c
 43909  013A0E  50DE               	movf	postinc2,w,c
 43910  013A10  6EFD               	movwf	tosl,c
 43911  013A12  50DE               	movf	postinc2,w,c
 43912  013A14  6EFE               	movwf	tosh,c
 43913  013A16  50DE               	movf	postinc2,w,c
 43914  013A18  6EFF               	movwf	tosu,c
 43915  013A1A  50FA               	movf	pclath,w,c
 43916  013A1C  0E30               	movlw	48
 43917  013A1E  0012               	return		;indir
 43918  013A20                     i2l2050:
 43919  013A20  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43920  013A24  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43921  013A28  CFDE F08E          	movff	postinc2,??i2__doprnt
 43922  013A2C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43923  013A30  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43924  013A34  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43925  013A38  0E30               	movlw	48
 43926  013A3A  6EDF               	movwf	indf2,c
 43927  013A3C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43928  013A40  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43929  013A44  2ADE               	incf	postinc2,f,c
 43930  013A46  0E00               	movlw	0
 43931  013A48  22DD               	addwfc	postdec2,f,c
 43932  013A4A                     i2l2051:
 43933                           
 43934                           ;doprnt.c: 1237: prec--;
 43935  013A4A  0100               	movlb	0	; () banked
 43936  013A4C  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 43937  013A4E  A0D8               	btfss	status,0,c
 43938  013A50  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 43939  013A52                     i2l2048:
 43940                           
 43941                           ; BSR set to: 0
 43942                           
 43943                           ; BSR set to: 0
 43944  013A52  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43945  013A54  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43946  013A56  B4D8               	btfsc	status,2,c
 43947  013A58  D2EC               	goto	i2u3328_40
 43948  013A5A  D7C4               	goto	i2l2049
 43949  013A5C                     i2l1986:
 43950                           
 43951                           ; BSR set to: 0
 43952                           ;doprnt.c: 1246: }
 43953                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 43954                           
 43955                           ; BSR set to: 0
 43956  013A5C  0EC0               	movlw	192
 43957  013A5E  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43958  013A60  6F8E               	movwf	??i2__doprnt& (0+255),b
 43959  013A62  0E00               	movlw	0
 43960  013A64  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43961  013A66  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43962  013A68  518E               	movf	??i2__doprnt& (0+255),w,b
 43963  013A6A  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43964  013A6C  A4D8               	btfss	status,2,c
 43965  013A6E  D041               	goto	i2l2053
 43966                           
 43967                           ; BSR set to: 0
 43968                           ;doprnt.c: 1253: {
 43969                           ;doprnt.c: 1255: if(flag & 0x10)
 43970  013A70  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 43971  013A72  D019               	goto	i2l2054
 43972                           
 43973                           ; BSR set to: 0
 43974                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 43975  013A74  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43976  013A78  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43977  013A7C  CFDF F08E          	movff	indf2,??i2__doprnt
 43978  013A80  0E04               	movlw	4
 43979  013A82  26DE               	addwf	postinc2,f,c
 43980  013A84  CFDF F08F          	movff	indf2,??i2__doprnt+1
 43981  013A88  0E00               	movlw	0
 43982  013A8A  22DD               	addwfc	postdec2,f,c
 43983  013A8C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43984  013A90  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43985  013A94  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 43986  013A98  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 43987  013A9C  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 43988  013AA0  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 43989  013AA4  D019               	goto	i2l2055
 43990  013AA6                     i2l2054:
 43991                           
 43992                           ; BSR set to: 0
 43993                           ;doprnt.c: 1257: else
 43994                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 43995                           
 43996                           ; BSR set to: 0
 43997  013AA6  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 43998  013AAA  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 43999  013AAE  CFDF F08E          	movff	indf2,??i2__doprnt
 44000  013AB2  0E02               	movlw	2
 44001  013AB4  26DE               	addwf	postinc2,f,c
 44002  013AB6  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44003  013ABA  0E00               	movlw	0
 44004  013ABC  22DD               	addwfc	postdec2,f,c
 44005  013ABE  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44006  013AC2  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44007  013AC6  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44008  013ACA  CFDD F0A8          	movff	postdec2,i2__doprnt@val+1
 44009  013ACE  0E00               	movlw	0
 44010  013AD0  BFA8               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 44011  013AD2  0EFF               	movlw	-1
 44012  013AD4  6FA9               	movwf	(i2__doprnt@val+2)& (0+255),b
 44013  013AD6  6FAA               	movwf	(i2__doprnt@val+3)& (0+255),b
 44014  013AD8                     i2l2055:
 44015                           
 44016                           ; BSR set to: 0
 44017                           ;doprnt.c: 1261: if((long)val < 0) {
 44018                           
 44019                           ; BSR set to: 0
 44020  013AD8  AFAA               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 44021  013ADA  D040               	goto	i2l2059
 44022                           
 44023                           ; BSR set to: 0
 44024                           ;doprnt.c: 1262: flag |= 0x03;
 44025  013ADC  0E03               	movlw	3
 44026  013ADE  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 44027                           
 44028                           ; BSR set to: 0
 44029                           ;doprnt.c: 1263: val = -val;
 44030  013AE0  1FAA               	comf	(i2__doprnt@val+3)& (0+255),f,b
 44031  013AE2  1FA9               	comf	(i2__doprnt@val+2)& (0+255),f,b
 44032  013AE4  1FA8               	comf	(i2__doprnt@val+1)& (0+255),f,b
 44033  013AE6  6DA7               	negf	i2__doprnt@val& (0+255),b
 44034  013AE8  0E00               	movlw	0
 44035  013AEA  23A8               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 44036  013AEC  23A9               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 44037  013AEE  23AA               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 44038                           
 44039                           ; BSR set to: 0
 44040                           ;doprnt.c: 1264: }
 44041                           ;doprnt.c: 1266: }
 44042  013AF0  D035               	goto	i2l2059
 44043  013AF2                     i2l2053:
 44044                           
 44045                           ; BSR set to: 0
 44046                           ;doprnt.c: 1268: else
 44047                           ;doprnt.c: 1273: {
 44048                           ;doprnt.c: 1281: if(flag & 0x10)
 44049  013AF2  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 44050  013AF4  D019               	goto	i2l2058
 44051                           
 44052                           ; BSR set to: 0
 44053                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 44054  013AF6  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44055  013AFA  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44056  013AFE  CFDF F08E          	movff	indf2,??i2__doprnt
 44057  013B02  0E04               	movlw	4
 44058  013B04  26DE               	addwf	postinc2,f,c
 44059  013B06  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44060  013B0A  0E00               	movlw	0
 44061  013B0C  22DD               	addwfc	postdec2,f,c
 44062  013B0E  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44063  013B12  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44064  013B16  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44065  013B1A  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 44066  013B1E  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 44067  013B22  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 44068  013B26  D01A               	goto	i2l2059
 44069  013B28                     i2l2058:
 44070                           
 44071                           ; BSR set to: 0
 44072                           ;doprnt.c: 1283: else
 44073                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 44074                           
 44075                           ; BSR set to: 0
 44076  013B28  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44077  013B2C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44078  013B30  CFDF F08E          	movff	indf2,??i2__doprnt
 44079  013B34  0E02               	movlw	2
 44080  013B36  26DE               	addwf	postinc2,f,c
 44081  013B38  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44082  013B3C  0E00               	movlw	0
 44083  013B3E  22DD               	addwfc	postdec2,f,c
 44084  013B40  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44085  013B44  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44086  013B48  CFDE F090          	movff	postinc2,??i2__doprnt+2
 44087  013B4C  CFDD F091          	movff	postdec2,??i2__doprnt+3
 44088  013B50  C090  F0A7         	movff	??i2__doprnt+2,i2__doprnt@val
 44089  013B54  C091  F0A8         	movff	??i2__doprnt+3,i2__doprnt@val+1
 44090  013B58  6BA9               	clrf	(i2__doprnt@val+2)& (0+255),b
 44091  013B5A  6BAA               	clrf	(i2__doprnt@val+3)& (0+255),b
 44092  013B5C                     i2l2059:
 44093                           
 44094                           ; BSR set to: 0
 44095                           ;doprnt.c: 1287: }
 44096                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 44097                           
 44098                           ; BSR set to: 0
 44099                           
 44100                           ; BSR set to: 0
 44101  013B5C  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44102  013B5E  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 44103  013B60  A4D8               	btfss	status,2,c
 44104  013B62  D04B               	goto	i2l2061
 44105                           
 44106                           ; BSR set to: 0
 44107  013B64  51A7               	movf	i2__doprnt@val& (0+255),w,b
 44108  013B66  11A8               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 44109  013B68  11A9               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 44110  013B6A  11AA               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 44111  013B6C  A4D8               	btfss	status,2,c
 44112  013B6E  D045               	goto	i2l2061
 44113                           
 44114                           ; BSR set to: 0
 44115                           ;doprnt.c: 1291: prec++;
 44116  013B70  4BAF               	infsnz	i2__doprnt@prec& (0+255),f,b
 44117  013B72  2BB0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 44118                           
 44119                           ; BSR set to: 0
 44120                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 44121  013B74  D042               	goto	i2l2061
 44122  013B76                     
 44123                           ; BSR set to: 0
 44124                           ;doprnt.c: 1302: case 0xC0:
 44125                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 44126                           
 44127                           ; BSR set to: 0
 44128                           
 44129                           ; BSR set to: 0
 44130  013B76  0E01               	movlw	1
 44131  013B78  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44132  013B7A                     i2l22650:
 44133                           
 44134                           ; BSR set to: 0
 44135  013B7A  0E0A               	movlw	10
 44136  013B7C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 44137  013B7E  B4D8               	btfsc	status,2,c
 44138  013B80  D047               	goto	i2l2067
 44139                           
 44140                           ; BSR set to: 0
 44141                           ;doprnt.c: 1306: if(val < dpowers[c])
 44142                           
 44143                           ; BSR set to: 0
 44144                           
 44145                           ; BSR set to: 0
 44146  013B82  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44147  013B84  0D04               	mullw	4
 44148  013B86  0E0F               	movlw	low _dpowers
 44149  013B88  24F3               	addwf	prodl,w,c
 44150  013B8A  6EF6               	movwf	tblptrl,c
 44151  013B8C  0ECF               	movlw	high _dpowers
 44152  013B8E  20F4               	addwfc	prodh,w,c
 44153  013B90  6EF7               	movwf	tblptrh,c
 44154  013B92                     	if	1	;There are 3 active tblptr bytes
 44155  013B92  6AF8               	clrf	tblptru,c
 44156  013B94  0E00               	movlw	low (__mediumconst shr (0+16))
 44157  013B96  22F8               	addwfc	tblptru,f,c
 44158  013B98                     	endif
 44159  013B98  0009               	tblrd		*+
 44160  013B9A  50F5               	movf	tablat,w,c
 44161  013B9C  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 44162  013B9E  0009               	tblrd		*+
 44163  013BA0  50F5               	movf	tablat,w,c
 44164  013BA2  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 44165  013BA4  0009               	tblrd		*+
 44166  013BA6  50F5               	movf	tablat,w,c
 44167  013BA8  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 44168  013BAA  0009               	tblrd		*+
 44169  013BAC  50F5               	movf	tablat,w,c
 44170  013BAE  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 44171  013BB0  A0D8               	btfss	status,0,c
 44172  013BB2  D02E               	goto	i2l2067
 44173                           
 44174                           ; BSR set to: 0
 44175                           
 44176                           ; BSR set to: 0
 44177                           
 44178                           ; BSR set to: 0
 44179                           ;doprnt.c: 1307: break;
 44180  013BB4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 44181  013BB6  D7E1               	goto	i2l22650
 44182  013BB8                     
 44183                           ; BSR set to: 0
 44184                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 44185                           
 44186                           ; BSR set to: 0
 44187  013BB8  0E01               	movlw	1
 44188  013BBA  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44189  013BBC                     i2l22664:
 44190                           
 44191                           ; BSR set to: 0
 44192  013BBC  0E08               	movlw	8
 44193  013BBE  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 44194  013BC0  B4D8               	btfsc	status,2,c
 44195  013BC2  D026               	goto	i2l2067
 44196                           
 44197                           ; BSR set to: 0
 44198                           ;doprnt.c: 1317: if(val < hexpowers[c])
 44199                           
 44200                           ; BSR set to: 0
 44201                           
 44202                           ; BSR set to: 0
 44203  013BC4  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44204  013BC6  0D04               	mullw	4
 44205  013BC8  0E37               	movlw	low _hexpowers
 44206  013BCA  24F3               	addwf	prodl,w,c
 44207  013BCC  6EF6               	movwf	tblptrl,c
 44208  013BCE  0ECF               	movlw	high _hexpowers
 44209  013BD0  20F4               	addwfc	prodh,w,c
 44210  013BD2  6EF7               	movwf	tblptrh,c
 44211  013BD4                     	if	1	;There are 3 active tblptr bytes
 44212  013BD4  6AF8               	clrf	tblptru,c
 44213  013BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 44214  013BD8  22F8               	addwfc	tblptru,f,c
 44215  013BDA                     	endif
 44216  013BDA  0009               	tblrd		*+
 44217  013BDC  50F5               	movf	tablat,w,c
 44218  013BDE  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 44219  013BE0  0009               	tblrd		*+
 44220  013BE2  50F5               	movf	tablat,w,c
 44221  013BE4  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 44222  013BE6  0009               	tblrd		*+
 44223  013BE8  50F5               	movf	tablat,w,c
 44224  013BEA  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 44225  013BEC  0009               	tblrd		*+
 44226  013BEE  50F5               	movf	tablat,w,c
 44227  013BF0  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 44228  013BF2  A0D8               	btfss	status,0,c
 44229  013BF4  D00D               	goto	i2l2067
 44230                           
 44231                           ; BSR set to: 0
 44232                           
 44233                           ; BSR set to: 0
 44234                           
 44235                           ; BSR set to: 0
 44236                           ;doprnt.c: 1318: break;
 44237  013BF6  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 44238  013BF8  D7E1               	goto	i2l22664
 44239  013BFA                     i2l2061:
 44240                           
 44241                           ; BSR set to: 0
 44242                           
 44243                           ; BSR set to: 0
 44244  013BFA  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 44245  013BFC  0BC0               	andlw	192
 44246                           
 44247                           ; Switch size 1, requested type "space"
 44248                           ; Number of cases is 3, Range of values is 0 to 192
 44249                           ; switch strategies available:
 44250                           ; Name         Instructions Cycles
 44251                           ; simple_byte           10     6 (average)
 44252                           ;	Chosen strategy is simple_byte
 44253  013BFE  0A00               	xorlw	0	; case 0
 44254  013C00  B4D8               	btfsc	status,2,c
 44255  013C02  D7B9               	goto	i2l2062
 44256  013C04  0A80               	xorlw	128	; case 128
 44257  013C06  B4D8               	btfsc	status,2,c
 44258  013C08  D7D7               	goto	i2l2068
 44259  013C0A  0A40               	xorlw	64	; case 192
 44260  013C0C  B4D8               	btfsc	status,2,c
 44261  013C0E  D7B3               	goto	i2l2062
 44262  013C10                     i2l2067:
 44263                           
 44264                           ; BSR set to: 0
 44265                           ;doprnt.c: 1339: if(c < prec)
 44266                           
 44267                           ; BSR set to: 0
 44268  013C10  0E80               	movlw	128
 44269  013C12  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44270  013C14  0E7F               	movlw	127
 44271  013C16  6F8E               	movwf	??i2__doprnt& (0+255),b
 44272  013C18  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44273  013C1A  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44274  013C1C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44275  013C1E  0A80               	xorlw	128
 44276  013C20  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44277  013C22  B0D8               	btfsc	status,0,c
 44278  013C24  D003               	goto	i2l2072
 44279                           
 44280                           ; BSR set to: 0
 44281                           ;doprnt.c: 1340: c = prec;
 44282  013C26  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 44283  013C2A  D010               	goto	i2l2074
 44284  013C2C                     i2l2072:
 44285                           
 44286                           ; BSR set to: 0
 44287                           ;doprnt.c: 1341: else if(prec < c)
 44288                           
 44289                           ; BSR set to: 0
 44290  013C2C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44291  013C2E  0A80               	xorlw	128
 44292  013C30  6F8E               	movwf	??i2__doprnt& (0+255),b
 44293  013C32  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44294  013C34  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44295  013C36  0E80               	movlw	128
 44296  013C38  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44297  013C3A  0E7F               	movlw	127
 44298  013C3C  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44299  013C3E  B0D8               	btfsc	status,0,c
 44300  013C40  D005               	goto	i2l2074
 44301                           
 44302                           ; BSR set to: 0
 44303                           ;doprnt.c: 1342: prec = c;
 44304  013C42  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44305  013C44  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 44306  013C46  6BB0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 44307  013C48  BFAF               	btfsc	i2__doprnt@prec& (0+255),7,b
 44308  013C4A  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44309  013C4C                     i2l2074:
 44310                           
 44311                           ; BSR set to: 0
 44312                           ;doprnt.c: 1345: if(width && flag & 0x03)
 44313                           
 44314                           ; BSR set to: 0
 44315                           
 44316                           ; BSR set to: 0
 44317  013C4C  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44318  013C4E  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44319  013C50  B4D8               	btfsc	status,2,c
 44320  013C52  D00D               	goto	i2l2075
 44321                           
 44322                           ; BSR set to: 0
 44323  013C54  0E03               	movlw	3
 44324  013C56  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44325  013C58  6F8E               	movwf	??i2__doprnt& (0+255),b
 44326  013C5A  0E00               	movlw	0
 44327  013C5C  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44328  013C5E  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44329  013C60  518E               	movf	??i2__doprnt& (0+255),w,b
 44330  013C62  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44331  013C64  B4D8               	btfsc	status,2,c
 44332  013C66  D003               	goto	i2l2075
 44333                           
 44334                           ; BSR set to: 0
 44335                           ;doprnt.c: 1346: width--;
 44336  013C68  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44337  013C6A  A0D8               	btfss	status,0,c
 44338  013C6C  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44339  013C6E                     i2l2075:
 44340                           
 44341                           ; BSR set to: 0
 44342                           ;doprnt.c: 1348: if(flag & 0x4000) {
 44343                           
 44344                           ; BSR set to: 0
 44345  013C6E  ADAE               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 44346  013C70  D013               	goto	i2l2078
 44347                           
 44348                           ; BSR set to: 0
 44349                           ;doprnt.c: 1349: if(width > prec)
 44350  013C72  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44351  013C74  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44352  013C76  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44353  013C78  0A80               	xorlw	128
 44354  013C7A  6F8E               	movwf	??i2__doprnt& (0+255),b
 44355  013C7C  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44356  013C7E  0A80               	xorlw	128
 44357  013C80  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44358  013C82  B0D8               	btfsc	status,0,c
 44359  013C84  D005               	goto	i2l2077
 44360                           
 44361                           ; BSR set to: 0
 44362                           ;doprnt.c: 1350: width -= prec;
 44363  013C86  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44364  013C88  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44365  013C8A  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44366  013C8C  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44367  013C8E  D004               	goto	i2l2078
 44368  013C90                     i2l2077:
 44369                           
 44370                           ; BSR set to: 0
 44371                           ;doprnt.c: 1351: else
 44372                           ;doprnt.c: 1352: width = 0;
 44373                           
 44374                           ; BSR set to: 0
 44375  013C90  0E00               	movlw	0
 44376  013C92  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44377  013C94  0E00               	movlw	0
 44378  013C96  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44379  013C98                     i2l2078:
 44380                           
 44381                           ; BSR set to: 0
 44382                           ;doprnt.c: 1353: }
 44383                           ;doprnt.c: 1381: if(width > c)
 44384                           
 44385                           ; BSR set to: 0
 44386                           
 44387                           ; BSR set to: 0
 44388  013C98  0E80               	movlw	128
 44389  013C9A  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44390  013C9C  0E7F               	movlw	127
 44391  013C9E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44392  013CA0  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44393  013CA2  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44394  013CA4  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44395  013CA6  0A80               	xorlw	128
 44396  013CA8  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44397  013CAA  B0D8               	btfsc	status,0,c
 44398  013CAC  D007               	goto	i2l2079
 44399                           
 44400                           ; BSR set to: 0
 44401                           ;doprnt.c: 1382: width -= c;
 44402  013CAE  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44403  013CB0  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44404  013CB2  0E00               	movlw	0
 44405  013CB4  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44406  013CB6  0EFF               	movlw	255
 44407  013CB8  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44408  013CBA  D004               	goto	i2l2080
 44409  013CBC                     i2l2079:
 44410                           
 44411                           ; BSR set to: 0
 44412                           ;doprnt.c: 1383: else
 44413                           ;doprnt.c: 1384: width = 0;
 44414                           
 44415                           ; BSR set to: 0
 44416  013CBC  0E00               	movlw	0
 44417  013CBE  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44418  013CC0  0E00               	movlw	0
 44419  013CC2  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44420  013CC4                     i2l2080:
 44421                           
 44422                           ; BSR set to: 0
 44423                           ;doprnt.c: 1387: if(flag & 0x04) {
 44424                           
 44425                           ; BSR set to: 0
 44426  013CC4  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 44427  013CC6  D07A               	goto	i2l2081
 44428                           
 44429                           ; BSR set to: 0
 44430                           ;doprnt.c: 1392: if(flag & 0x03)
 44431  013CC8  0E03               	movlw	3
 44432  013CCA  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44433  013CCC  6F8E               	movwf	??i2__doprnt& (0+255),b
 44434  013CCE  0E00               	movlw	0
 44435  013CD0  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44436  013CD2  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44437  013CD4  518E               	movf	??i2__doprnt& (0+255),w,b
 44438  013CD6  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44439  013CD8  B4D8               	btfsc	status,2,c
 44440  013CDA  D033               	goto	i2l2084
 44441                           
 44442                           ; BSR set to: 0
 44443                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44444  013CDC  EE20 F002          	lfsr	2,2
 44445  013CE0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44446  013CE2  26D9               	addwf	fsr2l,f,c
 44447  013CE4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44448  013CE6  22DA               	addwfc	fsr2h,f,c
 44449  013CE8  50DE               	movf	postinc2,w,c
 44450  013CEA  10DE               	iorwf	postinc2,w,c
 44451  013CEC  10DE               	iorwf	postinc2,w,c
 44452  013CEE  B4D8               	btfsc	status,2,c
 44453  013CF0  D013               	goto	i2l2083
 44454                           
 44455                           ; BSR set to: 0
 44456  013CF2  EE20 F002          	lfsr	2,2
 44457  013CF6  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44458  013CF8  26D9               	addwf	fsr2l,f,c
 44459  013CFA  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44460  013CFC  22DA               	addwfc	fsr2h,f,c
 44461  013CFE  D801               	call	i2u3314_48
 44462  013D00  D020               	goto	i2l2084
 44463  013D02                     i2u3314_48:
 44464  013D02  0005               	push	
 44465  013D04  6EFA               	movwf	pclath,c
 44466  013D06  50DE               	movf	postinc2,w,c
 44467  013D08  6EFD               	movwf	tosl,c
 44468  013D0A  50DE               	movf	postinc2,w,c
 44469  013D0C  6EFE               	movwf	tosh,c
 44470  013D0E  50DE               	movf	postinc2,w,c
 44471  013D10  6EFF               	movwf	tosu,c
 44472  013D12  50FA               	movf	pclath,w,c
 44473  013D14  0E2D               	movlw	45
 44474  013D16  0012               	return		;indir
 44475  013D18                     i2l2083:
 44476  013D18  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44477  013D1C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44478  013D20  CFDE F08E          	movff	postinc2,??i2__doprnt
 44479  013D24  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44480  013D28  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44481  013D2C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44482  013D30  0E2D               	movlw	45
 44483  013D32  6EDF               	movwf	indf2,c
 44484  013D34  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44485  013D38  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44486  013D3C  2ADE               	incf	postinc2,f,c
 44487  013D3E  0E00               	movlw	0
 44488  013D40  22DD               	addwfc	postdec2,f,c
 44489  013D42                     i2l2084:
 44490                           
 44491                           ;doprnt.c: 1415: if(width)
 44492  013D42  0100               	movlb	0	; () banked
 44493  013D44  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44494  013D46  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44495  013D48  B4D8               	btfsc	status,2,c
 44496  013D4A  D16A               	goto	i2l2107
 44497                           
 44498                           ; BSR set to: 0
 44499                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 44500                           
 44501                           ; BSR set to: 0
 44502                           
 44503                           ;doprnt.c: 1416: do
 44504  013D4C  EE20 F002          	lfsr	2,2
 44505  013D50  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44506  013D52  26D9               	addwf	fsr2l,f,c
 44507  013D54  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44508  013D56  22DA               	addwfc	fsr2h,f,c
 44509  013D58  50DE               	movf	postinc2,w,c
 44510  013D5A  10DE               	iorwf	postinc2,w,c
 44511  013D5C  10DE               	iorwf	postinc2,w,c
 44512  013D5E  B4D8               	btfsc	status,2,c
 44513  013D60  D013               	goto	i2l2087
 44514                           
 44515                           ; BSR set to: 0
 44516  013D62  EE20 F002          	lfsr	2,2
 44517  013D66  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44518  013D68  26D9               	addwf	fsr2l,f,c
 44519  013D6A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44520  013D6C  22DA               	addwfc	fsr2h,f,c
 44521  013D6E  D801               	call	i2u3317_48
 44522  013D70  D020               	goto	i2l2088
 44523  013D72                     i2u3317_48:
 44524  013D72  0005               	push	
 44525  013D74  6EFA               	movwf	pclath,c
 44526  013D76  50DE               	movf	postinc2,w,c
 44527  013D78  6EFD               	movwf	tosl,c
 44528  013D7A  50DE               	movf	postinc2,w,c
 44529  013D7C  6EFE               	movwf	tosh,c
 44530  013D7E  50DE               	movf	postinc2,w,c
 44531  013D80  6EFF               	movwf	tosu,c
 44532  013D82  50FA               	movf	pclath,w,c
 44533  013D84  0E30               	movlw	48
 44534  013D86  0012               	return		;indir
 44535  013D88                     i2l2087:
 44536  013D88  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44537  013D8C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44538  013D90  CFDE F08E          	movff	postinc2,??i2__doprnt
 44539  013D94  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44540  013D98  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44541  013D9C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44542  013DA0  0E30               	movlw	48
 44543  013DA2  6EDF               	movwf	indf2,c
 44544  013DA4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44545  013DA8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44546  013DAC  2ADE               	incf	postinc2,f,c
 44547  013DAE  0E00               	movlw	0
 44548  013DB0  22DD               	addwfc	postdec2,f,c
 44549  013DB2                     i2l2088:
 44550                           
 44551                           ;doprnt.c: 1418: while(--width);
 44552  013DB2  0100               	movlb	0	; () banked
 44553  013DB4  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44554  013DB6  A0D8               	btfss	status,0,c
 44555  013DB8  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44556  013DBA  D7C4               	goto	L34
 44557  013DBC                     i2l2081:
 44558                           
 44559                           ; BSR set to: 0
 44560                           ;doprnt.c: 1422: {
 44561                           ;doprnt.c: 1424: if(width
 44562                           ;doprnt.c: 1428: )
 44563                           
 44564                           ; BSR set to: 0
 44565  013DBC  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44566  013DBE  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44567  013DC0  B4D8               	btfsc	status,2,c
 44568  013DC2  D03B               	goto	i2u3322_40
 44569  013DC4                     i2u3319_40:
 44570                           
 44571                           ; BSR set to: 0
 44572                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 44573                           
 44574                           ; BSR set to: 0
 44575                           
 44576                           ;doprnt.c: 1429: do
 44577  013DC4  EE20 F002          	lfsr	2,2
 44578  013DC8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44579  013DCA  26D9               	addwf	fsr2l,f,c
 44580  013DCC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44581  013DCE  22DA               	addwfc	fsr2h,f,c
 44582  013DD0  50DE               	movf	postinc2,w,c
 44583  013DD2  10DE               	iorwf	postinc2,w,c
 44584  013DD4  10DE               	iorwf	postinc2,w,c
 44585  013DD6  B4D8               	btfsc	status,2,c
 44586  013DD8  D013               	goto	i2l2093
 44587                           
 44588                           ; BSR set to: 0
 44589  013DDA  EE20 F002          	lfsr	2,2
 44590  013DDE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44591  013DE0  26D9               	addwf	fsr2l,f,c
 44592  013DE2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44593  013DE4  22DA               	addwfc	fsr2h,f,c
 44594  013DE6  D801               	call	i2u3321_48
 44595  013DE8  D020               	goto	i2l2094
 44596  013DEA                     i2u3321_48:
 44597  013DEA  0005               	push	
 44598  013DEC  6EFA               	movwf	pclath,c
 44599  013DEE  50DE               	movf	postinc2,w,c
 44600  013DF0  6EFD               	movwf	tosl,c
 44601  013DF2  50DE               	movf	postinc2,w,c
 44602  013DF4  6EFE               	movwf	tosh,c
 44603  013DF6  50DE               	movf	postinc2,w,c
 44604  013DF8  6EFF               	movwf	tosu,c
 44605  013DFA  50FA               	movf	pclath,w,c
 44606  013DFC  0E20               	movlw	32
 44607  013DFE  0012               	return		;indir
 44608  013E00                     i2l2093:
 44609  013E00  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44610  013E04  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44611  013E08  CFDE F08E          	movff	postinc2,??i2__doprnt
 44612  013E0C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44613  013E10  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44614  013E14  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44615  013E18  0E20               	movlw	32
 44616  013E1A  6EDF               	movwf	indf2,c
 44617  013E1C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44618  013E20  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44619  013E24  2ADE               	incf	postinc2,f,c
 44620  013E26  0E00               	movlw	0
 44621  013E28  22DD               	addwfc	postdec2,f,c
 44622  013E2A                     i2l2094:
 44623                           
 44624                           ;doprnt.c: 1431: while(--width);
 44625  013E2A  0100               	movlb	0	; () banked
 44626  013E2C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44627  013E2E  A0D8               	btfss	status,0,c
 44628  013E30  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44629  013E32  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44630  013E34  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44631  013E36  A4D8               	btfss	status,2,c
 44632  013E38  D7C5               	goto	i2u3319_40
 44633  013E3A                     i2u3322_40:
 44634                           
 44635                           ; BSR set to: 0
 44636                           ;doprnt.c: 1438: if(flag & 0x03)
 44637                           
 44638                           ; BSR set to: 0
 44639                           
 44640                           ; BSR set to: 0
 44641  013E3A  0E03               	movlw	3
 44642  013E3C  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44643  013E3E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44644  013E40  0E00               	movlw	0
 44645  013E42  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44646  013E44  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44647  013E46  518E               	movf	??i2__doprnt& (0+255),w,b
 44648  013E48  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44649  013E4A  B4D8               	btfsc	status,2,c
 44650  013E4C  D0E9               	goto	i2l2107
 44651                           
 44652                           ; BSR set to: 0
 44653                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44654  013E4E  EE20 F002          	lfsr	2,2
 44655  013E52  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44656  013E54  26D9               	addwf	fsr2l,f,c
 44657  013E56  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44658  013E58  22DA               	addwfc	fsr2h,f,c
 44659  013E5A  50DE               	movf	postinc2,w,c
 44660  013E5C  10DE               	iorwf	postinc2,w,c
 44661  013E5E  10DE               	iorwf	postinc2,w,c
 44662  013E60  B4D8               	btfsc	status,2,c
 44663  013E62  D013               	goto	i2l2097
 44664                           
 44665                           ; BSR set to: 0
 44666  013E64  EE20 F002          	lfsr	2,2
 44667  013E68  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44668  013E6A  26D9               	addwf	fsr2l,f,c
 44669  013E6C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44670  013E6E  22DA               	addwfc	fsr2h,f,c
 44671  013E70  D801               	call	i2u3325_48
 44672  013E72  D0D6               	goto	i2l2107
 44673  013E74                     i2u3325_48:
 44674  013E74  0005               	push	
 44675  013E76  6EFA               	movwf	pclath,c
 44676  013E78  50DE               	movf	postinc2,w,c
 44677  013E7A  6EFD               	movwf	tosl,c
 44678  013E7C  50DE               	movf	postinc2,w,c
 44679  013E7E  6EFE               	movwf	tosh,c
 44680  013E80  50DE               	movf	postinc2,w,c
 44681  013E82  6EFF               	movwf	tosu,c
 44682  013E84  50FA               	movf	pclath,w,c
 44683  013E86  0E2D               	movlw	45
 44684  013E88  0012               	return		;indir
 44685  013E8A                     i2l2097:
 44686  013E8A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44687  013E8E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44688  013E92  CFDE F08E          	movff	postinc2,??i2__doprnt
 44689  013E96  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44690  013E9A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44691  013E9E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44692  013EA2  0E2D               	movlw	45
 44693  013EA4  6EDF               	movwf	indf2,c
 44694  013EA6  D0B5               	goto	i2l22770
 44695  013EA8                     
 44696                           ;doprnt.c: 1486: case 0xC0:
 44697                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 44698  013EA8  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 44699  013EAC  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 44700  013EB0  0100               	movlb	0	; () banked
 44701  013EB2  90D8               	bcf	status,0,c
 44702  013EB4  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44703  013EB6  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44704  013EB8  90D8               	bcf	status,0,c
 44705  013EBA  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44706  013EBC  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44707  013EBE  0E0F               	movlw	low _dpowers
 44708  013EC0  258E               	addwf	??i2__doprnt& (0+255),w,b
 44709  013EC2  6EF6               	movwf	tblptrl,c
 44710  013EC4  0ECF               	movlw	high _dpowers
 44711  013EC6  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 44712  013EC8  6EF7               	movwf	tblptrh,c
 44713  013ECA                     	if	1	;There are 3 active tblptr bytes
 44714  013ECA  6AF8               	clrf	tblptru,c
 44715  013ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 44716  013ECE  22F8               	addwfc	tblptru,f,c
 44717  013ED0                     	endif
 44718  013ED0  0009               	tblrd		*+
 44719  013ED2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 44720  013ED6  0009               	tblrd		*+
 44721  013ED8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 44722  013EDC  0009               	tblrd		*+
 44723  013EDE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 44724  013EE2  000A               	tblrd		*-
 44725  013EE4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 44726  013EE8  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44727  013EEC  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44728  013EF0  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44729  013EF4  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44730  013EF8  EC33  F0CE         	call	i2___lldiv
 44731  013EFC  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 44732  013F00  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 44733  013F04  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 44734  013F08  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 44735  013F0C  0E0A               	movlw	10
 44736  013F0E  6E12               	movwf	i2___llmod@divisor,c
 44737  013F10  0E00               	movlw	0
 44738  013F12  6E13               	movwf	i2___llmod@divisor+1,c
 44739  013F14  0E00               	movlw	0
 44740  013F16  6E14               	movwf	i2___llmod@divisor+2,c
 44741  013F18  0E00               	movlw	0
 44742  013F1A  6E15               	movwf	i2___llmod@divisor+3,c
 44743  013F1C  EC68  F0D0         	call	i2___llmod	;wreg free
 44744  013F20  500E               	movf	?i2___llmod,w,c
 44745  013F22  0F30               	addlw	48
 44746  013F24  0100               	movlb	0	; () banked
 44747  013F26  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44748                           
 44749                           ;doprnt.c: 1491: break;
 44750  013F28  D048               	goto	i2l2104
 44751  013F2A                     
 44752                           ; BSR set to: 0
 44753                           ;doprnt.c: 1499: {
 44754                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 44755                           
 44756                           ; BSR set to: 0
 44757  013F2A  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44758  013F2E  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44759  013F32  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44760  013F36  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44761  013F3A  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 44762  013F3E  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 44763  013F42  90D8               	bcf	status,0,c
 44764  013F44  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44765  013F46  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44766  013F48  90D8               	bcf	status,0,c
 44767  013F4A  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44768  013F4C  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44769  013F4E  0E37               	movlw	low _hexpowers
 44770  013F50  258E               	addwf	??i2__doprnt& (0+255),w,b
 44771  013F52  6EF6               	movwf	tblptrl,c
 44772  013F54  0ECF               	movlw	high _hexpowers
 44773  013F56  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 44774  013F58  6EF7               	movwf	tblptrh,c
 44775  013F5A                     	if	1	;There are 3 active tblptr bytes
 44776  013F5A  6AF8               	clrf	tblptru,c
 44777  013F5C  0E00               	movlw	low (__mediumconst shr (0+16))
 44778  013F5E  22F8               	addwfc	tblptru,f,c
 44779  013F60                     	endif
 44780  013F60  0009               	tblrd		*+
 44781  013F62  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 44782  013F66  0009               	tblrd		*+
 44783  013F68  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 44784  013F6C  0009               	tblrd		*+
 44785  013F6E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 44786  013F72  000A               	tblrd		*-
 44787  013F74  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 44788  013F78  EC33  F0CE         	call	i2___lldiv	;wreg free
 44789  013F7C  5001               	movf	?i2___lldiv,w,c
 44790  013F7E  0B0F               	andlw	15
 44791  013F80  0100               	movlb	0	; () banked
 44792  013F82  6F98               	movwf	i2__doprnt@idx& (0+255),b
 44793                           
 44794                           ; BSR set to: 0
 44795                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 44796  013F84  5198               	movf	i2__doprnt@idx& (0+255),w,b
 44797  013F86  0D01               	mullw	1
 44798  013F88  0EED               	movlw	low STR_192
 44799  013F8A  24F3               	addwf	prodl,w,c
 44800  013F8C  6EF6               	movwf	tblptrl,c
 44801  013F8E  0EFC               	movlw	high STR_192
 44802  013F90  20F4               	addwfc	prodh,w,c
 44803  013F92  6EF7               	movwf	tblptrh,c
 44804  013F94                     	if	1	;There are 3 active tblptr bytes
 44805  013F94  6AF8               	clrf	tblptru,c
 44806  013F96  0E00               	movlw	low (__mediumconst shr (0+16))
 44807  013F98  22F8               	addwfc	tblptru,f,c
 44808  013F9A                     	endif
 44809  013F9A  0008               	tblrd		*
 44810  013F9C  CFF5 F0B1          	movff	tablat,i2__doprnt@c
 44811                           
 44812                           ; BSR set to: 0
 44813                           ;doprnt.c: 1523: }
 44814                           
 44815                           ;doprnt.c: 1508: }
 44816                           ;doprnt.c: 1510: break;
 44817  013FA0  D00C               	goto	i2l2104
 44818  013FA2                     i2l22762:
 44819  013FA2  0100               	movlb	0	; () banked
 44820  013FA4  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 44821  013FA6  0BC0               	andlw	192
 44822                           
 44823                           ; Switch size 1, requested type "space"
 44824                           ; Number of cases is 3, Range of values is 0 to 192
 44825                           ; switch strategies available:
 44826                           ; Name         Instructions Cycles
 44827                           ; simple_byte           10     6 (average)
 44828                           ;	Chosen strategy is simple_byte
 44829  013FA8  0A00               	xorlw	0	; case 0
 44830  013FAA  B4D8               	btfsc	status,2,c
 44831  013FAC  D77D               	goto	i2l2102
 44832  013FAE  0A80               	xorlw	128	; case 128
 44833  013FB0  B4D8               	btfsc	status,2,c
 44834  013FB2  D7BB               	goto	i2l2105
 44835  013FB4  0A40               	xorlw	64	; case 192
 44836  013FB6  B4D8               	btfsc	status,2,c
 44837  013FB8  D777               	goto	i2l2102
 44838  013FBA                     i2l2104:
 44839                           
 44840                           ; BSR set to: 0
 44841                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 44842                           
 44843                           ; BSR set to: 0
 44844  013FBA  EE20 F002          	lfsr	2,2
 44845  013FBE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44846  013FC0  26D9               	addwf	fsr2l,f,c
 44847  013FC2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44848  013FC4  22DA               	addwfc	fsr2h,f,c
 44849  013FC6  50DE               	movf	postinc2,w,c
 44850  013FC8  10DE               	iorwf	postinc2,w,c
 44851  013FCA  10DE               	iorwf	postinc2,w,c
 44852  013FCC  B4D8               	btfsc	status,2,c
 44853  013FCE  D013               	goto	i2l2106
 44854                           
 44855                           ; BSR set to: 0
 44856  013FD0  EE20 F002          	lfsr	2,2
 44857  013FD4  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44858  013FD6  26D9               	addwf	fsr2l,f,c
 44859  013FD8  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44860  013FDA  22DA               	addwfc	fsr2h,f,c
 44861  013FDC  D801               	call	i2u3327_48
 44862  013FDE  D020               	goto	i2l2107
 44863  013FE0                     i2u3327_48:
 44864  013FE0  0005               	push	
 44865  013FE2  6EFA               	movwf	pclath,c
 44866  013FE4  50DE               	movf	postinc2,w,c
 44867  013FE6  6EFD               	movwf	tosl,c
 44868  013FE8  50DE               	movf	postinc2,w,c
 44869  013FEA  6EFE               	movwf	tosh,c
 44870  013FEC  50DE               	movf	postinc2,w,c
 44871  013FEE  6EFF               	movwf	tosu,c
 44872  013FF0  50FA               	movf	pclath,w,c
 44873  013FF2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44874  013FF4  0012               	return		;indir
 44875  013FF6                     i2l2106:
 44876  013FF6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44877  013FFA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44878  013FFE  CFDE F08E          	movff	postinc2,??i2__doprnt
 44879  014002  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44880  014006  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44881  01400A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44882  01400E  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 44883  014012                     i2l22770:
 44884  014012  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44885  014016  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44886  01401A  2ADE               	incf	postinc2,f,c
 44887  01401C  0E00               	movlw	0
 44888  01401E  22DD               	addwfc	postdec2,f,c
 44889  014020                     i2l2107:
 44890  014020  0100               	movlb	0	; () banked
 44891  014022  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 44892  014024  A0D8               	btfss	status,0,c
 44893  014026  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44894  014028  29AF               	incf	i2__doprnt@prec& (0+255),w,b
 44895  01402A  E1BB               	bnz	i2l22762
 44896  01402C  29B0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 44897  01402E  A4D8               	btfss	status,2,c
 44898  014030  D7B8               	goto	i2l2101
 44899  014032                     i2u3328_40:
 44900                           
 44901                           ; BSR set to: 0
 44902                           
 44903                           ; BSR set to: 0
 44904  014032  0100               	movlb	0	; () banked
 44905  014034  518A               	movf	i2__doprnt@f& (0+255),w,b
 44906  014036  6F8E               	movwf	??i2__doprnt& (0+255),b
 44907  014038  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 44908  01403A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44909  01403C  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 44910  01403E  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 44911  014040  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 44912  014044  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 44913  014048  0E00               	movlw	low (__mediumconst shr (0+16))
 44914  01404A  6EF8               	movwf	tblptru,c
 44915  01404C  0E0D               	movlw	(high __ramtop+-1)
 44916  01404E  64F7               	cpfsgt	tblptrh,c
 44917  014050  D003               	bra	i2u3329_47
 44918  014052  0008               	tblrd		*
 44919  014054  50F5               	movf	tablat,w,c
 44920  014056  D005               	bra	i2u3329_40
 44921  014058                     i2u3329_47:
 44922  014058  CFF6 FFE9          	movff	tblptrl,fsr0l
 44923  01405C  CFF7 FFEA          	movff	tblptrh,fsr0h
 44924  014060  50EF               	movf	indf0,w,c
 44925  014062                     i2u3329_40:
 44926  014062  0100               	movlb	0	; () banked
 44927  014064  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44928  014066  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44929  014068  A4D8               	btfss	status,2,c
 44930  01406A  EFBC  F095         	goto	i2l1935
 44931  01406E                     i2u3330_40:
 44932                           
 44933                           ; BSR set to: 0
 44934                           ;doprnt.c: 1540: return 0;
 44935                           
 44936                           ; BSR set to: 0
 44937                           
 44938                           ;doprnt.c: 1525: }
 44939                           ;doprnt.c: 1533: }
 44940                           ;doprnt.c: 1535: alldone:
 44941                           
 44942                           ; BSR set to: 0
 44943  01406E  0E00               	movlw	0
 44944  014070  6F89               	movwf	(?i2__doprnt+1)& (0+255),b
 44945  014072  0E00               	movlw	0
 44946  014074  6F88               	movwf	?i2__doprnt& (0+255),b
 44947  014076  0012               	return	
 44948  014078                     __end_ofi2__doprnt:
 44949                           	opt stack 0
 44950                           tosu	equ	0xFFF
 44951                           tosh	equ	0xFFE
 44952                           tosl	equ	0xFFD
 44953                           pclatu	equ	0xFFB
 44954                           pclath	equ	0xFFA
 44955                           tblptru	equ	0xFF8
 44956                           tblptrh	equ	0xFF7
 44957                           tblptrl	equ	0xFF6
 44958                           tablat	equ	0xFF5
 44959                           prodh	equ	0xFF4
 44960                           prodl	equ	0xFF3
 44961                           intcon	equ	0xFF2
 44962                           indf0	equ	0xFEF
 44963                           postinc0	equ	0xFEE
 44964                           fsr0h	equ	0xFEA
 44965                           fsr0l	equ	0xFE9
 44966                           wreg	equ	0xFE8
 44967                           indf1	equ	0xFE7
 44968                           postdec1	equ	0xFE5
 44969                           plusw1	equ	0xFE3
 44970                           fsr1h	equ	0xFE2
 44971                           fsr1l	equ	0xFE1
 44972                           bsr	equ	0xFE0
 44973                           indf2	equ	0xFDF
 44974                           postinc2	equ	0xFDE
 44975                           postdec2	equ	0xFDD
 44976                           plusw2	equ	0xFDB
 44977                           fsr2h	equ	0xFDA
 44978                           fsr2l	equ	0xFD9
 44979                           status	equ	0xFD8
 44980                           
 44981 ;; *************** function i2_scale *****************
 44982 ;; Defined at:
 44983 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 44984 ;; Parameters:    Size  Location     Type
 44985 ;;  scl             1    wreg     char 
 44986 ;; Auto vars:     Size  Location     Type
 44987 ;;  scl             1   80[COMRAM] char 
 44988 ;; Return value:  Size  Location     Type
 44989 ;;                  4   72[COMRAM] char 
 44990 ;; Registers used:
 44991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44992 ;; Tracked objects:
 44993 ;;		On entry : 0/0
 44994 ;;		On exit  : 0/0
 44995 ;;		Unchanged: 0/0
 44996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44998 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45000 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45001 ;;Total ram usage:        9 bytes
 45002 ;; Hardware stack levels used:    1
 45003 ;; Hardware stack levels required when called:    1
 45004 ;; This function calls:
 45005 ;;		i2___awdiv
 45006 ;;		i2___awmod
 45007 ;;		i2___flmul
 45008 ;; This function is called by:
 45009 ;;		i2__doprnt
 45010 ;; This function uses a non-reentrant model
 45011 ;;
 45012                           
 45013                           	psect	text133
 45014  014FE0                     __ptext133:
 45015                           	opt stack 0
 45016  014FE0                     i2_scale:
 45017                           	opt stack 13
 45018                           
 45019                           ; BSR set to: 0
 45020                           ;incstack = 0
 45021                           ;i2scale@scl stored from wreg
 45022  014FE0  6E51               	movwf	i2scale@scl,c
 45023                           
 45024                           ;doprnt.c: 428: if(scl < 0) {
 45025  014FE2  AE51               	btfss	i2scale@scl,7,c
 45026  014FE4  D11F               	goto	i2l1924
 45027                           
 45028                           ;doprnt.c: 429: scl = -scl;
 45029  014FE6  6C51               	negf	i2scale@scl,c
 45030                           
 45031                           ;doprnt.c: 430: if(scl>=110)
 45032  014FE8  5051               	movf	i2scale@scl,w,c
 45033  014FEA  0A80               	xorlw	128
 45034  014FEC  0F12               	addlw	-238
 45035  014FEE  A0D8               	btfss	status,0,c
 45036  014FF0  D0A1               	goto	i2l1925
 45037                           
 45038                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 45039  014FF2  0E00               	movlw	0
 45040  014FF4  6E0A               	movwf	i2___awdiv@divisor+1,c
 45041  014FF6  0E0A               	movlw	10
 45042  014FF8  6E09               	movwf	i2___awdiv@divisor,c
 45043  014FFA  0E00               	movlw	0
 45044  014FFC  6E04               	movwf	i2___awmod@divisor+1,c
 45045  014FFE  0E64               	movlw	100
 45046  015000  6E03               	movwf	i2___awmod@divisor,c
 45047  015002  5051               	movf	i2scale@scl,w,c
 45048  015004  6E01               	movwf	i2___awmod@dividend,c
 45049  015006  6A02               	clrf	i2___awmod@dividend+1,c
 45050  015008  BE01               	btfsc	i2___awmod@dividend,7,c
 45051  01500A  0602               	decf	i2___awmod@dividend+1,f,c
 45052  01500C  EC28  F0CF         	call	i2___awmod
 45053  015010  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45054  015014  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45055  015018  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45056  01501C  90D8               	bcf	status,0,c
 45057  01501E  3607               	rlcf	?i2___awdiv,f,c
 45058  015020  3608               	rlcf	?i2___awdiv+1,f,c
 45059  015022  90D8               	bcf	status,0,c
 45060  015024  3607               	rlcf	?i2___awdiv,f,c
 45061  015026  3608               	rlcf	?i2___awdiv+1,f,c
 45062  015028  0E24               	movlw	36
 45063  01502A  2607               	addwf	?i2___awdiv,f,c
 45064  01502C  0E00               	movlw	0
 45065  01502E  2208               	addwfc	?i2___awdiv+1,f,c
 45066  015030  0EDB               	movlw	low __npowers_
 45067  015032  2407               	addwf	?i2___awdiv,w,c
 45068  015034  6EF6               	movwf	tblptrl,c
 45069  015036  0ECE               	movlw	high __npowers_
 45070  015038  2008               	addwfc	?i2___awdiv+1,w,c
 45071  01503A  6EF7               	movwf	tblptrh,c
 45072  01503C                     	if	1	;There are 3 active tblptr bytes
 45073  01503C  6AF8               	clrf	tblptru,c
 45074  01503E  0E00               	movlw	low (__mediumconst shr (0+16))
 45075  015040  22F8               	addwfc	tblptru,f,c
 45076  015042                     	endif
 45077  015042  0009               	tblrd		*+
 45078  015044  CFF5 F034          	movff	tablat,i2___flmul@a
 45079  015048  0009               	tblrd		*+
 45080  01504A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45081  01504E  0009               	tblrd		*+
 45082  015050  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45083  015054  000A               	tblrd		*-
 45084  015056  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45085  01505A  0E00               	movlw	0
 45086  01505C  6E0A               	movwf	i2___awdiv@divisor+1,c
 45087  01505E  0E64               	movlw	100
 45088  015060  6E09               	movwf	i2___awdiv@divisor,c
 45089  015062  5051               	movf	i2scale@scl,w,c
 45090  015064  6E07               	movwf	i2___awdiv@dividend,c
 45091  015066  6A08               	clrf	i2___awdiv@dividend+1,c
 45092  015068  BE07               	btfsc	i2___awdiv@dividend,7,c
 45093  01506A  0608               	decf	i2___awdiv@dividend+1,f,c
 45094  01506C  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45095  015070  90D8               	bcf	status,0,c
 45096  015072  3607               	rlcf	?i2___awdiv,f,c
 45097  015074  3608               	rlcf	?i2___awdiv+1,f,c
 45098  015076  90D8               	bcf	status,0,c
 45099  015078  3607               	rlcf	?i2___awdiv,f,c
 45100  01507A  3608               	rlcf	?i2___awdiv+1,f,c
 45101  01507C  0E48               	movlw	72
 45102  01507E  2607               	addwf	?i2___awdiv,f,c
 45103  015080  0E00               	movlw	0
 45104  015082  2208               	addwfc	?i2___awdiv+1,f,c
 45105  015084  0EDB               	movlw	low __npowers_
 45106  015086  2407               	addwf	?i2___awdiv,w,c
 45107  015088  6EF6               	movwf	tblptrl,c
 45108  01508A  0ECE               	movlw	high __npowers_
 45109  01508C  2008               	addwfc	?i2___awdiv+1,w,c
 45110  01508E  6EF7               	movwf	tblptrh,c
 45111  015090                     	if	1	;There are 3 active tblptr bytes
 45112  015090  6AF8               	clrf	tblptru,c
 45113  015092  0E00               	movlw	low (__mediumconst shr (0+16))
 45114  015094  22F8               	addwfc	tblptru,f,c
 45115  015096                     	endif
 45116  015096  0009               	tblrd		*+
 45117  015098  CFF5 F030          	movff	tablat,i2___flmul@b
 45118  01509C  0009               	tblrd		*+
 45119  01509E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45120  0150A2  0009               	tblrd		*+
 45121  0150A4  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45122  0150A8  000A               	tblrd		*-
 45123  0150AA  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45124  0150AE  EC8D  F0AD         	call	i2___flmul	;wreg free
 45125  0150B2  C030  F04D         	movff	?i2___flmul,i2_scale$5408
 45126  0150B6  C031  F04E         	movff	?i2___flmul+1,i2_scale$5408+1
 45127  0150BA  C032  F04F         	movff	?i2___flmul+2,i2_scale$5408+2
 45128  0150BE  C033  F050         	movff	?i2___flmul+3,i2_scale$5408+3
 45129                           
 45130                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 45131  0150C2  C04D  F030         	movff	i2_scale$5408,i2___flmul@b
 45132  0150C6  C04E  F031         	movff	i2_scale$5408+1,i2___flmul@b+1
 45133  0150CA  C04F  F032         	movff	i2_scale$5408+2,i2___flmul@b+2
 45134  0150CE  C050  F033         	movff	i2_scale$5408+3,i2___flmul@b+3
 45135  0150D2  0E00               	movlw	0
 45136  0150D4  6E04               	movwf	i2___awmod@divisor+1,c
 45137  0150D6  0E0A               	movlw	10
 45138  0150D8  6E03               	movwf	i2___awmod@divisor,c
 45139  0150DA  5051               	movf	i2scale@scl,w,c
 45140  0150DC  6E01               	movwf	i2___awmod@dividend,c
 45141  0150DE  6A02               	clrf	i2___awmod@dividend+1,c
 45142  0150E0  BE01               	btfsc	i2___awmod@dividend,7,c
 45143  0150E2  0602               	decf	i2___awmod@dividend+1,f,c
 45144  0150E4  EC28  F0CF         	call	i2___awmod	;wreg free
 45145  0150E8  90D8               	bcf	status,0,c
 45146  0150EA  3601               	rlcf	?i2___awmod,f,c
 45147  0150EC  3602               	rlcf	?i2___awmod+1,f,c
 45148  0150EE  90D8               	bcf	status,0,c
 45149  0150F0  3601               	rlcf	?i2___awmod,f,c
 45150  0150F2  3602               	rlcf	?i2___awmod+1,f,c
 45151  0150F4  0EDB               	movlw	low __npowers_
 45152  0150F6  2401               	addwf	?i2___awmod,w,c
 45153  0150F8  6EF6               	movwf	tblptrl,c
 45154  0150FA  0ECE               	movlw	high __npowers_
 45155  0150FC  2002               	addwfc	?i2___awmod+1,w,c
 45156  0150FE  6EF7               	movwf	tblptrh,c
 45157  015100                     	if	1	;There are 3 active tblptr bytes
 45158  015100  6AF8               	clrf	tblptru,c
 45159  015102  0E00               	movlw	low (__mediumconst shr (0+16))
 45160  015104  22F8               	addwfc	tblptru,f,c
 45161  015106                     	endif
 45162  015106  0009               	tblrd		*+
 45163  015108  CFF5 F034          	movff	tablat,i2___flmul@a
 45164  01510C  0009               	tblrd		*+
 45165  01510E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45166  015112  0009               	tblrd		*+
 45167  015114  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45168  015118  000A               	tblrd		*-
 45169  01511A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45170  01511E  EC8D  F0AD         	call	i2___flmul	;wreg free
 45171  015122  C030  F049         	movff	?i2___flmul,?i2_scale
 45172  015126  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45173  01512A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45174  01512E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45175  015132  0012               	return	
 45176  015134                     i2l1925:
 45177                           
 45178                           ;doprnt.c: 432: else if(scl > 10)
 45179  015134  5051               	movf	i2scale@scl,w,c
 45180  015136  0A80               	xorlw	128
 45181  015138  0F75               	addlw	-139
 45182  01513A  A0D8               	btfss	status,0,c
 45183  01513C  D05B               	goto	i2l1928
 45184                           
 45185                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 45186  01513E  0E00               	movlw	0
 45187  015140  6E0A               	movwf	i2___awdiv@divisor+1,c
 45188  015142  0E0A               	movlw	10
 45189  015144  6E09               	movwf	i2___awdiv@divisor,c
 45190  015146  5051               	movf	i2scale@scl,w,c
 45191  015148  6E07               	movwf	i2___awdiv@dividend,c
 45192  01514A  6A08               	clrf	i2___awdiv@dividend+1,c
 45193  01514C  BE07               	btfsc	i2___awdiv@dividend,7,c
 45194  01514E  0608               	decf	i2___awdiv@dividend+1,f,c
 45195  015150  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45196  015154  90D8               	bcf	status,0,c
 45197  015156  3607               	rlcf	?i2___awdiv,f,c
 45198  015158  3608               	rlcf	?i2___awdiv+1,f,c
 45199  01515A  90D8               	bcf	status,0,c
 45200  01515C  3607               	rlcf	?i2___awdiv,f,c
 45201  01515E  3608               	rlcf	?i2___awdiv+1,f,c
 45202  015160  0E24               	movlw	36
 45203  015162  2607               	addwf	?i2___awdiv,f,c
 45204  015164  0E00               	movlw	0
 45205  015166  2208               	addwfc	?i2___awdiv+1,f,c
 45206  015168  0EDB               	movlw	low __npowers_
 45207  01516A  2407               	addwf	?i2___awdiv,w,c
 45208  01516C  6EF6               	movwf	tblptrl,c
 45209  01516E  0ECE               	movlw	high __npowers_
 45210  015170  2008               	addwfc	?i2___awdiv+1,w,c
 45211  015172  6EF7               	movwf	tblptrh,c
 45212  015174                     	if	1	;There are 3 active tblptr bytes
 45213  015174  6AF8               	clrf	tblptru,c
 45214  015176  0E00               	movlw	low (__mediumconst shr (0+16))
 45215  015178  22F8               	addwfc	tblptru,f,c
 45216  01517A                     	endif
 45217  01517A  0009               	tblrd		*+
 45218  01517C  CFF5 F030          	movff	tablat,i2___flmul@b
 45219  015180  0009               	tblrd		*+
 45220  015182  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45221  015186  0009               	tblrd		*+
 45222  015188  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45223  01518C  000A               	tblrd		*-
 45224  01518E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45225  015192  0E00               	movlw	0
 45226  015194  6E04               	movwf	i2___awmod@divisor+1,c
 45227  015196  0E0A               	movlw	10
 45228  015198  6E03               	movwf	i2___awmod@divisor,c
 45229  01519A  5051               	movf	i2scale@scl,w,c
 45230  01519C  6E01               	movwf	i2___awmod@dividend,c
 45231  01519E  6A02               	clrf	i2___awmod@dividend+1,c
 45232  0151A0  BE01               	btfsc	i2___awmod@dividend,7,c
 45233  0151A2  0602               	decf	i2___awmod@dividend+1,f,c
 45234  0151A4  EC28  F0CF         	call	i2___awmod	;wreg free
 45235  0151A8  90D8               	bcf	status,0,c
 45236  0151AA  3601               	rlcf	?i2___awmod,f,c
 45237  0151AC  3602               	rlcf	?i2___awmod+1,f,c
 45238  0151AE  90D8               	bcf	status,0,c
 45239  0151B0  3601               	rlcf	?i2___awmod,f,c
 45240  0151B2  3602               	rlcf	?i2___awmod+1,f,c
 45241  0151B4  0EDB               	movlw	low __npowers_
 45242  0151B6  2401               	addwf	?i2___awmod,w,c
 45243  0151B8  6EF6               	movwf	tblptrl,c
 45244  0151BA  0ECE               	movlw	high __npowers_
 45245  0151BC  2002               	addwfc	?i2___awmod+1,w,c
 45246  0151BE  6EF7               	movwf	tblptrh,c
 45247  0151C0                     	if	1	;There are 3 active tblptr bytes
 45248  0151C0  6AF8               	clrf	tblptru,c
 45249  0151C2  0E00               	movlw	low (__mediumconst shr (0+16))
 45250  0151C4  22F8               	addwfc	tblptru,f,c
 45251  0151C6                     	endif
 45252  0151C6  0009               	tblrd		*+
 45253  0151C8  CFF5 F034          	movff	tablat,i2___flmul@a
 45254  0151CC  0009               	tblrd		*+
 45255  0151CE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45256  0151D2  0009               	tblrd		*+
 45257  0151D4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45258  0151D8  000A               	tblrd		*-
 45259  0151DA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45260  0151DE  EC8D  F0AD         	call	i2___flmul	;wreg free
 45261  0151E2  C030  F049         	movff	?i2___flmul,?i2_scale
 45262  0151E6  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45263  0151EA  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45264  0151EE  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45265  0151F2  0012               	return	
 45266  0151F4                     i2l1928:
 45267                           
 45268                           ;doprnt.c: 434: return _npowers_[scl];
 45269  0151F4  5051               	movf	i2scale@scl,w,c
 45270  0151F6  0D04               	mullw	4
 45271  0151F8  0EDB               	movlw	low __npowers_
 45272  0151FA  24F3               	addwf	prodl,w,c
 45273  0151FC  6EF6               	movwf	tblptrl,c
 45274  0151FE  0ECE               	movlw	high __npowers_
 45275  015200  20F4               	addwfc	prodh,w,c
 45276  015202  6EF7               	movwf	tblptrh,c
 45277  015204                     	if	1	;There are 3 active tblptr bytes
 45278  015204  6AF8               	clrf	tblptru,c
 45279  015206  0E00               	movlw	low (__mediumconst shr (0+16))
 45280  015208  22F8               	addwfc	tblptru,f,c
 45281  01520A                     	endif
 45282  01520A  0009               	tblrd		*+
 45283  01520C  CFF5 F049          	movff	tablat,?i2_scale
 45284  015210  0009               	tblrd		*+
 45285  015212  CFF5 F04A          	movff	tablat,?i2_scale+1
 45286  015216  0009               	tblrd		*+
 45287  015218  CFF5 F04B          	movff	tablat,?i2_scale+2
 45288  01521C  000A               	tblrd		*-
 45289  01521E  CFF5 F04C          	movff	tablat,?i2_scale+3
 45290  015222  0012               	return	
 45291  015224                     i2l1924:
 45292                           
 45293                           ;doprnt.c: 435: }
 45294                           ;doprnt.c: 436: if(scl>=110)
 45295  015224  5051               	movf	i2scale@scl,w,c
 45296  015226  0A80               	xorlw	128
 45297  015228  0F12               	addlw	-238
 45298  01522A  A0D8               	btfss	status,0,c
 45299  01522C  D0A1               	goto	i2l1929
 45300                           
 45301                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45302  01522E  0E00               	movlw	0
 45303  015230  6E0A               	movwf	i2___awdiv@divisor+1,c
 45304  015232  0E0A               	movlw	10
 45305  015234  6E09               	movwf	i2___awdiv@divisor,c
 45306  015236  0E00               	movlw	0
 45307  015238  6E04               	movwf	i2___awmod@divisor+1,c
 45308  01523A  0E64               	movlw	100
 45309  01523C  6E03               	movwf	i2___awmod@divisor,c
 45310  01523E  5051               	movf	i2scale@scl,w,c
 45311  015240  6E01               	movwf	i2___awmod@dividend,c
 45312  015242  6A02               	clrf	i2___awmod@dividend+1,c
 45313  015244  BE01               	btfsc	i2___awmod@dividend,7,c
 45314  015246  0602               	decf	i2___awmod@dividend+1,f,c
 45315  015248  EC28  F0CF         	call	i2___awmod	;wreg free
 45316  01524C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45317  015250  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45318  015254  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45319  015258  90D8               	bcf	status,0,c
 45320  01525A  3607               	rlcf	?i2___awdiv,f,c
 45321  01525C  3608               	rlcf	?i2___awdiv+1,f,c
 45322  01525E  90D8               	bcf	status,0,c
 45323  015260  3607               	rlcf	?i2___awdiv,f,c
 45324  015262  3608               	rlcf	?i2___awdiv+1,f,c
 45325  015264  0E24               	movlw	36
 45326  015266  2607               	addwf	?i2___awdiv,f,c
 45327  015268  0E00               	movlw	0
 45328  01526A  2208               	addwfc	?i2___awdiv+1,f,c
 45329  01526C  0EA7               	movlw	low __powers_
 45330  01526E  2407               	addwf	?i2___awdiv,w,c
 45331  015270  6EF6               	movwf	tblptrl,c
 45332  015272  0ECE               	movlw	high __powers_
 45333  015274  2008               	addwfc	?i2___awdiv+1,w,c
 45334  015276  6EF7               	movwf	tblptrh,c
 45335  015278                     	if	1	;There are 3 active tblptr bytes
 45336  015278  6AF8               	clrf	tblptru,c
 45337  01527A  0E00               	movlw	low (__mediumconst shr (0+16))
 45338  01527C  22F8               	addwfc	tblptru,f,c
 45339  01527E                     	endif
 45340  01527E  0009               	tblrd		*+
 45341  015280  CFF5 F034          	movff	tablat,i2___flmul@a
 45342  015284  0009               	tblrd		*+
 45343  015286  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45344  01528A  0009               	tblrd		*+
 45345  01528C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45346  015290  000A               	tblrd		*-
 45347  015292  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45348  015296  0E00               	movlw	0
 45349  015298  6E0A               	movwf	i2___awdiv@divisor+1,c
 45350  01529A  0E64               	movlw	100
 45351  01529C  6E09               	movwf	i2___awdiv@divisor,c
 45352  01529E  5051               	movf	i2scale@scl,w,c
 45353  0152A0  6E07               	movwf	i2___awdiv@dividend,c
 45354  0152A2  6A08               	clrf	i2___awdiv@dividend+1,c
 45355  0152A4  BE07               	btfsc	i2___awdiv@dividend,7,c
 45356  0152A6  0608               	decf	i2___awdiv@dividend+1,f,c
 45357  0152A8  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45358  0152AC  90D8               	bcf	status,0,c
 45359  0152AE  3607               	rlcf	?i2___awdiv,f,c
 45360  0152B0  3608               	rlcf	?i2___awdiv+1,f,c
 45361  0152B2  90D8               	bcf	status,0,c
 45362  0152B4  3607               	rlcf	?i2___awdiv,f,c
 45363  0152B6  3608               	rlcf	?i2___awdiv+1,f,c
 45364  0152B8  0E48               	movlw	72
 45365  0152BA  2607               	addwf	?i2___awdiv,f,c
 45366  0152BC  0E00               	movlw	0
 45367  0152BE  2208               	addwfc	?i2___awdiv+1,f,c
 45368  0152C0  0EA7               	movlw	low __powers_
 45369  0152C2  2407               	addwf	?i2___awdiv,w,c
 45370  0152C4  6EF6               	movwf	tblptrl,c
 45371  0152C6  0ECE               	movlw	high __powers_
 45372  0152C8  2008               	addwfc	?i2___awdiv+1,w,c
 45373  0152CA  6EF7               	movwf	tblptrh,c
 45374  0152CC                     	if	1	;There are 3 active tblptr bytes
 45375  0152CC  6AF8               	clrf	tblptru,c
 45376  0152CE  0E00               	movlw	low (__mediumconst shr (0+16))
 45377  0152D0  22F8               	addwfc	tblptru,f,c
 45378  0152D2                     	endif
 45379  0152D2  0009               	tblrd		*+
 45380  0152D4  CFF5 F030          	movff	tablat,i2___flmul@b
 45381  0152D8  0009               	tblrd		*+
 45382  0152DA  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45383  0152DE  0009               	tblrd		*+
 45384  0152E0  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45385  0152E4  000A               	tblrd		*-
 45386  0152E6  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45387  0152EA  EC8D  F0AD         	call	i2___flmul	;wreg free
 45388  0152EE  C030  F04D         	movff	?i2___flmul,i2_scale$5408
 45389  0152F2  C031  F04E         	movff	?i2___flmul+1,i2_scale$5408+1
 45390  0152F6  C032  F04F         	movff	?i2___flmul+2,i2_scale$5408+2
 45391  0152FA  C033  F050         	movff	?i2___flmul+3,i2_scale$5408+3
 45392                           
 45393                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45394  0152FE  C04D  F030         	movff	i2_scale$5408,i2___flmul@b
 45395  015302  C04E  F031         	movff	i2_scale$5408+1,i2___flmul@b+1
 45396  015306  C04F  F032         	movff	i2_scale$5408+2,i2___flmul@b+2
 45397  01530A  C050  F033         	movff	i2_scale$5408+3,i2___flmul@b+3
 45398  01530E  0E00               	movlw	0
 45399  015310  6E04               	movwf	i2___awmod@divisor+1,c
 45400  015312  0E0A               	movlw	10
 45401  015314  6E03               	movwf	i2___awmod@divisor,c
 45402  015316  5051               	movf	i2scale@scl,w,c
 45403  015318  6E01               	movwf	i2___awmod@dividend,c
 45404  01531A  6A02               	clrf	i2___awmod@dividend+1,c
 45405  01531C  BE01               	btfsc	i2___awmod@dividend,7,c
 45406  01531E  0602               	decf	i2___awmod@dividend+1,f,c
 45407  015320  EC28  F0CF         	call	i2___awmod	;wreg free
 45408  015324  90D8               	bcf	status,0,c
 45409  015326  3601               	rlcf	?i2___awmod,f,c
 45410  015328  3602               	rlcf	?i2___awmod+1,f,c
 45411  01532A  90D8               	bcf	status,0,c
 45412  01532C  3601               	rlcf	?i2___awmod,f,c
 45413  01532E  3602               	rlcf	?i2___awmod+1,f,c
 45414  015330  0EA7               	movlw	low __powers_
 45415  015332  2401               	addwf	?i2___awmod,w,c
 45416  015334  6EF6               	movwf	tblptrl,c
 45417  015336  0ECE               	movlw	high __powers_
 45418  015338  2002               	addwfc	?i2___awmod+1,w,c
 45419  01533A  6EF7               	movwf	tblptrh,c
 45420  01533C                     	if	1	;There are 3 active tblptr bytes
 45421  01533C  6AF8               	clrf	tblptru,c
 45422  01533E  0E00               	movlw	low (__mediumconst shr (0+16))
 45423  015340  22F8               	addwfc	tblptru,f,c
 45424  015342                     	endif
 45425  015342  0009               	tblrd		*+
 45426  015344  CFF5 F034          	movff	tablat,i2___flmul@a
 45427  015348  0009               	tblrd		*+
 45428  01534A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45429  01534E  0009               	tblrd		*+
 45430  015350  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45431  015354  000A               	tblrd		*-
 45432  015356  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45433  01535A  EC8D  F0AD         	call	i2___flmul	;wreg free
 45434  01535E  C030  F049         	movff	?i2___flmul,?i2_scale
 45435  015362  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45436  015366  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45437  01536A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45438  01536E  0012               	return	
 45439  015370                     i2l1929:
 45440                           
 45441                           ;doprnt.c: 438: else if(scl > 10)
 45442  015370  5051               	movf	i2scale@scl,w,c
 45443  015372  0A80               	xorlw	128
 45444  015374  0F75               	addlw	-139
 45445  015376  A0D8               	btfss	status,0,c
 45446  015378  D05B               	goto	i2l1931
 45447                           
 45448                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 45449  01537A  0E00               	movlw	0
 45450  01537C  6E0A               	movwf	i2___awdiv@divisor+1,c
 45451  01537E  0E0A               	movlw	10
 45452  015380  6E09               	movwf	i2___awdiv@divisor,c
 45453  015382  5051               	movf	i2scale@scl,w,c
 45454  015384  6E07               	movwf	i2___awdiv@dividend,c
 45455  015386  6A08               	clrf	i2___awdiv@dividend+1,c
 45456  015388  BE07               	btfsc	i2___awdiv@dividend,7,c
 45457  01538A  0608               	decf	i2___awdiv@dividend+1,f,c
 45458  01538C  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45459  015390  90D8               	bcf	status,0,c
 45460  015392  3607               	rlcf	?i2___awdiv,f,c
 45461  015394  3608               	rlcf	?i2___awdiv+1,f,c
 45462  015396  90D8               	bcf	status,0,c
 45463  015398  3607               	rlcf	?i2___awdiv,f,c
 45464  01539A  3608               	rlcf	?i2___awdiv+1,f,c
 45465  01539C  0E24               	movlw	36
 45466  01539E  2607               	addwf	?i2___awdiv,f,c
 45467  0153A0  0E00               	movlw	0
 45468  0153A2  2208               	addwfc	?i2___awdiv+1,f,c
 45469  0153A4  0EA7               	movlw	low __powers_
 45470  0153A6  2407               	addwf	?i2___awdiv,w,c
 45471  0153A8  6EF6               	movwf	tblptrl,c
 45472  0153AA  0ECE               	movlw	high __powers_
 45473  0153AC  2008               	addwfc	?i2___awdiv+1,w,c
 45474  0153AE  6EF7               	movwf	tblptrh,c
 45475  0153B0                     	if	1	;There are 3 active tblptr bytes
 45476  0153B0  6AF8               	clrf	tblptru,c
 45477  0153B2  0E00               	movlw	low (__mediumconst shr (0+16))
 45478  0153B4  22F8               	addwfc	tblptru,f,c
 45479  0153B6                     	endif
 45480  0153B6  0009               	tblrd		*+
 45481  0153B8  CFF5 F030          	movff	tablat,i2___flmul@b
 45482  0153BC  0009               	tblrd		*+
 45483  0153BE  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45484  0153C2  0009               	tblrd		*+
 45485  0153C4  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45486  0153C8  000A               	tblrd		*-
 45487  0153CA  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45488  0153CE  0E00               	movlw	0
 45489  0153D0  6E04               	movwf	i2___awmod@divisor+1,c
 45490  0153D2  0E0A               	movlw	10
 45491  0153D4  6E03               	movwf	i2___awmod@divisor,c
 45492  0153D6  5051               	movf	i2scale@scl,w,c
 45493  0153D8  6E01               	movwf	i2___awmod@dividend,c
 45494  0153DA  6A02               	clrf	i2___awmod@dividend+1,c
 45495  0153DC  BE01               	btfsc	i2___awmod@dividend,7,c
 45496  0153DE  0602               	decf	i2___awmod@dividend+1,f,c
 45497  0153E0  EC28  F0CF         	call	i2___awmod	;wreg free
 45498  0153E4  90D8               	bcf	status,0,c
 45499  0153E6  3601               	rlcf	?i2___awmod,f,c
 45500  0153E8  3602               	rlcf	?i2___awmod+1,f,c
 45501  0153EA  90D8               	bcf	status,0,c
 45502  0153EC  3601               	rlcf	?i2___awmod,f,c
 45503  0153EE  3602               	rlcf	?i2___awmod+1,f,c
 45504  0153F0  0EA7               	movlw	low __powers_
 45505  0153F2  2401               	addwf	?i2___awmod,w,c
 45506  0153F4  6EF6               	movwf	tblptrl,c
 45507  0153F6  0ECE               	movlw	high __powers_
 45508  0153F8  2002               	addwfc	?i2___awmod+1,w,c
 45509  0153FA  6EF7               	movwf	tblptrh,c
 45510  0153FC                     	if	1	;There are 3 active tblptr bytes
 45511  0153FC  6AF8               	clrf	tblptru,c
 45512  0153FE  0E00               	movlw	low (__mediumconst shr (0+16))
 45513  015400  22F8               	addwfc	tblptru,f,c
 45514  015402                     	endif
 45515  015402  0009               	tblrd		*+
 45516  015404  CFF5 F034          	movff	tablat,i2___flmul@a
 45517  015408  0009               	tblrd		*+
 45518  01540A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45519  01540E  0009               	tblrd		*+
 45520  015410  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45521  015414  000A               	tblrd		*-
 45522  015416  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45523  01541A  EC8D  F0AD         	call	i2___flmul	;wreg free
 45524  01541E  C030  F049         	movff	?i2___flmul,?i2_scale
 45525  015422  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45526  015426  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45527  01542A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45528  01542E  0012               	return	
 45529  015430                     i2l1931:
 45530                           
 45531                           ;doprnt.c: 440: return _powers_[scl];
 45532  015430  5051               	movf	i2scale@scl,w,c
 45533  015432  0D04               	mullw	4
 45534  015434  0EA7               	movlw	low __powers_
 45535  015436  24F3               	addwf	prodl,w,c
 45536  015438  6EF6               	movwf	tblptrl,c
 45537  01543A  0ECE               	movlw	high __powers_
 45538  01543C  20F4               	addwfc	prodh,w,c
 45539  01543E  6EF7               	movwf	tblptrh,c
 45540  015440                     	if	1	;There are 3 active tblptr bytes
 45541  015440  6AF8               	clrf	tblptru,c
 45542  015442  0E00               	movlw	low (__mediumconst shr (0+16))
 45543  015444  22F8               	addwfc	tblptru,f,c
 45544  015446                     	endif
 45545  015446  0009               	tblrd		*+
 45546  015448  CFF5 F049          	movff	tablat,?i2_scale
 45547  01544C  0009               	tblrd		*+
 45548  01544E  CFF5 F04A          	movff	tablat,?i2_scale+1
 45549  015452  0009               	tblrd		*+
 45550  015454  CFF5 F04B          	movff	tablat,?i2_scale+2
 45551  015458  000A               	tblrd		*-
 45552  01545A  CFF5 F04C          	movff	tablat,?i2_scale+3
 45553  01545E  0012               	return	
 45554  015460                     __end_ofi2_scale:
 45555                           	opt stack 0
 45556                           tosu	equ	0xFFF
 45557                           tosh	equ	0xFFE
 45558                           tosl	equ	0xFFD
 45559                           pclatu	equ	0xFFB
 45560                           pclath	equ	0xFFA
 45561                           tblptru	equ	0xFF8
 45562                           tblptrh	equ	0xFF7
 45563                           tblptrl	equ	0xFF6
 45564                           tablat	equ	0xFF5
 45565                           prodh	equ	0xFF4
 45566                           prodl	equ	0xFF3
 45567                           intcon	equ	0xFF2
 45568                           indf0	equ	0xFEF
 45569                           postinc0	equ	0xFEE
 45570                           fsr0h	equ	0xFEA
 45571                           fsr0l	equ	0xFE9
 45572                           wreg	equ	0xFE8
 45573                           indf1	equ	0xFE7
 45574                           postdec1	equ	0xFE5
 45575                           plusw1	equ	0xFE3
 45576                           fsr1h	equ	0xFE2
 45577                           fsr1l	equ	0xFE1
 45578                           bsr	equ	0xFE0
 45579                           indf2	equ	0xFDF
 45580                           postinc2	equ	0xFDE
 45581                           postdec2	equ	0xFDD
 45582                           plusw2	equ	0xFDB
 45583                           fsr2h	equ	0xFDA
 45584                           fsr2l	equ	0xFD9
 45585                           status	equ	0xFD8
 45586                           
 45587 ;; *************** function i2_putch *****************
 45588 ;; Defined at:
 45589 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 45590 ;; Parameters:    Size  Location     Type
 45591 ;;  txData          1    wreg     unsigned char 
 45592 ;; Auto vars:     Size  Location     Type
 45593 ;;  txData          1    1[COMRAM] unsigned char 
 45594 ;; Return value:  Size  Location     Type
 45595 ;;                  1    wreg      void 
 45596 ;; Registers used:
 45597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45598 ;; Tracked objects:
 45599 ;;		On entry : 0/0
 45600 ;;		On exit  : 0/0
 45601 ;;		Unchanged: 0/0
 45602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45607 ;;Total ram usage:        1 bytes
 45608 ;; Hardware stack levels used:    1
 45609 ;; Hardware stack levels required when called:    1
 45610 ;; This function calls:
 45611 ;;		i2_EUSART2_Write
 45612 ;; This function is called by:
 45613 ;;		i2_printf
 45614 ;; This function uses a non-reentrant model
 45615 ;;
 45616                           
 45617                           	psect	text134
 45618  01B1B2                     __ptext134:
 45619                           	opt stack 0
 45620  01B1B2                     i2_putch:
 45621                           	opt stack 13
 45622                           
 45623                           ;incstack = 0
 45624                           ;i2putch@txData stored from wreg
 45625  01B1B2  6E02               	movwf	i2putch@txData,c
 45626                           
 45627                           ;eusart2.c: 187: EUSART2_Write(txData);
 45628  01B1B4  5002               	movf	i2putch@txData,w,c
 45629  01B1B6  ECFF  F0D2         	call	i2_EUSART2_Write
 45630  01B1BA  0012               	return		;funcret
 45631  01B1BC                     __end_ofi2_putch:
 45632                           	opt stack 0
 45633                           tosu	equ	0xFFF
 45634                           tosh	equ	0xFFE
 45635                           tosl	equ	0xFFD
 45636                           pclatu	equ	0xFFB
 45637                           pclath	equ	0xFFA
 45638                           tblptru	equ	0xFF8
 45639                           tblptrh	equ	0xFF7
 45640                           tblptrl	equ	0xFF6
 45641                           tablat	equ	0xFF5
 45642                           prodh	equ	0xFF4
 45643                           prodl	equ	0xFF3
 45644                           intcon	equ	0xFF2
 45645                           indf0	equ	0xFEF
 45646                           postinc0	equ	0xFEE
 45647                           fsr0h	equ	0xFEA
 45648                           fsr0l	equ	0xFE9
 45649                           wreg	equ	0xFE8
 45650                           indf1	equ	0xFE7
 45651                           postdec1	equ	0xFE5
 45652                           plusw1	equ	0xFE3
 45653                           fsr1h	equ	0xFE2
 45654                           fsr1l	equ	0xFE1
 45655                           bsr	equ	0xFE0
 45656                           indf2	equ	0xFDF
 45657                           postinc2	equ	0xFDE
 45658                           postdec2	equ	0xFDD
 45659                           plusw2	equ	0xFDB
 45660                           fsr2h	equ	0xFDA
 45661                           fsr2l	equ	0xFD9
 45662                           status	equ	0xFD8
 45663                           
 45664 ;; *************** function i2_EUSART2_Write *****************
 45665 ;; Defined at:
 45666 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 45667 ;; Parameters:    Size  Location     Type
 45668 ;;  txData          1    wreg     unsigned char 
 45669 ;; Auto vars:     Size  Location     Type
 45670 ;;  txData          1    0[COMRAM] unsigned char 
 45671 ;; Return value:  Size  Location     Type
 45672 ;;                  1    wreg      void 
 45673 ;; Registers used:
 45674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45675 ;; Tracked objects:
 45676 ;;		On entry : 0/0
 45677 ;;		On exit  : 0/0
 45678 ;;		Unchanged: 0/0
 45679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45684 ;;Total ram usage:        1 bytes
 45685 ;; Hardware stack levels used:    1
 45686 ;; This function calls:
 45687 ;;		Nothing
 45688 ;; This function is called by:
 45689 ;;		i2_putch
 45690 ;; This function uses a non-reentrant model
 45691 ;;
 45692                           
 45693                           	psect	text135
 45694  01A5FE                     __ptext135:
 45695                           	opt stack 0
 45696  01A5FE                     i2_EUSART2_Write:
 45697                           	opt stack 13
 45698                           
 45699                           ;incstack = 0
 45700                           ;i2EUSART2_Write@txData stored from wreg
 45701  01A5FE  6E01               	movwf	i2EUSART2_Write@txData,c
 45702                           
 45703                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 45704  01A600  D004               	goto	i2l430
 45705  01A602                     i2l431:
 45706                           
 45707                           ; BSR set to: 1
 45708  01A602  0004               	clrwdt		;# 
 45709                           
 45710                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 45711  01A604  0E01               	movlw	1
 45712  01A606  0102               	movlb	2	; () banked
 45713  01A608  6F08               	movwf	(_error_handler+8)& (0+255),b
 45714  01A60A                     i2l430:
 45715                           
 45716                           ; BSR set to: 2
 45717  01A60A  0101               	movlb	1	; () banked
 45718  01A60C  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 45719  01A60E  B4D8               	btfsc	status,2,c
 45720  01A610  D7F8               	goto	i2l431
 45721                           
 45722                           ; BSR set to: 1
 45723                           ;eusart2.c: 161: }
 45724                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 45725  01A612  010E               	movlb	14	; () banked
 45726  01A614  BD2C               	btfsc	44,6,b	;volatile
 45727  01A616  D003               	goto	i2l433
 45728                           
 45729                           ; BSR set to: 14
 45730                           ;eusart2.c: 164: {
 45731                           ;eusart2.c: 165: TX2REG = txData;
 45732  01A618  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 45733                           
 45734                           ;eusart2.c: 166: }
 45735  01A61C  D013               	goto	i2l434
 45736  01A61E                     i2l433:
 45737                           
 45738                           ; BSR set to: 14
 45739                           ;eusart2.c: 167: else
 45740                           ;eusart2.c: 168: {
 45741                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 45742  01A61E  9D2C               	bcf	44,6,b	;volatile
 45743                           
 45744                           ; BSR set to: 14
 45745                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 45746  01A620  0101               	movlb	1	; () banked
 45747  01A622  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 45748  01A624  0D01               	mullw	1
 45749  01A626  0E00               	movlw	low _eusart2TxBuffer
 45750  01A628  24F3               	addwf	prodl,w,c
 45751  01A62A  6ED9               	movwf	fsr2l,c
 45752  01A62C  0E03               	movlw	high _eusart2TxBuffer
 45753  01A62E  20F4               	addwfc	prodh,w,c
 45754  01A630  6EDA               	movwf	fsr2h,c
 45755  01A632  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 45756                           
 45757                           ; BSR set to: 1
 45758  01A636  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 45759                           
 45760                           ; BSR set to: 1
 45761                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 45762  01A638  0E7F               	movlw	127
 45763  01A63A  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 45764  01A63C  D002               	goto	i2l435
 45765                           
 45766                           ; BSR set to: 1
 45767                           ;eusart2.c: 172: {
 45768                           ;eusart2.c: 173: eusart2TxHead = 0;
 45769  01A63E  0E00               	movlw	0
 45770  01A640  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 45771  01A642                     i2l435:
 45772                           
 45773                           ; BSR set to: 1
 45774                           ;eusart2.c: 174: }
 45775                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 45776                           
 45777                           ; BSR set to: 1
 45778  01A642  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 45779  01A644                     i2l434:
 45780                           
 45781                           ;eusart2.c: 176: }
 45782                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 45783                           
 45784                           ; BSR set to: 1
 45785  01A644  010E               	movlb	14	; () banked
 45786  01A646  8D2C               	bsf	44,6,b	;volatile
 45787                           
 45788                           ; BSR set to: 14
 45789  01A648  0012               	return		;funcret
 45790  01A64A                     __end_ofi2_EUSART2_Write:
 45791                           	opt stack 0
 45792                           tosu	equ	0xFFF
 45793                           tosh	equ	0xFFE
 45794                           tosl	equ	0xFFD
 45795                           pclatu	equ	0xFFB
 45796                           pclath	equ	0xFFA
 45797                           tblptru	equ	0xFF8
 45798                           tblptrh	equ	0xFF7
 45799                           tblptrl	equ	0xFF6
 45800                           tablat	equ	0xFF5
 45801                           prodh	equ	0xFF4
 45802                           prodl	equ	0xFF3
 45803                           intcon	equ	0xFF2
 45804                           indf0	equ	0xFEF
 45805                           postinc0	equ	0xFEE
 45806                           fsr0h	equ	0xFEA
 45807                           fsr0l	equ	0xFE9
 45808                           wreg	equ	0xFE8
 45809                           indf1	equ	0xFE7
 45810                           postdec1	equ	0xFE5
 45811                           plusw1	equ	0xFE3
 45812                           fsr1h	equ	0xFE2
 45813                           fsr1l	equ	0xFE1
 45814                           bsr	equ	0xFE0
 45815                           indf2	equ	0xFDF
 45816                           postinc2	equ	0xFDE
 45817                           postdec2	equ	0xFDD
 45818                           plusw2	equ	0xFDB
 45819                           fsr2h	equ	0xFDA
 45820                           fsr2l	equ	0xFD9
 45821                           status	equ	0xFD8
 45822                           
 45823 ;; *************** function i2_isdigit *****************
 45824 ;; Defined at:
 45825 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 45826 ;; Parameters:    Size  Location     Type
 45827 ;;  c               1    wreg     unsigned char 
 45828 ;; Auto vars:     Size  Location     Type
 45829 ;;  c               1    2[COMRAM] unsigned char 
 45830 ;; Return value:  Size  Location     Type
 45831 ;;		None               void
 45832 ;; Registers used:
 45833 ;;		wreg, status,2, status,0
 45834 ;; Tracked objects:
 45835 ;;		On entry : 0/0
 45836 ;;		On exit  : 0/0
 45837 ;;		Unchanged: 0/0
 45838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45843 ;;Total ram usage:        3 bytes
 45844 ;; Hardware stack levels used:    1
 45845 ;; This function calls:
 45846 ;;		Nothing
 45847 ;; This function is called by:
 45848 ;;		i2__doprnt
 45849 ;; This function uses a non-reentrant model
 45850 ;;
 45851                           
 45852                           	psect	text136
 45853  01AF20                     __ptext136:
 45854                           	opt stack 0
 45855  01AF20                     i2_isdigit:
 45856                           	opt stack 14
 45857                           
 45858                           ; BSR set to: 14
 45859                           ;incstack = 0
 45860                           ;i2isdigit@c stored from wreg
 45861  01AF20  6E03               	movwf	i2isdigit@c,c
 45862  01AF22  0E00               	movlw	0
 45863  01AF24  6E02               	movwf	i2_isdigit$4314,c
 45864  01AF26  0E3A               	movlw	58
 45865  01AF28  6003               	cpfslt	i2isdigit@c,c
 45866  01AF2A  D005               	goto	i2l2550
 45867  01AF2C  0E2F               	movlw	47
 45868  01AF2E  6403               	cpfsgt	i2isdigit@c,c
 45869  01AF30  D002               	goto	i2l2550
 45870  01AF32  0E01               	movlw	1
 45871  01AF34  6E02               	movwf	i2_isdigit$4314,c
 45872  01AF36                     i2l2550:
 45873  01AF36  C002  F001         	movff	i2_isdigit$4314,??i2_isdigit
 45874  01AF3A  3001               	rrcf	??i2_isdigit,w,c
 45875  01AF3C  0012               	return	
 45876  01AF3E                     __end_ofi2_isdigit:
 45877                           	opt stack 0
 45878                           tosu	equ	0xFFF
 45879                           tosh	equ	0xFFE
 45880                           tosl	equ	0xFFD
 45881                           pclatu	equ	0xFFB
 45882                           pclath	equ	0xFFA
 45883                           tblptru	equ	0xFF8
 45884                           tblptrh	equ	0xFF7
 45885                           tblptrl	equ	0xFF6
 45886                           tablat	equ	0xFF5
 45887                           prodh	equ	0xFF4
 45888                           prodl	equ	0xFF3
 45889                           intcon	equ	0xFF2
 45890                           indf0	equ	0xFEF
 45891                           postinc0	equ	0xFEE
 45892                           fsr0h	equ	0xFEA
 45893                           fsr0l	equ	0xFE9
 45894                           wreg	equ	0xFE8
 45895                           indf1	equ	0xFE7
 45896                           postdec1	equ	0xFE5
 45897                           plusw1	equ	0xFE3
 45898                           fsr1h	equ	0xFE2
 45899                           fsr1l	equ	0xFE1
 45900                           bsr	equ	0xFE0
 45901                           indf2	equ	0xFDF
 45902                           postinc2	equ	0xFDE
 45903                           postdec2	equ	0xFDD
 45904                           plusw2	equ	0xFDB
 45905                           fsr2h	equ	0xFDA
 45906                           fsr2l	equ	0xFD9
 45907                           status	equ	0xFD8
 45908                           
 45909 ;; *************** function i2_fround *****************
 45910 ;; Defined at:
 45911 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 45912 ;; Parameters:    Size  Location     Type
 45913 ;;  prec            1    wreg     unsigned char 
 45914 ;; Auto vars:     Size  Location     Type
 45915 ;;  prec            1   84[COMRAM] unsigned char 
 45916 ;; Return value:  Size  Location     Type
 45917 ;;                  4   72[COMRAM] unsigned char 
 45918 ;; Registers used:
 45919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45920 ;; Tracked objects:
 45921 ;;		On entry : 0/0
 45922 ;;		On exit  : 0/0
 45923 ;;		Unchanged: 0/0
 45924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45926 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45928 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45929 ;;Total ram usage:       13 bytes
 45930 ;; Hardware stack levels used:    1
 45931 ;; Hardware stack levels required when called:    1
 45932 ;; This function calls:
 45933 ;;		i2___awdiv
 45934 ;;		i2___awmod
 45935 ;;		i2___flmul
 45936 ;; This function is called by:
 45937 ;;		i2__doprnt
 45938 ;; This function uses a non-reentrant model
 45939 ;;
 45940                           
 45941                           	psect	text137
 45942  0175DC                     __ptext137:
 45943                           	opt stack 0
 45944  0175DC                     i2_fround:
 45945                           	opt stack 13
 45946                           
 45947                           ;incstack = 0
 45948                           ;i2fround@prec stored from wreg
 45949  0175DC  6E55               	movwf	i2fround@prec,c
 45950                           
 45951                           ;doprnt.c: 413: if(prec>=110)
 45952  0175DE  0E6D               	movlw	109
 45953  0175E0  6455               	cpfsgt	i2fround@prec,c
 45954  0175E2  D0B5               	goto	i2l1918
 45955                           
 45956                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 45957  0175E4  0E00               	movlw	0
 45958  0175E6  6E0A               	movwf	i2___awdiv@divisor+1,c
 45959  0175E8  0E0A               	movlw	10
 45960  0175EA  6E09               	movwf	i2___awdiv@divisor,c
 45961  0175EC  0E00               	movlw	0
 45962  0175EE  6E04               	movwf	i2___awmod@divisor+1,c
 45963  0175F0  0E64               	movlw	100
 45964  0175F2  6E03               	movwf	i2___awmod@divisor,c
 45965  0175F4  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 45966  0175F8  6A02               	clrf	i2___awmod@dividend+1,c
 45967  0175FA  EC28  F0CF         	call	i2___awmod	;wreg free
 45968  0175FE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45969  017602  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45970  017606  ECB0  F0CD         	call	i2___awdiv	;wreg free
 45971  01760A  90D8               	bcf	status,0,c
 45972  01760C  3607               	rlcf	?i2___awdiv,f,c
 45973  01760E  3608               	rlcf	?i2___awdiv+1,f,c
 45974  017610  90D8               	bcf	status,0,c
 45975  017612  3607               	rlcf	?i2___awdiv,f,c
 45976  017614  3608               	rlcf	?i2___awdiv+1,f,c
 45977  017616  0E24               	movlw	36
 45978  017618  2607               	addwf	?i2___awdiv,f,c
 45979  01761A  0E00               	movlw	0
 45980  01761C  2208               	addwfc	?i2___awdiv+1,f,c
 45981  01761E  0EDB               	movlw	low __npowers_
 45982  017620  2407               	addwf	?i2___awdiv,w,c
 45983  017622  6EF6               	movwf	tblptrl,c
 45984  017624  0ECE               	movlw	high __npowers_
 45985  017626  2008               	addwfc	?i2___awdiv+1,w,c
 45986  017628  6EF7               	movwf	tblptrh,c
 45987  01762A                     	if	1	;There are 3 active tblptr bytes
 45988  01762A  6AF8               	clrf	tblptru,c
 45989  01762C  0E00               	movlw	low (__mediumconst shr (0+16))
 45990  01762E  22F8               	addwfc	tblptru,f,c
 45991  017630                     	endif
 45992  017630  0009               	tblrd		*+
 45993  017632  CFF5 F034          	movff	tablat,i2___flmul@a
 45994  017636  0009               	tblrd		*+
 45995  017638  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45996  01763C  0009               	tblrd		*+
 45997  01763E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45998  017642  000A               	tblrd		*-
 45999  017644  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46000  017648  0E00               	movlw	0
 46001  01764A  6E0A               	movwf	i2___awdiv@divisor+1,c
 46002  01764C  0E64               	movlw	100
 46003  01764E  6E09               	movwf	i2___awdiv@divisor,c
 46004  017650  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 46005  017654  6A08               	clrf	i2___awdiv@dividend+1,c
 46006  017656  ECB0  F0CD         	call	i2___awdiv	;wreg free
 46007  01765A  90D8               	bcf	status,0,c
 46008  01765C  3607               	rlcf	?i2___awdiv,f,c
 46009  01765E  3608               	rlcf	?i2___awdiv+1,f,c
 46010  017660  90D8               	bcf	status,0,c
 46011  017662  3607               	rlcf	?i2___awdiv,f,c
 46012  017664  3608               	rlcf	?i2___awdiv+1,f,c
 46013  017666  0E48               	movlw	72
 46014  017668  2607               	addwf	?i2___awdiv,f,c
 46015  01766A  0E00               	movlw	0
 46016  01766C  2208               	addwfc	?i2___awdiv+1,f,c
 46017  01766E  0EDB               	movlw	low __npowers_
 46018  017670  2407               	addwf	?i2___awdiv,w,c
 46019  017672  6EF6               	movwf	tblptrl,c
 46020  017674  0ECE               	movlw	high __npowers_
 46021  017676  2008               	addwfc	?i2___awdiv+1,w,c
 46022  017678  6EF7               	movwf	tblptrh,c
 46023  01767A                     	if	1	;There are 3 active tblptr bytes
 46024  01767A  6AF8               	clrf	tblptru,c
 46025  01767C  0E00               	movlw	low (__mediumconst shr (0+16))
 46026  01767E  22F8               	addwfc	tblptru,f,c
 46027  017680                     	endif
 46028  017680  0009               	tblrd		*+
 46029  017682  CFF5 F030          	movff	tablat,i2___flmul@b
 46030  017686  0009               	tblrd		*+
 46031  017688  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46032  01768C  0009               	tblrd		*+
 46033  01768E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46034  017692  000A               	tblrd		*-
 46035  017694  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46036  017698  EC8D  F0AD         	call	i2___flmul	;wreg free
 46037  01769C  C030  F051         	movff	?i2___flmul,i2_fround$5406
 46038  0176A0  C031  F052         	movff	?i2___flmul+1,i2_fround$5406+1
 46039  0176A4  C032  F053         	movff	?i2___flmul+2,i2_fround$5406+2
 46040  0176A8  C033  F054         	movff	?i2___flmul+3,i2_fround$5406+3
 46041                           
 46042                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46043  0176AC  0E00               	movlw	0
 46044  0176AE  6E04               	movwf	i2___awmod@divisor+1,c
 46045  0176B0  0E0A               	movlw	10
 46046  0176B2  6E03               	movwf	i2___awmod@divisor,c
 46047  0176B4  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46048  0176B8  6A02               	clrf	i2___awmod@dividend+1,c
 46049  0176BA  EC28  F0CF         	call	i2___awmod	;wreg free
 46050  0176BE  90D8               	bcf	status,0,c
 46051  0176C0  3601               	rlcf	?i2___awmod,f,c
 46052  0176C2  3602               	rlcf	?i2___awmod+1,f,c
 46053  0176C4  90D8               	bcf	status,0,c
 46054  0176C6  3601               	rlcf	?i2___awmod,f,c
 46055  0176C8  3602               	rlcf	?i2___awmod+1,f,c
 46056  0176CA  0EDB               	movlw	low __npowers_
 46057  0176CC  2401               	addwf	?i2___awmod,w,c
 46058  0176CE  6EF6               	movwf	tblptrl,c
 46059  0176D0  0ECE               	movlw	high __npowers_
 46060  0176D2  2002               	addwfc	?i2___awmod+1,w,c
 46061  0176D4  6EF7               	movwf	tblptrh,c
 46062  0176D6                     	if	1	;There are 3 active tblptr bytes
 46063  0176D6  6AF8               	clrf	tblptru,c
 46064  0176D8  0E00               	movlw	low (__mediumconst shr (0+16))
 46065  0176DA  22F8               	addwfc	tblptru,f,c
 46066  0176DC                     	endif
 46067  0176DC  0009               	tblrd		*+
 46068  0176DE  CFF5 F034          	movff	tablat,i2___flmul@a
 46069  0176E2  0009               	tblrd		*+
 46070  0176E4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46071  0176E8  0009               	tblrd		*+
 46072  0176EA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46073  0176EE  000A               	tblrd		*-
 46074  0176F0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46075  0176F4  C051  F030         	movff	i2_fround$5406,i2___flmul@b
 46076  0176F8  C052  F031         	movff	i2_fround$5406+1,i2___flmul@b+1
 46077  0176FC  C053  F032         	movff	i2_fround$5406+2,i2___flmul@b+2
 46078  017700  C054  F033         	movff	i2_fround$5406+3,i2___flmul@b+3
 46079  017704  EC8D  F0AD         	call	i2___flmul	;wreg free
 46080  017708  C030  F04D         	movff	?i2___flmul,i2_fround$5407
 46081  01770C  C031  F04E         	movff	?i2___flmul+1,i2_fround$5407+1
 46082  017710  C032  F04F         	movff	?i2___flmul+2,i2_fround$5407+2
 46083  017714  C033  F050         	movff	?i2___flmul+3,i2_fround$5407+3
 46084                           
 46085                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46086  017718  C04D  F030         	movff	i2_fround$5407,i2___flmul@b
 46087  01771C  C04E  F031         	movff	i2_fround$5407+1,i2___flmul@b+1
 46088  017720  C04F  F032         	movff	i2_fround$5407+2,i2___flmul@b+2
 46089  017724  C050  F033         	movff	i2_fround$5407+3,i2___flmul@b+3
 46090  017728  0E00               	movlw	0
 46091  01772A  6E34               	movwf	i2___flmul@a,c
 46092  01772C  0E00               	movlw	0
 46093  01772E  6E35               	movwf	i2___flmul@a+1,c
 46094  017730  0E00               	movlw	0
 46095  017732  6E36               	movwf	i2___flmul@a+2,c
 46096  017734  0E3F               	movlw	63
 46097  017736  6E37               	movwf	i2___flmul@a+3,c
 46098  017738  EC8D  F0AD         	call	i2___flmul	;wreg free
 46099  01773C  C030  F049         	movff	?i2___flmul,?i2_fround
 46100  017740  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46101  017744  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46102  017748  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46103  01774C  0012               	return	
 46104  01774E                     i2l1918:
 46105                           
 46106                           ;doprnt.c: 415: else if(prec > 10)
 46107  01774E  0E0A               	movlw	10
 46108  017750  6455               	cpfsgt	i2fround@prec,c
 46109  017752  D071               	goto	i2l1921
 46110                           
 46111                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 46112  017754  0E00               	movlw	0
 46113  017756  6E04               	movwf	i2___awmod@divisor+1,c
 46114  017758  0E0A               	movlw	10
 46115  01775A  6E03               	movwf	i2___awmod@divisor,c
 46116  01775C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46117  017760  6A02               	clrf	i2___awmod@dividend+1,c
 46118  017762  EC28  F0CF         	call	i2___awmod	;wreg free
 46119  017766  90D8               	bcf	status,0,c
 46120  017768  3601               	rlcf	?i2___awmod,f,c
 46121  01776A  3602               	rlcf	?i2___awmod+1,f,c
 46122  01776C  90D8               	bcf	status,0,c
 46123  01776E  3601               	rlcf	?i2___awmod,f,c
 46124  017770  3602               	rlcf	?i2___awmod+1,f,c
 46125  017772  0EDB               	movlw	low __npowers_
 46126  017774  2401               	addwf	?i2___awmod,w,c
 46127  017776  6EF6               	movwf	tblptrl,c
 46128  017778  0ECE               	movlw	high __npowers_
 46129  01777A  2002               	addwfc	?i2___awmod+1,w,c
 46130  01777C  6EF7               	movwf	tblptrh,c
 46131  01777E                     	if	1	;There are 3 active tblptr bytes
 46132  01777E  6AF8               	clrf	tblptru,c
 46133  017780  0E00               	movlw	low (__mediumconst shr (0+16))
 46134  017782  22F8               	addwfc	tblptru,f,c
 46135  017784                     	endif
 46136  017784  0009               	tblrd		*+
 46137  017786  CFF5 F034          	movff	tablat,i2___flmul@a
 46138  01778A  0009               	tblrd		*+
 46139  01778C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46140  017790  0009               	tblrd		*+
 46141  017792  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46142  017796  000A               	tblrd		*-
 46143  017798  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46144  01779C  0E00               	movlw	0
 46145  01779E  6E0A               	movwf	i2___awdiv@divisor+1,c
 46146  0177A0  0E0A               	movlw	10
 46147  0177A2  6E09               	movwf	i2___awdiv@divisor,c
 46148  0177A4  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 46149  0177A8  6A08               	clrf	i2___awdiv@dividend+1,c
 46150  0177AA  ECB0  F0CD         	call	i2___awdiv	;wreg free
 46151  0177AE  90D8               	bcf	status,0,c
 46152  0177B0  3607               	rlcf	?i2___awdiv,f,c
 46153  0177B2  3608               	rlcf	?i2___awdiv+1,f,c
 46154  0177B4  90D8               	bcf	status,0,c
 46155  0177B6  3607               	rlcf	?i2___awdiv,f,c
 46156  0177B8  3608               	rlcf	?i2___awdiv+1,f,c
 46157  0177BA  0E24               	movlw	36
 46158  0177BC  2607               	addwf	?i2___awdiv,f,c
 46159  0177BE  0E00               	movlw	0
 46160  0177C0  2208               	addwfc	?i2___awdiv+1,f,c
 46161  0177C2  0EDB               	movlw	low __npowers_
 46162  0177C4  2407               	addwf	?i2___awdiv,w,c
 46163  0177C6  6EF6               	movwf	tblptrl,c
 46164  0177C8  0ECE               	movlw	high __npowers_
 46165  0177CA  2008               	addwfc	?i2___awdiv+1,w,c
 46166  0177CC  6EF7               	movwf	tblptrh,c
 46167  0177CE                     	if	1	;There are 3 active tblptr bytes
 46168  0177CE  6AF8               	clrf	tblptru,c
 46169  0177D0  0E00               	movlw	low (__mediumconst shr (0+16))
 46170  0177D2  22F8               	addwfc	tblptru,f,c
 46171  0177D4                     	endif
 46172  0177D4  0009               	tblrd		*+
 46173  0177D6  CFF5 F030          	movff	tablat,i2___flmul@b
 46174  0177DA  0009               	tblrd		*+
 46175  0177DC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46176  0177E0  0009               	tblrd		*+
 46177  0177E2  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46178  0177E6  000A               	tblrd		*-
 46179  0177E8  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46180  0177EC  EC8D  F0AD         	call	i2___flmul	;wreg free
 46181  0177F0  C030  F051         	movff	?i2___flmul,i2_fround$5406
 46182  0177F4  C031  F052         	movff	?i2___flmul+1,i2_fround$5406+1
 46183  0177F8  C032  F053         	movff	?i2___flmul+2,i2_fround$5406+2
 46184  0177FC  C033  F054         	movff	?i2___flmul+3,i2_fround$5406+3
 46185                           
 46186                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 46187  017800  C051  F030         	movff	i2_fround$5406,i2___flmul@b
 46188  017804  C052  F031         	movff	i2_fround$5406+1,i2___flmul@b+1
 46189  017808  C053  F032         	movff	i2_fround$5406+2,i2___flmul@b+2
 46190  01780C  C054  F033         	movff	i2_fround$5406+3,i2___flmul@b+3
 46191  017810  0E00               	movlw	0
 46192  017812  6E34               	movwf	i2___flmul@a,c
 46193  017814  0E00               	movlw	0
 46194  017816  6E35               	movwf	i2___flmul@a+1,c
 46195  017818  0E00               	movlw	0
 46196  01781A  6E36               	movwf	i2___flmul@a+2,c
 46197  01781C  0E3F               	movlw	63
 46198  01781E  6E37               	movwf	i2___flmul@a+3,c
 46199  017820  EC8D  F0AD         	call	i2___flmul	;wreg free
 46200  017824  C030  F049         	movff	?i2___flmul,?i2_fround
 46201  017828  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46202  01782C  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46203  017830  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46204  017834  0012               	return	
 46205  017836                     i2l1921:
 46206                           
 46207                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 46208  017836  5055               	movf	i2fround@prec,w,c
 46209  017838  0D04               	mullw	4
 46210  01783A  0EDB               	movlw	low __npowers_
 46211  01783C  24F3               	addwf	prodl,w,c
 46212  01783E  6EF6               	movwf	tblptrl,c
 46213  017840  0ECE               	movlw	high __npowers_
 46214  017842  20F4               	addwfc	prodh,w,c
 46215  017844  6EF7               	movwf	tblptrh,c
 46216  017846                     	if	1	;There are 3 active tblptr bytes
 46217  017846  6AF8               	clrf	tblptru,c
 46218  017848  0E00               	movlw	low (__mediumconst shr (0+16))
 46219  01784A  22F8               	addwfc	tblptru,f,c
 46220  01784C                     	endif
 46221  01784C  0009               	tblrd		*+
 46222  01784E  CFF5 F030          	movff	tablat,i2___flmul@b
 46223  017852  0009               	tblrd		*+
 46224  017854  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46225  017858  0009               	tblrd		*+
 46226  01785A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46227  01785E  000A               	tblrd		*-
 46228  017860  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46229  017864  0E00               	movlw	0
 46230  017866  6E34               	movwf	i2___flmul@a,c
 46231  017868  0E00               	movlw	0
 46232  01786A  6E35               	movwf	i2___flmul@a+1,c
 46233  01786C  0E00               	movlw	0
 46234  01786E  6E36               	movwf	i2___flmul@a+2,c
 46235  017870  0E3F               	movlw	63
 46236  017872  6E37               	movwf	i2___flmul@a+3,c
 46237  017874  EC8D  F0AD         	call	i2___flmul	;wreg free
 46238  017878  C030  F049         	movff	?i2___flmul,?i2_fround
 46239  01787C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46240  017880  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46241  017884  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46242  017888  0012               	return	
 46243  01788A                     __end_ofi2_fround:
 46244                           	opt stack 0
 46245                           tosu	equ	0xFFF
 46246                           tosh	equ	0xFFE
 46247                           tosl	equ	0xFFD
 46248                           pclatu	equ	0xFFB
 46249                           pclath	equ	0xFFA
 46250                           tblptru	equ	0xFF8
 46251                           tblptrh	equ	0xFF7
 46252                           tblptrl	equ	0xFF6
 46253                           tablat	equ	0xFF5
 46254                           prodh	equ	0xFF4
 46255                           prodl	equ	0xFF3
 46256                           intcon	equ	0xFF2
 46257                           indf0	equ	0xFEF
 46258                           postinc0	equ	0xFEE
 46259                           fsr0h	equ	0xFEA
 46260                           fsr0l	equ	0xFE9
 46261                           wreg	equ	0xFE8
 46262                           indf1	equ	0xFE7
 46263                           postdec1	equ	0xFE5
 46264                           plusw1	equ	0xFE3
 46265                           fsr1h	equ	0xFE2
 46266                           fsr1l	equ	0xFE1
 46267                           bsr	equ	0xFE0
 46268                           indf2	equ	0xFDF
 46269                           postinc2	equ	0xFDE
 46270                           postdec2	equ	0xFDD
 46271                           plusw2	equ	0xFDB
 46272                           fsr2h	equ	0xFDA
 46273                           fsr2l	equ	0xFD9
 46274                           status	equ	0xFD8
 46275                           
 46276 ;; *************** function i2___awmod *****************
 46277 ;; Defined at:
 46278 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 46279 ;; Parameters:    Size  Location     Type
 46280 ;;  dividend        2    0[COMRAM] int 
 46281 ;;  divisor         2    2[COMRAM] int 
 46282 ;; Auto vars:     Size  Location     Type
 46283 ;;  __awmod         1    5[COMRAM] unsigned char 
 46284 ;;  __awmod         1    4[COMRAM] unsigned char 
 46285 ;; Return value:  Size  Location     Type
 46286 ;;                  2    0[COMRAM] int 
 46287 ;; Registers used:
 46288 ;;		wreg, status,2, status,0
 46289 ;; Tracked objects:
 46290 ;;		On entry : 0/0
 46291 ;;		On exit  : 0/0
 46292 ;;		Unchanged: 0/0
 46293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46298 ;;Total ram usage:        6 bytes
 46299 ;; Hardware stack levels used:    1
 46300 ;; This function calls:
 46301 ;;		Nothing
 46302 ;; This function is called by:
 46303 ;;		i2_fround
 46304 ;;		i2_scale
 46305 ;; This function uses a non-reentrant model
 46306 ;;
 46307                           
 46308                           	psect	text138
 46309  019E50                     __ptext138:
 46310                           	opt stack 0
 46311  019E50                     i2___awmod:
 46312                           	opt stack 13
 46313                           
 46314                           ;incstack = 0
 46315  019E50  0E00               	movlw	0
 46316  019E52  6E06               	movwf	i2___awmod@sign,c
 46317  019E54  AE02               	btfss	i2___awmod@dividend+1,7,c
 46318  019E56  D006               	goto	i2l2347
 46319  019E58  6C01               	negf	i2___awmod@dividend,c
 46320  019E5A  1E02               	comf	i2___awmod@dividend+1,f,c
 46321  019E5C  B0D8               	btfsc	status,0,c
 46322  019E5E  2A02               	incf	i2___awmod@dividend+1,f,c
 46323  019E60  0E01               	movlw	1
 46324  019E62  6E06               	movwf	i2___awmod@sign,c
 46325  019E64                     i2l2347:
 46326  019E64  AE04               	btfss	i2___awmod@divisor+1,7,c
 46327  019E66  D004               	goto	i2l2348
 46328  019E68  6C03               	negf	i2___awmod@divisor,c
 46329  019E6A  1E04               	comf	i2___awmod@divisor+1,f,c
 46330  019E6C  B0D8               	btfsc	status,0,c
 46331  019E6E  2A04               	incf	i2___awmod@divisor+1,f,c
 46332  019E70                     i2l2348:
 46333  019E70  5003               	movf	i2___awmod@divisor,w,c
 46334  019E72  1004               	iorwf	i2___awmod@divisor+1,w,c
 46335  019E74  B4D8               	btfsc	status,2,c
 46336  019E76  D018               	goto	i2l2355
 46337  019E78  0E01               	movlw	1
 46338  019E7A  6E05               	movwf	i2___awmod@counter,c
 46339  019E7C  D004               	goto	i2l2350
 46340  019E7E  90D8               	bcf	status,0,c
 46341  019E80  3603               	rlcf	i2___awmod@divisor,f,c
 46342  019E82  3604               	rlcf	i2___awmod@divisor+1,f,c
 46343  019E84  2A05               	incf	i2___awmod@counter,f,c
 46344  019E86                     i2l2350:
 46345  019E86  AE04               	btfss	i2___awmod@divisor+1,7,c
 46346  019E88  D7FA               	goto	i2l2351
 46347  019E8A                     i2u2007_40:
 46348  019E8A  5003               	movf	i2___awmod@divisor,w,c
 46349  019E8C  5C01               	subwf	i2___awmod@dividend,w,c
 46350  019E8E  5004               	movf	i2___awmod@divisor+1,w,c
 46351  019E90  5802               	subwfb	i2___awmod@dividend+1,w,c
 46352  019E92  A0D8               	btfss	status,0,c
 46353  019E94  D004               	goto	i2l2354
 46354  019E96  5003               	movf	i2___awmod@divisor,w,c
 46355  019E98  5E01               	subwf	i2___awmod@dividend,f,c
 46356  019E9A  5004               	movf	i2___awmod@divisor+1,w,c
 46357  019E9C  5A02               	subwfb	i2___awmod@dividend+1,f,c
 46358  019E9E                     i2l2354:
 46359  019E9E  90D8               	bcf	status,0,c
 46360  019EA0  3204               	rrcf	i2___awmod@divisor+1,f,c
 46361  019EA2  3203               	rrcf	i2___awmod@divisor,f,c
 46362  019EA4  2E05               	decfsz	i2___awmod@counter,f,c
 46363  019EA6  D7F1               	goto	i2u2007_40
 46364  019EA8                     i2l2355:
 46365  019EA8  5006               	movf	i2___awmod@sign,w,c
 46366  019EAA  B4D8               	btfsc	status,2,c
 46367  019EAC  D004               	goto	i2l2356
 46368  019EAE  6C01               	negf	i2___awmod@dividend,c
 46369  019EB0  1E02               	comf	i2___awmod@dividend+1,f,c
 46370  019EB2  B0D8               	btfsc	status,0,c
 46371  019EB4  2A02               	incf	i2___awmod@dividend+1,f,c
 46372  019EB6                     i2l2356:
 46373  019EB6  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 46374  019EBA  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 46375  019EBE  0012               	return	
 46376  019EC0                     __end_ofi2___awmod:
 46377                           	opt stack 0
 46378                           tosu	equ	0xFFF
 46379                           tosh	equ	0xFFE
 46380                           tosl	equ	0xFFD
 46381                           pclatu	equ	0xFFB
 46382                           pclath	equ	0xFFA
 46383                           tblptru	equ	0xFF8
 46384                           tblptrh	equ	0xFF7
 46385                           tblptrl	equ	0xFF6
 46386                           tablat	equ	0xFF5
 46387                           prodh	equ	0xFF4
 46388                           prodl	equ	0xFF3
 46389                           intcon	equ	0xFF2
 46390                           indf0	equ	0xFEF
 46391                           postinc0	equ	0xFEE
 46392                           fsr0h	equ	0xFEA
 46393                           fsr0l	equ	0xFE9
 46394                           wreg	equ	0xFE8
 46395                           indf1	equ	0xFE7
 46396                           postdec1	equ	0xFE5
 46397                           plusw1	equ	0xFE3
 46398                           fsr1h	equ	0xFE2
 46399                           fsr1l	equ	0xFE1
 46400                           bsr	equ	0xFE0
 46401                           indf2	equ	0xFDF
 46402                           postinc2	equ	0xFDE
 46403                           postdec2	equ	0xFDD
 46404                           plusw2	equ	0xFDB
 46405                           fsr2h	equ	0xFDA
 46406                           fsr2l	equ	0xFD9
 46407                           status	equ	0xFD8
 46408                           
 46409 ;; *************** function i2___awdiv *****************
 46410 ;; Defined at:
 46411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 46412 ;; Parameters:    Size  Location     Type
 46413 ;;  dividend        2    6[COMRAM] int 
 46414 ;;  divisor         2    8[COMRAM] int 
 46415 ;; Auto vars:     Size  Location     Type
 46416 ;;  __awdiv         2   12[COMRAM] int 
 46417 ;;  __awdiv         1   11[COMRAM] unsigned char 
 46418 ;;  __awdiv         1   10[COMRAM] unsigned char 
 46419 ;; Return value:  Size  Location     Type
 46420 ;;                  2    6[COMRAM] int 
 46421 ;; Registers used:
 46422 ;;		wreg, status,2, status,0
 46423 ;; Tracked objects:
 46424 ;;		On entry : 0/0
 46425 ;;		On exit  : 0/0
 46426 ;;		Unchanged: 0/0
 46427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46429 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46431 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46432 ;;Total ram usage:        8 bytes
 46433 ;; Hardware stack levels used:    1
 46434 ;; This function calls:
 46435 ;;		Nothing
 46436 ;; This function is called by:
 46437 ;;		i2_fround
 46438 ;;		i2_scale
 46439 ;;		i2__doprnt
 46440 ;; This function uses a non-reentrant model
 46441 ;;
 46442                           
 46443                           	psect	text139
 46444  019B60                     __ptext139:
 46445                           	opt stack 0
 46446  019B60                     i2___awdiv:
 46447                           	opt stack 13
 46448                           
 46449                           ;incstack = 0
 46450  019B60  0E00               	movlw	0
 46451  019B62  6E0C               	movwf	i2___awdiv@sign,c
 46452  019B64  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46453  019B66  D006               	goto	i2l2334
 46454  019B68  6C09               	negf	i2___awdiv@divisor,c
 46455  019B6A  1E0A               	comf	i2___awdiv@divisor+1,f,c
 46456  019B6C  B0D8               	btfsc	status,0,c
 46457  019B6E  2A0A               	incf	i2___awdiv@divisor+1,f,c
 46458  019B70  0E01               	movlw	1
 46459  019B72  6E0C               	movwf	i2___awdiv@sign,c
 46460  019B74                     i2l2334:
 46461  019B74  AE08               	btfss	i2___awdiv@dividend+1,7,c
 46462  019B76  D006               	goto	i2l2335
 46463  019B78  6C07               	negf	i2___awdiv@dividend,c
 46464  019B7A  1E08               	comf	i2___awdiv@dividend+1,f,c
 46465  019B7C  B0D8               	btfsc	status,0,c
 46466  019B7E  2A08               	incf	i2___awdiv@dividend+1,f,c
 46467  019B80  0E01               	movlw	1
 46468  019B82  1A0C               	xorwf	i2___awdiv@sign,f,c
 46469  019B84                     i2l2335:
 46470  019B84  0E00               	movlw	0
 46471  019B86  6E0E               	movwf	i2___awdiv@quotient+1,c
 46472  019B88  0E00               	movlw	0
 46473  019B8A  6E0D               	movwf	i2___awdiv@quotient,c
 46474  019B8C  5009               	movf	i2___awdiv@divisor,w,c
 46475  019B8E  100A               	iorwf	i2___awdiv@divisor+1,w,c
 46476  019B90  B4D8               	btfsc	status,2,c
 46477  019B92  D01C               	goto	i2l2342
 46478  019B94  0E01               	movlw	1
 46479  019B96  6E0B               	movwf	i2___awdiv@counter,c
 46480  019B98  D004               	goto	i2l2337
 46481  019B9A  90D8               	bcf	status,0,c
 46482  019B9C  3609               	rlcf	i2___awdiv@divisor,f,c
 46483  019B9E  360A               	rlcf	i2___awdiv@divisor+1,f,c
 46484  019BA0  2A0B               	incf	i2___awdiv@counter,f,c
 46485  019BA2                     i2l2337:
 46486  019BA2  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46487  019BA4  D7FA               	goto	i2l2338
 46488  019BA6                     i2u2001_40:
 46489  019BA6  90D8               	bcf	status,0,c
 46490  019BA8  360D               	rlcf	i2___awdiv@quotient,f,c
 46491  019BAA  360E               	rlcf	i2___awdiv@quotient+1,f,c
 46492  019BAC  5009               	movf	i2___awdiv@divisor,w,c
 46493  019BAE  5C07               	subwf	i2___awdiv@dividend,w,c
 46494  019BB0  500A               	movf	i2___awdiv@divisor+1,w,c
 46495  019BB2  5808               	subwfb	i2___awdiv@dividend+1,w,c
 46496  019BB4  A0D8               	btfss	status,0,c
 46497  019BB6  D005               	goto	i2l2341
 46498  019BB8  5009               	movf	i2___awdiv@divisor,w,c
 46499  019BBA  5E07               	subwf	i2___awdiv@dividend,f,c
 46500  019BBC  500A               	movf	i2___awdiv@divisor+1,w,c
 46501  019BBE  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 46502  019BC0  800D               	bsf	i2___awdiv@quotient,0,c
 46503  019BC2                     i2l2341:
 46504  019BC2  90D8               	bcf	status,0,c
 46505  019BC4  320A               	rrcf	i2___awdiv@divisor+1,f,c
 46506  019BC6  3209               	rrcf	i2___awdiv@divisor,f,c
 46507  019BC8  2E0B               	decfsz	i2___awdiv@counter,f,c
 46508  019BCA  D7ED               	goto	i2u2001_40
 46509  019BCC                     i2l2342:
 46510  019BCC  500C               	movf	i2___awdiv@sign,w,c
 46511  019BCE  B4D8               	btfsc	status,2,c
 46512  019BD0  D004               	goto	i2l2343
 46513  019BD2  6C0D               	negf	i2___awdiv@quotient,c
 46514  019BD4  1E0E               	comf	i2___awdiv@quotient+1,f,c
 46515  019BD6  B0D8               	btfsc	status,0,c
 46516  019BD8  2A0E               	incf	i2___awdiv@quotient+1,f,c
 46517  019BDA                     i2l2343:
 46518  019BDA  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 46519  019BDE  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 46520  019BE2  0012               	return	
 46521  019BE4                     __end_ofi2___awdiv:
 46522                           	opt stack 0
 46523                           tosu	equ	0xFFF
 46524                           tosh	equ	0xFFE
 46525                           tosl	equ	0xFFD
 46526                           pclatu	equ	0xFFB
 46527                           pclath	equ	0xFFA
 46528                           tblptru	equ	0xFF8
 46529                           tblptrh	equ	0xFF7
 46530                           tblptrl	equ	0xFF6
 46531                           tablat	equ	0xFF5
 46532                           prodh	equ	0xFF4
 46533                           prodl	equ	0xFF3
 46534                           intcon	equ	0xFF2
 46535                           indf0	equ	0xFEF
 46536                           postinc0	equ	0xFEE
 46537                           fsr0h	equ	0xFEA
 46538                           fsr0l	equ	0xFE9
 46539                           wreg	equ	0xFE8
 46540                           indf1	equ	0xFE7
 46541                           postdec1	equ	0xFE5
 46542                           plusw1	equ	0xFE3
 46543                           fsr1h	equ	0xFE2
 46544                           fsr1l	equ	0xFE1
 46545                           bsr	equ	0xFE0
 46546                           indf2	equ	0xFDF
 46547                           postinc2	equ	0xFDE
 46548                           postdec2	equ	0xFDD
 46549                           plusw2	equ	0xFDB
 46550                           fsr2h	equ	0xFDA
 46551                           fsr2l	equ	0xFD9
 46552                           status	equ	0xFD8
 46553                           
 46554 ;; *************** function i2__tdiv_to_l_ *****************
 46555 ;; Defined at:
 46556 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 46557 ;; Parameters:    Size  Location     Type
 46558 ;;  f1              3    0[COMRAM] float 
 46559 ;;  f2              3    3[COMRAM] float 
 46560 ;; Auto vars:     Size  Location     Type
 46561 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 46562 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 46563 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 46564 ;; Return value:  Size  Location     Type
 46565 ;;                  4    0[COMRAM] unsigned long 
 46566 ;; Registers used:
 46567 ;;		wreg, status,2, status,0
 46568 ;; Tracked objects:
 46569 ;;		On entry : 0/0
 46570 ;;		On exit  : 0/0
 46571 ;;		Unchanged: 0/0
 46572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46573 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46574 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46575 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46576 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46577 ;;Total ram usage:       15 bytes
 46578 ;; Hardware stack levels used:    1
 46579 ;; This function calls:
 46580 ;;		Nothing
 46581 ;; This function is called by:
 46582 ;;		i2__doprnt
 46583 ;; This function uses a non-reentrant model
 46584 ;;
 46585                           
 46586                           	psect	text140
 46587  01880C                     __ptext140:
 46588                           	opt stack 0
 46589  01880C                     i2__tdiv_to_l_:
 46590                           	opt stack 14
 46591                           
 46592                           ;incstack = 0
 46593  01880C  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 46594  018810  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 46595  018812  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 46596  018814  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 46597  018816  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 46598  018818  E301               	bnc	u2043_41
 46599  01881A  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 46600  01881C                     u2043_41:
 46601  01881C  5007               	movf	??i2__tdiv_to_l_,w,c
 46602  01881E  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 46603  018820  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46604  018822  A4D8               	btfss	status,2,c
 46605  018824  D009               	goto	i2l2482
 46606  018826  0E00               	movlw	0
 46607  018828  6E01               	movwf	?i2__tdiv_to_l_,c
 46608  01882A  0E00               	movlw	0
 46609  01882C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46610  01882E  0E00               	movlw	0
 46611  018830  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46612  018832  0E00               	movlw	0
 46613  018834  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46614  018836  0012               	return	
 46615  018838                     i2l2482:
 46616  018838  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 46617  01883C  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 46618  01883E  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 46619  018840  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 46620  018842  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 46621  018844  E301               	bnc	u2045_41
 46622  018846  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 46623  018848                     u2045_41:
 46624  018848  5007               	movf	??i2__tdiv_to_l_,w,c
 46625  01884A  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 46626  01884C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 46627  01884E  A4D8               	btfss	status,2,c
 46628  018850  D009               	goto	i2l2484
 46629  018852  0E00               	movlw	0
 46630  018854  6E01               	movwf	?i2__tdiv_to_l_,c
 46631  018856  0E00               	movlw	0
 46632  018858  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46633  01885A  0E00               	movlw	0
 46634  01885C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46635  01885E  0E00               	movlw	0
 46636  018860  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46637  018862  0012               	return	
 46638  018864                     i2l2484:
 46639  018864  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 46640  018866  0EFF               	movlw	255
 46641  018868  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 46642  01886A  0EFF               	movlw	255
 46643  01886C  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 46644  01886E  0E00               	movlw	0
 46645  018870  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 46646  018872  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 46647  018874  0EFF               	movlw	255
 46648  018876  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 46649  018878  0EFF               	movlw	255
 46650  01887A  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 46651  01887C  0E00               	movlw	0
 46652  01887E  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 46653  018880  0E00               	movlw	0
 46654  018882  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 46655  018884  0E00               	movlw	0
 46656  018886  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 46657  018888  0E00               	movlw	0
 46658  01888A  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 46659  01888C  0E00               	movlw	0
 46660  01888E  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 46661  018890  0E7F               	movlw	127
 46662  018892  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 46663  018894  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 46664  018896  0F98               	addlw	152
 46665  018898  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 46666  01889A  0E18               	movlw	24
 46667  01889C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 46668  01889E                     i2l2485:
 46669  01889E  90D8               	bcf	status,0,c
 46670  0188A0  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 46671  0188A2  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 46672  0188A4  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 46673  0188A6  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 46674  0188A8  5004               	movf	i2__tdiv_to_l_@f2,w,c
 46675  0188AA  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 46676  0188AC  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 46677  0188AE  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 46678  0188B0  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 46679  0188B2  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 46680  0188B4  A0D8               	btfss	status,0,c
 46681  0188B6  D007               	goto	i2l2486
 46682  0188B8  5004               	movf	i2__tdiv_to_l_@f2,w,c
 46683  0188BA  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 46684  0188BC  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 46685  0188BE  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 46686  0188C0  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 46687  0188C2  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 46688  0188C4  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 46689  0188C6                     i2l2486:
 46690  0188C6  90D8               	bcf	status,0,c
 46691  0188C8  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 46692  0188CA  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 46693  0188CC  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 46694  0188CE  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 46695  0188D0  D7E6               	goto	i2l2485
 46696  0188D2  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 46697  0188D4  D016               	goto	i2l2488
 46698  0188D6  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46699  0188D8  0A80               	xorlw	128
 46700  0188DA  0F97               	addlw	151
 46701  0188DC  B0D8               	btfsc	status,0,c
 46702  0188DE  D009               	goto	i2l2489
 46703  0188E0  0E00               	movlw	0
 46704  0188E2  6E01               	movwf	?i2__tdiv_to_l_,c
 46705  0188E4  0E00               	movlw	0
 46706  0188E6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46707  0188E8  0E00               	movlw	0
 46708  0188EA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46709  0188EC  0E00               	movlw	0
 46710  0188EE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46711  0188F0  0012               	return	
 46712  0188F2                     i2l2489:
 46713  0188F2  90D8               	bcf	status,0,c
 46714  0188F4  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 46715  0188F6  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 46716  0188F8  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 46717  0188FA  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 46718  0188FC  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 46719  0188FE  D7F9               	goto	i2l2489
 46720  018900  D015               	goto	i2u2051_40
 46721  018902                     i2l2488:
 46722  018902  0E17               	movlw	23
 46723  018904  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 46724  018906  D00F               	goto	i2l2494
 46725  018908  0E00               	movlw	0
 46726  01890A  6E01               	movwf	?i2__tdiv_to_l_,c
 46727  01890C  0E00               	movlw	0
 46728  01890E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46729  018910  0E00               	movlw	0
 46730  018912  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46731  018914  0E00               	movlw	0
 46732  018916  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46733  018918  0012               	return	
 46734  01891A  90D8               	bcf	status,0,c
 46735  01891C  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 46736  01891E  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 46737  018920  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 46738  018922  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 46739  018924  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 46740  018926                     i2l2494:
 46741  018926  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46742  018928  A4D8               	btfss	status,2,c
 46743  01892A  D7F7               	goto	i2l2495
 46744  01892C                     i2u2051_40:
 46745  01892C  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 46746  018930  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 46747  018934  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 46748  018938  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 46749  01893C  0012               	return		;funcret
 46750  01893E                     __end_ofi2__tdiv_to_l_:
 46751                           	opt stack 0
 46752                           tosu	equ	0xFFF
 46753                           tosh	equ	0xFFE
 46754                           tosl	equ	0xFFD
 46755                           pclatu	equ	0xFFB
 46756                           pclath	equ	0xFFA
 46757                           tblptru	equ	0xFF8
 46758                           tblptrh	equ	0xFF7
 46759                           tblptrl	equ	0xFF6
 46760                           tablat	equ	0xFF5
 46761                           prodh	equ	0xFF4
 46762                           prodl	equ	0xFF3
 46763                           intcon	equ	0xFF2
 46764                           indf0	equ	0xFEF
 46765                           postinc0	equ	0xFEE
 46766                           fsr0h	equ	0xFEA
 46767                           fsr0l	equ	0xFE9
 46768                           wreg	equ	0xFE8
 46769                           indf1	equ	0xFE7
 46770                           postdec1	equ	0xFE5
 46771                           plusw1	equ	0xFE3
 46772                           fsr1h	equ	0xFE2
 46773                           fsr1l	equ	0xFE1
 46774                           bsr	equ	0xFE0
 46775                           indf2	equ	0xFDF
 46776                           postinc2	equ	0xFDE
 46777                           postdec2	equ	0xFDD
 46778                           plusw2	equ	0xFDB
 46779                           fsr2h	equ	0xFDA
 46780                           fsr2l	equ	0xFD9
 46781                           status	equ	0xFD8
 46782                           
 46783 ;; *************** function i2__div_to_l_ *****************
 46784 ;; Defined at:
 46785 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 46786 ;; Parameters:    Size  Location     Type
 46787 ;;  f1              4    0[COMRAM] unsigned long 
 46788 ;;  f2              4    4[COMRAM] unsigned long 
 46789 ;; Auto vars:     Size  Location     Type
 46790 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 46791 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 46792 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 46793 ;; Return value:  Size  Location     Type
 46794 ;;                  4    0[COMRAM] unsigned long 
 46795 ;; Registers used:
 46796 ;;		wreg, status,2, status,0
 46797 ;; Tracked objects:
 46798 ;;		On entry : 0/0
 46799 ;;		On exit  : 0/0
 46800 ;;		Unchanged: 0/0
 46801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46802 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46803 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46805 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46806 ;;Total ram usage:       14 bytes
 46807 ;; Hardware stack levels used:    1
 46808 ;; This function calls:
 46809 ;;		Nothing
 46810 ;; This function is called by:
 46811 ;;		i2__doprnt
 46812 ;; This function uses a non-reentrant model
 46813 ;;
 46814                           
 46815                           	psect	text141
 46816  018A68                     __ptext141:
 46817                           	opt stack 0
 46818  018A68                     i2__div_to_l_:
 46819                           	opt stack 14
 46820                           
 46821                           ;incstack = 0
 46822  018A68  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 46823  018A6A  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 46824  018A6C  6E0E               	movwf	i2__div_to_l_@exp1,c
 46825  018A6E  500E               	movf	i2__div_to_l_@exp1,w,c
 46826  018A70  A4D8               	btfss	status,2,c
 46827  018A72  D009               	goto	i2l2378
 46828  018A74  0E00               	movlw	0
 46829  018A76  6E01               	movwf	?i2__div_to_l_,c
 46830  018A78  0E00               	movlw	0
 46831  018A7A  6E02               	movwf	?i2__div_to_l_+1,c
 46832  018A7C  0E00               	movlw	0
 46833  018A7E  6E03               	movwf	?i2__div_to_l_+2,c
 46834  018A80  0E00               	movlw	0
 46835  018A82  6E04               	movwf	?i2__div_to_l_+3,c
 46836  018A84  0012               	return	
 46837  018A86                     i2l2378:
 46838  018A86  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 46839  018A88  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 46840  018A8A  6E0D               	movwf	i2__div_to_l_@cntr,c
 46841  018A8C  500D               	movf	i2__div_to_l_@cntr,w,c
 46842  018A8E  A4D8               	btfss	status,2,c
 46843  018A90  D009               	goto	i2l2380
 46844  018A92  0E00               	movlw	0
 46845  018A94  6E01               	movwf	?i2__div_to_l_,c
 46846  018A96  0E00               	movlw	0
 46847  018A98  6E02               	movwf	?i2__div_to_l_+1,c
 46848  018A9A  0E00               	movlw	0
 46849  018A9C  6E03               	movwf	?i2__div_to_l_+2,c
 46850  018A9E  0E00               	movlw	0
 46851  018AA0  6E04               	movwf	?i2__div_to_l_+3,c
 46852  018AA2  0012               	return	
 46853  018AA4                     i2l2380:
 46854  018AA4  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 46855  018AA6  0EFF               	movlw	255
 46856  018AA8  1601               	andwf	i2__div_to_l_@f1,f,c
 46857  018AAA  0EFF               	movlw	255
 46858  018AAC  1602               	andwf	i2__div_to_l_@f1+1,f,c
 46859  018AAE  0EFF               	movlw	255
 46860  018AB0  1603               	andwf	i2__div_to_l_@f1+2,f,c
 46861  018AB2  0E00               	movlw	0
 46862  018AB4  1604               	andwf	i2__div_to_l_@f1+3,f,c
 46863  018AB6  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 46864  018AB8  0EFF               	movlw	255
 46865  018ABA  1605               	andwf	i2__div_to_l_@f2,f,c
 46866  018ABC  0EFF               	movlw	255
 46867  018ABE  1606               	andwf	i2__div_to_l_@f2+1,f,c
 46868  018AC0  0EFF               	movlw	255
 46869  018AC2  1607               	andwf	i2__div_to_l_@f2+2,f,c
 46870  018AC4  0E00               	movlw	0
 46871  018AC6  1608               	andwf	i2__div_to_l_@f2+3,f,c
 46872  018AC8  0E00               	movlw	0
 46873  018ACA  6E09               	movwf	i2__div_to_l_@quot,c
 46874  018ACC  0E00               	movlw	0
 46875  018ACE  6E0A               	movwf	i2__div_to_l_@quot+1,c
 46876  018AD0  0E00               	movlw	0
 46877  018AD2  6E0B               	movwf	i2__div_to_l_@quot+2,c
 46878  018AD4  0E00               	movlw	0
 46879  018AD6  6E0C               	movwf	i2__div_to_l_@quot+3,c
 46880  018AD8  0E7F               	movlw	127
 46881  018ADA  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 46882  018ADC  500D               	movf	i2__div_to_l_@cntr,w,c
 46883  018ADE  0FA0               	addlw	160
 46884  018AE0  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 46885  018AE2  0E20               	movlw	32
 46886  018AE4  6E0D               	movwf	i2__div_to_l_@cntr,c
 46887  018AE6  90D8               	bcf	status,0,c
 46888  018AE8  3609               	rlcf	i2__div_to_l_@quot,f,c
 46889  018AEA  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 46890  018AEC  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 46891  018AEE  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 46892  018AF0  5005               	movf	i2__div_to_l_@f2,w,c
 46893  018AF2  5C01               	subwf	i2__div_to_l_@f1,w,c
 46894  018AF4  5006               	movf	i2__div_to_l_@f2+1,w,c
 46895  018AF6  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 46896  018AF8  5007               	movf	i2__div_to_l_@f2+2,w,c
 46897  018AFA  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 46898  018AFC  5008               	movf	i2__div_to_l_@f2+3,w,c
 46899  018AFE  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 46900  018B00  A0D8               	btfss	status,0,c
 46901  018B02  D009               	goto	i2l2382
 46902  018B04  5005               	movf	i2__div_to_l_@f2,w,c
 46903  018B06  5E01               	subwf	i2__div_to_l_@f1,f,c
 46904  018B08  5006               	movf	i2__div_to_l_@f2+1,w,c
 46905  018B0A  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 46906  018B0C  5007               	movf	i2__div_to_l_@f2+2,w,c
 46907  018B0E  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 46908  018B10  5008               	movf	i2__div_to_l_@f2+3,w,c
 46909  018B12  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 46910  018B14  8009               	bsf	i2__div_to_l_@quot,0,c
 46911  018B16                     i2l2382:
 46912  018B16  90D8               	bcf	status,0,c
 46913  018B18  3601               	rlcf	i2__div_to_l_@f1,f,c
 46914  018B1A  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 46915  018B1C  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 46916  018B1E  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 46917  018B20  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 46918  018B22  D7E1               	goto	i2l2381
 46919  018B24  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 46920  018B26  D016               	goto	i2l2384
 46921  018B28  500E               	movf	i2__div_to_l_@exp1,w,c
 46922  018B2A  0A80               	xorlw	128
 46923  018B2C  0F9F               	addlw	159
 46924  018B2E  B0D8               	btfsc	status,0,c
 46925  018B30  D009               	goto	i2l2385
 46926  018B32  0E00               	movlw	0
 46927  018B34  6E01               	movwf	?i2__div_to_l_,c
 46928  018B36  0E00               	movlw	0
 46929  018B38  6E02               	movwf	?i2__div_to_l_+1,c
 46930  018B3A  0E00               	movlw	0
 46931  018B3C  6E03               	movwf	?i2__div_to_l_+2,c
 46932  018B3E  0E00               	movlw	0
 46933  018B40  6E04               	movwf	?i2__div_to_l_+3,c
 46934  018B42  0012               	return	
 46935  018B44                     i2l2385:
 46936  018B44  90D8               	bcf	status,0,c
 46937  018B46  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 46938  018B48  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 46939  018B4A  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 46940  018B4C  3209               	rrcf	i2__div_to_l_@quot,f,c
 46941  018B4E  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 46942  018B50  D7F9               	goto	i2l2385
 46943  018B52  D015               	goto	i2u2042_40
 46944  018B54                     i2l2384:
 46945  018B54  0E1F               	movlw	31
 46946  018B56  640E               	cpfsgt	i2__div_to_l_@exp1,c
 46947  018B58  D00F               	goto	i2l2390
 46948  018B5A  0E00               	movlw	0
 46949  018B5C  6E01               	movwf	?i2__div_to_l_,c
 46950  018B5E  0E00               	movlw	0
 46951  018B60  6E02               	movwf	?i2__div_to_l_+1,c
 46952  018B62  0E00               	movlw	0
 46953  018B64  6E03               	movwf	?i2__div_to_l_+2,c
 46954  018B66  0E00               	movlw	0
 46955  018B68  6E04               	movwf	?i2__div_to_l_+3,c
 46956  018B6A  0012               	return	
 46957  018B6C  90D8               	bcf	status,0,c
 46958  018B6E  3609               	rlcf	i2__div_to_l_@quot,f,c
 46959  018B70  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 46960  018B72  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 46961  018B74  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 46962  018B76  060E               	decf	i2__div_to_l_@exp1,f,c
 46963  018B78                     i2l2390:
 46964  018B78  500E               	movf	i2__div_to_l_@exp1,w,c
 46965  018B7A  A4D8               	btfss	status,2,c
 46966  018B7C  D7F7               	goto	i2l2391
 46967  018B7E                     i2u2042_40:
 46968  018B7E  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 46969  018B82  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 46970  018B86  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 46971  018B8A  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 46972  018B8E  0012               	return		;funcret
 46973  018B90                     __end_ofi2__div_to_l_:
 46974                           	opt stack 0
 46975                           tosu	equ	0xFFF
 46976                           tosh	equ	0xFFE
 46977                           tosl	equ	0xFFD
 46978                           pclatu	equ	0xFFB
 46979                           pclath	equ	0xFFA
 46980                           tblptru	equ	0xFF8
 46981                           tblptrh	equ	0xFF7
 46982                           tblptrl	equ	0xFF6
 46983                           tablat	equ	0xFF5
 46984                           prodh	equ	0xFF4
 46985                           prodl	equ	0xFF3
 46986                           intcon	equ	0xFF2
 46987                           indf0	equ	0xFEF
 46988                           postinc0	equ	0xFEE
 46989                           fsr0h	equ	0xFEA
 46990                           fsr0l	equ	0xFE9
 46991                           wreg	equ	0xFE8
 46992                           indf1	equ	0xFE7
 46993                           postdec1	equ	0xFE5
 46994                           plusw1	equ	0xFE3
 46995                           fsr1h	equ	0xFE2
 46996                           fsr1l	equ	0xFE1
 46997                           bsr	equ	0xFE0
 46998                           indf2	equ	0xFDF
 46999                           postinc2	equ	0xFDE
 47000                           postdec2	equ	0xFDD
 47001                           plusw2	equ	0xFDB
 47002                           fsr2h	equ	0xFDA
 47003                           fsr2l	equ	0xFD9
 47004                           status	equ	0xFD8
 47005                           
 47006 ;; *************** function i2___wmul *****************
 47007 ;; Defined at:
 47008 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 47009 ;; Parameters:    Size  Location     Type
 47010 ;;  multiplier      2    0[COMRAM] unsigned int 
 47011 ;;  multiplicand    2    2[COMRAM] unsigned int 
 47012 ;; Auto vars:     Size  Location     Type
 47013 ;;  __wmul          2    4[COMRAM] unsigned int 
 47014 ;; Return value:  Size  Location     Type
 47015 ;;                  2    0[COMRAM] unsigned int 
 47016 ;; Registers used:
 47017 ;;		wreg, status,2, status,0, prodl, prodh
 47018 ;; Tracked objects:
 47019 ;;		On entry : 0/0
 47020 ;;		On exit  : 0/0
 47021 ;;		Unchanged: 0/0
 47022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47027 ;;Total ram usage:        6 bytes
 47028 ;; Hardware stack levels used:    1
 47029 ;; This function calls:
 47030 ;;		Nothing
 47031 ;; This function is called by:
 47032 ;;		i2__doprnt
 47033 ;; This function uses a non-reentrant model
 47034 ;;
 47035                           
 47036                           	psect	text142
 47037  01AE0A                     __ptext142:
 47038                           	opt stack 0
 47039  01AE0A                     i2___wmul:
 47040                           	opt stack 14
 47041                           
 47042                           ;incstack = 0
 47043  01AE0A  5001               	movf	i2___wmul@multiplier,w,c
 47044  01AE0C  0203               	mulwf	i2___wmul@multiplicand,c
 47045  01AE0E  CFF3 F005          	movff	prodl,i2___wmul@product
 47046  01AE12  CFF4 F006          	movff	prodh,i2___wmul@product+1
 47047  01AE16  5001               	movf	i2___wmul@multiplier,w,c
 47048  01AE18  0204               	mulwf	i2___wmul@multiplicand+1,c
 47049  01AE1A  50F3               	movf	prodl,w,c
 47050  01AE1C  2606               	addwf	i2___wmul@product+1,f,c
 47051  01AE1E  5002               	movf	i2___wmul@multiplier+1,w,c
 47052  01AE20  0203               	mulwf	i2___wmul@multiplicand,c
 47053  01AE22  50F3               	movf	prodl,w,c
 47054  01AE24  2606               	addwf	i2___wmul@product+1,f,c
 47055  01AE26  C005  F001         	movff	i2___wmul@product,?i2___wmul
 47056  01AE2A  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 47057  01AE2E  0012               	return	
 47058  01AE30                     __end_ofi2___wmul:
 47059                           	opt stack 0
 47060                           tosu	equ	0xFFF
 47061                           tosh	equ	0xFFE
 47062                           tosl	equ	0xFFD
 47063                           pclatu	equ	0xFFB
 47064                           pclath	equ	0xFFA
 47065                           tblptru	equ	0xFF8
 47066                           tblptrh	equ	0xFF7
 47067                           tblptrl	equ	0xFF6
 47068                           tablat	equ	0xFF5
 47069                           prodh	equ	0xFF4
 47070                           prodl	equ	0xFF3
 47071                           intcon	equ	0xFF2
 47072                           indf0	equ	0xFEF
 47073                           postinc0	equ	0xFEE
 47074                           fsr0h	equ	0xFEA
 47075                           fsr0l	equ	0xFE9
 47076                           wreg	equ	0xFE8
 47077                           indf1	equ	0xFE7
 47078                           postdec1	equ	0xFE5
 47079                           plusw1	equ	0xFE3
 47080                           fsr1h	equ	0xFE2
 47081                           fsr1l	equ	0xFE1
 47082                           bsr	equ	0xFE0
 47083                           indf2	equ	0xFDF
 47084                           postinc2	equ	0xFDE
 47085                           postdec2	equ	0xFDD
 47086                           plusw2	equ	0xFDB
 47087                           fsr2h	equ	0xFDA
 47088                           fsr2l	equ	0xFD9
 47089                           status	equ	0xFD8
 47090                           
 47091 ;; *************** function i2___llmod *****************
 47092 ;; Defined at:
 47093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 47094 ;; Parameters:    Size  Location     Type
 47095 ;;  dividend        4   13[COMRAM] unsigned long 
 47096 ;;  divisor         4   17[COMRAM] unsigned long 
 47097 ;; Auto vars:     Size  Location     Type
 47098 ;;  __llmod         1   21[COMRAM] unsigned char 
 47099 ;; Return value:  Size  Location     Type
 47100 ;;                  4   13[COMRAM] unsigned long 
 47101 ;; Registers used:
 47102 ;;		wreg, status,2, status,0
 47103 ;; Tracked objects:
 47104 ;;		On entry : 0/0
 47105 ;;		On exit  : 0/0
 47106 ;;		Unchanged: 0/0
 47107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47111 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47112 ;;Total ram usage:        9 bytes
 47113 ;; Hardware stack levels used:    1
 47114 ;; This function calls:
 47115 ;;		Nothing
 47116 ;; This function is called by:
 47117 ;;		i2__doprnt
 47118 ;; This function uses a non-reentrant model
 47119 ;;
 47120                           
 47121                           	psect	text143
 47122  01A0D0                     __ptext143:
 47123                           	opt stack 0
 47124  01A0D0                     i2___llmod:
 47125                           	opt stack 14
 47126                           
 47127                           ;incstack = 0
 47128  01A0D0  5012               	movf	i2___llmod@divisor,w,c
 47129  01A0D2  1013               	iorwf	i2___llmod@divisor+1,w,c
 47130  01A0D4  1014               	iorwf	i2___llmod@divisor+2,w,c
 47131  01A0D6  1015               	iorwf	i2___llmod@divisor+3,w,c
 47132  01A0D8  B4D8               	btfsc	status,2,c
 47133  01A0DA  D024               	goto	i2l2605
 47134  01A0DC  0E01               	movlw	1
 47135  01A0DE  6E16               	movwf	i2___llmod@counter,c
 47136  01A0E0  D006               	goto	i2l2600
 47137  01A0E2  90D8               	bcf	status,0,c
 47138  01A0E4  3612               	rlcf	i2___llmod@divisor,f,c
 47139  01A0E6  3613               	rlcf	i2___llmod@divisor+1,f,c
 47140  01A0E8  3614               	rlcf	i2___llmod@divisor+2,f,c
 47141  01A0EA  3615               	rlcf	i2___llmod@divisor+3,f,c
 47142  01A0EC  2A16               	incf	i2___llmod@counter,f,c
 47143  01A0EE                     i2l2600:
 47144  01A0EE  AE15               	btfss	i2___llmod@divisor+3,7,c
 47145  01A0F0  D7F8               	goto	i2l2601
 47146  01A0F2                     i2u2058_40:
 47147  01A0F2  5012               	movf	i2___llmod@divisor,w,c
 47148  01A0F4  5C0E               	subwf	i2___llmod@dividend,w,c
 47149  01A0F6  5013               	movf	i2___llmod@divisor+1,w,c
 47150  01A0F8  580F               	subwfb	i2___llmod@dividend+1,w,c
 47151  01A0FA  5014               	movf	i2___llmod@divisor+2,w,c
 47152  01A0FC  5810               	subwfb	i2___llmod@dividend+2,w,c
 47153  01A0FE  5015               	movf	i2___llmod@divisor+3,w,c
 47154  01A100  5811               	subwfb	i2___llmod@dividend+3,w,c
 47155  01A102  A0D8               	btfss	status,0,c
 47156  01A104  D008               	goto	i2l2604
 47157  01A106  5012               	movf	i2___llmod@divisor,w,c
 47158  01A108  5E0E               	subwf	i2___llmod@dividend,f,c
 47159  01A10A  5013               	movf	i2___llmod@divisor+1,w,c
 47160  01A10C  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 47161  01A10E  5014               	movf	i2___llmod@divisor+2,w,c
 47162  01A110  5A10               	subwfb	i2___llmod@dividend+2,f,c
 47163  01A112  5015               	movf	i2___llmod@divisor+3,w,c
 47164  01A114  5A11               	subwfb	i2___llmod@dividend+3,f,c
 47165  01A116                     i2l2604:
 47166  01A116  90D8               	bcf	status,0,c
 47167  01A118  3215               	rrcf	i2___llmod@divisor+3,f,c
 47168  01A11A  3214               	rrcf	i2___llmod@divisor+2,f,c
 47169  01A11C  3213               	rrcf	i2___llmod@divisor+1,f,c
 47170  01A11E  3212               	rrcf	i2___llmod@divisor,f,c
 47171  01A120  2E16               	decfsz	i2___llmod@counter,f,c
 47172  01A122  D7E7               	goto	i2u2058_40
 47173  01A124                     i2l2605:
 47174  01A124  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 47175  01A128  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 47176  01A12C  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 47177  01A130  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 47178  01A134  0012               	return		;funcret
 47179  01A136                     __end_ofi2___llmod:
 47180                           	opt stack 0
 47181                           tosu	equ	0xFFF
 47182                           tosh	equ	0xFFE
 47183                           tosl	equ	0xFFD
 47184                           pclatu	equ	0xFFB
 47185                           pclath	equ	0xFFA
 47186                           tblptru	equ	0xFF8
 47187                           tblptrh	equ	0xFF7
 47188                           tblptrl	equ	0xFF6
 47189                           tablat	equ	0xFF5
 47190                           prodh	equ	0xFF4
 47191                           prodl	equ	0xFF3
 47192                           intcon	equ	0xFF2
 47193                           indf0	equ	0xFEF
 47194                           postinc0	equ	0xFEE
 47195                           fsr0h	equ	0xFEA
 47196                           fsr0l	equ	0xFE9
 47197                           wreg	equ	0xFE8
 47198                           indf1	equ	0xFE7
 47199                           postdec1	equ	0xFE5
 47200                           plusw1	equ	0xFE3
 47201                           fsr1h	equ	0xFE2
 47202                           fsr1l	equ	0xFE1
 47203                           bsr	equ	0xFE0
 47204                           indf2	equ	0xFDF
 47205                           postinc2	equ	0xFDE
 47206                           postdec2	equ	0xFDD
 47207                           plusw2	equ	0xFDB
 47208                           fsr2h	equ	0xFDA
 47209                           fsr2l	equ	0xFD9
 47210                           status	equ	0xFD8
 47211                           
 47212 ;; *************** function i2___lldiv *****************
 47213 ;; Defined at:
 47214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 47215 ;; Parameters:    Size  Location     Type
 47216 ;;  dividend        4    0[COMRAM] unsigned long 
 47217 ;;  divisor         4    4[COMRAM] unsigned long 
 47218 ;; Auto vars:     Size  Location     Type
 47219 ;;  __lldiv         4    8[COMRAM] unsigned long 
 47220 ;;  __lldiv         1   12[COMRAM] unsigned char 
 47221 ;; Return value:  Size  Location     Type
 47222 ;;                  4    0[COMRAM] unsigned long 
 47223 ;; Registers used:
 47224 ;;		wreg, status,2, status,0
 47225 ;; Tracked objects:
 47226 ;;		On entry : 0/0
 47227 ;;		On exit  : 0/0
 47228 ;;		Unchanged: 0/0
 47229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47230 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47231 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47233 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47234 ;;Total ram usage:       13 bytes
 47235 ;; Hardware stack levels used:    1
 47236 ;; This function calls:
 47237 ;;		Nothing
 47238 ;; This function is called by:
 47239 ;;		i2__doprnt
 47240 ;; This function uses a non-reentrant model
 47241 ;;
 47242                           
 47243                           	psect	text144
 47244  019C66                     __ptext144:
 47245                           	opt stack 0
 47246  019C66                     i2___lldiv:
 47247                           	opt stack 14
 47248                           
 47249                           ;incstack = 0
 47250  019C66  0E00               	movlw	0
 47251  019C68  6E09               	movwf	i2___lldiv@quotient,c
 47252  019C6A  0E00               	movlw	0
 47253  019C6C  6E0A               	movwf	i2___lldiv@quotient+1,c
 47254  019C6E  0E00               	movlw	0
 47255  019C70  6E0B               	movwf	i2___lldiv@quotient+2,c
 47256  019C72  0E00               	movlw	0
 47257  019C74  6E0C               	movwf	i2___lldiv@quotient+3,c
 47258  019C76  5005               	movf	i2___lldiv@divisor,w,c
 47259  019C78  1006               	iorwf	i2___lldiv@divisor+1,w,c
 47260  019C7A  1007               	iorwf	i2___lldiv@divisor+2,w,c
 47261  019C7C  1008               	iorwf	i2___lldiv@divisor+3,w,c
 47262  019C7E  B4D8               	btfsc	status,2,c
 47263  019C80  D02A               	goto	i2l2595
 47264  019C82  0E01               	movlw	1
 47265  019C84  6E0D               	movwf	i2___lldiv@counter,c
 47266  019C86  D006               	goto	i2l2590
 47267  019C88  90D8               	bcf	status,0,c
 47268  019C8A  3605               	rlcf	i2___lldiv@divisor,f,c
 47269  019C8C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 47270  019C8E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 47271  019C90  3608               	rlcf	i2___lldiv@divisor+3,f,c
 47272  019C92  2A0D               	incf	i2___lldiv@counter,f,c
 47273  019C94                     i2l2590:
 47274  019C94  AE08               	btfss	i2___lldiv@divisor+3,7,c
 47275  019C96  D7F8               	goto	i2l2591
 47276  019C98                     i2u2055_40:
 47277  019C98  90D8               	bcf	status,0,c
 47278  019C9A  3609               	rlcf	i2___lldiv@quotient,f,c
 47279  019C9C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 47280  019C9E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 47281  019CA0  360C               	rlcf	i2___lldiv@quotient+3,f,c
 47282  019CA2  5005               	movf	i2___lldiv@divisor,w,c
 47283  019CA4  5C01               	subwf	i2___lldiv@dividend,w,c
 47284  019CA6  5006               	movf	i2___lldiv@divisor+1,w,c
 47285  019CA8  5802               	subwfb	i2___lldiv@dividend+1,w,c
 47286  019CAA  5007               	movf	i2___lldiv@divisor+2,w,c
 47287  019CAC  5803               	subwfb	i2___lldiv@dividend+2,w,c
 47288  019CAE  5008               	movf	i2___lldiv@divisor+3,w,c
 47289  019CB0  5804               	subwfb	i2___lldiv@dividend+3,w,c
 47290  019CB2  A0D8               	btfss	status,0,c
 47291  019CB4  D009               	goto	i2l2594
 47292  019CB6  5005               	movf	i2___lldiv@divisor,w,c
 47293  019CB8  5E01               	subwf	i2___lldiv@dividend,f,c
 47294  019CBA  5006               	movf	i2___lldiv@divisor+1,w,c
 47295  019CBC  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 47296  019CBE  5007               	movf	i2___lldiv@divisor+2,w,c
 47297  019CC0  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 47298  019CC2  5008               	movf	i2___lldiv@divisor+3,w,c
 47299  019CC4  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 47300  019CC6  8009               	bsf	i2___lldiv@quotient,0,c
 47301  019CC8                     i2l2594:
 47302  019CC8  90D8               	bcf	status,0,c
 47303  019CCA  3208               	rrcf	i2___lldiv@divisor+3,f,c
 47304  019CCC  3207               	rrcf	i2___lldiv@divisor+2,f,c
 47305  019CCE  3206               	rrcf	i2___lldiv@divisor+1,f,c
 47306  019CD0  3205               	rrcf	i2___lldiv@divisor,f,c
 47307  019CD2  2E0D               	decfsz	i2___lldiv@counter,f,c
 47308  019CD4  D7E1               	goto	i2u2055_40
 47309  019CD6                     i2l2595:
 47310  019CD6  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 47311  019CDA  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 47312  019CDE  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 47313  019CE2  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 47314  019CE6  0012               	return		;funcret
 47315  019CE8                     __end_ofi2___lldiv:
 47316                           	opt stack 0
 47317                           tosu	equ	0xFFF
 47318                           tosh	equ	0xFFE
 47319                           tosl	equ	0xFFD
 47320                           pclatu	equ	0xFFB
 47321                           pclath	equ	0xFFA
 47322                           tblptru	equ	0xFF8
 47323                           tblptrh	equ	0xFF7
 47324                           tblptrl	equ	0xFF6
 47325                           tablat	equ	0xFF5
 47326                           prodh	equ	0xFF4
 47327                           prodl	equ	0xFF3
 47328                           intcon	equ	0xFF2
 47329                           indf0	equ	0xFEF
 47330                           postinc0	equ	0xFEE
 47331                           fsr0h	equ	0xFEA
 47332                           fsr0l	equ	0xFE9
 47333                           wreg	equ	0xFE8
 47334                           indf1	equ	0xFE7
 47335                           postdec1	equ	0xFE5
 47336                           plusw1	equ	0xFE3
 47337                           fsr1h	equ	0xFE2
 47338                           fsr1l	equ	0xFE1
 47339                           bsr	equ	0xFE0
 47340                           indf2	equ	0xFDF
 47341                           postinc2	equ	0xFDE
 47342                           postdec2	equ	0xFDD
 47343                           plusw2	equ	0xFDB
 47344                           fsr2h	equ	0xFDA
 47345                           fsr2l	equ	0xFD9
 47346                           status	equ	0xFD8
 47347                           
 47348 ;; *************** function _ADCC_ThresholdISR *****************
 47349 ;; Defined at:
 47350 ;;		line 301 in file "mcc_generated_files/adcc.c"
 47351 ;; Parameters:    Size  Location     Type
 47352 ;;		None
 47353 ;; Auto vars:     Size  Location     Type
 47354 ;;		None
 47355 ;; Return value:  Size  Location     Type
 47356 ;;                  1    wreg      void 
 47357 ;; Registers used:
 47358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47359 ;; Tracked objects:
 47360 ;;		On entry : 0/0
 47361 ;;		On exit  : 0/0
 47362 ;;		Unchanged: 0/0
 47363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47368 ;;Total ram usage:        0 bytes
 47369 ;; Hardware stack levels used:    1
 47370 ;; Hardware stack levels required when called:    7
 47371 ;; This function calls:
 47372 ;;		Absolute function
 47373 ;;		_ADCC_DefaultInterruptHandler
 47374 ;;		_ADCPostProcessingCallback
 47375 ;; This function is called by:
 47376 ;;		_INTERRUPT_InterruptManagerHigh
 47377 ;; This function uses a non-reentrant model
 47378 ;;
 47379                           
 47380                           	psect	text145
 47381  01AD70                     __ptext145:
 47382                           	opt stack 0
 47383  01AD70                     _ADCC_ThresholdISR:
 47384                           	opt stack 10
 47385                           
 47386                           ;adcc.c: 304: PIR1bits.ADTIF = 0;
 47387                           
 47388                           ;incstack = 0
 47389  01AD70  010E               	movlb	14	; () banked
 47390  01AD72  9334               	bcf	52,1,b	;volatile
 47391                           
 47392                           ; BSR set to: 14
 47393                           ;adcc.c: 306: if (ADCC_ADTI_InterruptHandler)
 47394  01AD74  0102               	movlb	2	; () banked
 47395  01AD76  5150               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47396  01AD78  1151               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47397  01AD7A  1152               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47398  01AD7C  B4D8               	btfsc	status,2,c
 47399  01AD7E  0012               	return	
 47400                           
 47401                           ; BSR set to: 2
 47402                           ;adcc.c: 307: ADCC_ADTI_InterruptHandler();
 47403  01AD80  D801               	call	i2u3407_48
 47404  01AD82  0012               	return	
 47405  01AD84                     i2u3407_48:
 47406  01AD84  0005               	push	
 47407  01AD86  6EFA               	movwf	pclath,c
 47408  01AD88  5150               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47409  01AD8A  6EFD               	movwf	tosl,c
 47410  01AD8C  5151               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47411  01AD8E  6EFE               	movwf	tosh,c
 47412  01AD90  5152               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47413  01AD92  6EFF               	movwf	tosu,c
 47414  01AD94  50FA               	movf	pclath,w,c
 47415  01AD96  0012               	return		;indir
 47416  01AD98                     __end_of_ADCC_ThresholdISR:
 47417                           	opt stack 0
 47418                           tosu	equ	0xFFF
 47419                           tosh	equ	0xFFE
 47420                           tosl	equ	0xFFD
 47421                           pclatu	equ	0xFFB
 47422                           pclath	equ	0xFFA
 47423                           tblptru	equ	0xFF8
 47424                           tblptrh	equ	0xFF7
 47425                           tblptrl	equ	0xFF6
 47426                           tablat	equ	0xFF5
 47427                           prodh	equ	0xFF4
 47428                           prodl	equ	0xFF3
 47429                           intcon	equ	0xFF2
 47430                           indf0	equ	0xFEF
 47431                           postinc0	equ	0xFEE
 47432                           fsr0h	equ	0xFEA
 47433                           fsr0l	equ	0xFE9
 47434                           wreg	equ	0xFE8
 47435                           indf1	equ	0xFE7
 47436                           postdec1	equ	0xFE5
 47437                           plusw1	equ	0xFE3
 47438                           fsr1h	equ	0xFE2
 47439                           fsr1l	equ	0xFE1
 47440                           bsr	equ	0xFE0
 47441                           indf2	equ	0xFDF
 47442                           postinc2	equ	0xFDE
 47443                           postdec2	equ	0xFDD
 47444                           plusw2	equ	0xFDB
 47445                           fsr2h	equ	0xFDA
 47446                           fsr2l	equ	0xFD9
 47447                           status	equ	0xFD8
 47448                           
 47449 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 47450 ;; Defined at:
 47451 ;;		line 313 in file "mcc_generated_files/adcc.c"
 47452 ;; Parameters:    Size  Location     Type
 47453 ;;		None
 47454 ;; Auto vars:     Size  Location     Type
 47455 ;;		None
 47456 ;; Return value:  Size  Location     Type
 47457 ;;                  1    wreg      void 
 47458 ;; Registers used:
 47459 ;;		None
 47460 ;; Tracked objects:
 47461 ;;		On entry : 0/0
 47462 ;;		On exit  : 0/0
 47463 ;;		Unchanged: 0/0
 47464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47469 ;;Total ram usage:        0 bytes
 47470 ;; Hardware stack levels used:    1
 47471 ;; This function calls:
 47472 ;;		Nothing
 47473 ;; This function is called by:
 47474 ;;		_ADCC_Initialize
 47475 ;;		_ADCC_ThresholdISR
 47476 ;; This function uses a non-reentrant model
 47477 ;;
 47478                           
 47479                           	psect	text146
 47480  01B1FC                     __ptext146:
 47481                           	opt stack 0
 47482  01B1FC                     _ADCC_DefaultInterruptHandler:
 47483                           	opt stack 16
 47484                           
 47485                           ;incstack = 0
 47486  01B1FC  0012               	return		;funcret
 47487  01B1FE                     __end_of_ADCC_DefaultInterruptHandler:
 47488                           	opt stack 0
 47489                           tosu	equ	0xFFF
 47490                           tosh	equ	0xFFE
 47491                           tosl	equ	0xFFD
 47492                           pclatu	equ	0xFFB
 47493                           pclath	equ	0xFFA
 47494                           tblptru	equ	0xFF8
 47495                           tblptrh	equ	0xFF7
 47496                           tblptrl	equ	0xFF6
 47497                           tablat	equ	0xFF5
 47498                           prodh	equ	0xFF4
 47499                           prodl	equ	0xFF3
 47500                           intcon	equ	0xFF2
 47501                           indf0	equ	0xFEF
 47502                           postinc0	equ	0xFEE
 47503                           fsr0h	equ	0xFEA
 47504                           fsr0l	equ	0xFE9
 47505                           wreg	equ	0xFE8
 47506                           indf1	equ	0xFE7
 47507                           postdec1	equ	0xFE5
 47508                           plusw1	equ	0xFE3
 47509                           fsr1h	equ	0xFE2
 47510                           fsr1l	equ	0xFE1
 47511                           bsr	equ	0xFE0
 47512                           indf2	equ	0xFDF
 47513                           postinc2	equ	0xFDE
 47514                           postdec2	equ	0xFDD
 47515                           plusw2	equ	0xFDB
 47516                           fsr2h	equ	0xFDA
 47517                           fsr2l	equ	0xFD9
 47518                           status	equ	0xFD8
 47519                           
 47520 ;; *************** function _ADCPostProcessingCallback *****************
 47521 ;; Defined at:
 47522 ;;		line 231 in file "main.c"
 47523 ;; Parameters:    Size  Location     Type
 47524 ;;		None
 47525 ;; Auto vars:     Size  Location     Type
 47526 ;;  current_adc_    1  117[BANK0 ] enum E17572
 47527 ;; Return value:  Size  Location     Type
 47528 ;;                  1    wreg      void 
 47529 ;; Registers used:
 47530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47531 ;; Tracked objects:
 47532 ;;		On entry : 0/0
 47533 ;;		On exit  : 0/0
 47534 ;;		Unchanged: 0/0
 47535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47537 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47539 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47540 ;;Total ram usage:       21 bytes
 47541 ;; Hardware stack levels used:    1
 47542 ;; Hardware stack levels required when called:    6
 47543 ;; This function calls:
 47544 ;;		_ADCC_GetConversionResult
 47545 ;;		_ADCC_GetCurrentCountofConversions
 47546 ;;		_ADCC_GetFilterValue
 47547 ;;		_ADCC_HasAccumulatorOverflowed
 47548 ;;		_ADCC_StopConversion
 47549 ;;		_abs
 47550 ;;		_currentMeasuredToPeak
 47551 ;;		_peakToRMS
 47552 ;;		i2___fladd
 47553 ;;		i2___fldiv
 47554 ;;		i2___flge
 47555 ;;		i2___flmul
 47556 ;;		i2___flneg
 47557 ;;		i2___fltol
 47558 ;;		i2___xxtofl
 47559 ;; This function is called by:
 47560 ;;		_main
 47561 ;;		_ADCC_ThresholdISR
 47562 ;; This function uses a non-reentrant model
 47563 ;;
 47564                           
 47565                           	psect	text147
 47566  014078                     __ptext147:
 47567                           	opt stack 0
 47568  014078                     _ADCPostProcessingCallback:
 47569                           	opt stack 10
 47570                           
 47571                           ;main.c: 234: ADCC_StopConversion();
 47572                           
 47573                           ;incstack = 0
 47574  014078  ECF5  F0D8         	call	_ADCC_StopConversion	;wreg free
 47575                           
 47576                           ;main.c: 237: adcc_channel_t current_adc_channel = ADPCH;
 47577  01407C  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 47578                           
 47579                           ;main.c: 240: switch (current_adc_channel) {
 47580  014080  EF74  F0A5         	goto	i2l1188
 47581  014084                     
 47582                           ;main.c: 244: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 47583  014084  EC41  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 47584  014088  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 47585  01408C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 47586  014090  6A07               	clrf	i2___xxtofl@val+2,c
 47587  014092  6A08               	clrf	i2___xxtofl@val+3,c
 47588  014094  0E00               	movlw	0
 47589  014096  EC8E  F0C1         	call	i2___xxtofl
 47590  01409A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47591  01409E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47592  0140A2  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47593  0140A6  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47594  0140AA  0E0D               	movlw	13
 47595  0140AC  6E34               	movwf	i2___flmul@a,c
 47596  0140AE  0E68               	movlw	104
 47597  0140B0  6E35               	movwf	i2___flmul@a+1,c
 47598  0140B2  0E53               	movlw	83
 47599  0140B4  6E36               	movwf	i2___flmul@a+2,c
 47600  0140B6  0E3B               	movlw	59
 47601  0140B8  6E37               	movwf	i2___flmul@a+3,c
 47602  0140BA  EC8D  F0AD         	call	i2___flmul	;wreg free
 47603  0140BE  C030  F240         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 47604  0140C2  C031  F241         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 47605  0140C6  C032  F242         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 47606  0140CA  C033  F243         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 47607                           
 47608                           ;main.c: 246: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 47609  0140CE  0E0A               	movlw	10
 47610  0140D0  6E34               	movwf	i2___flge@ff1,c
 47611  0140D2  0ED7               	movlw	215
 47612  0140D4  6E35               	movwf	i2___flge@ff1+1,c
 47613  0140D6  0E23               	movlw	35
 47614  0140D8  6E36               	movwf	i2___flge@ff1+2,c
 47615  0140DA  0E3C               	movlw	60
 47616  0140DC  6E37               	movwf	i2___flge@ff1+3,c
 47617  0140DE  C240  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 47618  0140E2  C241  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 47619  0140E6  C242  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 47620  0140EA  C243  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 47621  0140EE  ECEB  F0C6         	call	i2___flge	;wreg free
 47622  0140F2  A0D8               	btfss	status,0,c
 47623  0140F4  D005               	goto	i2u2240_40
 47624  0140F6  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47625  0140FA  0900               	iorlw	0
 47626  0140FC  B4D8               	btfsc	status,2,c
 47627  0140FE  D004               	goto	i2l1190
 47628  014100                     i2u2240_40:
 47629                           
 47630                           ;main.c: 248: error_handler.AVSS_ADC_error_flag = 1;
 47631  014100  0E01               	movlw	1
 47632  014102  0102               	movlb	2	; () banked
 47633  014104  6F03               	movwf	(_error_handler+3)& (0+255),b
 47634                           
 47635                           ; BSR set to: 2
 47636                           ;main.c: 249: return;
 47637  014106  0012               	return	
 47638  014108                     i2l1190:
 47639                           
 47640                           ;main.c: 251: }
 47641                           ;main.c: 253: next_channel = channel_FVR_buf1;
 47642                           
 47643                           ; BSR set to: 2
 47644  014108  0E3F               	movlw	63
 47645  01410A  EF6D  F0A5         	goto	L26
 47646  01410E                     
 47647                           ;main.c: 260: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 47648                           
 47649                           ; BSR set to: 2
 47650  01410E  0E0D               	movlw	13
 47651  014110  6E34               	movwf	i2___flmul@a,c
 47652  014112  0E68               	movlw	104
 47653  014114  6E35               	movwf	i2___flmul@a+1,c
 47654  014116  0E53               	movlw	83
 47655  014118  6E36               	movwf	i2___flmul@a+2,c
 47656  01411A  0E3B               	movlw	59
 47657  01411C  6E37               	movwf	i2___flmul@a+3,c
 47658  01411E  EC41  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 47659  014122  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 47660  014126  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 47661  01412A  6A07               	clrf	i2___xxtofl@val+2,c
 47662  01412C  6A08               	clrf	i2___xxtofl@val+3,c
 47663  01412E  0E00               	movlw	0
 47664  014130  EC8E  F0C1         	call	i2___xxtofl
 47665  014134  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47666  014138  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47667  01413C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47668  014140  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47669  014144  EC8D  F0AD         	call	i2___flmul	;wreg free
 47670  014148  C030  F056         	movff	?i2___flmul,i2___fladd@b
 47671  01414C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 47672  014150  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 47673  014154  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 47674  014158  C240  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 47675  01415C  C241  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 47676  014160  C242  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 47677  014164  C243  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 47678  014168  ECD4  F0B0         	call	i2___fladd	;wreg free
 47679  01416C  C056  F1E2         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 47680  014170  C057  F1E3         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 47681  014174  C058  F1E4         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 47682  014178  C059  F1E5         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 47683                           
 47684                           ;main.c: 261: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 47685  01417C  0E6F               	movlw	111
 47686  01417E  6E13               	movwf	i2___fldiv@b,c
 47687  014180  0E12               	movlw	18
 47688  014182  6E14               	movwf	i2___fldiv@b+1,c
 47689  014184  0E03               	movlw	3
 47690  014186  6E15               	movwf	i2___fldiv@b+2,c
 47691  014188  0E40               	movlw	64
 47692  01418A  6E16               	movwf	i2___fldiv@b+3,c
 47693  01418C  C1E2  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 47694  014190  C1E3  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 47695  014194  C1E4  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 47696  014198  C1E5  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 47697  01419C  EC94  F0B9         	call	i2___fldiv	;wreg free
 47698  0141A0  C013  F23C         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 47699  0141A4  C014  F23D         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 47700  0141A8  C015  F23E         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 47701  0141AC  C016  F23F         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 47702                           
 47703                           ;main.c: 263: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 47704  0141B0  0E00               	movlw	0
 47705  0141B2  6E34               	movwf	i2___flge@ff1,c
 47706  0141B4  0E00               	movlw	0
 47707  0141B6  6E35               	movwf	i2___flge@ff1+1,c
 47708  0141B8  0E20               	movlw	32
 47709  0141BA  6E36               	movwf	i2___flge@ff1+2,c
 47710  0141BC  0E40               	movlw	64
 47711  0141BE  6E37               	movwf	i2___flge@ff1+3,c
 47712  0141C0  C1E2  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 47713  0141C4  C1E3  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 47714  0141C8  C1E4  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 47715  0141CC  C1E5  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 47716  0141D0  ECEB  F0C6         	call	i2___flge	;wreg free
 47717  0141D4  A0D8               	btfss	status,0,c
 47718  0141D6  D019               	goto	i2u2243_40
 47719  0141D8  C1E2  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 47720  0141DC  C1E3  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 47721  0141E0  C1E4  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 47722  0141E4  C1E5  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 47723  0141E8  0E00               	movlw	0
 47724  0141EA  6E38               	movwf	i2___flge@ff2,c
 47725  0141EC  0E00               	movlw	0
 47726  0141EE  6E39               	movwf	i2___flge@ff2+1,c
 47727  0141F0  0E00               	movlw	0
 47728  0141F2  6E3A               	movwf	i2___flge@ff2+2,c
 47729  0141F4  0E40               	movlw	64
 47730  0141F6  6E3B               	movwf	i2___flge@ff2+3,c
 47731  0141F8  ECEB  F0C6         	call	i2___flge	;wreg free
 47732  0141FC  A0D8               	btfss	status,0,c
 47733  0141FE  D005               	goto	i2u2243_40
 47734  014200  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47735  014204  0900               	iorlw	0
 47736  014206  B4D8               	btfsc	status,2,c
 47737  014208  D004               	goto	i2l1196
 47738  01420A                     i2u2243_40:
 47739                           
 47740                           ;main.c: 265: error_handler.FVR_ADC_error_flag = 1;
 47741  01420A  0E01               	movlw	1
 47742  01420C  0102               	movlb	2	; () banked
 47743  01420E  6F05               	movwf	(_error_handler+5)& (0+255),b
 47744                           
 47745                           ; BSR set to: 2
 47746                           ;main.c: 266: return;
 47747  014210  0012               	return	
 47748  014212                     i2l1196:
 47749                           
 47750                           ;main.c: 268: }
 47751                           ;main.c: 270: next_channel = POS3P3_ADC;
 47752                           
 47753                           ; BSR set to: 2
 47754  014212  0E22               	movlw	34
 47755  014214  EF6D  F0A5         	goto	L26
 47756  014218                     
 47757                           ;main.c: 277: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 47758                           
 47759                           ; BSR set to: 2
 47760  014218  C23C  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 47761  01421C  C23D  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 47762  014220  C23E  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 47763  014224  C23F  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 47764  014228  EC37  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 47765  01422C  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 47766  014230  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 47767  014234  6A07               	clrf	i2___xxtofl@val+2,c
 47768  014236  6A08               	clrf	i2___xxtofl@val+3,c
 47769  014238  0E00               	movlw	0
 47770  01423A  EC8E  F0C1         	call	i2___xxtofl
 47771  01423E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47772  014242  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47773  014246  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47774  01424A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47775  01424E  EC8D  F0AD         	call	i2___flmul	;wreg free
 47776  014252  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5396
 47777  014256  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5396+1
 47778  01425A  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5396+2
 47779  01425E  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5396+3
 47780                           
 47781                           ;main.c: 277: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 47782  014262  C0D6  F030         	movff	_ADCPostProcessingCallback$5396,i2___flmul@b
 47783  014266  C0D7  F031         	movff	_ADCPostProcessingCallback$5396+1,i2___flmul@b+1
 47784  01426A  C0D8  F032         	movff	_ADCPostProcessingCallback$5396+2,i2___flmul@b+2
 47785  01426E  C0D9  F033         	movff	_ADCPostProcessingCallback$5396+3,i2___flmul@b+3
 47786  014272  0E0D               	movlw	13
 47787  014274  6E34               	movwf	i2___flmul@a,c
 47788  014276  0E68               	movlw	104
 47789  014278  6E35               	movwf	i2___flmul@a+1,c
 47790  01427A  0ED3               	movlw	211
 47791  01427C  6E36               	movwf	i2___flmul@a+2,c
 47792  01427E  0E3B               	movlw	59
 47793  014280  6E37               	movwf	i2___flmul@a+3,c
 47794  014282  EC8D  F0AD         	call	i2___flmul	;wreg free
 47795  014286  C030  F1DA         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 47796  01428A  C031  F1DB         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 47797  01428E  C032  F1DC         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 47798  014292  C033  F1DD         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 47799                           
 47800                           ;main.c: 279: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 47801  014296  0E00               	movlw	0
 47802  014298  6E34               	movwf	i2___flge@ff1,c
 47803  01429A  0E00               	movlw	0
 47804  01429C  6E35               	movwf	i2___flge@ff1+1,c
 47805  01429E  0E60               	movlw	96
 47806  0142A0  6E36               	movwf	i2___flge@ff1+2,c
 47807  0142A2  0E40               	movlw	64
 47808  0142A4  6E37               	movwf	i2___flge@ff1+3,c
 47809  0142A6  C1DA  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 47810  0142AA  C1DB  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 47811  0142AE  C1DC  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 47812  0142B2  C1DD  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 47813  0142B6  ECEB  F0C6         	call	i2___flge	;wreg free
 47814  0142BA  A0D8               	btfss	status,0,c
 47815  0142BC  D005               	goto	i2u2245_40
 47816  0142BE  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47817  0142C2  0900               	iorlw	0
 47818  0142C4  B4D8               	btfsc	status,2,c
 47819  0142C6  D004               	goto	i2l1200
 47820  0142C8                     i2u2245_40:
 47821                           
 47822                           ;main.c: 281: error_handler.POS3P3_ADC_error_flag = 1;
 47823  0142C8  0E01               	movlw	1
 47824  0142CA  0102               	movlb	2	; () banked
 47825  0142CC  6F02               	movwf	(_error_handler+2)& (0+255),b
 47826                           
 47827                           ; BSR set to: 2
 47828                           ;main.c: 282: return;
 47829  0142CE  0012               	return	
 47830  0142D0                     i2l1200:
 47831                           
 47832                           ;main.c: 284: }
 47833                           ;main.c: 286: next_channel = ISNS_ADC;
 47834                           
 47835                           ; BSR set to: 2
 47836  0142D0  0E00               	movlw	0
 47837  0142D2  EF6D  F0A5         	goto	L26
 47838  0142D6                     
 47839                           ;main.c: 293: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 47840                           
 47841                           ; BSR set to: 2
 47842  0142D6  0E00               	movlw	0
 47843  0142D8  6E17               	movwf	i2___fldiv@a,c
 47844  0142DA  0EC0               	movlw	192
 47845  0142DC  6E18               	movwf	i2___fldiv@a+1,c
 47846  0142DE  0E7F               	movlw	127
 47847  0142E0  6E19               	movwf	i2___fldiv@a+2,c
 47848  0142E2  0E44               	movlw	68
 47849  0142E4  6E1A               	movwf	i2___fldiv@a+3,c
 47850  0142E6  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 47851  0142EA  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 47852  0142EE  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 47853  0142F2  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 47854  0142F6  EC94  F0B9         	call	i2___fldiv	;wreg free
 47855  0142FA  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 47856  0142FE  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 47857  014302  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 47858  014306  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 47859  01430A  EC37  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 47860  01430E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 47861  014312  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 47862  014316  6A07               	clrf	i2___xxtofl@val+2,c
 47863  014318  6A08               	clrf	i2___xxtofl@val+3,c
 47864  01431A  0E00               	movlw	0
 47865  01431C  EC8E  F0C1         	call	i2___xxtofl
 47866  014320  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47867  014324  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47868  014328  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47869  01432C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47870  014330  EC8D  F0AD         	call	i2___flmul	;wreg free
 47871  014334  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5396
 47872  014338  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5396+1
 47873  01433C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5396+2
 47874  014340  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5396+3
 47875                           
 47876                           ;main.c: 293: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 47877  014344  C0D6  F030         	movff	_ADCPostProcessingCallback$5396,i2___flmul@b
 47878  014348  C0D7  F031         	movff	_ADCPostProcessingCallback$5396+1,i2___flmul@b+1
 47879  01434C  C0D8  F032         	movff	_ADCPostProcessingCallback$5396+2,i2___flmul@b+2
 47880  014350  C0D9  F033         	movff	_ADCPostProcessingCallback$5396+3,i2___flmul@b+3
 47881  014354  0E35               	movlw	53
 47882  014356  6E34               	movwf	i2___flmul@a,c
 47883  014358  0E5E               	movlw	94
 47884  01435A  6E35               	movwf	i2___flmul@a+1,c
 47885  01435C  0EF2               	movlw	242
 47886  01435E  6E36               	movwf	i2___flmul@a+2,c
 47887  014360  0E3F               	movlw	63
 47888  014362  6E37               	movwf	i2___flmul@a+3,c
 47889  014364  EC8D  F0AD         	call	i2___flmul	;wreg free
 47890  014368  C030  F234         	movff	?i2___flmul,_Imeas	;volatile
 47891  01436C  C031  F235         	movff	?i2___flmul+1,_Imeas+1	;volatile
 47892  014370  C032  F236         	movff	?i2___flmul+2,_Imeas+2	;volatile
 47893  014374  C033  F237         	movff	?i2___flmul+3,_Imeas+3	;volatile
 47894                           
 47895                           ;main.c: 297: if (LATGbits.LATG0 != 1) {
 47896  014378  B07F               	btfsc	3967,0,c	;volatile
 47897  01437A  D166               	goto	i2l1204
 47898                           
 47899                           ;main.c: 302: if (load_enable) {
 47900  01437C  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 47901  01437E  D0CD               	goto	i2l1205
 47902                           
 47903                           ;main.c: 305: if (dimming_period < 0x7FEE) {
 47904  014380  0EEE               	movlw	238
 47905  014382  0100               	movlb	0	; () banked
 47906  014384  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 47907  014386  0E7F               	movlw	127
 47908  014388  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 47909  01438A  B0D8               	btfsc	status,0,c
 47910  01438C  D052               	goto	i2l1206
 47911                           
 47912                           ; BSR set to: 0
 47913                           ;main.c: 307: Ipk = Imeas;
 47914  01438E  C234  F1CE         	movff	_Imeas,_Ipk	;volatile
 47915  014392  C235  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 47916  014396  C236  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 47917  01439A  C237  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 47918                           
 47919                           ; BSR set to: 0
 47920                           ;main.c: 308: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47921  01439E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 47922  0143A2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 47923  0143A6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 47924  0143AA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 47925  0143AE  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 47926  0143B2  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 47927  0143B6  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 47928  0143BA  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 47929  0143BE  ECA4  F0BE         	call	_peakToRMS	;wreg free
 47930  0143C2  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5397
 47931  0143C6  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5397+1
 47932  0143CA  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5397+2
 47933  0143CE  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5397+3
 47934                           
 47935                           ;main.c: 308: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47936  0143D2  C2E8  F05A         	movff	_Irms_offset,i2___fladd@a
 47937  0143D6  C2E9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 47938  0143DA  C2EA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 47939  0143DE  C2EB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 47940  0143E2  C0DA  F056         	movff	_ADCPostProcessingCallback$5397,i2___fladd@b
 47941  0143E6  C0DB  F057         	movff	_ADCPostProcessingCallback$5397+1,i2___fladd@b+1
 47942  0143EA  C0DC  F058         	movff	_ADCPostProcessingCallback$5397+2,i2___fladd@b+2
 47943  0143EE  C0DD  F059         	movff	_ADCPostProcessingCallback$5397+3,i2___fladd@b+3
 47944  0143F2  ECD4  F0B0         	call	i2___fladd	;wreg free
 47945  0143F6  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 47946  0143FA  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 47947  0143FE  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 47948  014402  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 47949  014406  EC77  F0C9         	call	i2___fltol	;wreg free
 47950  01440A  C06C  F076         	movff	?i2___fltol,abs@a
 47951  01440E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 47952  014412  EC7B  F0D6         	call	_abs	;wreg free
 47953  014416  0100               	movlb	0	; () banked
 47954  014418  C076  F005         	movff	?_abs,i2___xxtofl@val
 47955  01441C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 47956  014420  0E00               	movlw	0
 47957  014422  BE06               	btfsc	i2___xxtofl@val+1,7,c
 47958  014424  0EFF               	movlw	-1
 47959  014426  6E07               	movwf	i2___xxtofl@val+2,c
 47960  014428  6E08               	movwf	i2___xxtofl@val+3,c
 47961  01442A  0E01               	movlw	1
 47962  01442C  EC8E  F0C1         	call	i2___xxtofl
 47963  014430  D063               	goto	L24
 47964  014432                     i2l1206:
 47965                           
 47966                           ;main.c: 313: else {
 47967                           ;main.c: 315: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 47968  014432  C234  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 47969  014436  C235  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 47970  01443A  C236  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 47971  01443E  C237  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 47972  014442  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 47973  014446  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 47974  01444A  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 47975  01444E  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 47976  014452  EC74  F0CE         	call	_currentMeasuredToPeak	;wreg free
 47977  014456  C099  F1CE         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 47978  01445A  C09A  F1CF         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 47979  01445E  C09B  F1D0         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 47980  014462  C09C  F1D1         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 47981                           
 47982                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47983  014466  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 47984  01446A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 47985  01446E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 47986  014472  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 47987  014476  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 47988  01447A  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 47989  01447E  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 47990  014482  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 47991  014486  ECA4  F0BE         	call	_peakToRMS	;wreg free
 47992  01448A  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5397
 47993  01448E  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5397+1
 47994  014492  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5397+2
 47995  014496  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5397+3
 47996                           
 47997                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 47998  01449A  C2E8  F05A         	movff	_Irms_offset,i2___fladd@a
 47999  01449E  C2E9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48000  0144A2  C2EA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48001  0144A6  C2EB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48002  0144AA  C0DA  F056         	movff	_ADCPostProcessingCallback$5397,i2___fladd@b
 48003  0144AE  C0DB  F057         	movff	_ADCPostProcessingCallback$5397+1,i2___fladd@b+1
 48004  0144B2  C0DC  F058         	movff	_ADCPostProcessingCallback$5397+2,i2___fladd@b+2
 48005  0144B6  C0DD  F059         	movff	_ADCPostProcessingCallback$5397+3,i2___fladd@b+3
 48006  0144BA  ECD4  F0B0         	call	i2___fladd	;wreg free
 48007  0144BE  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48008  0144C2  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48009  0144C6  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48010  0144CA  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48011  0144CE  EC77  F0C9         	call	i2___fltol	;wreg free
 48012  0144D2  C06C  F076         	movff	?i2___fltol,abs@a
 48013  0144D6  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48014  0144DA  EC7B  F0D6         	call	_abs	;wreg free
 48015  0144DE  0100               	movlb	0	; () banked
 48016  0144E0  C076  F005         	movff	?_abs,i2___xxtofl@val
 48017  0144E4  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48018  0144E8  0E00               	movlw	0
 48019  0144EA  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48020  0144EC  0EFF               	movlw	-1
 48021  0144EE  6E07               	movwf	i2___xxtofl@val+2,c
 48022  0144F0  6E08               	movwf	i2___xxtofl@val+3,c
 48023  0144F2  0E01               	movlw	1
 48024  0144F4  EC8E  F0C1         	call	i2___xxtofl
 48025  0144F8                     L24:
 48026  0144F8  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 48027  0144FC  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 48028  014500  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 48029  014504  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 48030                           
 48031                           ;main.c: 318: }
 48032                           ;main.c: 320: Vpk = Vpk_const;
 48033  014508  C2EC  F238         	movff	_Vpk_const,_Vpk	;volatile
 48034  01450C  C2ED  F239         	movff	_Vpk_const+1,_Vpk+1	;volatile
 48035  014510  C2EE  F23A         	movff	_Vpk_const+2,_Vpk+2	;volatile
 48036  014514  C2EF  F23B         	movff	_Vpk_const+3,_Vpk+3	;volatile
 48037                           
 48038                           ;main.c: 322: }
 48039  014518  D02C               	goto	i2l1208
 48040  01451A                     i2l1205:
 48041                           
 48042                           ;main.c: 324: else {
 48043                           ;main.c: 326: Ipk = 0.0;
 48044  01451A  0E00               	movlw	0
 48045  01451C  0101               	movlb	1	; () banked
 48046  01451E  6FCE               	movwf	_Ipk& (0+255),b	;volatile
 48047  014520  0E00               	movlw	0
 48048  014522  6FCF               	movwf	(_Ipk+1)& (0+255),b	;volatile
 48049  014524  0E00               	movlw	0
 48050  014526  6FD0               	movwf	(_Ipk+2)& (0+255),b	;volatile
 48051  014528  0E00               	movlw	0
 48052  01452A  6FD1               	movwf	(_Ipk+3)& (0+255),b	;volatile
 48053                           
 48054                           ;main.c: 327: Vpk = 0.0;
 48055  01452C  0E00               	movlw	0
 48056  01452E  0102               	movlb	2	; () banked
 48057  014530  6F38               	movwf	_Vpk& (0+255),b	;volatile
 48058  014532  0E00               	movlw	0
 48059  014534  6F39               	movwf	(_Vpk+1)& (0+255),b	;volatile
 48060  014536  0E00               	movlw	0
 48061  014538  6F3A               	movwf	(_Vpk+2)& (0+255),b	;volatile
 48062  01453A  0E00               	movlw	0
 48063  01453C  6F3B               	movwf	(_Vpk+3)& (0+255),b	;volatile
 48064                           
 48065                           ; BSR set to: 2
 48066                           ;main.c: 328: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 48067  01453E  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48068  014542  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48069  014546  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48070  01454A  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48071  01454E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48072  014552  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48073  014556  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48074  01455A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48075  01455E  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48076  014562  C0B1  F1CA         	movff	?_peakToRMS,_Irms	;volatile
 48077  014566  C0B2  F1CB         	movff	?_peakToRMS+1,_Irms+1	;volatile
 48078  01456A  C0B3  F1CC         	movff	?_peakToRMS+2,_Irms+2	;volatile
 48079  01456E  C0B4  F1CD         	movff	?_peakToRMS+3,_Irms+3	;volatile
 48080  014572                     i2l1208:
 48081                           
 48082                           ;main.c: 330: }
 48083                           ;main.c: 332: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 48084  014572  C238  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 48085  014576  C239  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 48086  01457A  C23A  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 48087  01457E  C23B  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 48088  014582  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48089  014586  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48090  01458A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48091  01458E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48092  014592  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48093  014596  C0B1  F230         	movff	?_peakToRMS,_Vrms	;volatile
 48094  01459A  C0B2  F231         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 48095  01459E  C0B3  F232         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 48096  0145A2  C0B4  F233         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 48097                           
 48098                           ;main.c: 333: Avg_Power = Vrms * Irms;
 48099  0145A6  C230  F030         	movff	_Vrms,i2___flmul@b	;volatile
 48100  0145AA  C231  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 48101  0145AE  C232  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 48102  0145B2  C233  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 48103  0145B6  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 48104  0145BA  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 48105  0145BE  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 48106  0145C2  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 48107  0145C6  EC8D  F0AD         	call	i2___flmul	;wreg free
 48108  0145CA  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 48109  0145CE  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 48110  0145D2  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 48111  0145D6  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 48112                           
 48113                           ;main.c: 334: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 48114  0145DA  0E00               	movlw	0
 48115  0145DC  6E17               	movwf	i2___fldiv@a,c
 48116  0145DE  0E00               	movlw	0
 48117  0145E0  6E18               	movwf	i2___fldiv@a+1,c
 48118  0145E2  0E61               	movlw	97
 48119  0145E4  6E19               	movwf	i2___fldiv@a+2,c
 48120  0145E6  0E45               	movlw	69
 48121  0145E8  6E1A               	movwf	i2___fldiv@a+3,c
 48122  0145EA  0E29               	movlw	41
 48123  0145EC  6E34               	movwf	i2___flmul@a,c
 48124  0145EE  0E5C               	movlw	92
 48125  0145F0  6E35               	movwf	i2___flmul@a+1,c
 48126  0145F2  0E8F               	movlw	143
 48127  0145F4  6E36               	movwf	i2___flmul@a+2,c
 48128  0145F6  0E3D               	movlw	61
 48129  0145F8  6E37               	movwf	i2___flmul@a+3,c
 48130  0145FA  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 48131  0145FE  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 48132  014602  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 48133  014606  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 48134  01460A  EC8D  F0AD         	call	i2___flmul	;wreg free
 48135  01460E  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 48136  014612  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 48137  014616  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 48138  01461A  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 48139  01461E  EC94  F0B9         	call	i2___fldiv	;wreg free
 48140  014622  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 48141  014626  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 48142  01462A  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 48143  01462E  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 48144  014632  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 48145  014636  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 48146  01463A  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 48147  01463E  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 48148  014642  ECD4  F0B0         	call	i2___fladd	;wreg free
 48149  014646  D0C5               	goto	L20
 48150  014648                     i2l1204:
 48151                           
 48152                           ;main.c: 339: else {
 48153                           ;main.c: 341: Ipk = Imeas;
 48154  014648  C234  F1CE         	movff	_Imeas,_Ipk	;volatile
 48155  01464C  C235  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 48156  014650  C236  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 48157  014654  C237  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 48158                           
 48159                           ;main.c: 342: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 48160  014658  0E00               	movlw	0
 48161  01465A  0100               	movlb	0	; () banked
 48162  01465C  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 48163  01465E  0E00               	movlw	0
 48164  014660  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 48165  014662  0E00               	movlw	0
 48166  014664  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 48167  014666  0E00               	movlw	0
 48168  014668  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 48169  01466A  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48170  01466E  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48171  014672  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48172  014676  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48173  01467A  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48174  01467E  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5397
 48175  014682  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5397+1
 48176  014686  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5397+2
 48177  01468A  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5397+3
 48178                           
 48179                           ;main.c: 342: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 48180  01468E  C2E8  F05A         	movff	_Irms_offset,i2___fladd@a
 48181  014692  C2E9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48182  014696  C2EA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48183  01469A  C2EB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48184  01469E  C0DA  F056         	movff	_ADCPostProcessingCallback$5397,i2___fladd@b
 48185  0146A2  C0DB  F057         	movff	_ADCPostProcessingCallback$5397+1,i2___fladd@b+1
 48186  0146A6  C0DC  F058         	movff	_ADCPostProcessingCallback$5397+2,i2___fladd@b+2
 48187  0146AA  C0DD  F059         	movff	_ADCPostProcessingCallback$5397+3,i2___fladd@b+3
 48188  0146AE  ECD4  F0B0         	call	i2___fladd	;wreg free
 48189  0146B2  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48190  0146B6  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48191  0146BA  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48192  0146BE  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48193  0146C2  EC77  F0C9         	call	i2___fltol	;wreg free
 48194  0146C6  C06C  F076         	movff	?i2___fltol,abs@a
 48195  0146CA  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48196  0146CE  EC7B  F0D6         	call	_abs	;wreg free
 48197  0146D2  0100               	movlb	0	; () banked
 48198  0146D4  C076  F005         	movff	?_abs,i2___xxtofl@val
 48199  0146D8  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48200  0146DC  0E00               	movlw	0
 48201  0146DE  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48202  0146E0  0EFF               	movlw	-1
 48203  0146E2  6E07               	movwf	i2___xxtofl@val+2,c
 48204  0146E4  6E08               	movwf	i2___xxtofl@val+3,c
 48205  0146E6  0E01               	movlw	1
 48206  0146E8  EC8E  F0C1         	call	i2___xxtofl
 48207  0146EC  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 48208  0146F0  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 48209  0146F4  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 48210  0146F8  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 48211                           
 48212                           ;main.c: 343: Vrms = peakToRMS(Vpk_const, 0.0);
 48213  0146FC  C2EC  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 48214  014700  C2ED  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 48215  014704  C2EE  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 48216  014708  C2EF  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 48217  01470C  0E00               	movlw	0
 48218  01470E  0100               	movlb	0	; () banked
 48219  014710  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 48220  014712  0E00               	movlw	0
 48221  014714  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 48222  014716  0E00               	movlw	0
 48223  014718  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 48224  01471A  0E00               	movlw	0
 48225  01471C  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 48226  01471E  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48227  014722  C0B1  F230         	movff	?_peakToRMS,_Vrms	;volatile
 48228  014726  C0B2  F231         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 48229  01472A  C0B3  F232         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 48230  01472E  C0B4  F233         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 48231                           
 48232                           ;main.c: 344: Avg_Power = Vrms * Irms;
 48233  014732  C230  F030         	movff	_Vrms,i2___flmul@b	;volatile
 48234  014736  C231  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 48235  01473A  C232  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 48236  01473E  C233  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 48237  014742  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 48238  014746  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 48239  01474A  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 48240  01474E  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 48241  014752  EC8D  F0AD         	call	i2___flmul	;wreg free
 48242  014756  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 48243  01475A  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 48244  01475E  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 48245  014762  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 48246                           
 48247                           ;main.c: 345: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 48248  014766  0E00               	movlw	0
 48249  014768  6E17               	movwf	i2___fldiv@a,c
 48250  01476A  0E00               	movlw	0
 48251  01476C  6E18               	movwf	i2___fldiv@a+1,c
 48252  01476E  0E61               	movlw	97
 48253  014770  6E19               	movwf	i2___fldiv@a+2,c
 48254  014772  0E45               	movlw	69
 48255  014774  6E1A               	movwf	i2___fldiv@a+3,c
 48256  014776  0E29               	movlw	41
 48257  014778  6E34               	movwf	i2___flmul@a,c
 48258  01477A  0E5C               	movlw	92
 48259  01477C  6E35               	movwf	i2___flmul@a+1,c
 48260  01477E  0E8F               	movlw	143
 48261  014780  6E36               	movwf	i2___flmul@a+2,c
 48262  014782  0E3D               	movlw	61
 48263  014784  6E37               	movwf	i2___flmul@a+3,c
 48264  014786  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 48265  01478A  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 48266  01478E  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 48267  014792  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 48268  014796  EC8D  F0AD         	call	i2___flmul	;wreg free
 48269  01479A  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 48270  01479E  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 48271  0147A2  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 48272  0147A6  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 48273  0147AA  EC94  F0B9         	call	i2___fldiv	;wreg free
 48274  0147AE  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 48275  0147B2  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 48276  0147B6  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 48277  0147BA  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 48278  0147BE  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 48279  0147C2  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 48280  0147C6  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 48281  0147CA  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 48282  0147CE  ECD4  F0B0         	call	i2___fladd	;wreg free
 48283  0147D2                     L20:
 48284  0147D2  C056  F0F6         	movff	?i2___fladd,_Total_Energy	;volatile
 48285  0147D6  C057  F0F7         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 48286  0147DA  C058  F0F8         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 48287  0147DE  C059  F0F9         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 48288                           
 48289                           ;main.c: 347: }
 48290                           ;main.c: 349: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 48291  0147E2  0E00               	movlw	0
 48292  0147E4  6E34               	movwf	i2___flge@ff1,c
 48293  0147E6  0E00               	movlw	0
 48294  0147E8  6E35               	movwf	i2___flge@ff1+1,c
 48295  0147EA  0EA0               	movlw	160
 48296  0147EC  6E36               	movwf	i2___flge@ff1+2,c
 48297  0147EE  0E40               	movlw	64
 48298  0147F0  6E37               	movwf	i2___flge@ff1+3,c
 48299  0147F2  C1CA  F038         	movff	_Irms,i2___flge@ff2	;volatile
 48300  0147F6  C1CB  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 48301  0147FA  C1CC  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 48302  0147FE  C1CD  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 48303  014802  ECEB  F0C6         	call	i2___flge	;wreg free
 48304  014806  A0D8               	btfss	status,0,c
 48305  014808  D005               	goto	i2u2250_40
 48306  01480A  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48307  01480E  0900               	iorlw	0
 48308  014810  B4D8               	btfsc	status,2,c
 48309  014812  D004               	goto	i2l1210
 48310  014814                     i2u2250_40:
 48311                           
 48312                           ;main.c: 351: error_handler.ISNS_ADC_error_flag = 1;
 48313  014814  0E01               	movlw	1
 48314  014816  0102               	movlb	2	; () banked
 48315  014818  6F00               	movwf	_error_handler& (0+255),b
 48316                           
 48317                           ; BSR set to: 2
 48318                           ;main.c: 352: return;
 48319  01481A  0012               	return	
 48320  01481C                     i2l1210:
 48321                           
 48322                           ;main.c: 354: }
 48323                           ;main.c: 356: next_channel = POS12_ADC;
 48324                           
 48325                           ; BSR set to: 2
 48326  01481C  0E04               	movlw	4
 48327  01481E  D15D               	goto	L26
 48328  014820                     
 48329                           ;main.c: 363: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48330                           
 48331                           ; BSR set to: 2
 48332  014820  0E00               	movlw	0
 48333  014822  6E17               	movwf	i2___fldiv@a,c
 48334  014824  0EC0               	movlw	192
 48335  014826  6E18               	movwf	i2___fldiv@a+1,c
 48336  014828  0E7F               	movlw	127
 48337  01482A  6E19               	movwf	i2___fldiv@a+2,c
 48338  01482C  0E44               	movlw	68
 48339  01482E  6E1A               	movwf	i2___fldiv@a+3,c
 48340  014830  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48341  014834  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48342  014838  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48343  01483C  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48344  014840  EC94  F0B9         	call	i2___fldiv	;wreg free
 48345  014844  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48346  014848  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48347  01484C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48348  014850  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48349  014854  EC37  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48350  014858  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48351  01485C  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48352  014860  6A07               	clrf	i2___xxtofl@val+2,c
 48353  014862  6A08               	clrf	i2___xxtofl@val+3,c
 48354  014864  0E00               	movlw	0
 48355  014866  EC8E  F0C1         	call	i2___xxtofl
 48356  01486A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48357  01486E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48358  014872  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48359  014876  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48360  01487A  EC8D  F0AD         	call	i2___flmul	;wreg free
 48361  01487E  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5396
 48362  014882  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5396+1
 48363  014886  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5396+2
 48364  01488A  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5396+3
 48365                           
 48366                           ;main.c: 363: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48367  01488E  C0D6  F030         	movff	_ADCPostProcessingCallback$5396,i2___flmul@b
 48368  014892  C0D7  F031         	movff	_ADCPostProcessingCallback$5396+1,i2___flmul@b+1
 48369  014896  C0D8  F032         	movff	_ADCPostProcessingCallback$5396+2,i2___flmul@b+2
 48370  01489A  C0D9  F033         	movff	_ADCPostProcessingCallback$5396+3,i2___flmul@b+3
 48371  01489E  0E3E               	movlw	62
 48372  0148A0  6E34               	movwf	i2___flmul@a,c
 48373  0148A2  0EF8               	movlw	248
 48374  0148A4  6E35               	movwf	i2___flmul@a+1,c
 48375  0148A6  0E80               	movlw	128
 48376  0148A8  6E36               	movwf	i2___flmul@a+2,c
 48377  0148AA  0E40               	movlw	64
 48378  0148AC  6E37               	movwf	i2___flmul@a+3,c
 48379  0148AE  EC8D  F0AD         	call	i2___flmul	;wreg free
 48380  0148B2  C030  F1D6         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 48381  0148B6  C031  F1D7         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 48382  0148BA  C032  F1D8         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 48383  0148BE  C033  F1D9         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 48384                           
 48385                           ;main.c: 365: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 48386  0148C2  0E9A               	movlw	154
 48387  0148C4  6E34               	movwf	i2___flge@ff1,c
 48388  0148C6  0E99               	movlw	153
 48389  0148C8  6E35               	movwf	i2___flge@ff1+1,c
 48390  0148CA  0E59               	movlw	89
 48391  0148CC  6E36               	movwf	i2___flge@ff1+2,c
 48392  0148CE  0E41               	movlw	65
 48393  0148D0  6E37               	movwf	i2___flge@ff1+3,c
 48394  0148D2  C1D6  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 48395  0148D6  C1D7  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 48396  0148DA  C1D8  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 48397  0148DE  C1D9  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 48398  0148E2  ECEB  F0C6         	call	i2___flge	;wreg free
 48399  0148E6  A0D8               	btfss	status,0,c
 48400  0148E8  D005               	goto	i2u2252_40
 48401  0148EA  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48402  0148EE  0900               	iorlw	0
 48403  0148F0  B4D8               	btfsc	status,2,c
 48404  0148F2  D004               	goto	i2l1214
 48405  0148F4                     i2u2252_40:
 48406                           
 48407                           ;main.c: 367: error_handler.POS12_ADC_error_flag = 1;
 48408  0148F4  0E01               	movlw	1
 48409  0148F6  0102               	movlb	2	; () banked
 48410  0148F8  6F01               	movwf	(_error_handler+1)& (0+255),b
 48411                           
 48412                           ; BSR set to: 2
 48413                           ;main.c: 368: return;
 48414  0148FA  0012               	return	
 48415  0148FC                     i2l1214:
 48416                           
 48417                           ;main.c: 370: }
 48418                           ;main.c: 372: next_channel = channel_Temp;
 48419                           
 48420                           ; BSR set to: 2
 48421  0148FC  0E3D               	movlw	61
 48422  0148FE  D0ED               	goto	L26
 48423  014900                     
 48424                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48425                           
 48426                           ; BSR set to: 2
 48427  014900  0E00               	movlw	0
 48428  014902  6E17               	movwf	i2___fldiv@a,c
 48429  014904  0E00               	movlw	0
 48430  014906  6E18               	movwf	i2___fldiv@a+1,c
 48431  014908  0E00               	movlw	0
 48432  01490A  6E19               	movwf	i2___fldiv@a+2,c
 48433  01490C  0E40               	movlw	64
 48434  01490E  6E1A               	movwf	i2___fldiv@a+3,c
 48435  014910  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48436  014914  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48437  014918  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48438  01491C  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48439  014920  EC94  F0B9         	call	i2___fldiv	;wreg free
 48440  014924  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48441  014928  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48442  01492C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48443  014930  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48444  014934  0E00               	movlw	0
 48445  014936  6E5A               	movwf	i2___fladd@a,c
 48446  014938  0E00               	movlw	0
 48447  01493A  6E5B               	movwf	i2___fladd@a+1,c
 48448  01493C  0E80               	movlw	128
 48449  01493E  6E5C               	movwf	i2___fladd@a+2,c
 48450  014940  0E3F               	movlw	63
 48451  014942  6E5D               	movwf	i2___fladd@a+3,c
 48452  014944  0E00               	movlw	0
 48453  014946  6E17               	movwf	i2___fldiv@a,c
 48454  014948  0EC0               	movlw	192
 48455  01494A  6E18               	movwf	i2___fldiv@a+1,c
 48456  01494C  0E7F               	movlw	127
 48457  01494E  6E19               	movwf	i2___fldiv@a+2,c
 48458  014950  0E44               	movlw	68
 48459  014952  6E1A               	movwf	i2___fldiv@a+3,c
 48460  014954  EC41  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 48461  014958  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 48462  01495C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 48463  014960  6A07               	clrf	i2___xxtofl@val+2,c
 48464  014962  6A08               	clrf	i2___xxtofl@val+3,c
 48465  014964  0E00               	movlw	0
 48466  014966  EC8E  F0C1         	call	i2___xxtofl
 48467  01496A  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 48468  01496E  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 48469  014972  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 48470  014976  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 48471  01497A  EC94  F0B9         	call	i2___fldiv	;wreg free
 48472  01497E  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 48473  014982  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 48474  014986  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 48475  01498A  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 48476  01498E  EC64  F0D6         	call	i2___flneg	;wreg free
 48477  014992  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48478  014996  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48479  01499A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48480  01499E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48481  0149A2  ECD4  F0B0         	call	i2___fladd	;wreg free
 48482  0149A6  C056  F030         	movff	?i2___fladd,i2___flmul@b
 48483  0149AA  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 48484  0149AE  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 48485  0149B2  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 48486  0149B6  EC8D  F0AD         	call	i2___flmul	;wreg free
 48487  0149BA  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$5398
 48488  0149BE  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5398+1
 48489  0149C2  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5398+2
 48490  0149C6  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5398+3
 48491                           
 48492                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48493  0149CA  0EDA               	movlw	218
 48494  0149CC  6E17               	movwf	i2___fldiv@a,c
 48495  0149CE  0E03               	movlw	3
 48496  0149D0  6E18               	movwf	i2___fldiv@a+1,c
 48497  0149D2  0EAD               	movlw	173
 48498  0149D4  6E19               	movwf	i2___fldiv@a+2,c
 48499  0149D6  0E3A               	movlw	58
 48500  0149D8  6E1A               	movwf	i2___fldiv@a+3,c
 48501  0149DA  0E39               	movlw	57
 48502  0149DC  6E5A               	movwf	i2___fladd@a,c
 48503  0149DE  0EB4               	movlw	180
 48504  0149E0  6E5B               	movwf	i2___fladd@a+1,c
 48505  0149E2  0E28               	movlw	40
 48506  0149E4  6E5C               	movwf	i2___fladd@a+2,c
 48507  0149E6  0E3F               	movlw	63
 48508  0149E8  6E5D               	movwf	i2___fladd@a+3,c
 48509  0149EA  C0C9  F02C         	movff	_ADCPostProcessingCallback$5398,i2___flneg@f1
 48510  0149EE  C0CA  F02D         	movff	_ADCPostProcessingCallback$5398+1,i2___flneg@f1+1
 48511  0149F2  C0CB  F02E         	movff	_ADCPostProcessingCallback$5398+2,i2___flneg@f1+2
 48512  0149F6  C0CC  F02F         	movff	_ADCPostProcessingCallback$5398+3,i2___flneg@f1+3
 48513  0149FA  EC64  F0D6         	call	i2___flneg	;wreg free
 48514  0149FE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48515  014A02  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48516  014A06  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48517  014A0A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48518  014A0E  ECD4  F0B0         	call	i2___fladd	;wreg free
 48519  014A12  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 48520  014A16  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 48521  014A1A  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 48522  014A1E  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 48523  014A22  EC94  F0B9         	call	i2___fldiv	;wreg free
 48524  014A26  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$5399
 48525  014A2A  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$5399+1
 48526  014A2E  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$5399+2
 48527  014A32  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$5399+3
 48528                           
 48529                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48530  014A36  C2F0  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 48531  014A3A  C2F1  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 48532  014A3E  C2F2  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 48533  014A42  C2F3  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 48534  014A46  C0CD  F056         	movff	_ADCPostProcessingCallback$5399,i2___fladd@b
 48535  014A4A  C0CE  F057         	movff	_ADCPostProcessingCallback$5399+1,i2___fladd@b+1
 48536  014A4E  C0CF  F058         	movff	_ADCPostProcessingCallback$5399+2,i2___fladd@b+2
 48537  014A52  C0D0  F059         	movff	_ADCPostProcessingCallback$5399+3,i2___fladd@b+3
 48538  014A56  ECD4  F0B0         	call	i2___fladd	;wreg free
 48539  014A5A  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$5400
 48540  014A5E  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$5400+1
 48541  014A62  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$5400+2
 48542  014A66  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$5400+3
 48543                           
 48544                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48545  014A6A  C0D1  F056         	movff	_ADCPostProcessingCallback$5400,i2___fladd@b
 48546  014A6E  C0D2  F057         	movff	_ADCPostProcessingCallback$5400+1,i2___fladd@b+1
 48547  014A72  C0D3  F058         	movff	_ADCPostProcessingCallback$5400+2,i2___fladd@b+2
 48548  014A76  C0D4  F059         	movff	_ADCPostProcessingCallback$5400+3,i2___fladd@b+3
 48549  014A7A  0E00               	movlw	0
 48550  014A7C  6E5A               	movwf	i2___fladd@a,c
 48551  014A7E  0E00               	movlw	0
 48552  014A80  6E5B               	movwf	i2___fladd@a+1,c
 48553  014A82  0E20               	movlw	32
 48554  014A84  6E5C               	movwf	i2___fladd@a+2,c
 48555  014A86  0EC2               	movlw	194
 48556  014A88  6E5D               	movwf	i2___fladd@a+3,c
 48557  014A8A  ECD4  F0B0         	call	i2___fladd	;wreg free
 48558  014A8E  C056  F1D2         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 48559  014A92  C057  F1D3         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 48560  014A96  C058  F1D4         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 48561  014A9A  C059  F1D5         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 48562                           
 48563                           ;main.c: 381: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 48564  014A9E  0E00               	movlw	0
 48565  014AA0  6E34               	movwf	i2___flge@ff1,c
 48566  014AA2  0E00               	movlw	0
 48567  014AA4  6E35               	movwf	i2___flge@ff1+1,c
 48568  014AA6  0E20               	movlw	32
 48569  014AA8  6E36               	movwf	i2___flge@ff1+2,c
 48570  014AAA  0E42               	movlw	66
 48571  014AAC  6E37               	movwf	i2___flge@ff1+3,c
 48572  014AAE  C1D2  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 48573  014AB2  C1D3  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 48574  014AB6  C1D4  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 48575  014ABA  C1D5  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 48576  014ABE  ECEB  F0C6         	call	i2___flge	;wreg free
 48577  014AC2  A0D8               	btfss	status,0,c
 48578  014AC4  D005               	goto	i2u2254_40
 48579  014AC6  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48580  014ACA  0900               	iorlw	0
 48581  014ACC  B4D8               	btfsc	status,2,c
 48582  014ACE  D004               	goto	i2l1218
 48583  014AD0                     i2u2254_40:
 48584                           
 48585                           ;main.c: 383: error_handler.Temp_ADC_error_flag = 1;
 48586  014AD0  0E01               	movlw	1
 48587  014AD2  0102               	movlb	2	; () banked
 48588  014AD4  6F04               	movwf	(_error_handler+4)& (0+255),b
 48589                           
 48590                           ; BSR set to: 2
 48591                           ;main.c: 384: return;
 48592  014AD6  0012               	return	
 48593  014AD8                     i2l1218:
 48594                           
 48595                           ;main.c: 386: }
 48596                           ;main.c: 388: next_channel = channel_VSS;
 48597                           
 48598                           ; BSR set to: 2
 48599  014AD8  0E3C               	movlw	60
 48600  014ADA                     L26:
 48601  014ADA  0102               	movlb	2	; () banked
 48602  014ADC  6FF4               	movwf	_next_channel& (0+255),b
 48603                           
 48604                           ;main.c: 390: break;
 48605  014ADE  D01D               	goto	i2l1194
 48606  014AE0                     
 48607                           ;main.c: 395: error_handler.ADC_general_error_flag = 1;
 48608                           
 48609                           ; BSR set to: 2
 48610  014AE0  0E01               	movlw	1
 48611  014AE2  0102               	movlb	2	; () banked
 48612  014AE4  6F06               	movwf	(_error_handler+6)& (0+255),b
 48613                           
 48614                           ; BSR set to: 2
 48615                           ;main.c: 398: }
 48616                           
 48617                           ;main.c: 396: break;
 48618  014AE6  D019               	goto	i2l1194
 48619  014AE8                     i2l1188:
 48620                           
 48621                           ; BSR set to: 2
 48622  014AE8  0100               	movlb	0	; () banked
 48623  014AEA  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 48624                           
 48625                           ; Switch size 1, requested type "space"
 48626                           ; Number of cases is 6, Range of values is 0 to 63
 48627                           ; switch strategies available:
 48628                           ; Name         Instructions Cycles
 48629                           ; simple_byte           19    10 (average)
 48630                           ;	Chosen strategy is simple_byte
 48631  014AEC  0A00               	xorlw	0	; case 0
 48632  014AEE  B4D8               	btfsc	status,2,c
 48633  014AF0  EF6B  F0A1         	goto	i2l1203
 48634  014AF4  0A04               	xorlw	4	; case 4
 48635  014AF6  B4D8               	btfsc	status,2,c
 48636  014AF8  D693               	goto	i2l1213
 48637  014AFA  0A26               	xorlw	38	; case 34
 48638  014AFC  B4D8               	btfsc	status,2,c
 48639  014AFE  EF0C  F0A1         	goto	i2l1199
 48640  014B02  0A1E               	xorlw	30	; case 60
 48641  014B04  B4D8               	btfsc	status,2,c
 48642  014B06  EF42  F0A0         	goto	i2l1189
 48643  014B0A  0A01               	xorlw	1	; case 61
 48644  014B0C  B4D8               	btfsc	status,2,c
 48645  014B0E  D6F8               	goto	i2l1217
 48646  014B10  0A02               	xorlw	2	; case 63
 48647  014B12  B4D8               	btfsc	status,2,c
 48648  014B14  EF87  F0A0         	goto	i2l1195
 48649  014B18  D7E3               	goto	i2l1221
 48650  014B1A                     i2l1194:
 48651                           
 48652                           ;main.c: 400: if (ADCC_GetCurrentCountofConversions() != 255) {
 48653                           
 48654                           ; BSR set to: 0
 48655  014B1A  ECF7  F0D8         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 48656  014B1E  0AFF               	xorlw	255
 48657  014B20  B4D8               	btfsc	status,2,c
 48658  014B22  D003               	goto	i2l1222
 48659                           
 48660                           ;main.c: 401: error_handler.ADC_general_error_flag = 1;
 48661  014B24  0E01               	movlw	1
 48662  014B26  0102               	movlb	2	; () banked
 48663  014B28  6F06               	movwf	(_error_handler+6)& (0+255),b
 48664  014B2A                     i2l1222:
 48665                           
 48666                           ;main.c: 402: }
 48667                           ;main.c: 404: if (ADCC_HasAccumulatorOverflowed()) {
 48668                           
 48669                           ; BSR set to: 2
 48670  014B2A  ECC9  F0D8         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48671  014B2E  0900               	iorlw	0
 48672  014B30  B4D8               	btfsc	status,2,c
 48673  014B32  0012               	return	
 48674                           
 48675                           ;main.c: 405: error_handler.ADC_general_error_flag = 1;
 48676  014B34  0E01               	movlw	1
 48677  014B36  0102               	movlb	2	; () banked
 48678  014B38  6F06               	movwf	(_error_handler+6)& (0+255),b
 48679  014B3A  0012               	return	
 48680  014B3C                     __end_of_ADCPostProcessingCallback:
 48681                           	opt stack 0
 48682                           tosu	equ	0xFFF
 48683                           tosh	equ	0xFFE
 48684                           tosl	equ	0xFFD
 48685                           pclatu	equ	0xFFB
 48686                           pclath	equ	0xFFA
 48687                           tblptru	equ	0xFF8
 48688                           tblptrh	equ	0xFF7
 48689                           tblptrl	equ	0xFF6
 48690                           tablat	equ	0xFF5
 48691                           prodh	equ	0xFF4
 48692                           prodl	equ	0xFF3
 48693                           intcon	equ	0xFF2
 48694                           indf0	equ	0xFEF
 48695                           postinc0	equ	0xFEE
 48696                           fsr0h	equ	0xFEA
 48697                           fsr0l	equ	0xFE9
 48698                           wreg	equ	0xFE8
 48699                           indf1	equ	0xFE7
 48700                           postdec1	equ	0xFE5
 48701                           plusw1	equ	0xFE3
 48702                           fsr1h	equ	0xFE2
 48703                           fsr1l	equ	0xFE1
 48704                           bsr	equ	0xFE0
 48705                           indf2	equ	0xFDF
 48706                           postinc2	equ	0xFDE
 48707                           postdec2	equ	0xFDD
 48708                           plusw2	equ	0xFDB
 48709                           fsr2h	equ	0xFDA
 48710                           fsr2l	equ	0xFD9
 48711                           status	equ	0xFD8
 48712                           
 48713 ;; *************** function _peakToRMS *****************
 48714 ;; Defined at:
 48715 ;;		line 125 in file "main.c"
 48716 ;; Parameters:    Size  Location     Type
 48717 ;;  Peak            4   81[BANK0 ] void 
 48718 ;;  Angle           4   85[BANK0 ] void 
 48719 ;; Auto vars:     Size  Location     Type
 48720 ;;  RMS             4  101[BANK0 ] void 
 48721 ;; Return value:  Size  Location     Type
 48722 ;;                  4   81[BANK0 ] void 
 48723 ;; Registers used:
 48724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48725 ;; Tracked objects:
 48726 ;;		On entry : 0/0
 48727 ;;		On exit  : 0/0
 48728 ;;		Unchanged: 0/0
 48729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48730 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48731 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48733 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48734 ;;Total ram usage:       24 bytes
 48735 ;; Hardware stack levels used:    1
 48736 ;; Hardware stack levels required when called:    5
 48737 ;; This function calls:
 48738 ;;		_acos
 48739 ;;		_sin
 48740 ;;		_sqrt
 48741 ;;		i2___fladd
 48742 ;;		i2___fldiv
 48743 ;;		i2___flmul
 48744 ;;		i2___flneg
 48745 ;; This function is called by:
 48746 ;;		_ADCPostProcessingCallback
 48747 ;; This function uses a non-reentrant model
 48748 ;;
 48749                           
 48750                           	psect	text148
 48751  017D48                     __ptext148:
 48752                           	opt stack 0
 48753  017D48                     _peakToRMS:
 48754                           	opt stack 10
 48755                           
 48756                           ;main.c: 128: double RMS = 0.0;
 48757                           
 48758                           ;incstack = 0
 48759  017D48  0E00               	movlw	0
 48760  017D4A  0100               	movlb	0	; () banked
 48761  017D4C  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 48762  017D4E  0E00               	movlw	0
 48763  017D50  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 48764  017D52  0E00               	movlw	0
 48765  017D54  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 48766  017D56  0E00               	movlw	0
 48767  017D58  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 48768                           
 48769                           ; BSR set to: 0
 48770                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 48771  017D5A  0E00               	movlw	0
 48772  017D5C  6FA9               	movwf	acos@x& (0+255),b
 48773  017D5E  0E00               	movlw	0
 48774  017D60  6FAA               	movwf	(acos@x+1)& (0+255),b
 48775  017D62  0E80               	movlw	128
 48776  017D64  6FAB               	movwf	(acos@x+2)& (0+255),b
 48777  017D66  0EBF               	movlw	191
 48778  017D68  6FAC               	movwf	(acos@x+3)& (0+255),b
 48779  017D6A  EC60  F0CF         	call	_acos	;wreg free
 48780  017D6E  C0A9  F0C1         	movff	?_acos,_peakToRMS$5393
 48781  017D72  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5393+1
 48782  017D76  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5393+2
 48783  017D7A  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5393+3
 48784                           
 48785                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 48786  017D7E  C0C1  F030         	movff	_peakToRMS$5393,i2___flmul@b
 48787  017D82  C0C2  F031         	movff	_peakToRMS$5393+1,i2___flmul@b+1
 48788  017D86  C0C3  F032         	movff	_peakToRMS$5393+2,i2___flmul@b+2
 48789  017D8A  C0C4  F033         	movff	_peakToRMS$5393+3,i2___flmul@b+3
 48790  017D8E  0E00               	movlw	0
 48791  017D90  6E34               	movwf	i2___flmul@a,c
 48792  017D92  0E00               	movlw	0
 48793  017D94  6E35               	movwf	i2___flmul@a+1,c
 48794  017D96  0E00               	movlw	0
 48795  017D98  6E36               	movwf	i2___flmul@a+2,c
 48796  017D9A  0E40               	movlw	64
 48797  017D9C  6E37               	movwf	i2___flmul@a+3,c
 48798  017D9E  EC8D  F0AD         	call	i2___flmul	;wreg free
 48799  017DA2  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 48800  017DA6  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 48801  017DAA  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 48802  017DAE  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 48803                           
 48804                           ;main.c: 132: RMS = RMS - (2.0 * Angle);
 48805  017DB2  0E00               	movlw	0
 48806  017DB4  6E34               	movwf	i2___flmul@a,c
 48807  017DB6  0E00               	movlw	0
 48808  017DB8  6E35               	movwf	i2___flmul@a+1,c
 48809  017DBA  0E00               	movlw	0
 48810  017DBC  6E36               	movwf	i2___flmul@a+2,c
 48811  017DBE  0E40               	movlw	64
 48812  017DC0  6E37               	movwf	i2___flmul@a+3,c
 48813  017DC2  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 48814  017DC6  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 48815  017DCA  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 48816  017DCE  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 48817  017DD2  EC8D  F0AD         	call	i2___flmul	;wreg free
 48818  017DD6  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 48819  017DDA  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 48820  017DDE  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 48821  017DE2  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 48822  017DE6  EC64  F0D6         	call	i2___flneg	;wreg free
 48823  017DEA  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48824  017DEE  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48825  017DF2  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48826  017DF6  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48827  017DFA  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 48828  017DFE  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 48829  017E02  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 48830  017E06  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 48831  017E0A  ECD4  F0B0         	call	i2___fladd	;wreg free
 48832  017E0E  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 48833  017E12  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 48834  017E16  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 48835  017E1A  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 48836                           
 48837                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 48838  017E1E  0E00               	movlw	0
 48839  017E20  6E34               	movwf	i2___flmul@a,c
 48840  017E22  0E00               	movlw	0
 48841  017E24  6E35               	movwf	i2___flmul@a+1,c
 48842  017E26  0E00               	movlw	0
 48843  017E28  6E36               	movwf	i2___flmul@a+2,c
 48844  017E2A  0E40               	movlw	64
 48845  017E2C  6E37               	movwf	i2___flmul@a+3,c
 48846  017E2E  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 48847  017E32  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 48848  017E36  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 48849  017E3A  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 48850  017E3E  EC8D  F0AD         	call	i2___flmul	;wreg free
 48851  017E42  C030  F0B9         	movff	?i2___flmul,_peakToRMS$5394
 48852  017E46  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$5394+1
 48853  017E4A  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$5394+2
 48854  017E4E  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$5394+3
 48855                           
 48856                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 48857  017E52  C0B9  F088         	movff	_peakToRMS$5394,sin@f
 48858  017E56  C0BA  F089         	movff	_peakToRMS$5394+1,sin@f+1
 48859  017E5A  C0BB  F08A         	movff	_peakToRMS$5394+2,sin@f+2
 48860  017E5E  C0BC  F08B         	movff	_peakToRMS$5394+3,sin@f+3
 48861  017E62  ECF5  F0B3         	call	_sin	;wreg free
 48862  017E66  C088  F0BD         	movff	?_sin,_peakToRMS$5395
 48863  017E6A  C089  F0BE         	movff	?_sin+1,_peakToRMS$5395+1
 48864  017E6E  C08A  F0BF         	movff	?_sin+2,_peakToRMS$5395+2
 48865  017E72  C08B  F0C0         	movff	?_sin+3,_peakToRMS$5395+3
 48866                           
 48867                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 48868  017E76  C0BD  F056         	movff	_peakToRMS$5395,i2___fladd@b
 48869  017E7A  C0BE  F057         	movff	_peakToRMS$5395+1,i2___fladd@b+1
 48870  017E7E  C0BF  F058         	movff	_peakToRMS$5395+2,i2___fladd@b+2
 48871  017E82  C0C0  F059         	movff	_peakToRMS$5395+3,i2___fladd@b+3
 48872  017E86  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 48873  017E8A  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 48874  017E8E  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 48875  017E92  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 48876  017E96  ECD4  F0B0         	call	i2___fladd	;wreg free
 48877  017E9A  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 48878  017E9E  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 48879  017EA2  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 48880  017EA6  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 48881                           
 48882                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 48883  017EAA  0E00               	movlw	0
 48884  017EAC  0100               	movlb	0	; () banked
 48885  017EAE  6FA9               	movwf	acos@x& (0+255),b
 48886  017EB0  0E00               	movlw	0
 48887  017EB2  6FAA               	movwf	(acos@x+1)& (0+255),b
 48888  017EB4  0E80               	movlw	128
 48889  017EB6  6FAB               	movwf	(acos@x+2)& (0+255),b
 48890  017EB8  0EBF               	movlw	191
 48891  017EBA  6FAC               	movwf	(acos@x+3)& (0+255),b
 48892  017EBC  EC60  F0CF         	call	_acos	;wreg free
 48893  017EC0  C0A9  F0C1         	movff	?_acos,_peakToRMS$5393
 48894  017EC4  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5393+1
 48895  017EC8  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5393+2
 48896  017ECC  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5393+3
 48897                           
 48898                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 48899  017ED0  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 48900  017ED4  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 48901  017ED8  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 48902  017EDC  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 48903  017EE0  0E00               	movlw	0
 48904  017EE2  6E34               	movwf	i2___flmul@a,c
 48905  017EE4  0E00               	movlw	0
 48906  017EE6  6E35               	movwf	i2___flmul@a+1,c
 48907  017EE8  0E80               	movlw	128
 48908  017EEA  6E36               	movwf	i2___flmul@a+2,c
 48909  017EEC  0E40               	movlw	64
 48910  017EEE  6E37               	movwf	i2___flmul@a+3,c
 48911  017EF0  C0C1  F030         	movff	_peakToRMS$5393,i2___flmul@b
 48912  017EF4  C0C2  F031         	movff	_peakToRMS$5393+1,i2___flmul@b+1
 48913  017EF8  C0C3  F032         	movff	_peakToRMS$5393+2,i2___flmul@b+2
 48914  017EFC  C0C4  F033         	movff	_peakToRMS$5393+3,i2___flmul@b+3
 48915  017F00  EC8D  F0AD         	call	i2___flmul	;wreg free
 48916  017F04  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 48917  017F08  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 48918  017F0C  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 48919  017F10  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 48920  017F14  EC94  F0B9         	call	i2___fldiv	;wreg free
 48921  017F18  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 48922  017F1C  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 48923  017F20  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 48924  017F24  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 48925                           
 48926                           ;main.c: 135: RMS = sqrt(RMS);
 48927  017F28  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 48928  017F2C  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 48929  017F30  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 48930  017F34  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 48931  017F38  EC72  F0B5         	call	_sqrt	;wreg free
 48932  017F3C  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 48933  017F40  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 48934  017F44  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 48935  017F48  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 48936                           
 48937                           ;main.c: 136: RMS = Peak * RMS;
 48938  017F4C  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 48939  017F50  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 48940  017F54  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 48941  017F58  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 48942  017F5C  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 48943  017F60  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 48944  017F64  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 48945  017F68  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 48946  017F6C  EC8D  F0AD         	call	i2___flmul	;wreg free
 48947  017F70  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 48948  017F74  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 48949  017F78  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 48950  017F7C  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 48951                           
 48952                           ;main.c: 137: return RMS;
 48953  017F80  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 48954  017F84  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 48955  017F88  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 48956  017F8C  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 48957  017F90  0012               	return	
 48958  017F92                     __end_of_peakToRMS:
 48959                           	opt stack 0
 48960                           tosu	equ	0xFFF
 48961                           tosh	equ	0xFFE
 48962                           tosl	equ	0xFFD
 48963                           pclatu	equ	0xFFB
 48964                           pclath	equ	0xFFA
 48965                           tblptru	equ	0xFF8
 48966                           tblptrh	equ	0xFF7
 48967                           tblptrl	equ	0xFF6
 48968                           tablat	equ	0xFF5
 48969                           prodh	equ	0xFF4
 48970                           prodl	equ	0xFF3
 48971                           intcon	equ	0xFF2
 48972                           indf0	equ	0xFEF
 48973                           postinc0	equ	0xFEE
 48974                           fsr0h	equ	0xFEA
 48975                           fsr0l	equ	0xFE9
 48976                           wreg	equ	0xFE8
 48977                           indf1	equ	0xFE7
 48978                           postdec1	equ	0xFE5
 48979                           plusw1	equ	0xFE3
 48980                           fsr1h	equ	0xFE2
 48981                           fsr1l	equ	0xFE1
 48982                           bsr	equ	0xFE0
 48983                           indf2	equ	0xFDF
 48984                           postinc2	equ	0xFDE
 48985                           postdec2	equ	0xFDD
 48986                           plusw2	equ	0xFDB
 48987                           fsr2h	equ	0xFDA
 48988                           fsr2l	equ	0xFD9
 48989                           status	equ	0xFD8
 48990                           
 48991 ;; *************** function _acos *****************
 48992 ;; Defined at:
 48993 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 48994 ;; Parameters:    Size  Location     Type
 48995 ;;  x               4   73[BANK0 ] void 
 48996 ;; Auto vars:     Size  Location     Type
 48997 ;;		None
 48998 ;; Return value:  Size  Location     Type
 48999 ;;                  4   73[BANK0 ] void 
 49000 ;; Registers used:
 49001 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49002 ;; Tracked objects:
 49003 ;;		On entry : 0/0
 49004 ;;		On exit  : 0/0
 49005 ;;		Unchanged: 0/0
 49006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49008 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49010 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49011 ;;Total ram usage:        8 bytes
 49012 ;; Hardware stack levels used:    1
 49013 ;; Hardware stack levels required when called:    4
 49014 ;; This function calls:
 49015 ;;		_asin
 49016 ;;		i2___fladd
 49017 ;;		i2___flneg
 49018 ;; This function is called by:
 49019 ;;		_peakToRMS
 49020 ;; This function uses a non-reentrant model
 49021 ;;
 49022                           
 49023                           	psect	text149
 49024  019EC0                     __ptext149:
 49025                           	opt stack 0
 49026  019EC0                     _acos:
 49027                           	opt stack 10
 49028                           
 49029                           ;incstack = 0
 49030  019EC0  C0A9  F091         	movff	acos@x,asin@x
 49031  019EC4  C0AA  F092         	movff	acos@x+1,asin@x+1
 49032  019EC8  C0AB  F093         	movff	acos@x+2,asin@x+2
 49033  019ECC  C0AC  F094         	movff	acos@x+3,asin@x+3
 49034  019ED0  EC73  F0B2         	call	_asin	;wreg free
 49035  019ED4  C091  F0AD         	movff	?_asin,_acos$5401
 49036  019ED8  C092  F0AE         	movff	?_asin+1,_acos$5401+1
 49037  019EDC  C093  F0AF         	movff	?_asin+2,_acos$5401+2
 49038  019EE0  C094  F0B0         	movff	?_asin+3,_acos$5401+3
 49039  019EE4  C0AD  F02C         	movff	_acos$5401,i2___flneg@f1
 49040  019EE8  C0AE  F02D         	movff	_acos$5401+1,i2___flneg@f1+1
 49041  019EEC  C0AF  F02E         	movff	_acos$5401+2,i2___flneg@f1+2
 49042  019EF0  C0B0  F02F         	movff	_acos$5401+3,i2___flneg@f1+3
 49043  019EF4  EC64  F0D6         	call	i2___flneg	;wreg free
 49044  019EF8  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49045  019EFC  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49046  019F00  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49047  019F04  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49048  019F08  0EDB               	movlw	219
 49049  019F0A  6E5A               	movwf	i2___fladd@a,c
 49050  019F0C  0E0F               	movlw	15
 49051  019F0E  6E5B               	movwf	i2___fladd@a+1,c
 49052  019F10  0EC9               	movlw	201
 49053  019F12  6E5C               	movwf	i2___fladd@a+2,c
 49054  019F14  0E3F               	movlw	63
 49055  019F16  6E5D               	movwf	i2___fladd@a+3,c
 49056  019F18  ECD4  F0B0         	call	i2___fladd	;wreg free
 49057  019F1C  C056  F0A9         	movff	?i2___fladd,?_acos
 49058  019F20  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 49059  019F24  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 49060  019F28  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 49061  019F2C  0012               	return	
 49062  019F2E                     __end_of_acos:
 49063                           	opt stack 0
 49064                           tosu	equ	0xFFF
 49065                           tosh	equ	0xFFE
 49066                           tosl	equ	0xFFD
 49067                           pclatu	equ	0xFFB
 49068                           pclath	equ	0xFFA
 49069                           tblptru	equ	0xFF8
 49070                           tblptrh	equ	0xFF7
 49071                           tblptrl	equ	0xFF6
 49072                           tablat	equ	0xFF5
 49073                           prodh	equ	0xFF4
 49074                           prodl	equ	0xFF3
 49075                           intcon	equ	0xFF2
 49076                           indf0	equ	0xFEF
 49077                           postinc0	equ	0xFEE
 49078                           fsr0h	equ	0xFEA
 49079                           fsr0l	equ	0xFE9
 49080                           wreg	equ	0xFE8
 49081                           indf1	equ	0xFE7
 49082                           postdec1	equ	0xFE5
 49083                           plusw1	equ	0xFE3
 49084                           fsr1h	equ	0xFE2
 49085                           fsr1l	equ	0xFE1
 49086                           bsr	equ	0xFE0
 49087                           indf2	equ	0xFDF
 49088                           postinc2	equ	0xFDE
 49089                           postdec2	equ	0xFDD
 49090                           plusw2	equ	0xFDB
 49091                           fsr2h	equ	0xFDA
 49092                           fsr2l	equ	0xFD9
 49093                           status	equ	0xFD8
 49094                           
 49095 ;; *************** function _asin *****************
 49096 ;; Defined at:
 49097 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 49098 ;; Parameters:    Size  Location     Type
 49099 ;;  x               4   49[BANK0 ] void 
 49100 ;; Auto vars:     Size  Location     Type
 49101 ;;  y               4   65[BANK0 ] void 
 49102 ;;  sgn             4   53[BANK0 ] void 
 49103 ;; Return value:  Size  Location     Type
 49104 ;;                  4   49[BANK0 ] void 
 49105 ;; Registers used:
 49106 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49107 ;; Tracked objects:
 49108 ;;		On entry : 0/0
 49109 ;;		On exit  : 0/0
 49110 ;;		Unchanged: 0/0
 49111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49113 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49115 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49116 ;;Total ram usage:       24 bytes
 49117 ;; Hardware stack levels used:    1
 49118 ;; Hardware stack levels required when called:    3
 49119 ;; This function calls:
 49120 ;;		_atan
 49121 ;;		_fabs
 49122 ;;		_sqrt
 49123 ;;		i2___fladd
 49124 ;;		i2___fldiv
 49125 ;;		i2___flge
 49126 ;;		i2___flmul
 49127 ;;		i2___flneg
 49128 ;; This function is called by:
 49129 ;;		_acos
 49130 ;; This function uses a non-reentrant model
 49131 ;;
 49132                           
 49133                           	psect	text150
 49134  0164E6                     __ptext150:
 49135                           	opt stack 0
 49136  0164E6                     _asin:
 49137                           	opt stack 10
 49138                           
 49139                           ;incstack = 0
 49140  0164E6  0E00               	movlw	0
 49141  0164E8  6E34               	movwf	i2___flge@ff1,c
 49142  0164EA  0E00               	movlw	0
 49143  0164EC  6E35               	movwf	i2___flge@ff1+1,c
 49144  0164EE  0E80               	movlw	128
 49145  0164F0  6E36               	movwf	i2___flge@ff1+2,c
 49146  0164F2  0E3F               	movlw	63
 49147  0164F4  6E37               	movwf	i2___flge@ff1+3,c
 49148  0164F6  C091  F030         	movff	asin@x,fabs@d
 49149  0164FA  C092  F031         	movff	asin@x+1,fabs@d+1
 49150  0164FE  C093  F032         	movff	asin@x+2,fabs@d+2
 49151  016502  C094  F033         	movff	asin@x+3,fabs@d+3
 49152  016506  ECEF  F0D4         	call	_fabs	;wreg free
 49153  01650A  C030  F038         	movff	?_fabs,i2___flge@ff2
 49154  01650E  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 49155  016512  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 49156  016516  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 49157  01651A  ECEB  F0C6         	call	i2___flge	;wreg free
 49158  01651E  B0D8               	btfsc	status,0,c
 49159  016520  D00F               	goto	i2l2258
 49160  016522  0E00               	movlw	0
 49161  016524  0102               	movlb	2	; () banked
 49162  016526  6F5D               	movwf	(_errno+1)& (0+255),b
 49163  016528  0E21               	movlw	33
 49164  01652A  6F5C               	movwf	_errno& (0+255),b
 49165  01652C  0E00               	movlw	0
 49166  01652E  0100               	movlb	0	; () banked
 49167  016530  6F91               	movwf	?_asin& (0+255),b
 49168  016532  0E00               	movlw	0
 49169  016534  6F92               	movwf	(?_asin+1)& (0+255),b
 49170  016536  0E00               	movlw	0
 49171  016538  6F93               	movwf	(?_asin+2)& (0+255),b
 49172  01653A  0E00               	movlw	0
 49173  01653C  6F94               	movwf	(?_asin+3)& (0+255),b
 49174                           
 49175                           ; BSR set to: 0
 49176  01653E  0012               	return	
 49177  016540                     i2l2258:
 49178                           
 49179                           ; BSR set to: 0
 49180  016540  0E00               	movlw	0
 49181  016542  0100               	movlb	0	; () banked
 49182  016544  6F95               	movwf	asin@sgn& (0+255),b
 49183  016546  0E00               	movlw	0
 49184  016548  6F96               	movwf	(asin@sgn+1)& (0+255),b
 49185  01654A  0E80               	movlw	128
 49186  01654C  6F97               	movwf	(asin@sgn+2)& (0+255),b
 49187  01654E  0E3F               	movlw	63
 49188  016550  6F98               	movwf	(asin@sgn+3)& (0+255),b
 49189                           
 49190                           ; BSR set to: 0
 49191  016552  C091  F034         	movff	asin@x,i2___flmul@a
 49192  016556  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 49193  01655A  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 49194  01655E  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 49195  016562  C091  F030         	movff	asin@x,i2___flmul@b
 49196  016566  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 49197  01656A  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 49198  01656E  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 49199  016572  EC8D  F0AD         	call	i2___flmul	;wreg free
 49200  016576  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 49201  01657A  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 49202  01657E  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 49203  016582  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 49204  016586  EC64  F0D6         	call	i2___flneg	;wreg free
 49205  01658A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49206  01658E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49207  016592  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49208  016596  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49209  01659A  0E00               	movlw	0
 49210  01659C  6E5A               	movwf	i2___fladd@a,c
 49211  01659E  0E00               	movlw	0
 49212  0165A0  6E5B               	movwf	i2___fladd@a+1,c
 49213  0165A2  0E80               	movlw	128
 49214  0165A4  6E5C               	movwf	i2___fladd@a+2,c
 49215  0165A6  0E3F               	movlw	63
 49216  0165A8  6E5D               	movwf	i2___fladd@a+3,c
 49217  0165AA  ECD4  F0B0         	call	i2___fladd	;wreg free
 49218  0165AE  C056  F06C         	movff	?i2___fladd,sqrt@a
 49219  0165B2  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 49220  0165B6  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 49221  0165BA  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 49222  0165BE  EC72  F0B5         	call	_sqrt	;wreg free
 49223  0165C2  C06C  F0A1         	movff	?_sqrt,asin@y
 49224  0165C6  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 49225  0165CA  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 49226  0165CE  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 49227  0165D2  C091  F030         	movff	asin@x,fabs@d
 49228  0165D6  C092  F031         	movff	asin@x+1,fabs@d+1
 49229  0165DA  C093  F032         	movff	asin@x+2,fabs@d+2
 49230  0165DE  C094  F033         	movff	asin@x+3,fabs@d+3
 49231  0165E2  ECEF  F0D4         	call	_fabs	;wreg free
 49232  0165E6  C030  F034         	movff	?_fabs,i2___flge@ff1
 49233  0165EA  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 49234  0165EE  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 49235  0165F2  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 49236  0165F6  0E8F               	movlw	143
 49237  0165F8  6E38               	movwf	i2___flge@ff2,c
 49238  0165FA  0EC2               	movlw	194
 49239  0165FC  6E39               	movwf	i2___flge@ff2+1,c
 49240  0165FE  0E35               	movlw	53
 49241  016600  6E3A               	movwf	i2___flge@ff2+2,c
 49242  016602  0E3F               	movlw	63
 49243  016604  6E3B               	movwf	i2___flge@ff2+3,c
 49244  016606  ECEB  F0C6         	call	i2___flge	;wreg free
 49245  01660A  B0D8               	btfsc	status,0,c
 49246  01660C  D02D               	goto	i2l2260
 49247  01660E  C091  F013         	movff	asin@x,i2___fldiv@b
 49248  016612  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 49249  016616  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 49250  01661A  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 49251  01661E  C0A1  F017         	movff	asin@y,i2___fldiv@a
 49252  016622  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 49253  016626  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 49254  01662A  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 49255  01662E  EC94  F0B9         	call	i2___fldiv	;wreg free
 49256  016632  C013  F0A5         	movff	?i2___fldiv,_asin$5402
 49257  016636  C014  F0A6         	movff	?i2___fldiv+1,_asin$5402+1
 49258  01663A  C015  F0A7         	movff	?i2___fldiv+2,_asin$5402+2
 49259  01663E  C016  F0A8         	movff	?i2___fldiv+3,_asin$5402+3
 49260  016642  C0A5  F07C         	movff	_asin$5402,atan@f
 49261  016646  C0A6  F07D         	movff	_asin$5402+1,atan@f+1
 49262  01664A  C0A7  F07E         	movff	_asin$5402+2,atan@f+2
 49263  01664E  C0A8  F07F         	movff	_asin$5402+3,atan@f+3
 49264  016652  ECC9  F0BF         	call	_atan	;wreg free
 49265  016656  C07C  F091         	movff	?_atan,?_asin
 49266  01665A  C07D  F092         	movff	?_atan+1,?_asin+1
 49267  01665E  C07E  F093         	movff	?_atan+2,?_asin+2
 49268  016662  C07F  F094         	movff	?_atan+3,?_asin+3
 49269  016666  0012               	return	
 49270  016668                     i2l2260:
 49271  016668  0100               	movlb	0	; () banked
 49272  01666A  AF94               	btfss	(asin@x+3)& (0+255),7,b
 49273  01666C  D06D               	goto	i2l2261
 49274                           
 49275                           ; BSR set to: 0
 49276  01666E  C091  F017         	movff	asin@x,i2___fldiv@a
 49277  016672  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49278  016676  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49279  01667A  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49280  01667E  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 49281  016682  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 49282  016686  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 49283  01668A  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 49284  01668E  EC64  F0D6         	call	i2___flneg	;wreg free
 49285  016692  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 49286  016696  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 49287  01669A  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 49288  01669E  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 49289  0166A2  EC94  F0B9         	call	i2___fldiv	;wreg free
 49290  0166A6  C013  F0A5         	movff	?i2___fldiv,_asin$5402
 49291  0166AA  C014  F0A6         	movff	?i2___fldiv+1,_asin$5402+1
 49292  0166AE  C015  F0A7         	movff	?i2___fldiv+2,_asin$5402+2
 49293  0166B2  C016  F0A8         	movff	?i2___fldiv+3,_asin$5402+3
 49294  0166B6  C0A5  F07C         	movff	_asin$5402,atan@f
 49295  0166BA  C0A6  F07D         	movff	_asin$5402+1,atan@f+1
 49296  0166BE  C0A7  F07E         	movff	_asin$5402+2,atan@f+2
 49297  0166C2  C0A8  F07F         	movff	_asin$5402+3,atan@f+3
 49298  0166C6  ECC9  F0BF         	call	_atan	;wreg free
 49299  0166CA  C07C  F09D         	movff	?_atan,_asin$5403
 49300  0166CE  C07D  F09E         	movff	?_atan+1,_asin$5403+1
 49301  0166D2  C07E  F09F         	movff	?_atan+2,_asin$5403+2
 49302  0166D6  C07F  F0A0         	movff	?_atan+3,_asin$5403+3
 49303  0166DA  0EDB               	movlw	219
 49304  0166DC  6E5A               	movwf	i2___fladd@a,c
 49305  0166DE  0E0F               	movlw	15
 49306  0166E0  6E5B               	movwf	i2___fladd@a+1,c
 49307  0166E2  0EC9               	movlw	201
 49308  0166E4  6E5C               	movwf	i2___fladd@a+2,c
 49309  0166E6  0E3F               	movlw	63
 49310  0166E8  6E5D               	movwf	i2___fladd@a+3,c
 49311  0166EA  C09D  F02C         	movff	_asin$5403,i2___flneg@f1
 49312  0166EE  C09E  F02D         	movff	_asin$5403+1,i2___flneg@f1+1
 49313  0166F2  C09F  F02E         	movff	_asin$5403+2,i2___flneg@f1+2
 49314  0166F6  C0A0  F02F         	movff	_asin$5403+3,i2___flneg@f1+3
 49315  0166FA  EC64  F0D6         	call	i2___flneg	;wreg free
 49316  0166FE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49317  016702  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49318  016706  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49319  01670A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49320  01670E  ECD4  F0B0         	call	i2___fladd	;wreg free
 49321  016712  C056  F099         	movff	?i2___fladd,_asin$5404
 49322  016716  C057  F09A         	movff	?i2___fladd+1,_asin$5404+1
 49323  01671A  C058  F09B         	movff	?i2___fladd+2,_asin$5404+2
 49324  01671E  C059  F09C         	movff	?i2___fladd+3,_asin$5404+3
 49325  016722  C099  F02C         	movff	_asin$5404,i2___flneg@f1
 49326  016726  C09A  F02D         	movff	_asin$5404+1,i2___flneg@f1+1
 49327  01672A  C09B  F02E         	movff	_asin$5404+2,i2___flneg@f1+2
 49328  01672E  C09C  F02F         	movff	_asin$5404+3,i2___flneg@f1+3
 49329  016732  EC64  F0D6         	call	i2___flneg	;wreg free
 49330  016736  C02C  F091         	movff	?i2___flneg,?_asin
 49331  01673A  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 49332  01673E  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 49333  016742  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 49334  016746  0012               	return	
 49335  016748                     i2l2261:
 49336  016748  C091  F017         	movff	asin@x,i2___fldiv@a
 49337  01674C  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49338  016750  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49339  016754  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49340  016758  C0A1  F013         	movff	asin@y,i2___fldiv@b
 49341  01675C  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 49342  016760  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 49343  016764  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 49344  016768  EC94  F0B9         	call	i2___fldiv	;wreg free
 49345  01676C  C013  F0A5         	movff	?i2___fldiv,_asin$5402
 49346  016770  C014  F0A6         	movff	?i2___fldiv+1,_asin$5402+1
 49347  016774  C015  F0A7         	movff	?i2___fldiv+2,_asin$5402+2
 49348  016778  C016  F0A8         	movff	?i2___fldiv+3,_asin$5402+3
 49349  01677C  C0A5  F07C         	movff	_asin$5402,atan@f
 49350  016780  C0A6  F07D         	movff	_asin$5402+1,atan@f+1
 49351  016784  C0A7  F07E         	movff	_asin$5402+2,atan@f+2
 49352  016788  C0A8  F07F         	movff	_asin$5402+3,atan@f+3
 49353  01678C  ECC9  F0BF         	call	_atan	;wreg free
 49354  016790  C07C  F09D         	movff	?_atan,_asin$5403
 49355  016794  C07D  F09E         	movff	?_atan+1,_asin$5403+1
 49356  016798  C07E  F09F         	movff	?_atan+2,_asin$5403+2
 49357  01679C  C07F  F0A0         	movff	?_atan+3,_asin$5403+3
 49358  0167A0  C09D  F02C         	movff	_asin$5403,i2___flneg@f1
 49359  0167A4  C09E  F02D         	movff	_asin$5403+1,i2___flneg@f1+1
 49360  0167A8  C09F  F02E         	movff	_asin$5403+2,i2___flneg@f1+2
 49361  0167AC  C0A0  F02F         	movff	_asin$5403+3,i2___flneg@f1+3
 49362  0167B0  EC64  F0D6         	call	i2___flneg	;wreg free
 49363  0167B4  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49364  0167B8  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49365  0167BC  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49366  0167C0  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49367  0167C4  0EDB               	movlw	219
 49368  0167C6  6E5A               	movwf	i2___fladd@a,c
 49369  0167C8  0E0F               	movlw	15
 49370  0167CA  6E5B               	movwf	i2___fladd@a+1,c
 49371  0167CC  0EC9               	movlw	201
 49372  0167CE  6E5C               	movwf	i2___fladd@a+2,c
 49373  0167D0  0E3F               	movlw	63
 49374  0167D2  6E5D               	movwf	i2___fladd@a+3,c
 49375  0167D4  ECD4  F0B0         	call	i2___fladd	;wreg free
 49376  0167D8  C056  F091         	movff	?i2___fladd,?_asin
 49377  0167DC  C057  F092         	movff	?i2___fladd+1,?_asin+1
 49378  0167E0  C058  F093         	movff	?i2___fladd+2,?_asin+2
 49379  0167E4  C059  F094         	movff	?i2___fladd+3,?_asin+3
 49380  0167E8  0012               	return	
 49381  0167EA                     __end_of_asin:
 49382                           	opt stack 0
 49383                           tosu	equ	0xFFF
 49384                           tosh	equ	0xFFE
 49385                           tosl	equ	0xFFD
 49386                           pclatu	equ	0xFFB
 49387                           pclath	equ	0xFFA
 49388                           tblptru	equ	0xFF8
 49389                           tblptrh	equ	0xFF7
 49390                           tblptrl	equ	0xFF6
 49391                           tablat	equ	0xFF5
 49392                           prodh	equ	0xFF4
 49393                           prodl	equ	0xFF3
 49394                           intcon	equ	0xFF2
 49395                           indf0	equ	0xFEF
 49396                           postinc0	equ	0xFEE
 49397                           fsr0h	equ	0xFEA
 49398                           fsr0l	equ	0xFE9
 49399                           wreg	equ	0xFE8
 49400                           indf1	equ	0xFE7
 49401                           postdec1	equ	0xFE5
 49402                           plusw1	equ	0xFE3
 49403                           fsr1h	equ	0xFE2
 49404                           fsr1l	equ	0xFE1
 49405                           bsr	equ	0xFE0
 49406                           indf2	equ	0xFDF
 49407                           postinc2	equ	0xFDE
 49408                           postdec2	equ	0xFDD
 49409                           plusw2	equ	0xFDB
 49410                           fsr2h	equ	0xFDA
 49411                           fsr2l	equ	0xFD9
 49412                           status	equ	0xFD8
 49413                           
 49414 ;; *************** function _sqrt *****************
 49415 ;; Defined at:
 49416 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 49417 ;; Parameters:    Size  Location     Type
 49418 ;;  a               4   12[BANK0 ] void 
 49419 ;; Auto vars:     Size  Location     Type
 49420 ;;  frac            4   37[BANK0 ] unsigned long 
 49421 ;;  root            4   33[BANK0 ] struct .
 49422 ;;  grs             4   27[BANK0 ] unsigned long 
 49423 ;;  tfrac           4   22[BANK0 ] unsigned long 
 49424 ;;  exp             2   31[BANK0 ] int 
 49425 ;;  p               1   26[BANK0 ] unsigned char 
 49426 ;;  i               1   21[BANK0 ] unsigned char 
 49427 ;;  sign            1   20[BANK0 ] unsigned char 
 49428 ;; Return value:  Size  Location     Type
 49429 ;;                  4   12[BANK0 ] unsigned char 
 49430 ;; Registers used:
 49431 ;;		wreg, status,2, status,0
 49432 ;; Tracked objects:
 49433 ;;		On entry : 0/0
 49434 ;;		On exit  : 0/0
 49435 ;;		Unchanged: 0/0
 49436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49438 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49440 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49441 ;;Total ram usage:       29 bytes
 49442 ;; Hardware stack levels used:    1
 49443 ;; This function calls:
 49444 ;;		Nothing
 49445 ;; This function is called by:
 49446 ;;		_peakToRMS
 49447 ;;		_asin
 49448 ;; This function uses a non-reentrant model
 49449 ;;
 49450                           
 49451                           	psect	text151
 49452  016AE4                     __ptext151:
 49453                           	opt stack 0
 49454  016AE4                     _sqrt:
 49455                           	opt stack 14
 49456                           
 49457                           ;incstack = 0
 49458  016AE4  0100               	movlb	0	; () banked
 49459  016AE6  516F               	movf	(sqrt@a+3)& (0+255),w,b
 49460  016AE8  0B80               	andlw	128
 49461  016AEA  6F74               	movwf	sqrt@sign& (0+255),b
 49462  016AEC  516F               	movf	(sqrt@a+3)& (0+255),w,b
 49463  016AEE  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 49464  016AF0  6F7A               	movwf	sqrt@p& (0+255),b
 49465                           
 49466                           ; BSR set to: 0
 49467  016AF2  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 49468                           
 49469                           ; BSR set to: 0
 49470  016AF4  817A               	bsf	sqrt@p& (0+255),0,b
 49471                           
 49472                           ; BSR set to: 0
 49473                           
 49474                           ; BSR set to: 0
 49475  016AF6  C07A  F07F         	movff	sqrt@p,sqrt@exp
 49476  016AFA  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 49477                           
 49478                           ; BSR set to: 0
 49479  016AFC  0EFF               	movlw	255
 49480  016AFE  156C               	andwf	sqrt@a& (0+255),w,b
 49481  016B00  6F85               	movwf	sqrt@frac& (0+255),b
 49482  016B02  0EFF               	movlw	255
 49483  016B04  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 49484  016B06  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49485  016B08  0E7F               	movlw	127
 49486  016B0A  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 49487  016B0C  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49488  016B0E  0E00               	movlw	0
 49489  016B10  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 49490  016B12  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49491                           
 49492                           ; BSR set to: 0
 49493  016B14  517F               	movf	sqrt@exp& (0+255),w,b
 49494  016B16  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49495  016B18  B4D8               	btfsc	status,2,c
 49496  016B1A  D005               	goto	i2l2828
 49497                           
 49498                           ; BSR set to: 0
 49499  016B1C  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 49500                           
 49501                           ; BSR set to: 0
 49502  016B1E  297F               	incf	sqrt@exp& (0+255),w,b
 49503  016B20  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49504  016B22  A4D8               	btfss	status,2,c
 49505  016B24  D008               	goto	i2l2830
 49506  016B26                     i2l2828:
 49507                           
 49508                           ; BSR set to: 0
 49509                           
 49510                           ; BSR set to: 0
 49511  016B26  0E00               	movlw	0
 49512  016B28  6F85               	movwf	sqrt@frac& (0+255),b
 49513  016B2A  0E00               	movlw	0
 49514  016B2C  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49515  016B2E  0E00               	movlw	0
 49516  016B30  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49517  016B32  0E00               	movlw	0
 49518  016B34  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49519  016B36                     i2l2830:
 49520                           
 49521                           ; BSR set to: 0
 49522                           
 49523                           ; BSR set to: 0
 49524  016B36  517F               	movf	sqrt@exp& (0+255),w,b
 49525  016B38  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49526  016B3A  A4D8               	btfss	status,2,c
 49527  016B3C  D009               	goto	i2l2831
 49528                           
 49529                           ; BSR set to: 0
 49530  016B3E  0E00               	movlw	0
 49531  016B40  6F6C               	movwf	?_sqrt& (0+255),b
 49532  016B42  0E00               	movlw	0
 49533  016B44  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 49534  016B46  0E00               	movlw	0
 49535  016B48  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 49536  016B4A  0E00               	movlw	0
 49537  016B4C  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 49538                           
 49539                           ; BSR set to: 0
 49540  016B4E  0012               	return	
 49541  016B50                     i2l2831:
 49542                           
 49543                           ; BSR set to: 0
 49544                           
 49545                           ; BSR set to: 0
 49546  016B50  5174               	movf	sqrt@sign& (0+255),w,b
 49547  016B52  B4D8               	btfsc	status,2,c
 49548  016B54  D01A               	goto	i2l2833
 49549                           
 49550                           ; BSR set to: 0
 49551  016B56  0E00               	movlw	0
 49552  016B58  6F81               	movwf	sqrt@root& (0+255),b
 49553  016B5A  0E00               	movlw	0
 49554  016B5C  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49555  016B5E  0E40               	movlw	64
 49556  016B60  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49557  016B62  0E00               	movlw	0
 49558  016B64  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49559                           
 49560                           ; BSR set to: 0
 49561  016B66  0E80               	movlw	128
 49562  016B68  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 49563  016B6A  0EFF               	movlw	255
 49564  016B6C  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 49565                           
 49566                           ; BSR set to: 0
 49567  016B6E  0E00               	movlw	0
 49568  016B70  0102               	movlb	2	; () banked
 49569  016B72  6F5D               	movwf	(_errno+1)& (0+255),b
 49570  016B74  0E21               	movlw	33
 49571  016B76  6F5C               	movwf	_errno& (0+255),b
 49572                           
 49573                           ; BSR set to: 2
 49574  016B78  C081  F06C         	movff	sqrt@root,?_sqrt
 49575  016B7C  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49576  016B80  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49577  016B84  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49578                           
 49579                           ; BSR set to: 2
 49580  016B88  0012               	return	
 49581  016B8A                     i2l2833:
 49582                           
 49583                           ; BSR set to: 2
 49584  016B8A  0100               	movlb	0	; () banked
 49585  016B8C  297F               	incf	sqrt@exp& (0+255),w,b
 49586  016B8E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49587  016B90  A4D8               	btfss	status,2,c
 49588  016B92  D011               	goto	i2l2834
 49589                           
 49590                           ; BSR set to: 0
 49591  016B94  0E00               	movlw	0
 49592  016B96  6F81               	movwf	sqrt@root& (0+255),b
 49593  016B98  0E00               	movlw	0
 49594  016B9A  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49595  016B9C  0E80               	movlw	128
 49596  016B9E  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49597  016BA0  0E7F               	movlw	127
 49598  016BA2  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49599                           
 49600                           ; BSR set to: 0
 49601  016BA4  C081  F06C         	movff	sqrt@root,?_sqrt
 49602  016BA8  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49603  016BAC  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49604  016BB0  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49605                           
 49606                           ; BSR set to: 0
 49607  016BB4  0012               	return	
 49608  016BB6                     i2l2834:
 49609                           
 49610                           ; BSR set to: 0
 49611                           
 49612                           ; BSR set to: 0
 49613  016BB6  0E81               	movlw	129
 49614  016BB8  277F               	addwf	sqrt@exp& (0+255),f,b
 49615  016BBA  0EFF               	movlw	255
 49616  016BBC  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 49617  016BBE  517F               	movf	sqrt@exp& (0+255),w,b
 49618  016BC0  0B01               	andlw	1
 49619  016BC2  6F7A               	movwf	sqrt@p& (0+255),b
 49620  016BC4  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 49621  016BC6  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 49622  016BC8  337F               	rrcf	sqrt@exp& (0+255),f,b
 49623  016BCA  0E7F               	movlw	127
 49624  016BCC  277F               	addwf	sqrt@exp& (0+255),f,b
 49625  016BCE  0E00               	movlw	0
 49626  016BD0  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 49627  016BD2  90D8               	bcf	status,0,c
 49628  016BD4  3585               	rlcf	sqrt@frac& (0+255),w,b
 49629  016BD6  6F76               	movwf	sqrt@tfrac& (0+255),b
 49630  016BD8  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 49631  016BDA  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 49632  016BDC  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 49633  016BDE  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 49634  016BE0  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 49635  016BE2  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 49636                           
 49637                           ; BSR set to: 0
 49638  016BE4  0E00               	movlw	0
 49639  016BE6  6F85               	movwf	sqrt@frac& (0+255),b
 49640  016BE8  0E00               	movlw	0
 49641  016BEA  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49642  016BEC  0E00               	movlw	0
 49643  016BEE  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49644  016BF0  0E00               	movlw	0
 49645  016BF2  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49646                           
 49647                           ; BSR set to: 0
 49648  016BF4  0E00               	movlw	0
 49649  016BF6  6F7B               	movwf	sqrt@grs& (0+255),b
 49650  016BF8  0E00               	movlw	0
 49651  016BFA  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 49652  016BFC  0E00               	movlw	0
 49653  016BFE  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 49654  016C00  0E01               	movlw	1
 49655  016C02  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 49656                           
 49657                           ; BSR set to: 0
 49658  016C04  517A               	movf	sqrt@p& (0+255),w,b
 49659  016C06  B4D8               	btfsc	status,2,c
 49660  016C08  D005               	goto	i2l2835
 49661                           
 49662                           ; BSR set to: 0
 49663  016C0A  90D8               	bcf	status,0,c
 49664  016C0C  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 49665  016C0E  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 49666  016C10  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 49667  016C12  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 49668  016C14                     i2l2835:
 49669                           
 49670                           ; BSR set to: 0
 49671                           
 49672                           ; BSR set to: 0
 49673  016C14  0E00               	movlw	0
 49674  016C16  6F75               	movwf	sqrt@i& (0+255),b
 49675  016C18  D052               	goto	i2l2836
 49676  016C1A                     
 49677                           ; BSR set to: 0
 49678                           
 49679                           ; BSR set to: 0
 49680  016C1A  517B               	movf	sqrt@grs& (0+255),w,b
 49681  016C1C  1385               	iorwf	sqrt@frac& (0+255),f,b
 49682  016C1E  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49683  016C20  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 49684  016C22  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49685  016C24  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 49686  016C26  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49687  016C28  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 49688  016C2A  5185               	movf	sqrt@frac& (0+255),w,b
 49689  016C2C  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 49690  016C2E  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 49691  016C30  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 49692  016C32  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 49693  016C34  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 49694  016C36  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 49695  016C38  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 49696  016C3A  A0D8               	btfss	status,0,c
 49697  016C3C  D011               	goto	i2l2838
 49698                           
 49699                           ; BSR set to: 0
 49700  016C3E  5185               	movf	sqrt@frac& (0+255),w,b
 49701  016C40  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 49702  016C42  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 49703  016C44  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 49704  016C46  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 49705  016C48  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 49706  016C4A  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 49707  016C4C  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 49708  016C4E  517B               	movf	sqrt@grs& (0+255),w,b
 49709  016C50  2785               	addwf	sqrt@frac& (0+255),f,b
 49710  016C52  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49711  016C54  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 49712  016C56  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49713  016C58  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 49714  016C5A  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49715  016C5C  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 49716  016C5E  D014               	goto	i2l2839
 49717  016C60                     i2l2838:
 49718                           
 49719                           ; BSR set to: 0
 49720                           
 49721                           ; BSR set to: 0
 49722  016C60  C07B  F070         	movff	sqrt@grs,??_sqrt
 49723  016C64  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 49724  016C68  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 49725  016C6C  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 49726  016C70  1F70               	comf	??_sqrt& (0+255),f,b
 49727  016C72  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 49728  016C74  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 49729  016C76  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 49730  016C78  5170               	movf	??_sqrt& (0+255),w,b
 49731  016C7A  1785               	andwf	sqrt@frac& (0+255),f,b
 49732  016C7C  5171               	movf	(??_sqrt+1)& (0+255),w,b
 49733  016C7E  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 49734  016C80  5172               	movf	(??_sqrt+2)& (0+255),w,b
 49735  016C82  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 49736  016C84  5173               	movf	(??_sqrt+3)& (0+255),w,b
 49737  016C86  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 49738  016C88                     i2l2839:
 49739                           
 49740                           ; BSR set to: 0
 49741                           
 49742                           ; BSR set to: 0
 49743  016C88  C07B  F070         	movff	sqrt@grs,??_sqrt
 49744  016C8C  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 49745  016C90  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 49746  016C94  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 49747  016C98  90D8               	bcf	status,0,c
 49748  016C9A  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49749  016C9C  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49750  016C9E  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49751  016CA0  3370               	rrcf	??_sqrt& (0+255),f,b
 49752  016CA2  C070  F07B         	movff	??_sqrt,sqrt@grs
 49753  016CA6  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 49754  016CAA  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 49755  016CAE  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 49756                           
 49757                           ; BSR set to: 0
 49758  016CB2  90D8               	bcf	status,0,c
 49759  016CB4  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 49760  016CB6  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 49761  016CB8  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 49762  016CBA  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 49763                           
 49764                           ; BSR set to: 0
 49765  016CBC  2B75               	incf	sqrt@i& (0+255),f,b
 49766  016CBE                     i2l2836:
 49767                           
 49768                           ; BSR set to: 0
 49769                           
 49770                           ; BSR set to: 0
 49771  016CBE  0E18               	movlw	24
 49772  016CC0  6575               	cpfsgt	sqrt@i& (0+255),b
 49773  016CC2  D7AB               	goto	i2l2837
 49774                           
 49775                           ; BSR set to: 0
 49776                           
 49777                           ; BSR set to: 0
 49778  016CC4  C085  F070         	movff	sqrt@frac,??_sqrt
 49779  016CC8  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 49780  016CCC  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 49781  016CD0  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 49782  016CD4  90D8               	bcf	status,0,c
 49783  016CD6  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49784  016CD8  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49785  016CDA  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49786  016CDC  3370               	rrcf	??_sqrt& (0+255),f,b
 49787  016CDE  C070  F085         	movff	??_sqrt,sqrt@frac
 49788  016CE2  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 49789  016CE6  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 49790  016CEA  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 49791                           
 49792                           ; BSR set to: 0
 49793  016CEE  0E01               	movlw	1
 49794  016CF0  1585               	andwf	sqrt@frac& (0+255),w,b
 49795  016CF2  6F7B               	movwf	sqrt@grs& (0+255),b
 49796  016CF4  0E00               	movlw	0
 49797  016CF6  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 49798  016CF8  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 49799  016CFA  0E00               	movlw	0
 49800  016CFC  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 49801  016CFE  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 49802  016D00  0E00               	movlw	0
 49803  016D02  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 49804  016D04  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 49805                           
 49806                           ; BSR set to: 0
 49807  016D06  C085  F070         	movff	sqrt@frac,??_sqrt
 49808  016D0A  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 49809  016D0E  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 49810  016D12  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 49811  016D16  90D8               	bcf	status,0,c
 49812  016D18  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49813  016D1A  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49814  016D1C  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49815  016D1E  3370               	rrcf	??_sqrt& (0+255),f,b
 49816  016D20  C070  F085         	movff	??_sqrt,sqrt@frac
 49817  016D24  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 49818  016D28  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 49819  016D2C  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 49820  016D30  517B               	movf	sqrt@grs& (0+255),w,b
 49821  016D32  2785               	addwf	sqrt@frac& (0+255),f,b
 49822  016D34  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49823  016D36  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 49824  016D38  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49825  016D3A  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 49826  016D3C  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49827  016D3E  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 49828                           
 49829                           ; BSR set to: 0
 49830  016D40  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 49831  016D42  D017               	goto	i2l2841
 49832                           
 49833                           ; BSR set to: 0
 49834  016D44  C085  F070         	movff	sqrt@frac,??_sqrt
 49835  016D48  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 49836  016D4C  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 49837  016D50  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 49838  016D54  90D8               	bcf	status,0,c
 49839  016D56  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49840  016D58  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49841  016D5A  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49842  016D5C  3370               	rrcf	??_sqrt& (0+255),f,b
 49843  016D5E  C070  F085         	movff	??_sqrt,sqrt@frac
 49844  016D62  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 49845  016D66  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 49846  016D6A  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 49847  016D6E  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 49848  016D70  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 49849  016D72                     i2l2841:
 49850                           
 49851                           ; BSR set to: 0
 49852                           
 49853                           ; BSR set to: 0
 49854  016D72  0EFF               	movlw	255
 49855  016D74  1585               	andwf	sqrt@frac& (0+255),w,b
 49856  016D76  6F81               	movwf	sqrt@root& (0+255),b
 49857  016D78  0EFF               	movlw	255
 49858  016D7A  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 49859  016D7C  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49860  016D7E  0E7F               	movlw	127
 49861  016D80  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 49862  016D82  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49863  016D84  0E00               	movlw	0
 49864  016D86  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 49865  016D88  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49866                           
 49867                           ; BSR set to: 0
 49868  016D8A  C07F  F07A         	movff	sqrt@exp,sqrt@p
 49869                           
 49870                           ; BSR set to: 0
 49871  016D8E  B17A               	btfsc	sqrt@p& (0+255),0,b
 49872                           
 49873                           ; BSR set to: 0
 49874  016D90  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 49875                           
 49876                           ; BSR set to: 0
 49877                           
 49878                           ; BSR set to: 0
 49879  016D92  90D8               	bcf	status,0,c
 49880  016D94  317A               	rrcf	sqrt@p& (0+255),w,b
 49881  016D96  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49882                           
 49883                           ; BSR set to: 0
 49884  016D98  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 49885                           
 49886                           ; BSR set to: 0
 49887  016D9A  C081  F06C         	movff	sqrt@root,?_sqrt
 49888  016D9E  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49889  016DA2  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49890  016DA6  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49891  016DAA  0012               	return	
 49892  016DAC                     __end_of_sqrt:
 49893                           	opt stack 0
 49894                           tosu	equ	0xFFF
 49895                           tosh	equ	0xFFE
 49896                           tosl	equ	0xFFD
 49897                           pclatu	equ	0xFFB
 49898                           pclath	equ	0xFFA
 49899                           tblptru	equ	0xFF8
 49900                           tblptrh	equ	0xFF7
 49901                           tblptrl	equ	0xFF6
 49902                           tablat	equ	0xFF5
 49903                           prodh	equ	0xFF4
 49904                           prodl	equ	0xFF3
 49905                           intcon	equ	0xFF2
 49906                           indf0	equ	0xFEF
 49907                           postinc0	equ	0xFEE
 49908                           fsr0h	equ	0xFEA
 49909                           fsr0l	equ	0xFE9
 49910                           wreg	equ	0xFE8
 49911                           indf1	equ	0xFE7
 49912                           postdec1	equ	0xFE5
 49913                           plusw1	equ	0xFE3
 49914                           fsr1h	equ	0xFE2
 49915                           fsr1l	equ	0xFE1
 49916                           bsr	equ	0xFE0
 49917                           indf2	equ	0xFDF
 49918                           postinc2	equ	0xFDE
 49919                           postdec2	equ	0xFDD
 49920                           plusw2	equ	0xFDB
 49921                           fsr2h	equ	0xFDA
 49922                           fsr2l	equ	0xFD9
 49923                           status	equ	0xFD8
 49924                           
 49925 ;; *************** function _atan *****************
 49926 ;; Defined at:
 49927 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 49928 ;; Parameters:    Size  Location     Type
 49929 ;;  f               4   28[BANK0 ] unsigned char 
 49930 ;; Auto vars:     Size  Location     Type
 49931 ;;  val             4   45[BANK0 ] unsigned char 
 49932 ;;  val_squared     4   41[BANK0 ] unsigned char 
 49933 ;;  x               4   36[BANK0 ] unsigned char 
 49934 ;;  y               4   32[BANK0 ] unsigned char 
 49935 ;;  recip           1   40[BANK0 ] unsigned char 
 49936 ;; Return value:  Size  Location     Type
 49937 ;;                  4   28[BANK0 ] unsigned char 
 49938 ;; Registers used:
 49939 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49940 ;; Tracked objects:
 49941 ;;		On entry : 0/0
 49942 ;;		On exit  : 0/0
 49943 ;;		Unchanged: 0/0
 49944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49946 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49948 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49949 ;;Total ram usage:       21 bytes
 49950 ;; Hardware stack levels used:    1
 49951 ;; Hardware stack levels required when called:    2
 49952 ;; This function calls:
 49953 ;;		_eval_poly
 49954 ;;		_fabs
 49955 ;;		i2___fladd
 49956 ;;		i2___fldiv
 49957 ;;		i2___flge
 49958 ;;		i2___flmul
 49959 ;;		i2___flneg
 49960 ;; This function is called by:
 49961 ;;		_asin
 49962 ;; This function uses a non-reentrant model
 49963 ;;
 49964                           
 49965                           	psect	text152
 49966  017F92                     __ptext152:
 49967                           	opt stack 0
 49968  017F92                     _atan:
 49969                           	opt stack 10
 49970                           
 49971                           ;incstack = 0
 49972  017F92  C07C  F030         	movff	atan@f,fabs@d
 49973  017F96  C07D  F031         	movff	atan@f+1,fabs@d+1
 49974  017F9A  C07E  F032         	movff	atan@f+2,fabs@d+2
 49975  017F9E  C07F  F033         	movff	atan@f+3,fabs@d+3
 49976  017FA2  ECEF  F0D4         	call	_fabs	;wreg free
 49977  017FA6  C030  F08D         	movff	?_fabs,atan@val
 49978  017FAA  C031  F08E         	movff	?_fabs+1,atan@val+1
 49979  017FAE  C032  F08F         	movff	?_fabs+2,atan@val+2
 49980  017FB2  C033  F090         	movff	?_fabs+3,atan@val+3
 49981  017FB6  0100               	movlb	0	; () banked
 49982  017FB8  518D               	movf	atan@val& (0+255),w,b
 49983  017FBA  118E               	iorwf	(atan@val+1)& (0+255),w,b
 49984  017FBC  118F               	iorwf	(atan@val+2)& (0+255),w,b
 49985  017FBE  1190               	iorwf	(atan@val+3)& (0+255),w,b
 49986  017FC0  A4D8               	btfss	status,2,c
 49987  017FC2  D009               	goto	i2l2277
 49988                           
 49989                           ; BSR set to: 0
 49990  017FC4  0E00               	movlw	0
 49991  017FC6  6F7C               	movwf	?_atan& (0+255),b
 49992  017FC8  0E00               	movlw	0
 49993  017FCA  6F7D               	movwf	(?_atan+1)& (0+255),b
 49994  017FCC  0E00               	movlw	0
 49995  017FCE  6F7E               	movwf	(?_atan+2)& (0+255),b
 49996  017FD0  0E00               	movlw	0
 49997  017FD2  6F7F               	movwf	(?_atan+3)& (0+255),b
 49998                           
 49999                           ; BSR set to: 0
 50000  017FD4  0012               	return	
 50001  017FD6                     i2l2277:
 50002                           
 50003                           ; BSR set to: 0
 50004                           
 50005                           ; BSR set to: 0
 50006  017FD6  0E00               	movlw	0
 50007  017FD8  6E34               	movwf	i2___flge@ff1,c
 50008  017FDA  0E00               	movlw	0
 50009  017FDC  6E35               	movwf	i2___flge@ff1+1,c
 50010  017FDE  0E80               	movlw	128
 50011  017FE0  6E36               	movwf	i2___flge@ff1+2,c
 50012  017FE2  0E3F               	movlw	63
 50013  017FE4  6E37               	movwf	i2___flge@ff1+3,c
 50014  017FE6  C08D  F038         	movff	atan@val,i2___flge@ff2
 50015  017FEA  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 50016  017FEE  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 50017  017FF2  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 50018  017FF6  ECEB  F0C6         	call	i2___flge	;wreg free
 50019  017FFA  B0D8               	btfsc	status,0,c
 50020  017FFC  D002               	goto	i2u1960_40
 50021  017FFE  0E01               	movlw	1
 50022  018000  D001               	goto	i2u1961_40
 50023  018002                     i2u1960_40:
 50024  018002  0E00               	movlw	0
 50025  018004                     i2u1961_40:
 50026  018004  0100               	movlb	0	; () banked
 50027  018006  6F88               	movwf	atan@recip& (0+255),b
 50028  018008  5188               	movf	atan@recip& (0+255),w,b
 50029  01800A  B4D8               	btfsc	status,2,c
 50030  01800C  D01A               	goto	i2l2279
 50031                           
 50032                           ; BSR set to: 0
 50033  01800E  0E00               	movlw	0
 50034  018010  6E13               	movwf	i2___fldiv@b,c
 50035  018012  0E00               	movlw	0
 50036  018014  6E14               	movwf	i2___fldiv@b+1,c
 50037  018016  0E80               	movlw	128
 50038  018018  6E15               	movwf	i2___fldiv@b+2,c
 50039  01801A  0E3F               	movlw	63
 50040  01801C  6E16               	movwf	i2___fldiv@b+3,c
 50041  01801E  C08D  F017         	movff	atan@val,i2___fldiv@a
 50042  018022  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 50043  018026  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 50044  01802A  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 50045  01802E  EC94  F0B9         	call	i2___fldiv	;wreg free
 50046  018032  C013  F08D         	movff	?i2___fldiv,atan@val
 50047  018036  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 50048  01803A  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 50049  01803E  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 50050  018042                     i2l2279:
 50051  018042  C08D  F030         	movff	atan@val,i2___flmul@b
 50052  018046  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 50053  01804A  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 50054  01804E  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 50055  018052  C08D  F034         	movff	atan@val,i2___flmul@a
 50056  018056  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 50057  01805A  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 50058  01805E  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 50059  018062  EC8D  F0AD         	call	i2___flmul	;wreg free
 50060  018066  C030  F089         	movff	?i2___flmul,atan@val_squared
 50061  01806A  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 50062  01806E  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 50063  018072  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 50064  018076  C089  F06C         	movff	atan@val_squared,eval_poly@x
 50065  01807A  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 50066  01807E  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 50067  018082  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 50068  018086  0E91               	movlw	low atan@coeff_b
 50069  018088  0100               	movlb	0	; () banked
 50070  01808A  6F70               	movwf	eval_poly@d& (0+255),b
 50071  01808C  0ED2               	movlw	high atan@coeff_b
 50072  01808E  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50073  018090  0E00               	movlw	0
 50074  018092  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50075  018094  0E04               	movlw	4
 50076  018096  6F72               	movwf	eval_poly@n& (0+255),b
 50077  018098  EC88  F0C8         	call	_eval_poly	;wreg free
 50078  01809C  C06C  F080         	movff	?_eval_poly,atan@y
 50079  0180A0  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 50080  0180A4  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 50081  0180A8  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 50082  0180AC  C089  F06C         	movff	atan@val_squared,eval_poly@x
 50083  0180B0  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 50084  0180B4  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 50085  0180B8  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 50086  0180BC  0E65               	movlw	low atan@coeff_a
 50087  0180BE  0100               	movlb	0	; () banked
 50088  0180C0  6F70               	movwf	eval_poly@d& (0+255),b
 50089  0180C2  0ED2               	movlw	high atan@coeff_a
 50090  0180C4  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50091  0180C6  0E00               	movlw	0
 50092  0180C8  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50093  0180CA  0E05               	movlw	5
 50094  0180CC  6F72               	movwf	eval_poly@n& (0+255),b
 50095  0180CE  EC88  F0C8         	call	_eval_poly	;wreg free
 50096  0180D2  C06C  F084         	movff	?_eval_poly,atan@x
 50097  0180D6  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 50098  0180DA  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 50099  0180DE  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 50100  0180E2  C08D  F030         	movff	atan@val,i2___flmul@b
 50101  0180E6  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 50102  0180EA  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 50103  0180EE  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 50104  0180F2  C080  F017         	movff	atan@y,i2___fldiv@a
 50105  0180F6  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 50106  0180FA  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 50107  0180FE  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 50108  018102  C084  F013         	movff	atan@x,i2___fldiv@b
 50109  018106  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 50110  01810A  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 50111  01810E  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 50112  018112  EC94  F0B9         	call	i2___fldiv	;wreg free
 50113  018116  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 50114  01811A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 50115  01811E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 50116  018122  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 50117  018126  EC8D  F0AD         	call	i2___flmul	;wreg free
 50118  01812A  C030  F08D         	movff	?i2___flmul,atan@val
 50119  01812E  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 50120  018132  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 50121  018136  C033  F090         	movff	?i2___flmul+3,atan@val+3
 50122  01813A  0100               	movlb	0	; () banked
 50123  01813C  5188               	movf	atan@recip& (0+255),w,b
 50124  01813E  B4D8               	btfsc	status,2,c
 50125  018140  D024               	goto	i2l2280
 50126                           
 50127                           ; BSR set to: 0
 50128  018142  C08D  F02C         	movff	atan@val,i2___flneg@f1
 50129  018146  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 50130  01814A  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 50131  01814E  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 50132  018152  EC64  F0D6         	call	i2___flneg	;wreg free
 50133  018156  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 50134  01815A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 50135  01815E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 50136  018162  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 50137  018166  0EDB               	movlw	219
 50138  018168  6E5A               	movwf	i2___fladd@a,c
 50139  01816A  0E0F               	movlw	15
 50140  01816C  6E5B               	movwf	i2___fladd@a+1,c
 50141  01816E  0EC9               	movlw	201
 50142  018170  6E5C               	movwf	i2___fladd@a+2,c
 50143  018172  0E3F               	movlw	63
 50144  018174  6E5D               	movwf	i2___fladd@a+3,c
 50145  018176  ECD4  F0B0         	call	i2___fladd	;wreg free
 50146  01817A  C056  F08D         	movff	?i2___fladd,atan@val
 50147  01817E  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 50148  018182  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 50149  018186  C059  F090         	movff	?i2___fladd+3,atan@val+3
 50150  01818A                     i2l2280:
 50151  01818A  0100               	movlb	0	; () banked
 50152  01818C  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 50153  01818E  D009               	goto	i2l2282
 50154                           
 50155                           ; BSR set to: 0
 50156  018190  C08D  F07C         	movff	atan@val,?_atan
 50157  018194  C08E  F07D         	movff	atan@val+1,?_atan+1
 50158  018198  C08F  F07E         	movff	atan@val+2,?_atan+2
 50159  01819C  C090  F07F         	movff	atan@val+3,?_atan+3
 50160  0181A0  0012               	return	
 50161  0181A2                     i2l2282:
 50162                           
 50163                           ; BSR set to: 0
 50164                           
 50165                           ; BSR set to: 0
 50166  0181A2  C08D  F02C         	movff	atan@val,i2___flneg@f1
 50167  0181A6  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 50168  0181AA  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 50169  0181AE  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 50170  0181B2  EC64  F0D6         	call	i2___flneg	;wreg free
 50171  0181B6  C02C  F07C         	movff	?i2___flneg,?_atan
 50172  0181BA  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 50173  0181BE  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 50174  0181C2  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 50175  0181C6  0012               	return	
 50176  0181C8                     __end_of_atan:
 50177                           	opt stack 0
 50178                           tosu	equ	0xFFF
 50179                           tosh	equ	0xFFE
 50180                           tosl	equ	0xFFD
 50181                           pclatu	equ	0xFFB
 50182                           pclath	equ	0xFFA
 50183                           tblptru	equ	0xFF8
 50184                           tblptrh	equ	0xFF7
 50185                           tblptrl	equ	0xFF6
 50186                           tablat	equ	0xFF5
 50187                           prodh	equ	0xFF4
 50188                           prodl	equ	0xFF3
 50189                           intcon	equ	0xFF2
 50190                           indf0	equ	0xFEF
 50191                           postinc0	equ	0xFEE
 50192                           fsr0h	equ	0xFEA
 50193                           fsr0l	equ	0xFE9
 50194                           wreg	equ	0xFE8
 50195                           indf1	equ	0xFE7
 50196                           postdec1	equ	0xFE5
 50197                           plusw1	equ	0xFE3
 50198                           fsr1h	equ	0xFE2
 50199                           fsr1l	equ	0xFE1
 50200                           bsr	equ	0xFE0
 50201                           indf2	equ	0xFDF
 50202                           postinc2	equ	0xFDE
 50203                           postdec2	equ	0xFDD
 50204                           plusw2	equ	0xFDB
 50205                           fsr2h	equ	0xFDA
 50206                           fsr2l	equ	0xFD9
 50207                           status	equ	0xFD8
 50208                           
 50209 ;; *************** function _fabs *****************
 50210 ;; Defined at:
 50211 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 50212 ;; Parameters:    Size  Location     Type
 50213 ;;  d               4   47[COMRAM] unsigned char 
 50214 ;; Auto vars:     Size  Location     Type
 50215 ;;		None
 50216 ;; Return value:  Size  Location     Type
 50217 ;;                  4   47[COMRAM] unsigned char 
 50218 ;; Registers used:
 50219 ;;		wreg, status,2, status,0, cstack
 50220 ;; Tracked objects:
 50221 ;;		On entry : 0/0
 50222 ;;		On exit  : 0/0
 50223 ;;		Unchanged: 0/0
 50224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50229 ;;Total ram usage:        4 bytes
 50230 ;; Hardware stack levels used:    1
 50231 ;; Hardware stack levels required when called:    1
 50232 ;; This function calls:
 50233 ;;		i2___flneg
 50234 ;; This function is called by:
 50235 ;;		_asin
 50236 ;;		_atan
 50237 ;; This function uses a non-reentrant model
 50238 ;;
 50239                           
 50240                           	psect	text153
 50241  01A9DE                     __ptext153:
 50242                           	opt stack 0
 50243  01A9DE                     _fabs:
 50244                           	opt stack 11
 50245                           
 50246                           ;incstack = 0
 50247  01A9DE  AE33               	btfss	fabs@d+3,7,c
 50248  01A9E0  D013               	goto	i2l2374
 50249  01A9E2  C030  F02C         	movff	fabs@d,i2___flneg@f1
 50250  01A9E6  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 50251  01A9EA  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 50252  01A9EE  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 50253  01A9F2  EC64  F0D6         	call	i2___flneg	;wreg free
 50254  01A9F6  C02C  F030         	movff	?i2___flneg,?_fabs
 50255  01A9FA  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 50256  01A9FE  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 50257  01AA02  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 50258  01AA06  0012               	return	
 50259  01AA08                     i2l2374:
 50260  01AA08  C030  F030         	movff	fabs@d,?_fabs
 50261  01AA0C  C031  F031         	movff	fabs@d+1,?_fabs+1
 50262  01AA10  C032  F032         	movff	fabs@d+2,?_fabs+2
 50263  01AA14  C033  F033         	movff	fabs@d+3,?_fabs+3
 50264  01AA18  0012               	return		;funcret
 50265  01AA1A                     __end_of_fabs:
 50266                           	opt stack 0
 50267                           tosu	equ	0xFFF
 50268                           tosh	equ	0xFFE
 50269                           tosl	equ	0xFFD
 50270                           pclatu	equ	0xFFB
 50271                           pclath	equ	0xFFA
 50272                           tblptru	equ	0xFF8
 50273                           tblptrh	equ	0xFF7
 50274                           tblptrl	equ	0xFF6
 50275                           tablat	equ	0xFF5
 50276                           prodh	equ	0xFF4
 50277                           prodl	equ	0xFF3
 50278                           intcon	equ	0xFF2
 50279                           indf0	equ	0xFEF
 50280                           postinc0	equ	0xFEE
 50281                           fsr0h	equ	0xFEA
 50282                           fsr0l	equ	0xFE9
 50283                           wreg	equ	0xFE8
 50284                           indf1	equ	0xFE7
 50285                           postdec1	equ	0xFE5
 50286                           plusw1	equ	0xFE3
 50287                           fsr1h	equ	0xFE2
 50288                           fsr1l	equ	0xFE1
 50289                           bsr	equ	0xFE0
 50290                           indf2	equ	0xFDF
 50291                           postinc2	equ	0xFDE
 50292                           postdec2	equ	0xFDD
 50293                           plusw2	equ	0xFDB
 50294                           fsr2h	equ	0xFDA
 50295                           fsr2l	equ	0xFD9
 50296                           status	equ	0xFD8
 50297                           
 50298 ;; *************** function _currentMeasuredToPeak *****************
 50299 ;; Defined at:
 50300 ;;		line 142 in file "main.c"
 50301 ;; Parameters:    Size  Location     Type
 50302 ;;  Measured        4   57[BANK0 ] unsigned char 
 50303 ;;  Angle           4   61[BANK0 ] unsigned char 
 50304 ;; Auto vars:     Size  Location     Type
 50305 ;;  Peak            4   65[BANK0 ] unsigned char 
 50306 ;; Return value:  Size  Location     Type
 50307 ;;                  4   57[BANK0 ] unsigned char 
 50308 ;; Registers used:
 50309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50310 ;; Tracked objects:
 50311 ;;		On entry : 0/0
 50312 ;;		On exit  : 0/0
 50313 ;;		Unchanged: 0/0
 50314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50315 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50316 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50318 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50319 ;;Total ram usage:       12 bytes
 50320 ;; Hardware stack levels used:    1
 50321 ;; Hardware stack levels required when called:    3
 50322 ;; This function calls:
 50323 ;;		_sin
 50324 ;;		i2___fldiv
 50325 ;; This function is called by:
 50326 ;;		_ADCPostProcessingCallback
 50327 ;; This function uses a non-reentrant model
 50328 ;;
 50329                           
 50330                           	psect	text154
 50331  019CE8                     __ptext154:
 50332                           	opt stack 0
 50333  019CE8                     _currentMeasuredToPeak:
 50334                           	opt stack 12
 50335                           
 50336                           ;main.c: 145: double Peak = 0.0;
 50337                           
 50338                           ;incstack = 0
 50339  019CE8  0E00               	movlw	0
 50340  019CEA  0100               	movlb	0	; () banked
 50341  019CEC  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 50342  019CEE  0E00               	movlw	0
 50343  019CF0  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 50344  019CF2  0E00               	movlw	0
 50345  019CF4  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 50346  019CF6  0E00               	movlw	0
 50347  019CF8  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 50348                           
 50349                           ; BSR set to: 0
 50350                           ;main.c: 148: Peak = sin(Angle);
 50351  019CFA  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 50352  019CFE  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 50353  019D02  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 50354  019D06  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 50355  019D0A  ECF5  F0B3         	call	_sin	;wreg free
 50356  019D0E  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 50357  019D12  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 50358  019D16  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 50359  019D1A  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 50360                           
 50361                           ;main.c: 149: Peak = Measured / Peak;
 50362  019D1E  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 50363  019D22  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 50364  019D26  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 50365  019D2A  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 50366  019D2E  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 50367  019D32  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 50368  019D36  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 50369  019D3A  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 50370  019D3E  EC94  F0B9         	call	i2___fldiv	;wreg free
 50371  019D42  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 50372  019D46  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 50373  019D4A  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 50374  019D4E  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 50375                           
 50376                           ;main.c: 150: return Peak;
 50377  019D52  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 50378  019D56  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 50379  019D5A  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 50380  019D5E  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 50381  019D62  0012               	return	
 50382  019D64                     __end_of_currentMeasuredToPeak:
 50383                           	opt stack 0
 50384                           tosu	equ	0xFFF
 50385                           tosh	equ	0xFFE
 50386                           tosl	equ	0xFFD
 50387                           pclatu	equ	0xFFB
 50388                           pclath	equ	0xFFA
 50389                           tblptru	equ	0xFF8
 50390                           tblptrh	equ	0xFF7
 50391                           tblptrl	equ	0xFF6
 50392                           tablat	equ	0xFF5
 50393                           prodh	equ	0xFF4
 50394                           prodl	equ	0xFF3
 50395                           intcon	equ	0xFF2
 50396                           indf0	equ	0xFEF
 50397                           postinc0	equ	0xFEE
 50398                           fsr0h	equ	0xFEA
 50399                           fsr0l	equ	0xFE9
 50400                           wreg	equ	0xFE8
 50401                           indf1	equ	0xFE7
 50402                           postdec1	equ	0xFE5
 50403                           plusw1	equ	0xFE3
 50404                           fsr1h	equ	0xFE2
 50405                           fsr1l	equ	0xFE1
 50406                           bsr	equ	0xFE0
 50407                           indf2	equ	0xFDF
 50408                           postinc2	equ	0xFDE
 50409                           postdec2	equ	0xFDD
 50410                           plusw2	equ	0xFDB
 50411                           fsr2h	equ	0xFDA
 50412                           fsr2l	equ	0xFD9
 50413                           status	equ	0xFD8
 50414                           
 50415 ;; *************** function _sin *****************
 50416 ;; Defined at:
 50417 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 50418 ;; Parameters:    Size  Location     Type
 50419 ;;  f               4   40[BANK0 ] unsigned char 
 50420 ;; Auto vars:     Size  Location     Type
 50421 ;;  x2              4   52[BANK0 ] unsigned char 
 50422 ;;  y               4   44[BANK0 ] unsigned char 
 50423 ;;  sgn             1   56[BANK0 ] unsigned char 
 50424 ;; Return value:  Size  Location     Type
 50425 ;;                  4   40[BANK0 ] unsigned char 
 50426 ;; Registers used:
 50427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50428 ;; Tracked objects:
 50429 ;;		On entry : 0/0
 50430 ;;		On exit  : 0/0
 50431 ;;		Unchanged: 0/0
 50432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50434 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50436 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50437 ;;Total ram usage:       17 bytes
 50438 ;; Hardware stack levels used:    1
 50439 ;; Hardware stack levels required when called:    2
 50440 ;; This function calls:
 50441 ;;		_eval_poly
 50442 ;;		_floor
 50443 ;;		i2___fladd
 50444 ;;		i2___fldiv
 50445 ;;		i2___flge
 50446 ;;		i2___flmul
 50447 ;;		i2___flneg
 50448 ;;		i2___flsub
 50449 ;; This function is called by:
 50450 ;;		_peakToRMS
 50451 ;;		_currentMeasuredToPeak
 50452 ;; This function uses a non-reentrant model
 50453 ;;
 50454                           
 50455                           	psect	text155
 50456  0167EA                     __ptext155:
 50457                           	opt stack 0
 50458  0167EA                     _sin:
 50459                           	opt stack 12
 50460                           
 50461                           ;incstack = 0
 50462  0167EA  0E00               	movlw	0
 50463  0167EC  0100               	movlb	0	; () banked
 50464  0167EE  6F98               	movwf	sin@sgn& (0+255),b
 50465                           
 50466                           ; BSR set to: 0
 50467  0167F0  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 50468  0167F2  D015               	goto	i2l2698
 50469                           
 50470                           ; BSR set to: 0
 50471  0167F4  C088  F02C         	movff	sin@f,i2___flneg@f1
 50472  0167F8  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50473  0167FC  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50474  016800  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50475  016804  EC64  F0D6         	call	i2___flneg	;wreg free
 50476  016808  C02C  F088         	movff	?i2___flneg,sin@f
 50477  01680C  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 50478  016810  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 50479  016814  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 50480  016818  0E01               	movlw	1
 50481  01681A  0100               	movlb	0	; () banked
 50482  01681C  6F98               	movwf	sin@sgn& (0+255),b
 50483  01681E                     i2l2698:
 50484                           
 50485                           ; BSR set to: 0
 50486                           
 50487                           ; BSR set to: 0
 50488  01681E  C088  F030         	movff	sin@f,i2___flmul@b
 50489  016822  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50490  016826  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50491  01682A  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50492  01682E  0E83               	movlw	131
 50493  016830  6E34               	movwf	i2___flmul@a,c
 50494  016832  0EF9               	movlw	249
 50495  016834  6E35               	movwf	i2___flmul@a+1,c
 50496  016836  0E22               	movlw	34
 50497  016838  6E36               	movwf	i2___flmul@a+2,c
 50498  01683A  0E3E               	movlw	62
 50499  01683C  6E37               	movwf	i2___flmul@a+3,c
 50500  01683E  EC8D  F0AD         	call	i2___flmul	;wreg free
 50501  016842  C030  F088         	movff	?i2___flmul,sin@f
 50502  016846  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50503  01684A  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50504  01684E  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50505  016852  C088  F080         	movff	sin@f,i2___flsub@b
 50506  016856  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 50507  01685A  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 50508  01685E  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 50509  016862  C088  F076         	movff	sin@f,floor@x
 50510  016866  C089  F077         	movff	sin@f+1,floor@x+1
 50511  01686A  C08A  F078         	movff	sin@f+2,floor@x+2
 50512  01686E  C08B  F079         	movff	sin@f+3,floor@x+3
 50513  016872  EC7B  F0C7         	call	_floor	;wreg free
 50514  016876  C076  F084         	movff	?_floor,i2___flsub@a
 50515  01687A  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 50516  01687E  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 50517  016882  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 50518  016886  EC6E  F0D3         	call	i2___flsub	;wreg free
 50519  01688A  C080  F088         	movff	?i2___flsub,sin@f
 50520  01688E  C081  F089         	movff	?i2___flsub+1,sin@f+1
 50521  016892  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 50522  016896  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 50523  01689A  C088  F030         	movff	sin@f,i2___flmul@b
 50524  01689E  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50525  0168A2  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50526  0168A6  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50527  0168AA  0E00               	movlw	0
 50528  0168AC  6E34               	movwf	i2___flmul@a,c
 50529  0168AE  0E00               	movlw	0
 50530  0168B0  6E35               	movwf	i2___flmul@a+1,c
 50531  0168B2  0E80               	movlw	128
 50532  0168B4  6E36               	movwf	i2___flmul@a+2,c
 50533  0168B6  0E40               	movlw	64
 50534  0168B8  6E37               	movwf	i2___flmul@a+3,c
 50535  0168BA  EC8D  F0AD         	call	i2___flmul	;wreg free
 50536  0168BE  C030  F088         	movff	?i2___flmul,sin@f
 50537  0168C2  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50538  0168C6  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50539  0168CA  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50540  0168CE  0E00               	movlw	0
 50541  0168D0  6E34               	movwf	i2___flge@ff1,c
 50542  0168D2  0E00               	movlw	0
 50543  0168D4  6E35               	movwf	i2___flge@ff1+1,c
 50544  0168D6  0E00               	movlw	0
 50545  0168D8  6E36               	movwf	i2___flge@ff1+2,c
 50546  0168DA  0E40               	movlw	64
 50547  0168DC  6E37               	movwf	i2___flge@ff1+3,c
 50548  0168DE  C088  F038         	movff	sin@f,i2___flge@ff2
 50549  0168E2  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 50550  0168E6  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 50551  0168EA  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 50552  0168EE  ECEB  F0C6         	call	i2___flge	;wreg free
 50553  0168F2  B0D8               	btfsc	status,0,c
 50554  0168F4  D023               	goto	i2l2699
 50555  0168F6  C088  F080         	movff	sin@f,i2___flsub@b
 50556  0168FA  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 50557  0168FE  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 50558  016902  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 50559  016906  0E00               	movlw	0
 50560  016908  0100               	movlb	0	; () banked
 50561  01690A  6F84               	movwf	i2___flsub@a& (0+255),b
 50562  01690C  0E00               	movlw	0
 50563  01690E  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 50564  016910  0E00               	movlw	0
 50565  016912  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 50566  016914  0E40               	movlw	64
 50567  016916  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 50568  016918  EC6E  F0D3         	call	i2___flsub	;wreg free
 50569  01691C  C080  F088         	movff	?i2___flsub,sin@f
 50570  016920  C081  F089         	movff	?i2___flsub+1,sin@f+1
 50571  016924  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 50572  016928  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 50573  01692C  0100               	movlb	0	; () banked
 50574  01692E  5198               	movf	sin@sgn& (0+255),w,b
 50575  016930  A4D8               	btfss	status,2,c
 50576  016932  D002               	goto	i2u2014_40
 50577  016934  0E01               	movlw	1
 50578  016936  D001               	goto	i2u2015_40
 50579  016938                     i2u2014_40:
 50580  016938  0E00               	movlw	0
 50581  01693A                     i2u2015_40:
 50582  01693A  6F98               	movwf	sin@sgn& (0+255),b
 50583  01693C                     i2l2699:
 50584                           
 50585                           ; BSR set to: 0
 50586  01693C  0E00               	movlw	0
 50587  01693E  6E34               	movwf	i2___flge@ff1,c
 50588  016940  0E00               	movlw	0
 50589  016942  6E35               	movwf	i2___flge@ff1+1,c
 50590  016944  0E80               	movlw	128
 50591  016946  6E36               	movwf	i2___flge@ff1+2,c
 50592  016948  0E3F               	movlw	63
 50593  01694A  6E37               	movwf	i2___flge@ff1+3,c
 50594  01694C  C088  F038         	movff	sin@f,i2___flge@ff2
 50595  016950  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 50596  016954  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 50597  016958  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 50598  01695C  ECEB  F0C6         	call	i2___flge	;wreg free
 50599  016960  B0D8               	btfsc	status,0,c
 50600  016962  D024               	goto	i2l2700
 50601  016964  C088  F02C         	movff	sin@f,i2___flneg@f1
 50602  016968  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50603  01696C  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50604  016970  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50605  016974  EC64  F0D6         	call	i2___flneg	;wreg free
 50606  016978  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 50607  01697C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 50608  016980  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 50609  016984  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 50610  016988  0E00               	movlw	0
 50611  01698A  6E5A               	movwf	i2___fladd@a,c
 50612  01698C  0E00               	movlw	0
 50613  01698E  6E5B               	movwf	i2___fladd@a+1,c
 50614  016990  0E00               	movlw	0
 50615  016992  6E5C               	movwf	i2___fladd@a+2,c
 50616  016994  0E40               	movlw	64
 50617  016996  6E5D               	movwf	i2___fladd@a+3,c
 50618  016998  ECD4  F0B0         	call	i2___fladd	;wreg free
 50619  01699C  C056  F088         	movff	?i2___fladd,sin@f
 50620  0169A0  C057  F089         	movff	?i2___fladd+1,sin@f+1
 50621  0169A4  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 50622  0169A8  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 50623  0169AC                     i2l2700:
 50624  0169AC  C088  F030         	movff	sin@f,i2___flmul@b
 50625  0169B0  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50626  0169B4  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50627  0169B8  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50628  0169BC  C088  F034         	movff	sin@f,i2___flmul@a
 50629  0169C0  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 50630  0169C4  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 50631  0169C8  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 50632  0169CC  EC8D  F0AD         	call	i2___flmul	;wreg free
 50633  0169D0  C030  F094         	movff	?i2___flmul,sin@x2
 50634  0169D4  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 50635  0169D8  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 50636  0169DC  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 50637  0169E0  C094  F06C         	movff	sin@x2,eval_poly@x
 50638  0169E4  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 50639  0169E8  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 50640  0169EC  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 50641  0169F0  0EA5               	movlw	low sin@coeff_b
 50642  0169F2  0100               	movlb	0	; () banked
 50643  0169F4  6F70               	movwf	eval_poly@d& (0+255),b
 50644  0169F6  0ED2               	movlw	high sin@coeff_b
 50645  0169F8  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50646  0169FA  0E00               	movlw	0
 50647  0169FC  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50648  0169FE  0E03               	movlw	3
 50649  016A00  6F72               	movwf	eval_poly@n& (0+255),b
 50650  016A02  EC88  F0C8         	call	_eval_poly	;wreg free
 50651  016A06  C06C  F08C         	movff	?_eval_poly,sin@y
 50652  016A0A  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 50653  016A0E  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 50654  016A12  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 50655  016A16  C08C  F017         	movff	sin@y,i2___fldiv@a
 50656  016A1A  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 50657  016A1E  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 50658  016A22  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 50659  016A26  0E00               	movlw	0
 50660  016A28  0100               	movlb	0	; () banked
 50661  016A2A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50662  016A2C  0E04               	movlw	4
 50663  016A2E  6F72               	movwf	eval_poly@n& (0+255),b
 50664  016A30  0E7D               	movlw	low sin@coeff_a
 50665  016A32  6F70               	movwf	eval_poly@d& (0+255),b
 50666  016A34  0ED2               	movlw	high sin@coeff_a
 50667  016A36  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50668  016A38  C094  F06C         	movff	sin@x2,eval_poly@x
 50669  016A3C  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 50670  016A40  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 50671  016A44  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 50672  016A48  EC88  F0C8         	call	_eval_poly	;wreg free
 50673  016A4C  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 50674  016A50  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 50675  016A54  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 50676  016A58  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 50677  016A5C  EC94  F0B9         	call	i2___fldiv	;wreg free
 50678  016A60  C013  F090         	movff	?i2___fldiv,_sin$5405
 50679  016A64  C014  F091         	movff	?i2___fldiv+1,_sin$5405+1
 50680  016A68  C015  F092         	movff	?i2___fldiv+2,_sin$5405+2
 50681  016A6C  C016  F093         	movff	?i2___fldiv+3,_sin$5405+3
 50682  016A70  C088  F030         	movff	sin@f,i2___flmul@b
 50683  016A74  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50684  016A78  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50685  016A7C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50686  016A80  C090  F034         	movff	_sin$5405,i2___flmul@a
 50687  016A84  C091  F035         	movff	_sin$5405+1,i2___flmul@a+1
 50688  016A88  C092  F036         	movff	_sin$5405+2,i2___flmul@a+2
 50689  016A8C  C093  F037         	movff	_sin$5405+3,i2___flmul@a+3
 50690  016A90  EC8D  F0AD         	call	i2___flmul	;wreg free
 50691  016A94  C030  F088         	movff	?i2___flmul,sin@f
 50692  016A98  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50693  016A9C  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50694  016AA0  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50695  016AA4  0100               	movlb	0	; () banked
 50696  016AA6  5198               	movf	sin@sgn& (0+255),w,b
 50697  016AA8  B4D8               	btfsc	status,2,c
 50698  016AAA  D013               	goto	i2l2701
 50699                           
 50700                           ; BSR set to: 0
 50701  016AAC  C088  F02C         	movff	sin@f,i2___flneg@f1
 50702  016AB0  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50703  016AB4  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50704  016AB8  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50705  016ABC  EC64  F0D6         	call	i2___flneg	;wreg free
 50706  016AC0  C02C  F088         	movff	?i2___flneg,?_sin
 50707  016AC4  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 50708  016AC8  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 50709  016ACC  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 50710  016AD0  0012               	return	
 50711  016AD2                     i2l2701:
 50712                           
 50713                           ; BSR set to: 0
 50714  016AD2  C088  F088         	movff	sin@f,?_sin
 50715  016AD6  C089  F089         	movff	sin@f+1,?_sin+1
 50716  016ADA  C08A  F08A         	movff	sin@f+2,?_sin+2
 50717  016ADE  C08B  F08B         	movff	sin@f+3,?_sin+3
 50718  016AE2  0012               	return		;funcret
 50719  016AE4                     __end_of_sin:
 50720                           	opt stack 0
 50721                           tosu	equ	0xFFF
 50722                           tosh	equ	0xFFE
 50723                           tosl	equ	0xFFD
 50724                           pclatu	equ	0xFFB
 50725                           pclath	equ	0xFFA
 50726                           tblptru	equ	0xFF8
 50727                           tblptrh	equ	0xFF7
 50728                           tblptrl	equ	0xFF6
 50729                           tablat	equ	0xFF5
 50730                           prodh	equ	0xFF4
 50731                           prodl	equ	0xFF3
 50732                           intcon	equ	0xFF2
 50733                           indf0	equ	0xFEF
 50734                           postinc0	equ	0xFEE
 50735                           fsr0h	equ	0xFEA
 50736                           fsr0l	equ	0xFE9
 50737                           wreg	equ	0xFE8
 50738                           indf1	equ	0xFE7
 50739                           postdec1	equ	0xFE5
 50740                           plusw1	equ	0xFE3
 50741                           fsr1h	equ	0xFE2
 50742                           fsr1l	equ	0xFE1
 50743                           bsr	equ	0xFE0
 50744                           indf2	equ	0xFDF
 50745                           postinc2	equ	0xFDE
 50746                           postdec2	equ	0xFDD
 50747                           plusw2	equ	0xFDB
 50748                           fsr2h	equ	0xFDA
 50749                           fsr2l	equ	0xFD9
 50750                           status	equ	0xFD8
 50751                           
 50752 ;; *************** function i2___flsub *****************
 50753 ;; Defined at:
 50754 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 50755 ;; Parameters:    Size  Location     Type
 50756 ;;  b               4   32[BANK0 ] unsigned char 
 50757 ;;  a               4   36[BANK0 ] unsigned char 
 50758 ;; Auto vars:     Size  Location     Type
 50759 ;;		None
 50760 ;; Return value:  Size  Location     Type
 50761 ;;                  4   32[BANK0 ] unsigned char 
 50762 ;; Registers used:
 50763 ;;		wreg, status,2, status,0, cstack
 50764 ;; Tracked objects:
 50765 ;;		On entry : 0/0
 50766 ;;		On exit  : 0/0
 50767 ;;		Unchanged: 0/0
 50768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50769 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50772 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50773 ;;Total ram usage:        8 bytes
 50774 ;; Hardware stack levels used:    1
 50775 ;; Hardware stack levels required when called:    1
 50776 ;; This function calls:
 50777 ;;		i2___fladd
 50778 ;; This function is called by:
 50779 ;;		_sin
 50780 ;;		i2__doprnt
 50781 ;; This function uses a non-reentrant model
 50782 ;;
 50783                           
 50784                           	psect	text156
 50785  01A6DC                     __ptext156:
 50786                           	opt stack 0
 50787  01A6DC                     i2___flsub:
 50788                           	opt stack 13
 50789                           
 50790                           ;incstack = 0
 50791  01A6DC  0E00               	movlw	0
 50792  01A6DE  0100               	movlb	0	; () banked
 50793  01A6E0  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 50794  01A6E2  0E00               	movlw	0
 50795  01A6E4  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 50796  01A6E6  0E00               	movlw	0
 50797  01A6E8  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 50798  01A6EA  0E80               	movlw	128
 50799  01A6EC  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 50800                           
 50801                           ; BSR set to: 0
 50802  01A6EE  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 50803  01A6F2  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 50804  01A6F6  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 50805  01A6FA  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 50806  01A6FE  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 50807  01A702  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 50808  01A706  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 50809  01A70A  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 50810  01A70E  ECD4  F0B0         	call	i2___fladd	;wreg free
 50811  01A712  C056  F080         	movff	?i2___fladd,?i2___flsub
 50812  01A716  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 50813  01A71A  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 50814  01A71E  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 50815  01A722  0012               	return	
 50816  01A724                     __end_ofi2___flsub:
 50817                           	opt stack 0
 50818                           tosu	equ	0xFFF
 50819                           tosh	equ	0xFFE
 50820                           tosl	equ	0xFFD
 50821                           pclatu	equ	0xFFB
 50822                           pclath	equ	0xFFA
 50823                           tblptru	equ	0xFF8
 50824                           tblptrh	equ	0xFF7
 50825                           tblptrl	equ	0xFF6
 50826                           tablat	equ	0xFF5
 50827                           prodh	equ	0xFF4
 50828                           prodl	equ	0xFF3
 50829                           intcon	equ	0xFF2
 50830                           indf0	equ	0xFEF
 50831                           postinc0	equ	0xFEE
 50832                           fsr0h	equ	0xFEA
 50833                           fsr0l	equ	0xFE9
 50834                           wreg	equ	0xFE8
 50835                           indf1	equ	0xFE7
 50836                           postdec1	equ	0xFE5
 50837                           plusw1	equ	0xFE3
 50838                           fsr1h	equ	0xFE2
 50839                           fsr1l	equ	0xFE1
 50840                           bsr	equ	0xFE0
 50841                           indf2	equ	0xFDF
 50842                           postinc2	equ	0xFDE
 50843                           postdec2	equ	0xFDD
 50844                           plusw2	equ	0xFDB
 50845                           fsr2h	equ	0xFDA
 50846                           fsr2l	equ	0xFD9
 50847                           status	equ	0xFD8
 50848                           
 50849 ;; *************** function i2___flneg *****************
 50850 ;; Defined at:
 50851 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 50852 ;; Parameters:    Size  Location     Type
 50853 ;;  f1              4   43[COMRAM] unsigned char 
 50854 ;; Auto vars:     Size  Location     Type
 50855 ;;		None
 50856 ;; Return value:  Size  Location     Type
 50857 ;;                  4   43[COMRAM] unsigned char 
 50858 ;; Registers used:
 50859 ;;		wreg, status,2, status,0
 50860 ;; Tracked objects:
 50861 ;;		On entry : 0/0
 50862 ;;		On exit  : 0/0
 50863 ;;		Unchanged: 0/0
 50864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50868 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50869 ;;Total ram usage:        4 bytes
 50870 ;; Hardware stack levels used:    1
 50871 ;; This function calls:
 50872 ;;		Nothing
 50873 ;; This function is called by:
 50874 ;;		_peakToRMS
 50875 ;;		_ADCPostProcessingCallback
 50876 ;;		_acos
 50877 ;;		_asin
 50878 ;;		_atan
 50879 ;;		_fabs
 50880 ;;		_sin
 50881 ;;		i2__doprnt
 50882 ;; This function uses a non-reentrant model
 50883 ;;
 50884                           
 50885                           	psect	text157
 50886  01ACC8                     __ptext157:
 50887                           	opt stack 0
 50888  01ACC8                     i2___flneg:
 50889                           	opt stack 14
 50890                           
 50891                           ;incstack = 0
 50892  01ACC8  502C               	movf	i2___flneg@f1,w,c
 50893  01ACCA  102D               	iorwf	i2___flneg@f1+1,w,c
 50894  01ACCC  102E               	iorwf	i2___flneg@f1+2,w,c
 50895  01ACCE  102F               	iorwf	i2___flneg@f1+3,w,c
 50896  01ACD0  B4D8               	btfsc	status,2,c
 50897  01ACD2  D008               	goto	i2l2402
 50898  01ACD4  0E00               	movlw	0
 50899  01ACD6  1A2C               	xorwf	i2___flneg@f1,f,c
 50900  01ACD8  0E00               	movlw	0
 50901  01ACDA  1A2D               	xorwf	i2___flneg@f1+1,f,c
 50902  01ACDC  0E00               	movlw	0
 50903  01ACDE  1A2E               	xorwf	i2___flneg@f1+2,f,c
 50904  01ACE0  0E80               	movlw	128
 50905  01ACE2  1A2F               	xorwf	i2___flneg@f1+3,f,c
 50906  01ACE4                     i2l2402:
 50907  01ACE4  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 50908  01ACE8  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 50909  01ACEC  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 50910  01ACF0  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 50911  01ACF4  0012               	return	
 50912  01ACF6                     __end_ofi2___flneg:
 50913                           	opt stack 0
 50914                           tosu	equ	0xFFF
 50915                           tosh	equ	0xFFE
 50916                           tosl	equ	0xFFD
 50917                           pclatu	equ	0xFFB
 50918                           pclath	equ	0xFFA
 50919                           tblptru	equ	0xFF8
 50920                           tblptrh	equ	0xFF7
 50921                           tblptrl	equ	0xFF6
 50922                           tablat	equ	0xFF5
 50923                           prodh	equ	0xFF4
 50924                           prodl	equ	0xFF3
 50925                           intcon	equ	0xFF2
 50926                           indf0	equ	0xFEF
 50927                           postinc0	equ	0xFEE
 50928                           fsr0h	equ	0xFEA
 50929                           fsr0l	equ	0xFE9
 50930                           wreg	equ	0xFE8
 50931                           indf1	equ	0xFE7
 50932                           postdec1	equ	0xFE5
 50933                           plusw1	equ	0xFE3
 50934                           fsr1h	equ	0xFE2
 50935                           fsr1l	equ	0xFE1
 50936                           bsr	equ	0xFE0
 50937                           indf2	equ	0xFDF
 50938                           postinc2	equ	0xFDE
 50939                           postdec2	equ	0xFDD
 50940                           plusw2	equ	0xFDB
 50941                           fsr2h	equ	0xFDA
 50942                           fsr2l	equ	0xFD9
 50943                           status	equ	0xFD8
 50944                           
 50945 ;; *************** function i2___fldiv *****************
 50946 ;; Defined at:
 50947 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 50948 ;; Parameters:    Size  Location     Type
 50949 ;;  b               4   18[COMRAM] unsigned char 
 50950 ;;  a               4   22[COMRAM] unsigned char 
 50951 ;; Auto vars:     Size  Location     Type
 50952 ;;  __fldiv         4   37[COMRAM] unsigned long 
 50953 ;;  __fldiv         4   31[COMRAM] unsigned long 
 50954 ;;  __fldiv         2   35[COMRAM] int 
 50955 ;;  __fldiv         1   42[COMRAM] unsigned char 
 50956 ;;  __fldiv         1   41[COMRAM] unsigned char 
 50957 ;;  __fldiv         1   30[COMRAM] unsigned char 
 50958 ;; Return value:  Size  Location     Type
 50959 ;;                  4   18[COMRAM] unsigned char 
 50960 ;; Registers used:
 50961 ;;		wreg, status,2, status,0
 50962 ;; Tracked objects:
 50963 ;;		On entry : 0/0
 50964 ;;		On exit  : 0/0
 50965 ;;		Unchanged: 0/0
 50966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50967 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50968 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50970 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50971 ;;Total ram usage:       25 bytes
 50972 ;; Hardware stack levels used:    1
 50973 ;; This function calls:
 50974 ;;		Nothing
 50975 ;; This function is called by:
 50976 ;;		_peakToRMS
 50977 ;;		_currentMeasuredToPeak
 50978 ;;		_ADCPostProcessingCallback
 50979 ;;		_asin
 50980 ;;		_atan
 50981 ;;		_sin
 50982 ;; This function uses a non-reentrant model
 50983 ;;
 50984                           
 50985                           	psect	text158
 50986  017328                     __ptext158:
 50987                           	opt stack 0
 50988  017328                     i2___fldiv:
 50989                           	opt stack 15
 50990                           
 50991                           ;incstack = 0
 50992  017328  5016               	movf	i2___fldiv@b+3,w,c
 50993  01732A  0B80               	andlw	128
 50994  01732C  6E1F               	movwf	i2___fldiv@sign,c
 50995  01732E  5016               	movf	i2___fldiv@b+3,w,c
 50996  017330  2416               	addwf	i2___fldiv@b+3,w,c
 50997  017332  6E2A               	movwf	i2___fldiv@bexp,c
 50998  017334  BE15               	btfsc	i2___fldiv@b+2,7,c
 50999  017336  802A               	bsf	i2___fldiv@bexp,0,c
 51000  017338  502A               	movf	i2___fldiv@bexp,w,c
 51001  01733A  B4D8               	btfsc	status,2,c
 51002  01733C  D00D               	goto	i2l2763
 51003  01733E  282A               	incf	i2___fldiv@bexp,w,c
 51004  017340  A4D8               	btfss	status,2,c
 51005  017342  D008               	goto	i2l2764
 51006  017344  0E00               	movlw	0
 51007  017346  6E13               	movwf	i2___fldiv@b,c
 51008  017348  0E00               	movlw	0
 51009  01734A  6E14               	movwf	i2___fldiv@b+1,c
 51010  01734C  0E00               	movlw	0
 51011  01734E  6E15               	movwf	i2___fldiv@b+2,c
 51012  017350  0E00               	movlw	0
 51013  017352  6E16               	movwf	i2___fldiv@b+3,c
 51014  017354                     i2l2764:
 51015  017354  8E15               	bsf	i2___fldiv@b+2,7,c
 51016  017356  D006               	goto	L27
 51017  017358                     i2l2763:
 51018  017358  0E00               	movlw	0
 51019  01735A  6E13               	movwf	i2___fldiv@b,c
 51020  01735C  0E00               	movlw	0
 51021  01735E  6E14               	movwf	i2___fldiv@b+1,c
 51022  017360  0E00               	movlw	0
 51023  017362  6E15               	movwf	i2___fldiv@b+2,c
 51024  017364                     L27:
 51025  017364  0E00               	movlw	0
 51026  017366  6E16               	movwf	i2___fldiv@b+3,c
 51027  017368  501A               	movf	i2___fldiv@a+3,w,c
 51028  01736A  0B80               	andlw	128
 51029  01736C  1A1F               	xorwf	i2___fldiv@sign,f,c
 51030  01736E  501A               	movf	i2___fldiv@a+3,w,c
 51031  017370  241A               	addwf	i2___fldiv@a+3,w,c
 51032  017372  6E2B               	movwf	i2___fldiv@aexp,c
 51033  017374  BE19               	btfsc	i2___fldiv@a+2,7,c
 51034  017376  802B               	bsf	i2___fldiv@aexp,0,c
 51035  017378  502B               	movf	i2___fldiv@aexp,w,c
 51036  01737A  B4D8               	btfsc	status,2,c
 51037  01737C  D00D               	goto	i2l2767
 51038  01737E  282B               	incf	i2___fldiv@aexp,w,c
 51039  017380  A4D8               	btfss	status,2,c
 51040  017382  D008               	goto	i2l2768
 51041  017384  0E00               	movlw	0
 51042  017386  6E17               	movwf	i2___fldiv@a,c
 51043  017388  0E00               	movlw	0
 51044  01738A  6E18               	movwf	i2___fldiv@a+1,c
 51045  01738C  0E00               	movlw	0
 51046  01738E  6E19               	movwf	i2___fldiv@a+2,c
 51047  017390  0E00               	movlw	0
 51048  017392  6E1A               	movwf	i2___fldiv@a+3,c
 51049  017394                     i2l2768:
 51050  017394  8E19               	bsf	i2___fldiv@a+2,7,c
 51051  017396  D006               	goto	L28
 51052  017398                     i2l2767:
 51053  017398  0E00               	movlw	0
 51054  01739A  6E17               	movwf	i2___fldiv@a,c
 51055  01739C  0E00               	movlw	0
 51056  01739E  6E18               	movwf	i2___fldiv@a+1,c
 51057  0173A0  0E00               	movlw	0
 51058  0173A2  6E19               	movwf	i2___fldiv@a+2,c
 51059  0173A4                     L28:
 51060  0173A4  0E00               	movlw	0
 51061  0173A6  6E1A               	movwf	i2___fldiv@a+3,c
 51062  0173A8  5017               	movf	i2___fldiv@a,w,c
 51063  0173AA  1018               	iorwf	i2___fldiv@a+1,w,c
 51064  0173AC  1019               	iorwf	i2___fldiv@a+2,w,c
 51065  0173AE  101A               	iorwf	i2___fldiv@a+3,w,c
 51066  0173B0  A4D8               	btfss	status,2,c
 51067  0173B2  D015               	goto	i2l2770
 51068  0173B4  0E00               	movlw	0
 51069  0173B6  6E13               	movwf	i2___fldiv@b,c
 51070  0173B8  0E00               	movlw	0
 51071  0173BA  6E14               	movwf	i2___fldiv@b+1,c
 51072  0173BC  0E00               	movlw	0
 51073  0173BE  6E15               	movwf	i2___fldiv@b+2,c
 51074  0173C0  0E00               	movlw	0
 51075  0173C2  6E16               	movwf	i2___fldiv@b+3,c
 51076  0173C4  0E80               	movlw	128
 51077  0173C6  1215               	iorwf	i2___fldiv@b+2,f,c
 51078  0173C8  0E7F               	movlw	127
 51079  0173CA  1216               	iorwf	i2___fldiv@b+3,f,c
 51080  0173CC  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51081  0173D0  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51082  0173D4  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51083  0173D8  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51084  0173DC  0012               	return	
 51085  0173DE                     i2l2770:
 51086  0173DE  502A               	movf	i2___fldiv@bexp,w,c
 51087  0173E0  A4D8               	btfss	status,2,c
 51088  0173E2  D011               	goto	i2l2772
 51089  0173E4  0E00               	movlw	0
 51090  0173E6  6E13               	movwf	i2___fldiv@b,c
 51091  0173E8  0E00               	movlw	0
 51092  0173EA  6E14               	movwf	i2___fldiv@b+1,c
 51093  0173EC  0E00               	movlw	0
 51094  0173EE  6E15               	movwf	i2___fldiv@b+2,c
 51095  0173F0  0E00               	movlw	0
 51096  0173F2  6E16               	movwf	i2___fldiv@b+3,c
 51097  0173F4  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51098  0173F8  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51099  0173FC  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51100  017400  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51101  017404  0012               	return	
 51102  017406                     i2l2772:
 51103  017406  502B               	movf	i2___fldiv@aexp,w,c
 51104  017408  6E1B               	movwf	??i2___fldiv& (0+255),c
 51105  01740A  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 51106  01740C  1E1B               	comf	??i2___fldiv,f,c
 51107  01740E  1E1C               	comf	??i2___fldiv+1,f,c
 51108  017410  4A1B               	infsnz	??i2___fldiv,f,c
 51109  017412  2A1C               	incf	??i2___fldiv+1,f,c
 51110  017414  502A               	movf	i2___fldiv@bexp,w,c
 51111  017416  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 51112  017418  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 51113  01741A  501B               	movf	??i2___fldiv,w,c
 51114  01741C  261D               	addwf	??i2___fldiv+2,f,c
 51115  01741E  501C               	movf	??i2___fldiv+1,w,c
 51116  017420  221E               	addwfc	??i2___fldiv+3,f,c
 51117  017422  0E7F               	movlw	127
 51118  017424  241D               	addwf	??i2___fldiv+2,w,c
 51119  017426  6E24               	movwf	i2___fldiv@new_exp,c
 51120  017428  0E00               	movlw	0
 51121  01742A  201E               	addwfc	??i2___fldiv+3,w,c
 51122  01742C  6E25               	movwf	i2___fldiv@new_exp+1,c
 51123  01742E  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 51124  017432  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 51125  017436  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 51126  01743A  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 51127  01743E  0E00               	movlw	0
 51128  017440  6E13               	movwf	i2___fldiv@b,c
 51129  017442  0E00               	movlw	0
 51130  017444  6E14               	movwf	i2___fldiv@b+1,c
 51131  017446  0E00               	movlw	0
 51132  017448  6E15               	movwf	i2___fldiv@b+2,c
 51133  01744A  0E00               	movlw	0
 51134  01744C  6E16               	movwf	i2___fldiv@b+3,c
 51135  01744E  0E00               	movlw	0
 51136  017450  6E26               	movwf	i2___fldiv@grs,c
 51137  017452  0E00               	movlw	0
 51138  017454  6E27               	movwf	i2___fldiv@grs+1,c
 51139  017456  0E00               	movlw	0
 51140  017458  6E28               	movwf	i2___fldiv@grs+2,c
 51141  01745A  0E00               	movlw	0
 51142  01745C  6E29               	movwf	i2___fldiv@grs+3,c
 51143  01745E  0E00               	movlw	0
 51144  017460  6E2B               	movwf	i2___fldiv@aexp,c
 51145  017462  D028               	goto	i2l2773
 51146  017464  502B               	movf	i2___fldiv@aexp,w,c
 51147  017466  B4D8               	btfsc	status,2,c
 51148  017468  D011               	goto	i2l2775
 51149  01746A  90D8               	bcf	status,0,c
 51150  01746C  3620               	rlcf	i2___fldiv@rem,f,c
 51151  01746E  3621               	rlcf	i2___fldiv@rem+1,f,c
 51152  017470  3622               	rlcf	i2___fldiv@rem+2,f,c
 51153  017472  3623               	rlcf	i2___fldiv@rem+3,f,c
 51154  017474  90D8               	bcf	status,0,c
 51155  017476  3613               	rlcf	i2___fldiv@b,f,c
 51156  017478  3614               	rlcf	i2___fldiv@b+1,f,c
 51157  01747A  3615               	rlcf	i2___fldiv@b+2,f,c
 51158  01747C  3616               	rlcf	i2___fldiv@b+3,f,c
 51159  01747E  BE29               	btfsc	i2___fldiv@grs+3,7,c
 51160  017480  8013               	bsf	i2___fldiv@b,0,c
 51161  017482  90D8               	bcf	status,0,c
 51162  017484  3626               	rlcf	i2___fldiv@grs,f,c
 51163  017486  3627               	rlcf	i2___fldiv@grs+1,f,c
 51164  017488  3628               	rlcf	i2___fldiv@grs+2,f,c
 51165  01748A  3629               	rlcf	i2___fldiv@grs+3,f,c
 51166  01748C                     i2l2775:
 51167  01748C  5017               	movf	i2___fldiv@a,w,c
 51168  01748E  5C20               	subwf	i2___fldiv@rem,w,c
 51169  017490  5018               	movf	i2___fldiv@a+1,w,c
 51170  017492  5821               	subwfb	i2___fldiv@rem+1,w,c
 51171  017494  5019               	movf	i2___fldiv@a+2,w,c
 51172  017496  5822               	subwfb	i2___fldiv@rem+2,w,c
 51173  017498  501A               	movf	i2___fldiv@a+3,w,c
 51174  01749A  5823               	subwfb	i2___fldiv@rem+3,w,c
 51175  01749C  A0D8               	btfss	status,0,c
 51176  01749E  D009               	goto	i2l2777
 51177  0174A0  8C29               	bsf	i2___fldiv@grs+3,6,c
 51178  0174A2  5017               	movf	i2___fldiv@a,w,c
 51179  0174A4  5E20               	subwf	i2___fldiv@rem,f,c
 51180  0174A6  5018               	movf	i2___fldiv@a+1,w,c
 51181  0174A8  5A21               	subwfb	i2___fldiv@rem+1,f,c
 51182  0174AA  5019               	movf	i2___fldiv@a+2,w,c
 51183  0174AC  5A22               	subwfb	i2___fldiv@rem+2,f,c
 51184  0174AE  501A               	movf	i2___fldiv@a+3,w,c
 51185  0174B0  5A23               	subwfb	i2___fldiv@rem+3,f,c
 51186  0174B2                     i2l2777:
 51187  0174B2  2A2B               	incf	i2___fldiv@aexp,f,c
 51188  0174B4                     i2l2773:
 51189  0174B4  0E19               	movlw	25
 51190  0174B6  642B               	cpfsgt	i2___fldiv@aexp,c
 51191  0174B8  D7D5               	goto	i2l2774
 51192  0174BA  5020               	movf	i2___fldiv@rem,w,c
 51193  0174BC  1021               	iorwf	i2___fldiv@rem+1,w,c
 51194  0174BE  1022               	iorwf	i2___fldiv@rem+2,w,c
 51195  0174C0  1023               	iorwf	i2___fldiv@rem+3,w,c
 51196  0174C2  B4D8               	btfsc	status,2,c
 51197  0174C4  D011               	goto	i2l2780
 51198  0174C6  8026               	bsf	i2___fldiv@grs,0,c
 51199  0174C8  D00F               	goto	i2l2780
 51200  0174CA  90D8               	bcf	status,0,c
 51201  0174CC  3613               	rlcf	i2___fldiv@b,f,c
 51202  0174CE  3614               	rlcf	i2___fldiv@b+1,f,c
 51203  0174D0  3615               	rlcf	i2___fldiv@b+2,f,c
 51204  0174D2  3616               	rlcf	i2___fldiv@b+3,f,c
 51205  0174D4  BE29               	btfsc	i2___fldiv@grs+3,7,c
 51206  0174D6  8013               	bsf	i2___fldiv@b,0,c
 51207  0174D8  90D8               	bcf	status,0,c
 51208  0174DA  3626               	rlcf	i2___fldiv@grs,f,c
 51209  0174DC  3627               	rlcf	i2___fldiv@grs+1,f,c
 51210  0174DE  3628               	rlcf	i2___fldiv@grs+2,f,c
 51211  0174E0  3629               	rlcf	i2___fldiv@grs+3,f,c
 51212  0174E2  0624               	decf	i2___fldiv@new_exp,f,c
 51213  0174E4  A0D8               	btfss	status,0,c
 51214  0174E6  0625               	decf	i2___fldiv@new_exp+1,f,c
 51215  0174E8                     i2l2780:
 51216  0174E8  AE15               	btfss	i2___fldiv@b+2,7,c
 51217  0174EA  D7EF               	goto	i2l2781
 51218  0174EC  0E00               	movlw	0
 51219  0174EE  6E2B               	movwf	i2___fldiv@aexp,c
 51220  0174F0  AE29               	btfss	i2___fldiv@grs+3,7,c
 51221  0174F2  D016               	goto	i2l2787
 51222  0174F4  0EFF               	movlw	255
 51223  0174F6  1426               	andwf	i2___fldiv@grs,w,c
 51224  0174F8  6E1B               	movwf	??i2___fldiv& (0+255),c
 51225  0174FA  0EFF               	movlw	255
 51226  0174FC  1427               	andwf	i2___fldiv@grs+1,w,c
 51227  0174FE  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 51228  017500  0EFF               	movlw	255
 51229  017502  1428               	andwf	i2___fldiv@grs+2,w,c
 51230  017504  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 51231  017506  0E7F               	movlw	127
 51232  017508  1429               	andwf	i2___fldiv@grs+3,w,c
 51233  01750A  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 51234  01750C  501B               	movf	??i2___fldiv,w,c
 51235  01750E  101C               	iorwf	??i2___fldiv+1,w,c
 51236  017510  101D               	iorwf	??i2___fldiv+2,w,c
 51237  017512  101E               	iorwf	??i2___fldiv+3,w,c
 51238  017514  A4D8               	btfss	status,2,c
 51239  017516  D002               	goto	i2u1040_40
 51240  017518  A013               	btfss	i2___fldiv@b,0,c
 51241  01751A  D002               	goto	i2l2787
 51242  01751C                     i2u1040_40:
 51243  01751C  0E01               	movlw	1
 51244  01751E  6E2B               	movwf	i2___fldiv@aexp,c
 51245  017520                     i2l2787:
 51246  017520  502B               	movf	i2___fldiv@aexp,w,c
 51247  017522  B4D8               	btfsc	status,2,c
 51248  017524  D01F               	goto	i2l2789
 51249  017526  0E01               	movlw	1
 51250  017528  2613               	addwf	i2___fldiv@b,f,c
 51251  01752A  0E00               	movlw	0
 51252  01752C  2214               	addwfc	i2___fldiv@b+1,f,c
 51253  01752E  2215               	addwfc	i2___fldiv@b+2,f,c
 51254  017530  2216               	addwfc	i2___fldiv@b+3,f,c
 51255  017532  A016               	btfss	i2___fldiv@b+3,0,c
 51256  017534  D017               	goto	i2l2789
 51257  017536  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 51258  01753A  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 51259  01753E  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 51260  017542  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 51261  017546  341E               	rlcf	??i2___fldiv+3,w,c
 51262  017548  321E               	rrcf	??i2___fldiv+3,f,c
 51263  01754A  321D               	rrcf	??i2___fldiv+2,f,c
 51264  01754C  321C               	rrcf	??i2___fldiv+1,f,c
 51265  01754E  321B               	rrcf	??i2___fldiv,f,c
 51266  017550  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 51267  017554  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 51268  017558  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 51269  01755C  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 51270  017560  4A24               	infsnz	i2___fldiv@new_exp,f,c
 51271  017562  2A25               	incf	i2___fldiv@new_exp+1,f,c
 51272  017564                     i2l2789:
 51273  017564  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51274  017566  D010               	goto	i2l2790
 51275  017568  5025               	movf	i2___fldiv@new_exp+1,w,c
 51276  01756A  E103               	bnz	i2u1043_40
 51277  01756C  2824               	incf	i2___fldiv@new_exp,w,c
 51278  01756E  A0D8               	btfss	status,0,c
 51279  017570  D00B               	goto	i2l2790
 51280  017572                     i2u1043_40:
 51281  017572  0E00               	movlw	0
 51282  017574  6E25               	movwf	i2___fldiv@new_exp+1,c
 51283  017576  6824               	setf	i2___fldiv@new_exp,c
 51284  017578  0E00               	movlw	0
 51285  01757A  6E13               	movwf	i2___fldiv@b,c
 51286  01757C  0E00               	movlw	0
 51287  01757E  6E14               	movwf	i2___fldiv@b+1,c
 51288  017580  0E00               	movlw	0
 51289  017582  6E15               	movwf	i2___fldiv@b+2,c
 51290  017584  0E00               	movlw	0
 51291  017586  6E16               	movwf	i2___fldiv@b+3,c
 51292  017588                     i2l2790:
 51293  017588  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51294  01758A  D005               	goto	i2u1044_40
 51295  01758C  5025               	movf	i2___fldiv@new_exp+1,w,c
 51296  01758E  E111               	bnz	i2l9730
 51297  017590  0424               	decf	i2___fldiv@new_exp,w,c
 51298  017592  B0D8               	btfsc	status,0,c
 51299  017594  D00E               	goto	i2l2791
 51300  017596                     i2u1044_40:
 51301  017596  0E00               	movlw	0
 51302  017598  6E25               	movwf	i2___fldiv@new_exp+1,c
 51303  01759A  0E00               	movlw	0
 51304  01759C  6E24               	movwf	i2___fldiv@new_exp,c
 51305  01759E  0E00               	movlw	0
 51306  0175A0  6E13               	movwf	i2___fldiv@b,c
 51307  0175A2  0E00               	movlw	0
 51308  0175A4  6E14               	movwf	i2___fldiv@b+1,c
 51309  0175A6  0E00               	movlw	0
 51310  0175A8  6E15               	movwf	i2___fldiv@b+2,c
 51311  0175AA  0E00               	movlw	0
 51312  0175AC  6E16               	movwf	i2___fldiv@b+3,c
 51313  0175AE  0E00               	movlw	0
 51314  0175B0  6E1F               	movwf	i2___fldiv@sign,c
 51315  0175B2                     i2l2791:
 51316  0175B2                     i2l9730:
 51317  0175B2  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 51318  0175B6  A02A               	btfss	i2___fldiv@bexp,0,c
 51319  0175B8  D002               	goto	i2l2792
 51320  0175BA  8E15               	bsf	i2___fldiv@b+2,7,c
 51321  0175BC  D001               	goto	i2l2793
 51322  0175BE                     i2l2792:
 51323  0175BE  9E15               	bcf	i2___fldiv@b+2,7,c
 51324  0175C0                     i2l2793:
 51325  0175C0  90D8               	bcf	status,0,c
 51326  0175C2  302A               	rrcf	i2___fldiv@bexp,w,c
 51327  0175C4  6E16               	movwf	i2___fldiv@b+3,c
 51328  0175C6  501F               	movf	i2___fldiv@sign,w,c
 51329  0175C8  1216               	iorwf	i2___fldiv@b+3,f,c
 51330  0175CA  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51331  0175CE  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51332  0175D2  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51333  0175D6  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51334  0175DA  0012               	return	
 51335  0175DC                     __end_ofi2___fldiv:
 51336                           	opt stack 0
 51337                           tosu	equ	0xFFF
 51338                           tosh	equ	0xFFE
 51339                           tosl	equ	0xFFD
 51340                           pclatu	equ	0xFFB
 51341                           pclath	equ	0xFFA
 51342                           tblptru	equ	0xFF8
 51343                           tblptrh	equ	0xFF7
 51344                           tblptrl	equ	0xFF6
 51345                           tablat	equ	0xFF5
 51346                           prodh	equ	0xFF4
 51347                           prodl	equ	0xFF3
 51348                           intcon	equ	0xFF2
 51349                           indf0	equ	0xFEF
 51350                           postinc0	equ	0xFEE
 51351                           fsr0h	equ	0xFEA
 51352                           fsr0l	equ	0xFE9
 51353                           wreg	equ	0xFE8
 51354                           indf1	equ	0xFE7
 51355                           postdec1	equ	0xFE5
 51356                           plusw1	equ	0xFE3
 51357                           fsr1h	equ	0xFE2
 51358                           fsr1l	equ	0xFE1
 51359                           bsr	equ	0xFE0
 51360                           indf2	equ	0xFDF
 51361                           postinc2	equ	0xFDE
 51362                           postdec2	equ	0xFDD
 51363                           plusw2	equ	0xFDB
 51364                           fsr2h	equ	0xFDA
 51365                           fsr2l	equ	0xFD9
 51366                           status	equ	0xFD8
 51367                           
 51368 ;; *************** function _floor *****************
 51369 ;; Defined at:
 51370 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 51371 ;; Parameters:    Size  Location     Type
 51372 ;;  x               4   22[BANK0 ] unsigned char 
 51373 ;; Auto vars:     Size  Location     Type
 51374 ;;  i               4   26[BANK0 ] unsigned char 
 51375 ;;  expon           2   30[BANK0 ] int 
 51376 ;; Return value:  Size  Location     Type
 51377 ;;                  4   22[BANK0 ] int 
 51378 ;; Registers used:
 51379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51380 ;; Tracked objects:
 51381 ;;		On entry : 0/0
 51382 ;;		On exit  : 0/0
 51383 ;;		Unchanged: 0/0
 51384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51386 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51388 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51389 ;;Total ram usage:       10 bytes
 51390 ;; Hardware stack levels used:    1
 51391 ;; Hardware stack levels required when called:    1
 51392 ;; This function calls:
 51393 ;;		_frexp
 51394 ;;		i2___fladd
 51395 ;;		i2___flge
 51396 ;;		i2___fltol
 51397 ;;		i2___xxtofl
 51398 ;; This function is called by:
 51399 ;;		_sin
 51400 ;; This function uses a non-reentrant model
 51401 ;;
 51402                           
 51403                           	psect	text159
 51404  018EF6                     __ptext159:
 51405                           	opt stack 0
 51406  018EF6                     _floor:
 51407                           	opt stack 12
 51408                           
 51409                           ;incstack = 0
 51410  018EF6  C076  F001         	movff	floor@x,frexp@value
 51411  018EFA  C077  F002         	movff	floor@x+1,frexp@value+1
 51412  018EFE  C078  F003         	movff	floor@x+2,frexp@value+2
 51413  018F02  C079  F004         	movff	floor@x+3,frexp@value+3
 51414  018F06  0E7E               	movlw	low floor@expon
 51415  018F08  6E05               	movwf	frexp@eptr,c
 51416  018F0A  0E00               	movlw	high floor@expon
 51417  018F0C  6E06               	movwf	frexp@eptr+1,c
 51418  018F0E  ECB2  F0CE         	call	_frexp	;wreg free
 51419  018F12  0100               	movlb	0	; () banked
 51420  018F14  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 51421  018F16  D014               	goto	i2l2921
 51422                           
 51423                           ; BSR set to: 0
 51424  018F18  AF79               	btfss	(floor@x+3)& (0+255),7,b
 51425  018F1A  D009               	goto	i2l2922
 51426                           
 51427                           ; BSR set to: 0
 51428  018F1C  0E00               	movlw	0
 51429  018F1E  6F76               	movwf	?_floor& (0+255),b
 51430  018F20  0E00               	movlw	0
 51431  018F22  6F77               	movwf	(?_floor+1)& (0+255),b
 51432  018F24  0E80               	movlw	128
 51433  018F26  6F78               	movwf	(?_floor+2)& (0+255),b
 51434  018F28  0EBF               	movlw	191
 51435  018F2A  6F79               	movwf	(?_floor+3)& (0+255),b
 51436                           
 51437                           ; BSR set to: 0
 51438  018F2C  0012               	return	
 51439  018F2E                     i2l2922:
 51440                           
 51441                           ; BSR set to: 0
 51442                           
 51443                           ; BSR set to: 0
 51444  018F2E  0E00               	movlw	0
 51445  018F30  6F76               	movwf	?_floor& (0+255),b
 51446  018F32  0E00               	movlw	0
 51447  018F34  6F77               	movwf	(?_floor+1)& (0+255),b
 51448  018F36  0E00               	movlw	0
 51449  018F38  6F78               	movwf	(?_floor+2)& (0+255),b
 51450  018F3A  0E00               	movlw	0
 51451  018F3C  6F79               	movwf	(?_floor+3)& (0+255),b
 51452                           
 51453                           ; BSR set to: 0
 51454  018F3E  0012               	return	
 51455  018F40                     i2l2921:
 51456                           
 51457                           ; BSR set to: 0
 51458                           
 51459                           ; BSR set to: 0
 51460  018F40  517F               	movf	(floor@expon+1)& (0+255),w,b
 51461  018F42  E104               	bnz	i2u1993_40
 51462  018F44  0E1D               	movlw	29
 51463  018F46  5D7E               	subwf	floor@expon& (0+255),w,b
 51464  018F48  A0D8               	btfss	status,0,c
 51465  018F4A  D009               	goto	i2l2924
 51466  018F4C                     i2u1993_40:
 51467                           
 51468                           ; BSR set to: 0
 51469  018F4C  C076  F076         	movff	floor@x,?_floor
 51470  018F50  C077  F077         	movff	floor@x+1,?_floor+1
 51471  018F54  C078  F078         	movff	floor@x+2,?_floor+2
 51472  018F58  C079  F079         	movff	floor@x+3,?_floor+3
 51473  018F5C  0012               	return	
 51474  018F5E                     i2l2924:
 51475                           
 51476                           ; BSR set to: 0
 51477                           
 51478                           ; BSR set to: 0
 51479  018F5E  C076  F06C         	movff	floor@x,i2___fltol@f1
 51480  018F62  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 51481  018F66  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 51482  018F6A  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 51483  018F6E  EC77  F0C9         	call	i2___fltol	;wreg free
 51484  018F72  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 51485  018F76  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 51486  018F7A  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 51487  018F7E  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 51488  018F82  0E01               	movlw	1
 51489  018F84  EC8E  F0C1         	call	i2___xxtofl
 51490  018F88  C005  F07A         	movff	?i2___xxtofl,floor@i
 51491  018F8C  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 51492  018F90  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 51493  018F94  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 51494  018F98  C076  F034         	movff	floor@x,i2___flge@ff1
 51495  018F9C  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 51496  018FA0  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 51497  018FA4  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 51498  018FA8  C07A  F038         	movff	floor@i,i2___flge@ff2
 51499  018FAC  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 51500  018FB0  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 51501  018FB4  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 51502  018FB8  ECEB  F0C6         	call	i2___flge	;wreg free
 51503  018FBC  B0D8               	btfsc	status,0,c
 51504  018FBE  D01B               	goto	i2l2925
 51505  018FC0  C07A  F056         	movff	floor@i,i2___fladd@b
 51506  018FC4  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 51507  018FC8  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 51508  018FCC  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 51509  018FD0  0E00               	movlw	0
 51510  018FD2  6E5A               	movwf	i2___fladd@a,c
 51511  018FD4  0E00               	movlw	0
 51512  018FD6  6E5B               	movwf	i2___fladd@a+1,c
 51513  018FD8  0E80               	movlw	128
 51514  018FDA  6E5C               	movwf	i2___fladd@a+2,c
 51515  018FDC  0EBF               	movlw	191
 51516  018FDE  6E5D               	movwf	i2___fladd@a+3,c
 51517  018FE0  ECD4  F0B0         	call	i2___fladd	;wreg free
 51518  018FE4  C056  F076         	movff	?i2___fladd,?_floor
 51519  018FE8  C057  F077         	movff	?i2___fladd+1,?_floor+1
 51520  018FEC  C058  F078         	movff	?i2___fladd+2,?_floor+2
 51521  018FF0  C059  F079         	movff	?i2___fladd+3,?_floor+3
 51522  018FF4  0012               	return	
 51523  018FF6                     i2l2925:
 51524  018FF6  C07A  F076         	movff	floor@i,?_floor
 51525  018FFA  C07B  F077         	movff	floor@i+1,?_floor+1
 51526  018FFE  C07C  F078         	movff	floor@i+2,?_floor+2
 51527  019002  C07D  F079         	movff	floor@i+3,?_floor+3
 51528  019006  0012               	return		;funcret
 51529  019008                     __end_of_floor:
 51530                           	opt stack 0
 51531                           tosu	equ	0xFFF
 51532                           tosh	equ	0xFFE
 51533                           tosl	equ	0xFFD
 51534                           pclatu	equ	0xFFB
 51535                           pclath	equ	0xFFA
 51536                           tblptru	equ	0xFF8
 51537                           tblptrh	equ	0xFF7
 51538                           tblptrl	equ	0xFF6
 51539                           tablat	equ	0xFF5
 51540                           prodh	equ	0xFF4
 51541                           prodl	equ	0xFF3
 51542                           intcon	equ	0xFF2
 51543                           indf0	equ	0xFEF
 51544                           postinc0	equ	0xFEE
 51545                           fsr0h	equ	0xFEA
 51546                           fsr0l	equ	0xFE9
 51547                           wreg	equ	0xFE8
 51548                           indf1	equ	0xFE7
 51549                           postdec1	equ	0xFE5
 51550                           plusw1	equ	0xFE3
 51551                           fsr1h	equ	0xFE2
 51552                           fsr1l	equ	0xFE1
 51553                           bsr	equ	0xFE0
 51554                           indf2	equ	0xFDF
 51555                           postinc2	equ	0xFDE
 51556                           postdec2	equ	0xFDD
 51557                           plusw2	equ	0xFDB
 51558                           fsr2h	equ	0xFDA
 51559                           fsr2l	equ	0xFD9
 51560                           status	equ	0xFD8
 51561                           
 51562 ;; *************** function i2___xxtofl *****************
 51563 ;; Defined at:
 51564 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 51565 ;; Parameters:    Size  Location     Type
 51566 ;;  sign            1    wreg     unsigned char 
 51567 ;;  val             4    4[COMRAM] long 
 51568 ;; Auto vars:     Size  Location     Type
 51569 ;;  sign            1   12[COMRAM] unsigned char 
 51570 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 51571 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 51572 ;; Return value:  Size  Location     Type
 51573 ;;                  4    4[COMRAM] unsigned char 
 51574 ;; Registers used:
 51575 ;;		wreg, status,2, status,0
 51576 ;; Tracked objects:
 51577 ;;		On entry : 0/0
 51578 ;;		On exit  : 0/0
 51579 ;;		Unchanged: 0/0
 51580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51582 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51583 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51584 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51585 ;;Total ram usage:       14 bytes
 51586 ;; Hardware stack levels used:    1
 51587 ;; This function calls:
 51588 ;;		Nothing
 51589 ;; This function is called by:
 51590 ;;		_ADCPostProcessingCallback
 51591 ;;		_floor
 51592 ;;		i2__doprnt
 51593 ;; This function uses a non-reentrant model
 51594 ;;
 51595                           
 51596                           	psect	text160
 51597  01831C                     __ptext160:
 51598                           	opt stack 0
 51599  01831C                     i2___xxtofl:
 51600                           	opt stack 14
 51601                           
 51602                           ;incstack = 0
 51603                           ;i2___xxtofl@sign stored from wreg
 51604  01831C  6E0D               	movwf	i2___xxtofl@sign,c
 51605  01831E  500D               	movf	i2___xxtofl@sign,w,c
 51606  018320  A4D8               	btfss	status,2,c
 51607  018322  AE08               	btfss	i2___xxtofl@val+3,7,c
 51608  018324  D01A               	goto	i2l2900
 51609  018326  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 51610  01832A  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 51611  01832E  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 51612  018332  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 51613  018336  1E09               	comf	??i2___xxtofl,f,c
 51614  018338  1E0A               	comf	??i2___xxtofl+1,f,c
 51615  01833A  1E0B               	comf	??i2___xxtofl+2,f,c
 51616  01833C  1E0C               	comf	??i2___xxtofl+3,f,c
 51617  01833E  2A09               	incf	??i2___xxtofl,f,c
 51618  018340  0E00               	movlw	0
 51619  018342  220A               	addwfc	??i2___xxtofl+1,f,c
 51620  018344  220B               	addwfc	??i2___xxtofl+2,f,c
 51621  018346  220C               	addwfc	??i2___xxtofl+3,f,c
 51622  018348  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 51623  01834C  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 51624  018350  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 51625  018354  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 51626  018358  D008               	goto	i2l2901
 51627  01835A                     i2l2900:
 51628  01835A  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 51629  01835E  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 51630  018362  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 51631  018366  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 51632  01836A                     i2l2901:
 51633  01836A  5005               	movf	i2___xxtofl@val,w,c
 51634  01836C  1006               	iorwf	i2___xxtofl@val+1,w,c
 51635  01836E  1007               	iorwf	i2___xxtofl@val+2,w,c
 51636  018370  1008               	iorwf	i2___xxtofl@val+3,w,c
 51637  018372  A4D8               	btfss	status,2,c
 51638  018374  D009               	goto	i2l2902
 51639  018376  0E00               	movlw	0
 51640  018378  6E05               	movwf	?i2___xxtofl,c
 51641  01837A  0E00               	movlw	0
 51642  01837C  6E06               	movwf	?i2___xxtofl+1,c
 51643  01837E  0E00               	movlw	0
 51644  018380  6E07               	movwf	?i2___xxtofl+2,c
 51645  018382  0E00               	movlw	0
 51646  018384  6E08               	movwf	?i2___xxtofl+3,c
 51647  018386  0012               	return	
 51648  018388                     i2l2902:
 51649  018388  0E96               	movlw	150
 51650  01838A  6E0E               	movwf	i2___xxtofl@exp,c
 51651  01838C  D006               	goto	i2l2904
 51652  01838E  2A0E               	incf	i2___xxtofl@exp,f,c
 51653  018390  90D8               	bcf	status,0,c
 51654  018392  3212               	rrcf	i2___xxtofl@arg+3,f,c
 51655  018394  3211               	rrcf	i2___xxtofl@arg+2,f,c
 51656  018396  3210               	rrcf	i2___xxtofl@arg+1,f,c
 51657  018398  320F               	rrcf	i2___xxtofl@arg,f,c
 51658  01839A                     i2l2904:
 51659  01839A  0E00               	movlw	0
 51660  01839C  140F               	andwf	i2___xxtofl@arg,w,c
 51661  01839E  6E09               	movwf	??i2___xxtofl& (0+255),c
 51662  0183A0  0E00               	movlw	0
 51663  0183A2  1410               	andwf	i2___xxtofl@arg+1,w,c
 51664  0183A4  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 51665  0183A6  0E00               	movlw	0
 51666  0183A8  1411               	andwf	i2___xxtofl@arg+2,w,c
 51667  0183AA  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 51668  0183AC  0EFE               	movlw	254
 51669  0183AE  1412               	andwf	i2___xxtofl@arg+3,w,c
 51670  0183B0  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 51671  0183B2  5009               	movf	??i2___xxtofl,w,c
 51672  0183B4  100A               	iorwf	??i2___xxtofl+1,w,c
 51673  0183B6  100B               	iorwf	??i2___xxtofl+2,w,c
 51674  0183B8  100C               	iorwf	??i2___xxtofl+3,w,c
 51675  0183BA  B4D8               	btfsc	status,2,c
 51676  0183BC  D00D               	goto	i2l2907
 51677  0183BE  D7E7               	goto	i2l2905
 51678  0183C0  2A0E               	incf	i2___xxtofl@exp,f,c
 51679  0183C2  0E01               	movlw	1
 51680  0183C4  260F               	addwf	i2___xxtofl@arg,f,c
 51681  0183C6  0E00               	movlw	0
 51682  0183C8  2210               	addwfc	i2___xxtofl@arg+1,f,c
 51683  0183CA  2211               	addwfc	i2___xxtofl@arg+2,f,c
 51684  0183CC  2212               	addwfc	i2___xxtofl@arg+3,f,c
 51685  0183CE  90D8               	bcf	status,0,c
 51686  0183D0  3212               	rrcf	i2___xxtofl@arg+3,f,c
 51687  0183D2  3211               	rrcf	i2___xxtofl@arg+2,f,c
 51688  0183D4  3210               	rrcf	i2___xxtofl@arg+1,f,c
 51689  0183D6  320F               	rrcf	i2___xxtofl@arg,f,c
 51690  0183D8                     i2l2907:
 51691  0183D8  0E00               	movlw	0
 51692  0183DA  140F               	andwf	i2___xxtofl@arg,w,c
 51693  0183DC  6E09               	movwf	??i2___xxtofl& (0+255),c
 51694  0183DE  0E00               	movlw	0
 51695  0183E0  1410               	andwf	i2___xxtofl@arg+1,w,c
 51696  0183E2  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 51697  0183E4  0E00               	movlw	0
 51698  0183E6  1411               	andwf	i2___xxtofl@arg+2,w,c
 51699  0183E8  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 51700  0183EA  0EFF               	movlw	255
 51701  0183EC  1412               	andwf	i2___xxtofl@arg+3,w,c
 51702  0183EE  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 51703  0183F0  5009               	movf	??i2___xxtofl,w,c
 51704  0183F2  100A               	iorwf	??i2___xxtofl+1,w,c
 51705  0183F4  100B               	iorwf	??i2___xxtofl+2,w,c
 51706  0183F6  100C               	iorwf	??i2___xxtofl+3,w,c
 51707  0183F8  B4D8               	btfsc	status,2,c
 51708  0183FA  D007               	goto	i2l2910
 51709  0183FC  D7E1               	goto	i2l2908
 51710  0183FE  060E               	decf	i2___xxtofl@exp,f,c
 51711  018400  90D8               	bcf	status,0,c
 51712  018402  360F               	rlcf	i2___xxtofl@arg,f,c
 51713  018404  3610               	rlcf	i2___xxtofl@arg+1,f,c
 51714  018406  3611               	rlcf	i2___xxtofl@arg+2,f,c
 51715  018408  3612               	rlcf	i2___xxtofl@arg+3,f,c
 51716  01840A                     i2l2910:
 51717  01840A  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 51718  01840C  D003               	goto	i2u1978_40
 51719  01840E  0E02               	movlw	2
 51720  018410  600E               	cpfslt	i2___xxtofl@exp,c
 51721  018412  D7F5               	goto	i2l2911
 51722  018414                     i2u1978_40:
 51723  018414  B00E               	btfsc	i2___xxtofl@exp,0,c
 51724  018416  D008               	goto	i2l2915
 51725  018418  0EFF               	movlw	255
 51726  01841A  160F               	andwf	i2___xxtofl@arg,f,c
 51727  01841C  0EFF               	movlw	255
 51728  01841E  1610               	andwf	i2___xxtofl@arg+1,f,c
 51729  018420  0E7F               	movlw	127
 51730  018422  1611               	andwf	i2___xxtofl@arg+2,f,c
 51731  018424  0EFF               	movlw	255
 51732  018426  1612               	andwf	i2___xxtofl@arg+3,f,c
 51733  018428                     i2l2915:
 51734  018428  90D8               	bcf	status,0,c
 51735  01842A  320E               	rrcf	i2___xxtofl@exp,f,c
 51736  01842C  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 51737  018430  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 51738  018432  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 51739  018434  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 51740  018436  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 51741  01843A  6A0B               	clrf	??i2___xxtofl+2,c
 51742  01843C  6A0A               	clrf	??i2___xxtofl+1,c
 51743  01843E  6A09               	clrf	??i2___xxtofl,c
 51744  018440  5009               	movf	??i2___xxtofl,w,c
 51745  018442  120F               	iorwf	i2___xxtofl@arg,f,c
 51746  018444  500A               	movf	??i2___xxtofl+1,w,c
 51747  018446  1210               	iorwf	i2___xxtofl@arg+1,f,c
 51748  018448  500B               	movf	??i2___xxtofl+2,w,c
 51749  01844A  1211               	iorwf	i2___xxtofl@arg+2,f,c
 51750  01844C  500C               	movf	??i2___xxtofl+3,w,c
 51751  01844E  1212               	iorwf	i2___xxtofl@arg+3,f,c
 51752  018450  500D               	movf	i2___xxtofl@sign,w,c
 51753  018452  A4D8               	btfss	status,2,c
 51754  018454  AE08               	btfss	i2___xxtofl@val+3,7,c
 51755  018456  D001               	goto	i2l2916
 51756  018458  8E12               	bsf	i2___xxtofl@arg+3,7,c
 51757  01845A                     i2l2916:
 51758  01845A  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 51759  01845E  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 51760  018462  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 51761  018466  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 51762  01846A  0012               	return	
 51763  01846C                     __end_ofi2___xxtofl:
 51764                           	opt stack 0
 51765                           tosu	equ	0xFFF
 51766                           tosh	equ	0xFFE
 51767                           tosl	equ	0xFFD
 51768                           pclatu	equ	0xFFB
 51769                           pclath	equ	0xFFA
 51770                           tblptru	equ	0xFF8
 51771                           tblptrh	equ	0xFF7
 51772                           tblptrl	equ	0xFF6
 51773                           tablat	equ	0xFF5
 51774                           prodh	equ	0xFF4
 51775                           prodl	equ	0xFF3
 51776                           intcon	equ	0xFF2
 51777                           indf0	equ	0xFEF
 51778                           postinc0	equ	0xFEE
 51779                           fsr0h	equ	0xFEA
 51780                           fsr0l	equ	0xFE9
 51781                           wreg	equ	0xFE8
 51782                           indf1	equ	0xFE7
 51783                           postdec1	equ	0xFE5
 51784                           plusw1	equ	0xFE3
 51785                           fsr1h	equ	0xFE2
 51786                           fsr1l	equ	0xFE1
 51787                           bsr	equ	0xFE0
 51788                           indf2	equ	0xFDF
 51789                           postinc2	equ	0xFDE
 51790                           postdec2	equ	0xFDD
 51791                           plusw2	equ	0xFDB
 51792                           fsr2h	equ	0xFDA
 51793                           fsr2l	equ	0xFD9
 51794                           status	equ	0xFD8
 51795                           
 51796 ;; *************** function i2___fltol *****************
 51797 ;; Defined at:
 51798 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 51799 ;; Parameters:    Size  Location     Type
 51800 ;;  f1              4   12[BANK0 ] unsigned char 
 51801 ;; Auto vars:     Size  Location     Type
 51802 ;;  __fltol         1   21[BANK0 ] unsigned char 
 51803 ;;  __fltol         1   20[BANK0 ] unsigned char 
 51804 ;; Return value:  Size  Location     Type
 51805 ;;                  4   12[BANK0 ] long 
 51806 ;; Registers used:
 51807 ;;		wreg, status,2, status,0
 51808 ;; Tracked objects:
 51809 ;;		On entry : 0/0
 51810 ;;		On exit  : 0/0
 51811 ;;		Unchanged: 0/0
 51812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51816 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51817 ;;Total ram usage:       10 bytes
 51818 ;; Hardware stack levels used:    1
 51819 ;; This function calls:
 51820 ;;		Nothing
 51821 ;; This function is called by:
 51822 ;;		_ADCPostProcessingCallback
 51823 ;;		_floor
 51824 ;;		i2__doprnt
 51825 ;; This function uses a non-reentrant model
 51826 ;;
 51827                           
 51828                           	psect	text161
 51829  0192EE                     __ptext161:
 51830                           	opt stack 0
 51831  0192EE                     i2___fltol:
 51832                           	opt stack 14
 51833                           
 51834                           ;incstack = 0
 51835  0192EE  0100               	movlb	0	; () banked
 51836  0192F0  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 51837  0192F2  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 51838  0192F4  6F75               	movwf	i2___fltol@exp1& (0+255),b
 51839  0192F6  5175               	movf	i2___fltol@exp1& (0+255),w,b
 51840  0192F8  A4D8               	btfss	status,2,c
 51841  0192FA  D009               	goto	i2l2425
 51842                           
 51843                           ; BSR set to: 0
 51844  0192FC  0E00               	movlw	0
 51845  0192FE  6F6C               	movwf	?i2___fltol& (0+255),b
 51846  019300  0E00               	movlw	0
 51847  019302  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 51848  019304  0E00               	movlw	0
 51849  019306  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 51850  019308  0E00               	movlw	0
 51851  01930A  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 51852                           
 51853                           ; BSR set to: 0
 51854  01930C  0012               	return	
 51855  01930E                     i2l2425:
 51856                           
 51857                           ; BSR set to: 0
 51858                           
 51859                           ; BSR set to: 0
 51860  01930E  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 51861  019312  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 51862  019316  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 51863  01931A  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 51864  01931E  0E20               	movlw	32
 51865  019320  D005               	goto	i2u1966_40
 51866  019322                     i2u1966_45:
 51867  019322  90D8               	bcf	status,0,c
 51868  019324  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 51869  019326  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 51870  019328  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 51871  01932A  3370               	rrcf	??i2___fltol& (0+255),f,b
 51872  01932C                     i2u1966_40:
 51873  01932C  2EE8               	decfsz	wreg,f,c
 51874  01932E  D7F9               	goto	i2u1966_45
 51875  019330  5170               	movf	??i2___fltol& (0+255),w,b
 51876  019332  6F74               	movwf	i2___fltol@sign1& (0+255),b
 51877                           
 51878                           ; BSR set to: 0
 51879  019334  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 51880                           
 51881                           ; BSR set to: 0
 51882  019336  0EFF               	movlw	255
 51883  019338  176C               	andwf	i2___fltol@f1& (0+255),f,b
 51884  01933A  0EFF               	movlw	255
 51885  01933C  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 51886  01933E  0EFF               	movlw	255
 51887  019340  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 51888  019342  0E00               	movlw	0
 51889  019344  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 51890                           
 51891                           ; BSR set to: 0
 51892  019346  0E96               	movlw	150
 51893  019348  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 51894                           
 51895                           ; BSR set to: 0
 51896  01934A  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 51897  01934C  D016               	goto	i2l2427
 51898                           
 51899                           ; BSR set to: 0
 51900  01934E  5175               	movf	i2___fltol@exp1& (0+255),w,b
 51901  019350  0A80               	xorlw	128
 51902  019352  0F97               	addlw	151
 51903  019354  B0D8               	btfsc	status,0,c
 51904  019356  D009               	goto	i2l2428
 51905                           
 51906                           ; BSR set to: 0
 51907  019358  0E00               	movlw	0
 51908  01935A  6F6C               	movwf	?i2___fltol& (0+255),b
 51909  01935C  0E00               	movlw	0
 51910  01935E  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 51911  019360  0E00               	movlw	0
 51912  019362  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 51913  019364  0E00               	movlw	0
 51914  019366  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 51915                           
 51916                           ; BSR set to: 0
 51917  019368  0012               	return	
 51918  01936A                     i2l2428:
 51919                           
 51920                           ; BSR set to: 0
 51921                           
 51922                           ; BSR set to: 0
 51923                           
 51924                           ; BSR set to: 0
 51925  01936A  90D8               	bcf	status,0,c
 51926  01936C  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 51927  01936E  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 51928  019370  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 51929  019372  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 51930                           
 51931                           ; BSR set to: 0
 51932  019374  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 51933  019376  D7F9               	goto	i2l2428
 51934                           
 51935                           ; BSR set to: 0
 51936  019378  D015               	goto	i2u1970_40
 51937  01937A                     i2l2427:
 51938                           
 51939                           ; BSR set to: 0
 51940                           
 51941                           ; BSR set to: 0
 51942  01937A  0E1F               	movlw	31
 51943  01937C  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 51944  01937E  D00F               	goto	i2l2433
 51945                           
 51946                           ; BSR set to: 0
 51947  019380  0E00               	movlw	0
 51948  019382  6F6C               	movwf	?i2___fltol& (0+255),b
 51949  019384  0E00               	movlw	0
 51950  019386  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 51951  019388  0E00               	movlw	0
 51952  01938A  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 51953  01938C  0E00               	movlw	0
 51954  01938E  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 51955                           
 51956                           ; BSR set to: 0
 51957  019390  0012               	return	
 51958  019392                     
 51959                           ; BSR set to: 0
 51960                           
 51961                           ; BSR set to: 0
 51962  019392  90D8               	bcf	status,0,c
 51963  019394  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 51964  019396  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 51965  019398  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 51966  01939A  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 51967  01939C  0775               	decf	i2___fltol@exp1& (0+255),f,b
 51968  01939E                     i2l2433:
 51969                           
 51970                           ; BSR set to: 0
 51971                           
 51972                           ; BSR set to: 0
 51973  01939E  5175               	movf	i2___fltol@exp1& (0+255),w,b
 51974  0193A0  A4D8               	btfss	status,2,c
 51975  0193A2  D7F7               	goto	i2l2434
 51976  0193A4                     i2u1970_40:
 51977                           
 51978                           ; BSR set to: 0
 51979                           
 51980                           ; BSR set to: 0
 51981                           
 51982                           ; BSR set to: 0
 51983  0193A4  5174               	movf	i2___fltol@sign1& (0+255),w,b
 51984  0193A6  B4D8               	btfsc	status,2,c
 51985  0193A8  D008               	goto	i2l2436
 51986                           
 51987                           ; BSR set to: 0
 51988  0193AA  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 51989  0193AC  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 51990  0193AE  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 51991  0193B0  6D6C               	negf	i2___fltol@f1& (0+255),b
 51992  0193B2  0E00               	movlw	0
 51993  0193B4  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 51994  0193B6  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 51995  0193B8  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 51996  0193BA                     i2l2436:
 51997                           
 51998                           ; BSR set to: 0
 51999                           
 52000                           ; BSR set to: 0
 52001  0193BA  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 52002  0193BE  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 52003  0193C2  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 52004  0193C6  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 52005  0193CA  0012               	return	
 52006  0193CC                     __end_ofi2___fltol:
 52007                           	opt stack 0
 52008                           tosu	equ	0xFFF
 52009                           tosh	equ	0xFFE
 52010                           tosl	equ	0xFFD
 52011                           pclatu	equ	0xFFB
 52012                           pclath	equ	0xFFA
 52013                           tblptru	equ	0xFF8
 52014                           tblptrh	equ	0xFF7
 52015                           tblptrl	equ	0xFF6
 52016                           tablat	equ	0xFF5
 52017                           prodh	equ	0xFF4
 52018                           prodl	equ	0xFF3
 52019                           intcon	equ	0xFF2
 52020                           indf0	equ	0xFEF
 52021                           postinc0	equ	0xFEE
 52022                           fsr0h	equ	0xFEA
 52023                           fsr0l	equ	0xFE9
 52024                           wreg	equ	0xFE8
 52025                           indf1	equ	0xFE7
 52026                           postdec1	equ	0xFE5
 52027                           plusw1	equ	0xFE3
 52028                           fsr1h	equ	0xFE2
 52029                           fsr1l	equ	0xFE1
 52030                           bsr	equ	0xFE0
 52031                           indf2	equ	0xFDF
 52032                           postinc2	equ	0xFDE
 52033                           postdec2	equ	0xFDD
 52034                           plusw2	equ	0xFDB
 52035                           fsr2h	equ	0xFDA
 52036                           fsr2l	equ	0xFD9
 52037                           status	equ	0xFD8
 52038                           
 52039 ;; *************** function i2___flge *****************
 52040 ;; Defined at:
 52041 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 52042 ;; Parameters:    Size  Location     Type
 52043 ;;  ff1             4   51[COMRAM] long 
 52044 ;;  ff2             4   55[COMRAM] long 
 52045 ;; Auto vars:     Size  Location     Type
 52046 ;;		None
 52047 ;; Return value:  Size  Location     Type
 52048 ;;		None               void
 52049 ;; Registers used:
 52050 ;;		wreg, status,2, status,0
 52051 ;; Tracked objects:
 52052 ;;		On entry : 0/0
 52053 ;;		On exit  : 0/0
 52054 ;;		Unchanged: 0/0
 52055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52056 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52059 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52060 ;;Total ram usage:       12 bytes
 52061 ;; Hardware stack levels used:    1
 52062 ;; This function calls:
 52063 ;;		Nothing
 52064 ;; This function is called by:
 52065 ;;		_ADCPostProcessingCallback
 52066 ;;		_writeEnergyToEEPROMCallback
 52067 ;;		_asin
 52068 ;;		_atan
 52069 ;;		_sin
 52070 ;;		_floor
 52071 ;;		i2__doprnt
 52072 ;; This function uses a non-reentrant model
 52073 ;;
 52074                           
 52075                           	psect	text162
 52076  018DD6                     __ptext162:
 52077                           	opt stack 0
 52078  018DD6                     i2___flge:
 52079                           	opt stack 14
 52080                           
 52081                           ; BSR set to: 0
 52082                           ;incstack = 0
 52083  018DD6  0E00               	movlw	0
 52084  018DD8  1434               	andwf	i2___flge@ff1,w,c
 52085  018DDA  6E3C               	movwf	??i2___flge& (0+255),c
 52086  018DDC  0E00               	movlw	0
 52087  018DDE  1435               	andwf	i2___flge@ff1+1,w,c
 52088  018DE0  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 52089  018DE2  0E80               	movlw	128
 52090  018DE4  1436               	andwf	i2___flge@ff1+2,w,c
 52091  018DE6  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 52092  018DE8  0E7F               	movlw	127
 52093  018DEA  1437               	andwf	i2___flge@ff1+3,w,c
 52094  018DEC  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 52095  018DEE  503C               	movf	??i2___flge,w,c
 52096  018DF0  103D               	iorwf	??i2___flge+1,w,c
 52097  018DF2  103E               	iorwf	??i2___flge+2,w,c
 52098  018DF4  103F               	iorwf	??i2___flge+3,w,c
 52099  018DF6  A4D8               	btfss	status,2,c
 52100  018DF8  D008               	goto	i2l2395
 52101  018DFA  0E00               	movlw	0
 52102  018DFC  6E34               	movwf	i2___flge@ff1,c
 52103  018DFE  0E00               	movlw	0
 52104  018E00  6E35               	movwf	i2___flge@ff1+1,c
 52105  018E02  0E00               	movlw	0
 52106  018E04  6E36               	movwf	i2___flge@ff1+2,c
 52107  018E06  0E00               	movlw	0
 52108  018E08  6E37               	movwf	i2___flge@ff1+3,c
 52109  018E0A                     i2l2395:
 52110  018E0A  0E00               	movlw	0
 52111  018E0C  1438               	andwf	i2___flge@ff2,w,c
 52112  018E0E  6E3C               	movwf	??i2___flge& (0+255),c
 52113  018E10  0E00               	movlw	0
 52114  018E12  1439               	andwf	i2___flge@ff2+1,w,c
 52115  018E14  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 52116  018E16  0E80               	movlw	128
 52117  018E18  143A               	andwf	i2___flge@ff2+2,w,c
 52118  018E1A  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 52119  018E1C  0E7F               	movlw	127
 52120  018E1E  143B               	andwf	i2___flge@ff2+3,w,c
 52121  018E20  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 52122  018E22  503C               	movf	??i2___flge,w,c
 52123  018E24  103D               	iorwf	??i2___flge+1,w,c
 52124  018E26  103E               	iorwf	??i2___flge+2,w,c
 52125  018E28  103F               	iorwf	??i2___flge+3,w,c
 52126  018E2A  A4D8               	btfss	status,2,c
 52127  018E2C  D008               	goto	i2l2396
 52128  018E2E  0E00               	movlw	0
 52129  018E30  6E38               	movwf	i2___flge@ff2,c
 52130  018E32  0E00               	movlw	0
 52131  018E34  6E39               	movwf	i2___flge@ff2+1,c
 52132  018E36  0E00               	movlw	0
 52133  018E38  6E3A               	movwf	i2___flge@ff2+2,c
 52134  018E3A  0E00               	movlw	0
 52135  018E3C  6E3B               	movwf	i2___flge@ff2+3,c
 52136  018E3E                     i2l2396:
 52137  018E3E  AE37               	btfss	i2___flge@ff1+3,7,c
 52138  018E40  D01D               	goto	i2l2397
 52139  018E42  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 52140  018E46  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 52141  018E4A  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 52142  018E4E  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 52143  018E52  1E3C               	comf	??i2___flge,f,c
 52144  018E54  1E3D               	comf	??i2___flge+1,f,c
 52145  018E56  1E3E               	comf	??i2___flge+2,f,c
 52146  018E58  1E3F               	comf	??i2___flge+3,f,c
 52147  018E5A  2A3C               	incf	??i2___flge,f,c
 52148  018E5C  0E00               	movlw	0
 52149  018E5E  223D               	addwfc	??i2___flge+1,f,c
 52150  018E60  223E               	addwfc	??i2___flge+2,f,c
 52151  018E62  223F               	addwfc	??i2___flge+3,f,c
 52152  018E64  0E00               	movlw	0
 52153  018E66  243C               	addwf	??i2___flge,w,c
 52154  018E68  6E34               	movwf	i2___flge@ff1,c
 52155  018E6A  0E00               	movlw	0
 52156  018E6C  203D               	addwfc	??i2___flge+1,w,c
 52157  018E6E  6E35               	movwf	i2___flge@ff1+1,c
 52158  018E70  0E00               	movlw	0
 52159  018E72  203E               	addwfc	??i2___flge+2,w,c
 52160  018E74  6E36               	movwf	i2___flge@ff1+2,c
 52161  018E76  0E80               	movlw	128
 52162  018E78  203F               	addwfc	??i2___flge+3,w,c
 52163  018E7A  6E37               	movwf	i2___flge@ff1+3,c
 52164  018E7C                     i2l2397:
 52165  018E7C  AE3B               	btfss	i2___flge@ff2+3,7,c
 52166  018E7E  D01D               	goto	i2l2398
 52167  018E80  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 52168  018E84  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 52169  018E88  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 52170  018E8C  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 52171  018E90  1E3C               	comf	??i2___flge,f,c
 52172  018E92  1E3D               	comf	??i2___flge+1,f,c
 52173  018E94  1E3E               	comf	??i2___flge+2,f,c
 52174  018E96  1E3F               	comf	??i2___flge+3,f,c
 52175  018E98  2A3C               	incf	??i2___flge,f,c
 52176  018E9A  0E00               	movlw	0
 52177  018E9C  223D               	addwfc	??i2___flge+1,f,c
 52178  018E9E  223E               	addwfc	??i2___flge+2,f,c
 52179  018EA0  223F               	addwfc	??i2___flge+3,f,c
 52180  018EA2  0E00               	movlw	0
 52181  018EA4  243C               	addwf	??i2___flge,w,c
 52182  018EA6  6E38               	movwf	i2___flge@ff2,c
 52183  018EA8  0E00               	movlw	0
 52184  018EAA  203D               	addwfc	??i2___flge+1,w,c
 52185  018EAC  6E39               	movwf	i2___flge@ff2+1,c
 52186  018EAE  0E00               	movlw	0
 52187  018EB0  203E               	addwfc	??i2___flge+2,w,c
 52188  018EB2  6E3A               	movwf	i2___flge@ff2+2,c
 52189  018EB4  0E80               	movlw	128
 52190  018EB6  203F               	addwfc	??i2___flge+3,w,c
 52191  018EB8  6E3B               	movwf	i2___flge@ff2+3,c
 52192  018EBA                     i2l2398:
 52193  018EBA  0E00               	movlw	0
 52194  018EBC  1A34               	xorwf	i2___flge@ff1,f,c
 52195  018EBE  0E00               	movlw	0
 52196  018EC0  1A35               	xorwf	i2___flge@ff1+1,f,c
 52197  018EC2  0E00               	movlw	0
 52198  018EC4  1A36               	xorwf	i2___flge@ff1+2,f,c
 52199  018EC6  0E80               	movlw	128
 52200  018EC8  1A37               	xorwf	i2___flge@ff1+3,f,c
 52201  018ECA  0E00               	movlw	0
 52202  018ECC  1A38               	xorwf	i2___flge@ff2,f,c
 52203  018ECE  0E00               	movlw	0
 52204  018ED0  1A39               	xorwf	i2___flge@ff2+1,f,c
 52205  018ED2  0E00               	movlw	0
 52206  018ED4  1A3A               	xorwf	i2___flge@ff2+2,f,c
 52207  018ED6  0E80               	movlw	128
 52208  018ED8  1A3B               	xorwf	i2___flge@ff2+3,f,c
 52209  018EDA  5038               	movf	i2___flge@ff2,w,c
 52210  018EDC  5C34               	subwf	i2___flge@ff1,w,c
 52211  018EDE  5039               	movf	i2___flge@ff2+1,w,c
 52212  018EE0  5835               	subwfb	i2___flge@ff1+1,w,c
 52213  018EE2  503A               	movf	i2___flge@ff2+2,w,c
 52214  018EE4  5836               	subwfb	i2___flge@ff1+2,w,c
 52215  018EE6  503B               	movf	i2___flge@ff2+3,w,c
 52216  018EE8  5837               	subwfb	i2___flge@ff1+3,w,c
 52217  018EEA  B0D8               	btfsc	status,0,c
 52218  018EEC  D002               	goto	i2l13610
 52219  018EEE  90D8               	bcf	status,0,c
 52220  018EF0  0012               	return	
 52221  018EF2                     i2l13610:
 52222  018EF2  80D8               	bsf	status,0,c
 52223  018EF4  0012               	return	
 52224  018EF6                     __end_ofi2___flge:
 52225                           	opt stack 0
 52226                           tosu	equ	0xFFF
 52227                           tosh	equ	0xFFE
 52228                           tosl	equ	0xFFD
 52229                           pclatu	equ	0xFFB
 52230                           pclath	equ	0xFFA
 52231                           tblptru	equ	0xFF8
 52232                           tblptrh	equ	0xFF7
 52233                           tblptrl	equ	0xFF6
 52234                           tablat	equ	0xFF5
 52235                           prodh	equ	0xFF4
 52236                           prodl	equ	0xFF3
 52237                           intcon	equ	0xFF2
 52238                           indf0	equ	0xFEF
 52239                           postinc0	equ	0xFEE
 52240                           fsr0h	equ	0xFEA
 52241                           fsr0l	equ	0xFE9
 52242                           wreg	equ	0xFE8
 52243                           indf1	equ	0xFE7
 52244                           postdec1	equ	0xFE5
 52245                           plusw1	equ	0xFE3
 52246                           fsr1h	equ	0xFE2
 52247                           fsr1l	equ	0xFE1
 52248                           bsr	equ	0xFE0
 52249                           indf2	equ	0xFDF
 52250                           postinc2	equ	0xFDE
 52251                           postdec2	equ	0xFDD
 52252                           plusw2	equ	0xFDB
 52253                           fsr2h	equ	0xFDA
 52254                           fsr2l	equ	0xFD9
 52255                           status	equ	0xFD8
 52256                           
 52257 ;; *************** function _frexp *****************
 52258 ;; Defined at:
 52259 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 52260 ;; Parameters:    Size  Location     Type
 52261 ;;  value           4    0[COMRAM] long 
 52262 ;;  eptr            2    4[COMRAM] PTR int 
 52263 ;;		 -> floor@expon(2), 
 52264 ;; Auto vars:     Size  Location     Type
 52265 ;;		None
 52266 ;; Return value:  Size  Location     Type
 52267 ;;                  4    0[COMRAM] PTR int 
 52268 ;; Registers used:
 52269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52270 ;; Tracked objects:
 52271 ;;		On entry : 0/0
 52272 ;;		On exit  : 0/0
 52273 ;;		Unchanged: 0/0
 52274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52275 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52278 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52279 ;;Total ram usage:        8 bytes
 52280 ;; Hardware stack levels used:    1
 52281 ;; This function calls:
 52282 ;;		Nothing
 52283 ;; This function is called by:
 52284 ;;		_floor
 52285 ;; This function uses a non-reentrant model
 52286 ;;
 52287                           
 52288                           	psect	text163
 52289  019D64                     __ptext163:
 52290                           	opt stack 0
 52291  019D64                     _frexp:
 52292                           	opt stack 12
 52293                           
 52294                           ;incstack = 0
 52295  019D64  5001               	movf	frexp@value,w,c
 52296  019D66  1002               	iorwf	frexp@value+1,w,c
 52297  019D68  1003               	iorwf	frexp@value+2,w,c
 52298  019D6A  1004               	iorwf	frexp@value+3,w,c
 52299  019D6C  A4D8               	btfss	status,2,c
 52300  019D6E  D009               	goto	i2l2930
 52301  019D70  C005  FFD9         	movff	frexp@eptr,fsr2l
 52302  019D74  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52303  019D78  0E00               	movlw	0
 52304  019D7A  6EDE               	movwf	postinc2,c
 52305  019D7C  0E00               	movlw	0
 52306  019D7E  6EDD               	movwf	postdec2,c
 52307                           
 52308                           ;	Return value of _frexp is never used
 52309  019D80  0012               	return	
 52310  019D82                     i2l2930:
 52311  019D82  5004               	movf	frexp@value+3,w,c
 52312  019D84  0B7F               	andlw	127
 52313  019D86  6E07               	movwf	??_frexp& (0+255),c
 52314  019D88  6A08               	clrf	(??_frexp+1)& (0+255),c
 52315  019D8A  90D8               	bcf	status,0,c
 52316  019D8C  3607               	rlcf	??_frexp,f,c
 52317  019D8E  3608               	rlcf	??_frexp+1,f,c
 52318  019D90  C005  FFD9         	movff	frexp@eptr,fsr2l
 52319  019D94  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52320  019D98  C007  FFDE         	movff	??_frexp,postinc2
 52321  019D9C  C008  FFDD         	movff	??_frexp+1,postdec2
 52322  019DA0  AE03               	btfss	frexp@value+2,7,c
 52323  019DA2  D003               	goto	i2u1179_40
 52324  019DA4  6A07               	clrf	??_frexp& (0+255),c
 52325  019DA6  2A07               	incf	??_frexp& (0+255),f,c
 52326  019DA8  D001               	goto	i2u1179_48
 52327  019DAA                     i2u1179_40:
 52328  019DAA  6A07               	clrf	??_frexp& (0+255),c
 52329  019DAC                     i2u1179_48:
 52330  019DAC  5007               	movf	??_frexp,w,c
 52331  019DAE  C005  FFD9         	movff	frexp@eptr,fsr2l
 52332  019DB2  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52333  019DB6  12DE               	iorwf	postinc2,f,c
 52334  019DB8  0E00               	movlw	0
 52335  019DBA  12DD               	iorwf	postdec2,f,c
 52336  019DBC  C005  FFD9         	movff	frexp@eptr,fsr2l
 52337  019DC0  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52338  019DC4  0E82               	movlw	130
 52339  019DC6  26DE               	addwf	postinc2,f,c
 52340  019DC8  0EFF               	movlw	255
 52341  019DCA  22DD               	addwfc	postdec2,f,c
 52342  019DCC  8004               	bsf	frexp@value+3,0,c
 52343  019DCE  8204               	bsf	frexp@value+3,1,c
 52344  019DD0  8404               	bsf	frexp@value+3,2,c
 52345  019DD2  8604               	bsf	frexp@value+3,3,c
 52346  019DD4  8804               	bsf	frexp@value+3,4,c
 52347  019DD6  8A04               	bsf	frexp@value+3,5,c
 52348  019DD8  9C04               	bcf	frexp@value+3,6,c
 52349  019DDA  9E03               	bcf	frexp@value+2,7,c
 52350  019DDC  0012               	return	
 52351  019DDE                     __end_of_frexp:
 52352                           	opt stack 0
 52353                           tosu	equ	0xFFF
 52354                           tosh	equ	0xFFE
 52355                           tosl	equ	0xFFD
 52356                           pclatu	equ	0xFFB
 52357                           pclath	equ	0xFFA
 52358                           tblptru	equ	0xFF8
 52359                           tblptrh	equ	0xFF7
 52360                           tblptrl	equ	0xFF6
 52361                           tablat	equ	0xFF5
 52362                           prodh	equ	0xFF4
 52363                           prodl	equ	0xFF3
 52364                           intcon	equ	0xFF2
 52365                           indf0	equ	0xFEF
 52366                           postinc0	equ	0xFEE
 52367                           fsr0h	equ	0xFEA
 52368                           fsr0l	equ	0xFE9
 52369                           wreg	equ	0xFE8
 52370                           indf1	equ	0xFE7
 52371                           postdec1	equ	0xFE5
 52372                           plusw1	equ	0xFE3
 52373                           fsr1h	equ	0xFE2
 52374                           fsr1l	equ	0xFE1
 52375                           bsr	equ	0xFE0
 52376                           indf2	equ	0xFDF
 52377                           postinc2	equ	0xFDE
 52378                           postdec2	equ	0xFDD
 52379                           plusw2	equ	0xFDB
 52380                           fsr2h	equ	0xFDA
 52381                           fsr2l	equ	0xFD9
 52382                           status	equ	0xFD8
 52383                           
 52384 ;; *************** function _eval_poly *****************
 52385 ;; Defined at:
 52386 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 52387 ;; Parameters:    Size  Location     Type
 52388 ;;  x               4   12[BANK0 ] PTR int 
 52389 ;;  d               2   16[BANK0 ] PTR const 
 52390 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 52391 ;;  n               2   18[BANK0 ] int 
 52392 ;; Auto vars:     Size  Location     Type
 52393 ;;  res             4   24[BANK0 ] int 
 52394 ;; Return value:  Size  Location     Type
 52395 ;;                  4   12[BANK0 ] int 
 52396 ;; Registers used:
 52397 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52398 ;; Tracked objects:
 52399 ;;		On entry : 0/0
 52400 ;;		On exit  : 0/0
 52401 ;;		Unchanged: 0/0
 52402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52403 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52406 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52407 ;;Total ram usage:       16 bytes
 52408 ;; Hardware stack levels used:    1
 52409 ;; Hardware stack levels required when called:    1
 52410 ;; This function calls:
 52411 ;;		i2___fladd
 52412 ;;		i2___flmul
 52413 ;; This function is called by:
 52414 ;;		_atan
 52415 ;;		_sin
 52416 ;; This function uses a non-reentrant model
 52417 ;;
 52418                           
 52419                           	psect	text164
 52420  019110                     __ptext164:
 52421                           	opt stack 0
 52422  019110                     _eval_poly:
 52423                           	opt stack 12
 52424                           
 52425                           ;incstack = 0
 52426  019110  C072  F074         	movff	eval_poly@n,??_eval_poly
 52427  019114  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52428  019118  0100               	movlb	0	; () banked
 52429  01911A  90D8               	bcf	status,0,c
 52430  01911C  3774               	rlcf	??_eval_poly& (0+255),f,b
 52431  01911E  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52432  019120  90D8               	bcf	status,0,c
 52433  019122  3774               	rlcf	??_eval_poly& (0+255),f,b
 52434  019124  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52435  019126  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52436  01912A  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52437  01912E  5174               	movf	??_eval_poly& (0+255),w,b
 52438  019130  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52439  019132  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52440  019134  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52441  019136  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52442  01913A  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52443  01913E                     	if	0	;tblptru may be non-zero
 52444  01913E                     	endif
 52445  01913E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52446  01913E  0E00               	movlw	low (__mediumconst shr (0+16))
 52447  019140  6EF8               	movwf	tblptru,c
 52448  019142                     	endif
 52449  019142  0009               	tblrd		*+
 52450  019144  CFF5 F078          	movff	tablat,eval_poly@res
 52451  019148  0009               	tblrd		*+
 52452  01914A  CFF5 F079          	movff	tablat,eval_poly@res+1
 52453  01914E  0009               	tblrd		*+
 52454  019150  CFF5 F07A          	movff	tablat,eval_poly@res+2
 52455  019154  000A               	tblrd		*-
 52456  019156  CFF5 F07B          	movff	tablat,eval_poly@res+3
 52457  01915A  D04C               	goto	i2l2368
 52458  01915C                     
 52459                           ; BSR set to: 0
 52460                           
 52461                           ; BSR set to: 0
 52462  01915C  C078  F034         	movff	eval_poly@res,i2___flmul@a
 52463  019160  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 52464  019164  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 52465  019168  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 52466  01916C  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 52467  019170  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 52468  019174  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 52469  019178  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 52470  01917C  EC8D  F0AD         	call	i2___flmul	;wreg free
 52471  019180  C030  F056         	movff	?i2___flmul,i2___fladd@b
 52472  019184  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 52473  019188  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 52474  01918C  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 52475  019190  0100               	movlb	0	; () banked
 52476  019192  0772               	decf	eval_poly@n& (0+255),f,b
 52477  019194  A0D8               	btfss	status,0,c
 52478  019196  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 52479  019198  C072  F074         	movff	eval_poly@n,??_eval_poly
 52480  01919C  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52481  0191A0  90D8               	bcf	status,0,c
 52482  0191A2  3774               	rlcf	??_eval_poly& (0+255),f,b
 52483  0191A4  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52484  0191A6  90D8               	bcf	status,0,c
 52485  0191A8  3774               	rlcf	??_eval_poly& (0+255),f,b
 52486  0191AA  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52487  0191AC  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52488  0191B0  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52489  0191B4  5174               	movf	??_eval_poly& (0+255),w,b
 52490  0191B6  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52491  0191B8  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52492  0191BA  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52493  0191BC  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52494  0191C0  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52495  0191C4                     	if	0	;tblptru may be non-zero
 52496  0191C4                     	endif
 52497  0191C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52498  0191C4  0E00               	movlw	low (__mediumconst shr (0+16))
 52499  0191C6  6EF8               	movwf	tblptru,c
 52500  0191C8                     	endif
 52501  0191C8  0009               	tblrd		*+
 52502  0191CA  CFF5 F05A          	movff	tablat,i2___fladd@a
 52503  0191CE  0009               	tblrd		*+
 52504  0191D0  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 52505  0191D4  0009               	tblrd		*+
 52506  0191D6  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 52507  0191DA  000A               	tblrd		*-
 52508  0191DC  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 52509  0191E0  ECD4  F0B0         	call	i2___fladd	;wreg free
 52510  0191E4  C056  F078         	movff	?i2___fladd,eval_poly@res
 52511  0191E8  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 52512  0191EC  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 52513  0191F0  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 52514  0191F4                     i2l2368:
 52515  0191F4  0100               	movlb	0	; () banked
 52516  0191F6  5172               	movf	eval_poly@n& (0+255),w,b
 52517  0191F8  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 52518  0191FA  A4D8               	btfss	status,2,c
 52519  0191FC  D7AF               	goto	i2l2369
 52520                           
 52521                           ; BSR set to: 0
 52522  0191FE  C078  F06C         	movff	eval_poly@res,?_eval_poly
 52523  019202  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 52524  019206  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 52525  01920A  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 52526                           
 52527                           ; BSR set to: 0
 52528  01920E  0012               	return		;funcret
 52529  019210                     __end_of_eval_poly:
 52530                           	opt stack 0
 52531                           tosu	equ	0xFFF
 52532                           tosh	equ	0xFFE
 52533                           tosl	equ	0xFFD
 52534                           pclatu	equ	0xFFB
 52535                           pclath	equ	0xFFA
 52536                           tblptru	equ	0xFF8
 52537                           tblptrh	equ	0xFF7
 52538                           tblptrl	equ	0xFF6
 52539                           tablat	equ	0xFF5
 52540                           prodh	equ	0xFF4
 52541                           prodl	equ	0xFF3
 52542                           intcon	equ	0xFF2
 52543                           indf0	equ	0xFEF
 52544                           postinc0	equ	0xFEE
 52545                           fsr0h	equ	0xFEA
 52546                           fsr0l	equ	0xFE9
 52547                           wreg	equ	0xFE8
 52548                           indf1	equ	0xFE7
 52549                           postdec1	equ	0xFE5
 52550                           plusw1	equ	0xFE3
 52551                           fsr1h	equ	0xFE2
 52552                           fsr1l	equ	0xFE1
 52553                           bsr	equ	0xFE0
 52554                           indf2	equ	0xFDF
 52555                           postinc2	equ	0xFDE
 52556                           postdec2	equ	0xFDD
 52557                           plusw2	equ	0xFDB
 52558                           fsr2h	equ	0xFDA
 52559                           fsr2l	equ	0xFD9
 52560                           status	equ	0xFD8
 52561                           
 52562 ;; *************** function i2___flmul *****************
 52563 ;; Defined at:
 52564 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 52565 ;; Parameters:    Size  Location     Type
 52566 ;;  b               4   47[COMRAM] int 
 52567 ;;  a               4   51[COMRAM] int 
 52568 ;; Auto vars:     Size  Location     Type
 52569 ;;  __flmul         4   66[COMRAM] struct .
 52570 ;;  __flmul         4   61[COMRAM] unsigned long 
 52571 ;;  __flmul         2   70[COMRAM] struct .
 52572 ;;  __flmul         1   65[COMRAM] unsigned char 
 52573 ;;  __flmul         1   60[COMRAM] unsigned char 
 52574 ;;  __flmul         1   59[COMRAM] unsigned char 
 52575 ;; Return value:  Size  Location     Type
 52576 ;;                  4   47[COMRAM] unsigned char 
 52577 ;; Registers used:
 52578 ;;		wreg, status,2, status,0, prodl, prodh
 52579 ;; Tracked objects:
 52580 ;;		On entry : 0/0
 52581 ;;		On exit  : 0/0
 52582 ;;		Unchanged: 0/0
 52583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52584 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52585 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52587 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52588 ;;Total ram usage:       25 bytes
 52589 ;; Hardware stack levels used:    1
 52590 ;; This function calls:
 52591 ;;		Nothing
 52592 ;; This function is called by:
 52593 ;;		_peakToRMS
 52594 ;;		_ADCPostProcessingCallback
 52595 ;;		_asin
 52596 ;;		_atan
 52597 ;;		_eval_poly
 52598 ;;		_sin
 52599 ;;		i2_fround
 52600 ;;		i2_scale
 52601 ;;		i2__doprnt
 52602 ;; This function uses a non-reentrant model
 52603 ;;
 52604                           
 52605                           	psect	text165
 52606  015B1A                     __ptext165:
 52607                           	opt stack 0
 52608  015B1A                     i2___flmul:
 52609                           	opt stack 13
 52610                           
 52611                           ; BSR set to: 0
 52612                           ;incstack = 0
 52613  015B1A  5033               	movf	i2___flmul@b+3,w,c
 52614  015B1C  0B80               	andlw	128
 52615  015B1E  6E3C               	movwf	i2___flmul@sign,c
 52616  015B20  5033               	movf	i2___flmul@b+3,w,c
 52617  015B22  2433               	addwf	i2___flmul@b+3,w,c
 52618  015B24  6E42               	movwf	i2___flmul@bexp,c
 52619  015B26  BE32               	btfsc	i2___flmul@b+2,7,c
 52620  015B28  8042               	bsf	i2___flmul@bexp,0,c
 52621  015B2A  5042               	movf	i2___flmul@bexp,w,c
 52622  015B2C  B4D8               	btfsc	status,2,c
 52623  015B2E  D00D               	goto	i2l2797
 52624  015B30  2842               	incf	i2___flmul@bexp,w,c
 52625  015B32  A4D8               	btfss	status,2,c
 52626  015B34  D008               	goto	i2l2798
 52627  015B36  0E00               	movlw	0
 52628  015B38  6E30               	movwf	i2___flmul@b,c
 52629  015B3A  0E00               	movlw	0
 52630  015B3C  6E31               	movwf	i2___flmul@b+1,c
 52631  015B3E  0E00               	movlw	0
 52632  015B40  6E32               	movwf	i2___flmul@b+2,c
 52633  015B42  0E00               	movlw	0
 52634  015B44  6E33               	movwf	i2___flmul@b+3,c
 52635  015B46                     i2l2798:
 52636  015B46  8E32               	bsf	i2___flmul@b+2,7,c
 52637  015B48  D008               	goto	i2l2799
 52638  015B4A                     i2l2797:
 52639  015B4A  0E00               	movlw	0
 52640  015B4C  6E30               	movwf	i2___flmul@b,c
 52641  015B4E  0E00               	movlw	0
 52642  015B50  6E31               	movwf	i2___flmul@b+1,c
 52643  015B52  0E00               	movlw	0
 52644  015B54  6E32               	movwf	i2___flmul@b+2,c
 52645  015B56  0E00               	movlw	0
 52646  015B58  6E33               	movwf	i2___flmul@b+3,c
 52647  015B5A                     i2l2799:
 52648  015B5A  5037               	movf	i2___flmul@a+3,w,c
 52649  015B5C  0B80               	andlw	128
 52650  015B5E  1A3C               	xorwf	i2___flmul@sign,f,c
 52651  015B60  5037               	movf	i2___flmul@a+3,w,c
 52652  015B62  2437               	addwf	i2___flmul@a+3,w,c
 52653  015B64  6E3D               	movwf	i2___flmul@aexp,c
 52654  015B66  BE36               	btfsc	i2___flmul@a+2,7,c
 52655  015B68  803D               	bsf	i2___flmul@aexp,0,c
 52656  015B6A  503D               	movf	i2___flmul@aexp,w,c
 52657  015B6C  B4D8               	btfsc	status,2,c
 52658  015B6E  D00D               	goto	i2l2801
 52659  015B70  283D               	incf	i2___flmul@aexp,w,c
 52660  015B72  A4D8               	btfss	status,2,c
 52661  015B74  D008               	goto	i2l2802
 52662  015B76  0E00               	movlw	0
 52663  015B78  6E34               	movwf	i2___flmul@a,c
 52664  015B7A  0E00               	movlw	0
 52665  015B7C  6E35               	movwf	i2___flmul@a+1,c
 52666  015B7E  0E00               	movlw	0
 52667  015B80  6E36               	movwf	i2___flmul@a+2,c
 52668  015B82  0E00               	movlw	0
 52669  015B84  6E37               	movwf	i2___flmul@a+3,c
 52670  015B86                     i2l2802:
 52671  015B86  8E36               	bsf	i2___flmul@a+2,7,c
 52672  015B88  D008               	goto	i2l2803
 52673  015B8A                     i2l2801:
 52674  015B8A  0E00               	movlw	0
 52675  015B8C  6E34               	movwf	i2___flmul@a,c
 52676  015B8E  0E00               	movlw	0
 52677  015B90  6E35               	movwf	i2___flmul@a+1,c
 52678  015B92  0E00               	movlw	0
 52679  015B94  6E36               	movwf	i2___flmul@a+2,c
 52680  015B96  0E00               	movlw	0
 52681  015B98  6E37               	movwf	i2___flmul@a+3,c
 52682  015B9A                     i2l2803:
 52683  015B9A  503D               	movf	i2___flmul@aexp,w,c
 52684  015B9C  B4D8               	btfsc	status,2,c
 52685  015B9E  D003               	goto	i2u1771_40
 52686  015BA0  5042               	movf	i2___flmul@bexp,w,c
 52687  015BA2  A4D8               	btfss	status,2,c
 52688  015BA4  D009               	goto	i2l2804
 52689  015BA6                     i2u1771_40:
 52690  015BA6  0E00               	movlw	0
 52691  015BA8  6E30               	movwf	?i2___flmul,c
 52692  015BAA  0E00               	movlw	0
 52693  015BAC  6E31               	movwf	?i2___flmul+1,c
 52694  015BAE  0E00               	movlw	0
 52695  015BB0  6E32               	movwf	?i2___flmul+2,c
 52696  015BB2  0E00               	movlw	0
 52697  015BB4  6E33               	movwf	?i2___flmul+3,c
 52698  015BB6  0012               	return	
 52699  015BB8                     i2l2804:
 52700  015BB8  5036               	movf	i2___flmul@a+2,w,c
 52701  015BBA  0230               	mulwf	i2___flmul@b,c
 52702  015BBC  CFF3 F047          	movff	prodl,i2___flmul@temp
 52703  015BC0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52704  015BC4  5047               	movf	i2___flmul@temp,w,c
 52705  015BC6  6E3E               	movwf	i2___flmul@grs,c
 52706  015BC8  6A3F               	clrf	i2___flmul@grs+1,c
 52707  015BCA  6A40               	clrf	i2___flmul@grs+2,c
 52708  015BCC  6A41               	clrf	i2___flmul@grs+3,c
 52709  015BCE  5048               	movf	i2___flmul@temp+1,w,c
 52710  015BD0  6E43               	movwf	i2___flmul@prod,c
 52711  015BD2  6A44               	clrf	i2___flmul@prod+1,c
 52712  015BD4  6A45               	clrf	i2___flmul@prod+2,c
 52713  015BD6  6A46               	clrf	i2___flmul@prod+3,c
 52714  015BD8  5035               	movf	i2___flmul@a+1,w,c
 52715  015BDA  0231               	mulwf	i2___flmul@b+1,c
 52716  015BDC  CFF3 F047          	movff	prodl,i2___flmul@temp
 52717  015BE0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52718  015BE4  5047               	movf	i2___flmul@temp,w,c
 52719  015BE6  263E               	addwf	i2___flmul@grs,f,c
 52720  015BE8  0E00               	movlw	0
 52721  015BEA  223F               	addwfc	i2___flmul@grs+1,f,c
 52722  015BEC  2240               	addwfc	i2___flmul@grs+2,f,c
 52723  015BEE  2241               	addwfc	i2___flmul@grs+3,f,c
 52724  015BF0  5048               	movf	i2___flmul@temp+1,w,c
 52725  015BF2  2643               	addwf	i2___flmul@prod,f,c
 52726  015BF4  0E00               	movlw	0
 52727  015BF6  2244               	addwfc	i2___flmul@prod+1,f,c
 52728  015BF8  2245               	addwfc	i2___flmul@prod+2,f,c
 52729  015BFA  2246               	addwfc	i2___flmul@prod+3,f,c
 52730  015BFC  5034               	movf	i2___flmul@a,w,c
 52731  015BFE  0232               	mulwf	i2___flmul@b+2,c
 52732  015C00  CFF3 F047          	movff	prodl,i2___flmul@temp
 52733  015C04  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52734  015C08  5047               	movf	i2___flmul@temp,w,c
 52735  015C0A  263E               	addwf	i2___flmul@grs,f,c
 52736  015C0C  0E00               	movlw	0
 52737  015C0E  223F               	addwfc	i2___flmul@grs+1,f,c
 52738  015C10  2240               	addwfc	i2___flmul@grs+2,f,c
 52739  015C12  2241               	addwfc	i2___flmul@grs+3,f,c
 52740  015C14  5048               	movf	i2___flmul@temp+1,w,c
 52741  015C16  2643               	addwf	i2___flmul@prod,f,c
 52742  015C18  0E00               	movlw	0
 52743  015C1A  2244               	addwfc	i2___flmul@prod+1,f,c
 52744  015C1C  2245               	addwfc	i2___flmul@prod+2,f,c
 52745  015C1E  2246               	addwfc	i2___flmul@prod+3,f,c
 52746  015C20  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52747  015C24  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52748  015C28  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52749  015C2C  6A3E               	clrf	i2___flmul@grs,c
 52750  015C2E  5034               	movf	i2___flmul@a,w,c
 52751  015C30  0231               	mulwf	i2___flmul@b+1,c
 52752  015C32  CFF3 F047          	movff	prodl,i2___flmul@temp
 52753  015C36  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52754  015C3A  5047               	movf	i2___flmul@temp,w,c
 52755  015C3C  263E               	addwf	i2___flmul@grs,f,c
 52756  015C3E  5048               	movf	i2___flmul@temp+1,w,c
 52757  015C40  223F               	addwfc	i2___flmul@grs+1,f,c
 52758  015C42  0E00               	movlw	0
 52759  015C44  2240               	addwfc	i2___flmul@grs+2,f,c
 52760  015C46  0E00               	movlw	0
 52761  015C48  2241               	addwfc	i2___flmul@grs+3,f,c
 52762  015C4A  5035               	movf	i2___flmul@a+1,w,c
 52763  015C4C  0230               	mulwf	i2___flmul@b,c
 52764  015C4E  CFF3 F047          	movff	prodl,i2___flmul@temp
 52765  015C52  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52766  015C56  5047               	movf	i2___flmul@temp,w,c
 52767  015C58  263E               	addwf	i2___flmul@grs,f,c
 52768  015C5A  5048               	movf	i2___flmul@temp+1,w,c
 52769  015C5C  223F               	addwfc	i2___flmul@grs+1,f,c
 52770  015C5E  0E00               	movlw	0
 52771  015C60  2240               	addwfc	i2___flmul@grs+2,f,c
 52772  015C62  0E00               	movlw	0
 52773  015C64  2241               	addwfc	i2___flmul@grs+3,f,c
 52774  015C66  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52775  015C6A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52776  015C6E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52777  015C72  6A3E               	clrf	i2___flmul@grs,c
 52778  015C74  5034               	movf	i2___flmul@a,w,c
 52779  015C76  0230               	mulwf	i2___flmul@b,c
 52780  015C78  CFF3 F047          	movff	prodl,i2___flmul@temp
 52781  015C7C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52782  015C80  5047               	movf	i2___flmul@temp,w,c
 52783  015C82  263E               	addwf	i2___flmul@grs,f,c
 52784  015C84  5048               	movf	i2___flmul@temp+1,w,c
 52785  015C86  223F               	addwfc	i2___flmul@grs+1,f,c
 52786  015C88  0E00               	movlw	0
 52787  015C8A  2240               	addwfc	i2___flmul@grs+2,f,c
 52788  015C8C  0E00               	movlw	0
 52789  015C8E  2241               	addwfc	i2___flmul@grs+3,f,c
 52790  015C90  5036               	movf	i2___flmul@a+2,w,c
 52791  015C92  0231               	mulwf	i2___flmul@b+1,c
 52792  015C94  CFF3 F047          	movff	prodl,i2___flmul@temp
 52793  015C98  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52794  015C9C  5047               	movf	i2___flmul@temp,w,c
 52795  015C9E  2643               	addwf	i2___flmul@prod,f,c
 52796  015CA0  5048               	movf	i2___flmul@temp+1,w,c
 52797  015CA2  2244               	addwfc	i2___flmul@prod+1,f,c
 52798  015CA4  0E00               	movlw	0
 52799  015CA6  2245               	addwfc	i2___flmul@prod+2,f,c
 52800  015CA8  0E00               	movlw	0
 52801  015CAA  2246               	addwfc	i2___flmul@prod+3,f,c
 52802  015CAC  5035               	movf	i2___flmul@a+1,w,c
 52803  015CAE  0232               	mulwf	i2___flmul@b+2,c
 52804  015CB0  CFF3 F047          	movff	prodl,i2___flmul@temp
 52805  015CB4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52806  015CB8  5047               	movf	i2___flmul@temp,w,c
 52807  015CBA  2643               	addwf	i2___flmul@prod,f,c
 52808  015CBC  5048               	movf	i2___flmul@temp+1,w,c
 52809  015CBE  2244               	addwfc	i2___flmul@prod+1,f,c
 52810  015CC0  0E00               	movlw	0
 52811  015CC2  2245               	addwfc	i2___flmul@prod+2,f,c
 52812  015CC4  0E00               	movlw	0
 52813  015CC6  2246               	addwfc	i2___flmul@prod+3,f,c
 52814  015CC8  5036               	movf	i2___flmul@a+2,w,c
 52815  015CCA  0232               	mulwf	i2___flmul@b+2,c
 52816  015CCC  CFF3 F047          	movff	prodl,i2___flmul@temp
 52817  015CD0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52818  015CD4  5047               	movf	i2___flmul@temp,w,c
 52819  015CD6  6E38               	movwf	??i2___flmul& (0+255),c
 52820  015CD8  5048               	movf	i2___flmul@temp+1,w,c
 52821  015CDA  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 52822  015CDC  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 52823  015CDE  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 52824  015CE0  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 52825  015CE4  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 52826  015CE8  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 52827  015CEC  6A38               	clrf	??i2___flmul,c
 52828  015CEE  5038               	movf	??i2___flmul,w,c
 52829  015CF0  2643               	addwf	i2___flmul@prod,f,c
 52830  015CF2  5039               	movf	??i2___flmul+1,w,c
 52831  015CF4  2244               	addwfc	i2___flmul@prod+1,f,c
 52832  015CF6  503A               	movf	??i2___flmul+2,w,c
 52833  015CF8  2245               	addwfc	i2___flmul@prod+2,f,c
 52834  015CFA  503B               	movf	??i2___flmul+3,w,c
 52835  015CFC  2246               	addwfc	i2___flmul@prod+3,f,c
 52836  015CFE  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 52837  015D02  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 52838  015D06  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 52839  015D0A  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 52840  015D0E  0E19               	movlw	25
 52841  015D10  D005               	goto	i2u1772_40
 52842  015D12                     i2u1772_45:
 52843  015D12  90D8               	bcf	status,0,c
 52844  015D14  323B               	rrcf	??i2___flmul+3,f,c
 52845  015D16  323A               	rrcf	??i2___flmul+2,f,c
 52846  015D18  3239               	rrcf	??i2___flmul+1,f,c
 52847  015D1A  3238               	rrcf	??i2___flmul,f,c
 52848  015D1C                     i2u1772_40:
 52849  015D1C  2EE8               	decfsz	wreg,f,c
 52850  015D1E  D7F9               	goto	i2u1772_45
 52851  015D20  5038               	movf	??i2___flmul,w,c
 52852  015D22  2643               	addwf	i2___flmul@prod,f,c
 52853  015D24  5039               	movf	??i2___flmul+1,w,c
 52854  015D26  2244               	addwfc	i2___flmul@prod+1,f,c
 52855  015D28  503A               	movf	??i2___flmul+2,w,c
 52856  015D2A  2245               	addwfc	i2___flmul@prod+2,f,c
 52857  015D2C  503B               	movf	??i2___flmul+3,w,c
 52858  015D2E  2246               	addwfc	i2___flmul@prod+3,f,c
 52859  015D30  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52860  015D34  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52861  015D38  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52862  015D3C  6A3E               	clrf	i2___flmul@grs,c
 52863  015D3E  503D               	movf	i2___flmul@aexp,w,c
 52864  015D40  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 52865  015D44  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 52866  015D46  2638               	addwf	??i2___flmul,f,c
 52867  015D48  0E00               	movlw	0
 52868  015D4A  2239               	addwfc	??i2___flmul+1,f,c
 52869  015D4C  0E82               	movlw	130
 52870  015D4E  2438               	addwf	??i2___flmul,w,c
 52871  015D50  6E47               	movwf	i2___flmul@temp,c
 52872  015D52  0EFF               	movlw	255
 52873  015D54  2039               	addwfc	??i2___flmul+1,w,c
 52874  015D56  6E48               	movwf	i2___flmul@temp+1,c
 52875  015D58  D00F               	goto	i2l2808
 52876  015D5A  90D8               	bcf	status,0,c
 52877  015D5C  3643               	rlcf	i2___flmul@prod,f,c
 52878  015D5E  3644               	rlcf	i2___flmul@prod+1,f,c
 52879  015D60  3645               	rlcf	i2___flmul@prod+2,f,c
 52880  015D62  3646               	rlcf	i2___flmul@prod+3,f,c
 52881  015D64  BE41               	btfsc	i2___flmul@grs+3,7,c
 52882  015D66  8043               	bsf	i2___flmul@prod,0,c
 52883  015D68  90D8               	bcf	status,0,c
 52884  015D6A  363E               	rlcf	i2___flmul@grs,f,c
 52885  015D6C  363F               	rlcf	i2___flmul@grs+1,f,c
 52886  015D6E  3640               	rlcf	i2___flmul@grs+2,f,c
 52887  015D70  3641               	rlcf	i2___flmul@grs+3,f,c
 52888  015D72  0647               	decf	i2___flmul@temp,f,c
 52889  015D74  A0D8               	btfss	status,0,c
 52890  015D76  0648               	decf	i2___flmul@temp+1,f,c
 52891  015D78                     i2l2808:
 52892  015D78  AE45               	btfss	i2___flmul@prod+2,7,c
 52893  015D7A  D7EF               	goto	i2l2809
 52894  015D7C  0E00               	movlw	0
 52895  015D7E  6E3D               	movwf	i2___flmul@aexp,c
 52896  015D80  AE41               	btfss	i2___flmul@grs+3,7,c
 52897  015D82  D016               	goto	i2l2815
 52898  015D84  0EFF               	movlw	255
 52899  015D86  143E               	andwf	i2___flmul@grs,w,c
 52900  015D88  6E38               	movwf	??i2___flmul& (0+255),c
 52901  015D8A  0EFF               	movlw	255
 52902  015D8C  143F               	andwf	i2___flmul@grs+1,w,c
 52903  015D8E  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 52904  015D90  0EFF               	movlw	255
 52905  015D92  1440               	andwf	i2___flmul@grs+2,w,c
 52906  015D94  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 52907  015D96  0E7F               	movlw	127
 52908  015D98  1441               	andwf	i2___flmul@grs+3,w,c
 52909  015D9A  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 52910  015D9C  5038               	movf	??i2___flmul,w,c
 52911  015D9E  1039               	iorwf	??i2___flmul+1,w,c
 52912  015DA0  103A               	iorwf	??i2___flmul+2,w,c
 52913  015DA2  103B               	iorwf	??i2___flmul+3,w,c
 52914  015DA4  A4D8               	btfss	status,2,c
 52915  015DA6  D002               	goto	i2u1777_40
 52916  015DA8  A043               	btfss	i2___flmul@prod,0,c
 52917  015DAA  D002               	goto	i2l2815
 52918  015DAC                     i2u1777_40:
 52919  015DAC  0E01               	movlw	1
 52920  015DAE  6E3D               	movwf	i2___flmul@aexp,c
 52921  015DB0                     i2l2815:
 52922  015DB0  503D               	movf	i2___flmul@aexp,w,c
 52923  015DB2  B4D8               	btfsc	status,2,c
 52924  015DB4  D01F               	goto	i2l2817
 52925  015DB6  0E01               	movlw	1
 52926  015DB8  2643               	addwf	i2___flmul@prod,f,c
 52927  015DBA  0E00               	movlw	0
 52928  015DBC  2244               	addwfc	i2___flmul@prod+1,f,c
 52929  015DBE  2245               	addwfc	i2___flmul@prod+2,f,c
 52930  015DC0  2246               	addwfc	i2___flmul@prod+3,f,c
 52931  015DC2  A046               	btfss	i2___flmul@prod+3,0,c
 52932  015DC4  D017               	goto	i2l2817
 52933  015DC6  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 52934  015DCA  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 52935  015DCE  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 52936  015DD2  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 52937  015DD6  343B               	rlcf	??i2___flmul+3,w,c
 52938  015DD8  323B               	rrcf	??i2___flmul+3,f,c
 52939  015DDA  323A               	rrcf	??i2___flmul+2,f,c
 52940  015DDC  3239               	rrcf	??i2___flmul+1,f,c
 52941  015DDE  3238               	rrcf	??i2___flmul,f,c
 52942  015DE0  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 52943  015DE4  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 52944  015DE8  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 52945  015DEC  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 52946  015DF0  4A47               	infsnz	i2___flmul@temp,f,c
 52947  015DF2  2A48               	incf	i2___flmul@temp+1,f,c
 52948  015DF4                     i2l2817:
 52949  015DF4  BE48               	btfsc	i2___flmul@temp+1,7,c
 52950  015DF6  D00D               	goto	i2l2818
 52951  015DF8  5048               	movf	i2___flmul@temp+1,w,c
 52952  015DFA  E103               	bnz	i2u1780_40
 52953  015DFC  2847               	incf	i2___flmul@temp,w,c
 52954  015DFE  A0D8               	btfss	status,0,c
 52955  015E00  D008               	goto	i2l2818
 52956  015E02                     i2u1780_40:
 52957  015E02  0E00               	movlw	0
 52958  015E04  6E43               	movwf	i2___flmul@prod,c
 52959  015E06  0E00               	movlw	0
 52960  015E08  6E44               	movwf	i2___flmul@prod+1,c
 52961  015E0A  0E80               	movlw	128
 52962  015E0C  6E45               	movwf	i2___flmul@prod+2,c
 52963  015E0E  0E7F               	movlw	127
 52964  015E10  D020               	goto	L29
 52965  015E12                     i2l2818:
 52966  015E12  BE48               	btfsc	i2___flmul@temp+1,7,c
 52967  015E14  D005               	goto	i2u1781_40
 52968  015E16  5048               	movf	i2___flmul@temp+1,w,c
 52969  015E18  E10E               	bnz	i2l2820
 52970  015E1A  0447               	decf	i2___flmul@temp,w,c
 52971  015E1C  B0D8               	btfsc	status,0,c
 52972  015E1E  D00B               	goto	i2l2820
 52973  015E20                     i2u1781_40:
 52974  015E20  0E00               	movlw	0
 52975  015E22  6E43               	movwf	i2___flmul@prod,c
 52976  015E24  0E00               	movlw	0
 52977  015E26  6E44               	movwf	i2___flmul@prod+1,c
 52978  015E28  0E00               	movlw	0
 52979  015E2A  6E45               	movwf	i2___flmul@prod+2,c
 52980  015E2C  0E00               	movlw	0
 52981  015E2E  6E46               	movwf	i2___flmul@prod+3,c
 52982  015E30  0E00               	movlw	0
 52983  015E32  6E3C               	movwf	i2___flmul@sign,c
 52984  015E34  D00F               	goto	i2l2821
 52985  015E36                     i2l2820:
 52986  015E36  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 52987  015E3A  0EFF               	movlw	255
 52988  015E3C  1643               	andwf	i2___flmul@prod,f,c
 52989  015E3E  0EFF               	movlw	255
 52990  015E40  1644               	andwf	i2___flmul@prod+1,f,c
 52991  015E42  0E7F               	movlw	127
 52992  015E44  1645               	andwf	i2___flmul@prod+2,f,c
 52993  015E46  0E00               	movlw	0
 52994  015E48  1646               	andwf	i2___flmul@prod+3,f,c
 52995  015E4A  B042               	btfsc	i2___flmul@bexp,0,c
 52996  015E4C  8E45               	bsf	i2___flmul@prod+2,7,c
 52997  015E4E  90D8               	bcf	status,0,c
 52998  015E50  3042               	rrcf	i2___flmul@bexp,w,c
 52999  015E52                     L29:
 53000  015E52  6E46               	movwf	i2___flmul@prod+3,c
 53001  015E54                     i2l2821:
 53002  015E54  503C               	movf	i2___flmul@sign,w,c
 53003  015E56  1246               	iorwf	i2___flmul@prod+3,f,c
 53004  015E58  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 53005  015E5C  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 53006  015E60  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 53007  015E64  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 53008  015E68  0012               	return	
 53009  015E6A                     __end_ofi2___flmul:
 53010                           	opt stack 0
 53011                           tosu	equ	0xFFF
 53012                           tosh	equ	0xFFE
 53013                           tosl	equ	0xFFD
 53014                           pclatu	equ	0xFFB
 53015                           pclath	equ	0xFFA
 53016                           tblptru	equ	0xFF8
 53017                           tblptrh	equ	0xFF7
 53018                           tblptrl	equ	0xFF6
 53019                           tablat	equ	0xFF5
 53020                           prodh	equ	0xFF4
 53021                           prodl	equ	0xFF3
 53022                           intcon	equ	0xFF2
 53023                           indf0	equ	0xFEF
 53024                           postinc0	equ	0xFEE
 53025                           fsr0h	equ	0xFEA
 53026                           fsr0l	equ	0xFE9
 53027                           wreg	equ	0xFE8
 53028                           indf1	equ	0xFE7
 53029                           postdec1	equ	0xFE5
 53030                           plusw1	equ	0xFE3
 53031                           fsr1h	equ	0xFE2
 53032                           fsr1l	equ	0xFE1
 53033                           bsr	equ	0xFE0
 53034                           indf2	equ	0xFDF
 53035                           postinc2	equ	0xFDE
 53036                           postdec2	equ	0xFDD
 53037                           plusw2	equ	0xFDB
 53038                           fsr2h	equ	0xFDA
 53039                           fsr2l	equ	0xFD9
 53040                           status	equ	0xFD8
 53041                           
 53042 ;; *************** function i2___fladd *****************
 53043 ;; Defined at:
 53044 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 53045 ;; Parameters:    Size  Location     Type
 53046 ;;  b               4   85[COMRAM] unsigned char 
 53047 ;;  a               4   89[COMRAM] unsigned char 
 53048 ;; Auto vars:     Size  Location     Type
 53049 ;;  __fladd         1   11[BANK0 ] unsigned char 
 53050 ;;  __fladd         1   10[BANK0 ] unsigned char 
 53051 ;;  __fladd         1    9[BANK0 ] unsigned char 
 53052 ;;  __fladd         1    8[BANK0 ] unsigned char 
 53053 ;; Return value:  Size  Location     Type
 53054 ;;                  4   85[COMRAM] unsigned char 
 53055 ;; Registers used:
 53056 ;;		wreg, status,2, status,0
 53057 ;; Tracked objects:
 53058 ;;		On entry : 0/0
 53059 ;;		On exit  : 0/0
 53060 ;;		Unchanged: 0/0
 53061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53062 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53063 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53064 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53065 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53066 ;;Total ram usage:       20 bytes
 53067 ;; Hardware stack levels used:    1
 53068 ;; This function calls:
 53069 ;;		Nothing
 53070 ;; This function is called by:
 53071 ;;		_peakToRMS
 53072 ;;		_ADCPostProcessingCallback
 53073 ;;		_acos
 53074 ;;		_asin
 53075 ;;		_atan
 53076 ;;		_eval_poly
 53077 ;;		_sin
 53078 ;;		_floor
 53079 ;;		i2__doprnt
 53080 ;;		i2___flsub
 53081 ;; This function uses a non-reentrant model
 53082 ;;
 53083                           
 53084                           	psect	text166
 53085  0161A8                     __ptext166:
 53086                           	opt stack 0
 53087  0161A8                     i2___fladd:
 53088                           	opt stack 13
 53089                           
 53090                           ;incstack = 0
 53091  0161A8  5059               	movf	i2___fladd@b+3,w,c
 53092  0161AA  0B80               	andlw	128
 53093  0161AC  0100               	movlb	0	; () banked
 53094  0161AE  6F68               	movwf	i2___fladd@signs& (0+255),b
 53095  0161B0  5059               	movf	i2___fladd@b+3,w,c
 53096  0161B2  2459               	addwf	i2___fladd@b+3,w,c
 53097  0161B4  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 53098                           
 53099                           ; BSR set to: 0
 53100  0161B6  BE58               	btfsc	i2___fladd@b+2,7,c
 53101                           
 53102                           ; BSR set to: 0
 53103  0161B8  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 53104                           
 53105                           ; BSR set to: 0
 53106                           
 53107                           ; BSR set to: 0
 53108  0161BA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53109  0161BC  B4D8               	btfsc	status,2,c
 53110  0161BE  D00D               	goto	i2l2706
 53111                           
 53112                           ; BSR set to: 0
 53113  0161C0  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53114  0161C2  A4D8               	btfss	status,2,c
 53115  0161C4  D008               	goto	i2l2707
 53116                           
 53117                           ; BSR set to: 0
 53118  0161C6  0E00               	movlw	0
 53119  0161C8  6E56               	movwf	i2___fladd@b,c
 53120  0161CA  0E00               	movlw	0
 53121  0161CC  6E57               	movwf	i2___fladd@b+1,c
 53122  0161CE  0E00               	movlw	0
 53123  0161D0  6E58               	movwf	i2___fladd@b+2,c
 53124  0161D2  0E00               	movlw	0
 53125  0161D4  6E59               	movwf	i2___fladd@b+3,c
 53126  0161D6                     i2l2707:
 53127                           
 53128                           ; BSR set to: 0
 53129                           
 53130                           ; BSR set to: 0
 53131  0161D6  8E58               	bsf	i2___fladd@b+2,7,c
 53132  0161D8  D006               	goto	L30
 53133  0161DA                     i2l2706:
 53134                           
 53135                           ; BSR set to: 0
 53136                           
 53137                           ; BSR set to: 0
 53138  0161DA  0E00               	movlw	0
 53139  0161DC  6E56               	movwf	i2___fladd@b,c
 53140  0161DE  0E00               	movlw	0
 53141  0161E0  6E57               	movwf	i2___fladd@b+1,c
 53142  0161E2  0E00               	movlw	0
 53143  0161E4  6E58               	movwf	i2___fladd@b+2,c
 53144  0161E6                     L30:
 53145  0161E6  0E00               	movlw	0
 53146  0161E8  6E59               	movwf	i2___fladd@b+3,c
 53147                           
 53148                           ; BSR set to: 0
 53149                           
 53150                           ; BSR set to: 0
 53151  0161EA  505D               	movf	i2___fladd@a+3,w,c
 53152  0161EC  0B80               	andlw	128
 53153  0161EE  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53154                           
 53155                           ; BSR set to: 0
 53156  0161F0  5168               	movf	i2___fladd@signs& (0+255),w,b
 53157  0161F2  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 53158  0161F4  A4D8               	btfss	status,2,c
 53159                           
 53160                           ; BSR set to: 0
 53161  0161F6  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 53162                           
 53163                           ; BSR set to: 0
 53164                           
 53165                           ; BSR set to: 0
 53166  0161F8  505D               	movf	i2___fladd@a+3,w,c
 53167  0161FA  245D               	addwf	i2___fladd@a+3,w,c
 53168  0161FC  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53169                           
 53170                           ; BSR set to: 0
 53171  0161FE  BE5C               	btfsc	i2___fladd@a+2,7,c
 53172                           
 53173                           ; BSR set to: 0
 53174  016200  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 53175                           
 53176                           ; BSR set to: 0
 53177                           
 53178                           ; BSR set to: 0
 53179  016202  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53180  016204  B4D8               	btfsc	status,2,c
 53181  016206  D00D               	goto	i2l2711
 53182                           
 53183                           ; BSR set to: 0
 53184  016208  2969               	incf	i2___fladd@aexp& (0+255),w,b
 53185  01620A  A4D8               	btfss	status,2,c
 53186  01620C  D008               	goto	i2l2712
 53187                           
 53188                           ; BSR set to: 0
 53189  01620E  0E00               	movlw	0
 53190  016210  6E5A               	movwf	i2___fladd@a,c
 53191  016212  0E00               	movlw	0
 53192  016214  6E5B               	movwf	i2___fladd@a+1,c
 53193  016216  0E00               	movlw	0
 53194  016218  6E5C               	movwf	i2___fladd@a+2,c
 53195  01621A  0E00               	movlw	0
 53196  01621C  6E5D               	movwf	i2___fladd@a+3,c
 53197  01621E                     i2l2712:
 53198                           
 53199                           ; BSR set to: 0
 53200                           
 53201                           ; BSR set to: 0
 53202  01621E  8E5C               	bsf	i2___fladd@a+2,7,c
 53203  016220  D006               	goto	L31
 53204  016222                     i2l2711:
 53205                           
 53206                           ; BSR set to: 0
 53207                           
 53208                           ; BSR set to: 0
 53209  016222  0E00               	movlw	0
 53210  016224  6E5A               	movwf	i2___fladd@a,c
 53211  016226  0E00               	movlw	0
 53212  016228  6E5B               	movwf	i2___fladd@a+1,c
 53213  01622A  0E00               	movlw	0
 53214  01622C  6E5C               	movwf	i2___fladd@a+2,c
 53215  01622E                     L31:
 53216  01622E  0E00               	movlw	0
 53217  016230  6E5D               	movwf	i2___fladd@a+3,c
 53218                           
 53219                           ; BSR set to: 0
 53220                           
 53221                           ; BSR set to: 0
 53222  016232  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53223  016234  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 53224  016236  B0D8               	btfsc	status,0,c
 53225  016238  D022               	goto	i2l2714
 53226                           
 53227                           ; BSR set to: 0
 53228  01623A  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 53229  01623C  D002               	goto	i2l2715
 53230                           
 53231                           ; BSR set to: 0
 53232  01623E  0E80               	movlw	128
 53233  016240  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 53234  016242                     i2l2715:
 53235                           
 53236                           ; BSR set to: 0
 53237                           
 53238                           ; BSR set to: 0
 53239  016242  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 53240                           
 53241                           ; BSR set to: 0
 53242  016246  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53243                           
 53244                           ; BSR set to: 0
 53245  01624A  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 53246                           
 53247                           ; BSR set to: 0
 53248  01624E  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 53249                           
 53250                           ; BSR set to: 0
 53251  016252  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 53252                           
 53253                           ; BSR set to: 0
 53254  016256  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 53255                           
 53256                           ; BSR set to: 0
 53257  01625A  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 53258                           
 53259                           ; BSR set to: 0
 53260  01625E  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 53261                           
 53262                           ; BSR set to: 0
 53263  016262  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 53264                           
 53265                           ; BSR set to: 0
 53266  016266  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 53267                           
 53268                           ; BSR set to: 0
 53269  01626A  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 53270                           
 53271                           ; BSR set to: 0
 53272  01626E  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 53273                           
 53274                           ; BSR set to: 0
 53275  016272  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 53276                           
 53277                           ; BSR set to: 0
 53278  016276  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 53279                           
 53280                           ; BSR set to: 0
 53281  01627A  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 53282  01627E                     i2l2714:
 53283                           
 53284                           ; BSR set to: 0
 53285                           
 53286                           ; BSR set to: 0
 53287  01627E  0E00               	movlw	0
 53288  016280  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53289                           
 53290                           ; BSR set to: 0
 53291  016282  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53292  016284  6F60               	movwf	??i2___fladd& (0+255),b
 53293  016286  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 53294  016288  1F60               	comf	??i2___fladd& (0+255),f,b
 53295  01628A  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53296  01628C  4B60               	infsnz	??i2___fladd& (0+255),f,b
 53297  01628E  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 53298  016290  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53299  016292  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 53300  016294  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 53301  016296  5160               	movf	??i2___fladd& (0+255),w,b
 53302  016298  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 53303  01629A  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 53304  01629C  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53305  01629E  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 53306  0162A0  D02C               	goto	i2l2718
 53307  0162A2  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 53308  0162A4  E104               	bnz	i2u1734_40
 53309  0162A6  0E1A               	movlw	26
 53310  0162A8  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 53311  0162AA  A0D8               	btfss	status,0,c
 53312  0162AC  D026               	goto	i2l2718
 53313  0162AE                     i2u1734_40:
 53314                           
 53315                           ; BSR set to: 0
 53316  0162AE  5056               	movf	i2___fladd@b,w,c
 53317  0162B0  1057               	iorwf	i2___fladd@b+1,w,c
 53318  0162B2  1058               	iorwf	i2___fladd@b+2,w,c
 53319  0162B4  1059               	iorwf	i2___fladd@b+3,w,c
 53320  0162B6  B4D8               	btfsc	status,2,c
 53321  0162B8  D002               	goto	i2u1735_40
 53322  0162BA  0E01               	movlw	1
 53323  0162BC  D001               	goto	i2u1736_40
 53324  0162BE                     i2u1735_40:
 53325  0162BE  0E00               	movlw	0
 53326  0162C0                     i2u1736_40:
 53327  0162C0  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53328                           
 53329                           ; BSR set to: 0
 53330  0162C2  0E00               	movlw	0
 53331  0162C4  6E56               	movwf	i2___fladd@b,c
 53332  0162C6  0E00               	movlw	0
 53333  0162C8  6E57               	movwf	i2___fladd@b+1,c
 53334  0162CA  0E00               	movlw	0
 53335  0162CC  6E58               	movwf	i2___fladd@b+2,c
 53336  0162CE  0E00               	movlw	0
 53337  0162D0  6E59               	movwf	i2___fladd@b+3,c
 53338                           
 53339                           ; BSR set to: 0
 53340  0162D2  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53341  0162D6  D015               	goto	i2u1739_40
 53342  0162D8                     i2l2719:
 53343                           
 53344                           ; BSR set to: 0
 53345  0162D8  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53346  0162DA  D005               	goto	i2l2720
 53347                           
 53348                           ; BSR set to: 0
 53349  0162DC  90D8               	bcf	status,0,c
 53350  0162DE  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 53351  0162E0  0901               	iorlw	1
 53352  0162E2  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53353  0162E4  D002               	goto	i2l2721
 53354  0162E6                     i2l2720:
 53355                           
 53356                           ; BSR set to: 0
 53357                           
 53358                           ; BSR set to: 0
 53359  0162E6  90D8               	bcf	status,0,c
 53360  0162E8  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53361  0162EA                     i2l2721:
 53362                           
 53363                           ; BSR set to: 0
 53364                           
 53365                           ; BSR set to: 0
 53366  0162EA  B056               	btfsc	i2___fladd@b,0,c
 53367                           
 53368                           ; BSR set to: 0
 53369  0162EC  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53370                           
 53371                           ; BSR set to: 0
 53372                           
 53373                           ; BSR set to: 0
 53374  0162EE  3459               	rlcf	i2___fladd@b+3,w,c
 53375  0162F0  3259               	rrcf	i2___fladd@b+3,f,c
 53376  0162F2  3258               	rrcf	i2___fladd@b+2,f,c
 53377  0162F4  3257               	rrcf	i2___fladd@b+1,f,c
 53378  0162F6  3256               	rrcf	i2___fladd@b,f,c
 53379                           
 53380                           ; BSR set to: 0
 53381  0162F8  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53382  0162FA                     i2l2718:
 53383                           
 53384                           ; BSR set to: 0
 53385  0162FA  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53386  0162FC  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 53387  0162FE  A0D8               	btfss	status,0,c
 53388  016300  D7EB               	goto	i2l2719
 53389  016302                     i2u1739_40:
 53390                           
 53391                           ; BSR set to: 0
 53392                           
 53393                           ; BSR set to: 0
 53394  016302  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 53395  016304  D029               	goto	i2l2724
 53396                           
 53397                           ; BSR set to: 0
 53398  016306  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53399  016308  A4D8               	btfss	status,2,c
 53400  01630A  D009               	goto	i2l2725
 53401                           
 53402                           ; BSR set to: 0
 53403  01630C  0E00               	movlw	0
 53404  01630E  6E56               	movwf	?i2___fladd,c
 53405  016310  0E00               	movlw	0
 53406  016312  6E57               	movwf	?i2___fladd+1,c
 53407  016314  0E00               	movlw	0
 53408  016316  6E58               	movwf	?i2___fladd+2,c
 53409  016318  0E00               	movlw	0
 53410  01631A  6E59               	movwf	?i2___fladd+3,c
 53411                           
 53412                           ; BSR set to: 0
 53413  01631C  0012               	return	
 53414  01631E                     i2l2725:
 53415                           
 53416                           ; BSR set to: 0
 53417                           
 53418                           ; BSR set to: 0
 53419  01631E  505A               	movf	i2___fladd@a,w,c
 53420  016320  2656               	addwf	i2___fladd@b,f,c
 53421  016322  505B               	movf	i2___fladd@a+1,w,c
 53422  016324  2257               	addwfc	i2___fladd@b+1,f,c
 53423  016326  505C               	movf	i2___fladd@a+2,w,c
 53424  016328  2258               	addwfc	i2___fladd@b+2,f,c
 53425  01632A  505D               	movf	i2___fladd@a+3,w,c
 53426  01632C  2259               	addwfc	i2___fladd@b+3,f,c
 53427                           
 53428                           ; BSR set to: 0
 53429  01632E  A059               	btfss	i2___fladd@b+3,0,c
 53430  016330  D083               	goto	i2u1752_40
 53431                           
 53432                           ; BSR set to: 0
 53433  016332  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53434  016334  D006               	goto	i2l2728
 53435                           
 53436                           ; BSR set to: 0
 53437  016336  90D8               	bcf	status,0,c
 53438  016338  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53439  01633A  516B               	movf	i2___fladd@grs& (0+255),w,b
 53440  01633C  0901               	iorlw	1
 53441  01633E  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53442  016340  D002               	goto	i2l2729
 53443  016342                     i2l2728:
 53444                           
 53445                           ; BSR set to: 0
 53446                           
 53447                           ; BSR set to: 0
 53448  016342  90D8               	bcf	status,0,c
 53449  016344  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53450  016346                     i2l2729:
 53451                           
 53452                           ; BSR set to: 0
 53453                           
 53454                           ; BSR set to: 0
 53455  016346  B056               	btfsc	i2___fladd@b,0,c
 53456                           
 53457                           ; BSR set to: 0
 53458  016348  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53459                           
 53460                           ; BSR set to: 0
 53461                           
 53462                           ; BSR set to: 0
 53463  01634A  3459               	rlcf	i2___fladd@b+3,w,c
 53464  01634C  3259               	rrcf	i2___fladd@b+3,f,c
 53465  01634E  3258               	rrcf	i2___fladd@b+2,f,c
 53466  016350  3257               	rrcf	i2___fladd@b+1,f,c
 53467  016352  3256               	rrcf	i2___fladd@b,f,c
 53468                           
 53469                           ; BSR set to: 0
 53470  016354  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53471                           
 53472                           ; BSR set to: 0
 53473  016356  D070               	goto	i2u1752_40
 53474  016358                     i2l2724:
 53475                           
 53476                           ; BSR set to: 0
 53477                           
 53478                           ; BSR set to: 0
 53479  016358  505A               	movf	i2___fladd@a,w,c
 53480  01635A  5C56               	subwf	i2___fladd@b,w,c
 53481  01635C  505B               	movf	i2___fladd@a+1,w,c
 53482  01635E  5857               	subwfb	i2___fladd@b+1,w,c
 53483  016360  505C               	movf	i2___fladd@a+2,w,c
 53484  016362  5858               	subwfb	i2___fladd@b+2,w,c
 53485  016364  5059               	movf	i2___fladd@b+3,w,c
 53486  016366  0A80               	xorlw	128
 53487  016368  6F60               	movwf	??i2___fladd& (0+255),b
 53488  01636A  505D               	movf	i2___fladd@a+3,w,c
 53489  01636C  0A80               	xorlw	128
 53490  01636E  5960               	subwfb	??i2___fladd& (0+255),w,b
 53491  016370  B0D8               	btfsc	status,0,c
 53492  016372  D036               	goto	i2l2732
 53493                           
 53494                           ; BSR set to: 0
 53495  016374  C056  F060         	movff	i2___fladd@b,??i2___fladd
 53496  016378  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 53497  01637C  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 53498  016380  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 53499  016384  1F60               	comf	??i2___fladd& (0+255),f,b
 53500  016386  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53501  016388  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 53502  01638A  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 53503  01638C  2B60               	incf	??i2___fladd& (0+255),f,b
 53504  01638E  0E00               	movlw	0
 53505  016390  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 53506  016392  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 53507  016394  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53508  016396  505A               	movf	i2___fladd@a,w,c
 53509  016398  2560               	addwf	??i2___fladd& (0+255),w,b
 53510  01639A  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 53511  01639C  505B               	movf	i2___fladd@a+1,w,c
 53512  01639E  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 53513  0163A0  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 53514  0163A2  505C               	movf	i2___fladd@a+2,w,c
 53515  0163A4  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 53516  0163A6  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 53517  0163A8  505D               	movf	i2___fladd@a+3,w,c
 53518  0163AA  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 53519  0163AC  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 53520  0163AE  0EFF               	movlw	255
 53521  0163B0  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 53522  0163B2  6E56               	movwf	i2___fladd@b,c
 53523  0163B4  0EFF               	movlw	255
 53524  0163B6  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 53525  0163B8  6E57               	movwf	i2___fladd@b+1,c
 53526  0163BA  0EFF               	movlw	255
 53527  0163BC  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 53528  0163BE  6E58               	movwf	i2___fladd@b+2,c
 53529  0163C0  0EFF               	movlw	255
 53530  0163C2  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 53531  0163C4  6E59               	movwf	i2___fladd@b+3,c
 53532  0163C6  0E80               	movlw	128
 53533  0163C8  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 53534                           
 53535                           ; BSR set to: 0
 53536  0163CA  6D6B               	negf	i2___fladd@grs& (0+255),b
 53537                           
 53538                           ; BSR set to: 0
 53539  0163CC  516B               	movf	i2___fladd@grs& (0+255),w,b
 53540  0163CE  A4D8               	btfss	status,2,c
 53541  0163D0  D00F               	goto	i2l2734
 53542                           
 53543                           ; BSR set to: 0
 53544  0163D2  0E01               	movlw	1
 53545  0163D4  2656               	addwf	i2___fladd@b,f,c
 53546  0163D6  0E00               	movlw	0
 53547  0163D8  2257               	addwfc	i2___fladd@b+1,f,c
 53548  0163DA  2258               	addwfc	i2___fladd@b+2,f,c
 53549  0163DC  2259               	addwfc	i2___fladd@b+3,f,c
 53550                           
 53551                           ; BSR set to: 0
 53552  0163DE  D008               	goto	i2l2734
 53553  0163E0                     i2l2732:
 53554                           
 53555                           ; BSR set to: 0
 53556                           
 53557                           ; BSR set to: 0
 53558  0163E0  505A               	movf	i2___fladd@a,w,c
 53559  0163E2  5E56               	subwf	i2___fladd@b,f,c
 53560  0163E4  505B               	movf	i2___fladd@a+1,w,c
 53561  0163E6  5A57               	subwfb	i2___fladd@b+1,f,c
 53562  0163E8  505C               	movf	i2___fladd@a+2,w,c
 53563  0163EA  5A58               	subwfb	i2___fladd@b+2,f,c
 53564  0163EC  505D               	movf	i2___fladd@a+3,w,c
 53565  0163EE  5A59               	subwfb	i2___fladd@b+3,f,c
 53566  0163F0                     i2l2734:
 53567                           
 53568                           ; BSR set to: 0
 53569  0163F0  5056               	movf	i2___fladd@b,w,c
 53570  0163F2  1057               	iorwf	i2___fladd@b+1,w,c
 53571  0163F4  1058               	iorwf	i2___fladd@b+2,w,c
 53572  0163F6  1059               	iorwf	i2___fladd@b+3,w,c
 53573  0163F8  A4D8               	btfss	status,2,c
 53574  0163FA  D01C               	goto	i2l2741
 53575                           
 53576                           ; BSR set to: 0
 53577  0163FC  516B               	movf	i2___fladd@grs& (0+255),w,b
 53578  0163FE  A4D8               	btfss	status,2,c
 53579  016400  D019               	goto	i2l2741
 53580                           
 53581                           ; BSR set to: 0
 53582  016402  0E00               	movlw	0
 53583  016404  6E56               	movwf	?i2___fladd,c
 53584  016406  0E00               	movlw	0
 53585  016408  6E57               	movwf	?i2___fladd+1,c
 53586  01640A  0E00               	movlw	0
 53587  01640C  6E58               	movwf	?i2___fladd+2,c
 53588  01640E  0E00               	movlw	0
 53589  016410  6E59               	movwf	?i2___fladd+3,c
 53590                           
 53591                           ; BSR set to: 0
 53592  016412  0012               	return	
 53593  016414                     
 53594                           ; BSR set to: 0
 53595                           
 53596                           ; BSR set to: 0
 53597  016414  90D8               	bcf	status,0,c
 53598  016416  3656               	rlcf	i2___fladd@b,f,c
 53599  016418  3657               	rlcf	i2___fladd@b+1,f,c
 53600  01641A  3658               	rlcf	i2___fladd@b+2,f,c
 53601  01641C  3659               	rlcf	i2___fladd@b+3,f,c
 53602                           
 53603                           ; BSR set to: 0
 53604  01641E  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 53605                           
 53606                           ; BSR set to: 0
 53607  016420  8056               	bsf	i2___fladd@b,0,c
 53608                           
 53609                           ; BSR set to: 0
 53610                           
 53611                           ; BSR set to: 0
 53612  016422  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53613  016424  D002               	goto	i2l2739
 53614                           
 53615                           ; BSR set to: 0
 53616  016426  80D8               	bsf	status,0,c
 53617  016428  D001               	goto	L32
 53618  01642A                     i2l2739:
 53619                           
 53620                           ; BSR set to: 0
 53621                           
 53622                           ; BSR set to: 0
 53623  01642A  90D8               	bcf	status,0,c
 53624  01642C                     L32:
 53625  01642C  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 53626                           
 53627                           ; BSR set to: 0
 53628                           
 53629                           ; BSR set to: 0
 53630  01642E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53631  016430  A4D8               	btfss	status,2,c
 53632                           
 53633                           ; BSR set to: 0
 53634  016432  076A               	decf	i2___fladd@bexp& (0+255),f,b
 53635  016434                     i2l2741:
 53636                           
 53637                           ; BSR set to: 0
 53638                           
 53639                           ; BSR set to: 0
 53640                           
 53641                           ; BSR set to: 0
 53642  016434  AE58               	btfss	i2___fladd@b+2,7,c
 53643  016436  D7EE               	goto	i2l2737
 53644  016438                     i2u1752_40:
 53645                           
 53646                           ; BSR set to: 0
 53647                           
 53648                           ; BSR set to: 0
 53649                           
 53650                           ; BSR set to: 0
 53651  016438  0E00               	movlw	0
 53652  01643A  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53653                           
 53654                           ; BSR set to: 0
 53655  01643C  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 53656  01643E  D00A               	goto	i2l2746
 53657                           
 53658                           ; BSR set to: 0
 53659  016440  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 53660  016444  0E7F               	movlw	127
 53661  016446  1760               	andwf	??i2___fladd& (0+255),f,b
 53662  016448  A4D8               	btfss	status,2,c
 53663  01644A  D002               	goto	i2u1755_40
 53664                           
 53665                           ; BSR set to: 0
 53666                           
 53667                           ; BSR set to: 0
 53668  01644C  A056               	btfss	i2___fladd@b,0,c
 53669  01644E  D002               	goto	i2l2746
 53670  016450                     i2u1755_40:
 53671                           
 53672                           ; BSR set to: 0
 53673  016450  0E01               	movlw	1
 53674  016452  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53675  016454                     i2l2746:
 53676                           
 53677                           ; BSR set to: 0
 53678                           
 53679                           ; BSR set to: 0
 53680                           
 53681                           ; BSR set to: 0
 53682  016454  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53683  016456  B4D8               	btfsc	status,2,c
 53684  016458  D020               	goto	i2l2749
 53685                           
 53686                           ; BSR set to: 0
 53687  01645A  0E01               	movlw	1
 53688  01645C  2656               	addwf	i2___fladd@b,f,c
 53689  01645E  0E00               	movlw	0
 53690  016460  2257               	addwfc	i2___fladd@b+1,f,c
 53691  016462  2258               	addwfc	i2___fladd@b+2,f,c
 53692  016464  2259               	addwfc	i2___fladd@b+3,f,c
 53693                           
 53694                           ; BSR set to: 0
 53695  016466  A059               	btfss	i2___fladd@b+3,0,c
 53696  016468  D018               	goto	i2l2749
 53697                           
 53698                           ; BSR set to: 0
 53699  01646A  C056  F060         	movff	i2___fladd@b,??i2___fladd
 53700  01646E  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 53701  016472  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 53702  016476  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 53703  01647A  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 53704  01647C  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 53705  01647E  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 53706  016480  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 53707  016482  3360               	rrcf	??i2___fladd& (0+255),f,b
 53708  016484  C060  F056         	movff	??i2___fladd,i2___fladd@b
 53709  016488  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 53710  01648C  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 53711  016490  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 53712  016494  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53713  016496  A4D8               	btfss	status,2,c
 53714                           
 53715                           ; BSR set to: 0
 53716  016498  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53717  01649A                     i2l2749:
 53718                           
 53719                           ; BSR set to: 0
 53720                           
 53721                           ; BSR set to: 0
 53722                           
 53723                           ; BSR set to: 0
 53724                           
 53725                           ; BSR set to: 0
 53726  01649A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53727  01649C  B4D8               	btfsc	status,2,c
 53728  01649E  D003               	goto	i2u1760_40
 53729                           
 53730                           ; BSR set to: 0
 53731  0164A0  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53732  0164A2  A4D8               	btfss	status,2,c
 53733  0164A4  D00D               	goto	i2l2753
 53734  0164A6                     i2u1760_40:
 53735                           
 53736                           ; BSR set to: 0
 53737                           
 53738                           ; BSR set to: 0
 53739  0164A6  0E00               	movlw	0
 53740  0164A8  6E56               	movwf	i2___fladd@b,c
 53741  0164AA  0E00               	movlw	0
 53742  0164AC  6E57               	movwf	i2___fladd@b+1,c
 53743  0164AE  0E00               	movlw	0
 53744  0164B0  6E58               	movwf	i2___fladd@b+2,c
 53745  0164B2  0E00               	movlw	0
 53746  0164B4  6E59               	movwf	i2___fladd@b+3,c
 53747  0164B6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53748  0164B8  A4D8               	btfss	status,2,c
 53749  0164BA  D002               	goto	i2l2753
 53750                           
 53751                           ; BSR set to: 0
 53752  0164BC  0E00               	movlw	0
 53753  0164BE  6F68               	movwf	i2___fladd@signs& (0+255),b
 53754  0164C0                     i2l2753:
 53755                           
 53756                           ; BSR set to: 0
 53757                           
 53758                           ; BSR set to: 0
 53759                           
 53760                           ; BSR set to: 0
 53761  0164C0  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 53762  0164C2  D002               	goto	i2l2754
 53763                           
 53764                           ; BSR set to: 0
 53765  0164C4  8E58               	bsf	i2___fladd@b+2,7,c
 53766  0164C6  D001               	goto	i2l2755
 53767  0164C8                     i2l2754:
 53768                           
 53769                           ; BSR set to: 0
 53770                           
 53771                           ; BSR set to: 0
 53772  0164C8  9E58               	bcf	i2___fladd@b+2,7,c
 53773  0164CA                     i2l2755:
 53774                           
 53775                           ; BSR set to: 0
 53776                           
 53777                           ; BSR set to: 0
 53778  0164CA  90D8               	bcf	status,0,c
 53779  0164CC  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 53780  0164CE  6E59               	movwf	i2___fladd@b+3,c
 53781                           
 53782                           ; BSR set to: 0
 53783  0164D0  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 53784                           
 53785                           ; BSR set to: 0
 53786  0164D2  8E59               	bsf	i2___fladd@b+3,7,c
 53787                           
 53788                           ; BSR set to: 0
 53789                           
 53790                           ; BSR set to: 0
 53791  0164D4  C056  F056         	movff	i2___fladd@b,?i2___fladd
 53792  0164D8  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 53793  0164DC  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 53794  0164E0  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 53795  0164E4  0012               	return	
 53796  0164E6                     __end_ofi2___fladd:
 53797                           	opt stack 0
 53798                           tosu	equ	0xFFF
 53799                           tosh	equ	0xFFE
 53800                           tosl	equ	0xFFD
 53801                           pclatu	equ	0xFFB
 53802                           pclath	equ	0xFFA
 53803                           tblptru	equ	0xFF8
 53804                           tblptrh	equ	0xFF7
 53805                           tblptrl	equ	0xFF6
 53806                           tablat	equ	0xFF5
 53807                           prodh	equ	0xFF4
 53808                           prodl	equ	0xFF3
 53809                           intcon	equ	0xFF2
 53810                           indf0	equ	0xFEF
 53811                           postinc0	equ	0xFEE
 53812                           fsr0h	equ	0xFEA
 53813                           fsr0l	equ	0xFE9
 53814                           wreg	equ	0xFE8
 53815                           indf1	equ	0xFE7
 53816                           postdec1	equ	0xFE5
 53817                           plusw1	equ	0xFE3
 53818                           fsr1h	equ	0xFE2
 53819                           fsr1l	equ	0xFE1
 53820                           bsr	equ	0xFE0
 53821                           indf2	equ	0xFDF
 53822                           postinc2	equ	0xFDE
 53823                           postdec2	equ	0xFDD
 53824                           plusw2	equ	0xFDB
 53825                           fsr2h	equ	0xFDA
 53826                           fsr2l	equ	0xFD9
 53827                           status	equ	0xFD8
 53828                           
 53829 ;; *************** function _abs *****************
 53830 ;; Defined at:
 53831 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 53832 ;; Parameters:    Size  Location     Type
 53833 ;;  a               2   22[BANK0 ] int 
 53834 ;; Auto vars:     Size  Location     Type
 53835 ;;		None
 53836 ;; Return value:  Size  Location     Type
 53837 ;;                  2   22[BANK0 ] int 
 53838 ;; Registers used:
 53839 ;;		wreg, status,2, status,0
 53840 ;; Tracked objects:
 53841 ;;		On entry : 0/0
 53842 ;;		On exit  : 0/0
 53843 ;;		Unchanged: 0/0
 53844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53845 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53847 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53849 ;;Total ram usage:        4 bytes
 53850 ;; Hardware stack levels used:    1
 53851 ;; This function calls:
 53852 ;;		Nothing
 53853 ;; This function is called by:
 53854 ;;		_ADCPostProcessingCallback
 53855 ;; This function uses a non-reentrant model
 53856 ;;
 53857                           
 53858                           	psect	text167
 53859  01ACF6                     __ptext167:
 53860                           	opt stack 0
 53861  01ACF6                     _abs:
 53862                           	opt stack 15
 53863                           
 53864                           ; BSR set to: 0
 53865                           ;incstack = 0
 53866  01ACF6  0100               	movlb	0	; () banked
 53867  01ACF8  AF77               	btfss	(abs@a+1)& (0+255),7,b
 53868  01ACFA  D00D               	goto	i2l2160
 53869                           
 53870                           ; BSR set to: 0
 53871  01ACFC  C076  F078         	movff	abs@a,??_abs
 53872  01AD00  C077  F079         	movff	abs@a+1,??_abs+1
 53873  01AD04  1F78               	comf	??_abs& (0+255),f,b
 53874  01AD06  1F79               	comf	(??_abs+1)& (0+255),f,b
 53875  01AD08  4B78               	infsnz	??_abs& (0+255),f,b
 53876  01AD0A  2B79               	incf	(??_abs+1)& (0+255),f,b
 53877  01AD0C  C078  F076         	movff	??_abs,?_abs
 53878  01AD10  C079  F077         	movff	??_abs+1,?_abs+1
 53879  01AD14  0012               	return	
 53880  01AD16                     i2l2160:
 53881                           
 53882                           ; BSR set to: 0
 53883  01AD16  C076  F076         	movff	abs@a,?_abs
 53884  01AD1A  C077  F077         	movff	abs@a+1,?_abs+1
 53885                           
 53886                           ; BSR set to: 0
 53887  01AD1E  0012               	return		;funcret
 53888  01AD20                     __end_of_abs:
 53889                           	opt stack 0
 53890                           tosu	equ	0xFFF
 53891                           tosh	equ	0xFFE
 53892                           tosl	equ	0xFFD
 53893                           pclatu	equ	0xFFB
 53894                           pclath	equ	0xFFA
 53895                           tblptru	equ	0xFF8
 53896                           tblptrh	equ	0xFF7
 53897                           tblptrl	equ	0xFF6
 53898                           tablat	equ	0xFF5
 53899                           prodh	equ	0xFF4
 53900                           prodl	equ	0xFF3
 53901                           intcon	equ	0xFF2
 53902                           indf0	equ	0xFEF
 53903                           postinc0	equ	0xFEE
 53904                           fsr0h	equ	0xFEA
 53905                           fsr0l	equ	0xFE9
 53906                           wreg	equ	0xFE8
 53907                           indf1	equ	0xFE7
 53908                           postdec1	equ	0xFE5
 53909                           plusw1	equ	0xFE3
 53910                           fsr1h	equ	0xFE2
 53911                           fsr1l	equ	0xFE1
 53912                           bsr	equ	0xFE0
 53913                           indf2	equ	0xFDF
 53914                           postinc2	equ	0xFDE
 53915                           postdec2	equ	0xFDD
 53916                           plusw2	equ	0xFDB
 53917                           fsr2h	equ	0xFDA
 53918                           fsr2l	equ	0xFD9
 53919                           status	equ	0xFD8
 53920                           
 53921 ;; *************** function _ADCC_StopConversion *****************
 53922 ;; Defined at:
 53923 ;;		line 165 in file "mcc_generated_files/adcc.c"
 53924 ;; Parameters:    Size  Location     Type
 53925 ;;		None
 53926 ;; Auto vars:     Size  Location     Type
 53927 ;;		None
 53928 ;; Return value:  Size  Location     Type
 53929 ;;                  1    wreg      void 
 53930 ;; Registers used:
 53931 ;;		None
 53932 ;; Tracked objects:
 53933 ;;		On entry : 0/0
 53934 ;;		On exit  : 0/0
 53935 ;;		Unchanged: 0/0
 53936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53941 ;;Total ram usage:        0 bytes
 53942 ;; Hardware stack levels used:    1
 53943 ;; This function calls:
 53944 ;;		Nothing
 53945 ;; This function is called by:
 53946 ;;		_ADCPostProcessingCallback
 53947 ;; This function uses a non-reentrant model
 53948 ;;
 53949                           
 53950                           	psect	text168
 53951  01B1EA                     __ptext168:
 53952                           	opt stack 0
 53953  01B1EA                     _ADCC_StopConversion:
 53954                           	opt stack 15
 53955                           
 53956                           ;adcc.c: 168: ADCON0bits.ADGO = 0;
 53957                           
 53958                           ; BSR set to: 0
 53959                           ;incstack = 0
 53960  01B1EA  9060               	bcf	3936,0,c	;volatile
 53961  01B1EC  0012               	return		;funcret
 53962  01B1EE                     __end_of_ADCC_StopConversion:
 53963                           	opt stack 0
 53964                           tosu	equ	0xFFF
 53965                           tosh	equ	0xFFE
 53966                           tosl	equ	0xFFD
 53967                           pclatu	equ	0xFFB
 53968                           pclath	equ	0xFFA
 53969                           tblptru	equ	0xFF8
 53970                           tblptrh	equ	0xFF7
 53971                           tblptrl	equ	0xFF6
 53972                           tablat	equ	0xFF5
 53973                           prodh	equ	0xFF4
 53974                           prodl	equ	0xFF3
 53975                           intcon	equ	0xFF2
 53976                           indf0	equ	0xFEF
 53977                           postinc0	equ	0xFEE
 53978                           fsr0h	equ	0xFEA
 53979                           fsr0l	equ	0xFE9
 53980                           wreg	equ	0xFE8
 53981                           indf1	equ	0xFE7
 53982                           postdec1	equ	0xFE5
 53983                           plusw1	equ	0xFE3
 53984                           fsr1h	equ	0xFE2
 53985                           fsr1l	equ	0xFE1
 53986                           bsr	equ	0xFE0
 53987                           indf2	equ	0xFDF
 53988                           postinc2	equ	0xFDE
 53989                           postdec2	equ	0xFDD
 53990                           plusw2	equ	0xFDB
 53991                           fsr2h	equ	0xFDA
 53992                           fsr2l	equ	0xFD9
 53993                           status	equ	0xFD8
 53994                           
 53995 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 53996 ;; Defined at:
 53997 ;;		line 219 in file "mcc_generated_files/adcc.c"
 53998 ;; Parameters:    Size  Location     Type
 53999 ;;		None
 54000 ;; Auto vars:     Size  Location     Type
 54001 ;;		None
 54002 ;; Return value:  Size  Location     Type
 54003 ;;                  1    wreg      unsigned char 
 54004 ;; Registers used:
 54005 ;;		wreg
 54006 ;; Tracked objects:
 54007 ;;		On entry : 0/0
 54008 ;;		On exit  : 0/0
 54009 ;;		Unchanged: 0/0
 54010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54015 ;;Total ram usage:        0 bytes
 54016 ;; Hardware stack levels used:    1
 54017 ;; This function calls:
 54018 ;;		Nothing
 54019 ;; This function is called by:
 54020 ;;		_ADCPostProcessingCallback
 54021 ;; This function uses a non-reentrant model
 54022 ;;
 54023                           
 54024                           	psect	text169
 54025  01B192                     __ptext169:
 54026                           	opt stack 0
 54027  01B192                     _ADCC_HasAccumulatorOverflowed:
 54028                           	opt stack 15
 54029                           
 54030                           ;adcc.c: 222: return ADSTATbits.ADAOV;
 54031                           
 54032                           ;incstack = 0
 54033  01B192  AE65               	btfss	3941,7,c	;volatile
 54034  01B194  D002               	goto	i2u1282_40
 54035  01B196  0E01               	movlw	1
 54036  01B198  0012               	return	
 54037  01B19A                     i2u1282_40:
 54038  01B19A  0E00               	movlw	0
 54039  01B19C  0012               	return	
 54040  01B19E                     __end_of_ADCC_HasAccumulatorOverflowed:
 54041                           	opt stack 0
 54042                           tosu	equ	0xFFF
 54043                           tosh	equ	0xFFE
 54044                           tosl	equ	0xFFD
 54045                           pclatu	equ	0xFFB
 54046                           pclath	equ	0xFFA
 54047                           tblptru	equ	0xFF8
 54048                           tblptrh	equ	0xFF7
 54049                           tblptrl	equ	0xFF6
 54050                           tablat	equ	0xFF5
 54051                           prodh	equ	0xFF4
 54052                           prodl	equ	0xFF3
 54053                           intcon	equ	0xFF2
 54054                           indf0	equ	0xFEF
 54055                           postinc0	equ	0xFEE
 54056                           fsr0h	equ	0xFEA
 54057                           fsr0l	equ	0xFE9
 54058                           wreg	equ	0xFE8
 54059                           indf1	equ	0xFE7
 54060                           postdec1	equ	0xFE5
 54061                           plusw1	equ	0xFE3
 54062                           fsr1h	equ	0xFE2
 54063                           fsr1l	equ	0xFE1
 54064                           bsr	equ	0xFE0
 54065                           indf2	equ	0xFDF
 54066                           postinc2	equ	0xFDE
 54067                           postdec2	equ	0xFDD
 54068                           plusw2	equ	0xFDB
 54069                           fsr2h	equ	0xFDA
 54070                           fsr2l	equ	0xFD9
 54071                           status	equ	0xFD8
 54072                           
 54073 ;; *************** function _ADCC_GetFilterValue *****************
 54074 ;; Defined at:
 54075 ;;		line 225 in file "mcc_generated_files/adcc.c"
 54076 ;; Parameters:    Size  Location     Type
 54077 ;;		None
 54078 ;; Auto vars:     Size  Location     Type
 54079 ;;		None
 54080 ;; Return value:  Size  Location     Type
 54081 ;;                  2    0[COMRAM] unsigned int 
 54082 ;; Registers used:
 54083 ;;		wreg, status,2, status,0
 54084 ;; Tracked objects:
 54085 ;;		On entry : 0/0
 54086 ;;		On exit  : 0/0
 54087 ;;		Unchanged: 0/0
 54088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54093 ;;Total ram usage:        4 bytes
 54094 ;; Hardware stack levels used:    1
 54095 ;; This function calls:
 54096 ;;		Nothing
 54097 ;; This function is called by:
 54098 ;;		_ADCPostProcessingCallback
 54099 ;; This function uses a non-reentrant model
 54100 ;;
 54101                           
 54102                           	psect	text170
 54103  01B06E                     __ptext170:
 54104                           	opt stack 0
 54105  01B06E                     _ADCC_GetFilterValue:
 54106                           	opt stack 15
 54107                           
 54108                           ;adcc.c: 228: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 54109                           
 54110                           ;incstack = 0
 54111  01B06E  5073               	movf	3955,w,c	;volatile
 54112  01B070  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 54113  01B072  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 54114  01B074  5072               	movf	3954,w,c	;volatile
 54115  01B076  2403               	addwf	??_ADCC_GetFilterValue,w,c
 54116  01B078  6E01               	movwf	?_ADCC_GetFilterValue,c
 54117  01B07A  0E00               	movlw	0
 54118  01B07C  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 54119  01B07E  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 54120  01B080  0012               	return	
 54121  01B082                     __end_of_ADCC_GetFilterValue:
 54122                           	opt stack 0
 54123                           tosu	equ	0xFFF
 54124                           tosh	equ	0xFFE
 54125                           tosl	equ	0xFFD
 54126                           pclatu	equ	0xFFB
 54127                           pclath	equ	0xFFA
 54128                           tblptru	equ	0xFF8
 54129                           tblptrh	equ	0xFF7
 54130                           tblptrl	equ	0xFF6
 54131                           tablat	equ	0xFF5
 54132                           prodh	equ	0xFF4
 54133                           prodl	equ	0xFF3
 54134                           intcon	equ	0xFF2
 54135                           indf0	equ	0xFEF
 54136                           postinc0	equ	0xFEE
 54137                           fsr0h	equ	0xFEA
 54138                           fsr0l	equ	0xFE9
 54139                           wreg	equ	0xFE8
 54140                           indf1	equ	0xFE7
 54141                           postdec1	equ	0xFE5
 54142                           plusw1	equ	0xFE3
 54143                           fsr1h	equ	0xFE2
 54144                           fsr1l	equ	0xFE1
 54145                           bsr	equ	0xFE0
 54146                           indf2	equ	0xFDF
 54147                           postinc2	equ	0xFDE
 54148                           postdec2	equ	0xFDD
 54149                           plusw2	equ	0xFDB
 54150                           fsr2h	equ	0xFDA
 54151                           fsr2l	equ	0xFD9
 54152                           status	equ	0xFD8
 54153                           
 54154 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 54155 ;; Defined at:
 54156 ;;		line 201 in file "mcc_generated_files/adcc.c"
 54157 ;; Parameters:    Size  Location     Type
 54158 ;;		None
 54159 ;; Auto vars:     Size  Location     Type
 54160 ;;		None
 54161 ;; Return value:  Size  Location     Type
 54162 ;;                  1    wreg      unsigned char 
 54163 ;; Registers used:
 54164 ;;		wreg, status,2
 54165 ;; Tracked objects:
 54166 ;;		On entry : 0/0
 54167 ;;		On exit  : 0/0
 54168 ;;		Unchanged: 0/0
 54169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54174 ;;Total ram usage:        0 bytes
 54175 ;; Hardware stack levels used:    1
 54176 ;; This function calls:
 54177 ;;		Nothing
 54178 ;; This function is called by:
 54179 ;;		_ADCPostProcessingCallback
 54180 ;; This function uses a non-reentrant model
 54181 ;;
 54182                           
 54183                           	psect	text171
 54184  01B1EE                     __ptext171:
 54185                           	opt stack 0
 54186  01B1EE                     _ADCC_GetCurrentCountofConversions:
 54187                           	opt stack 15
 54188                           
 54189                           ;adcc.c: 204: return ADCNT;
 54190                           
 54191                           ;incstack = 0
 54192  01B1EE  5067               	movf	3943,w,c	;volatile
 54193  01B1F0  0012               	return	
 54194  01B1F2                     __end_of_ADCC_GetCurrentCountofConversions:
 54195                           	opt stack 0
 54196                           tosu	equ	0xFFF
 54197                           tosh	equ	0xFFE
 54198                           tosl	equ	0xFFD
 54199                           pclatu	equ	0xFFB
 54200                           pclath	equ	0xFFA
 54201                           tblptru	equ	0xFF8
 54202                           tblptrh	equ	0xFF7
 54203                           tblptrl	equ	0xFF6
 54204                           tablat	equ	0xFF5
 54205                           prodh	equ	0xFF4
 54206                           prodl	equ	0xFF3
 54207                           intcon	equ	0xFF2
 54208                           indf0	equ	0xFEF
 54209                           postinc0	equ	0xFEE
 54210                           fsr0h	equ	0xFEA
 54211                           fsr0l	equ	0xFE9
 54212                           wreg	equ	0xFE8
 54213                           indf1	equ	0xFE7
 54214                           postdec1	equ	0xFE5
 54215                           plusw1	equ	0xFE3
 54216                           fsr1h	equ	0xFE2
 54217                           fsr1l	equ	0xFE1
 54218                           bsr	equ	0xFE0
 54219                           indf2	equ	0xFDF
 54220                           postinc2	equ	0xFDE
 54221                           postdec2	equ	0xFDD
 54222                           plusw2	equ	0xFDB
 54223                           fsr2h	equ	0xFDA
 54224                           fsr2l	equ	0xFD9
 54225                           status	equ	0xFD8
 54226                           
 54227 ;; *************** function _ADCC_GetConversionResult *****************
 54228 ;; Defined at:
 54229 ;;		line 133 in file "mcc_generated_files/adcc.c"
 54230 ;; Parameters:    Size  Location     Type
 54231 ;;		None
 54232 ;; Auto vars:     Size  Location     Type
 54233 ;;		None
 54234 ;; Return value:  Size  Location     Type
 54235 ;;                  2    0[COMRAM] unsigned int 
 54236 ;; Registers used:
 54237 ;;		wreg, status,2, status,0
 54238 ;; Tracked objects:
 54239 ;;		On entry : 0/0
 54240 ;;		On exit  : 0/0
 54241 ;;		Unchanged: 0/0
 54242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54247 ;;Total ram usage:        4 bytes
 54248 ;; Hardware stack levels used:    1
 54249 ;; This function calls:
 54250 ;;		Nothing
 54251 ;; This function is called by:
 54252 ;;		_ADCPostProcessingCallback
 54253 ;; This function uses a non-reentrant model
 54254 ;;
 54255                           
 54256                           	psect	text172
 54257  01B082                     __ptext172:
 54258                           	opt stack 0
 54259  01B082                     _ADCC_GetConversionResult:
 54260                           	opt stack 15
 54261                           
 54262                           ;adcc.c: 136: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 54263                           
 54264                           ;incstack = 0
 54265  01B082  5064               	movf	3940,w,c	;volatile
 54266  01B084  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 54267  01B086  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 54268  01B088  5063               	movf	3939,w,c	;volatile
 54269  01B08A  2403               	addwf	??_ADCC_GetConversionResult,w,c
 54270  01B08C  6E01               	movwf	?_ADCC_GetConversionResult,c
 54271  01B08E  0E00               	movlw	0
 54272  01B090  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 54273  01B092  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 54274  01B094  0012               	return	
 54275  01B096                     __end_of_ADCC_GetConversionResult:
 54276                           	opt stack 0
 54277                           tosu	equ	0xFFF
 54278                           tosh	equ	0xFFE
 54279                           tosl	equ	0xFFD
 54280                           pclatu	equ	0xFFB
 54281                           pclath	equ	0xFFA
 54282                           tblptru	equ	0xFF8
 54283                           tblptrh	equ	0xFF7
 54284                           tblptrl	equ	0xFF6
 54285                           tablat	equ	0xFF5
 54286                           prodh	equ	0xFF4
 54287                           prodl	equ	0xFF3
 54288                           intcon	equ	0xFF2
 54289                           indf0	equ	0xFEF
 54290                           postinc0	equ	0xFEE
 54291                           fsr0h	equ	0xFEA
 54292                           fsr0l	equ	0xFE9
 54293                           wreg	equ	0xFE8
 54294                           indf1	equ	0xFE7
 54295                           postdec1	equ	0xFE5
 54296                           plusw1	equ	0xFE3
 54297                           fsr1h	equ	0xFE2
 54298                           fsr1l	equ	0xFE1
 54299                           bsr	equ	0xFE0
 54300                           indf2	equ	0xFDF
 54301                           postinc2	equ	0xFDE
 54302                           postdec2	equ	0xFDD
 54303                           plusw2	equ	0xFDB
 54304                           fsr2h	equ	0xFDA
 54305                           fsr2l	equ	0xFD9
 54306                           status	equ	0xFD8
 54307                           tosu	equ	0xFFF
 54308                           tosh	equ	0xFFE
 54309                           tosl	equ	0xFFD
 54310                           pclatu	equ	0xFFB
 54311                           pclath	equ	0xFFA
 54312                           tblptru	equ	0xFF8
 54313                           tblptrh	equ	0xFF7
 54314                           tblptrl	equ	0xFF6
 54315                           tablat	equ	0xFF5
 54316                           prodh	equ	0xFF4
 54317                           prodl	equ	0xFF3
 54318                           intcon	equ	0xFF2
 54319                           indf0	equ	0xFEF
 54320                           postinc0	equ	0xFEE
 54321                           fsr0h	equ	0xFEA
 54322                           fsr0l	equ	0xFE9
 54323                           wreg	equ	0xFE8
 54324                           indf1	equ	0xFE7
 54325                           postdec1	equ	0xFE5
 54326                           plusw1	equ	0xFE3
 54327                           fsr1h	equ	0xFE2
 54328                           fsr1l	equ	0xFE1
 54329                           bsr	equ	0xFE0
 54330                           indf2	equ	0xFDF
 54331                           postinc2	equ	0xFDE
 54332                           postdec2	equ	0xFDD
 54333                           plusw2	equ	0xFDB
 54334                           fsr2h	equ	0xFDA
 54335                           fsr2l	equ	0xFD9
 54336                           status	equ	0xFD8
 54337                           
 54338                           	psect	text173
 54339  000000                     __ptext173:
 54340                           	opt stack 0
 54341                           tosu	equ	0xFFF
 54342                           tosh	equ	0xFFE
 54343                           tosl	equ	0xFFD
 54344                           pclatu	equ	0xFFB
 54345                           pclath	equ	0xFFA
 54346                           tblptru	equ	0xFF8
 54347                           tblptrh	equ	0xFF7
 54348                           tblptrl	equ	0xFF6
 54349                           tablat	equ	0xFF5
 54350                           prodh	equ	0xFF4
 54351                           prodl	equ	0xFF3
 54352                           intcon	equ	0xFF2
 54353                           indf0	equ	0xFEF
 54354                           postinc0	equ	0xFEE
 54355                           fsr0h	equ	0xFEA
 54356                           fsr0l	equ	0xFE9
 54357                           wreg	equ	0xFE8
 54358                           indf1	equ	0xFE7
 54359                           postdec1	equ	0xFE5
 54360                           plusw1	equ	0xFE3
 54361                           fsr1h	equ	0xFE2
 54362                           fsr1l	equ	0xFE1
 54363                           bsr	equ	0xFE0
 54364                           indf2	equ	0xFDF
 54365                           postinc2	equ	0xFDE
 54366                           postdec2	equ	0xFDD
 54367                           plusw2	equ	0xFDB
 54368                           fsr2h	equ	0xFDA
 54369                           fsr2l	equ	0xFD9
 54370                           status	equ	0xFD8
 54371                           
 54372                           	psect	rparam
 54373  0000                     tosu	equ	0xFFF
 54374                           tosh	equ	0xFFE
 54375                           tosl	equ	0xFFD
 54376                           pclatu	equ	0xFFB
 54377                           pclath	equ	0xFFA
 54378                           tblptru	equ	0xFF8
 54379                           tblptrh	equ	0xFF7
 54380                           tblptrl	equ	0xFF6
 54381                           tablat	equ	0xFF5
 54382                           prodh	equ	0xFF4
 54383                           prodl	equ	0xFF3
 54384                           intcon	equ	0xFF2
 54385                           indf0	equ	0xFEF
 54386                           postinc0	equ	0xFEE
 54387                           fsr0h	equ	0xFEA
 54388                           fsr0l	equ	0xFE9
 54389                           wreg	equ	0xFE8
 54390                           indf1	equ	0xFE7
 54391                           postdec1	equ	0xFE5
 54392                           plusw1	equ	0xFE3
 54393                           fsr1h	equ	0xFE2
 54394                           fsr1l	equ	0xFE1
 54395                           bsr	equ	0xFE0
 54396                           indf2	equ	0xFDF
 54397                           postinc2	equ	0xFDE
 54398                           postdec2	equ	0xFDD
 54399                           plusw2	equ	0xFDB
 54400                           fsr2h	equ	0xFDA
 54401                           fsr2l	equ	0xFD9
 54402                           status	equ	0xFD8
 54403                           
 54404                           	psect	temp
 54405  00005F                     btemp:
 54406                           	opt stack 0
 54407  00005F                     	ds	1
 54408  0000                     int$flags	set	btemp
 54409  0000                     wtemp6	set	btemp+1
 54410                           tosu	equ	0xFFF
 54411                           tosh	equ	0xFFE
 54412                           tosl	equ	0xFFD
 54413                           pclatu	equ	0xFFB
 54414                           pclath	equ	0xFFA
 54415                           tblptru	equ	0xFF8
 54416                           tblptrh	equ	0xFF7
 54417                           tblptrl	equ	0xFF6
 54418                           tablat	equ	0xFF5
 54419                           prodh	equ	0xFF4
 54420                           prodl	equ	0xFF3
 54421                           intcon	equ	0xFF2
 54422                           indf0	equ	0xFEF
 54423                           postinc0	equ	0xFEE
 54424                           fsr0h	equ	0xFEA
 54425                           fsr0l	equ	0xFE9
 54426                           wreg	equ	0xFE8
 54427                           indf1	equ	0xFE7
 54428                           postdec1	equ	0xFE5
 54429                           plusw1	equ	0xFE3
 54430                           fsr1h	equ	0xFE2
 54431                           fsr1l	equ	0xFE1
 54432                           bsr	equ	0xFE0
 54433                           indf2	equ	0xFDF
 54434                           postinc2	equ	0xFDE
 54435                           postdec2	equ	0xFDD
 54436                           plusw2	equ	0xFDB
 54437                           fsr2h	equ	0xFDA
 54438                           fsr2l	equ	0xFD9
 54439                           status	equ	0xFD8


Data Sizes:
    Strings     11594
    Constant    1038
    Data        43
    BSS         443
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    198     233
    BANK2           256     61     246
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E17311 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_128(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_128(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_128(CODE[25]), line(BANK3[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_128(CODE[25]), line(BANK3[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_170(CODE[11]), STR_163(CODE[5]), STR_161(CODE[9]), STR_159(CODE[29]), 
		 -> STR_157(CODE[34]), STR_155(CODE[33]), STR_153(CODE[29]), STR_151(CODE[17]), 
		 -> STR_149(CODE[17]), STR_147(CODE[14]), STR_145(CODE[19]), STR_143(CODE[20]), 
		 -> STR_141(CODE[11]), STR_139(CODE[17]), STR_137(CODE[14]), STR_135(CODE[16]), 
		 -> STR_126(CODE[13]), STR_122(CODE[17]), STR_119(CODE[14]), STR_117(CODE[12]), 
		 -> STR_115(CODE[16]), STR_113(CODE[17]), STR_108(CODE[15]), STR_106(CODE[13]), 
		 -> STR_104(CODE[16]), STR_102(CODE[15]), STR_100(CODE[21]), STR_98(CODE[21]), 
		 -> STR_96(CODE[26]), STR_94(CODE[14]), STR_92(CODE[13]), STR_90(CODE[18]), 
		 -> STR_88(CODE[15]), STR_86(CODE[16]), STR_84(CODE[18]), STR_78(CODE[13]), 
		 -> STR_76(CODE[17]), STR_64(CODE[12]), STR_61(CODE[10]), STR_59(CODE[13]), 
		 -> STR_57(CODE[11]), STR_54(CODE[4]), STR_53(CODE[6]), STR_51(CODE[16]), 
		 -> STR_48(CODE[6]), STR_45(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[2]), STR_42(CODE[3]), STR_41(CODE[3]), STR_40(CODE[3]), 
		 -> STR_39(CODE[3]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_175(CODE[13]), STR_174(CODE[31]), STR_173(CODE[26]), STR_172(CODE[28]), 
		 -> STR_171(CODE[426]), STR_169(CODE[30]), STR_168(CODE[46]), STR_167(CODE[39]), 
		 -> STR_166(CODE[62]), STR_165(CODE[55]), STR_164(CODE[470]), STR_162(CODE[3086]), 
		 -> STR_160(CODE[492]), STR_158(CODE[748]), STR_156(CODE[720]), STR_154(CODE[974]), 
		 -> STR_152(CODE[54]), STR_150(CODE[54]), STR_148(CODE[45]), STR_146(CODE[51]), 
		 -> STR_144(CODE[52]), STR_142(CODE[46]), STR_140(CODE[51]), STR_138(CODE[53]), 
		 -> STR_136(CODE[58]), STR_134(CODE[71]), STR_133(CODE[63]), STR_132(CODE[37]), 
		 -> STR_131(CODE[46]), STR_130(CODE[102]), STR_129(CODE[86]), STR_127(CODE[25]), 
		 -> STR_125(CODE[42]), STR_124(CODE[53]), STR_123(CODE[31]), STR_121(CODE[29]), 
		 -> STR_120(CODE[28]), STR_118(CODE[42]), STR_116(CODE[41]), STR_114(CODE[34]), 
		 -> STR_112(CODE[53]), STR_111(CODE[52]), STR_110(CODE[105]), STR_109(CODE[105]), 
		 -> STR_107(CODE[59]), STR_105(CODE[73]), STR_103(CODE[56]), STR_101(CODE[34]), 
		 -> STR_99(CODE[34]), STR_97(CODE[32]), STR_95(CODE[37]), STR_93(CODE[58]), 
		 -> STR_91(CODE[36]), STR_89(CODE[36]), STR_87(CODE[37]), STR_85(CODE[34]), 
		 -> STR_83(CODE[38]), STR_82(CODE[60]), STR_81(CODE[31]), STR_80(CODE[23]), 
		 -> STR_79(CODE[65]), STR_77(CODE[23]), STR_75(CODE[27]), STR_74(CODE[48]), 
		 -> STR_73(CODE[15]), STR_72(CODE[13]), STR_71(CODE[12]), STR_70(CODE[11]), 
		 -> STR_69(CODE[10]), STR_68(CODE[11]), STR_67(CODE[24]), STR_66(CODE[46]), 
		 -> STR_65(CODE[25]), STR_63(CODE[54]), STR_62(CODE[64]), STR_60(CODE[59]), 
		 -> STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), STR_52(CODE[52]), 
		 -> STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), STR_46(CODE[5]), 
		 -> STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(COMRAM[20]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(BANK1[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), ftoa@buf(BANK2[17]), STR_191(CODE[7]), 
		 -> _doprnt@c(BANK1[1]), STR_188(CODE[16]), STR_187(CODE[22]), STR_186(CODE[21]), 
		 -> STR_185(CODE[27]), STR_184(CODE[41]), STR_183(CODE[32]), STR_182(CODE[19]), 
		 -> STR_181(CODE[16]), STR_180(CODE[15]), STR_179(CODE[16]), STR_178(CODE[10]), 
		 -> STR_177(CODE[13]), STR_176(CODE[12]), NULL(NULL[0]), TRIAC_Firing_Angle(BANK0[4]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_193(CODE[11]), STR_175(CODE[13]), STR_174(CODE[31]), STR_173(CODE[26]), 
		 -> STR_172(CODE[28]), STR_171(CODE[426]), STR_169(CODE[30]), STR_168(CODE[46]), 
		 -> STR_167(CODE[39]), STR_166(CODE[62]), STR_165(CODE[55]), STR_164(CODE[470]), 
		 -> STR_162(CODE[3086]), STR_160(CODE[492]), STR_158(CODE[748]), STR_156(CODE[720]), 
		 -> STR_154(CODE[974]), STR_152(CODE[54]), STR_150(CODE[54]), STR_148(CODE[45]), 
		 -> STR_146(CODE[51]), STR_144(CODE[52]), STR_142(CODE[46]), STR_140(CODE[51]), 
		 -> STR_138(CODE[53]), STR_136(CODE[58]), STR_134(CODE[71]), STR_133(CODE[63]), 
		 -> STR_132(CODE[37]), STR_131(CODE[46]), STR_130(CODE[102]), STR_129(CODE[86]), 
		 -> STR_127(CODE[25]), STR_125(CODE[42]), STR_124(CODE[53]), STR_123(CODE[31]), 
		 -> STR_121(CODE[29]), STR_120(CODE[28]), STR_118(CODE[42]), STR_116(CODE[41]), 
		 -> STR_114(CODE[34]), STR_112(CODE[53]), STR_111(CODE[52]), STR_110(CODE[105]), 
		 -> STR_109(CODE[105]), STR_107(CODE[59]), STR_105(CODE[73]), STR_103(CODE[56]), 
		 -> STR_101(CODE[34]), STR_99(CODE[34]), STR_97(CODE[32]), STR_95(CODE[37]), 
		 -> STR_93(CODE[58]), STR_91(CODE[36]), STR_89(CODE[36]), STR_87(CODE[37]), 
		 -> STR_85(CODE[34]), STR_83(CODE[38]), STR_82(CODE[60]), STR_81(CODE[31]), 
		 -> STR_80(CODE[23]), STR_79(CODE[65]), STR_77(CODE[23]), STR_75(CODE[27]), 
		 -> STR_74(CODE[48]), STR_73(CODE[15]), STR_72(CODE[13]), STR_71(CODE[12]), 
		 -> STR_70(CODE[11]), STR_69(CODE[10]), STR_68(CODE[11]), STR_67(CODE[24]), 
		 -> STR_66(CODE[46]), STR_65(CODE[25]), STR_63(CODE[54]), STR_62(CODE[64]), 
		 -> STR_60(CODE[59]), STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), 
		 -> STR_52(CODE[52]), STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), 
		 -> STR_46(CODE[5]), STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[3]), STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_1(CODE[4]), 

    S3957__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S3957__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(BANK1[5]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    F17426.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    F17421.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    S3562$pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S3574$pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S3574$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), NULL(NULL[0]), 

    S3585$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    S3585$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_Write_Integer@s(COMRAM[20]), 

    OLED_Write_String@s	PTR unsigned char  size(2) Largest target is 20
		 -> ftoa@buf(BANK2[17]), STR_190(CODE[1]), STR_189(CODE[1]), OLED_Write_Integer@s(COMRAM[20]), 
		 -> STR_5(CODE[12]), STR_4(CODE[13]), STR_3(CODE[10]), STR_2(CODE[15]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_187(CODE[22]), STR_186(CODE[21]), STR_185(CODE[27]), STR_184(CODE[41]), 
		 -> STR_183(CODE[32]), STR_182(CODE[19]), STR_181(CODE[16]), STR_180(CODE[15]), 
		 -> STR_179(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_188(CODE[16]), STR_187(CODE[22]), STR_186(CODE[21]), STR_185(CODE[27]), 
		 -> STR_184(CODE[41]), STR_183(CODE[32]), STR_182(CODE[19]), STR_181(CODE[16]), 
		 -> STR_180(CODE[15]), STR_179(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR4_CallBack->_writeEnergyToEEPROMCallback
    _writeEnergyToEEPROMCallback->i2___flge
    i2_readDoubleFromEEPROM->i2_DATAEE_ReadByte
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _I2C1_ISR->_I2C1_Stop
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->__doprnt
    __doprnt->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_YX->_OLED_Command
    _OLED_Write_String->_OLED_PutChar
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C1_MasterWrite
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  818105
                                             59 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                         _OLED_Clear
                          _OLED_Init
                  _OLED_Write_String
                            _OLED_YX
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      0     0      0       0
                        _getADCError
                       _getCOMMError
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  481989
                                            195 BANK1      3     3      0
                                             53 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       41    39      2  480967
                                            191 BANK1      4     2      2
                                             16 BANK2     37    37      0
                     _TMR5_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
                     _clearADCErrors
                    _clearCOMMErrors
                        _getADCError
                       _getCOMMError
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  121618
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  121618
                                            189 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    8413
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _getCOMMError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearCOMMErrors                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1881
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3755
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              17     7     10   95125
                                            172 BANK1     17     7     10
                            __doprnt
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             43    37      6   78035
                                            130 BANK1     42    36      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                                9     5      4   13229
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13     9      4   12950
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8302
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1206
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1358
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     901
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6535
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5930
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    6705
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3279
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     307
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3426
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    1612
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1612
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     152
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1508
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_YX                                              3     2      1    2937
                                             43 BANK1      3     2      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (1) _OLED_Write_String                                    2     0      2    4165
                                             56 BANK1      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    2484
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_Command                                         4     4      0    2484
                                             39 BANK1      4     4      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _OLED_Clear                                           4     4      0    3516
                                             56 BANK1      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_PutChar                                        17    17      0    3380
                                             39 BANK1     17    17      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     6      6     791
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     0      7    2327
                                             32 BANK1      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             23 BANK1      9     2      7
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             23 BANK1      6     2      4
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  210680
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _INT0_ISR
                           _TMR4_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0    2144
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0    2144
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _writeEnergyToEEPROMCallback *
 ---------------------------------------------------------------------------------
 (16) _writeEnergyToEEPROMCallback                         4     4      0    2144
                                             63 COMRAM     4     4      0
                           i2___flge
             i2_readDoubleFromEEPROM
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_readDoubleFromEEPROM                             10     6      4     252
                                              2 COMRAM    10     6      4
                  i2_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_ReadByte                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (16) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_ISR                                            2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (15) _I2C1_Stop                                           3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _I2C1_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _HLVD_ISR                                            0     0      0     402
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_writeDoubleToEEPROM                              12     6      6     402
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   53853
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                            9     7      2   53853
                                             82 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (16) i2__doprnt                                          43    37      6   53469
                                             40 BANK0     42    36      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (17) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (18) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (17) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ThresholdISR                                   0     0      0  153627
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          21    21      0  153627
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          24    16      8   98612
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                8     4      4   46781
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               24    20      4   41537
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (19) _atan                                               21    17      4   25621
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                              12     4      8   39684
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                17    13      4   37484
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (17) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fldiv                                          25    17      8    1887
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                              10     6      4    8091
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (17) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flge                                           12     4      8    1456
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) _abs                                                 4     2      2     294
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _OLED_Clear
     _OLED_PutChar
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _OLED_Write_String
     _OLED_PutChar
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _memmove
   _OLED_YX
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _clearADCErrors
       _clearCOMMErrors
       _getADCError
       _getCOMMError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
       _terminal_textAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg *
                 ___xxtofl (ARG)
               ___flsub *
                 ___fladd
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___flneg (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
   _updateErrorLEDs
     _getADCError
     _getCOMMError

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flge *
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flsub *
           _floor (ARG)
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _writeEnergyToEEPROMCallback *
         i2___flge
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2_readDoubleFromEEPROM
           i2_DATAEE_ReadByte
         i2_writeDoubleToEEPROM
           i2_DATAEE_WriteByte
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     3D      F6      10       96.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C6      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D9       8        0.0%
DATA                 0      0     3D9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 13 10:35:00 2018

               ringBufferLUT@max_voltage_print 02B2                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
                 __end_of_readDoubleFromEEPROM A2EC               __end_of_TMR5_SetInterruptHandler B132  
                ??_writeEnergyToEEPROMCallback 0040                                   ___fldiv@sign 0149  
                  __size_ofi2_DATAEE_WriteByte 003A                                    __CFG_CP$OFF 000000  
                                           l65 AF70                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize B1C4                                             bsr 000FE0  
                          ___wmul@multiplicand 0119                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                 __end_of_heartbeatTimerCallback A870  
                                  __CFG_LVP$ON 000000                             OLED_Write_String@s 0138  
                          _saveSRAMMaxToEEPROM 788A                                            l430 A48C  
                                          l431 A484                                            l423 A576  
                                          l424 A56E                                            l433 A4A0  
                                          l434 A4C6                                            l426 A5A0  
                                          l435 A4C4                                            l837 A8DA  
                                          _PR4 000FB6                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                    i2___fladd@a 005A  
                                  i2___fladd@b 0056                     ??_INT0_SetInterruptHandler 011A  
                                          _Ipk 01CE                                            _Vpk 0238  
                                          _abs ACF6                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString A196  
                                          _sin 67EA                     currentMeasuredToPeak@Angle 009D  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                 __CFG_IDLOC0$ 000000                                     i2___xxtofl 831C  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                      ?i2_readDoubleFromEEPROM 0003                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                  _INT0_CallBack AE7A  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0168  
                             OLED_Command@temp 0127                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_ZCD$OFF 000000                               __end_of_I2C1_ISR 7D48  
                                 ___fltol@exp1 0181                                           ?_abs 0076  
                                         l2020 2098                                           l2012 1F7C  
                                         l2004 1E9C                                           l2101 2A9E  
                                         l2021 202A                                           l2102 29A2  
                                         l2030 21DC                                           l2022 2066  
                                         l2014 2018                                           l2031 220A  
                                         l2023 2090                                           l2015 1FA8  
                                         l1311 552C                                           l2104 2AB6  
                                         l2016 1FE6                                           l2008 1F0E  
                                         l1320 5646                                           l1312 5484  
                                         l2105 2A26                                           l2041 22FA  
                                         l2033 2284                                           l2017 2010  
                                         l2009 1F28                                           l1321 556E  
                                         l1313 5556                                           l1241 8590  
                                         l2106 2AF2                                           l2050 251A  
                                         l2042 2324                                           l2034 2216  
                                         l2026 20F6                                           l1322 567C  
                                         l1330 562E                                           l1314 549C  
                                         l2107 2B1C                                           l2051 2544  
                                         l2043 24D2                                           l2035 2252  
                                         l1331 576C                                           l1323 5586  
                                         l1315 54B4                                           l1172 78F0  
                                         l2044 2386                                           l2036 227C  
                                         l1340 573C                                           l1332 5694  
                                         l1324 559E                                           l1316 54CC  
                                         l1500 0552                                           l1173 7956  
                                         l2061 26F4                                           l2053 25EC  
                                         l2045 2450                                           l2029 2112  
                                         l1333 57A2                                           l1341 5754  
                                         l1325 55B6                                           l1317 54E4  
                                         l1174 79BC                                           l2062 2670  
                                         l2054 25A0                                           l2046 247E  
                                         l2038 22A8                                           l1334 56AC  
                                         l1326 55CE                                           l1318 54FC  
                                         l1510 06EC                                           l1502 05A4  
                                         l1175 7A22                                           l2055 25D2  
                                         l2039 22AC                                           l1335 56C4  
                                         l1327 55E6                                           l1319 5514  
                                         l1176 7A88                                           l2080 27BE  
                                         l2072 2726                                           l2048 254C  
                                         l1600 A14A                                           l1336 56DC  
                                         l1328 55FE                                           l1520 0886  
                                         l1512 073E                                           l1504 05F6  
                                         l2081 28B6                                           l2049 24DE  
                                         l2321 9466                                           l1337 56F4  
                                         l1329 5616                                           l2402 AC86  
                                         l2074 2746                                           l2058 2622  
                                         l2322 9428                                           l1338 570C  
                                         l1530 0A96                                           l1522 090A  
                                         l1514 0790                                           l1506 0648  
                                         l1282 8BB0                                           l2083 2812  
                                         l2075 2768                                           l2067 270A  
                                         l2059 2656                                           l2315 93D4  
                                         l1603 A154                                           l1339 5724  
                                         l1620 A314                                           l1612 A2F4  
                                         l2084 283C                                           l2068 26B2  
                                         l2324 949A                                           l2316 93CE  
                                         l1604 A15E                                           l1532 0B00  
                                         l1524 09B6                                           l1516 07E2  
                                         l1508 069A                                           l1284 8BEE  
                                         l2341 9ABA                                           l2093 28FA  
                                         l2077 278A                                           l1533 0ADC  
                                         l1285 8BD0                                           l1622 A31C  
                                         l1614 A2FC                                           l2342 9AC4  
                                         l2334 9A6C                                           l2350 9E16  
                                         l2094 2924                                           l2078 2792  
                                         l2318 9416                                           l1542 0BDA  
                                         l1526 0A00                                           l1518 0834  
                                         l2343 9AD2                                           l2335 9A7C  
                                         l2351 9E0E                                           l2087 2882  
                                         l2079 27B6                                           l1631 AC5E  
                                         l1463 006C                                           l1287 8C3C  
                                         l1704 A82E                                           l1624 A324  
                                         l1616 A304                                           l2600 A020  
                                         l2088 28AC                                           l1560 106C  
                                         l1552 0E9A                                           l1544 0E48  
                                         l1536 0B92                                           l1528 0A4E  
                                         l1288 8C0E                                           l2433 92C0  
                                         l2425 9230                                           l2601 A014  
                                         l2337 9A9A                                           l2097 2984  
                                         l1545 0C14                                           l1537 0B48  
                                         l1481 0406                                           l1473 01CE  
                                         l1465 00A8                                           l1618 A30C  
                                         l1642 A3DC                                           l2434 92B4  
                                         l2338 9A92                                           l2354 9E2E  
                                         l1570 13E6                                           l1562 10EC  
                                         l1554 0EEC                                           l1482 03E2  
                                         l1707 A21C                                           l2427 929C  
                                         l2355 9E38                                           l2347 9DF4  
                                         l1547 0CD0                                           l1539 0B6E  
                                         l1483 033A                                           l1475 0232  
                                         l1467 00FA                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l1708 A1F0                                           l2436 92DC  
                                         l2428 928C                                           l2604 A048  
                                         l2380 897C                                           l2356 9E46  
                                         l2348 9E00                                           l1580 15AE  
                                         l1572 1428                                           l1564 116C  
                                         l1556 0F6C                                           l1492 044E  
                                         l1484 0350                                           l1645 A2AA  
                                         l2605 A056                                           l2381 89BE  
                                         l1485 0366                                           l1477 02CE  
                                         l1469 0168                                           l1646 A2DA  
                                         l2390 8A50                                           l2382 89EE  
                                         l2550 AEDA                                           l1574 146A  
                                         l1566 11EC                                           l1558 0FEC  
                                         l1494 050A                                           l1486 037C  
                                         l1478 0288                                           l1671 A67C  
                                         l2711 5EE4                                           l2391 8A44  
                                         l1495 04E6                                           l1487 0392  
                                         l2720 5FA8                                           l2712 5EE0  
                                         l2384 8A2C                                           l1576 14AC  
                                         l1568 13A4                                           l1496 04AC  
                                         l1488 03A8                                           l2721 5FAC  
                                         l2385 8A1C                                           l2801 583A  
                                         l1921 701C                                           l1497 04C2  
                                         l1489 03BE                                           l1690 96E4  
                                         l2714 5F40                                           l2706 5E9C  
                                         l2378 895E                                           l2482 8706  
                                         l2802 5836                                           l1578 14EE  
                                         l2395 8CEA                                           l2715 5F04  
                                         l2707 5E98                                           l2803 584A  
                                         l1931 4FAE                                           l1828 A470  
                                         l2396 8D1E                                           l2732 60A2  
                                         l2724 601A                                           l2900 820A  
                                         l2484 8732                                           l2820 5AE6  
                                         l2804 5868                                           l1924 4D94  
                                         l1940 16FC                                           l2397 8D5C  
                                         l2741 60F6                                           l2725 5FE0  
                                         l2901 821A                                           l2485 876C  
                                         l2821 5B04                                           l1925 4C9C  
                                         l1941 16F4                                           l1846 97F2  
                                         l1694 975E                                           l2398 8D9A  
                                         l2734 60B2                                           l2718 5FBC  
                                         l2590 9B0C                                           l2910 82BA  
                                         l2902 8238                                           l2494 87F4  
                                         l2486 8794                                           l1918 6F2C  
                                         l1950 1820                           _ADCC_StartConversion B178  
                                         l1847 97DE                                           l2719 5F9A  
                                         l2591 9B00                                           l2911 82AE  
                                         l2495 87E8                                           l2815 5A60  
                                         l1935 166A                                           l1599 A168  
                                         l2728 6004                                           l2904 824A  
                                         l2488 87D0                                           l2808 5A28  
                                         l1928 4D62                                           l1936 16E0  
                                         l1849 97FE                                           l2753 6182  
                                         l2737 60D6                                           l2729 6008  
                                         l2905 823E                                           l2489 87C0  
                                         l2817 5AA4                                           l2809 5A0A  
                                         l1929 4EE8                                           l1937 16B2  
                                         l2754 618A                                           l2746 6116  
                                         l2594 9B40                                           l2818 5AC2  
                                         l1954 1AF2                                           l1970 1954  
                                         l1962 18B6                                           l1946 1758  
                                         l2770 712A                                           l2667 969C  
                                         l2755 618C                                           l2739 60EC  
                                         l2595 9B4E                                           l2915 82D8  
                                         l2907 8288                                           l1971 196A  
                                         l2763 70A4                                           l2668 9666  
                                         l2916 830A                                           l2908 8270  
                                         l1980 1A52                                           l1964 18BA  
                                         l1948 18A0                                           l2780 7234  
                                         l2772 7152                                           l2764 70A0  
                                         l1884 B056                                           l2852 A52A  
                                         l2749 615C                                           l1981 1AA2  
                                         l1965 18F2                                           l1957 18AE  
                                         l1949 1874                                           l2781 7216  
                                         l2773 7200                                           l1877 AB9A  
                                         l2861 A34A                                           l2853 A524  
                                         l1990 1C4A                                           l1974 1974  
                                         l1966 1902                                           l1958 18B2  
                                         l2790 72D4                                           l2774 71B0  
                                         l2862 A340                                           l2870 A1A0  
                                         l2950 9926                                           l1991 1CCA  
                                         l1959 1B68                                           l1983 1AB6  
                                         l1975 19B0                                           l1967 18FC  
                                         l2791 72FE                                           l2775 71D8  
                                         l2767 70E4                                           l2951 98B4  
                                         l2855 A544                                           l1984 1ADA  
                                         l1976 19DA                                           l2792 730A  
                                         l2768 70E0                                           l2952 991E  
                                         l2856 A53A                                           l2880 9FDE  
                                         l1993 1CF8                                           l1985 1AEC  
                                         l2793 730C                                           l2777 71FE  
                                         l2945 AAAA                                           l1986 2556  
                                         l1994 1D42                                           l1995 1E24  
                                         l1987 1B7E                                           l1979 19EE  
                                         l2787 726C                                           l2891 99AC  
                                         l1988 1BDC                                           l2892 9944  
                                         l2876 9FA2                                           l2797 57FA  
                                         l2789 72B0                                           l2869 A1A6  
                                         l2893 9980                                           l2877 9FD2  
                                         l2798 57F6                                           l1998 1DBE  
                                         l2799 580A                                           l2879 9FEE  
                                         ?_sin 0088                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC8                                           STR_2 FE30  
                                         STR_3 FF88                                           STR_4 FEDF  
                                         STR_5 FF1C                                           STR_6 FFB3  
                                         STR_7 FFBC                                           STR_8 EDB9  
                              __end_of_OLED_YX A9A2                                    ?_OLED_Clear 0001  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                         _T4PR 000FB6                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR4 000FB5  
                                         _TMR6 000FAF                            _writeDoubleToEEPROM A38E  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                                   __CFG_WRT0$ON 000000  
                                 __CFG_WRT1$ON 000000                                   i2___flge@ff1 0034  
                                 i2___flge@ff2 0038                                   __CFG_WRT2$ON 000000  
                                 __CFG_WRT3$ON 000000                                   __CFG_WRT4$ON 000000  
                                 __CFG_WRT5$ON 000000                                           _Irms 01CA  
                                 __CFG_WRT6$ON 000000                                   __CFG_WRT7$ON 000000  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write A47E  
              ??_ADCC_HasAccumulatorOverflowed 0001                                   __CFG_WRTB$ON 000000  
                                         _Vrms 0230                                   __CFG_WRTC$ON 000000  
                                         abs@a 0076                                           _acos 9EC0  
                                         _fabs A9DE                 ringBufferLUT@max_current_print 02AA  
                                         _atan 7F92                                           _asin 64E6  
                                         _atoi 93CC                                           _main 846C  
                         ?_saveSRAMMaxToEEPROM 0001                                    i2__doprnt@c 00B1  
                                         _line 03C0                                    i2__doprnt@f 008A  
                       OLED_Command@data_array 0129                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                         ??_I2C1_MasterTRBInsert 011B  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 6AE4                                   i2___flneg@f1 002C  
                __end_of_ADCC_ClearAccumulator B1D8                                  __CFG_BOREN$ON 000000  
                                         sin@f 0088                                           sin@y 008C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 0266  
                                 i2___fltol@f1 006C                                 _clearADCErrors AE9E  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 5460  
                 __end_of_EUSART2_Transmit_ISR AB6A                                __end_ofi2_putch B1BC  
                   ??_TMR4_SetInterruptHandler 011A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                        __end_of_updateErrorLEDs B014  
                        _dimmingOnTimeCallback B186                 I2C1_MasterWriteTRBBuild@length 011B  
            i2readDoubleFromEEPROM@output_data 0007                readDoubleFromEEPROM@output_data 011D  
                         __size_of_getADCError 0034                       __size_ofi2_EUSART2_Write 004C  
                                        ??_abs 0078                             __size_of_OLED_Init 009A  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 0268  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                                   _i2c1_state 026D                               __end_of_INT0_ISR B1B2  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0128  
                             __end_of_HLVD_ISR AAFE                 __size_of_OSCILLATOR_Initialize 001C  
                    I2C1_MasterTRBInsert@count 011C                  __end_of_OSCILLATOR_Initialize AF76  
                     ?_terminal_textAttributes 01BD                              ??_TMR7_WriteTimer 0102  
                    I2C1_MasterTRBInsert@pflag 0119                                          l22004 2216  
                                        l22102 26B6                                          l22200 2A9E  
                                        l22208 2B0E                                          l23052 0C04  
                                        l13606 8DD2                                          l23070 0CD0  
                                        l23062 0C4A                                          l22088 2674  
                                        l23320 8BA0                                          l23330 8BC6  
                                        l23068 0C80                                          l23510 A18C  
                                        l16072 A3A8                                          l21816 1974  
                                        l16304 9462                                          l21906 1D90  
                                        l21826 19EE                                          l23508 A182  
                                        l21926 1EA0                                          l21970 202A  
                                        l21958 1FA8                                          l15398 9FDE  
                                        l21898 1D42                                          l16458 72FE  
                                        l22858 0278                                          l15780 97FE  
                                        l22868 02C8                                          ?_acos 00A9  
                                        l15774 97DE                                          ?_fabs 0030  
                                        l17900 A80E                                          l15788 98B4  
                                        l17910 A828                                          l17894 A7FA  
                                ___fltol@sign1 0180                                          ?_atan 007C  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 011D                                __end_of___fladd 61A8  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 7328                                          _ADREF 000F58  
                              __end_of___awdiv 9ADC                              __end_of_I2C1_Stop A8B0  
                              __end_of___flneg AC98                                          _ADPRE 000F5E  
                                        STR_10 FFB3                                          STR_11 FFBC  
                                        STR_20 FFF1                                          STR_21 FFF9  
                                        STR_13 FFC0                                          STR_22 FFCD  
                                        STR_30 FFEA                                          STR_14 FFC4  
                                        STR_23 FFFB                                          STR_15 FFF6  
                                        STR_31 FFF0                                          STR_16 FFCD  
                                        STR_32 FFF0                                          STR_40 FFED  
                                        STR_24 FFCC                                          STR_17 FFD0  
                                        STR_33 FFFB                                          STR_41 FFF3  
                                        STR_25 FFCF                                          STR_34 FEF5  
                                        STR_18 FFE2                                          STR_42 FFF3  
                                        STR_50 FFBC                                          STR_26 FFD5  
                                        STR_19 FF90                                          STR_43 FFFD  
                                        STR_27 FFDB                                          STR_35 FFD2  
                                        STR_51 FDB5                                          STR_44 E84A  
                                        STR_28 FFE1                                          STR_36 FFD8  
                                        STR_52 F5A8                                          STR_60 F2DA  
                              __end_of___awmod 9E50                                          STR_29 FF8F  
                                        STR_45 FD7F                                          STR_37 FFDE  
                                        STR_53 FFA2                                          STR_61 FF7E  
                                        STR_46 FFB3                                          STR_38 FFE4  
                                        STR_54 FFB8                                          STR_70 FF33  
                                        STR_62 F1E1                                          STR_47 FFBC  
                                        STR_39 FFE7                                          STR_71 FEF8  
                                        STR_55 FCFE                                          STR_63 F469  
                                        STR_48 FFA8                                          STR_64 FF04  
                                        STR_72 FE84                                          STR_80 FC0C  
                                        STR_56 F6A6                                          _ADRPT 000F66  
                                        STR_49 FFB3                                          STR_57 FF49  
                                        STR_73 FDF4                                          STR_65 FBA9  
                                        STR_81 FA6E                                          STR_90 FCC9  
                                        STR_66 F6D5                                          STR_74 F676  
                                        STR_82 F29E                                          STR_58 F0BB  
                                        STR_59 FE9E                                          STR_67 FBF4  
                                        STR_75 FB74                                          STR_91 F91C  
                                        STR_83 F887                                          STR_68 FF3E  
                                        STR_92 FEAB                                          STR_76 FD64  
                                        STR_84 FCDB                                          STR_69 FF74  
                                        STR_77 FC23                                          STR_85 F986  
                                        STR_93 F38A                                          STR_78 FEB8  
                                        STR_94 FE3F                                          STR_86 FD95  
                                        STR_87 F8D2                                          STR_95 F8AD  
                                        STR_79 F1A0                                          STR_88 FE03  
                                        STR_96 FB8F                                __end_of___flmul 5B1A  
                                        STR_97 FA2F                                          STR_89 F940  
                                        STR_98 FC7A                                          STR_99 F9A8  
                              __end_of___flsub A6DC                                __end_of___fltol 92EE  
                              __end_of___lldiv 9B60                                          ?_sqrt 006C  
                                        u20115 A8EA                                          u20116 A8EC  
                              ___awdiv@divisor 011F                                          u21110 7268  
                              __end_of___llmod A068                                          u20250 98E6  
                                        u21140 72BE                                          u20180 A1C8  
                                        u21150 72E2                                          u20187 A1BE  
                                        u31100 1808                                          u20630 A2DA  
                                        u31120 1858                                          u31040 171E  
                                        u31130 1896                                          u31050 1746  
                                        u20810 99C4                                          u31107 17FE  
                                        u20660 A382                                          u31070 17A2  
                                        u31038 169C                                          u31127 184E  
                                        u31047 1714                                          _T5CLK 000FC6  
                                        u17000 5856                                          u32040 28BE  
                                        u31160 1930                                          u31080 17DE  
                                        u20760 AB96                                          _T4CON 000FB7  
                                        u31137 188C                                          u31057 173C  
                                        u20681 A140                                          u17010 59CC  
                                        u32130 2B2E                                          u31410 1D90  
                                        u31170 1936                                          u31090 17E6  
                                        u17100 5AD0                                          u32140 2B5E  
                                        u32108 296E                                          u32028 286C  
                                        u31260 1A48                                          u31228 199A  
                                        u20780 B052                                          u31077 1798  
                                        u32150 2B6A                                          u32070 2934  
                                        u31270 1A8C                                          u17015 59C2  
                                        u31167 1926                                          u31087 17D4  
                                        u20695 A91A                                          u23280 96E0  
                                        u18000 87FA                                          u32128 2ADC  
                                        _T5CON 000FC3                                          u17210 9E1A  
                                        u31450 1EDE                                          u31370 1D08  
                                        u31290 1B22                                          u31258 1A14  
                                        u32147 2B54                                          u31267 1A3E  
                                        u31259 1A4A                                          u17060 5A5C  
                                        u32068 28E4                                          u31380 1D54  
                                        u31277 1A82                                          u23630 A828  
                                        u17150 9A9E                                          u31518 1F66  
                                        _T7CLK 000F33                                          u31608 20E0  
                                        _T6CON 000FB1                                          u31297 1B18  
                                        u18210 92C6                                          u17090 5AB2  
                                        u31570 20A6                                          u31538 1FD0  
                                        u23660 A212                                          u31708 22E4  
                                        u31660 2292                                          u31628 21C4  
                                        _T4HLT 000FB8                                          u23670 A23E  
                                        u16630 5F70                                          u18070 8A56  
                                        u31670 22A2                                 __CFG_DEBUG$OFF 000000  
                                        u23655 A98C                                          u16640 5F80  
                                        u18240 9B10                                          u31728 2438  
                                        u31568 2050                                          u33440 02C8  
                                        _T7CON 000F30                                          u16810 60FA  
                                        u16650 5F82                                          u18170 924E  
                                        u31658 223C                                          u23667 A208  
                                        u23677 A234                                          u18270 A024  
                                        u18350 82C4                                          u31758 2504  
                                        u33390 0138                                          u34190 8BC6  
                                        u18175 9244                                          u16840 6112  
                                        u16680 5FC4                                          _T6HLT 000FB2  
                                        u33840 0C4A                                          u17921 86EA  
                   _ADCC_ADTI_InterruptHandler 0250                                          u16890 6168  
                                        u33850 0C72                 __end_ofi2_readDoubleFromEEPROM A51A  
                                        u33860 0C80                                          u17941 8716  
                                        u31998 27FC                                          u34487 8480  
                                        i1l271 00A6                                          i1l267 007C  
                                        _T4TMR 000FB5                                          i1l445 AB64  
                                        i1l269 009C                                          i1l446 AB60  
                                        i2l250 9076                                          _T4RST 000FBA  
                                        i2l260 90C4                                          i2l252 9082  
                                        i2l430 A60A                                          i2l254 908E  
                                        i2l246 905E                                          i2l431 A602  
                                        i2l256 90AE                                          i2l248 906A  
                                        i2l433 A61E                                          i2l434 A644  
                                        i2l258 90BA                                          i2l435 A642  
                                        i2l451 9580                                          i2l452 95A2  
                                        _T6TMR 000FAF                                          i2l453 95C4  
                                        i2l456 95C8                                          i1l688 ADD6  
                                        i2l458 9618                                          _T6RST 000FB4  
                                        i2l762 AFA4                                          i2l837 AA7C  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 8A68                                __end_of__doprnt 2B74  
                                        _TRISA 000F81                                          _TRISB 000F82  
                               ?_INT0_CallBack 0001                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a D291  
                           __end_ofsin@coeff_b D2B5                   __end_of_I2C1_BusCollisionISR B1DE  
                              _TMR4_Initialize AC98                                          _Imeas 0234  
                                __CFG_PWRTE$ON 000000                                  i2___fladd@grs 006B  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                              ??_I2C1_Initialize 0117  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                               __end_of_TMR4_ISR AE0A  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR AC06  
                             __end_of_TMR6_ISR AD70                               __end_of_TMR7_ISR ABD2  
                              _DATAEE_ReadByte AFC8                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01C3  
                              __end_of_dpowers CF37                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 8EF6          i2writeDoubleToEEPROM@starting_address 0009  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 9D64  
                                        _errno 025C                                   i2__doprnt@ap 008C  
                                 i2__doprnt@cp 0099                          ?_ADCC_StartConversion 0001  
                                 i2__doprnt@pb 0088                                          _scale 4B3C  
                              __end_of_isdigit AEE2                                          atan@f 007C  
                              __end_of_memmove 96CE                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch B05A                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 8EF6                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address CF5F  
                _max_POS3P3_ADC_Result_address CF5D                               __end_ofi2___wmul AE30  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                         __end_of_clearADCErrors AEC0  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 9942                                __end_of_strncpy A000  
                             __end_ofi2_fround 788A                 ?_INTERRUPT_InterruptManagerLow 0001  
                  ringBufferLUT@max_temp_print 02BA                             __size_ofi2___fladd 033E  
                           __size_ofi2___fldiv 02B4                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___flmul 0350  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf A9DE  
              I2C1_MasterWriteTRBBuild@address 011C                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler B15C  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler B14E  
                              _TMR5_Initialize A3DE                                 __CFG_CSWEN$OFF 000000  
                           __size_ofi2__doprnt 1504                                __initialization 99CE  
                           OLED_Command@length 0128                          I2C1_MasterWrite@pdata 0120  
                            i2___lldiv@divisor 0005                          I2C1_MasterWrite@pflag 0125  
                                 __end_of_acos 9F2E                                   __end_of_fabs AA1A  
                                 __end_of_atan 81C8                                   __end_of_asin 67EA  
                                 __end_of_atoi 94A4                                   __end_of_main 85A2  
                            i2___lldiv@counter 000D                               _max_Irms_address CF61  
                                 __end_of_sqrt 6DAC                                     i2printf@ap 00B4  
                                   i2printf@pb 00B6                          ??_writeDoubleToEEPROM 0121  
                        __end_of_ringBufferLUT 1666                                 __CFG_SCANE$OFF 000000  
                        _max_POS3P3_ADC_Result 021C                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont D265                            __size_of_OLED_Clear 0040  
                                       ??_acos 005E                                         ??_fabs 0034  
                                  _i2c1_object 0209                                         ??_atan 005E  
                                       ??_asin 005E                                         ??_atoi 011F  
                                       ??_main 02CE               __end_of_recoverSRAMMaxFromEEPROM 86D8  
                     _TMR5_SetInterruptHandler B124                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0124                                      ??_OLED_YX 012C  
                              _TMR6_Initialize AC06                             _TRIAC_Firing_Angle 00F2  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize A0D0                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01DF  
                                       ?_floor 0076                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 016F                                         STR_100 FC65  
                                       _ADLTHL 000F6A                                         STR_101 F9CA  
                                       STR_102 FE12                                         STR_110 EF96  
                                       STR_111 F574                                         STR_103 F3C4  
                                       STR_104 FDC5                                         STR_120 FB3D  
                                       STR_112 F4D5                                         STR_113 FD42  
                                       STR_121 FACA                                         STR_105 F110  
                                       STR_106 FED2                                         STR_122 FD0F  
                                       STR_114 F964                                         STR_130 EFFF  
                                       _ADRESH 000F64                                         STR_115 FDD5  
                                       STR_123 FA4F                                         STR_131 F731  
                                       STR_107 F315                                         STR_108 FE21  
                                       STR_132 F8F7                                         STR_116 F837  
                                       STR_140 F610                                         STR_124 F50A  
                                       STR_141 FF54                                         STR_117 FF10  
                                       STR_125 F7E4                                         STR_133 F221  
                                       STR_109 EF2D                                         STR_126 FEC5  
                                       STR_118 F7BA                                         STR_142 F75F  
                                       STR_150 F49F                                         STR_134 F159  
                                       _ADRESL 000F63                                         STR_119 FE4D  
                                       STR_135 FDA5                                         STR_151 FD53  
                                       STR_143 FC8F                                         STR_127 FBC2  
                                       STR_128 FBDB                                         STR_144 F5DC  
                                       STR_152 F433                                         STR_136 F350  
                                       STR_160 E84D                                         STR_161 FF92  
                                       STR_137 FE5B                                         STR_145 FCB6  
                                       STR_153 FAE7                                         STR_129 F065  
                                       STR_170 FF5F                                         STR_146 F643  
                                       STR_138 F53F                                         STR_154 DEC3  
                                       STR_162 D2B5                                         STR_163 FFAE  
                                       STR_147 FE69                                         STR_139 FD31  
                                       STR_155 FA0E                                         STR_171 EC0F  
                                       STR_172 FB21                                         STR_148 F78D  
                                       STR_164 EA39                                         STR_156 E57D  
                                       STR_180 FDE5                                         STR_173 F6BB  
                                       STR_149 FD20                                         STR_157 F9EC  
                                       STR_165 F3FC                                         STR_181 FD85  
                                       STR_174 FA8D                                         STR_166 F260  
                                       STR_158 E291                                         STR_182 FCA3  
                                       STR_191 FF9B                                         STR_175 FE91  
                                       STR_159 FB04                                         STR_167 F860  
                                       STR_183 F817                                         STR_192 FCED  
                                       STR_168 F703                                         STR_176 FEEC  
                                       STR_184 F80E                                         STR_193 FF28  
                                       STR_169 FAAC                                         STR_177 FE77  
                                       STR_185 FB59                                         STR_178 FF6A  
                                       STR_186 FC50                                         STR_187 FC3A  
                                       STR_179 FD75                                         STR_188 FD75  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                 __end_of_Total_Energy_address CF65                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM A29A                              __end_of_OLED_Init 98B2  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       i1l1184 A86C                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _RC6PPS 000E68                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       _RC7PPS 000E69                                         i2l1200 42D0  
                                       i2l1210 481C                                         i2l1203 42D6  
                                       i2l1204 4648                                         i2l2020 35A2  
                                       i2l2012 3486                                         i2l2004 33A6  
                                       i2l1221 4AE0                                         i2l1213 4820  
                                       i2l1205 451A                                         i2l2101 3FA2  
                                       i2l2021 3534                                         i2l1222 4B2A  
                                       i2l1214 48FC                                         i2l1206 4432  
                                       i2l2102 3EA8                                         i2l2030 36E4  
                                       i2l2022 3570                                         i2l2014 3522  
                                       i2l2031 3712                                         i2l2023 359A  
                                       i2l2015 34B2                                         i2l1208 4572  
                                       i2l2104 3FBA                                         i2l2016 34F0  
                                       i2l2008 3418                                         i2l1217 4900  
                                       i2l2105 3F2A                                         i2l2041 3802  
                                       i2l2033 378C                                         i2l2017 351A  
                                       i2l2009 3432                                         i2l1218 4AD8  
                                       i2l2106 3FF6                                         i2l2050 3A20  
                                       i2l2042 382C                                         i2l2034 371E  
                                       i2l2026 3600                                         i2l2107 4020  
                                       i2l2051 3A4A                                         i2l2043 39D8  
                                       i2l2035 375A                                         i2l2044 388E  
                                       i2l2036 3784                                         i2l2061 3BFA  
                                       i2l2053 3AF2                                         i2l2045 3956  
                                       i2l2029 361C                                         i2l1190 4108  
                                       i2l2062 3B76                                         i2l2054 3AA6  
                                       i2l2046 3984                                         i2l2038 37B0  
                                       i2l2055 3AD8                                         i2l2039 37B4  
                                       i2l2160 AD16                                         i2l2080 3CC4  
                                       i2l2072 3C2C                                         i2l2048 3A52  
                                       i2l2081 3DBC                                         i2l2049 39E4  
                                       i2l2402 ACE4                                         i2l1194 4B1A  
                                       i2l2074 3C4C                                         i2l2058 3B28  
                                       i2l1195 410E                                         i2l2083 3D18  
                                       i2l2075 3C6E                                         i2l2067 3C10  
                                       i2l2059 3B5C                                         i2l2260 6668  
                                       i2l1188 4AE8                                         i2l1196 4212  
                                       i2l2084 3D42                                         i2l2068 3BB8  
                                       i2l2261 6748                                         i2l1189 4084  
                                       i2l2341 9BC2                                         i2l2093 3E00  
                                       i2l2077 3C90                                         i2l2342 9BCC  
                                       i2l2334 9B74                                         i2l2350 9E86  
                                       i2l2094 3E2A                                         i2l2078 3C98  
                                       i2l1199 4218                                         i2l2343 9BDA  
                                       i2l2335 9B84                                         i2l2351 9E7E  
                                       i2l2087 3D88                                         i2l2079 3CBC  
                                       i2l2280 818A                                         i2l2600 A0EE  
                                       i2l2088 3DB2                                         i2l2433 939E  
                                       i2l2425 930E                                         i2l2601 A0E2  
                                       i2l2337 9BA2                                         i2l2097 3E8A  
                                       i2l1801 7C90                                         i2l2434 9392  
                                       i2l2282 81A2                                         i2l2258 6540  
                                       i2l2338 9B9A                                         i2l2354 9E9E  
                                       i2l1642 A5FC                                         i2l1810 7CE2  
                                       i2l1802 7C88                                         i2l2427 937A  
                                       i2l2355 9EA8                                         i2l2347 9E64  
                                       i2l1811 7CE8                                         i2l2436 93BA  
                                       i2l2428 936A                                         i2l2700 69AC  
                                       i2l2604 A116                                         i2l2380 8AA4  
                                       i2l2356 9EB6                                         i2l2348 9E70  
                                       i2l1812 7CEC                                         i2l2701 6AD2  
                                       i2l2277 7FD6                                         i2l2605 A124  
                                       i2l2381 8AE6                                         i2l1805 7CA2  
                                       i2l1645 A4DA                                         i2l2374 AA08  
                                       i2l2390 8B78                                         i2l2382 8B16  
                                       i2l2550 AF36                                         i2l1822 A8AA  
                                       i2l1814 7CF4                                         i2l1806 7CB2  
                                       i2l1646 A508                                         i2l2711 6222  
                                       i2l2279 8042                                         i2l2391 8B6C  
                                       i2l2720 62E6                                         i2l2712 621E  
                                       i2l2368 91F4                                         i2l2384 8B54  
                                       i2l1808 7CBA                                         i2l2721 62EA  
                                       i2l2801 5B8A                                         i2l2369 915C  
                                       i2l2385 8B44                                         i2l1921 7836  
                                       i2l1817 AFF6                                         i2l1809 7CC2  
                                       i2l2714 627E                                         i2l2706 61DA  
                                       i2l2802 5B86                                         i2l2378 8A86  
                                       i2l2482 8838                                         i2l2715 6242  
                                       i2l2707 61D6                                         i2l2803 5B9A  
                                       i2l2395 8E0A                                         i2l1931 5430  
                                       i2l2732 63E0                                         i2l2724 6358  
                                       i2l2820 5E36                                         i2l2804 5BB8  
                                       i2l2396 8E3E                                         i2l2900 835A  
                                       i2l2484 8864                                         i2l1924 5224  
                                       i2l1940 2C0A                                         i2l2741 6434  
                                       i2l2725 631E                                         i2l2821 5E54  
                                       i2l2397 8E7C                                         i2l2901 836A  
                                       i2l2485 889E                                         i2l1925 5134  
                                       i2l1941 2C02                                         i2l1781 7B8C  
                                       i2l2734 63F0                                         i2l2718 62FA  
                                       i2l2398 8EBA                                         i2l2910 840A  
                                       i2l2902 8388                                         i2l2830 6B36  
                                       i2l2590 9C94                                         i2l2494 8926  
                                       i2l2486 88C6                                         i2l1918 774E  
                                       i2l1950 2D2C                                         i2l1790 7C06  
                                       i2l1782 7B94                                         i2l2719 62D8  
                                       i2l2815 5DB0                                         i2l2911 83FE  
                                       i2l2831 6B50                                         i2l2591 9C88  
                                       i2l2495 891A                                         i2l1935 2B78  
                                       i2l1775 7D00                                         i2l1783 7BA2  
                                       i2l2728 6342                                         i2l2808 5D78  
                                       i2l2904 839A                                         i2l2488 8902  
                                       i2l1928 51F4                                         i2l1936 2BEE  
                                       i2l1792 7C40                                         i2l1776 7B2A  
                                       i2l2753 64C0                                         i2l2737 6414  
                                       i2l2729 6346                                         i2l2817 5DF4  
                                       i2l2809 5D5A                                         i2l2905 838E  
                                       i2l2921 8F40                                         i2l2841 6D72  
                                       i2l2833 6B8A                                         i2l2489 88F2  
                                       i2l1929 5370                                         i2l1937 2BC0  
                                       i2l1785 7BBE                                         i2l2754 64C8  
                                       i2l2746 6454                                         i2l2818 5E12  
                                       i2l2930 9D82                                         i2l2922 8F2E  
                                       i2l2770 73DE                                         i2l2834 6BB6  
                                       i2l2594 9CC8                                         i2l1954 2FFC  
                                       i2l1970 2E5E                                         i2l1962 2DC0  
                                       i2l1946 2C66                                         i2l1778 7B74  
                                       i2l2755 64CA                                         i2l2739 642A  
                                       i2l2915 8428                                         i2l2907 83D8  
                                       i2l2763 7358                                         i2l2835 6C14  
                                       i2l2595 9CD6                                         i2l1971 2E74  
                                       i2l1787 7BC6                                         i2l1779 7B84  
                                       i2l2916 845A                                         i2l2908 83C0  
                                       i2l2924 8F5E                                         i2l2780 74E8  
                                       i2l2772 7406                                         i2l2764 7354  
                                       i2l2836 6CBE                                         i2l2828 6B26  
                                       i2l1980 2F5C                                         i2l1964 2DC4  
                                       i2l1948 2DAA                                         i2l1796 7C52  
                                       i2l1788 7BD4                                         i2l2749 649A  
                                       i2l2925 8FF6                                         i2l2781 74CA  
                                       i2l2773 74B4                                         i2l2837 6C1A  
                                       i2l1981 2FAC                                         i2l1965 2DFC  
                                       i2l1957 2DB8                                         i2l1949 2D7E  
                                       i2l2790 7588                                         i2l2774 7464  
                                       i2l2838 6C60                                         i2l1990 3152  
                                       i2l1974 2E7E                                         i2l1966 2E0C  
                                       i2l1958 2DBC                                         i2l1798 7C5A  
                                       i2l2791 75B2                                         i2l2775 748C  
                                       i2l2767 7398                                         i2l2839 6C88  
                                       i2l1991 31D0                                         i2l1959 3072  
                                       i2l1983 2FC0                                         i2l1975 2EBA  
                                       i2l1967 2E06                                         i2l1799 7C6A  
                                       i2l2792 75BE                                         i2l2768 7394  
                                       i2l1984 2FE4                                         i2l1976 2EE4  
                                       i2l2793 75C0                                         i2l2777 74B2  
                                       i2l1993 31FE                                         i2l1985 2FF6  
                                       i2l2698 681E                                         i2l1986 3A5C  
                                       i2l1994 324A                                         i2l2787 7520  
                                       i2l2699 693C                                         i2l1995 332E  
                                       i2l1987 3088                                         i2l1979 2EF8  
                                       i2l1988 30E6                                         i2l2797 5B4A  
                                       i2l2789 7564                                         i2l2798 5B46  
                                       i2l1998 32C6                                         i2l2799 5B5A  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                       i2l9730 75B2                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                          __size_of_getCOMMError 0016  
                                       _SBOREN 00725F                                         _OSCFRQ 000E49  
                                ?_OLED_Command 0001                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                              ?_clearADCErrors 0001                               __end_of___xxtofl 831C  
        __end_of_ADCC_DischargeSampleCapacitor B1CC         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor B1C4                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                              ?_I2C1_MasterWrite 0120  
                              _clearCOMMErrors B0FA                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A                                  ?_OLED_PutChar 0001  
                       ?_dimmingOnTimeCallback 0001          __end_of_ADCC_HasAccumulatorOverflowed B19E  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed B192  
                               __CFG_XINST$OFF 000000                                   __doprnt$5165 018E  
                              _TMR7_Initialize A246                             ??_I2C1_MasterWrite 0127  
                                 i2_scale$5408 004D                               __end_of__powers_ CEDB  
                               _p_i2c1_current 0260                __end_of_terminal_ringBufferPull 8CB4  
                                       ___flge 8CB4                               ?_updateErrorLEDs 0001  
                            _ADCC_ThresholdISR AD70                                      ??___fladd 0131  
                                       ___wmul AD20                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                     ??_I2C1_MasterWriteTRBBuild 011E  
                                    ??__doprnt 0188                             ?_ADCC_ThresholdISR 0001  
     writeEnergyToEEPROMCallback@current_value 0040                        __end_of_TMR4_Initialize ACC8  
                     ??_terminal_setCursorHome 01BD                                  i2__doprnt@idx 0098  
                                       _fround 6DAC                                  i2__doprnt@len 009B  
                                    ?_I2C1_ISR 0001                                  i2__doprnt@exp 009D  
                                i2__doprnt@val 00A7                                         clear_0 9A16  
                                       clear_1 9A28                                         clear_2 9A34  
                         _eusart2RxStringReady 07D8                               ___awdiv@quotient 0123  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0119                                 i2___fldiv@sign 001F  
                                 __doprnt@flag 01A7                                ___awmod@counter 011B  
                                       _printf A92A                                   __doprnt@fval 019D  
                              ??_INT0_CallBack 0003                                   __doprnt@prec 01A9  
                                       _strcat A51A                                         _strchr AA8E  
                      __end_of_DATAEE_ReadByte AFE2                                         _strcmp A33E  
                                       _strlen A196                                 i2___awdiv@sign 000C  
                                       _strstr 9942                                         floor@i 007A  
                                       floor@x 0076                   getCauseOfResetString@strings 02D0  
                             _background_color 026F                                _TMR5_StartTimer B1E6  
                              _ADCC_Initialize 9F2E                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 4078           __end_of_TMR4_DefaultInterruptHandler B1FA  
        __size_of_TMR4_DefaultInterruptHandler 0002                   _TMR4_DefaultInterruptHandler B1F8  
                               _PMD_Initialize AF3E                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 64E6                                      ??_isdigit 0117  
                                    ??_memmove 011D                              __end_ofi2___fldiv 75DC  
                            __end_ofi2___awdiv 9BE4                              __end_ofi2___flneg ACF6  
                            __end_ofi2___awmod 9EC0                              __end_ofi2___flmul 5E6A  
                            __end_ofi2___flsub A724                              __end_ofi2___fltol 93CC  
                      ??i2_writeDoubleToEEPROM 000B                              __end_ofi2___lldiv 9CE8  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod A136                                   __mediumconst CEA6  
                                 _getCOMMError B044                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion B1EA                           _EUSART2_Transmit_ISR AB34  
                            __end_ofi2__doprnt 4078                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 0117  
     TMR4_SetInterruptHandler@InterruptHandler 0117       INT0_SetInterruptHandler@InterruptHandler 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 00B5                  I2C1_MasterWriteTRBBuild@pdata 0119  
                        ?_readDoubleFromEEPROM 0119                                 i2___flmul@aexp 003D  
                               i2___flmul@bexp 0042                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 01BD  
                               i2___flmul@sign 003C                                 i2___flmul@temp 0047  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 001C  
                              _eusart2RxBuffer 0380                                     ___flge@ff1 0117  
                                   ___flge@ff2 011B                                 ??_OLED_Command 0127  
                      __end_of_TMR5_Initialize A42E                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit AF3E                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize AA1A                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler B1F4          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler B1F2                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 9A4C  
                               i2___fltol@exp1 0075                                      ?_INT0_ISR 0001  
                                   ___flneg@f1 0125                                      ?_HLVD_ISR 0001  
                           ?_SYSTEM_Initialize 0001                      __size_ofi2_TMR5_StopTimer 0004  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
    __end_of_ADCC_GetCurrentCountofConversions B1F2     __size_of_ADCC_GetCurrentCountofConversions 0004  
          ??_ADCC_GetCurrentCountofConversions 0001             ?_ADCC_GetCurrentCountofConversions 0001  
            _ADCC_GetCurrentCountofConversions B1EE                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer AF92                                 ??_OLED_PutChar 0127  
                               _i2c1_trb_count 026C                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR AD98                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 02C8                            __size_ofi2___xxtofl 0150  
                        _I2C1_FunctionComplete AFE2                           _I2C1_BusCollisionISR B1D8  
                   __end_of_getMajorRevisionID A92A                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01BD  
                        __end_of_TMR4_CallBack AE7A                         I2C1_MasterWrite@length 0122  
                                 __pidataBANK0 B1CC                                   __pidataBANK2 AE30  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR4_ISR 0001  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                               _DATAEE_WriteByte A8B0  
                                __end_of_floor 9008                                  __end_of_frexp 9DDE  
                                __end_of_scale 4FE0                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch B06E                              ??_HLVD_Initialize 0117  
                                   ??_I2C1_ISR 0004                       ??_terminal_clearTerminal 01BD  
                      __end_of_TMR6_Initialize AC38                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize AF5A                          _getCauseOfResetString AC38  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read A5B2  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 880C  
                  __size_of_EXT_INT_Initialize 001E                                     __div_to_l_ 893E  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                ?_TMR4_DefaultInterruptHandler 0001                                      ?i2_printf 00B2  
                  ADCC_StartConversion@channel 0100                                     __doprnt@ap 0186  
                                   __doprnt@cp 0193                                     __doprnt@pb 0182  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize AA54  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                      __end_of_clearCOMMErrors B108                                   ??_OLED_Clear 0138  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E1  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01C6  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01DE                                  _eusart2TxTail 01E0  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize A29A  
                           __size_of_peakToRMS 024A                          _INT0_InterruptHandler 0247  
                                   ??_INT0_ISR 0003                                     ??_HLVD_ISR 0011  
            __size_of_recoverSRAMMaxFromEEPROM 0136                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                          _TMR4_InterruptHandler 0244  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer ADBE  
                        ??_ADCC_StopConversion 0001                          ?_I2C1_BusCollisionISR 0001  
                             ??_FVR_Initialize 0117                     __end_ofi2_DATAEE_WriteByte AA8E  
                                _error_handler 0200                          ringBufferLUT@arg_buff 02A3  
                               _peakToRMS$5393 00C1                                 _peakToRMS$5394 00B9  
                               _peakToRMS$5395 00BD                                    _Irms_offset 02E8  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2951 02CA                                        ?___wmul 0117  
                        _currentMeasuredToPeak 9CE8                        __end_of_TMR5_StartTimer B1EA  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler B124  
                                   ??_TMR4_ISR 0044                        __end_of_ADCC_Initialize 9F98  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                _I2C1_Initialize AAFE  
               ?_ADCC_HasAccumulatorOverflowed 0001                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                   ringBufferLUT@max_Power_print 02AE  
                         _Total_Energy_address CF63                                        ?_fround 016F  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler B178          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler B16A                               ?_TMR4_Initialize 0001  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 01AC  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue B06E  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                           __end_of_OLED_Clear A830                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte AFAE  
          ringBufferLUT@max_voltage_print_3300 02BE            ringBufferLUT@max_voltage_print_3294 02B6  
                                      ?_strstr 0126                               ?_DATAEE_ReadByte 0117  
                                   ??i2___wmul 0005                                 _FLASH_ReadWord A7AE  
                                      u2043_41 881C                                        u2045_41 8848  
                                      _INT0PPS 000DF0                                        i2l13610 8EF2  
                                      i2l10958 A5CA                                        i2l22520 34B2  
                                      i2l22532 3534                                        i2l22460 324A  
                                      i2l22650 3B7A                                        i2l22378 2E7E  
                                      i2l22468 3298                                        i2l22388 2EF8  
                                      i2l22566 371E                                        i2l22664 3BBC  
                                      i2l22488 33AA                                        i2l22770 4012  
                                      i2l22762 3FA2                                        i2l12998 7B74  
            i2writeDoubleToEEPROM@input_double 0005                writeDoubleToEEPROM@input_double 011B  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OLED_YX A966                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 9620  
                                    _I2C1_Stop A870                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 005E                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                         ??_readDoubleFromEEPROM 011D  
                                      _SSP1ADD 000F92                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                                        _SSP1BUF 000F91  
          __end_of_max_Temp_ADC_Result_address CF5B                    _max_Temp_ADC_Result_address CF59  
                     _acquisitionTimerCallback B0A8                       __end_of_max_Irms_address CF63  
                      __end_of_TMR5_WriteTimer AFAE               __size_of_terminal_textAttributes 0368  
                                      i2_scale 4FE0                               ?_TMR5_Initialize 0001  
                I2C1_MasterTRBInsert@ptrb_list 0117                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch B1B2  
            __size_of_INT0_SetInterruptHandler 000E                          i2DATAEE_ReadByte@bAdd 0001  
                    ?_INT0_SetInterruptHandler 0117                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset B0A8          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset B096                         ?_I2C1_FunctionComplete 0001  
                                ??_getADCError 0117                              __end_of__npowers_ CF0F  
                                      __Hparam 0000                  __size_of_I2C1_MasterTRBInsert 00A2  
          __end_of_writeEnergyToEEPROMCallback 9C66                    _writeEnergyToEEPROMCallback 9BE4  
                   __size_of_ADCC_ThresholdISR 0028                                     _scale$5164 0173  
           __end_of_max_FVR_ADC_Result_address CF59                     _max_FVR_ADC_Result_address CF57  
                                      __Lparam 0000                              __end_of_getUserID A7AE  
                        _ADCC_ClearAccumulator B1D2                     ??_TMR5_SetInterruptHandler 011A  
                           _p_i2c1_trb_current 0262                       ??_dimmingOffTimeCallback 0003  
                              __size_of___flge 0122                                        ___fladd 5E6A  
                                      ___fldiv 7072                                        ___awdiv 9A56  
                                      ___flneg AC68                                        ___awmod 9DDE  
                               i2__doprnt$5409 0094                                        ___flmul 57C8  
                                      ___flsub A694                                        ___fltol 9210  
                                      ___lldiv 9ADC                                __size_of___wmul 0028  
                                      ___llmod A000                         __end_of_FLASH_ReadByte AFC8  
                                      __doprnt 1666                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord A7F0                                        __pcinit 99CE  
                            __end_of_eval_poly 9210                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                           __end_of_OLED_Command A694  
                                      __ptext0 846C               i2readDoubleFromEEPROM@byte_index 000B  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 AFFC  
                                      __ptext2 B0BA                                        __ptext3 8B90  
                                      __ptext4 0000                                        __ptext5 B096  
                                      __ptext6 5460                                        __ptext7 9F98  
                                      __ptext8 A51A                                        __ptext9 B0CA  
                            __end_of_peakToRMS 7F92                                __size_of_printf 003C  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02A6  
                ?_ADCC_SetADTIInterruptHandler 0117                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                                i2_fround$5406 0051                                __size_of_strcmp 0050  
                                i2_fround$5407 004D                                __size_of_strlen 0058  
                            __end_of_hexpowers CF57                         getCauseOfResetString@r 0119  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers CF0F                          _OSCILLATOR_Initialize AF5A  
                       ??_EUSART2_Transmit_ISR 0100                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit AEC0  
                              atan@val_squared 0089                                 i2__doprnt@flag 00AD  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                      _memmove 9620                                     ??___xxtofl 011B  
                               i2__doprnt@fval 00A3                               ___awmod@dividend 0117  
                               i2__doprnt@prec 00AF                                      _T4CONbits 000FB7  
                         __end_of_OLED_PutChar 9776                       ??_PIN_MANAGER_Initialize 0117  
            __size_of_TMR4_SetInterruptHandler 000E                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR4_SetInterruptHandler 0117  
                                   ?_I2C1_Stop 0001                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                                    _T4HLTbits 000FB8                    __end_of_saveSRAMMaxToEEPROM 7AF0  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 02C4  
                                    _T6HLTbits 000FB2                               ??_clearADCErrors 0117  
                   __size_of_SYSTEM_Initialize 003A                           I2C1_ISR@pi2c_buf_ptr 025E  
                                __doprnt@width 01A5                          i2EUSART2_Write@txData 0001  
                                      _strncmp 98B2                                 __pintcode_body 9008  
                                      _strncpy 9F98                           end_of_initialization 9A4C  
                      __end_of_TMR7_WriteTimer ADE4                                        ftoa@buf 0273  
                             ?_clearCOMMErrors 0001                 ??_TMR4_DefaultInterruptHandler 0001  
                      getDeviceIDString@F17550 02E2                         _terminal_setCursorHome B0BA  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                                    _T4RSTbits 000FBA                               ?_TMR7_Initialize 0001  
                         _max_POS12_ADC_Result 0218                        ??_dimmingOnTimeCallback 0001  
                                      int_func 9008                            i2___wmul@multiplier 0001  
                                    _T6RSTbits 000FB4                                      i1u1464_20 A83C  
                                    i1u1465_28 A840                                      i1u3411_28 ABBE  
                                    i2u1040_40 751C                                      i2u2001_40 9BA6  
                                    i1u3409_28 AD5C                                      i2u1043_40 7572  
                                    i2u1044_40 7596                                      i1u3444_28 0086  
                                    i2u2014_40 6938                                      i2u1214_45 AA8A  
                                    i2u1214_46 AA8C                                      i2u2015_40 693A  
                                    i2u2007_40 9E8A                                      i2u2042_40 8B7E  
                                    i2u1250_40 A508                                      i2u2051_40 892C  
                               i2___xxtofl@arg 000F                                      _OLED_Init 9818  
                             i2_TMR5_StopTimer B1E2                                      i2u2055_40 9C98  
                               i2___xxtofl@exp 000E                                      i2u2240_40 4100  
                               i2___xxtofl@val 0005                                      i2u1282_40 B19A  
                                    i2u2250_40 4814                                      i2u2058_40 A0F2  
                                    i2u1179_40 9DAA                                      i2u2243_40 420A  
                                    i2u1179_48 9DAC                                      i2u2252_40 48F4  
                                    i2u3220_40 2C54                                      i2u3220_47 2C4A  
                                    i2u2245_40 42C8                                      i2u2254_40 4AD0  
                                    i2u3222_40 2CAE                                      i2u3222_47 2CA4  
                                    i2u3231_40 2E3A                                      i2u3223_40 2CEA  
                                    i2u3231_47 2E30                                      i2u3223_47 2CE0  
                                    i2u3232_40 2E40                                      i2u3224_40 2CF2  
                                    i2u3241_40 2F52                                      i2u3240_48 2F1E  
                                    i2u3225_40 2D14                         ??_I2C1_BusCollisionISR 0001  
                                    i2u3240_49 2F54                                      i2u3241_47 2F48  
                                    i2u3225_47 2D0A                                      i2u3330_40 406E  
                                    i2u3322_40 3E3A                                      i2u3321_48 3DEA  
                                    i2u3242_40 2F96                                      i2u3242_47 2F8C  
                                    i2u3314_48 3D02                                      i2u3227_40 2D62  
                                    i2u3219_40 2C2C                                      i2u3218_48 2BAA  
                                    i2u3403_40 ADFA                                      i2u3227_47 2D58  
                                    i2u3219_47 2C22                                      i2u3260_40 33E8  
                                    i2u3252_40 3210                                      i2u3244_40 302C  
                                    i2u3228_40 2DA0                                      i2u3244_47 3022  
                                    i2u3228_47 2D96                                      i2u3253_40 325C  
                                    i2u3332_48 AE8A                                      i2u1734_40 62AE  
                                    i2u3325_48 3E74                                      i2u3317_48 3D72  
                                    i2u3237_48 2EA4                                      i2u3405_48 ABF2  
                                    i2u1735_40 62BE                                      i2u3319_40 3DC4  
                                    i2u3415_40 95B8                                      i2u3334_48 AE66  
                                    i2u1760_40 64A6                                      i2u1752_40 6438  
                                    i2u1736_40 62C0                                      i2u3407_48 AD84  
                                    i2u3328_40 4032                                      i2u3327_48 3FE0  
                                    i2u3272_40 35B0                                      i2u3271_48 355A  
                                    i2u3256_40 3298                                      i2u3329_40 4062  
                                    i2u3281_40 379A                                      i2u3280_48 3744  
                                    i2u3329_47 4058                                      i2u3282_40 37AA  
                                    i2u1755_40 6450                                      i2u1739_40 6302  
                                    i2u1771_40 5BA6                                      i2u3290_48 3A0A  
                                    i2u3266_48 3470                                      i2u1780_40 5E02  
                                    i2u1772_40 5D1C                                      i2u3275_48 35EA  
                                    i2u3435_48 9098                                      i2u1772_45 5D12  
                                    i2u1781_40 5E20                                      i2u3268_48 34DA  
                                    i2u3285_48 37EC                                      i2u3277_48 36CC  
                                    i2u1960_40 8002                                      i2u3287_48 393E  
                      __end_of_I2C1_Initialize AB34                                      i2u1777_40 5DAC  
                                    i2u1961_40 8004                                      i2u1970_40 93A4  
                              ___lldiv@divisor 011B                    __end_of_writeDoubleToEEPROM A3DE  
                                    i2u1966_40 932C                                      i2u1966_45 9322  
                                    i2u1993_40 8F4C                                      i2u1978_40 8414  
                              ___lldiv@counter 0123                             _EUSART2_Initialize A068  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 0124                                i2_EUSART2_Write A5FE  
                                ??_getDeviceID 0124                                        printf@f 01AC  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 846C  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 004C  
                             ?_TMR5_StartTimer 0001                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$5400 00D1                                        sqrt@grs 007B  
                                      sqrt@exp 007F                 _ADCPostProcessingCallback$5396 00D6  
               _ADCPostProcessingCallback$5397 00DA                 _ADCPostProcessingCallback$5398 00C9  
               _ADCPostProcessingCallback$5399 00CD                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                            __end_of_getADCError AB9E  
                                      strlen@s 0117                   terminal_ringBufferPull@index 02CC  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler B116                      __size_of_I2C1_MasterWrite 0050  
                            __size_of_I2C1_ISR 0258                          _TMR5_InterruptHandler 024A  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
               __size_ofi2_writeDoubleToEEPROM 004C                  __end_ofi2_writeDoubleToEEPROM A5FE  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 61A8  
                                    i2___fldiv 7328                                      i2___awdiv 9B60  
                                    i2___flneg ACC8                                      i2___awmod 9E50  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 5B1A  
                                    i2___flsub A6DC                                      i2___fltol 92EE  
                                    i2___lldiv 9C66                                      i2___llmod A0D0  
                     __end_of_DATAEE_WriteByte A8EE              I2C1_ISR@i2c_10bit_address_restart 026A  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                                    i2__doprnt 2B74                         _terminal_clearTerminal B0DA  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 1666  
                                  ___flmul@grs 0164                                   _EUSART2_Read A566  
                           i2___llmod@dividend 000E                                     ?_OLED_Init 0001  
                              _HLVD_Initialize B0EA                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit AF20  
                      I2C1_MasterWrite@address 0123                              __size_of_INT0_ISR 000A  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0038  
                           _max_FVR_ADC_Result 0210                __size_of_dimmingOffTimeCallback 0018  
                                    _Avg_Power 01C6                   __end_of_INTERRUPT_Initialize AF92  
                     ??i2_readDoubleFromEEPROM 0007                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___flge 8DD6  
         __end_of_INT0_DefaultInterruptHandler B1FC          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler B1FA                  __end_of_terminal_printNewline B0DA  
                               __end_of___wmul AD48                        I2C1_MasterWrite@trBlock 0289  
                     I2C1_Stop@completion_code 0003                              __size_of_TMR4_ISR 0026  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07D8                            __end_of_getDeviceID AF02  
                               __end_of_fround 7072              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 007E  
                     __size_of_updateErrorLEDs 0018                               i2___wmul@product 0005  
                               __end_of_printf A966                          __end_of_INT0_CallBack AE9E  
                           _getMajorRevisionID A8EE                                 __end_of_strcat A566  
                               __end_of_strchr AAC6                                 __end_of_strcmp A38E  
                               __end_of_strlen A1EE                                 __end_of_strstr 99CE  
                            __size_ofi2___flge 0120                            start_initialization 99CE  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026                                    ??_I2C1_Stop 0001  
         __end_of_TMR5_DefaultInterruptHandler B1F8          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler B1F6                __size_of_PIN_MANAGER_Initialize 00CC  
                          __end_of__tdiv_to_l_ 880C                                    __end_of_abs AD20  
                                  __end_of_sin 6AE4                                      i2printf@f 00B2  
                      _terminal_textAttributes 5460                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E              __size_of_I2C1_MasterWriteTRBBuild 0046  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                    ?_I2C1_MasterWriteTRBBuild 0117                              __size_ofi2_printf 003C  
                        __end_of_EUSART2_Write A4CC                               ?_TMR7_WriteTimer 0100  
                                   ?i2__doprnt 0088                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0294                        __end_ofi2_EUSART2_Write A64A  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                          DATAEE_ReadByte@bAdd 0117                                     ?i2_isdigit 0001  
                            _OLED_Write_String A1EE                               ?_I2C1_Initialize 0001  
                               _FVR_ADC_Result 01E2                               __CFG_LPBOREN$OFF 000000  
                                  _getADCError AB6A                             ?_OLED_Write_String 0138  
                                     ??___flge 011F                          __size_of_OLED_Command 004A  
                             ??_PMD_Initialize 0117                                       ??___wmul 011B  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 0122  
                                   OLED_YX@Row 012D                                    __doprnt@idx 0192  
                                  __doprnt@len 0195                                    __doprnt@exp 0197  
                                  __doprnt@val 01A1                                    __pdataBANK0 00F0  
                                  __pdataBANK2 02D0                                       ??_fround 0173  
                                _ringBufferLUT 0000                     __end_of_EXT_INT_Initialize AF20  
               ??_terminal_textAttributesReset 01BF                          __size_of_OLED_PutChar 00A8  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 01B6  
                          ??_OLED_Write_String 013A              getCauseOfReset@return_reset_cause 0117  
       i2readDoubleFromEEPROM@starting_address 0003           readDoubleFromEEPROM@starting_address 0119  
                            _POS3P3_ADC_Result 01DA                                 _TMR5_StopTimer B1DE  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                 I2C1_MasterWriteTRBBuild@ptrb 0117                     __end_of_getMinorRevisionID ADBE  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02EC  
                                   fround@prec 017B                                 _eusart2RxCount 0272  
                                ?i2__div_to_l_ 0001                             i2_DATAEE_WriteByte AA54  
                                    ___fldiv@a 0141                                      ___fldiv@b 013D  
                                    _acos$5401 00AD                          TMR4_ISR@CountCallBack 0264  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
             __end_of_INT0_SetInterruptHandler B14E                                       ?_OLED_YX 012B  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0293                         _dimmingOffTimeCallback B02C  
                                _i2c1_tr_queue 028E                              __size_of___xxtofl 0154  
                                 _isdigit$4314 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize B0FA                            ?i2_DATAEE_WriteByte 0001  
                          EUSART2_Write@txData 0117                         __size_of_TMR4_CallBack 0024  
                                 _load_on_time 0228                    __end_of_ADCC_StopConversion B1EE  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                      ??_I2C1_FunctionComplete 0001                                      _asin$5402 00A5  
                                    _asin$5403 009D                                      _asin$5404 0099  
                                     ?i2_putch 0001                                      __doprnt@c 01AB  
                                    __doprnt@f 0184                                   _OLED_Command A64A  
                                   sin@coeff_a D27D                                     sin@coeff_b D2A5  
                    __end_of_OLED_Write_String A246                                    ??_OLED_Init 012B  
                        _TMR6_InterruptHandler 0253                                      __pnvBANK2 02F5  
                  getMinorRevisionID@REVID_RAW 0122                         _PIN_MANAGER_Initialize 94A4  
                                 _OLED_PutChar 96CE                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID AEE2  
                                __pmediumconst CEA6                                       ?___fladd 0129  
             __end_of_TMR4_SetInterruptHandler B140                                       ?___fldiv 013D  
                                     ?___awdiv 011D                           ??i2_DATAEE_WriteByte 0004  
                                    __ptext100 B1D2                                      __ptext101 ADBE  
                                    __ptext110 B1E2                                      __ptext102 AD48  
                                     ?___flneg 0125                                      __ptext111 ADE4  
                                    __ptext103 B1F4                                      __ptext120 B02C  
                                    __ptext112 AE56                                      __ptext104 A830  
                                    __ptext121 AF92                                      __ptext113 B1F8  
                                    __ptext105 AB34                                      __ptext130 9570  
                                    __ptext122 B1E6                                      __ptext114 9BE4  
                                    __ptext131 A9A2                                      __ptext123 7AF0  
                                    __ptext115 A4CC                                      __ptext107 ABD2  
                                    __ptext140 880C                                      __ptext132 2B74  
                                    __ptext124 A870                                      __ptext116 B014  
                                    __ptext108 B1F6                                      __ptext141 8A68  
                                    __ptext133 4FE0                                      __ptext125 AFE2  
                                    __ptext117 B1A8                                      __ptext109 B186  
                                    __ptext150 64E6                                      __ptext142 AE0A  
                                    __ptext134 B1B2                                      __ptext126 B1D8  
                                    __ptext118 AE7A                                      __ptext151 6AE4  
                                    __ptext143 A0D0                                      __ptext135 A5FE  
                                    __ptext127 AAC6                                      __ptext119 B1FA  
                                    __ptext160 831C                                      __ptext152 7F92  
                                    __ptext144 9C66                                      __ptext136 AF20  
                                    __ptext128 A5B2                                      __ptext161 92EE  
                                    __ptext153 A9DE                                      __ptext145 AD70  
                                    __ptext137 75DC                                      __ptext129 AA54  
                                    __ptext170 B06E                                      __ptext162 8DD6  
                                    __ptext154 9CE8                                      __ptext146 B1FC  
                                    __ptext138 9E50                                      __ptext171 B1EE  
                                    __ptext163 9D64                                      __ptext155 67EA  
                                    __ptext147 4078                                      __ptext139 9B60  
                                    __ptext172 B082                                      __ptext164 9110  
                                    __ptext156 A6DC                                      __ptext148 7D48  
                                    __ptext173 0000                                      __ptext165 5B1A  
                                    __ptext157 ACC8                                      __ptext149 9EC0  
                                    __ptext166 61A8                                      __ptext158 7328  
                                    __ptext167 ACF6                                      __ptext159 8EF6  
                                    __ptext168 B1EA                                      __ptext169 B192  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler B116                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ CEDB  
                              _getCauseOfReset A2EC                                 ?_ringBufferLUT 01BF  
              __size_ofi2_readDoubleFromEEPROM 004E                                      _getUserID A76A  
                       __end_of_TMR5_StopTimer B1E2              _EUSART2_TxDefaultInterruptHandler 0259  
                                     ?__doprnt 0182                         OLED_PutChar@data_array 012B  
                                  __pintcodelo 0018                                       _I2C1_ISR 7AF0  
                                  __tdiv_to_l_ 86D8                               _I2C1_MasterWrite A42E  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01D6                                       _BAUD2CON 000EF7  
                     __end_ofi2_TMR5_StopTimer B1E6           __size_of_writeEnergyToEEPROMCallback 0082  
                 __end_of_I2C1_MasterTRBInsert 9818                                       ?_isdigit 0001  
                                     ?_memmove 0117                                    _dev_on_time 022C  
                                    _eval_poly 9110                      ??_terminal_textAttributes 01BF  
                i2DATAEE_WriteByte@GIEBitValue 0004                                      _max_Power 0220  
                                    _attribute 0271                                      _peakToRMS 7D48  
                             __CFG_WDTE$NSLEEP 000000                       __size_of_TMR4_Initialize 0030  
                      ?_terminal_setCursorHome 0001                                      _hexpowers CF37  
                       _heartbeatTimerCallback A830                                 _dimming_period 00F0  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                            ??_updateErrorLEDs 0117                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                     __size_of_DATAEE_ReadByte 001A                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                       _T4CLKCON 000FB9  
                __size_of_readDoubleFromEEPROM 0052                       _recoverSRAMMaxFromEEPROM 85A2  
                               __size_of_putch 0014                           _INTERRUPT_Initialize AF76  
                                     _T6CLKCON 000FB3                                    ??i2__doprnt 008E  
       terminal_textAttributes@input_attribute 01BE       __end_of_I2C1_WaitForLastPacketToComplete B1A8  
    __size_of_I2C1_WaitForLastPacketToComplete 000A              ?_I2C1_WaitForLastPacketToComplete 0001  
           ??_I2C1_WaitForLastPacketToComplete 0117               _I2C1_WaitForLastPacketToComplete B19E  
                       I2C1_MasterRead@trBlock 0284                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00B0  
                                     _INT0_ISR B1A8                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               i2__doprnt@tmpval 009F  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR AAC6  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR0bits 000E1F  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _PIE0bits 000E29                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                 __size_of_dimmingOnTimeCallback 000C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                __end_of_dimmingOnTimeCallback B192                            _max_Temp_ADC_Result 0214  
                                     _PIR0bits 000E33                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 8A68                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _SSP1CON1 000F95                                       _SSP1CON3 000F97  
                                     _TMR4_ISR ADE4                                  _TMR4_CallBack AE56  
                                     _TMR5_ISR ABD2                                       _TMR6_ISR AD48  
                                     _TMR7_ISR AB9E                                       _SSP1STAT 000F94  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                ?_TMR5_StopTimer 0001  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 8DD6  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul AE0A                        __size_of_FVR_Initialize 0008  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome B0CA  
                                ?_getCOMMError 0001                              i2___awdiv@divisor 0009  
                                     i2_fround 75DC                 ??_INT0_DefaultInterruptHandler 0001  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
              i2writeDoubleToEEPROM@byte_index 000F                  writeDoubleToEEPROM@byte_index 0125  
                            i2___awdiv@counter 000B                    __end_of_ADCC_GetFilterValue B082  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                        DATAEE_WriteByte@bData 0119                                       i2_printf A9A2  
                          __end_ofatan@coeff_a D27D                            __end_ofatan@coeff_b D2A5  
                             __size_of_OLED_YX 003C                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address CF5F  
                       i2_readDoubleFromEEPROM A4CC                                      copy_data0 99E2  
                                    copy_data1 9A02                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 026E  
                     _INT0_SetInterruptHandler B140                              i2_DATAEE_ReadByte B014  
                           i2___awmod@dividend 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100                     __size_of_OLED_Write_String 0058  
                           ?i2_DATAEE_ReadByte 0001               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                                       _OledFont CF65  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 02F4  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset A33E                __end_of_terminal_textAttributes 57C8  
              i2writeDoubleToEEPROM@input_data 000B                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult B096  
         __end_of_max_POS12_ADC_Result_address CF5D                   _max_POS12_ADC_Result_address CF5B  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler B16A  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler B15C  
                       OLED_PutChar@input_base 0134                       __size_of_clearCOMMErrors 000E  
                __size_of_I2C1_BusCollisionISR 0006                                       __Lrparam 0000  
                          ??i2_DATAEE_ReadByte 0003                                ??_ringBufferLUT 01C1  
                     __size_of_TMR7_Initialize 0054                                 ?_TMR4_CallBack 0001  
                       I2C1_ISR@i2c_bytes_left 026B                               _foreground_color 0270  
                      ??_OSCILLATOR_Initialize 0117                                      memmove@d1 0117  
                                    memmove@s1 0119                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F0  
             __end_of_acquisitionTimerCallback B0BA               __end_of_I2C1_MasterWriteTRBBuild A76A  
                             __size_of__doprnt 150E                                    _fround$5162 0177  
                                  _fround$5163 0173                          __end_ofi2__tdiv_to_l_ 893E  
                     _TMR4_SetInterruptHandler B132                                _putch$intlevel0 B060  
                     _TMR7_SetInterruptHandler B108                          _TMR7_InterruptHandler 024D  
                           _ADC_Result_Scaling 023C                                 ??_getCOMMError 0117  
      terminal_textAttributes@foreground_color 0293                                       ___xxtofl 81C8  
                     __size_of_TMR5_StartTimer 0004                       __size_of_ADCC_Initialize 006A  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal B0EA                               __size_of_isdigit 0022  
                    __end_of_max_Power_address CF61                               __size_of_memmove 00AE  
                          I2C1_ISR@i2c_address 01E6                      __end_ofi2_DATAEE_ReadByte B02C  
                                     __ptext10 9942                                       __ptext11 98B2  
                                     __ptext20 A7AE                                       __ptext12 A196  
                                     __ptext21 AFAE                                       __ptext13 AA8E  
                                     __ptext30 A566                                       __ptext22 AC38  
                                     __ptext14 A33E                                       __ptext31 B0DA  
                                     __ptext23 B044                                       __ptext15 A76A  
                                     __ptext40 9DDE                                       __ptext32 A92A  
                                     __ptext24 AB6A                                       __ptext16 AD98  
                                     __ptext41 9A56                                       __ptext33 1666  
                                     __ptext25 B0FA                                       __ptext17 A8EE  
                                     __ptext50 5E6A                                       __ptext42 86D8  
                                     __ptext34 4B3C                                       __ptext26 AE9E  
                                     __ptext18 A136                                       __ptext51 AC68  
                                     __ptext43 893E                                       __ptext35 B05A  
                                     __ptext27 93CC                                       __ptext19 AEE2  
                                     __ptext60 AA1A                                       __ptext52 788A  
                                     __ptext44 81C8                                       __ptext36 A47E  
                                     __ptext28 7072                                       __ptext61 A246  
                                     __ptext53 A38E                                       __ptext45 AD20  
                                     __ptext37 AEC0                                       __ptext29 B1DE  
                                     __ptext70 94A4                                       __ptext62 B108  
                                     __ptext54 A8B0                                       __ptext46 A000  
                                     __ptext38 6DAC                                       __ptext71 AF5A  
                                     __ptext63 AC06                                       __ptext55 8CB4  
                                     __ptext47 9ADC                                       __ptext39 57C8  
                                     __ptext80 B15C                                       __ptext72 AF76  
                                     __ptext64 B116                                       __ptext56 85A2  
                                     __ptext48 9210                                       __ptext81 9F2E  
                                     __ptext73 AAFE                                       __ptext65 A3DE  
                                     __ptext57 A29A                                       __ptext49 A694  
                                     __ptext90 A42E                                       __ptext82 B16A  
                                     __ptext74 B0EA                                       __ptext66 B124  
                                     __ptext58 AFC8                                       __ptext91 A724  
                                     __ptext83 A966                                       __ptext75 B1BC  
                                     __ptext67 AC98                                       __ptext59 A2EC  
                                     __ptext92 9776                                       __ptext84 A1EE  
                                     __ptext76 AF02                                       __ptext68 B132  
                                     __ptext93 B19E                                       __ptext85 9818  
                                     __ptext77 B140                                       __ptext69 AF3E  
                                     __ptext86 A64A                                       __ptext78 A068  
                                     __ptext95 AB9E                                       __ptext87 A7F0  
                                     __ptext79 B14E                                       __ptext96 B1F2  
                                     __ptext88 96CE                                       __ptext97 B0A8  
                                     __ptext89 9620                                       __ptext98 B178  
                                     __ptext99 B1C4                                       _sin$5405 0090  
                                 _SSP1CON1bits 000F95                                   _SSP1CON2bits 000F96  
                                     __powers_ CEA7                            ringBufferLUT@userID 02C6  
                              _Temp_ADC_Offset 02F0                          i2_writeDoubleToEEPROM A5B2  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0068  
                                     _max_Irms 0224                                 i2_isdigit$4314 0002  
                              _Temp_ADC_Result 01D2                                  __size_of_acos 006E  
                                __size_of_fabs 003C                              ??_TMR4_Initialize 011A  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 0136  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 0AC4                                  OLED_Clear@col 013A  
                         __end_ofi2__div_to_l_ 8B90                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                                  OLED_Clear@row 0138  
                              i2__doprnt@width 00AB                              ??_DATAEE_ReadByte 0119  
                                OLED_YX@Column 012B                           __CFG_WDTCWS$WDTCWS_7 000000  
                           OLED_PutChar@length 0136                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                           _I2C1_MasterTRBInsert 9776  
                                 ?_getADCError 0001                        __size_of_clearADCErrors 0022  
                     __size_of_TMR5_WriteTimer 001C                                 OLED_PutChar@ch 0137  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion B186  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                 __doprnt@tmpval 0199  
                                  atan@coeff_a D265                                    atan@coeff_b D291  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline B0CA  
                            i2___awmod@divisor 0003                        ?_dimmingOffTimeCallback 0001  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                              _OLED_I2C_Status 01E8                                       memmove@d 011F  
                                     memmove@n 011B                                       memmove@s 0121  
                                     scale@scl 0177                                      sqrt@tfrac 0076  
                           _EXT_INT_Initialize AF02           __end_of_TMR6_DefaultInterruptHandler B1F6  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler B1F4  
         __end_of_ADCC_DefaultInterruptHandler B1FE          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler B1FC                                       intlevel1 0000  
                                     intlevel2 0000                                     _OLED_Clear A7F0  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID AD98                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02C2  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                       __end_of_I2C1_MasterWrite A47E  
                            __CFG_CLKOUTEN$OFF 000000                 __size_of_I2C1_FunctionComplete 001A  
                          ?_EXT_INT_Initialize 0001                  __end_of_I2C1_FunctionComplete AFFC  
                        ?_I2C1_MasterTRBInsert 0117                                    _reset_cause 02F5  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 0240  
            __end_of_ADCPostProcessingCallback 4B3C                                ??_TMR4_CallBack 0044  
                          ?_getMinorRevisionID 0001                                      strncpy@cp 011D  
                                    strncpy@to 0117                         __size_of_INT0_CallBack 0024  
                     __size_of_TMR7_WriteTimer 0026                   ?_writeEnergyToEEPROMCallback 0001  
                                 ?_getDeviceID 0122                                       printf@ap 01B6  
                                     printf@pb 01B8                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString AC68                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult B082                 ?_EUSART2_SetRxInterruptHandler 0117  
                            ??_clearCOMMErrors 0117                       __size_of_I2C1_Initialize 0036  
                                 ?__tdiv_to_l_ 0117                 __end_of_dimmingOffTimeCallback B044  
                       __size_of_EUSART2_Write 004E                            _EUSART2_Receive_ISR 9570  
                              _updateErrorLEDs AFFC                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 9110        __size_of_INTERRUPT_InterruptManagerHigh 9108  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize B1BC  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                                   _SSP1DATPPS 000E1A                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                                   _SSP1CLKPPS 000E19                              ringBufferLUT@line 01BF  
                             ___lldiv@quotient 011F                        i2DATAEE_WriteByte@bData 0003  
                            ?i2_TMR5_StopTimer 0001                                       strlen@cp 011B  
                         ??_getMinorRevisionID 0122                       _I2C1_MasterWriteTRBBuild A724  
                            _getDeviceIDString A136                             ??i2_TMR5_StopTimer 0001  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                 _Total_Energy 00F6                     __size_ofi2_DATAEE_ReadByte 0018  
                       ?i2_writeDoubleToEEPROM 0005                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                              ??_TMR5_StartTimer 0001  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 9570  
                            ??_ADCC_Initialize 011A                         i2DATAEE_WriteByte@bAdd 0001  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 8B90                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                           __size_of_I2C1_Stop 0040                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
            _EUSART2_RxDefaultInterruptHandler 0256                 __size_of_currentMeasuredToPeak 007C  
                         __end_of_getCOMMError B05A                               ??_TMR5_StopTimer 0117  
                __end_of_currentMeasuredToPeak 9D64                   __size_of_ADCC_StopConversion 0004  
