

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 01 22:42:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134  0000                     
   135                           ; Version 1.45 (B)
   136                           ; Generated 30/01/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18LF67K40 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170                           	psect	idataBANK0
   171  016460                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Irms_offset
   175  016460  6D                 	db	109
   176  016461  E7                 	db	231
   177  016462  BD                 	db	189
   178                           
   179                           ;initializer for _Vpk_const
   180                           ;main.c: 58: volatile double FVR_ADC_Result;
   181                           ;main.c: 59: volatile double AVSS_ADC_Result;
   182                           ;main.c: 60: volatile double ADC_Result_Scaling;
   183                           ;main.c: 61: volatile double POS3P3_ADC_Result;
   184                           ;main.c: 62: volatile double POS12_ADC_Result;
   185                           ;main.c: 63: volatile double Temp_ADC_Result;
   186                           ;main.c: 64: volatile double Temp_ADC_Offset = -267.409;
   187  016463  B5                 	db	181
   188  016464  29                 	db	41
   189  016465  43                 	db	67
   190                           
   191                           ;initializer for _Temp_ADC_Offset
   192  016466  B4                 	db	180
   193  016467  85                 	db	133
   194  016468  C3                 	db	195
   195                           
   196                           ;initializer for _dimming_period
   197  016469  7FEE               	dw	32750
   198                           
   199                           ;initializer for _TRIAC_Firing_Angle
   200                           ;main.c: 58: volatile double FVR_ADC_Result;
   201                           ;main.c: 59: volatile double AVSS_ADC_Result;
   202                           ;main.c: 60: volatile double ADC_Result_Scaling;
   203                           ;main.c: 61: volatile double POS3P3_ADC_Result;
   204                           ;main.c: 62: volatile double POS12_ADC_Result;
   205                           ;main.c: 63: volatile double Temp_ADC_Result;
   206                           ;main.c: 64: volatile double Temp_ADC_Offset = -267.409;
   207                           ;main.c: 65: double Vpk_const = 169.7056274847714;
   208                           ;main.c: 66: volatile double Vpk;
   209                           ;main.c: 67: volatile double Ipk;
   210                           ;main.c: 68: volatile double Imeas;
   211                           ;main.c: 69: double Irms_offset = -0.113;
   212  01646B  00                 	db	0
   213  01646C  B4                 	db	180
   214  01646D  42                 	db	66
   215                           
   216                           	psect	mediumconst
   217  00F178                     __pmediumconst:
   218                           	opt stack 0
   219  00F178  00                 	db	0
   220  00F179                     _dpowers:
   221                           	opt stack 0
   222  00F179  0001               	dw	1
   223  00F17B  0000               	dw	0
   224  00F17D  000A               	dw	10
   225  00F17F  0000               	dw	0
   226  00F181  0064               	dw	100
   227  00F183  0000               	dw	0
   228  00F185  03E8               	dw	1000
   229  00F187  0000               	dw	0
   230  00F189  2710               	dw	10000
   231  00F18B  0000               	dw	0
   232  00F18D  86A0               	dw	34464
   233  00F18F  0001               	dw	1
   234  00F191  4240               	dw	16960
   235  00F193  000F               	dw	15
   236  00F195  9680               	dw	38528
   237  00F197  0098               	dw	152
   238  00F199  E100               	dw	57600
   239  00F19B  05F5               	dw	1525
   240  00F19D  CA00               	dw	51712
   241  00F19F  3B9A               	dw	15258
   242  00F1A1                     __end_of_dpowers:
   243                           	opt stack 0
   244  00F1A1                     __powers_:
   245                           	opt stack 0
   246  00F1A1  00                 	db	0
   247  00F1A2  80                 	db	128
   248  00F1A3  3F                 	db	63
   249  00F1A4  00                 	db	0
   250  00F1A5  20                 	db	32
   251  00F1A6  41                 	db	65
   252  00F1A7  00                 	db	0
   253  00F1A8  C8                 	db	200
   254  00F1A9  42                 	db	66
   255  00F1AA  00                 	db	0
   256  00F1AB  7A                 	db	122
   257  00F1AC  44                 	db	68
   258  00F1AD  40                 	db	64
   259  00F1AE  1C                 	db	28
   260  00F1AF  46                 	db	70
   261  00F1B0  50                 	db	80
   262  00F1B1  C3                 	db	195
   263  00F1B2  47                 	db	71
   264  00F1B3  24                 	db	36
   265  00F1B4  74                 	db	116
   266  00F1B5  49                 	db	73
   267  00F1B6  97                 	db	151
   268  00F1B7  18                 	db	24
   269  00F1B8  4B                 	db	75
   270  00F1B9  BC                 	db	188
   271  00F1BA  BE                 	db	190
   272  00F1BB  4C                 	db	76
   273  00F1BC  6B                 	db	107
   274  00F1BD  6E                 	db	110
   275  00F1BE  4E                 	db	78
   276  00F1BF  03                 	db	3
   277  00F1C0  15                 	db	21
   278  00F1C1  50                 	db	80
   279  00F1C2  79                 	db	121
   280  00F1C3  AD                 	db	173
   281  00F1C4  60                 	db	96
   282  00F1C5  F3                 	db	243
   283  00F1C6  49                 	db	73
   284  00F1C7  71                 	db	113
   285  00F1C8                     __end_of__powers_:
   286                           	opt stack 0
   287  00F1C8                     __npowers_:
   288                           	opt stack 0
   289  00F1C8  00                 	db	0
   290  00F1C9  80                 	db	128
   291  00F1CA  3F                 	db	63
   292  00F1CB  CD                 	db	205
   293  00F1CC  CC                 	db	204
   294  00F1CD  3D                 	db	61
   295  00F1CE  D7                 	db	215
   296  00F1CF  23                 	db	35
   297  00F1D0  3C                 	db	60
   298  00F1D1  12                 	db	18
   299  00F1D2  83                 	db	131
   300  00F1D3  3A                 	db	58
   301  00F1D4  B7                 	db	183
   302  00F1D5  D1                 	db	209
   303  00F1D6  38                 	db	56
   304  00F1D7  C6                 	db	198
   305  00F1D8  27                 	db	39
   306  00F1D9  37                 	db	55
   307  00F1DA  38                 	db	56
   308  00F1DB  86                 	db	134
   309  00F1DC  35                 	db	53
   310  00F1DD  C0                 	db	192
   311  00F1DE  D6                 	db	214
   312  00F1DF  33                 	db	51
   313  00F1E0  CC                 	db	204
   314  00F1E1  2B                 	db	43
   315  00F1E2  32                 	db	50
   316  00F1E3  70                 	db	112
   317  00F1E4  89                 	db	137
   318  00F1E5  30                 	db	48
   319  00F1E6  E7                 	db	231
   320  00F1E7  DB                 	db	219
   321  00F1E8  2E                 	db	46
   322  00F1E9  E5                 	db	229
   323  00F1EA  3C                 	db	60
   324  00F1EB  1E                 	db	30
   325  00F1EC  42                 	db	66
   326  00F1ED  A2                 	db	162
   327  00F1EE  0D                 	db	13
   328  00F1EF                     __end_of__npowers_:
   329                           	opt stack 0
   330  00F1EF                     _hexpowers:
   331                           	opt stack 0
   332  00F1EF  0001               	dw	1
   333  00F1F1  0000               	dw	0
   334  00F1F3  0010               	dw	16
   335  00F1F5  0000               	dw	0
   336  00F1F7  0100               	dw	256
   337  00F1F9  0000               	dw	0
   338  00F1FB  1000               	dw	4096
   339  00F1FD  0000               	dw	0
   340  00F1FF  0000               	dw	0
   341  00F201  0001               	dw	1
   342  00F203  0000               	dw	0
   343  00F205  0010               	dw	16
   344  00F207  0000               	dw	0
   345  00F209  0100               	dw	256
   346  00F20B  0000               	dw	0
   347  00F20D  1000               	dw	4096
   348  00F20F                     __end_of_hexpowers:
   349                           	opt stack 0
   350  00F20F                     atan@coeff_a:
   351                           	opt stack 0
   352  00F20F  3C                 	db	60
   353  00F210  04                 	db	4
   354  00F211  42                 	db	66
   355  00F212  9F                 	db	159
   356  00F213  6A                 	db	106
   357  00F214  42                 	db	66
   358  00F215  90                 	db	144
   359  00F216  01                 	db	1
   360  00F217  42                 	db	66
   361  00F218  4D                 	db	77
   362  00F219  BB                 	db	187
   363  00F21A  40                 	db	64
   364  00F21B  EC                 	db	236
   365  00F21C  47                 	db	71
   366  00F21D  3E                 	db	62
   367  00F21E  8E                 	db	142
   368  00F21F  1F                 	db	31
   369  00F220  BB                 	db	187
   370  00F221                     __end_ofatan@coeff_a:
   371                           	opt stack 0
   372  00F221                     sin@coeff_a:
   373                           	opt stack 0
   374  00F221  F4                 	db	244
   375  00F222  4A                 	db	74
   376  00F223  48                 	db	72
   377  00F224  95                 	db	149
   378  00F225  95                 	db	149
   379  00F226  C7                 	db	199
   380  00F227  C1                 	db	193
   381  00F228  DC                 	db	220
   382  00F229  45                 	db	69
   383  00F22A  DC                 	db	220
   384  00F22B  6D                 	db	109
   385  00F22C  C3                 	db	195
   386  00F22D  B3                 	db	179
   387  00F22E  33                 	db	51
   388  00F22F  40                 	db	64
   389  00F230                     __end_ofsin@coeff_a:
   390                           	opt stack 0
   391  00F230                     atan@coeff_b:
   392                           	opt stack 0
   393  00F230  3C                 	db	60
   394  00F231  04                 	db	4
   395  00F232  42                 	db	66
   396  00F233  5A                 	db	90
   397  00F234  8B                 	db	139
   398  00F235  42                 	db	66
   399  00F236  04                 	db	4
   400  00F237  44                 	db	68
   401  00F238  42                 	db	66
   402  00F239  9C                 	db	156
   403  00F23A  4F                 	db	79
   404  00F23B  41                 	db	65
   405  00F23C  00                 	db	0
   406  00F23D  80                 	db	128
   407  00F23E  3F                 	db	63
   408  00F23F                     __end_ofatan@coeff_b:
   409                           	opt stack 0
   410  00F23F                     sin@coeff_b:
   411                           	opt stack 0
   412  00F23F  34                 	db	52
   413  00F240  01                 	db	1
   414  00F241  48                 	db	72
   415  00F242  9D                 	db	157
   416  00F243  B0                 	db	176
   417  00F244  45                 	db	69
   418  00F245  00                 	db	0
   419  00F246  DA                 	db	218
   420  00F247  42                 	db	66
   421  00F248  00                 	db	0
   422  00F249  80                 	db	128
   423  00F24A  3F                 	db	63
   424  00F24B                     __end_ofsin@coeff_b:
   425                           	opt stack 0
   426  0000                     _FVRCONbits	set	3780
   427  0000                     _FVRCON	set	3780
   428  0000                     _RC2REG	set	3825
   429  0000                     _RC2STAbits	set	3829
   430  0000                     _TX2REG	set	3826
   431  0000                     _TX2STAbits	set	3830
   432  0000                     _SP2BRGH	set	3828
   433  0000                     _SP2BRGL	set	3827
   434  0000                     _TX2STA	set	3830
   435  0000                     _RC2STA	set	3829
   436  0000                     _BAUD2CON	set	3831
   437  0000                     _PIR1bits	set	3636
   438  0000                     _PIE1bits	set	3626
   439  0000                     _PIR5bits	set	3640
   440  0000                     _PIE5bits	set	3630
   441  0000                     _PIR3bits	set	3638
   442  0000                     _PIE3bits	set	3628
   443  0000                     _IPR1bits	set	3616
   444  0000                     _IPR5bits	set	3620
   445  0000                     _IPR3bits	set	3618
   446  0000                     _RX2PPS	set	3601
   447  0000                     _RG7PPS	set	3721
   448  0000                     _SLRCONH	set	3774
   449  0000                     _SLRCONG	set	3769
   450  0000                     _SLRCONF	set	3761
   451  0000                     _SLRCONE	set	3756
   452  0000                     _SLRCOND	set	3748
   453  0000                     _SLRCONC	set	3743
   454  0000                     _SLRCONB	set	3735
   455  0000                     _SLRCONA	set	3727
   456  0000                     _ODCOND	set	3749
   457  0000                     _ODCONC	set	3744
   458  0000                     _ODCONH	set	3775
   459  0000                     _ODCONB	set	3736
   460  0000                     _ODCONG	set	3770
   461  0000                     _ODCONA	set	3728
   462  0000                     _ODCONF	set	3762
   463  0000                     _ODCONE	set	3757
   464  0000                     _WPUH	set	3776
   465  0000                     _WPUC	set	3745
   466  0000                     _WPUA	set	3729
   467  0000                     _WPUG	set	3771
   468  0000                     _WPUB	set	3737
   469  0000                     _WPUE	set	3758
   470  0000                     _WPUF	set	3763
   471  0000                     _WPUD	set	3750
   472  0000                     _ANSELA	set	3730
   473  0000                     _ANSELF	set	3764
   474  0000                     _ANSELG	set	3772
   475  0000                     _ANSELE	set	3759
   476  0000                     _ANSELB	set	3738
   477  0000                     _ANSELD	set	3751
   478  0000                     _PMD5	set	3665
   479  0000                     _PMD4	set	3664
   480  0000                     _PMD3	set	3663
   481  0000                     _PMD2	set	3662
   482  0000                     _PMD1	set	3661
   483  0000                     _PMD0	set	3660
   484  0000                     _OSCTUNE	set	3656
   485  0000                     _OSCFRQ	set	3657
   486  0000                     _OSCEN	set	3655
   487  0000                     _OSCCON3	set	3653
   488  0000                     _OSCCON1	set	3651
   489  0000                     _PLLR	set	29232
   490  0000                     _T7GCONbits	set	3889
   491  0000                     _T7CONbits	set	3888
   492  0000                     _T7CON	set	3888
   493  0000                     _TMR7L	set	3886
   494  0000                     _TMR7H	set	3887
   495  0000                     _T7CLK	set	3891
   496  0000                     _T7GATE	set	3890
   497  0000                     _T7GCON	set	3889
   498  0000                     _ADCON1bits	set	3929
   499  0000                     _ADCON2bits	set	3930
   500  0000                     _ADPRE	set	3934
   501  0000                     _ADCON3bits	set	3931
   502  0000                     _ADACQ	set	3932
   503  0000                     _ADCLK	set	3927
   504  0000                     _ADACT	set	3926
   505  0000                     _ADREF	set	3928
   506  0000                     _ADCON3	set	3931
   507  0000                     _ADCON2	set	3930
   508  0000                     _ADCON1	set	3929
   509  0000                     _ADCAP	set	3933
   510  0000                     _ADPCH	set	3935
   511  0000                     _LATGbits	set	3967
   512  0000                     _LATFbits	set	3966
   513  0000                     _T5GCONbits	set	4036
   514  0000                     _T5CONbits	set	4035
   515  0000                     _T5CON	set	4035
   516  0000                     _TMR5L	set	4033
   517  0000                     _TMR5H	set	4034
   518  0000                     _T5CLK	set	4038
   519  0000                     _T5GATE	set	4037
   520  0000                     _T5GCON	set	4036
   521  0000                     _ADERRL	set	3950
   522  0000                     _ADERRH	set	3951
   523  0000                     _ADPREVL	set	3937
   524  0000                     _ADPREVH	set	3938
   525  0000                     _ADFLTRL	set	3954
   526  0000                     _ADFLTRH	set	3955
   527  0000                     _ADSTATbits	set	3941
   528  0000                     _ADACCL	set	3952
   529  0000                     _ADACCH	set	3953
   530  0000                     _ADCNT	set	3943
   531  0000                     _ADRESL	set	3939
   532  0000                     _ADRESH	set	3940
   533  0000                     _ADCON0bits	set	3936
   534  0000                     _ADCON0	set	3936
   535  0000                     _ADSTAT	set	3941
   536  0000                     _ADRPT	set	3942
   537  0000                     _ADSTPTH	set	3945
   538  0000                     _ADSTPTL	set	3944
   539  0000                     _ADUTHH	set	3949
   540  0000                     _ADUTHL	set	3948
   541  0000                     _ADLTHH	set	3947
   542  0000                     _ADLTHL	set	3946
   543  0000                     _PR6	set	4016
   544  0000                     _TMR6	set	4015
   545  0000                     _T6CONbits	set	4017
   546  0000                     _T6RSTbits	set	4020
   547  0000                     _T6HLTbits	set	4018
   548  0000                     _T6CON	set	4017
   549  0000                     _T6TMR	set	4015
   550  0000                     _T6PR	set	4016
   551  0000                     _T6RST	set	4020
   552  0000                     _T6HLT	set	4018
   553  0000                     _T6CLKCON	set	4019
   554  0000                     _INTCONbits	set	4082
   555  0000                     _TRISD	set	3972
   556  0000                     _TRISC	set	3971
   557  0000                     _TRISH	set	3976
   558  0000                     _TRISB	set	3970
   559  0000                     _TRISG	set	3975
   560  0000                     _TRISA	set	3969
   561  0000                     _TRISF	set	3974
   562  0000                     _TRISE	set	3973
   563  0000                     _LATH	set	3968
   564  0000                     _LATC	set	3963
   565  0000                     _LATG	set	3967
   566  0000                     _LATB	set	3962
   567  0000                     _LATF	set	3966
   568  0000                     _LATA	set	3961
   569  0000                     _LATD	set	3964
   570  0000                     _LATE	set	3965
   571  00F24B                     STR_89:
   572  00F24B  4C                 	db	76	;'L'
   573  00F24C  69                 	db	105	;'i'
   574  00F24D  73                 	db	115	;'s'
   575  00F24E  74                 	db	116	;'t'
   576  00F24F  20                 	db	32
   577  00F250  6F                 	db	111	;'o'
   578  00F251  66                 	db	102	;'f'
   579  00F252  20                 	db	32
   580  00F253  73                 	db	115	;'s'
   581  00F254  75                 	db	117	;'u'
   582  00F255  70                 	db	112	;'p'
   583  00F256  70                 	db	112	;'p'
   584  00F257  6F                 	db	111	;'o'
   585  00F258  72                 	db	114	;'r'
   586  00F259  74                 	db	116	;'t'
   587  00F25A  65                 	db	101	;'e'
   588  00F25B  64                 	db	100	;'d'
   589  00F25C  20                 	db	32
   590  00F25D  63                 	db	99	;'c'
   591  00F25E  6F                 	db	111	;'o'
   592  00F25F  6D                 	db	109	;'m'
   593  00F260  6D                 	db	109	;'m'
   594  00F261  61                 	db	97	;'a'
   595  00F262  6E                 	db	110	;'n'
   596  00F263  64                 	db	100	;'d'
   597  00F264  73                 	db	115	;'s'
   598  00F265  3A                 	db	58	;':'
   599  00F266  0A                 	db	10
   600  00F267  0D                 	db	13
   601  00F268  0A                 	db	10
   602  00F269  0D                 	db	13
   603  00F26A  48                 	db	72	;'H'
   604  00F26B  6F                 	db	111	;'o'
   605  00F26C  75                 	db	117	;'u'
   606  00F26D  73                 	db	115	;'s'
   607  00F26E  65                 	db	101	;'e'
   608  00F26F  6B                 	db	107	;'k'
   609  00F270  65                 	db	101	;'e'
   610  00F271  65                 	db	101	;'e'
   611  00F272  70                 	db	112	;'p'
   612  00F273  69                 	db	105	;'i'
   613  00F274  6E                 	db	110	;'n'
   614  00F275  67                 	db	103	;'g'
   615  00F276  20                 	db	32
   616  00F277  43                 	db	67	;'C'
   617  00F278  6F                 	db	111	;'o'
   618  00F279  6D                 	db	109	;'m'
   619  00F27A  6D                 	db	109	;'m'
   620  00F27B  61                 	db	97	;'a'
   621  00F27C  6E                 	db	110	;'n'
   622  00F27D  64                 	db	100	;'d'
   623  00F27E  73                 	db	115	;'s'
   624  00F27F  3A                 	db	58	;':'
   625  00F280  0A                 	db	10
   626  00F281  0D                 	db	13
   627  00F282  20                 	db	32
   628  00F283  20                 	db	32
   629  00F284  20                 	db	32
   630  00F285  52                 	db	82	;'R'
   631  00F286  65                 	db	101	;'e'
   632  00F287  73                 	db	115	;'s'
   633  00F288  65                 	db	101	;'e'
   634  00F289  74                 	db	116	;'t'
   635  00F28A  3A                 	db	58	;':'
   636  00F28B  20                 	db	32
   637  00F28C  43                 	db	67	;'C'
   638  00F28D  6C                 	db	108	;'l'
   639  00F28E  65                 	db	101	;'e'
   640  00F28F  61                 	db	97	;'a'
   641  00F290  72                 	db	114	;'r'
   642  00F291  73                 	db	115	;'s'
   643  00F292  20                 	db	32
   644  00F293  74                 	db	116	;'t'
   645  00F294  68                 	db	104	;'h'
   646  00F295  65                 	db	101	;'e'
   647  00F296  20                 	db	32
   648  00F297  74                 	db	116	;'t'
   649  00F298  65                 	db	101	;'e'
   650  00F299  72                 	db	114	;'r'
   651  00F29A  6D                 	db	109	;'m'
   652  00F29B  69                 	db	105	;'i'
   653  00F29C  6E                 	db	110	;'n'
   654  00F29D  61                 	db	97	;'a'
   655  00F29E  6C                 	db	108	;'l'
   656  00F29F  20                 	db	32
   657  00F2A0  61                 	db	97	;'a'
   658  00F2A1  6E                 	db	110	;'n'
   659  00F2A2  64                 	db	100	;'d'
   660  00F2A3  20                 	db	32
   661  00F2A4  72                 	db	114	;'r'
   662  00F2A5  65                 	db	101	;'e'
   663  00F2A6  73                 	db	115	;'s'
   664  00F2A7  65                 	db	101	;'e'
   665  00F2A8  74                 	db	116	;'t'
   666  00F2A9  73                 	db	115	;'s'
   667  00F2AA  20                 	db	32
   668  00F2AB  74                 	db	116	;'t'
   669  00F2AC  68                 	db	104	;'h'
   670  00F2AD  65                 	db	101	;'e'
   671  00F2AE  20                 	db	32
   672  00F2AF  6D                 	db	109	;'m'
   673  00F2B0  69                 	db	105	;'i'
   674  00F2B1  63                 	db	99	;'c'
   675  00F2B2  72                 	db	114	;'r'
   676  00F2B3  6F                 	db	111	;'o'
   677  00F2B4  0A                 	db	10
   678  00F2B5  0D                 	db	13
   679  00F2B6  20                 	db	32
   680  00F2B7  20                 	db	32
   681  00F2B8  20                 	db	32
   682  00F2B9  43                 	db	67	;'C'
   683  00F2BA  6C                 	db	108	;'l'
   684  00F2BB  65                 	db	101	;'e'
   685  00F2BC  61                 	db	97	;'a'
   686  00F2BD  72                 	db	114	;'r'
   687  00F2BE  3A                 	db	58	;':'
   688  00F2BF  20                 	db	32
   689  00F2C0  43                 	db	67	;'C'
   690  00F2C1  6C                 	db	108	;'l'
   691  00F2C2  65                 	db	101	;'e'
   692  00F2C3  61                 	db	97	;'a'
   693  00F2C4  72                 	db	114	;'r'
   694  00F2C5  73                 	db	115	;'s'
   695  00F2C6  20                 	db	32
   696  00F2C7  74                 	db	116	;'t'
   697  00F2C8  68                 	db	104	;'h'
   698  00F2C9  65                 	db	101	;'e'
   699  00F2CA  20                 	db	32
   700  00F2CB  74                 	db	116	;'t'
   701  00F2CC  65                 	db	101	;'e'
   702  00F2CD  72                 	db	114	;'r'
   703  00F2CE  6D                 	db	109	;'m'
   704  00F2CF  69                 	db	105	;'i'
   705  00F2D0  6E                 	db	110	;'n'
   706  00F2D1  61                 	db	97	;'a'
   707  00F2D2  6C                 	db	108	;'l'
   708  00F2D3  20                 	db	32
   709  00F2D4  62                 	db	98	;'b'
   710  00F2D5  75                 	db	117	;'u'
   711  00F2D6  74                 	db	116	;'t'
   712  00F2D7  20                 	db	32
   713  00F2D8  64                 	db	100	;'d'
   714  00F2D9  6F                 	db	111	;'o'
   715  00F2DA  65                 	db	101	;'e'
   716  00F2DB  73                 	db	115	;'s'
   717  00F2DC  6E                 	db	110	;'n'
   718  00F2DD  27                 	db	39
   719  00F2DE  74                 	db	116	;'t'
   720  00F2DF  20                 	db	32
   721  00F2E0  72                 	db	114	;'r'
   722  00F2E1  65                 	db	101	;'e'
   723  00F2E2  73                 	db	115	;'s'
   724  00F2E3  65                 	db	101	;'e'
   725  00F2E4  74                 	db	116	;'t'
   726  00F2E5  20                 	db	32
   727  00F2E6  74                 	db	116	;'t'
   728  00F2E7  68                 	db	104	;'h'
   729  00F2E8  65                 	db	101	;'e'
   730  00F2E9  20                 	db	32
   731  00F2EA  6D                 	db	109	;'m'
   732  00F2EB  69                 	db	105	;'i'
   733  00F2EC  63                 	db	99	;'c'
   734  00F2ED  72                 	db	114	;'r'
   735  00F2EE  6F                 	db	111	;'o'
   736  00F2EF  0A                 	db	10
   737  00F2F0  0D                 	db	13
   738  00F2F1  20                 	db	32
   739  00F2F2  20                 	db	32
   740  00F2F3  20                 	db	32
   741  00F2F4  2A                 	db	42
   742  00F2F5  49                 	db	73	;'I'
   743  00F2F6  44                 	db	68	;'D'
   744  00F2F7  4E                 	db	78	;'N'
   745  00F2F8  3F                 	db	63	;'?'
   746  00F2F9  3A                 	db	58	;':'
   747  00F2FA  20                 	db	32
   748  00F2FB  52                 	db	82	;'R'
   749  00F2FC  65                 	db	101	;'e'
   750  00F2FD  74                 	db	116	;'t'
   751  00F2FE  75                 	db	117	;'u'
   752  00F2FF  72                 	db	114	;'r'
   753  00F300  6E                 	db	110	;'n'
   754  00F301  73                 	db	115	;'s'
   755  00F302  20                 	db	32
   756  00F303  64                 	db	100	;'d'
   757  00F304  65                 	db	101	;'e'
   758  00F305  76                 	db	118	;'v'
   759  00F306  69                 	db	105	;'i'
   760  00F307  63                 	db	99	;'c'
   761  00F308  65                 	db	101	;'e'
   762  00F309  20                 	db	32
   763  00F30A  69                 	db	105	;'i'
   764  00F30B  64                 	db	100	;'d'
   765  00F30C  65                 	db	101	;'e'
   766  00F30D  6E                 	db	110	;'n'
   767  00F30E  74                 	db	116	;'t'
   768  00F30F  69                 	db	105	;'i'
   769  00F310  66                 	db	102	;'f'
   770  00F311  69                 	db	105	;'i'
   771  00F312  63                 	db	99	;'c'
   772  00F313  61                 	db	97	;'a'
   773  00F314  74                 	db	116	;'t'
   774  00F315  69                 	db	105	;'i'
   775  00F316  6F                 	db	111	;'o'
   776  00F317  6E                 	db	110	;'n'
   777  00F318  20                 	db	32
   778  00F319  73                 	db	115	;'s'
   779  00F31A  74                 	db	116	;'t'
   780  00F31B  72                 	db	114	;'r'
   781  00F31C  69                 	db	105	;'i'
   782  00F31D  6E                 	db	110	;'n'
   783  00F31E  67                 	db	103	;'g'
   784  00F31F  0A                 	db	10
   785  00F320  0D                 	db	13
   786  00F321  20                 	db	32
   787  00F322  20                 	db	32
   788  00F323  20                 	db	32
   789  00F324  44                 	db	68	;'D'
   790  00F325  65                 	db	101	;'e'
   791  00F326  76                 	db	118	;'v'
   792  00F327  69                 	db	105	;'i'
   793  00F328  63                 	db	99	;'c'
   794  00F329  65                 	db	101	;'e'
   795  00F32A  20                 	db	32
   796  00F32B  4F                 	db	79	;'O'
   797  00F32C  6E                 	db	110	;'n'
   798  00F32D  20                 	db	32
   799  00F32E  54                 	db	84	;'T'
   800  00F32F  69                 	db	105	;'i'
   801  00F330  6D                 	db	109	;'m'
   802  00F331  65                 	db	101	;'e'
   803  00F332  3F                 	db	63	;'?'
   804  00F333  3A                 	db	58	;':'
   805  00F334  20                 	db	32
   806  00F335  52                 	db	82	;'R'
   807  00F336  65                 	db	101	;'e'
   808  00F337  74                 	db	116	;'t'
   809  00F338  75                 	db	117	;'u'
   810  00F339  72                 	db	114	;'r'
   811  00F33A  6E                 	db	110	;'n'
   812  00F33B  73                 	db	115	;'s'
   813  00F33C  20                 	db	32
   814  00F33D  64                 	db	100	;'d'
   815  00F33E  65                 	db	101	;'e'
   816  00F33F  76                 	db	118	;'v'
   817  00F340  69                 	db	105	;'i'
   818  00F341  63                 	db	99	;'c'
   819  00F342  65                 	db	101	;'e'
   820  00F343  20                 	db	32
   821  00F344  6F                 	db	111	;'o'
   822  00F345  6E                 	db	110	;'n'
   823  00F346  20                 	db	32
   824  00F347  74                 	db	116	;'t'
   825  00F348  69                 	db	105	;'i'
   826  00F349  6D                 	db	109	;'m'
   827  00F34A  65                 	db	101	;'e'
   828  00F34B  20                 	db	32
   829  00F34C  73                 	db	115	;'s'
   830  00F34D  69                 	db	105	;'i'
   831  00F34E  6E                 	db	110	;'n'
   832  00F34F  63                 	db	99	;'c'
   833  00F350  65                 	db	101	;'e'
   834  00F351  20                 	db	32
   835  00F352  6C                 	db	108	;'l'
   836  00F353  61                 	db	97	;'a'
   837  00F354  73                 	db	115	;'s'
   838  00F355  74                 	db	116	;'t'
   839  00F356  20                 	db	32
   840  00F357  64                 	db	100	;'d'
   841  00F358  65                 	db	101	;'e'
   842  00F359  76                 	db	118	;'v'
   843  00F35A  69                 	db	105	;'i'
   844  00F35B  63                 	db	99	;'c'
   845  00F35C  65                 	db	101	;'e'
   846  00F35D  20                 	db	32
   847  00F35E  72                 	db	114	;'r'
   848  00F35F  65                 	db	101	;'e'
   849  00F360  73                 	db	115	;'s'
   850  00F361  65                 	db	101	;'e'
   851  00F362  74                 	db	116	;'t'
   852  00F363  0A                 	db	10
   853  00F364  0D                 	db	13
   854  00F365  20                 	db	32
   855  00F366  20                 	db	32
   856  00F367  20                 	db	32
   857  00F368  48                 	db	72	;'H'
   858  00F369  65                 	db	101	;'e'
   859  00F36A  6C                 	db	108	;'l'
   860  00F36B  70                 	db	112	;'p'
   861  00F36C  3A                 	db	58	;':'
   862  00F36D  20                 	db	32
   863  00F36E  54                 	db	84	;'T'
   864  00F36F  68                 	db	104	;'h'
   865  00F370  69                 	db	105	;'i'
   866  00F371  73                 	db	115	;'s'
   867  00F372  20                 	db	32
   868  00F373  6D                 	db	109	;'m'
   869  00F374  65                 	db	101	;'e'
   870  00F375  73                 	db	115	;'s'
   871  00F376  73                 	db	115	;'s'
   872  00F377  61                 	db	97	;'a'
   873  00F378  67                 	db	103	;'g'
   874  00F379  65                 	db	101	;'e'
   875  00F37A  2C                 	db	44
   876  00F37B  20                 	db	32
   877  00F37C  6C                 	db	108	;'l'
   878  00F37D  69                 	db	105	;'i'
   879  00F37E  73                 	db	115	;'s'
   880  00F37F  74                 	db	116	;'t'
   881  00F380  73                 	db	115	;'s'
   882  00F381  20                 	db	32
   883  00F382  73                 	db	115	;'s'
   884  00F383  75                 	db	117	;'u'
   885  00F384  70                 	db	112	;'p'
   886  00F385  70                 	db	112	;'p'
   887  00F386  6F                 	db	111	;'o'
   888  00F387  72                 	db	114	;'r'
   889  00F388  74                 	db	116	;'t'
   890  00F389  65                 	db	101	;'e'
   891  00F38A  64                 	db	100	;'d'
   892  00F38B  20                 	db	32
   893  00F38C  63                 	db	99	;'c'
   894  00F38D  6F                 	db	111	;'o'
   895  00F38E  6D                 	db	109	;'m'
   896  00F38F  6D                 	db	109	;'m'
   897  00F390  61                 	db	97	;'a'
   898  00F391  6E                 	db	110	;'n'
   899  00F392  64                 	db	100	;'d'
   900  00F393  73                 	db	115	;'s'
   901  00F394  0A                 	db	10
   902  00F395  0D                 	db	13
   903  00F396  0A                 	db	10
   904  00F397  0D                 	db	13
   905  00F398  48                 	db	72	;'H'
   906  00F399  6F                 	db	111	;'o'
   907  00F39A  75                 	db	117	;'u'
   908  00F39B  73                 	db	115	;'s'
   909  00F39C  65                 	db	101	;'e'
   910  00F39D  6B                 	db	107	;'k'
   911  00F39E  65                 	db	101	;'e'
   912  00F39F  65                 	db	101	;'e'
   913  00F3A0  70                 	db	112	;'p'
   914  00F3A1  69                 	db	105	;'i'
   915  00F3A2  6E                 	db	110	;'n'
   916  00F3A3  67                 	db	103	;'g'
   917  00F3A4  20                 	db	32
   918  00F3A5  4D                 	db	77	;'M'
   919  00F3A6  65                 	db	101	;'e'
   920  00F3A7  61                 	db	97	;'a'
   921  00F3A8  73                 	db	115	;'s'
   922  00F3A9  75                 	db	117	;'u'
   923  00F3AA  72                 	db	114	;'r'
   924  00F3AB  65                 	db	101	;'e'
   925  00F3AC  6D                 	db	109	;'m'
   926  00F3AD  65                 	db	101	;'e'
   927  00F3AE  6E                 	db	110	;'n'
   928  00F3AF  74                 	db	116	;'t'
   929  00F3B0  20                 	db	32
   930  00F3B1  43                 	db	67	;'C'
   931  00F3B2  6F                 	db	111	;'o'
   932  00F3B3  6D                 	db	109	;'m'
   933  00F3B4  6D                 	db	109	;'m'
   934  00F3B5  61                 	db	97	;'a'
   935  00F3B6  6E                 	db	110	;'n'
   936  00F3B7  64                 	db	100	;'d'
   937  00F3B8  73                 	db	115	;'s'
   938  00F3B9  3A                 	db	58	;':'
   939  00F3BA  0A                 	db	10
   940  00F3BB  0D                 	db	13
   941  00F3BC  20                 	db	32
   942  00F3BD  20                 	db	32
   943  00F3BE  20                 	db	32
   944  00F3BF  4D                 	db	77	;'M'
   945  00F3C0  65                 	db	101	;'e'
   946  00F3C1  61                 	db	97	;'a'
   947  00F3C2  73                 	db	115	;'s'
   948  00F3C3  75                 	db	117	;'u'
   949  00F3C4  72                 	db	114	;'r'
   950  00F3C5  65                 	db	101	;'e'
   951  00F3C6  20                 	db	32
   952  00F3C7  50                 	db	80	;'P'
   953  00F3C8  4F                 	db	79	;'O'
   954  00F3C9  53                 	db	83	;'S'
   955  00F3CA  33                 	db	51	;'3'
   956  00F3CB  50                 	db	80	;'P'
   957  00F3CC  33                 	db	51	;'3'
   958  00F3CD  3F                 	db	63	;'?'
   959  00F3CE  3A                 	db	58	;':'
   960  00F3CF  20                 	db	32
   961  00F3D0  52                 	db	82	;'R'
   962  00F3D1  65                 	db	101	;'e'
   963  00F3D2  74                 	db	116	;'t'
   964  00F3D3  75                 	db	117	;'u'
   965  00F3D4  72                 	db	114	;'r'
   966  00F3D5  6E                 	db	110	;'n'
   967  00F3D6  73                 	db	115	;'s'
   968  00F3D7  20                 	db	32
   969  00F3D8  2B                 	db	43
   970  00F3D9  33                 	db	51	;'3'
   971  00F3DA  2E                 	db	46
   972  00F3DB  33                 	db	51	;'3'
   973  00F3DC  56                 	db	86	;'V'
   974  00F3DD  20                 	db	32
   975  00F3DE  41                 	db	65	;'A'
   976  00F3DF  44                 	db	68	;'D'
   977  00F3E0  43                 	db	67	;'C'
   978  00F3E1  20                 	db	32
   979  00F3E2  43                 	db	67	;'C'
   980  00F3E3  6F                 	db	111	;'o'
   981  00F3E4  6E                 	db	110	;'n'
   982  00F3E5  76                 	db	118	;'v'
   983  00F3E6  65                 	db	101	;'e'
   984  00F3E7  72                 	db	114	;'r'
   985  00F3E8  73                 	db	115	;'s'
   986  00F3E9  69                 	db	105	;'i'
   987  00F3EA  6F                 	db	111	;'o'
   988  00F3EB  6E                 	db	110	;'n'
   989  00F3EC  20                 	db	32
   990  00F3ED  69                 	db	105	;'i'
   991  00F3EE  6E                 	db	110	;'n'
   992  00F3EF  20                 	db	32
   993  00F3F0  76                 	db	118	;'v'
   994  00F3F1  6F                 	db	111	;'o'
   995  00F3F2  6C                 	db	108	;'l'
   996  00F3F3  74                 	db	116	;'t'
   997  00F3F4  73                 	db	115	;'s'
   998  00F3F5  0A                 	db	10
   999  00F3F6  0D                 	db	13
  1000  00F3F7  20                 	db	32
  1001  00F3F8  20                 	db	32
  1002  00F3F9  20                 	db	32
  1003  00F3FA  4D                 	db	77	;'M'
  1004  00F3FB  65                 	db	101	;'e'
  1005  00F3FC  61                 	db	97	;'a'
  1006  00F3FD  73                 	db	115	;'s'
  1007  00F3FE  75                 	db	117	;'u'
  1008  00F3FF  72                 	db	114	;'r'
  1009  00F400  65                 	db	101	;'e'
  1010  00F401  20                 	db	32
  1011  00F402  50                 	db	80	;'P'
  1012  00F403  4F                 	db	79	;'O'
  1013  00F404  53                 	db	83	;'S'
  1014  00F405  31                 	db	49	;'1'
  1015  00F406  32                 	db	50	;'2'
  1016  00F407  3F                 	db	63	;'?'
  1017  00F408  3A                 	db	58	;':'
  1018  00F409  20                 	db	32
  1019  00F40A  52                 	db	82	;'R'
  1020  00F40B  65                 	db	101	;'e'
  1021  00F40C  74                 	db	116	;'t'
  1022  00F40D  75                 	db	117	;'u'
  1023  00F40E  72                 	db	114	;'r'
  1024  00F40F  6E                 	db	110	;'n'
  1025  00F410  73                 	db	115	;'s'
  1026  00F411  20                 	db	32
  1027  00F412  2B                 	db	43
  1028  00F413  31                 	db	49	;'1'
  1029  00F414  32                 	db	50	;'2'
  1030  00F415  56                 	db	86	;'V'
  1031  00F416  20                 	db	32
  1032  00F417  41                 	db	65	;'A'
  1033  00F418  44                 	db	68	;'D'
  1034  00F419  43                 	db	67	;'C'
  1035  00F41A  20                 	db	32
  1036  00F41B  43                 	db	67	;'C'
  1037  00F41C  6F                 	db	111	;'o'
  1038  00F41D  6E                 	db	110	;'n'
  1039  00F41E  76                 	db	118	;'v'
  1040  00F41F  65                 	db	101	;'e'
  1041  00F420  72                 	db	114	;'r'
  1042  00F421  73                 	db	115	;'s'
  1043  00F422  69                 	db	105	;'i'
  1044  00F423  6F                 	db	111	;'o'
  1045  00F424  6E                 	db	110	;'n'
  1046  00F425  20                 	db	32
  1047  00F426  69                 	db	105	;'i'
  1048  00F427  6E                 	db	110	;'n'
  1049  00F428  20                 	db	32
  1050  00F429  76                 	db	118	;'v'
  1051  00F42A  6F                 	db	111	;'o'
  1052  00F42B  6C                 	db	108	;'l'
  1053  00F42C  74                 	db	116	;'t'
  1054  00F42D  73                 	db	115	;'s'
  1055  00F42E  0A                 	db	10
  1056  00F42F  0D                 	db	13
  1057  00F430  20                 	db	32
  1058  00F431  20                 	db	32
  1059  00F432  20                 	db	32
  1060  00F433  4D                 	db	77	;'M'
  1061  00F434  65                 	db	101	;'e'
  1062  00F435  61                 	db	97	;'a'
  1063  00F436  73                 	db	115	;'s'
  1064  00F437  75                 	db	117	;'u'
  1065  00F438  72                 	db	114	;'r'
  1066  00F439  65                 	db	101	;'e'
  1067  00F43A  20                 	db	32
  1068  00F43B  44                 	db	68	;'D'
  1069  00F43C  69                 	db	105	;'i'
  1070  00F43D  65                 	db	101	;'e'
  1071  00F43E  20                 	db	32
  1072  00F43F  54                 	db	84	;'T'
  1073  00F440  65                 	db	101	;'e'
  1074  00F441  6D                 	db	109	;'m'
  1075  00F442  70                 	db	112	;'p'
  1076  00F443  3F                 	db	63	;'?'
  1077  00F444  3A                 	db	58	;':'
  1078  00F445  20                 	db	32
  1079  00F446  52                 	db	82	;'R'
  1080  00F447  65                 	db	101	;'e'
  1081  00F448  74                 	db	116	;'t'
  1082  00F449  75                 	db	117	;'u'
  1083  00F44A  72                 	db	114	;'r'
  1084  00F44B  6E                 	db	110	;'n'
  1085  00F44C  73                 	db	115	;'s'
  1086  00F44D  20                 	db	32
  1087  00F44E  74                 	db	116	;'t'
  1088  00F44F  68                 	db	104	;'h'
  1089  00F450  65                 	db	101	;'e'
  1090  00F451  20                 	db	32
  1091  00F452  6D                 	db	109	;'m'
  1092  00F453  69                 	db	105	;'i'
  1093  00F454  63                 	db	99	;'c'
  1094  00F455  72                 	db	114	;'r'
  1095  00F456  6F                 	db	111	;'o'
  1096  00F457  63                 	db	99	;'c'
  1097  00F458  6F                 	db	111	;'o'
  1098  00F459  6E                 	db	110	;'n'
  1099  00F45A  74                 	db	116	;'t'
  1100  00F45B  72                 	db	114	;'r'
  1101  00F45C  6F                 	db	111	;'o'
  1102  00F45D  6C                 	db	108	;'l'
  1103  00F45E  6C                 	db	108	;'l'
  1104  00F45F  65                 	db	101	;'e'
  1105  00F460  72                 	db	114	;'r'
  1106  00F461  20                 	db	32
  1107  00F462  64                 	db	100	;'d'
  1108  00F463  69                 	db	105	;'i'
  1109  00F464  65                 	db	101	;'e'
  1110  00F465  20                 	db	32
  1111  00F466  74                 	db	116	;'t'
  1112  00F467  65                 	db	101	;'e'
  1113  00F468  6D                 	db	109	;'m'
  1114  00F469  70                 	db	112	;'p'
  1115  00F46A  65                 	db	101	;'e'
  1116  00F46B  72                 	db	114	;'r'
  1117  00F46C  61                 	db	97	;'a'
  1118  00F46D  74                 	db	116	;'t'
  1119  00F46E  75                 	db	117	;'u'
  1120  00F46F  72                 	db	114	;'r'
  1121  00F470  65                 	db	101	;'e'
  1122  00F471  20                 	db	32
  1123  00F472  69                 	db	105	;'i'
  1124  00F473  6E                 	db	110	;'n'
  1125  00F474  20                 	db	32
  1126  00F475  64                 	db	100	;'d'
  1127  00F476  65                 	db	101	;'e'
  1128  00F477  67                 	db	103	;'g'
  1129  00F478  72                 	db	114	;'r'
  1130  00F479  65                 	db	101	;'e'
  1131  00F47A  65                 	db	101	;'e'
  1132  00F47B  73                 	db	115	;'s'
  1133  00F47C  20                 	db	32
  1134  00F47D  43                 	db	67	;'C'
  1135  00F47E  0A                 	db	10
  1136  00F47F  0D                 	db	13
  1137  00F480  20                 	db	32
  1138  00F481  20                 	db	32
  1139  00F482  20                 	db	32
  1140  00F483  4D                 	db	77	;'M'
  1141  00F484  65                 	db	101	;'e'
  1142  00F485  61                 	db	97	;'a'
  1143  00F486  73                 	db	115	;'s'
  1144  00F487  75                 	db	117	;'u'
  1145  00F488  72                 	db	114	;'r'
  1146  00F489  65                 	db	101	;'e'
  1147  00F48A  20                 	db	32
  1148  00F48B  46                 	db	70	;'F'
  1149  00F48C  56                 	db	86	;'V'
  1150  00F48D  52                 	db	82	;'R'
  1151  00F48E  3F                 	db	63	;'?'
  1152  00F48F  3A                 	db	58	;':'
  1153  00F490  20                 	db	32
  1154  00F491  52                 	db	82	;'R'
  1155  00F492  65                 	db	101	;'e'
  1156  00F493  74                 	db	116	;'t'
  1157  00F494  75                 	db	117	;'u'
  1158  00F495  72                 	db	114	;'r'
  1159  00F496  6E                 	db	110	;'n'
  1160  00F497  73                 	db	115	;'s'
  1161  00F498  20                 	db	32
  1162  00F499  74                 	db	116	;'t'
  1163  00F49A  68                 	db	104	;'h'
  1164  00F49B  65                 	db	101	;'e'
  1165  00F49C  20                 	db	32
  1166  00F49D  69                 	db	105	;'i'
  1167  00F49E  6E                 	db	110	;'n'
  1168  00F49F  74                 	db	116	;'t'
  1169  00F4A0  65                 	db	101	;'e'
  1170  00F4A1  72                 	db	114	;'r'
  1171  00F4A2  6E                 	db	110	;'n'
  1172  00F4A3  61                 	db	97	;'a'
  1173  00F4A4  6C                 	db	108	;'l'
  1174  00F4A5  20                 	db	32
  1175  00F4A6  66                 	db	102	;'f'
  1176  00F4A7  69                 	db	105	;'i'
  1177  00F4A8  78                 	db	120	;'x'
  1178  00F4A9  65                 	db	101	;'e'
  1179  00F4AA  64                 	db	100	;'d'
  1180  00F4AB  20                 	db	32
  1181  00F4AC  76                 	db	118	;'v'
  1182  00F4AD  6F                 	db	111	;'o'
  1183  00F4AE  6C                 	db	108	;'l'
  1184  00F4AF  74                 	db	116	;'t'
  1185  00F4B0  61                 	db	97	;'a'
  1186  00F4B1  67                 	db	103	;'g'
  1187  00F4B2  65                 	db	101	;'e'
  1188  00F4B3  20                 	db	32
  1189  00F4B4  72                 	db	114	;'r'
  1190  00F4B5  65                 	db	101	;'e'
  1191  00F4B6  66                 	db	102	;'f'
  1192  00F4B7  65                 	db	101	;'e'
  1193  00F4B8  72                 	db	114	;'r'
  1194  00F4B9  65                 	db	101	;'e'
  1195  00F4BA  6E                 	db	110	;'n'
  1196  00F4BB  63                 	db	99	;'c'
  1197  00F4BC  65                 	db	101	;'e'
  1198  00F4BD  20                 	db	32
  1199  00F4BE  62                 	db	98	;'b'
  1200  00F4BF  75                 	db	117	;'u'
  1201  00F4C0  66                 	db	102	;'f'
  1202  00F4C1  66                 	db	102	;'f'
  1203  00F4C2  65                 	db	101	;'e'
  1204  00F4C3  72                 	db	114	;'r'
  1205  00F4C4  20                 	db	32
  1206  00F4C5  31                 	db	49	;'1'
  1207  00F4C6  20                 	db	32
  1208  00F4C7  6F                 	db	111	;'o'
  1209  00F4C8  75                 	db	117	;'u'
  1210  00F4C9  74                 	db	116	;'t'
  1211  00F4CA  70                 	db	112	;'p'
  1212  00F4CB  75                 	db	117	;'u'
  1213  00F4CC  74                 	db	116	;'t'
  1214  00F4CD  20                 	db	32
  1215  00F4CE  69                 	db	105	;'i'
  1216  00F4CF  6E                 	db	110	;'n'
  1217  00F4D0  20                 	db	32
  1218  00F4D1  76                 	db	118	;'v'
  1219  00F4D2  6F                 	db	111	;'o'
  1220  00F4D3  6C                 	db	108	;'l'
  1221  00F4D4  74                 	db	116	;'t'
  1222  00F4D5  73                 	db	115	;'s'
  1223  00F4D6  0A                 	db	10
  1224  00F4D7  0D                 	db	13
  1225  00F4D8  20                 	db	32
  1226  00F4D9  20                 	db	32
  1227  00F4DA  20                 	db	32
  1228  00F4DB  4D                 	db	77	;'M'
  1229  00F4DC  65                 	db	101	;'e'
  1230  00F4DD  61                 	db	97	;'a'
  1231  00F4DE  73                 	db	115	;'s'
  1232  00F4DF  75                 	db	117	;'u'
  1233  00F4E0  72                 	db	114	;'r'
  1234  00F4E1  65                 	db	101	;'e'
  1235  00F4E2  20                 	db	32
  1236  00F4E3  41                 	db	65	;'A'
  1237  00F4E4  56                 	db	86	;'V'
  1238  00F4E5  53                 	db	83	;'S'
  1239  00F4E6  53                 	db	83	;'S'
  1240  00F4E7  3F                 	db	63	;'?'
  1241  00F4E8  3A                 	db	58	;':'
  1242  00F4E9  20                 	db	32
  1243  00F4EA  52                 	db	82	;'R'
  1244  00F4EB  65                 	db	101	;'e'
  1245  00F4EC  74                 	db	116	;'t'
  1246  00F4ED  75                 	db	117	;'u'
  1247  00F4EE  72                 	db	114	;'r'
  1248  00F4EF  6E                 	db	110	;'n'
  1249  00F4F0  73                 	db	115	;'s'
  1250  00F4F1  20                 	db	32
  1251  00F4F2  74                 	db	116	;'t'
  1252  00F4F3  68                 	db	104	;'h'
  1253  00F4F4  65                 	db	101	;'e'
  1254  00F4F5  20                 	db	32
  1255  00F4F6  6D                 	db	109	;'m'
  1256  00F4F7  65                 	db	101	;'e'
  1257  00F4F8  61                 	db	97	;'a'
  1258  00F4F9  73                 	db	115	;'s'
  1259  00F4FA  75                 	db	117	;'u'
  1260  00F4FB  72                 	db	114	;'r'
  1261  00F4FC  65                 	db	101	;'e'
  1262  00F4FD  64                 	db	100	;'d'
  1263  00F4FE  20                 	db	32
  1264  00F4FF  76                 	db	118	;'v'
  1265  00F500  61                 	db	97	;'a'
  1266  00F501  6C                 	db	108	;'l'
  1267  00F502  75                 	db	117	;'u'
  1268  00F503  65                 	db	101	;'e'
  1269  00F504  20                 	db	32
  1270  00F505  6F                 	db	111	;'o'
  1271  00F506  66                 	db	102	;'f'
  1272  00F507  20                 	db	32
  1273  00F508  41                 	db	65	;'A'
  1274  00F509  6E                 	db	110	;'n'
  1275  00F50A  61                 	db	97	;'a'
  1276  00F50B  6C                 	db	108	;'l'
  1277  00F50C  6F                 	db	111	;'o'
  1278  00F50D  67                 	db	103	;'g'
  1279  00F50E  20                 	db	32
  1280  00F50F  56                 	db	86	;'V'
  1281  00F510  53                 	db	83	;'S'
  1282  00F511  53                 	db	83	;'S'
  1283  00F512  20                 	db	32
  1284  00F513  69                 	db	105	;'i'
  1285  00F514  6E                 	db	110	;'n'
  1286  00F515  20                 	db	32
  1287  00F516  76                 	db	118	;'v'
  1288  00F517  6F                 	db	111	;'o'
  1289  00F518  6C                 	db	108	;'l'
  1290  00F519  74                 	db	116	;'t'
  1291  00F51A  73                 	db	115	;'s'
  1292  00F51B  0A                 	db	10
  1293  00F51C  0D                 	db	13
  1294  00F51D  0A                 	db	10
  1295  00F51E  0D                 	db	13
  1296  00F51F  50                 	db	80	;'P'
  1297  00F520  72                 	db	114	;'r'
  1298  00F521  69                 	db	105	;'i'
  1299  00F522  6D                 	db	109	;'m'
  1300  00F523  61                 	db	97	;'a'
  1301  00F524  72                 	db	114	;'r'
  1302  00F525  79                 	db	121	;'y'
  1303  00F526  20                 	db	32
  1304  00F527  4D                 	db	77	;'M'
  1305  00F528  65                 	db	101	;'e'
  1306  00F529  61                 	db	97	;'a'
  1307  00F52A  73                 	db	115	;'s'
  1308  00F52B  75                 	db	117	;'u'
  1309  00F52C  72                 	db	114	;'r'
  1310  00F52D  65                 	db	101	;'e'
  1311  00F52E  6D                 	db	109	;'m'
  1312  00F52F  65                 	db	101	;'e'
  1313  00F530  6E                 	db	110	;'n'
  1314  00F531  74                 	db	116	;'t'
  1315  00F532  20                 	db	32
  1316  00F533  43                 	db	67	;'C'
  1317  00F534  6F                 	db	111	;'o'
  1318  00F535  6D                 	db	109	;'m'
  1319  00F536  6D                 	db	109	;'m'
  1320  00F537  61                 	db	97	;'a'
  1321  00F538  6E                 	db	110	;'n'
  1322  00F539  64                 	db	100	;'d'
  1323  00F53A  73                 	db	115	;'s'
  1324  00F53B  3A                 	db	58	;':'
  1325  00F53C  0A                 	db	10
  1326  00F53D  0D                 	db	13
  1327  00F53E  20                 	db	32
  1328  00F53F  20                 	db	32
  1329  00F540  20                 	db	32
  1330  00F541  4D                 	db	77	;'M'
  1331  00F542  65                 	db	101	;'e'
  1332  00F543  61                 	db	97	;'a'
  1333  00F544  73                 	db	115	;'s'
  1334  00F545  75                 	db	117	;'u'
  1335  00F546  72                 	db	114	;'r'
  1336  00F547  65                 	db	101	;'e'
  1337  00F548  20                 	db	32
  1338  00F549  44                 	db	68	;'D'
  1339  00F54A  65                 	db	101	;'e'
  1340  00F54B  74                 	db	116	;'t'
  1341  00F54C  65                 	db	101	;'e'
  1342  00F54D  63                 	db	99	;'c'
  1343  00F54E  74                 	db	116	;'t'
  1344  00F54F  65                 	db	101	;'e'
  1345  00F550  64                 	db	100	;'d'
  1346  00F551  20                 	db	32
  1347  00F552  43                 	db	67	;'C'
  1348  00F553  75                 	db	117	;'u'
  1349  00F554  72                 	db	114	;'r'
  1350  00F555  72                 	db	114	;'r'
  1351  00F556  65                 	db	101	;'e'
  1352  00F557  6E                 	db	110	;'n'
  1353  00F558  74                 	db	116	;'t'
  1354  00F559  3F                 	db	63	;'?'
  1355  00F55A  3A                 	db	58	;':'
  1356  00F55B  20                 	db	32
  1357  00F55C  52                 	db	82	;'R'
  1358  00F55D  65                 	db	101	;'e'
  1359  00F55E  74                 	db	116	;'t'
  1360  00F55F  75                 	db	117	;'u'
  1361  00F560  72                 	db	114	;'r'
  1362  00F561  6E                 	db	110	;'n'
  1363  00F562  73                 	db	115	;'s'
  1364  00F563  20                 	db	32
  1365  00F564  6D                 	db	109	;'m'
  1366  00F565  65                 	db	101	;'e'
  1367  00F566  61                 	db	97	;'a'
  1368  00F567  73                 	db	115	;'s'
  1369  00F568  75                 	db	117	;'u'
  1370  00F569  72                 	db	114	;'r'
  1371  00F56A  65                 	db	101	;'e'
  1372  00F56B  64                 	db	100	;'d'
  1373  00F56C  20                 	db	32
  1374  00F56D  6F                 	db	111	;'o'
  1375  00F56E  75                 	db	117	;'u'
  1376  00F56F  74                 	db	116	;'t'
  1377  00F570  70                 	db	112	;'p'
  1378  00F571  75                 	db	117	;'u'
  1379  00F572  74                 	db	116	;'t'
  1380  00F573  20                 	db	32
  1381  00F574  63                 	db	99	;'c'
  1382  00F575  75                 	db	117	;'u'
  1383  00F576  72                 	db	114	;'r'
  1384  00F577  72                 	db	114	;'r'
  1385  00F578  65                 	db	101	;'e'
  1386  00F579  6E                 	db	110	;'n'
  1387  00F57A  74                 	db	116	;'t'
  1388  00F57B  20                 	db	32
  1389  00F57C  69                 	db	105	;'i'
  1390  00F57D  6E                 	db	110	;'n'
  1391  00F57E  20                 	db	32
  1392  00F57F  61                 	db	97	;'a'
  1393  00F580  6D                 	db	109	;'m'
  1394  00F581  70                 	db	112	;'p'
  1395  00F582  73                 	db	115	;'s'
  1396  00F583  20                 	db	32
  1397  00F584  61                 	db	97	;'a'
  1398  00F585  73                 	db	115	;'s'
  1399  00F586  20                 	db	32
  1400  00F587  73                 	db	115	;'s'
  1401  00F588  65                 	db	101	;'e'
  1402  00F589  65                 	db	101	;'e'
  1403  00F58A  6E                 	db	110	;'n'
  1404  00F58B  20                 	db	32
  1405  00F58C  62                 	db	98	;'b'
  1406  00F58D  79                 	db	121	;'y'
  1407  00F58E  20                 	db	32
  1408  00F58F  41                 	db	65	;'A'
  1409  00F590  44                 	db	68	;'D'
  1410  00F591  43                 	db	67	;'C'
  1411  00F592  0A                 	db	10
  1412  00F593  0D                 	db	13
  1413  00F594  20                 	db	32
  1414  00F595  20                 	db	32
  1415  00F596  20                 	db	32
  1416  00F597  4D                 	db	77	;'M'
  1417  00F598  65                 	db	101	;'e'
  1418  00F599  61                 	db	97	;'a'
  1419  00F59A  73                 	db	115	;'s'
  1420  00F59B  75                 	db	117	;'u'
  1421  00F59C  72                 	db	114	;'r'
  1422  00F59D  65                 	db	101	;'e'
  1423  00F59E  20                 	db	32
  1424  00F59F  52                 	db	82	;'R'
  1425  00F5A0  4D                 	db	77	;'M'
  1426  00F5A1  53                 	db	83	;'S'
  1427  00F5A2  20                 	db	32
  1428  00F5A3  43                 	db	67	;'C'
  1429  00F5A4  75                 	db	117	;'u'
  1430  00F5A5  72                 	db	114	;'r'
  1431  00F5A6  72                 	db	114	;'r'
  1432  00F5A7  65                 	db	101	;'e'
  1433  00F5A8  6E                 	db	110	;'n'
  1434  00F5A9  74                 	db	116	;'t'
  1435  00F5AA  3F                 	db	63	;'?'
  1436  00F5AB  3A                 	db	58	;':'
  1437  00F5AC  20                 	db	32
  1438  00F5AD  52                 	db	82	;'R'
  1439  00F5AE  65                 	db	101	;'e'
  1440  00F5AF  74                 	db	116	;'t'
  1441  00F5B0  75                 	db	117	;'u'
  1442  00F5B1  72                 	db	114	;'r'
  1443  00F5B2  6E                 	db	110	;'n'
  1444  00F5B3  73                 	db	115	;'s'
  1445  00F5B4  20                 	db	32
  1446  00F5B5  74                 	db	116	;'t'
  1447  00F5B6  68                 	db	104	;'h'
  1448  00F5B7  65                 	db	101	;'e'
  1449  00F5B8  20                 	db	32
  1450  00F5B9  63                 	db	99	;'c'
  1451  00F5BA  61                 	db	97	;'a'
  1452  00F5BB  6C                 	db	108	;'l'
  1453  00F5BC  63                 	db	99	;'c'
  1454  00F5BD  75                 	db	117	;'u'
  1455  00F5BE  6C                 	db	108	;'l'
  1456  00F5BF  61                 	db	97	;'a'
  1457  00F5C0  74                 	db	116	;'t'
  1458  00F5C1  65                 	db	101	;'e'
  1459  00F5C2  64                 	db	100	;'d'
  1460  00F5C3  20                 	db	32
  1461  00F5C4  52                 	db	82	;'R'
  1462  00F5C5  4D                 	db	77	;'M'
  1463  00F5C6  53                 	db	83	;'S'
  1464  00F5C7  20                 	db	32
  1465  00F5C8  6F                 	db	111	;'o'
  1466  00F5C9  75                 	db	117	;'u'
  1467  00F5CA  74                 	db	116	;'t'
  1468  00F5CB  70                 	db	112	;'p'
  1469  00F5CC  75                 	db	117	;'u'
  1470  00F5CD  74                 	db	116	;'t'
  1471  00F5CE  20                 	db	32
  1472  00F5CF  63                 	db	99	;'c'
  1473  00F5D0  75                 	db	117	;'u'
  1474  00F5D1  72                 	db	114	;'r'
  1475  00F5D2  72                 	db	114	;'r'
  1476  00F5D3  65                 	db	101	;'e'
  1477  00F5D4  6E                 	db	110	;'n'
  1478  00F5D5  74                 	db	116	;'t'
  1479  00F5D6  20                 	db	32
  1480  00F5D7  66                 	db	102	;'f'
  1481  00F5D8  72                 	db	114	;'r'
  1482  00F5D9  6F                 	db	111	;'o'
  1483  00F5DA  6D                 	db	109	;'m'
  1484  00F5DB  20                 	db	32
  1485  00F5DC  6D                 	db	109	;'m'
  1486  00F5DD  65                 	db	101	;'e'
  1487  00F5DE  61                 	db	97	;'a'
  1488  00F5DF  73                 	db	115	;'s'
  1489  00F5E0  75                 	db	117	;'u'
  1490  00F5E1  72                 	db	114	;'r'
  1491  00F5E2  65                 	db	101	;'e'
  1492  00F5E3  6D                 	db	109	;'m'
  1493  00F5E4  65                 	db	101	;'e'
  1494  00F5E5  6E                 	db	110	;'n'
  1495  00F5E6  74                 	db	116	;'t'
  1496  00F5E7  73                 	db	115	;'s'
  1497  00F5E8  20                 	db	32
  1498  00F5E9  61                 	db	97	;'a'
  1499  00F5EA  6E                 	db	110	;'n'
  1500  00F5EB  64                 	db	100	;'d'
  1501  00F5EC  20                 	db	32
  1502  00F5ED  54                 	db	84	;'T'
  1503  00F5EE  52                 	db	82	;'R'
  1504  00F5EF  49                 	db	73	;'I'
  1505  00F5F0  41                 	db	65	;'A'
  1506  00F5F1  43                 	db	67	;'C'
  1507  00F5F2  20                 	db	32
  1508  00F5F3  66                 	db	102	;'f'
  1509  00F5F4  69                 	db	105	;'i'
  1510  00F5F5  72                 	db	114	;'r'
  1511  00F5F6  69                 	db	105	;'i'
  1512  00F5F7  6E                 	db	110	;'n'
  1513  00F5F8  67                 	db	103	;'g'
  1514  00F5F9  20                 	db	32
  1515  00F5FA  61                 	db	97	;'a'
  1516  00F5FB  6E                 	db	110	;'n'
  1517  00F5FC  67                 	db	103	;'g'
  1518  00F5FD  6C                 	db	108	;'l'
  1519  00F5FE  65                 	db	101	;'e'
  1520  00F5FF  0A                 	db	10
  1521  00F600  0D                 	db	13
  1522  00F601  20                 	db	32
  1523  00F602  20                 	db	32
  1524  00F603  20                 	db	32
  1525  00F604  4D                 	db	77	;'M'
  1526  00F605  65                 	db	101	;'e'
  1527  00F606  61                 	db	97	;'a'
  1528  00F607  73                 	db	115	;'s'
  1529  00F608  75                 	db	117	;'u'
  1530  00F609  72                 	db	114	;'r'
  1531  00F60A  65                 	db	101	;'e'
  1532  00F60B  20                 	db	32
  1533  00F60C  52                 	db	82	;'R'
  1534  00F60D  4D                 	db	77	;'M'
  1535  00F60E  53                 	db	83	;'S'
  1536  00F60F  20                 	db	32
  1537  00F610  56                 	db	86	;'V'
  1538  00F611  6F                 	db	111	;'o'
  1539  00F612  6C                 	db	108	;'l'
  1540  00F613  74                 	db	116	;'t'
  1541  00F614  61                 	db	97	;'a'
  1542  00F615  67                 	db	103	;'g'
  1543  00F616  65                 	db	101	;'e'
  1544  00F617  3F                 	db	63	;'?'
  1545  00F618  3A                 	db	58	;':'
  1546  00F619  20                 	db	32
  1547  00F61A  52                 	db	82	;'R'
  1548  00F61B  65                 	db	101	;'e'
  1549  00F61C  74                 	db	116	;'t'
  1550  00F61D  75                 	db	117	;'u'
  1551  00F61E  72                 	db	114	;'r'
  1552  00F61F  6E                 	db	110	;'n'
  1553  00F620  73                 	db	115	;'s'
  1554  00F621  20                 	db	32
  1555  00F622  74                 	db	116	;'t'
  1556  00F623  68                 	db	104	;'h'
  1557  00F624  65                 	db	101	;'e'
  1558  00F625  20                 	db	32
  1559  00F626  63                 	db	99	;'c'
  1560  00F627  61                 	db	97	;'a'
  1561  00F628  6C                 	db	108	;'l'
  1562  00F629  63                 	db	99	;'c'
  1563  00F62A  75                 	db	117	;'u'
  1564  00F62B  6C                 	db	108	;'l'
  1565  00F62C  61                 	db	97	;'a'
  1566  00F62D  74                 	db	116	;'t'
  1567  00F62E  65                 	db	101	;'e'
  1568  00F62F  64                 	db	100	;'d'
  1569  00F630  20                 	db	32
  1570  00F631  52                 	db	82	;'R'
  1571  00F632  4D                 	db	77	;'M'
  1572  00F633  53                 	db	83	;'S'
  1573  00F634  20                 	db	32
  1574  00F635  6F                 	db	111	;'o'
  1575  00F636  75                 	db	117	;'u'
  1576  00F637  74                 	db	116	;'t'
  1577  00F638  70                 	db	112	;'p'
  1578  00F639  75                 	db	117	;'u'
  1579  00F63A  74                 	db	116	;'t'
  1580  00F63B  20                 	db	32
  1581  00F63C  76                 	db	118	;'v'
  1582  00F63D  6F                 	db	111	;'o'
  1583  00F63E  6C                 	db	108	;'l'
  1584  00F63F  74                 	db	116	;'t'
  1585  00F640  61                 	db	97	;'a'
  1586  00F641  67                 	db	103	;'g'
  1587  00F642  65                 	db	101	;'e'
  1588  00F643  20                 	db	32
  1589  00F644  66                 	db	102	;'f'
  1590  00F645  72                 	db	114	;'r'
  1591  00F646  6F                 	db	111	;'o'
  1592  00F647  6D                 	db	109	;'m'
  1593  00F648  20                 	db	32
  1594  00F649  54                 	db	84	;'T'
  1595  00F64A  52                 	db	82	;'R'
  1596  00F64B  49                 	db	73	;'I'
  1597  00F64C  41                 	db	65	;'A'
  1598  00F64D  43                 	db	67	;'C'
  1599  00F64E  20                 	db	32
  1600  00F64F  66                 	db	102	;'f'
  1601  00F650  69                 	db	105	;'i'
  1602  00F651  72                 	db	114	;'r'
  1603  00F652  69                 	db	105	;'i'
  1604  00F653  6E                 	db	110	;'n'
  1605  00F654  67                 	db	103	;'g'
  1606  00F655  20                 	db	32
  1607  00F656  61                 	db	97	;'a'
  1608  00F657  6E                 	db	110	;'n'
  1609  00F658  67                 	db	103	;'g'
  1610  00F659  6C                 	db	108	;'l'
  1611  00F65A  65                 	db	101	;'e'
  1612  00F65B  0A                 	db	10
  1613  00F65C  0D                 	db	13
  1614  00F65D  20                 	db	32
  1615  00F65E  20                 	db	32
  1616  00F65F  20                 	db	32
  1617  00F660  4D                 	db	77	;'M'
  1618  00F661  65                 	db	101	;'e'
  1619  00F662  61                 	db	97	;'a'
  1620  00F663  73                 	db	115	;'s'
  1621  00F664  75                 	db	117	;'u'
  1622  00F665  72                 	db	114	;'r'
  1623  00F666  65                 	db	101	;'e'
  1624  00F667  20                 	db	32
  1625  00F668  50                 	db	80	;'P'
  1626  00F669  6F                 	db	111	;'o'
  1627  00F66A  77                 	db	119	;'w'
  1628  00F66B  65                 	db	101	;'e'
  1629  00F66C  72                 	db	114	;'r'
  1630  00F66D  3F                 	db	63	;'?'
  1631  00F66E  3A                 	db	58	;':'
  1632  00F66F  20                 	db	32
  1633  00F670  52                 	db	82	;'R'
  1634  00F671  65                 	db	101	;'e'
  1635  00F672  74                 	db	116	;'t'
  1636  00F673  75                 	db	117	;'u'
  1637  00F674  72                 	db	114	;'r'
  1638  00F675  6E                 	db	110	;'n'
  1639  00F676  73                 	db	115	;'s'
  1640  00F677  20                 	db	32
  1641  00F678  74                 	db	116	;'t'
  1642  00F679  68                 	db	104	;'h'
  1643  00F67A  65                 	db	101	;'e'
  1644  00F67B  20                 	db	32
  1645  00F67C  63                 	db	99	;'c'
  1646  00F67D  61                 	db	97	;'a'
  1647  00F67E  6C                 	db	108	;'l'
  1648  00F67F  63                 	db	99	;'c'
  1649  00F680  75                 	db	117	;'u'
  1650  00F681  6C                 	db	108	;'l'
  1651  00F682  61                 	db	97	;'a'
  1652  00F683  74                 	db	116	;'t'
  1653  00F684  65                 	db	101	;'e'
  1654  00F685  64                 	db	100	;'d'
  1655  00F686  20                 	db	32
  1656  00F687  6F                 	db	111	;'o'
  1657  00F688  75                 	db	117	;'u'
  1658  00F689  74                 	db	116	;'t'
  1659  00F68A  70                 	db	112	;'p'
  1660  00F68B  75                 	db	117	;'u'
  1661  00F68C  74                 	db	116	;'t'
  1662  00F68D  20                 	db	32
  1663  00F68E  70                 	db	112	;'p'
  1664  00F68F  6F                 	db	111	;'o'
  1665  00F690  77                 	db	119	;'w'
  1666  00F691  65                 	db	101	;'e'
  1667  00F692  72                 	db	114	;'r'
  1668  00F693  20                 	db	32
  1669  00F694  69                 	db	105	;'i'
  1670  00F695  6E                 	db	110	;'n'
  1671  00F696  20                 	db	32
  1672  00F697  57                 	db	87	;'W'
  1673  00F698  61                 	db	97	;'a'
  1674  00F699  74                 	db	116	;'t'
  1675  00F69A  74                 	db	116	;'t'
  1676  00F69B  73                 	db	115	;'s'
  1677  00F69C  0A                 	db	10
  1678  00F69D  0D                 	db	13
  1679  00F69E  20                 	db	32
  1680  00F69F  20                 	db	32
  1681  00F6A0  20                 	db	32
  1682  00F6A1  4C                 	db	76	;'L'
  1683  00F6A2  6F                 	db	111	;'o'
  1684  00F6A3  61                 	db	97	;'a'
  1685  00F6A4  64                 	db	100	;'d'
  1686  00F6A5  20                 	db	32
  1687  00F6A6  4F                 	db	79	;'O'
  1688  00F6A7  6E                 	db	110	;'n'
  1689  00F6A8  20                 	db	32
  1690  00F6A9  54                 	db	84	;'T'
  1691  00F6AA  69                 	db	105	;'i'
  1692  00F6AB  6D                 	db	109	;'m'
  1693  00F6AC  65                 	db	101	;'e'
  1694  00F6AD  3F                 	db	63	;'?'
  1695  00F6AE  3A                 	db	58	;':'
  1696  00F6AF  20                 	db	32
  1697  00F6B0  52                 	db	82	;'R'
  1698  00F6B1  65                 	db	101	;'e'
  1699  00F6B2  74                 	db	116	;'t'
  1700  00F6B3  75                 	db	117	;'u'
  1701  00F6B4  72                 	db	114	;'r'
  1702  00F6B5  6E                 	db	110	;'n'
  1703  00F6B6  73                 	db	115	;'s'
  1704  00F6B7  20                 	db	32
  1705  00F6B8  6C                 	db	108	;'l'
  1706  00F6B9  6F                 	db	111	;'o'
  1707  00F6BA  61                 	db	97	;'a'
  1708  00F6BB  64                 	db	100	;'d'
  1709  00F6BC  20                 	db	32
  1710  00F6BD  6F                 	db	111	;'o'
  1711  00F6BE  6E                 	db	110	;'n'
  1712  00F6BF  20                 	db	32
  1713  00F6C0  74                 	db	116	;'t'
  1714  00F6C1  69                 	db	105	;'i'
  1715  00F6C2  6D                 	db	109	;'m'
  1716  00F6C3  65                 	db	101	;'e'
  1717  00F6C4  20                 	db	32
  1718  00F6C5  73                 	db	115	;'s'
  1719  00F6C6  69                 	db	105	;'i'
  1720  00F6C7  6E                 	db	110	;'n'
  1721  00F6C8  63                 	db	99	;'c'
  1722  00F6C9  65                 	db	101	;'e'
  1723  00F6CA  20                 	db	32
  1724  00F6CB  6C                 	db	108	;'l'
  1725  00F6CC  61                 	db	97	;'a'
  1726  00F6CD  73                 	db	115	;'s'
  1727  00F6CE  74                 	db	116	;'t'
  1728  00F6CF  20                 	db	32
  1729  00F6D0  64                 	db	100	;'d'
  1730  00F6D1  65                 	db	101	;'e'
  1731  00F6D2  76                 	db	118	;'v'
  1732  00F6D3  69                 	db	105	;'i'
  1733  00F6D4  63                 	db	99	;'c'
  1734  00F6D5  65                 	db	101	;'e'
  1735  00F6D6  20                 	db	32
  1736  00F6D7  72                 	db	114	;'r'
  1737  00F6D8  65                 	db	101	;'e'
  1738  00F6D9  73                 	db	115	;'s'
  1739  00F6DA  65                 	db	101	;'e'
  1740  00F6DB  74                 	db	116	;'t'
  1741  00F6DC  20                 	db	32
  1742  00F6DD  69                 	db	105	;'i'
  1743  00F6DE  6E                 	db	110	;'n'
  1744  00F6DF  20                 	db	32
  1745  00F6E0  73                 	db	115	;'s'
  1746  00F6E1  65                 	db	101	;'e'
  1747  00F6E2  63                 	db	99	;'c'
  1748  00F6E3  6F                 	db	111	;'o'
  1749  00F6E4  6E                 	db	110	;'n'
  1750  00F6E5  64                 	db	100	;'d'
  1751  00F6E6  73                 	db	115	;'s'
  1752  00F6E7  0A                 	db	10
  1753  00F6E8  0D                 	db	13
  1754  00F6E9  0A                 	db	10
  1755  00F6EA  0D                 	db	13
  1756  00F6EB  4F                 	db	79	;'O'
  1757  00F6EC  75                 	db	117	;'u'
  1758  00F6ED  74                 	db	116	;'t'
  1759  00F6EE  70                 	db	112	;'p'
  1760  00F6EF  75                 	db	117	;'u'
  1761  00F6F0  74                 	db	116	;'t'
  1762  00F6F1  20                 	db	32
  1763  00F6F2  43                 	db	67	;'C'
  1764  00F6F3  6F                 	db	111	;'o'
  1765  00F6F4  6E                 	db	110	;'n'
  1766  00F6F5  74                 	db	116	;'t'
  1767  00F6F6  72                 	db	114	;'r'
  1768  00F6F7  6F                 	db	111	;'o'
  1769  00F6F8  6C                 	db	108	;'l'
  1770  00F6F9  20                 	db	32
  1771  00F6FA  43                 	db	67	;'C'
  1772  00F6FB  6F                 	db	111	;'o'
  1773  00F6FC  6D                 	db	109	;'m'
  1774  00F6FD  6D                 	db	109	;'m'
  1775  00F6FE  61                 	db	97	;'a'
  1776  00F6FF  6E                 	db	110	;'n'
  1777  00F700  64                 	db	100	;'d'
  1778  00F701  73                 	db	115	;'s'
  1779  00F702  3A                 	db	58	;':'
  1780  00F703  0A                 	db	10
  1781  00F704  0D                 	db	13
  1782  00F705  20                 	db	32
  1783  00F706  20                 	db	32
  1784  00F707  20                 	db	32
  1785  00F708  45                 	db	69	;'E'
  1786  00F709  6E                 	db	110	;'n'
  1787  00F70A  61                 	db	97	;'a'
  1788  00F70B  62                 	db	98	;'b'
  1789  00F70C  6C                 	db	108	;'l'
  1790  00F70D  65                 	db	101	;'e'
  1791  00F70E  20                 	db	32
  1792  00F70F  44                 	db	68	;'D'
  1793  00F710  69                 	db	105	;'i'
  1794  00F711  6D                 	db	109	;'m'
  1795  00F712  6D                 	db	109	;'m'
  1796  00F713  69                 	db	105	;'i'
  1797  00F714  6E                 	db	110	;'n'
  1798  00F715  67                 	db	103	;'g'
  1799  00F716  3A                 	db	58	;':'
  1800  00F717  20                 	db	32
  1801  00F718  45                 	db	69	;'E'
  1802  00F719  6E                 	db	110	;'n'
  1803  00F71A  61                 	db	97	;'a'
  1804  00F71B  62                 	db	98	;'b'
  1805  00F71C  6C                 	db	108	;'l'
  1806  00F71D  65                 	db	101	;'e'
  1807  00F71E  20                 	db	32
  1808  00F71F  54                 	db	84	;'T'
  1809  00F720  52                 	db	82	;'R'
  1810  00F721  49                 	db	73	;'I'
  1811  00F722  41                 	db	65	;'A'
  1812  00F723  43                 	db	67	;'C'
  1813  00F724  20                 	db	32
  1814  00F725  6F                 	db	111	;'o'
  1815  00F726  75                 	db	117	;'u'
  1816  00F727  74                 	db	116	;'t'
  1817  00F728  70                 	db	112	;'p'
  1818  00F729  75                 	db	117	;'u'
  1819  00F72A  74                 	db	116	;'t'
  1820  00F72B  20                 	db	32
  1821  00F72C  64                 	db	100	;'d'
  1822  00F72D  69                 	db	105	;'i'
  1823  00F72E  6D                 	db	109	;'m'
  1824  00F72F  6D                 	db	109	;'m'
  1825  00F730  69                 	db	105	;'i'
  1826  00F731  6E                 	db	110	;'n'
  1827  00F732  67                 	db	103	;'g'
  1828  00F733  0A                 	db	10
  1829  00F734  0D                 	db	13
  1830  00F735  20                 	db	32
  1831  00F736  20                 	db	32
  1832  00F737  20                 	db	32
  1833  00F738  44                 	db	68	;'D'
  1834  00F739  69                 	db	105	;'i'
  1835  00F73A  73                 	db	115	;'s'
  1836  00F73B  61                 	db	97	;'a'
  1837  00F73C  62                 	db	98	;'b'
  1838  00F73D  6C                 	db	108	;'l'
  1839  00F73E  65                 	db	101	;'e'
  1840  00F73F  20                 	db	32
  1841  00F740  44                 	db	68	;'D'
  1842  00F741  69                 	db	105	;'i'
  1843  00F742  6D                 	db	109	;'m'
  1844  00F743  6D                 	db	109	;'m'
  1845  00F744  69                 	db	105	;'i'
  1846  00F745  6E                 	db	110	;'n'
  1847  00F746  67                 	db	103	;'g'
  1848  00F747  3A                 	db	58	;':'
  1849  00F748  20                 	db	32
  1850  00F749  44                 	db	68	;'D'
  1851  00F74A  69                 	db	105	;'i'
  1852  00F74B  73                 	db	115	;'s'
  1853  00F74C  61                 	db	97	;'a'
  1854  00F74D  62                 	db	98	;'b'
  1855  00F74E  6C                 	db	108	;'l'
  1856  00F74F  65                 	db	101	;'e'
  1857  00F750  20                 	db	32
  1858  00F751  54                 	db	84	;'T'
  1859  00F752  52                 	db	82	;'R'
  1860  00F753  49                 	db	73	;'I'
  1861  00F754  41                 	db	65	;'A'
  1862  00F755  43                 	db	67	;'C'
  1863  00F756  20                 	db	32
  1864  00F757  6F                 	db	111	;'o'
  1865  00F758  75                 	db	117	;'u'
  1866  00F759  74                 	db	116	;'t'
  1867  00F75A  70                 	db	112	;'p'
  1868  00F75B  75                 	db	117	;'u'
  1869  00F75C  74                 	db	116	;'t'
  1870  00F75D  20                 	db	32
  1871  00F75E  64                 	db	100	;'d'
  1872  00F75F  69                 	db	105	;'i'
  1873  00F760  6D                 	db	109	;'m'
  1874  00F761  6D                 	db	109	;'m'
  1875  00F762  69                 	db	105	;'i'
  1876  00F763  6E                 	db	110	;'n'
  1877  00F764  67                 	db	103	;'g'
  1878  00F765  0A                 	db	10
  1879  00F766  0D                 	db	13
  1880  00F767  20                 	db	32
  1881  00F768  20                 	db	32
  1882  00F769  20                 	db	32
  1883  00F76A  45                 	db	69	;'E'
  1884  00F76B  6E                 	db	110	;'n'
  1885  00F76C  61                 	db	97	;'a'
  1886  00F76D  62                 	db	98	;'b'
  1887  00F76E  6C                 	db	108	;'l'
  1888  00F76F  65                 	db	101	;'e'
  1889  00F770  20                 	db	32
  1890  00F771  4C                 	db	76	;'L'
  1891  00F772  6F                 	db	111	;'o'
  1892  00F773  61                 	db	97	;'a'
  1893  00F774  64                 	db	100	;'d'
  1894  00F775  3A                 	db	58	;':'
  1895  00F776  20                 	db	32
  1896  00F777  45                 	db	69	;'E'
  1897  00F778  6E                 	db	110	;'n'
  1898  00F779  61                 	db	97	;'a'
  1899  00F77A  62                 	db	98	;'b'
  1900  00F77B  6C                 	db	108	;'l'
  1901  00F77C  65                 	db	101	;'e'
  1902  00F77D  73                 	db	115	;'s'
  1903  00F77E  20                 	db	32
  1904  00F77F  74                 	db	116	;'t'
  1905  00F780  68                 	db	104	;'h'
  1906  00F781  65                 	db	101	;'e'
  1907  00F782  20                 	db	32
  1908  00F783  6F                 	db	111	;'o'
  1909  00F784  75                 	db	117	;'u'
  1910  00F785  74                 	db	116	;'t'
  1911  00F786  70                 	db	112	;'p'
  1912  00F787  75                 	db	117	;'u'
  1913  00F788  74                 	db	116	;'t'
  1914  00F789  20                 	db	32
  1915  00F78A  54                 	db	84	;'T'
  1916  00F78B  52                 	db	82	;'R'
  1917  00F78C  49                 	db	73	;'I'
  1918  00F78D  41                 	db	65	;'A'
  1919  00F78E  43                 	db	67	;'C'
  1920  00F78F  20                 	db	32
  1921  00F790  77                 	db	119	;'w'
  1922  00F791  69                 	db	105	;'i'
  1923  00F792  74                 	db	116	;'t'
  1924  00F793  68                 	db	104	;'h'
  1925  00F794  20                 	db	32
  1926  00F795  64                 	db	100	;'d'
  1927  00F796  69                 	db	105	;'i'
  1928  00F797  6D                 	db	109	;'m'
  1929  00F798  6D                 	db	109	;'m'
  1930  00F799  69                 	db	105	;'i'
  1931  00F79A  6E                 	db	110	;'n'
  1932  00F79B  67                 	db	103	;'g'
  1933  00F79C  20                 	db	32
  1934  00F79D  64                 	db	100	;'d'
  1935  00F79E  69                 	db	105	;'i'
  1936  00F79F  73                 	db	115	;'s'
  1937  00F7A0  61                 	db	97	;'a'
  1938  00F7A1  62                 	db	98	;'b'
  1939  00F7A2  6C                 	db	108	;'l'
  1940  00F7A3  65                 	db	101	;'e'
  1941  00F7A4  64                 	db	100	;'d'
  1942  00F7A5  0A                 	db	10
  1943  00F7A6  0D                 	db	13
  1944  00F7A7  20                 	db	32
  1945  00F7A8  20                 	db	32
  1946  00F7A9  20                 	db	32
  1947  00F7AA  44                 	db	68	;'D'
  1948  00F7AB  69                 	db	105	;'i'
  1949  00F7AC  73                 	db	115	;'s'
  1950  00F7AD  61                 	db	97	;'a'
  1951  00F7AE  62                 	db	98	;'b'
  1952  00F7AF  6C                 	db	108	;'l'
  1953  00F7B0  65                 	db	101	;'e'
  1954  00F7B1  20                 	db	32
  1955  00F7B2  4C                 	db	76	;'L'
  1956  00F7B3  6F                 	db	111	;'o'
  1957  00F7B4  61                 	db	97	;'a'
  1958  00F7B5  64                 	db	100	;'d'
  1959  00F7B6  3A                 	db	58	;':'
  1960  00F7B7  20                 	db	32
  1961  00F7B8  44                 	db	68	;'D'
  1962  00F7B9  69                 	db	105	;'i'
  1963  00F7BA  73                 	db	115	;'s'
  1964  00F7BB  61                 	db	97	;'a'
  1965  00F7BC  62                 	db	98	;'b'
  1966  00F7BD  6C                 	db	108	;'l'
  1967  00F7BE  65                 	db	101	;'e'
  1968  00F7BF  73                 	db	115	;'s'
  1969  00F7C0  20                 	db	32
  1970  00F7C1  74                 	db	116	;'t'
  1971  00F7C2  68                 	db	104	;'h'
  1972  00F7C3  65                 	db	101	;'e'
  1973  00F7C4  20                 	db	32
  1974  00F7C5  6F                 	db	111	;'o'
  1975  00F7C6  75                 	db	117	;'u'
  1976  00F7C7  74                 	db	116	;'t'
  1977  00F7C8  70                 	db	112	;'p'
  1978  00F7C9  75                 	db	117	;'u'
  1979  00F7CA  74                 	db	116	;'t'
  1980  00F7CB  20                 	db	32
  1981  00F7CC  54                 	db	84	;'T'
  1982  00F7CD  52                 	db	82	;'R'
  1983  00F7CE  49                 	db	73	;'I'
  1984  00F7CF  41                 	db	65	;'A'
  1985  00F7D0  43                 	db	67	;'C'
  1986  00F7D1  20                 	db	32
  1987  00F7D2  63                 	db	99	;'c'
  1988  00F7D3  6F                 	db	111	;'o'
  1989  00F7D4  6D                 	db	109	;'m'
  1990  00F7D5  70                 	db	112	;'p'
  1991  00F7D6  6C                 	db	108	;'l'
  1992  00F7D7  65                 	db	101	;'e'
  1993  00F7D8  74                 	db	116	;'t'
  1994  00F7D9  65                 	db	101	;'e'
  1995  00F7DA  6C                 	db	108	;'l'
  1996  00F7DB  79                 	db	121	;'y'
  1997  00F7DC  0A                 	db	10
  1998  00F7DD  0D                 	db	13
  1999  00F7DE  20                 	db	32
  2000  00F7DF  20                 	db	32
  2001  00F7E0  20                 	db	32
  2002  00F7E1  53                 	db	83	;'S'
  2003  00F7E2  65                 	db	101	;'e'
  2004  00F7E3  74                 	db	116	;'t'
  2005  00F7E4  20                 	db	32
  2006  00F7E5  44                 	db	68	;'D'
  2007  00F7E6  69                 	db	105	;'i'
  2008  00F7E7  6D                 	db	109	;'m'
  2009  00F7E8  6D                 	db	109	;'m'
  2010  00F7E9  69                 	db	105	;'i'
  2011  00F7EA  6E                 	db	110	;'n'
  2012  00F7EB  67                 	db	103	;'g'
  2013  00F7EC  20                 	db	32
  2014  00F7ED  50                 	db	80	;'P'
  2015  00F7EE  65                 	db	101	;'e'
  2016  00F7EF  72                 	db	114	;'r'
  2017  00F7F0  63                 	db	99	;'c'
  2018  00F7F1  65                 	db	101	;'e'
  2019  00F7F2  6E                 	db	110	;'n'
  2020  00F7F3  74                 	db	116	;'t'
  2021  00F7F4  61                 	db	97	;'a'
  2022  00F7F5  67                 	db	103	;'g'
  2023  00F7F6  65                 	db	101	;'e'
  2024  00F7F7  3A                 	db	58	;':'
  2025  00F7F8  20                 	db	32
  2026  00F7F9  3C                 	db	60	;'<'
  2027  00F7FA  78                 	db	120	;'x'
  2028  00F7FB  3E                 	db	62	;'>'
  2029  00F7FC  3A                 	db	58	;':'
  2030  00F7FD  20                 	db	32
  2031  00F7FE  53                 	db	83	;'S'
  2032  00F7FF  65                 	db	101	;'e'
  2033  00F800  74                 	db	116	;'t'
  2034  00F801  73                 	db	115	;'s'
  2035  00F802  20                 	db	32
  2036  00F803  74                 	db	116	;'t'
  2037  00F804  68                 	db	104	;'h'
  2038  00F805  65                 	db	101	;'e'
  2039  00F806  20                 	db	32
  2040  00F807  6F                 	db	111	;'o'
  2041  00F808  75                 	db	117	;'u'
  2042  00F809  74                 	db	116	;'t'
  2043  00F80A  70                 	db	112	;'p'
  2044  00F80B  75                 	db	117	;'u'
  2045  00F80C  74                 	db	116	;'t'
  2046  00F80D  20                 	db	32
  2047  00F80E  64                 	db	100	;'d'
  2048  00F80F  69                 	db	105	;'i'
  2049  00F810  6D                 	db	109	;'m'
  2050  00F811  6D                 	db	109	;'m'
  2051  00F812  69                 	db	105	;'i'
  2052  00F813  6E                 	db	110	;'n'
  2053  00F814  67                 	db	103	;'g'
  2054  00F815  20                 	db	32
  2055  00F816  70                 	db	112	;'p'
  2056  00F817  65                 	db	101	;'e'
  2057  00F818  72                 	db	114	;'r'
  2058  00F819  63                 	db	99	;'c'
  2059  00F81A  65                 	db	101	;'e'
  2060  00F81B  6E                 	db	110	;'n'
  2061  00F81C  74                 	db	116	;'t'
  2062  00F81D  61                 	db	97	;'a'
  2063  00F81E  67                 	db	103	;'g'
  2064  00F81F  65                 	db	101	;'e'
  2065  00F820  20                 	db	32
  2066  00F821  61                 	db	97	;'a'
  2067  00F822  73                 	db	115	;'s'
  2068  00F823  20                 	db	32
  2069  00F824  78                 	db	120	;'x'
  2070  00F825  20                 	db	32
  2071  00F826  70                 	db	112	;'p'
  2072  00F827  65                 	db	101	;'e'
  2073  00F828  72                 	db	114	;'r'
  2074  00F829  63                 	db	99	;'c'
  2075  00F82A  65                 	db	101	;'e'
  2076  00F82B  6E                 	db	110	;'n'
  2077  00F82C  74                 	db	116	;'t'
  2078  00F82D  0A                 	db	10
  2079  00F82E  0D                 	db	13
  2080  00F82F  00                 	db	0
  2081  00F830  20                 	db	32
  2082  00F831  20                 	db	32
  2083  00F832  20                 	db	32
  2084  00F833  20                 	db	32
  2085  00F834  42                 	db	66	;'B'
  2086  00F835  6F                 	db	111	;'o'
  2087  00F836  6F                 	db	111	;'o'
  2088  00F837  74                 	db	116	;'t'
  2089  00F838  20                 	db	32
  2090  00F839  63                 	db	99	;'c'
  2091  00F83A  6F                 	db	111	;'o'
  2092  00F83B  6D                 	db	109	;'m'
  2093  00F83C  70                 	db	112	;'p'
  2094  00F83D  6C                 	db	108	;'l'
  2095  00F83E  65                 	db	101	;'e'
  2096  00F83F  74                 	db	116	;'t'
  2097  00F840  65                 	db	101	;'e'
  2098  00F841  0A                 	db	10
  2099  00F842  0D                 	db	13
  2100  00F843  20                 	db	32
  2101  00F844  20                 	db	32
  2102  00F845  20                 	db	32
  2103  00F846  20                 	db	32
  2104  00F847  50                 	db	80	;'P'
  2105  00F848  49                 	db	73	;'I'
  2106  00F849  43                 	db	67	;'C'
  2107  00F84A  31                 	db	49	;'1'
  2108  00F84B  38                 	db	56	;'8'
  2109  00F84C  46                 	db	70	;'F'
  2110  00F84D  36                 	db	54	;'6'
  2111  00F84E  37                 	db	55	;'7'
  2112  00F84F  4B                 	db	75	;'K'
  2113  00F850  34                 	db	52	;'4'
  2114  00F851  30                 	db	48	;'0'
  2115  00F852  20                 	db	32
  2116  00F853  6D                 	db	109	;'m'
  2117  00F854  54                 	db	84	;'T'
  2118  00F855  6F                 	db	111	;'o'
  2119  00F856  75                 	db	117	;'u'
  2120  00F857  63                 	db	99	;'c'
  2121  00F858  68                 	db	104	;'h'
  2122  00F859  20                 	db	32
  2123  00F85A  54                 	db	84	;'T'
  2124  00F85B  65                 	db	101	;'e'
  2125  00F85C  73                 	db	115	;'s'
  2126  00F85D  74                 	db	116	;'t'
  2127  00F85E  20                 	db	32
  2128  00F85F  42                 	db	66	;'B'
  2129  00F860  6F                 	db	111	;'o'
  2130  00F861  61                 	db	97	;'a'
  2131  00F862  72                 	db	114	;'r'
  2132  00F863  64                 	db	100	;'d'
  2133  00F864  0A                 	db	10
  2134  00F865  0D                 	db	13
  2135  00F866  20                 	db	32
  2136  00F867  20                 	db	32
  2137  00F868  20                 	db	32
  2138  00F869  20                 	db	32
  2139  00F86A  45                 	db	69	;'E'
  2140  00F86B  76                 	db	118	;'v'
  2141  00F86C  61                 	db	97	;'a'
  2142  00F86D  6C                 	db	108	;'l'
  2143  00F86E  75                 	db	117	;'u'
  2144  00F86F  61                 	db	97	;'a'
  2145  00F870  74                 	db	116	;'t'
  2146  00F871  65                 	db	101	;'e'
  2147  00F872  73                 	db	115	;'s'
  2148  00F873  20                 	db	32
  2149  00F874  74                 	db	116	;'t'
  2150  00F875  68                 	db	104	;'h'
  2151  00F876  65                 	db	101	;'e'
  2152  00F877  20                 	db	32
  2153  00F878  6D                 	db	109	;'m'
  2154  00F879  54                 	db	84	;'T'
  2155  00F87A  6F                 	db	111	;'o'
  2156  00F87B  75                 	db	117	;'u'
  2157  00F87C  63                 	db	99	;'c'
  2158  00F87D  68                 	db	104	;'h'
  2159  00F87E  20                 	db	32
  2160  00F87F  63                 	db	99	;'c'
  2161  00F880  61                 	db	97	;'a'
  2162  00F881  70                 	db	112	;'p'
  2163  00F882  61                 	db	97	;'a'
  2164  00F883  63                 	db	99	;'c'
  2165  00F884  69                 	db	105	;'i'
  2166  00F885  74                 	db	116	;'t'
  2167  00F886  69                 	db	105	;'i'
  2168  00F887  76                 	db	118	;'v'
  2169  00F888  65                 	db	101	;'e'
  2170  00F889  20                 	db	32
  2171  00F88A  74                 	db	116	;'t'
  2172  00F88B  6F                 	db	111	;'o'
  2173  00F88C  75                 	db	117	;'u'
  2174  00F88D  63                 	db	99	;'c'
  2175  00F88E  68                 	db	104	;'h'
  2176  00F88F  20                 	db	32
  2177  00F890  6C                 	db	108	;'l'
  2178  00F891  69                 	db	105	;'i'
  2179  00F892  62                 	db	98	;'b'
  2180  00F893  72                 	db	114	;'r'
  2181  00F894  61                 	db	97	;'a'
  2182  00F895  72                 	db	114	;'r'
  2183  00F896  79                 	db	121	;'y'
  2184  00F897  20                 	db	32
  2185  00F898  64                 	db	100	;'d'
  2186  00F899  69                 	db	105	;'i'
  2187  00F89A  73                 	db	115	;'s'
  2188  00F89B  74                 	db	116	;'t'
  2189  00F89C  72                 	db	114	;'r'
  2190  00F89D  69                 	db	105	;'i'
  2191  00F89E  62                 	db	98	;'b'
  2192  00F89F  75                 	db	117	;'u'
  2193  00F8A0  74                 	db	116	;'t'
  2194  00F8A1  65                 	db	101	;'e'
  2195  00F8A2  64                 	db	100	;'d'
  2196  00F8A3  20                 	db	32
  2197  00F8A4  62                 	db	98	;'b'
  2198  00F8A5  79                 	db	121	;'y'
  2199  00F8A6  20                 	db	32
  2200  00F8A7  4D                 	db	77	;'M'
  2201  00F8A8  69                 	db	105	;'i'
  2202  00F8A9  63                 	db	99	;'c'
  2203  00F8AA  72                 	db	114	;'r'
  2204  00F8AB  6F                 	db	111	;'o'
  2205  00F8AC  63                 	db	99	;'c'
  2206  00F8AD  68                 	db	104	;'h'
  2207  00F8AE  69                 	db	105	;'i'
  2208  00F8AF  70                 	db	112	;'p'
  2209  00F8B0  0A                 	db	10
  2210  00F8B1  0D                 	db	13
  2211  00F8B2  20                 	db	32
  2212  00F8B3  20                 	db	32
  2213  00F8B4  20                 	db	32
  2214  00F8B5  20                 	db	32
  2215  00F8B6  53                 	db	83	;'S'
  2216  00F8B7  65                 	db	101	;'e'
  2217  00F8B8  74                 	db	116	;'t'
  2218  00F8B9  73                 	db	115	;'s'
  2219  00F8BA  20                 	db	32
  2220  00F8BB  74                 	db	116	;'t'
  2221  00F8BC  68                 	db	104	;'h'
  2222  00F8BD  65                 	db	101	;'e'
  2223  00F8BE  20                 	db	32
  2224  00F8BF  73                 	db	115	;'s'
  2225  00F8C0  74                 	db	116	;'t'
  2226  00F8C1  61                 	db	97	;'a'
  2227  00F8C2  74                 	db	116	;'t'
  2228  00F8C3  65                 	db	101	;'e'
  2229  00F8C4  20                 	db	32
  2230  00F8C5  6F                 	db	111	;'o'
  2231  00F8C6  66                 	db	102	;'f'
  2232  00F8C7  20                 	db	32
  2233  00F8C8  66                 	db	102	;'f'
  2234  00F8C9  69                 	db	105	;'i'
  2235  00F8CA  76                 	db	118	;'v'
  2236  00F8CB  65                 	db	101	;'e'
  2237  00F8CC  20                 	db	32
  2238  00F8CD  4C                 	db	76	;'L'
  2239  00F8CE  45                 	db	69	;'E'
  2240  00F8CF  44                 	db	68	;'D'
  2241  00F8D0  73                 	db	115	;'s'
  2242  00F8D1  20                 	db	32
  2243  00F8D2  62                 	db	98	;'b'
  2244  00F8D3  61                 	db	97	;'a'
  2245  00F8D4  73                 	db	115	;'s'
  2246  00F8D5  65                 	db	101	;'e'
  2247  00F8D6  64                 	db	100	;'d'
  2248  00F8D7  20                 	db	32
  2249  00F8D8  6F                 	db	111	;'o'
  2250  00F8D9  6E                 	db	110	;'n'
  2251  00F8DA  20                 	db	32
  2252  00F8DB  6D                 	db	109	;'m'
  2253  00F8DC  54                 	db	84	;'T'
  2254  00F8DD  6F                 	db	111	;'o'
  2255  00F8DE  75                 	db	117	;'u'
  2256  00F8DF  63                 	db	99	;'c'
  2257  00F8E0  68                 	db	104	;'h'
  2258  00F8E1  20                 	db	32
  2259  00F8E2  63                 	db	99	;'c'
  2260  00F8E3  61                 	db	97	;'a'
  2261  00F8E4  70                 	db	112	;'p'
  2262  00F8E5  61                 	db	97	;'a'
  2263  00F8E6  63                 	db	99	;'c'
  2264  00F8E7  69                 	db	105	;'i'
  2265  00F8E8  74                 	db	116	;'t'
  2266  00F8E9  69                 	db	105	;'i'
  2267  00F8EA  76                 	db	118	;'v'
  2268  00F8EB  65                 	db	101	;'e'
  2269  00F8EC  20                 	db	32
  2270  00F8ED  70                 	db	112	;'p'
  2271  00F8EE  75                 	db	117	;'u'
  2272  00F8EF  73                 	db	115	;'s'
  2273  00F8F0  68                 	db	104	;'h'
  2274  00F8F1  62                 	db	98	;'b'
  2275  00F8F2  75                 	db	117	;'u'
  2276  00F8F3  74                 	db	116	;'t'
  2277  00F8F4  74                 	db	116	;'t'
  2278  00F8F5  6F                 	db	111	;'o'
  2279  00F8F6  6E                 	db	110	;'n'
  2280  00F8F7  73                 	db	115	;'s'
  2281  00F8F8  0A                 	db	10
  2282  00F8F9  0D                 	db	13
  2283  00F8FA  20                 	db	32
  2284  00F8FB  20                 	db	32
  2285  00F8FC  20                 	db	32
  2286  00F8FD  20                 	db	32
  2287  00F8FE  42                 	db	66	;'B'
  2288  00F8FF  61                 	db	97	;'a'
  2289  00F900  75                 	db	117	;'u'
  2290  00F901  64                 	db	100	;'d'
  2291  00F902  20                 	db	32
  2292  00F903  72                 	db	114	;'r'
  2293  00F904  61                 	db	97	;'a'
  2294  00F905  74                 	db	116	;'t'
  2295  00F906  65                 	db	101	;'e'
  2296  00F907  3A                 	db	58	;':'
  2297  00F908  20                 	db	32
  2298  00F909  31                 	db	49	;'1'
  2299  00F90A  31                 	db	49	;'1'
  2300  00F90B  35                 	db	53	;'5'
  2301  00F90C  32                 	db	50	;'2'
  2302  00F90D  30                 	db	48	;'0'
  2303  00F90E  30                 	db	48	;'0'
  2304  00F90F  20                 	db	32
  2305  00F910  62                 	db	98	;'b'
  2306  00F911  70                 	db	112	;'p'
  2307  00F912  73                 	db	115	;'s'
  2308  00F913  0A                 	db	10
  2309  00F914  0D                 	db	13
  2310  00F915  20                 	db	32
  2311  00F916  20                 	db	32
  2312  00F917  20                 	db	32
  2313  00F918  20                 	db	32
  2314  00F919  4E                 	db	78	;'N'
  2315  00F91A  6F                 	db	111	;'o'
  2316  00F91B  20                 	db	32
  2317  00F91C  70                 	db	112	;'p'
  2318  00F91D  61                 	db	97	;'a'
  2319  00F91E  72                 	db	114	;'r'
  2320  00F91F  69                 	db	105	;'i'
  2321  00F920  74                 	db	116	;'t'
  2322  00F921  79                 	db	121	;'y'
  2323  00F922  2C                 	db	44
  2324  00F923  20                 	db	32
  2325  00F924  38                 	db	56	;'8'
  2326  00F925  20                 	db	32
  2327  00F926  62                 	db	98	;'b'
  2328  00F927  69                 	db	105	;'i'
  2329  00F928  74                 	db	116	;'t'
  2330  00F929  73                 	db	115	;'s'
  2331  00F92A  2C                 	db	44
  2332  00F92B  20                 	db	32
  2333  00F92C  6E                 	db	110	;'n'
  2334  00F92D  6F                 	db	111	;'o'
  2335  00F92E  20                 	db	32
  2336  00F92F  66                 	db	102	;'f'
  2337  00F930  6C                 	db	108	;'l'
  2338  00F931  6F                 	db	111	;'o'
  2339  00F932  77                 	db	119	;'w'
  2340  00F933  20                 	db	32
  2341  00F934  63                 	db	99	;'c'
  2342  00F935  6F                 	db	111	;'o'
  2343  00F936  6E                 	db	110	;'n'
  2344  00F937  74                 	db	116	;'t'
  2345  00F938  72                 	db	114	;'r'
  2346  00F939  6F                 	db	111	;'o'
  2347  00F93A  6C                 	db	108	;'l'
  2348  00F93B  2C                 	db	44
  2349  00F93C  20                 	db	32
  2350  00F93D  31                 	db	49	;'1'
  2351  00F93E  20                 	db	32
  2352  00F93F  73                 	db	115	;'s'
  2353  00F940  74                 	db	116	;'t'
  2354  00F941  6F                 	db	111	;'o'
  2355  00F942  70                 	db	112	;'p'
  2356  00F943  20                 	db	32
  2357  00F944  62                 	db	98	;'b'
  2358  00F945  69                 	db	105	;'i'
  2359  00F946  74                 	db	116	;'t'
  2360  00F947  0A                 	db	10
  2361  00F948  0D                 	db	13
  2362  00F949  20                 	db	32
  2363  00F94A  20                 	db	32
  2364  00F94B  20                 	db	32
  2365  00F94C  20                 	db	32
  2366  00F94D  43                 	db	67	;'C'
  2367  00F94E  6F                 	db	111	;'o'
  2368  00F94F  6D                 	db	109	;'m'
  2369  00F950  6D                 	db	109	;'m'
  2370  00F951  61                 	db	97	;'a'
  2371  00F952  6E                 	db	110	;'n'
  2372  00F953  64                 	db	100	;'d'
  2373  00F954  73                 	db	115	;'s'
  2374  00F955  20                 	db	32
  2375  00F956  61                 	db	97	;'a'
  2376  00F957  72                 	db	114	;'r'
  2377  00F958  65                 	db	101	;'e'
  2378  00F959  20                 	db	32
  2379  00F95A  63                 	db	99	;'c'
  2380  00F95B  61                 	db	97	;'a'
  2381  00F95C  73                 	db	115	;'s'
  2382  00F95D  65                 	db	101	;'e'
  2383  00F95E  20                 	db	32
  2384  00F95F  73                 	db	115	;'s'
  2385  00F960  65                 	db	101	;'e'
  2386  00F961  6E                 	db	110	;'n'
  2387  00F962  73                 	db	115	;'s'
  2388  00F963  69                 	db	105	;'i'
  2389  00F964  74                 	db	116	;'t'
  2390  00F965  69                 	db	105	;'i'
  2391  00F966  76                 	db	118	;'v'
  2392  00F967  65                 	db	101	;'e'
  2393  00F968  0A                 	db	10
  2394  00F969  0D                 	db	13
  2395  00F96A  20                 	db	32
  2396  00F96B  20                 	db	32
  2397  00F96C  20                 	db	32
  2398  00F96D  20                 	db	32
  2399  00F96E  45                 	db	69	;'E'
  2400  00F96F  6E                 	db	110	;'n'
  2401  00F970  74                 	db	116	;'t'
  2402  00F971  65                 	db	101	;'e'
  2403  00F972  72                 	db	114	;'r'
  2404  00F973  20                 	db	32
  2405  00F974  61                 	db	97	;'a'
  2406  00F975  20                 	db	32
  2407  00F976  63                 	db	99	;'c'
  2408  00F977  6F                 	db	111	;'o'
  2409  00F978  6D                 	db	109	;'m'
  2410  00F979  6D                 	db	109	;'m'
  2411  00F97A  61                 	db	97	;'a'
  2412  00F97B  6E                 	db	110	;'n'
  2413  00F97C  64                 	db	100	;'d'
  2414  00F97D  2C                 	db	44
  2415  00F97E  20                 	db	32
  2416  00F97F  6F                 	db	111	;'o'
  2417  00F980  72                 	db	114	;'r'
  2418  00F981  20                 	db	32
  2419  00F982  65                 	db	101	;'e'
  2420  00F983  6E                 	db	110	;'n'
  2421  00F984  74                 	db	116	;'t'
  2422  00F985  65                 	db	101	;'e'
  2423  00F986  72                 	db	114	;'r'
  2424  00F987  20                 	db	32
  2425  00F988  48                 	db	72	;'H'
  2426  00F989  65                 	db	101	;'e'
  2427  00F98A  6C                 	db	108	;'l'
  2428  00F98B  70                 	db	112	;'p'
  2429  00F98C  20                 	db	32
  2430  00F98D  66                 	db	102	;'f'
  2431  00F98E  6F                 	db	111	;'o'
  2432  00F98F  72                 	db	114	;'r'
  2433  00F990  20                 	db	32
  2434  00F991  6C                 	db	108	;'l'
  2435  00F992  69                 	db	105	;'i'
  2436  00F993  73                 	db	115	;'s'
  2437  00F994  74                 	db	116	;'t'
  2438  00F995  20                 	db	32
  2439  00F996  6F                 	db	111	;'o'
  2440  00F997  66                 	db	102	;'f'
  2441  00F998  20                 	db	32
  2442  00F999  63                 	db	99	;'c'
  2443  00F99A  6F                 	db	111	;'o'
  2444  00F99B  6D                 	db	109	;'m'
  2445  00F99C  6D                 	db	109	;'m'
  2446  00F99D  61                 	db	97	;'a'
  2447  00F99E  6E                 	db	110	;'n'
  2448  00F99F  64                 	db	100	;'d'
  2449  00F9A0  73                 	db	115	;'s'
  2450  00F9A1  0A                 	db	10
  2451  00F9A2  0D                 	db	13
  2452  00F9A3  00                 	db	0
  2453  00F9A4                     STR_79:
  2454  00F9A4  49                 	db	73	;'I'
  2455  00F9A5  66                 	db	102	;'f'
  2456  00F9A6  20                 	db	32
  2457  00F9A7  79                 	db	121	;'y'
  2458  00F9A8  6F                 	db	111	;'o'
  2459  00F9A9  75                 	db	117	;'u'
  2460  00F9AA  27                 	db	39
  2461  00F9AB  64                 	db	100	;'d'
  2462  00F9AC  20                 	db	32
  2463  00F9AD  6C                 	db	108	;'l'
  2464  00F9AE  69                 	db	105	;'i'
  2465  00F9AF  6B                 	db	107	;'k'
  2466  00F9B0  65                 	db	101	;'e'
  2467  00F9B1  20                 	db	32
  2468  00F9B2  74                 	db	116	;'t'
  2469  00F9B3  6F                 	db	111	;'o'
  2470  00F9B4  20                 	db	32
  2471  00F9B5  63                 	db	99	;'c'
  2472  00F9B6  6F                 	db	111	;'o'
  2473  00F9B7  6D                 	db	109	;'m'
  2474  00F9B8  70                 	db	112	;'p'
  2475  00F9B9  6C                 	db	108	;'l'
  2476  00F9BA  65                 	db	101	;'e'
  2477  00F9BB  74                 	db	116	;'t'
  2478  00F9BC  65                 	db	101	;'e'
  2479  00F9BD  6C                 	db	108	;'l'
  2480  00F9BE  79                 	db	121	;'y'
  2481  00F9BF  20                 	db	32
  2482  00F9C0  65                 	db	101	;'e'
  2483  00F9C1  6E                 	db	110	;'n'
  2484  00F9C2  61                 	db	97	;'a'
  2485  00F9C3  62                 	db	98	;'b'
  2486  00F9C4  6C                 	db	108	;'l'
  2487  00F9C5  65                 	db	101	;'e'
  2488  00F9C6  20                 	db	32
  2489  00F9C7  6F                 	db	111	;'o'
  2490  00F9C8  72                 	db	114	;'r'
  2491  00F9C9  20                 	db	32
  2492  00F9CA  64                 	db	100	;'d'
  2493  00F9CB  69                 	db	105	;'i'
  2494  00F9CC  73                 	db	115	;'s'
  2495  00F9CD  61                 	db	97	;'a'
  2496  00F9CE  62                 	db	98	;'b'
  2497  00F9CF  6C                 	db	108	;'l'
  2498  00F9D0  65                 	db	101	;'e'
  2499  00F9D1  20                 	db	32
  2500  00F9D2  74                 	db	116	;'t'
  2501  00F9D3  68                 	db	104	;'h'
  2502  00F9D4  65                 	db	101	;'e'
  2503  00F9D5  20                 	db	32
  2504  00F9D6  6C                 	db	108	;'l'
  2505  00F9D7  6F                 	db	111	;'o'
  2506  00F9D8  61                 	db	97	;'a'
  2507  00F9D9  64                 	db	100	;'d'
  2508  00F9DA  2C                 	db	44
  2509  00F9DB  20                 	db	32
  2510  00F9DC  64                 	db	100	;'d'
  2511  00F9DD  69                 	db	105	;'i'
  2512  00F9DE  73                 	db	115	;'s'
  2513  00F9DF  61                 	db	97	;'a'
  2514  00F9E0  62                 	db	98	;'b'
  2515  00F9E1  6C                 	db	108	;'l'
  2516  00F9E2  65                 	db	101	;'e'
  2517  00F9E3  20                 	db	32
  2518  00F9E4  64                 	db	100	;'d'
  2519  00F9E5  69                 	db	105	;'i'
  2520  00F9E6  6D                 	db	109	;'m'
  2521  00F9E7  6D                 	db	109	;'m'
  2522  00F9E8  69                 	db	105	;'i'
  2523  00F9E9  6E                 	db	110	;'n'
  2524  00F9EA  67                 	db	103	;'g'
  2525  00F9EB  20                 	db	32
  2526  00F9EC  61                 	db	97	;'a'
  2527  00F9ED  6E                 	db	110	;'n'
  2528  00F9EE  64                 	db	100	;'d'
  2529  00F9EF  20                 	db	32
  2530  00F9F0  75                 	db	117	;'u'
  2531  00F9F1  73                 	db	115	;'s'
  2532  00F9F2  65                 	db	101	;'e'
  2533  00F9F3  20                 	db	32
  2534  00F9F4  72                 	db	114	;'r'
  2535  00F9F5  65                 	db	101	;'e'
  2536  00F9F6  73                 	db	115	;'s'
  2537  00F9F7  70                 	db	112	;'p'
  2538  00F9F8  65                 	db	101	;'e'
  2539  00F9F9  63                 	db	99	;'c'
  2540  00F9FA  74                 	db	116	;'t'
  2541  00F9FB  69                 	db	105	;'i'
  2542  00F9FC  76                 	db	118	;'v'
  2543  00F9FD  65                 	db	101	;'e'
  2544  00F9FE  20                 	db	32
  2545  00F9FF  63                 	db	99	;'c'
  2546  00FA00  6F                 	db	111	;'o'
  2547  00FA01  6D                 	db	109	;'m'
  2548  00FA02  6D                 	db	109	;'m'
  2549  00FA03  61                 	db	97	;'a'
  2550  00FA04  6E                 	db	110	;'n'
  2551  00FA05  64                 	db	100	;'d'
  2552  00FA06  73                 	db	115	;'s'
  2553  00FA07  0A                 	db	10
  2554  00FA08  0D                 	db	13
  2555  00FA09  00                 	db	0
  2556  00FA0A                     STR_78:
  2557  00FA0A  45                 	db	69	;'E'
  2558  00FA0B  52                 	db	82	;'R'
  2559  00FA0C  52                 	db	82	;'R'
  2560  00FA0D  4F                 	db	79	;'O'
  2561  00FA0E  52                 	db	82	;'R'
  2562  00FA0F  3A                 	db	58	;':'
  2563  00FA10  20                 	db	32
  2564  00FA11  50                 	db	80	;'P'
  2565  00FA12  6C                 	db	108	;'l'
  2566  00FA13  65                 	db	101	;'e'
  2567  00FA14  61                 	db	97	;'a'
  2568  00FA15  73                 	db	115	;'s'
  2569  00FA16  65                 	db	101	;'e'
  2570  00FA17  20                 	db	32
  2571  00FA18  73                 	db	115	;'s'
  2572  00FA19  65                 	db	101	;'e'
  2573  00FA1A  74                 	db	116	;'t'
  2574  00FA1B  20                 	db	32
  2575  00FA1C  64                 	db	100	;'d'
  2576  00FA1D  69                 	db	105	;'i'
  2577  00FA1E  6D                 	db	109	;'m'
  2578  00FA1F  6D                 	db	109	;'m'
  2579  00FA20  69                 	db	105	;'i'
  2580  00FA21  6E                 	db	110	;'n'
  2581  00FA22  67                 	db	103	;'g'
  2582  00FA23  20                 	db	32
  2583  00FA24  70                 	db	112	;'p'
  2584  00FA25  65                 	db	101	;'e'
  2585  00FA26  72                 	db	114	;'r'
  2586  00FA27  63                 	db	99	;'c'
  2587  00FA28  65                 	db	101	;'e'
  2588  00FA29  6E                 	db	110	;'n'
  2589  00FA2A  74                 	db	116	;'t'
  2590  00FA2B  61                 	db	97	;'a'
  2591  00FA2C  67                 	db	103	;'g'
  2592  00FA2D  65                 	db	101	;'e'
  2593  00FA2E  20                 	db	32
  2594  00FA2F  74                 	db	116	;'t'
  2595  00FA30  6F                 	db	111	;'o'
  2596  00FA31  20                 	db	32
  2597  00FA32  61                 	db	97	;'a'
  2598  00FA33  6E                 	db	110	;'n'
  2599  00FA34  20                 	db	32
  2600  00FA35  69                 	db	105	;'i'
  2601  00FA36  6E                 	db	110	;'n'
  2602  00FA37  74                 	db	116	;'t'
  2603  00FA38  65                 	db	101	;'e'
  2604  00FA39  67                 	db	103	;'g'
  2605  00FA3A  65                 	db	101	;'e'
  2606  00FA3B  72                 	db	114	;'r'
  2607  00FA3C  20                 	db	32
  2608  00FA3D  67                 	db	103	;'g'
  2609  00FA3E  72                 	db	114	;'r'
  2610  00FA3F  65                 	db	101	;'e'
  2611  00FA40  61                 	db	97	;'a'
  2612  00FA41  74                 	db	116	;'t'
  2613  00FA42  65                 	db	101	;'e'
  2614  00FA43  72                 	db	114	;'r'
  2615  00FA44  20                 	db	32
  2616  00FA45  74                 	db	116	;'t'
  2617  00FA46  68                 	db	104	;'h'
  2618  00FA47  61                 	db	97	;'a'
  2619  00FA48  6E                 	db	110	;'n'
  2620  00FA49  20                 	db	32
  2621  00FA4A  30                 	db	48	;'0'
  2622  00FA4B  20                 	db	32
  2623  00FA4C  61                 	db	97	;'a'
  2624  00FA4D  6E                 	db	110	;'n'
  2625  00FA4E  64                 	db	100	;'d'
  2626  00FA4F  20                 	db	32
  2627  00FA50  6C                 	db	108	;'l'
  2628  00FA51  65                 	db	101	;'e'
  2629  00FA52  73                 	db	115	;'s'
  2630  00FA53  73                 	db	115	;'s'
  2631  00FA54  20                 	db	32
  2632  00FA55  74                 	db	116	;'t'
  2633  00FA56  68                 	db	104	;'h'
  2634  00FA57  61                 	db	97	;'a'
  2635  00FA58  6E                 	db	110	;'n'
  2636  00FA59  20                 	db	32
  2637  00FA5A  31                 	db	49	;'1'
  2638  00FA5B  30                 	db	48	;'0'
  2639  00FA5C  30                 	db	48	;'0'
  2640  00FA5D  0A                 	db	10
  2641  00FA5E  0D                 	db	13
  2642  00FA5F  00                 	db	0
  2643  00FA60                     STR_83:
  2644  00FA60  54                 	db	84	;'T'
  2645  00FA61  68                 	db	104	;'h'
  2646  00FA62  69                 	db	105	;'i'
  2647  00FA63  73                 	db	115	;'s'
  2648  00FA64  20                 	db	32
  2649  00FA65  63                 	db	99	;'c'
  2650  00FA66  6F                 	db	111	;'o'
  2651  00FA67  72                 	db	114	;'r'
  2652  00FA68  72                 	db	114	;'r'
  2653  00FA69  65                 	db	101	;'e'
  2654  00FA6A  73                 	db	115	;'s'
  2655  00FA6B  70                 	db	112	;'p'
  2656  00FA6C  6F                 	db	111	;'o'
  2657  00FA6D  6E                 	db	110	;'n'
  2658  00FA6E  64                 	db	100	;'d'
  2659  00FA6F  73                 	db	115	;'s'
  2660  00FA70  20                 	db	32
  2661  00FA71  74                 	db	116	;'t'
  2662  00FA72  6F                 	db	111	;'o'
  2663  00FA73  20                 	db	32
  2664  00FA74  61                 	db	97	;'a'
  2665  00FA75  20                 	db	32
  2666  00FA76  31                 	db	49	;'1'
  2667  00FA77  36                 	db	54	;'6'
  2668  00FA78  20                 	db	32
  2669  00FA79  62                 	db	98	;'b'
  2670  00FA7A  69                 	db	105	;'i'
  2671  00FA7B  74                 	db	116	;'t'
  2672  00FA7C  20                 	db	32
  2673  00FA7D  74                 	db	116	;'t'
  2674  00FA7E  69                 	db	105	;'i'
  2675  00FA7F  6D                 	db	109	;'m'
  2676  00FA80  65                 	db	101	;'e'
  2677  00FA81  72                 	db	114	;'r'
  2678  00FA82  20                 	db	32
  2679  00FA83  70                 	db	112	;'p'
  2680  00FA84  72                 	db	114	;'r'
  2681  00FA85  65                 	db	101	;'e'
  2682  00FA86  2D                 	db	45
  2683  00FA87  6C                 	db	108	;'l'
  2684  00FA88  6F                 	db	111	;'o'
  2685  00FA89  61                 	db	97	;'a'
  2686  00FA8A  64                 	db	100	;'d'
  2687  00FA8B  20                 	db	32
  2688  00FA8C  76                 	db	118	;'v'
  2689  00FA8D  61                 	db	97	;'a'
  2690  00FA8E  6C                 	db	108	;'l'
  2691  00FA8F  75                 	db	117	;'u'
  2692  00FA90  65                 	db	101	;'e'
  2693  00FA91  20                 	db	32
  2694  00FA92  6F                 	db	111	;'o'
  2695  00FA93  66                 	db	102	;'f'
  2696  00FA94  20                 	db	32
  2697  00FA95  30                 	db	48	;'0'
  2698  00FA96  78                 	db	120	;'x'
  2699  00FA97  25                 	db	37
  2700  00FA98  58                 	db	88	;'X'
  2701  00FA99  20                 	db	32
  2702  00FA9A  28                 	db	40
  2703  00FA9B  25                 	db	37
  2704  00FA9C  75                 	db	117	;'u'
  2705  00FA9D  20                 	db	32
  2706  00FA9E  4C                 	db	76	;'L'
  2707  00FA9F  53                 	db	83	;'S'
  2708  00FAA0  42                 	db	66	;'B'
  2709  00FAA1  73                 	db	115	;'s'
  2710  00FAA2  29                 	db	41
  2711  00FAA3  20                 	db	32
  2712  00FAA4  0A                 	db	10
  2713  00FAA5  0D                 	db	13
  2714  00FAA6  00                 	db	0
  2715  00FAA7                     STR_82:
  2716  00FAA7  43                 	db	67	;'C'
  2717  00FAA8  61                 	db	97	;'a'
  2718  00FAA9  6C                 	db	108	;'l'
  2719  00FAAA  63                 	db	99	;'c'
  2720  00FAAB  75                 	db	117	;'u'
  2721  00FAAC  6C                 	db	108	;'l'
  2722  00FAAD  61                 	db	97	;'a'
  2723  00FAAE  74                 	db	116	;'t'
  2724  00FAAF  65                 	db	101	;'e'
  2725  00FAB0  64                 	db	100	;'d'
  2726  00FAB1  20                 	db	32
  2727  00FAB2  54                 	db	84	;'T'
  2728  00FAB3  52                 	db	82	;'R'
  2729  00FAB4  49                 	db	73	;'I'
  2730  00FAB5  41                 	db	65	;'A'
  2731  00FAB6  43                 	db	67	;'C'
  2732  00FAB7  20                 	db	32
  2733  00FAB8  66                 	db	102	;'f'
  2734  00FAB9  69                 	db	105	;'i'
  2735  00FABA  72                 	db	114	;'r'
  2736  00FABB  69                 	db	105	;'i'
  2737  00FABC  6E                 	db	110	;'n'
  2738  00FABD  67                 	db	103	;'g'
  2739  00FABE  20                 	db	32
  2740  00FABF  61                 	db	97	;'a'
  2741  00FAC0  6E                 	db	110	;'n'
  2742  00FAC1  67                 	db	103	;'g'
  2743  00FAC2  6C                 	db	108	;'l'
  2744  00FAC3  65                 	db	101	;'e'
  2745  00FAC4  20                 	db	32
  2746  00FAC5  69                 	db	105	;'i'
  2747  00FAC6  73                 	db	115	;'s'
  2748  00FAC7  20                 	db	32
  2749  00FAC8  25                 	db	37
  2750  00FAC9  2E                 	db	46
  2751  00FACA  33                 	db	51	;'3'
  2752  00FACB  66                 	db	102	;'f'
  2753  00FACC  20                 	db	32
  2754  00FACD  72                 	db	114	;'r'
  2755  00FACE  61                 	db	97	;'a'
  2756  00FACF  64                 	db	100	;'d'
  2757  00FAD0  69                 	db	105	;'i'
  2758  00FAD1  61                 	db	97	;'a'
  2759  00FAD2  6E                 	db	110	;'n'
  2760  00FAD3  73                 	db	115	;'s'
  2761  00FAD4  20                 	db	32
  2762  00FAD5  28                 	db	40
  2763  00FAD6  25                 	db	37
  2764  00FAD7  2E                 	db	46
  2765  00FAD8  33                 	db	51	;'3'
  2766  00FAD9  66                 	db	102	;'f'
  2767  00FADA  20                 	db	32
  2768  00FADB  64                 	db	100	;'d'
  2769  00FADC  65                 	db	101	;'e'
  2770  00FADD  67                 	db	103	;'g'
  2771  00FADE  72                 	db	114	;'r'
  2772  00FADF  65                 	db	101	;'e'
  2773  00FAE0  65                 	db	101	;'e'
  2774  00FAE1  73                 	db	115	;'s'
  2775  00FAE2  29                 	db	41
  2776  00FAE3  0A                 	db	10
  2777  00FAE4  0D                 	db	13
  2778  00FAE5  00                 	db	0
  2779  00FAE6                     STR_85:
  2780  00FAE6  44                 	db	68	;'D'
  2781  00FAE7  65                 	db	101	;'e'
  2782  00FAE8  76                 	db	118	;'v'
  2783  00FAE9  69                 	db	105	;'i'
  2784  00FAEA  63                 	db	99	;'c'
  2785  00FAEB  65                 	db	101	;'e'
  2786  00FAEC  20                 	db	32
  2787  00FAED  6F                 	db	111	;'o'
  2788  00FAEE  6E                 	db	110	;'n'
  2789  00FAEF  20                 	db	32
  2790  00FAF0  74                 	db	116	;'t'
  2791  00FAF1  69                 	db	105	;'i'
  2792  00FAF2  6D                 	db	109	;'m'
  2793  00FAF3  65                 	db	101	;'e'
  2794  00FAF4  20                 	db	32
  2795  00FAF5  73                 	db	115	;'s'
  2796  00FAF6  69                 	db	105	;'i'
  2797  00FAF7  6E                 	db	110	;'n'
  2798  00FAF8  63                 	db	99	;'c'
  2799  00FAF9  65                 	db	101	;'e'
  2800  00FAFA  20                 	db	32
  2801  00FAFB  6C                 	db	108	;'l'
  2802  00FAFC  61                 	db	97	;'a'
  2803  00FAFD  73                 	db	115	;'s'
  2804  00FAFE  74                 	db	116	;'t'
  2805  00FAFF  20                 	db	32
  2806  00FB00  72                 	db	114	;'r'
  2807  00FB01  65                 	db	101	;'e'
  2808  00FB02  73                 	db	115	;'s'
  2809  00FB03  65                 	db	101	;'e'
  2810  00FB04  74                 	db	116	;'t'
  2811  00FB05  20                 	db	32
  2812  00FB06  63                 	db	99	;'c'
  2813  00FB07  6F                 	db	111	;'o'
  2814  00FB08  6E                 	db	110	;'n'
  2815  00FB09  64                 	db	100	;'d'
  2816  00FB0A  69                 	db	105	;'i'
  2817  00FB0B  74                 	db	116	;'t'
  2818  00FB0C  69                 	db	105	;'i'
  2819  00FB0D  6F                 	db	111	;'o'
  2820  00FB0E  6E                 	db	110	;'n'
  2821  00FB0F  20                 	db	32
  2822  00FB10  69                 	db	105	;'i'
  2823  00FB11  73                 	db	115	;'s'
  2824  00FB12  20                 	db	32
  2825  00FB13  25                 	db	37
  2826  00FB14  64                 	db	100	;'d'
  2827  00FB15  20                 	db	32
  2828  00FB16  73                 	db	115	;'s'
  2829  00FB17  65                 	db	101	;'e'
  2830  00FB18  63                 	db	99	;'c'
  2831  00FB19  6F                 	db	111	;'o'
  2832  00FB1A  6E                 	db	110	;'n'
  2833  00FB1B  64                 	db	100	;'d'
  2834  00FB1C  73                 	db	115	;'s'
  2835  00FB1D  0A                 	db	10
  2836  00FB1E  0D                 	db	13
  2837  00FB1F  00                 	db	0
  2838  00FB20                     STR_68:
  2839  00FB20  4F                 	db	79	;'O'
  2840  00FB21  75                 	db	117	;'u'
  2841  00FB22  74                 	db	116	;'t'
  2842  00FB23  70                 	db	112	;'p'
  2843  00FB24  75                 	db	117	;'u'
  2844  00FB25  74                 	db	116	;'t'
  2845  00FB26  20                 	db	32
  2846  00FB27  70                 	db	112	;'p'
  2847  00FB28  6F                 	db	111	;'o'
  2848  00FB29  77                 	db	119	;'w'
  2849  00FB2A  65                 	db	101	;'e'
  2850  00FB2B  72                 	db	114	;'r'
  2851  00FB2C  20                 	db	32
  2852  00FB2D  63                 	db	99	;'c'
  2853  00FB2E  61                 	db	97	;'a'
  2854  00FB2F  6C                 	db	108	;'l'
  2855  00FB30  63                 	db	99	;'c'
  2856  00FB31  75                 	db	117	;'u'
  2857  00FB32  6C                 	db	108	;'l'
  2858  00FB33  61                 	db	97	;'a'
  2859  00FB34  74                 	db	116	;'t'
  2860  00FB35  65                 	db	101	;'e'
  2861  00FB36  64                 	db	100	;'d'
  2862  00FB37  20                 	db	32
  2863  00FB38  61                 	db	97	;'a'
  2864  00FB39  73                 	db	115	;'s'
  2865  00FB3A  20                 	db	32
  2866  00FB3B  25                 	db	37
  2867  00FB3C  2E                 	db	46
  2868  00FB3D  33                 	db	51	;'3'
  2869  00FB3E  66                 	db	102	;'f'
  2870  00FB3F  20                 	db	32
  2871  00FB40  57                 	db	87	;'W'
  2872  00FB41  61                 	db	97	;'a'
  2873  00FB42  74                 	db	116	;'t'
  2874  00FB43  74                 	db	116	;'t'
  2875  00FB44  73                 	db	115	;'s'
  2876  00FB45  20                 	db	32
  2877  00FB46  66                 	db	102	;'f'
  2878  00FB47  72                 	db	114	;'r'
  2879  00FB48  6F                 	db	111	;'o'
  2880  00FB49  6D                 	db	109	;'m'
  2881  00FB4A  20                 	db	32
  2882  00FB4B  52                 	db	82	;'R'
  2883  00FB4C  4D                 	db	77	;'M'
  2884  00FB4D  53                 	db	83	;'S'
  2885  00FB4E  20                 	db	32
  2886  00FB4F  76                 	db	118	;'v'
  2887  00FB50  61                 	db	97	;'a'
  2888  00FB51  6C                 	db	108	;'l'
  2889  00FB52  75                 	db	117	;'u'
  2890  00FB53  65                 	db	101	;'e'
  2891  00FB54  73                 	db	115	;'s'
  2892  00FB55  0A                 	db	10
  2893  00FB56  0D                 	db	13
  2894  00FB57  00                 	db	0
  2895  00FB58                     STR_58:
  2896  00FB58  46                 	db	70	;'F'
  2897  00FB59  69                 	db	105	;'i'
  2898  00FB5A  78                 	db	120	;'x'
  2899  00FB5B  65                 	db	101	;'e'
  2900  00FB5C  64                 	db	100	;'d'
  2901  00FB5D  20                 	db	32
  2902  00FB5E  56                 	db	86	;'V'
  2903  00FB5F  6F                 	db	111	;'o'
  2904  00FB60  6C                 	db	108	;'l'
  2905  00FB61  74                 	db	116	;'t'
  2906  00FB62  61                 	db	97	;'a'
  2907  00FB63  67                 	db	103	;'g'
  2908  00FB64  65                 	db	101	;'e'
  2909  00FB65  20                 	db	32
  2910  00FB66  52                 	db	82	;'R'
  2911  00FB67  65                 	db	101	;'e'
  2912  00FB68  66                 	db	102	;'f'
  2913  00FB69  65                 	db	101	;'e'
  2914  00FB6A  72                 	db	114	;'r'
  2915  00FB6B  65                 	db	101	;'e'
  2916  00FB6C  6E                 	db	110	;'n'
  2917  00FB6D  63                 	db	99	;'c'
  2918  00FB6E  65                 	db	101	;'e'
  2919  00FB6F  20                 	db	32
  2920  00FB70  42                 	db	66	;'B'
  2921  00FB71  75                 	db	117	;'u'
  2922  00FB72  66                 	db	102	;'f'
  2923  00FB73  66                 	db	102	;'f'
  2924  00FB74  65                 	db	101	;'e'
  2925  00FB75  72                 	db	114	;'r'
  2926  00FB76  20                 	db	32
  2927  00FB77  31                 	db	49	;'1'
  2928  00FB78  20                 	db	32
  2929  00FB79  6D                 	db	109	;'m'
  2930  00FB7A  65                 	db	101	;'e'
  2931  00FB7B  61                 	db	97	;'a'
  2932  00FB7C  73                 	db	115	;'s'
  2933  00FB7D  75                 	db	117	;'u'
  2934  00FB7E  72                 	db	114	;'r'
  2935  00FB7F  65                 	db	101	;'e'
  2936  00FB80  64                 	db	100	;'d'
  2937  00FB81  20                 	db	32
  2938  00FB82  61                 	db	97	;'a'
  2939  00FB83  73                 	db	115	;'s'
  2940  00FB84  20                 	db	32
  2941  00FB85  25                 	db	37
  2942  00FB86  66                 	db	102	;'f'
  2943  00FB87  20                 	db	32
  2944  00FB88  56                 	db	86	;'V'
  2945  00FB89  6F                 	db	111	;'o'
  2946  00FB8A  6C                 	db	108	;'l'
  2947  00FB8B  74                 	db	116	;'t'
  2948  00FB8C  73                 	db	115	;'s'
  2949  00FB8D  0A                 	db	10
  2950  00FB8E  0D                 	db	13
  2951  00FB8F  00                 	db	0
  2952  00FB90                     STR_87:
  2953  00FB90  4C                 	db	76	;'L'
  2954  00FB91  6F                 	db	111	;'o'
  2955  00FB92  61                 	db	97	;'a'
  2956  00FB93  64                 	db	100	;'d'
  2957  00FB94  20                 	db	32
  2958  00FB95  6F                 	db	111	;'o'
  2959  00FB96  6E                 	db	110	;'n'
  2960  00FB97  20                 	db	32
  2961  00FB98  74                 	db	116	;'t'
  2962  00FB99  69                 	db	105	;'i'
  2963  00FB9A  6D                 	db	109	;'m'
  2964  00FB9B  65                 	db	101	;'e'
  2965  00FB9C  20                 	db	32
  2966  00FB9D  73                 	db	115	;'s'
  2967  00FB9E  69                 	db	105	;'i'
  2968  00FB9F  6E                 	db	110	;'n'
  2969  00FBA0  63                 	db	99	;'c'
  2970  00FBA1  65                 	db	101	;'e'
  2971  00FBA2  20                 	db	32
  2972  00FBA3  6C                 	db	108	;'l'
  2973  00FBA4  61                 	db	97	;'a'
  2974  00FBA5  73                 	db	115	;'s'
  2975  00FBA6  74                 	db	116	;'t'
  2976  00FBA7  20                 	db	32
  2977  00FBA8  64                 	db	100	;'d'
  2978  00FBA9  65                 	db	101	;'e'
  2979  00FBAA  76                 	db	118	;'v'
  2980  00FBAB  69                 	db	105	;'i'
  2981  00FBAC  63                 	db	99	;'c'
  2982  00FBAD  65                 	db	101	;'e'
  2983  00FBAE  20                 	db	32
  2984  00FBAF  72                 	db	114	;'r'
  2985  00FBB0  65                 	db	101	;'e'
  2986  00FBB1  73                 	db	115	;'s'
  2987  00FBB2  65                 	db	101	;'e'
  2988  00FBB3  74                 	db	116	;'t'
  2989  00FBB4  20                 	db	32
  2990  00FBB5  69                 	db	105	;'i'
  2991  00FBB6  73                 	db	115	;'s'
  2992  00FBB7  20                 	db	32
  2993  00FBB8  25                 	db	37
  2994  00FBB9  64                 	db	100	;'d'
  2995  00FBBA  20                 	db	32
  2996  00FBBB  73                 	db	115	;'s'
  2997  00FBBC  65                 	db	101	;'e'
  2998  00FBBD  63                 	db	99	;'c'
  2999  00FBBE  6F                 	db	111	;'o'
  3000  00FBBF  6E                 	db	110	;'n'
  3001  00FBC0  64                 	db	100	;'d'
  3002  00FBC1  73                 	db	115	;'s'
  3003  00FBC2  0A                 	db	10
  3004  00FBC3  0D                 	db	13
  3005  00FBC4  00                 	db	0
  3006  00FBC5                     STR_50:
  3007  00FBC5  4D                 	db	77	;'M'
  3008  00FBC6  61                 	db	97	;'a'
  3009  00FBC7  72                 	db	114	;'r'
  3010  00FBC8  71                 	db	113	;'q'
  3011  00FBC9  75                 	db	117	;'u'
  3012  00FBCA  65                 	db	101	;'e'
  3013  00FBCB  74                 	db	116	;'t'
  3014  00FBCC  74                 	db	116	;'t'
  3015  00FBCD  65                 	db	101	;'e'
  3016  00FBCE  20                 	db	32
  3017  00FBCF  55                 	db	85	;'U'
  3018  00FBD0  6E                 	db	110	;'n'
  3019  00FBD1  69                 	db	105	;'i'
  3020  00FBD2  76                 	db	118	;'v'
  3021  00FBD3  65                 	db	101	;'e'
  3022  00FBD4  72                 	db	114	;'r'
  3023  00FBD5  73                 	db	115	;'s'
  3024  00FBD6  69                 	db	105	;'i'
  3025  00FBD7  74                 	db	116	;'t'
  3026  00FBD8  79                 	db	121	;'y'
  3027  00FBD9  20                 	db	32
  3028  00FBDA  45                 	db	69	;'E'
  3029  00FBDB  4C                 	db	76	;'L'
  3030  00FBDC  45                 	db	69	;'E'
  3031  00FBDD  4E                 	db	78	;'N'
  3032  00FBDE  20                 	db	32
  3033  00FBDF  33                 	db	51	;'3'
  3034  00FBE0  30                 	db	48	;'0'
  3035  00FBE1  33                 	db	51	;'3'
  3036  00FBE2  35                 	db	53	;'5'
  3037  00FBE3  20                 	db	32
  3038  00FBE4  46                 	db	70	;'F'
  3039  00FBE5  69                 	db	105	;'i'
  3040  00FBE6  6E                 	db	110	;'n'
  3041  00FBE7  61                 	db	97	;'a'
  3042  00FBE8  6C                 	db	108	;'l'
  3043  00FBE9  20                 	db	32
  3044  00FBEA  50                 	db	80	;'P'
  3045  00FBEB  72                 	db	114	;'r'
  3046  00FBEC  6F                 	db	111	;'o'
  3047  00FBED  6A                 	db	106	;'j'
  3048  00FBEE  65                 	db	101	;'e'
  3049  00FBEF  63                 	db	99	;'c'
  3050  00FBF0  74                 	db	116	;'t'
  3051  00FBF1  0A                 	db	10
  3052  00FBF2  0D                 	db	13
  3053  00FBF3  00                 	db	0
  3054  00FBF4                     STR_80:
  3055  00FBF4  45                 	db	69	;'E'
  3056  00FBF5  6E                 	db	110	;'n'
  3057  00FBF6  74                 	db	116	;'t'
  3058  00FBF7  65                 	db	101	;'e'
  3059  00FBF8  72                 	db	114	;'r'
  3060  00FBF9  20                 	db	32
  3061  00FBFA  27                 	db	39
  3062  00FBFB  48                 	db	72	;'H'
  3063  00FBFC  65                 	db	101	;'e'
  3064  00FBFD  6C                 	db	108	;'l'
  3065  00FBFE  70                 	db	112	;'p'
  3066  00FBFF  27                 	db	39
  3067  00FC00  20                 	db	32
  3068  00FC01  66                 	db	102	;'f'
  3069  00FC02  6F                 	db	111	;'o'
  3070  00FC03  72                 	db	114	;'r'
  3071  00FC04  20                 	db	32
  3072  00FC05  6C                 	db	108	;'l'
  3073  00FC06  69                 	db	105	;'i'
  3074  00FC07  73                 	db	115	;'s'
  3075  00FC08  74                 	db	116	;'t'
  3076  00FC09  20                 	db	32
  3077  00FC0A  6F                 	db	111	;'o'
  3078  00FC0B  66                 	db	102	;'f'
  3079  00FC0C  20                 	db	32
  3080  00FC0D  61                 	db	97	;'a'
  3081  00FC0E  76                 	db	118	;'v'
  3082  00FC0F  61                 	db	97	;'a'
  3083  00FC10  69                 	db	105	;'i'
  3084  00FC11  6C                 	db	108	;'l'
  3085  00FC12  61                 	db	97	;'a'
  3086  00FC13  62                 	db	98	;'b'
  3087  00FC14  6C                 	db	108	;'l'
  3088  00FC15  65                 	db	101	;'e'
  3089  00FC16  20                 	db	32
  3090  00FC17  63                 	db	99	;'c'
  3091  00FC18  6F                 	db	111	;'o'
  3092  00FC19  6D                 	db	109	;'m'
  3093  00FC1A  6D                 	db	109	;'m'
  3094  00FC1B  61                 	db	97	;'a'
  3095  00FC1C  6E                 	db	110	;'n'
  3096  00FC1D  64                 	db	100	;'d'
  3097  00FC1E  73                 	db	115	;'s'
  3098  00FC1F  0A                 	db	10
  3099  00FC20  0D                 	db	13
  3100  00FC21  00                 	db	0
  3101  00FC22                     STR_74:
  3102  00FC22  4C                 	db	76	;'L'
  3103  00FC23  6F                 	db	111	;'o'
  3104  00FC24  61                 	db	97	;'a'
  3105  00FC25  64                 	db	100	;'d'
  3106  00FC26  20                 	db	32
  3107  00FC27  68                 	db	104	;'h'
  3108  00FC28  61                 	db	97	;'a'
  3109  00FC29  73                 	db	115	;'s'
  3110  00FC2A  20                 	db	32
  3111  00FC2B  62                 	db	98	;'b'
  3112  00FC2C  65                 	db	101	;'e'
  3113  00FC2D  65                 	db	101	;'e'
  3114  00FC2E  6E                 	db	110	;'n'
  3115  00FC2F  20                 	db	32
  3116  00FC30  65                 	db	101	;'e'
  3117  00FC31  6E                 	db	110	;'n'
  3118  00FC32  61                 	db	97	;'a'
  3119  00FC33  62                 	db	98	;'b'
  3120  00FC34  6C                 	db	108	;'l'
  3121  00FC35  65                 	db	101	;'e'
  3122  00FC36  64                 	db	100	;'d'
  3123  00FC37  2C                 	db	44
  3124  00FC38  20                 	db	32
  3125  00FC39  64                 	db	100	;'d'
  3126  00FC3A  69                 	db	105	;'i'
  3127  00FC3B  6D                 	db	109	;'m'
  3128  00FC3C  6D                 	db	109	;'m'
  3129  00FC3D  69                 	db	105	;'i'
  3130  00FC3E  6E                 	db	110	;'n'
  3131  00FC3F  67                 	db	103	;'g'
  3132  00FC40  20                 	db	32
  3133  00FC41  64                 	db	100	;'d'
  3134  00FC42  69                 	db	105	;'i'
  3135  00FC43  73                 	db	115	;'s'
  3136  00FC44  61                 	db	97	;'a'
  3137  00FC45  62                 	db	98	;'b'
  3138  00FC46  6C                 	db	108	;'l'
  3139  00FC47  65                 	db	101	;'e'
  3140  00FC48  64                 	db	100	;'d'
  3141  00FC49  0A                 	db	10
  3142  00FC4A  0D                 	db	13
  3143  00FC4B  00                 	db	0
  3144  00FC4C                     STR_72:
  3145  00FC4C  54                 	db	84	;'T'
  3146  00FC4D  52                 	db	82	;'R'
  3147  00FC4E  49                 	db	73	;'I'
  3148  00FC4F  41                 	db	65	;'A'
  3149  00FC50  43                 	db	67	;'C'
  3150  00FC51  20                 	db	32
  3151  00FC52  6F                 	db	111	;'o'
  3152  00FC53  75                 	db	117	;'u'
  3153  00FC54  74                 	db	116	;'t'
  3154  00FC55  70                 	db	112	;'p'
  3155  00FC56  75                 	db	117	;'u'
  3156  00FC57  74                 	db	116	;'t'
  3157  00FC58  20                 	db	32
  3158  00FC59  64                 	db	100	;'d'
  3159  00FC5A  69                 	db	105	;'i'
  3160  00FC5B  6D                 	db	109	;'m'
  3161  00FC5C  6D                 	db	109	;'m'
  3162  00FC5D  69                 	db	105	;'i'
  3163  00FC5E  6E                 	db	110	;'n'
  3164  00FC5F  67                 	db	103	;'g'
  3165  00FC60  20                 	db	32
  3166  00FC61  68                 	db	104	;'h'
  3167  00FC62  61                 	db	97	;'a'
  3168  00FC63  73                 	db	115	;'s'
  3169  00FC64  20                 	db	32
  3170  00FC65  62                 	db	98	;'b'
  3171  00FC66  65                 	db	101	;'e'
  3172  00FC67  65                 	db	101	;'e'
  3173  00FC68  6E                 	db	110	;'n'
  3174  00FC69  20                 	db	32
  3175  00FC6A  64                 	db	100	;'d'
  3176  00FC6B  69                 	db	105	;'i'
  3177  00FC6C  73                 	db	115	;'s'
  3178  00FC6D  61                 	db	97	;'a'
  3179  00FC6E  62                 	db	98	;'b'
  3180  00FC6F  6C                 	db	108	;'l'
  3181  00FC70  65                 	db	101	;'e'
  3182  00FC71  64                 	db	100	;'d'
  3183  00FC72  0A                 	db	10
  3184  00FC73  0D                 	db	13
  3185  00FC74  00                 	db	0
  3186  00FC75                     STR_70:
  3187  00FC75  54                 	db	84	;'T'
  3188  00FC76  52                 	db	82	;'R'
  3189  00FC77  49                 	db	73	;'I'
  3190  00FC78  41                 	db	65	;'A'
  3191  00FC79  43                 	db	67	;'C'
  3192  00FC7A  20                 	db	32
  3193  00FC7B  6F                 	db	111	;'o'
  3194  00FC7C  75                 	db	117	;'u'
  3195  00FC7D  74                 	db	116	;'t'
  3196  00FC7E  70                 	db	112	;'p'
  3197  00FC7F  75                 	db	117	;'u'
  3198  00FC80  74                 	db	116	;'t'
  3199  00FC81  20                 	db	32
  3200  00FC82  64                 	db	100	;'d'
  3201  00FC83  69                 	db	105	;'i'
  3202  00FC84  6D                 	db	109	;'m'
  3203  00FC85  6D                 	db	109	;'m'
  3204  00FC86  69                 	db	105	;'i'
  3205  00FC87  6E                 	db	110	;'n'
  3206  00FC88  67                 	db	103	;'g'
  3207  00FC89  20                 	db	32
  3208  00FC8A  68                 	db	104	;'h'
  3209  00FC8B  61                 	db	97	;'a'
  3210  00FC8C  73                 	db	115	;'s'
  3211  00FC8D  20                 	db	32
  3212  00FC8E  62                 	db	98	;'b'
  3213  00FC8F  65                 	db	101	;'e'
  3214  00FC90  65                 	db	101	;'e'
  3215  00FC91  6E                 	db	110	;'n'
  3216  00FC92  20                 	db	32
  3217  00FC93  65                 	db	101	;'e'
  3218  00FC94  6E                 	db	110	;'n'
  3219  00FC95  61                 	db	97	;'a'
  3220  00FC96  62                 	db	98	;'b'
  3221  00FC97  6C                 	db	108	;'l'
  3222  00FC98  65                 	db	101	;'e'
  3223  00FC99  64                 	db	100	;'d'
  3224  00FC9A  0A                 	db	10
  3225  00FC9B  0D                 	db	13
  3226  00FC9C  00                 	db	0
  3227  00FC9D                     STR_92:
  3228  00FC9D  4D                 	db	77	;'M'
  3229  00FC9E  65                 	db	101	;'e'
  3230  00FC9F  61                 	db	97	;'a'
  3231  00FCA0  73                 	db	115	;'s'
  3232  00FCA1  75                 	db	117	;'u'
  3233  00FCA2  72                 	db	114	;'r'
  3234  00FCA3  65                 	db	101	;'e'
  3235  00FCA4  6D                 	db	109	;'m'
  3236  00FCA5  65                 	db	101	;'e'
  3237  00FCA6  6E                 	db	110	;'n'
  3238  00FCA7  74                 	db	116	;'t'
  3239  00FCA8  20                 	db	32
  3240  00FCA9  72                 	db	114	;'r'
  3241  00FCAA  65                 	db	101	;'e'
  3242  00FCAB  73                 	db	115	;'s'
  3243  00FCAC  70                 	db	112	;'p'
  3244  00FCAD  6F                 	db	111	;'o'
  3245  00FCAE  6E                 	db	110	;'n'
  3246  00FCAF  73                 	db	115	;'s'
  3247  00FCB0  65                 	db	101	;'e'
  3248  00FCB1  73                 	db	115	;'s'
  3249  00FCB2  20                 	db	32
  3250  00FCB3  61                 	db	97	;'a'
  3251  00FCB4  70                 	db	112	;'p'
  3252  00FCB5  70                 	db	112	;'p'
  3253  00FCB6  65                 	db	101	;'e'
  3254  00FCB7  61                 	db	97	;'a'
  3255  00FCB8  72                 	db	114	;'r'
  3256  00FCB9  20                 	db	32
  3257  00FCBA  69                 	db	105	;'i'
  3258  00FCBB  6E                 	db	110	;'n'
  3259  00FCBC  20                 	db	32
  3260  00FCBD  63                 	db	99	;'c'
  3261  00FCBE  79                 	db	121	;'y'
  3262  00FCBF  61                 	db	97	;'a'
  3263  00FCC0  6E                 	db	110	;'n'
  3264  00FCC1  0A                 	db	10
  3265  00FCC2  0D                 	db	13
  3266  00FCC3  00                 	db	0
  3267  00FCC4                     STR_60:
  3268  00FCC4  41                 	db	65	;'A'
  3269  00FCC5  56                 	db	86	;'V'
  3270  00FCC6  53                 	db	83	;'S'
  3271  00FCC7  53                 	db	83	;'S'
  3272  00FCC8  20                 	db	32
  3273  00FCC9  6D                 	db	109	;'m'
  3274  00FCCA  65                 	db	101	;'e'
  3275  00FCCB  61                 	db	97	;'a'
  3276  00FCCC  73                 	db	115	;'s'
  3277  00FCCD  75                 	db	117	;'u'
  3278  00FCCE  72                 	db	114	;'r'
  3279  00FCCF  65                 	db	101	;'e'
  3280  00FCD0  64                 	db	100	;'d'
  3281  00FCD1  20                 	db	32
  3282  00FCD2  61                 	db	97	;'a'
  3283  00FCD3  73                 	db	115	;'s'
  3284  00FCD4  20                 	db	32
  3285  00FCD5  25                 	db	37
  3286  00FCD6  2E                 	db	46
  3287  00FCD7  33                 	db	51	;'3'
  3288  00FCD8  66                 	db	102	;'f'
  3289  00FCD9  20                 	db	32
  3290  00FCDA  56                 	db	86	;'V'
  3291  00FCDB  6F                 	db	111	;'o'
  3292  00FCDC  6C                 	db	108	;'l'
  3293  00FCDD  74                 	db	116	;'t'
  3294  00FCDE  73                 	db	115	;'s'
  3295  00FCDF  20                 	db	32
  3296  00FCE0  62                 	db	98	;'b'
  3297  00FCE1  79                 	db	121	;'y'
  3298  00FCE2  20                 	db	32
  3299  00FCE3  41                 	db	65	;'A'
  3300  00FCE4  44                 	db	68	;'D'
  3301  00FCE5  43                 	db	67	;'C'
  3302  00FCE6  0A                 	db	10
  3303  00FCE7  0D                 	db	13
  3304  00FCE8  00                 	db	0
  3305  00FCE9                     STR_81:
  3306  00FCE9  44                 	db	68	;'D'
  3307  00FCEA  69                 	db	105	;'i'
  3308  00FCEB  6D                 	db	109	;'m'
  3309  00FCEC  6D                 	db	109	;'m'
  3310  00FCED  69                 	db	105	;'i'
  3311  00FCEE  6E                 	db	110	;'n'
  3312  00FCEF  67                 	db	103	;'g'
  3313  00FCF0  20                 	db	32
  3314  00FCF1  68                 	db	104	;'h'
  3315  00FCF2  61                 	db	97	;'a'
  3316  00FCF3  73                 	db	115	;'s'
  3317  00FCF4  20                 	db	32
  3318  00FCF5  62                 	db	98	;'b'
  3319  00FCF6  65                 	db	101	;'e'
  3320  00FCF7  65                 	db	101	;'e'
  3321  00FCF8  6E                 	db	110	;'n'
  3322  00FCF9  20                 	db	32
  3323  00FCFA  73                 	db	115	;'s'
  3324  00FCFB  65                 	db	101	;'e'
  3325  00FCFC  74                 	db	116	;'t'
  3326  00FCFD  20                 	db	32
  3327  00FCFE  74                 	db	116	;'t'
  3328  00FCFF  6F                 	db	111	;'o'
  3329  00FD00  20                 	db	32
  3330  00FD01  25                 	db	37
  3331  00FD02  64                 	db	100	;'d'
  3332  00FD03  20                 	db	32
  3333  00FD04  70                 	db	112	;'p'
  3334  00FD05  65                 	db	101	;'e'
  3335  00FD06  72                 	db	114	;'r'
  3336  00FD07  63                 	db	99	;'c'
  3337  00FD08  65                 	db	101	;'e'
  3338  00FD09  6E                 	db	110	;'n'
  3339  00FD0A  74                 	db	116	;'t'
  3340  00FD0B  0A                 	db	10
  3341  00FD0C  0D                 	db	13
  3342  00FD0D  00                 	db	0
  3343  00FD0E                     STR_52:
  3344  00FD0E  2B                 	db	43
  3345  00FD0F  33                 	db	51	;'3'
  3346  00FD10  2E                 	db	46
  3347  00FD11  33                 	db	51	;'3'
  3348  00FD12  56                 	db	86	;'V'
  3349  00FD13  20                 	db	32
  3350  00FD14  72                 	db	114	;'r'
  3351  00FD15  61                 	db	97	;'a'
  3352  00FD16  69                 	db	105	;'i'
  3353  00FD17  6C                 	db	108	;'l'
  3354  00FD18  20                 	db	32
  3355  00FD19  6D                 	db	109	;'m'
  3356  00FD1A  65                 	db	101	;'e'
  3357  00FD1B  61                 	db	97	;'a'
  3358  00FD1C  73                 	db	115	;'s'
  3359  00FD1D  75                 	db	117	;'u'
  3360  00FD1E  72                 	db	114	;'r'
  3361  00FD1F  65                 	db	101	;'e'
  3362  00FD20  64                 	db	100	;'d'
  3363  00FD21  20                 	db	32
  3364  00FD22  61                 	db	97	;'a'
  3365  00FD23  73                 	db	115	;'s'
  3366  00FD24  20                 	db	32
  3367  00FD25  2B                 	db	43
  3368  00FD26  25                 	db	37
  3369  00FD27  66                 	db	102	;'f'
  3370  00FD28  20                 	db	32
  3371  00FD29  56                 	db	86	;'V'
  3372  00FD2A  6F                 	db	111	;'o'
  3373  00FD2B  6C                 	db	108	;'l'
  3374  00FD2C  74                 	db	116	;'t'
  3375  00FD2D  73                 	db	115	;'s'
  3376  00FD2E  0A                 	db	10
  3377  00FD2F  0D                 	db	13
  3378  00FD30  00                 	db	0
  3379  00FD31                     STR_56:
  3380  00FD31  44                 	db	68	;'D'
  3381  00FD32  69                 	db	105	;'i'
  3382  00FD33  65                 	db	101	;'e'
  3383  00FD34  20                 	db	32
  3384  00FD35  54                 	db	84	;'T'
  3385  00FD36  65                 	db	101	;'e'
  3386  00FD37  6D                 	db	109	;'m'
  3387  00FD38  70                 	db	112	;'p'
  3388  00FD39  65                 	db	101	;'e'
  3389  00FD3A  72                 	db	114	;'r'
  3390  00FD3B  61                 	db	97	;'a'
  3391  00FD3C  74                 	db	116	;'t'
  3392  00FD3D  75                 	db	117	;'u'
  3393  00FD3E  72                 	db	114	;'r'
  3394  00FD3F  65                 	db	101	;'e'
  3395  00FD40  20                 	db	32
  3396  00FD41  6D                 	db	109	;'m'
  3397  00FD42  65                 	db	101	;'e'
  3398  00FD43  61                 	db	97	;'a'
  3399  00FD44  73                 	db	115	;'s'
  3400  00FD45  75                 	db	117	;'u'
  3401  00FD46  72                 	db	114	;'r'
  3402  00FD47  65                 	db	101	;'e'
  3403  00FD48  64                 	db	100	;'d'
  3404  00FD49  20                 	db	32
  3405  00FD4A  61                 	db	97	;'a'
  3406  00FD4B  73                 	db	115	;'s'
  3407  00FD4C  20                 	db	32
  3408  00FD4D  25                 	db	37
  3409  00FD4E  66                 	db	102	;'f'
  3410  00FD4F  43                 	db	67	;'C'
  3411  00FD50  0A                 	db	10
  3412  00FD51  0D                 	db	13
  3413  00FD52  00                 	db	0
  3414  00FD53                     STR_64:
  3415  00FD53  52                 	db	82	;'R'
  3416  00FD54  4D                 	db	77	;'M'
  3417  00FD55  53                 	db	83	;'S'
  3418  00FD56  20                 	db	32
  3419  00FD57  4F                 	db	79	;'O'
  3420  00FD58  75                 	db	117	;'u'
  3421  00FD59  74                 	db	116	;'t'
  3422  00FD5A  70                 	db	112	;'p'
  3423  00FD5B  75                 	db	117	;'u'
  3424  00FD5C  74                 	db	116	;'t'
  3425  00FD5D  20                 	db	32
  3426  00FD5E  43                 	db	67	;'C'
  3427  00FD5F  75                 	db	117	;'u'
  3428  00FD60  72                 	db	114	;'r'
  3429  00FD61  72                 	db	114	;'r'
  3430  00FD62  65                 	db	101	;'e'
  3431  00FD63  6E                 	db	110	;'n'
  3432  00FD64  74                 	db	116	;'t'
  3433  00FD65  20                 	db	32
  3434  00FD66  69                 	db	105	;'i'
  3435  00FD67  73                 	db	115	;'s'
  3436  00FD68  20                 	db	32
  3437  00FD69  25                 	db	37
  3438  00FD6A  2E                 	db	46
  3439  00FD6B  33                 	db	51	;'3'
  3440  00FD6C  66                 	db	102	;'f'
  3441  00FD6D  20                 	db	32
  3442  00FD6E  41                 	db	65	;'A'
  3443  00FD6F  72                 	db	114	;'r'
  3444  00FD70  6D                 	db	109	;'m'
  3445  00FD71  73                 	db	115	;'s'
  3446  00FD72  0A                 	db	10
  3447  00FD73  0D                 	db	13
  3448  00FD74  00                 	db	0
  3449  00FD75                     STR_66:
  3450  00FD75  52                 	db	82	;'R'
  3451  00FD76  4D                 	db	77	;'M'
  3452  00FD77  53                 	db	83	;'S'
  3453  00FD78  20                 	db	32
  3454  00FD79  4F                 	db	79	;'O'
  3455  00FD7A  75                 	db	117	;'u'
  3456  00FD7B  74                 	db	116	;'t'
  3457  00FD7C  70                 	db	112	;'p'
  3458  00FD7D  75                 	db	117	;'u'
  3459  00FD7E  74                 	db	116	;'t'
  3460  00FD7F  20                 	db	32
  3461  00FD80  56                 	db	86	;'V'
  3462  00FD81  6F                 	db	111	;'o'
  3463  00FD82  6C                 	db	108	;'l'
  3464  00FD83  74                 	db	116	;'t'
  3465  00FD84  61                 	db	97	;'a'
  3466  00FD85  67                 	db	103	;'g'
  3467  00FD86  65                 	db	101	;'e'
  3468  00FD87  20                 	db	32
  3469  00FD88  69                 	db	105	;'i'
  3470  00FD89  73                 	db	115	;'s'
  3471  00FD8A  20                 	db	32
  3472  00FD8B  25                 	db	37
  3473  00FD8C  2E                 	db	46
  3474  00FD8D  33                 	db	51	;'3'
  3475  00FD8E  66                 	db	102	;'f'
  3476  00FD8F  20                 	db	32
  3477  00FD90  56                 	db	86	;'V'
  3478  00FD91  72                 	db	114	;'r'
  3479  00FD92  6D                 	db	109	;'m'
  3480  00FD93  73                 	db	115	;'s'
  3481  00FD94  0A                 	db	10
  3482  00FD95  0D                 	db	13
  3483  00FD96  00                 	db	0
  3484  00FD97                     STR_54:
  3485  00FD97  2B                 	db	43
  3486  00FD98  31                 	db	49	;'1'
  3487  00FD99  32                 	db	50	;'2'
  3488  00FD9A  56                 	db	86	;'V'
  3489  00FD9B  20                 	db	32
  3490  00FD9C  72                 	db	114	;'r'
  3491  00FD9D  61                 	db	97	;'a'
  3492  00FD9E  69                 	db	105	;'i'
  3493  00FD9F  6C                 	db	108	;'l'
  3494  00FDA0  20                 	db	32
  3495  00FDA1  6D                 	db	109	;'m'
  3496  00FDA2  65                 	db	101	;'e'
  3497  00FDA3  61                 	db	97	;'a'
  3498  00FDA4  73                 	db	115	;'s'
  3499  00FDA5  75                 	db	117	;'u'
  3500  00FDA6  72                 	db	114	;'r'
  3501  00FDA7  65                 	db	101	;'e'
  3502  00FDA8  64                 	db	100	;'d'
  3503  00FDA9  20                 	db	32
  3504  00FDAA  61                 	db	97	;'a'
  3505  00FDAB  73                 	db	115	;'s'
  3506  00FDAC  20                 	db	32
  3507  00FDAD  2B                 	db	43
  3508  00FDAE  25                 	db	37
  3509  00FDAF  66                 	db	102	;'f'
  3510  00FDB0  20                 	db	32
  3511  00FDB1  56                 	db	86	;'V'
  3512  00FDB2  6F                 	db	111	;'o'
  3513  00FDB3  6C                 	db	108	;'l'
  3514  00FDB4  74                 	db	116	;'t'
  3515  00FDB5  73                 	db	115	;'s'
  3516  00FDB6  0A                 	db	10
  3517  00FDB7  0D                 	db	13
  3518  00FDB8  00                 	db	0
  3519  00FDB9                     STR_90:
  3520  00FDB9  48                 	db	72	;'H'
  3521  00FDBA  65                 	db	101	;'e'
  3522  00FDBB  6C                 	db	108	;'l'
  3523  00FDBC  70                 	db	112	;'p'
  3524  00FDBD  20                 	db	32
  3525  00FDBE  6D                 	db	109	;'m'
  3526  00FDBF  65                 	db	101	;'e'
  3527  00FDC0  73                 	db	115	;'s'
  3528  00FDC1  73                 	db	115	;'s'
  3529  00FDC2  61                 	db	97	;'a'
  3530  00FDC3  67                 	db	103	;'g'
  3531  00FDC4  65                 	db	101	;'e'
  3532  00FDC5  73                 	db	115	;'s'
  3533  00FDC6  20                 	db	32
  3534  00FDC7  61                 	db	97	;'a'
  3535  00FDC8  70                 	db	112	;'p'
  3536  00FDC9  70                 	db	112	;'p'
  3537  00FDCA  65                 	db	101	;'e'
  3538  00FDCB  61                 	db	97	;'a'
  3539  00FDCC  72                 	db	114	;'r'
  3540  00FDCD  20                 	db	32
  3541  00FDCE  69                 	db	105	;'i'
  3542  00FDCF  6E                 	db	110	;'n'
  3543  00FDD0  20                 	db	32
  3544  00FDD1  79                 	db	121	;'y'
  3545  00FDD2  65                 	db	101	;'e'
  3546  00FDD3  6C                 	db	108	;'l'
  3547  00FDD4  6C                 	db	108	;'l'
  3548  00FDD5  6F                 	db	111	;'o'
  3549  00FDD6  77                 	db	119	;'w'
  3550  00FDD7  0A                 	db	10
  3551  00FDD8  0D                 	db	13
  3552  00FDD9  00                 	db	0
  3553  00FDDA                     STR_62:
  3554  00FDDA  4D                 	db	77	;'M'
  3555  00FDDB  65                 	db	101	;'e'
  3556  00FDDC  61                 	db	97	;'a'
  3557  00FDDD  73                 	db	115	;'s'
  3558  00FDDE  75                 	db	117	;'u'
  3559  00FDDF  72                 	db	114	;'r'
  3560  00FDE0  65                 	db	101	;'e'
  3561  00FDE1  64                 	db	100	;'d'
  3562  00FDE2  20                 	db	32
  3563  00FDE3  43                 	db	67	;'C'
  3564  00FDE4  75                 	db	117	;'u'
  3565  00FDE5  72                 	db	114	;'r'
  3566  00FDE6  72                 	db	114	;'r'
  3567  00FDE7  65                 	db	101	;'e'
  3568  00FDE8  6E                 	db	110	;'n'
  3569  00FDE9  74                 	db	116	;'t'
  3570  00FDEA  20                 	db	32
  3571  00FDEB  69                 	db	105	;'i'
  3572  00FDEC  73                 	db	115	;'s'
  3573  00FDED  20                 	db	32
  3574  00FDEE  25                 	db	37
  3575  00FDEF  2E                 	db	46
  3576  00FDF0  33                 	db	51	;'3'
  3577  00FDF1  66                 	db	102	;'f'
  3578  00FDF2  20                 	db	32
  3579  00FDF3  41                 	db	65	;'A'
  3580  00FDF4  6D                 	db	109	;'m'
  3581  00FDF5  70                 	db	112	;'p'
  3582  00FDF6  73                 	db	115	;'s'
  3583  00FDF7  0A                 	db	10
  3584  00FDF8  0D                 	db	13
  3585  00FDF9  00                 	db	0
  3586  00FDFA                     STR_94:
  3587  00FDFA  55                 	db	85	;'U'
  3588  00FDFB  73                 	db	115	;'s'
  3589  00FDFC  65                 	db	101	;'e'
  3590  00FDFD  72                 	db	114	;'r'
  3591  00FDFE  20                 	db	32
  3592  00FDFF  69                 	db	105	;'i'
  3593  00FE00  6E                 	db	110	;'n'
  3594  00FE01  70                 	db	112	;'p'
  3595  00FE02  75                 	db	117	;'u'
  3596  00FE03  74                 	db	116	;'t'
  3597  00FE04  20                 	db	32
  3598  00FE05  61                 	db	97	;'a'
  3599  00FE06  70                 	db	112	;'p'
  3600  00FE07  70                 	db	112	;'p'
  3601  00FE08  65                 	db	101	;'e'
  3602  00FE09  61                 	db	97	;'a'
  3603  00FE0A  72                 	db	114	;'r'
  3604  00FE0B  73                 	db	115	;'s'
  3605  00FE0C  20                 	db	32
  3606  00FE0D  69                 	db	105	;'i'
  3607  00FE0E  6E                 	db	110	;'n'
  3608  00FE0F  20                 	db	32
  3609  00FE10  77                 	db	119	;'w'
  3610  00FE11  68                 	db	104	;'h'
  3611  00FE12  69                 	db	105	;'i'
  3612  00FE13  74                 	db	116	;'t'
  3613  00FE14  65                 	db	101	;'e'
  3614  00FE15  0A                 	db	10
  3615  00FE16  0D                 	db	13
  3616  00FE17  00                 	db	0
  3617  00FE18                     STR_91:
  3618  00FE18  49                 	db	73	;'I'
  3619  00FE19  44                 	db	68	;'D'
  3620  00FE1A  4E                 	db	78	;'N'
  3621  00FE1B  20                 	db	32
  3622  00FE1C  73                 	db	115	;'s'
  3623  00FE1D  74                 	db	116	;'t'
  3624  00FE1E  72                 	db	114	;'r'
  3625  00FE1F  69                 	db	105	;'i'
  3626  00FE20  6E                 	db	110	;'n'
  3627  00FE21  67                 	db	103	;'g'
  3628  00FE22  20                 	db	32
  3629  00FE23  61                 	db	97	;'a'
  3630  00FE24  70                 	db	112	;'p'
  3631  00FE25  70                 	db	112	;'p'
  3632  00FE26  65                 	db	101	;'e'
  3633  00FE27  61                 	db	97	;'a'
  3634  00FE28  72                 	db	114	;'r'
  3635  00FE29  73                 	db	115	;'s'
  3636  00FE2A  20                 	db	32
  3637  00FE2B  69                 	db	105	;'i'
  3638  00FE2C  6E                 	db	110	;'n'
  3639  00FE2D  20                 	db	32
  3640  00FE2E  67                 	db	103	;'g'
  3641  00FE2F  72                 	db	114	;'r'
  3642  00FE30  65                 	db	101	;'e'
  3643  00FE31  65                 	db	101	;'e'
  3644  00FE32  6E                 	db	110	;'n'
  3645  00FE33  0A                 	db	10
  3646  00FE34  0D                 	db	13
  3647  00FE35  00                 	db	0
  3648  00FE36                     STR_61:
  3649  00FE36  4D                 	db	77	;'M'
  3650  00FE37  65                 	db	101	;'e'
  3651  00FE38  61                 	db	97	;'a'
  3652  00FE39  73                 	db	115	;'s'
  3653  00FE3A  75                 	db	117	;'u'
  3654  00FE3B  72                 	db	114	;'r'
  3655  00FE3C  65                 	db	101	;'e'
  3656  00FE3D  20                 	db	32
  3657  00FE3E  44                 	db	68	;'D'
  3658  00FE3F  65                 	db	101	;'e'
  3659  00FE40  74                 	db	116	;'t'
  3660  00FE41  65                 	db	101	;'e'
  3661  00FE42  63                 	db	99	;'c'
  3662  00FE43  74                 	db	116	;'t'
  3663  00FE44  65                 	db	101	;'e'
  3664  00FE45  64                 	db	100	;'d'
  3665  00FE46  20                 	db	32
  3666  00FE47  43                 	db	67	;'C'
  3667  00FE48  75                 	db	117	;'u'
  3668  00FE49  72                 	db	114	;'r'
  3669  00FE4A  72                 	db	114	;'r'
  3670  00FE4B  65                 	db	101	;'e'
  3671  00FE4C  6E                 	db	110	;'n'
  3672  00FE4D  74                 	db	116	;'t'
  3673  00FE4E  3F                 	db	63	;'?'
  3674  00FE4F  00                 	db	0
  3675  00FE50                     STR_76:
  3676  00FE50  4C                 	db	76	;'L'
  3677  00FE51  6F                 	db	111	;'o'
  3678  00FE52  61                 	db	97	;'a'
  3679  00FE53  64                 	db	100	;'d'
  3680  00FE54  20                 	db	32
  3681  00FE55  68                 	db	104	;'h'
  3682  00FE56  61                 	db	97	;'a'
  3683  00FE57  73                 	db	115	;'s'
  3684  00FE58  20                 	db	32
  3685  00FE59  62                 	db	98	;'b'
  3686  00FE5A  65                 	db	101	;'e'
  3687  00FE5B  65                 	db	101	;'e'
  3688  00FE5C  6E                 	db	110	;'n'
  3689  00FE5D  20                 	db	32
  3690  00FE5E  64                 	db	100	;'d'
  3691  00FE5F  69                 	db	105	;'i'
  3692  00FE60  73                 	db	115	;'s'
  3693  00FE61  61                 	db	97	;'a'
  3694  00FE62  62                 	db	98	;'b'
  3695  00FE63  6C                 	db	108	;'l'
  3696  00FE64  65                 	db	101	;'e'
  3697  00FE65  64                 	db	100	;'d'
  3698  00FE66  0A                 	db	10
  3699  00FE67  0D                 	db	13
  3700  00FE68  00                 	db	0
  3701  00FE69                     STR_77:
  3702  00FE69  53                 	db	83	;'S'
  3703  00FE6A  65                 	db	101	;'e'
  3704  00FE6B  74                 	db	116	;'t'
  3705  00FE6C  20                 	db	32
  3706  00FE6D  44                 	db	68	;'D'
  3707  00FE6E  69                 	db	105	;'i'
  3708  00FE6F  6D                 	db	109	;'m'
  3709  00FE70  6D                 	db	109	;'m'
  3710  00FE71  69                 	db	105	;'i'
  3711  00FE72  6E                 	db	110	;'n'
  3712  00FE73  67                 	db	103	;'g'
  3713  00FE74  20                 	db	32
  3714  00FE75  50                 	db	80	;'P'
  3715  00FE76  65                 	db	101	;'e'
  3716  00FE77  72                 	db	114	;'r'
  3717  00FE78  63                 	db	99	;'c'
  3718  00FE79  65                 	db	101	;'e'
  3719  00FE7A  6E                 	db	110	;'n'
  3720  00FE7B  74                 	db	116	;'t'
  3721  00FE7C  61                 	db	97	;'a'
  3722  00FE7D  67                 	db	103	;'g'
  3723  00FE7E  65                 	db	101	;'e'
  3724  00FE7F  3A                 	db	58	;':'
  3725  00FE80  20                 	db	32
  3726  00FE81  00                 	db	0
  3727  00FE82                     STR_93:
  3728  00FE82  45                 	db	69	;'E'
  3729  00FE83  72                 	db	114	;'r'
  3730  00FE84  72                 	db	114	;'r'
  3731  00FE85  6F                 	db	111	;'o'
  3732  00FE86  72                 	db	114	;'r'
  3733  00FE87  73                 	db	115	;'s'
  3734  00FE88  20                 	db	32
  3735  00FE89  61                 	db	97	;'a'
  3736  00FE8A  70                 	db	112	;'p'
  3737  00FE8B  70                 	db	112	;'p'
  3738  00FE8C  65                 	db	101	;'e'
  3739  00FE8D  61                 	db	97	;'a'
  3740  00FE8E  72                 	db	114	;'r'
  3741  00FE8F  20                 	db	32
  3742  00FE90  69                 	db	105	;'i'
  3743  00FE91  6E                 	db	110	;'n'
  3744  00FE92  20                 	db	32
  3745  00FE93  72                 	db	114	;'r'
  3746  00FE94  65                 	db	101	;'e'
  3747  00FE95  64                 	db	100	;'d'
  3748  00FE96  0A                 	db	10
  3749  00FE97  0D                 	db	13
  3750  00FE98  00                 	db	0
  3751  00FE99                     STR_65:
  3752  00FE99  4D                 	db	77	;'M'
  3753  00FE9A  65                 	db	101	;'e'
  3754  00FE9B  61                 	db	97	;'a'
  3755  00FE9C  73                 	db	115	;'s'
  3756  00FE9D  75                 	db	117	;'u'
  3757  00FE9E  72                 	db	114	;'r'
  3758  00FE9F  65                 	db	101	;'e'
  3759  00FEA0  20                 	db	32
  3760  00FEA1  52                 	db	82	;'R'
  3761  00FEA2  4D                 	db	77	;'M'
  3762  00FEA3  53                 	db	83	;'S'
  3763  00FEA4  20                 	db	32
  3764  00FEA5  56                 	db	86	;'V'
  3765  00FEA6  6F                 	db	111	;'o'
  3766  00FEA7  6C                 	db	108	;'l'
  3767  00FEA8  74                 	db	116	;'t'
  3768  00FEA9  61                 	db	97	;'a'
  3769  00FEAA  67                 	db	103	;'g'
  3770  00FEAB  65                 	db	101	;'e'
  3771  00FEAC  3F                 	db	63	;'?'
  3772  00FEAD  00                 	db	0
  3773  00FEAE                     STR_63:
  3774  00FEAE  4D                 	db	77	;'M'
  3775  00FEAF  65                 	db	101	;'e'
  3776  00FEB0  61                 	db	97	;'a'
  3777  00FEB1  73                 	db	115	;'s'
  3778  00FEB2  75                 	db	117	;'u'
  3779  00FEB3  72                 	db	114	;'r'
  3780  00FEB4  65                 	db	101	;'e'
  3781  00FEB5  20                 	db	32
  3782  00FEB6  52                 	db	82	;'R'
  3783  00FEB7  4D                 	db	77	;'M'
  3784  00FEB8  53                 	db	83	;'S'
  3785  00FEB9  20                 	db	32
  3786  00FEBA  43                 	db	67	;'C'
  3787  00FEBB  75                 	db	117	;'u'
  3788  00FEBC  72                 	db	114	;'r'
  3789  00FEBD  72                 	db	114	;'r'
  3790  00FEBE  65                 	db	101	;'e'
  3791  00FEBF  6E                 	db	110	;'n'
  3792  00FEC0  74                 	db	116	;'t'
  3793  00FEC1  3F                 	db	63	;'?'
  3794  00FEC2  00                 	db	0
  3795  00FEC3                     STR_55:
  3796  00FEC3  4D                 	db	77	;'M'
  3797  00FEC4  65                 	db	101	;'e'
  3798  00FEC5  61                 	db	97	;'a'
  3799  00FEC6  73                 	db	115	;'s'
  3800  00FEC7  75                 	db	117	;'u'
  3801  00FEC8  72                 	db	114	;'r'
  3802  00FEC9  65                 	db	101	;'e'
  3803  00FECA  20                 	db	32
  3804  00FECB  44                 	db	68	;'D'
  3805  00FECC  69                 	db	105	;'i'
  3806  00FECD  65                 	db	101	;'e'
  3807  00FECE  20                 	db	32
  3808  00FECF  54                 	db	84	;'T'
  3809  00FED0  65                 	db	101	;'e'
  3810  00FED1  6D                 	db	109	;'m'
  3811  00FED2  70                 	db	112	;'p'
  3812  00FED3  3F                 	db	63	;'?'
  3813  00FED4  00                 	db	0
  3814  00FED5                     STR_95:
  3815  00FED5  30                 	db	48	;'0'
  3816  00FED6  31                 	db	49	;'1'
  3817  00FED7  32                 	db	50	;'2'
  3818  00FED8  33                 	db	51	;'3'
  3819  00FED9  34                 	db	52	;'4'
  3820  00FEDA  35                 	db	53	;'5'
  3821  00FEDB  36                 	db	54	;'6'
  3822  00FEDC  37                 	db	55	;'7'
  3823  00FEDD  38                 	db	56	;'8'
  3824  00FEDE  39                 	db	57	;'9'
  3825  00FEDF  41                 	db	65	;'A'
  3826  00FEE0  42                 	db	66	;'B'
  3827  00FEE1  43                 	db	67	;'C'
  3828  00FEE2  44                 	db	68	;'D'
  3829  00FEE3  45                 	db	69	;'E'
  3830  00FEE4  46                 	db	70	;'F'
  3831  00FEE5  00                 	db	0
  3832  00FEE6                     STR_49:
  3833  00FEE6  41                 	db	65	;'A'
  3834  00FEE7  43                 	db	67	;'C'
  3835  00FEE8  20                 	db	32
  3836  00FEE9  50                 	db	80	;'P'
  3837  00FEEA  6F                 	db	111	;'o'
  3838  00FEEB  77                 	db	119	;'w'
  3839  00FEEC  65                 	db	101	;'e'
  3840  00FEED  72                 	db	114	;'r'
  3841  00FEEE  20                 	db	32
  3842  00FEEF  4D                 	db	77	;'M'
  3843  00FEF0  65                 	db	101	;'e'
  3844  00FEF1  74                 	db	116	;'t'
  3845  00FEF2  65                 	db	101	;'e'
  3846  00FEF3  72                 	db	114	;'r'
  3847  00FEF4  0A                 	db	10
  3848  00FEF5  0D                 	db	13
  3849  00FEF6  00                 	db	0
  3850  00FEF7                     STR_51:
  3851  00FEF7  4D                 	db	77	;'M'
  3852  00FEF8  65                 	db	101	;'e'
  3853  00FEF9  61                 	db	97	;'a'
  3854  00FEFA  73                 	db	115	;'s'
  3855  00FEFB  75                 	db	117	;'u'
  3856  00FEFC  72                 	db	114	;'r'
  3857  00FEFD  65                 	db	101	;'e'
  3858  00FEFE  20                 	db	32
  3859  00FEFF  50                 	db	80	;'P'
  3860  00FF00  4F                 	db	79	;'O'
  3861  00FF01  53                 	db	83	;'S'
  3862  00FF02  33                 	db	51	;'3'
  3863  00FF03  50                 	db	80	;'P'
  3864  00FF04  33                 	db	51	;'3'
  3865  00FF05  3F                 	db	63	;'?'
  3866  00FF06  00                 	db	0
  3867  00FF07                     STR_84:
  3868  00FF07  44                 	db	68	;'D'
  3869  00FF08  65                 	db	101	;'e'
  3870  00FF09  76                 	db	118	;'v'
  3871  00FF0A  69                 	db	105	;'i'
  3872  00FF0B  63                 	db	99	;'c'
  3873  00FF0C  65                 	db	101	;'e'
  3874  00FF0D  20                 	db	32
  3875  00FF0E  4F                 	db	79	;'O'
  3876  00FF0F  6E                 	db	110	;'n'
  3877  00FF10  20                 	db	32
  3878  00FF11  54                 	db	84	;'T'
  3879  00FF12  69                 	db	105	;'i'
  3880  00FF13  6D                 	db	109	;'m'
  3881  00FF14  65                 	db	101	;'e'
  3882  00FF15  3F                 	db	63	;'?'
  3883  00FF16  00                 	db	0
  3884  00FF17                     STR_71:
  3885  00FF17  44                 	db	68	;'D'
  3886  00FF18  69                 	db	105	;'i'
  3887  00FF19  73                 	db	115	;'s'
  3888  00FF1A  61                 	db	97	;'a'
  3889  00FF1B  62                 	db	98	;'b'
  3890  00FF1C  6C                 	db	108	;'l'
  3891  00FF1D  65                 	db	101	;'e'
  3892  00FF1E  20                 	db	32
  3893  00FF1F  44                 	db	68	;'D'
  3894  00FF20  69                 	db	105	;'i'
  3895  00FF21  6D                 	db	109	;'m'
  3896  00FF22  6D                 	db	109	;'m'
  3897  00FF23  69                 	db	105	;'i'
  3898  00FF24  6E                 	db	110	;'n'
  3899  00FF25  67                 	db	103	;'g'
  3900  00FF26  00                 	db	0
  3901  00FF27                     STR_53:
  3902  00FF27  4D                 	db	77	;'M'
  3903  00FF28  65                 	db	101	;'e'
  3904  00FF29  61                 	db	97	;'a'
  3905  00FF2A  73                 	db	115	;'s'
  3906  00FF2B  75                 	db	117	;'u'
  3907  00FF2C  72                 	db	114	;'r'
  3908  00FF2D  65                 	db	101	;'e'
  3909  00FF2E  20                 	db	32
  3910  00FF2F  50                 	db	80	;'P'
  3911  00FF30  4F                 	db	79	;'O'
  3912  00FF31  53                 	db	83	;'S'
  3913  00FF32  31                 	db	49	;'1'
  3914  00FF33  32                 	db	50	;'2'
  3915  00FF34  3F                 	db	63	;'?'
  3916  00FF35  00                 	db	0
  3917  00FF36                     STR_67:
  3918  00FF36  4D                 	db	77	;'M'
  3919  00FF37  65                 	db	101	;'e'
  3920  00FF38  61                 	db	97	;'a'
  3921  00FF39  73                 	db	115	;'s'
  3922  00FF3A  75                 	db	117	;'u'
  3923  00FF3B  72                 	db	114	;'r'
  3924  00FF3C  65                 	db	101	;'e'
  3925  00FF3D  20                 	db	32
  3926  00FF3E  50                 	db	80	;'P'
  3927  00FF3F  6F                 	db	111	;'o'
  3928  00FF40  77                 	db	119	;'w'
  3929  00FF41  65                 	db	101	;'e'
  3930  00FF42  72                 	db	114	;'r'
  3931  00FF43  3F                 	db	63	;'?'
  3932  00FF44  00                 	db	0
  3933  00FF45                     STR_69:
  3934  00FF45  45                 	db	69	;'E'
  3935  00FF46  6E                 	db	110	;'n'
  3936  00FF47  61                 	db	97	;'a'
  3937  00FF48  62                 	db	98	;'b'
  3938  00FF49  6C                 	db	108	;'l'
  3939  00FF4A  65                 	db	101	;'e'
  3940  00FF4B  20                 	db	32
  3941  00FF4C  44                 	db	68	;'D'
  3942  00FF4D  69                 	db	105	;'i'
  3943  00FF4E  6D                 	db	109	;'m'
  3944  00FF4F  6D                 	db	109	;'m'
  3945  00FF50  69                 	db	105	;'i'
  3946  00FF51  6E                 	db	110	;'n'
  3947  00FF52  67                 	db	103	;'g'
  3948  00FF53  00                 	db	0
  3949  00FF54                     STR_59:
  3950  00FF54  4D                 	db	77	;'M'
  3951  00FF55  65                 	db	101	;'e'
  3952  00FF56  61                 	db	97	;'a'
  3953  00FF57  73                 	db	115	;'s'
  3954  00FF58  75                 	db	117	;'u'
  3955  00FF59  72                 	db	114	;'r'
  3956  00FF5A  65                 	db	101	;'e'
  3957  00FF5B  20                 	db	32
  3958  00FF5C  41                 	db	65	;'A'
  3959  00FF5D  56                 	db	86	;'V'
  3960  00FF5E  53                 	db	83	;'S'
  3961  00FF5F  53                 	db	83	;'S'
  3962  00FF60  3F                 	db	63	;'?'
  3963  00FF61  00                 	db	0
  3964  00FF62                     STR_86:
  3965  00FF62  4C                 	db	76	;'L'
  3966  00FF63  6F                 	db	111	;'o'
  3967  00FF64  61                 	db	97	;'a'
  3968  00FF65  64                 	db	100	;'d'
  3969  00FF66  20                 	db	32
  3970  00FF67  4F                 	db	79	;'O'
  3971  00FF68  6E                 	db	110	;'n'
  3972  00FF69  20                 	db	32
  3973  00FF6A  54                 	db	84	;'T'
  3974  00FF6B  69                 	db	105	;'i'
  3975  00FF6C  6D                 	db	109	;'m'
  3976  00FF6D  65                 	db	101	;'e'
  3977  00FF6E  3F                 	db	63	;'?'
  3978  00FF6F  00                 	db	0
  3979  00FF70                     STR_57:
  3980  00FF70  4D                 	db	77	;'M'
  3981  00FF71  65                 	db	101	;'e'
  3982  00FF72  61                 	db	97	;'a'
  3983  00FF73  73                 	db	115	;'s'
  3984  00FF74  75                 	db	117	;'u'
  3985  00FF75  72                 	db	114	;'r'
  3986  00FF76  65                 	db	101	;'e'
  3987  00FF77  20                 	db	32
  3988  00FF78  46                 	db	70	;'F'
  3989  00FF79  56                 	db	86	;'V'
  3990  00FF7A  52                 	db	82	;'R'
  3991  00FF7B  3F                 	db	63	;'?'
  3992  00FF7C  00                 	db	0
  3993  00FF7D                     STR_75:
  3994  00FF7D  44                 	db	68	;'D'
  3995  00FF7E  69                 	db	105	;'i'
  3996  00FF7F  73                 	db	115	;'s'
  3997  00FF80  61                 	db	97	;'a'
  3998  00FF81  62                 	db	98	;'b'
  3999  00FF82  6C                 	db	108	;'l'
  4000  00FF83  65                 	db	101	;'e'
  4001  00FF84  20                 	db	32
  4002  00FF85  4C                 	db	76	;'L'
  4003  00FF86  6F                 	db	111	;'o'
  4004  00FF87  61                 	db	97	;'a'
  4005  00FF88  64                 	db	100	;'d'
  4006  00FF89  00                 	db	0
  4007  00FF8A                     STR_73:
  4008  00FF8A  45                 	db	69	;'E'
  4009  00FF8B  6E                 	db	110	;'n'
  4010  00FF8C  61                 	db	97	;'a'
  4011  00FF8D  62                 	db	98	;'b'
  4012  00FF8E  6C                 	db	108	;'l'
  4013  00FF8F  65                 	db	101	;'e'
  4014  00FF90  20                 	db	32
  4015  00FF91  4C                 	db	76	;'L'
  4016  00FF92  6F                 	db	111	;'o'
  4017  00FF93  61                 	db	97	;'a'
  4018  00FF94  64                 	db	100	;'d'
  4019  00FF95  00                 	db	0
  4020  00FF96                     STR_47:
  4021  00FF96  2A                 	db	42
  4022  00FF97  49                 	db	73	;'I'
  4023  00FF98  44                 	db	68	;'D'
  4024  00FF99  4E                 	db	78	;'N'
  4025  00FF9A  3F                 	db	63	;'?'
  4026  00FF9B  00                 	db	0
  4027  00FF9C                     STR_44:
  4028  00FF9C  43                 	db	67	;'C'
  4029  00FF9D  6C                 	db	108	;'l'
  4030  00FF9E  65                 	db	101	;'e'
  4031  00FF9F  61                 	db	97	;'a'
  4032  00FFA0  72                 	db	114	;'r'
  4033  00FFA1  00                 	db	0
  4034  00FFA2                     STR_41:
  4035  00FFA2  52                 	db	82	;'R'
  4036  00FFA3  65                 	db	101	;'e'
  4037  00FFA4  73                 	db	115	;'s'
  4038  00FFA5  65                 	db	101	;'e'
  4039  00FFA6  74                 	db	116	;'t'
  4040  00FFA7  00                 	db	0
  4041  00FFA8                     STR_88:
  4042  00FFA8  48                 	db	72	;'H'
  4043  00FFA9  65                 	db	101	;'e'
  4044  00FFAA  6C                 	db	108	;'l'
  4045  00FFAB  70                 	db	112	;'p'
  4046  00FFAC  00                 	db	0
  4047  00FFAD                     STR_2:
  4048  00FFAD  1B                 	db	27
  4049  00FFAE  5B                 	db	91	;'['
  4050  00FFAF  32                 	db	50	;'2'
  4051  00FFB0  4A                 	db	74	;'J'
  4052  00FFB1  00                 	db	0
  4053  00FFB2                     STR_48:
  4054  00FFB2  49                 	db	73	;'I'
  4055  00FFB3  44                 	db	68	;'D'
  4056  00FFB4  4E                 	db	78	;'N'
  4057  00FFB5  00                 	db	0
  4058  00FFB6                     STR_3:
  4059  00FFB6  1B                 	db	27
  4060  00FFB7  5B                 	db	91	;'['
  4061  00FFB8  48                 	db	72	;'H'
  4062  00FFB9  00                 	db	0
  4063  00FFBA  1B                 	db	27
  4064  00FFBB  5B                 	db	91	;'['
  4065  00FFBC  73                 	db	115	;'s'
  4066  00FFBD  00                 	db	0
  4067  00FFBE  1B                 	db	27
  4068  00FFBF  5B                 	db	91	;'['
  4069  00FFC0  75                 	db	117	;'u'
  4070  00FFC1  00                 	db	0
  4071  00FFC2                     STR_1:
  4072  00FFC2  1B                 	db	27
  4073  00FFC3  5B                 	db	91	;'['
  4074  00FFC4  4B                 	db	75	;'K'
  4075  00FFC5  00                 	db	0
  4076  00FFC6                     STR_20:
  4077  00FFC6  33                 	db	51	;'3'
  4078  00FFC7  30                 	db	48	;'0'
  4079  00FFC8  00                 	db	0
  4080  00FFC9                     STR_30:
  4081  00FFC9  34                 	db	52	;'4'
  4082  00FFCA  30                 	db	48	;'0'
  4083  00FFCB  00                 	db	0
  4084  00FFCC                     STR_21:
  4085  00FFCC  33                 	db	51	;'3'
  4086  00FFCD  31                 	db	49	;'1'
  4087  00FFCE  00                 	db	0
  4088  00FFCF                     STR_31:
  4089  00FFCF  34                 	db	52	;'4'
  4090  00FFD0  31                 	db	49	;'1'
  4091  00FFD1  00                 	db	0
  4092  00FFD2                     STR_22:
  4093  00FFD2  33                 	db	51	;'3'
  4094  00FFD3  32                 	db	50	;'2'
  4095  00FFD4  00                 	db	0
  4096  00FFD5                     STR_32:
  4097  00FFD5  34                 	db	52	;'4'
  4098  00FFD6  32                 	db	50	;'2'
  4099  00FFD7  00                 	db	0
  4100  00FFD8                     STR_23:
  4101  00FFD8  33                 	db	51	;'3'
  4102  00FFD9  33                 	db	51	;'3'
  4103  00FFDA  00                 	db	0
  4104  00FFDB                     STR_33:
  4105  00FFDB  34                 	db	52	;'4'
  4106  00FFDC  33                 	db	51	;'3'
  4107  00FFDD  00                 	db	0
  4108  00FFDE                     STR_24:
  4109  00FFDE  33                 	db	51	;'3'
  4110  00FFDF  34                 	db	52	;'4'
  4111  00FFE0  00                 	db	0
  4112  00FFE1                     STR_34:
  4113  00FFE1  34                 	db	52	;'4'
  4114  00FFE2  34                 	db	52	;'4'
  4115  00FFE3  00                 	db	0
  4116  00FFE4                     STR_25:
  4117  00FFE4  33                 	db	51	;'3'
  4118  00FFE5  35                 	db	53	;'5'
  4119  00FFE6  00                 	db	0
  4120  00FFE7                     STR_35:
  4121  00FFE7  34                 	db	52	;'4'
  4122  00FFE8  35                 	db	53	;'5'
  4123  00FFE9  00                 	db	0
  4124  00FFEA                     STR_26:
  4125  00FFEA  33                 	db	51	;'3'
  4126  00FFEB  36                 	db	54	;'6'
  4127  00FFEC  00                 	db	0
  4128  00FFED                     STR_36:
  4129  00FFED  34                 	db	52	;'4'
  4130  00FFEE  36                 	db	54	;'6'
  4131  00FFEF  00                 	db	0
  4132  00FFF0                     STR_27:
  4133  00FFF0  33                 	db	51	;'3'
  4134  00FFF1  37                 	db	55	;'7'
  4135  00FFF2  00                 	db	0
  4136  00FFF3                     STR_37:
  4137  00FFF3  34                 	db	52	;'4'
  4138  00FFF4  37                 	db	55	;'7'
  4139  00FFF5  00                 	db	0
  4140  00FFF6                     STR_11:
  4141  00FFF6  1B                 	db	27
  4142  00FFF7  5B                 	db	91	;'['
  4143  00FFF8  00                 	db	0
  4144  00FFF9                     STR_17:
  4145  00FFF9  38                 	db	56	;'8'
  4146  00FFFA  00                 	db	0
  4147  00FFFB                     STR_19:
  4148  00FFFB  3B                 	db	59	;';'
  4149  00FFFC  00                 	db	0
  4150  00FFFD                     STR_39:
  4151  00FFFD  6D                 	db	109	;'m'
  4152  00FFFE  00                 	db	0
  4153  0000                     
  4154                           ; #config settings
  4155  00FFFF  00                 	db	0	; dummy byte at the end
  4156  0000                     
  4157                           	psect	cinit
  4158  015C68                     __pcinit:
  4159                           	opt stack 0
  4160  015C68                     start_initialization:
  4161                           	opt stack 0
  4162  015C68                     __initialization:
  4163                           	opt stack 0
  4164                           
  4165                           ; Initialize objects allocated to BANK0 (14 bytes)
  4166                           ; load TBLPTR registers with __pidataBANK0
  4167  015C68  0E60               	movlw	low __pidataBANK0
  4168  015C6A  6EF6               	movwf	tblptrl,c
  4169  015C6C  0E64               	movlw	high __pidataBANK0
  4170  015C6E  6EF7               	movwf	tblptrh,c
  4171  015C70  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4172  015C72  6EF8               	movwf	tblptru,c
  4173  015C74  EE00  F0EF         	lfsr	0,__pdataBANK0
  4174  015C78  EE10 F00E          	lfsr	1,14
  4175  015C7C                     copy_data0:
  4176  015C7C  0009               	tblrd		*+
  4177  015C7E  CFF5 FFEE          	movff	tablat,postinc0
  4178  015C82  50E5               	movf	postdec1,w,c
  4179  015C84  50E1               	movf	fsr1l,w,c
  4180  015C86  E1FA               	bnz	copy_data0
  4181                           
  4182                           ; Clear objects allocated to BANK2 (256 bytes)
  4183  015C88  EE02  F000         	lfsr	0,__pbssBANK2
  4184  015C8C  EE11 F000          	lfsr	1,256
  4185  015C90                     clear_0:
  4186  015C90  6AEE               	clrf	postinc0,c
  4187  015C92  50E5               	movf	postdec1,w,c
  4188  015C94  50E1               	movf	fsr1l,w,c
  4189  015C96  E1FC               	bnz	clear_0
  4190  015C98  50E2               	movf	fsr1h,w,c
  4191  015C9A  E1FA               	bnz	clear_0
  4192                           
  4193                           ; Clear objects allocated to BANK1 (38 bytes)
  4194  015C9C  EE01  F0B9         	lfsr	0,__pbssBANK1
  4195  015CA0  0E26               	movlw	38
  4196  015CA2                     clear_1:
  4197  015CA2  6AEE               	clrf	postinc0,c
  4198  015CA4  06E8               	decf	wreg,f,c
  4199  015CA6  E1FD               	bnz	clear_1
  4200                           
  4201                           ; Clear objects allocated to BITBANK0 (1 bytes)
  4202  015CA8  0100               	movlb	0
  4203  015CAA  6BFD               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  4204                           
  4205                           ; Clear objects allocated to BANK0 (39 bytes)
  4206  015CAC  EE00  F0C8         	lfsr	0,__pbssBANK0
  4207  015CB0  0E27               	movlw	39
  4208  015CB2                     clear_2:
  4209  015CB2  6AEE               	clrf	postinc0,c
  4210  015CB4  06E8               	decf	wreg,f,c
  4211  015CB6  E1FD               	bnz	clear_2
  4212                           
  4213                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  4214  015CB8  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  4215  015CBA                     end_of_initialization:
  4216                           	opt stack 0
  4217  015CBA                     __end_of__initialization:
  4218                           	opt stack 0
  4219  015CBA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4220  015CBC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4221  015CBE  0100               	movlb	0
  4222  015CC0  EFF8  F0AB         	goto	_main	;jump to C main() function
  4223                           tblptru	equ	0xFF8
  4224                           tblptrh	equ	0xFF7
  4225                           tblptrl	equ	0xFF6
  4226                           tablat	equ	0xFF5
  4227                           postinc0	equ	0xFEE
  4228                           wreg	equ	0xFE8
  4229                           postdec1	equ	0xFE5
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           
  4233                           	psect	bitbssCOMRAM
  4234  0002F0                     __pbitbssCOMRAM:
  4235                           	opt stack 0
  4236  0002F0                     _load_enable:
  4237                           	opt stack 0
  4238  0002F0                     	ds	1
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           postinc0	equ	0xFEE
  4244                           wreg	equ	0xFE8
  4245                           postdec1	equ	0xFE5
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           
  4249                           	psect	bitbssBANK0
  4250  0007E8                     __pbitbssBANK0:
  4251                           	opt stack 0
  4252  0007E8                     _eusart2RxStringReady:
  4253                           	opt stack 0
  4254  0007E8                     	ds	1
  4255                           tblptru	equ	0xFF8
  4256                           tblptrh	equ	0xFF7
  4257                           tblptrl	equ	0xFF6
  4258                           tablat	equ	0xFF5
  4259                           postinc0	equ	0xFEE
  4260                           wreg	equ	0xFE8
  4261                           postdec1	equ	0xFE5
  4262                           fsr1h	equ	0xFE2
  4263                           fsr1l	equ	0xFE1
  4264                           
  4265                           	psect	bssBANK0
  4266  0000C8                     __pbssBANK0:
  4267                           	opt stack 0
  4268  0000C8                     _Vrms:
  4269                           	opt stack 0
  4270  0000C8                     	ds	3
  4271  0000CB                     _Irms:
  4272                           	opt stack 0
  4273  0000CB                     	ds	3
  4274  0000CE                     _Imeas:
  4275                           	opt stack 0
  4276  0000CE                     	ds	3
  4277  0000D1                     _Ipk:
  4278                           	opt stack 0
  4279  0000D1                     	ds	3
  4280  0000D4                     _Vpk:
  4281                           	opt stack 0
  4282  0000D4                     	ds	3
  4283  0000D7                     _POS3P3_ADC_Result:
  4284                           	opt stack 0
  4285  0000D7                     	ds	3
  4286  0000DA                     _ADC_Result_Scaling:
  4287                           	opt stack 0
  4288  0000DA                     	ds	3
  4289  0000DD                     _AVSS_ADC_Result:
  4290                           	opt stack 0
  4291  0000DD                     	ds	3
  4292  0000E0                     _ADCC_ADI_InterruptHandler:
  4293                           	opt stack 0
  4294  0000E0                     	ds	3
  4295  0000E3                     _EUSART2_RxDefaultInterruptHandler:
  4296                           	opt stack 0
  4297  0000E3                     	ds	3
  4298  0000E6                     _errno:
  4299                           	opt stack 0
  4300  0000E6                     	ds	2
  4301  0000E8                     _background_color:
  4302                           	opt stack 0
  4303  0000E8                     	ds	1
  4304  0000E9                     _foreground_color:
  4305                           	opt stack 0
  4306  0000E9                     	ds	1
  4307  0000EA                     _attribute:
  4308                           	opt stack 0
  4309  0000EA                     	ds	1
  4310  0000EB                     _eusart2RxHead:
  4311                           	opt stack 0
  4312  0000EB                     	ds	1
  4313  0000EC                     _FVR_ADC_Result:
  4314                           	opt stack 0
  4315  0000EC                     	ds	3
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           postdec1	equ	0xFE5
  4323                           fsr1h	equ	0xFE2
  4324                           fsr1l	equ	0xFE1
  4325                           
  4326                           	psect	dataBANK0
  4327  0000EF                     __pdataBANK0:
  4328                           	opt stack 0
  4329  0000EF                     _Irms_offset:
  4330                           	opt stack 0
  4331  0000EF                     	ds	3
  4332  0000F2                     _Vpk_const:
  4333                           	opt stack 0
  4334  0000F2                     	ds	3
  4335  0000F5                     _Temp_ADC_Offset:
  4336                           	opt stack 0
  4337  0000F5                     	ds	3
  4338  0000F8                     _dimming_period:
  4339                           	opt stack 0
  4340  0000F8                     	ds	2
  4341  0000FA                     _TRIAC_Firing_Angle:
  4342                           	opt stack 0
  4343  0000FA                     	ds	3
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           postinc0	equ	0xFEE
  4349                           wreg	equ	0xFE8
  4350                           postdec1	equ	0xFE5
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           
  4354                           	psect	bssBANK1
  4355  0001B9                     __pbssBANK1:
  4356                           	opt stack 0
  4357  0001B9                     _load_on_time:
  4358                           	opt stack 0
  4359  0001B9                     	ds	4
  4360  0001BD                     _dev_on_time:
  4361                           	opt stack 0
  4362  0001BD                     	ds	4
  4363  0001C1                     _Avg_Power:
  4364                           	opt stack 0
  4365  0001C1                     	ds	3
  4366  0001C4                     _Temp_ADC_Result:
  4367                           	opt stack 0
  4368  0001C4                     	ds	3
  4369  0001C7                     _POS12_ADC_Result:
  4370                           	opt stack 0
  4371  0001C7                     	ds	3
  4372  0001CA                     _TMR5_InterruptHandler:
  4373                           	opt stack 0
  4374  0001CA                     	ds	3
  4375  0001CD                     _TMR7_InterruptHandler:
  4376                           	opt stack 0
  4377  0001CD                     	ds	3
  4378  0001D0                     _TMR6_InterruptHandler:
  4379                           	opt stack 0
  4380  0001D0                     	ds	3
  4381  0001D3                     _EUSART2_TxDefaultInterruptHandler:
  4382                           	opt stack 0
  4383  0001D3                     	ds	3
  4384  0001D6                     _timer5ReloadVal:
  4385                           	opt stack 0
  4386  0001D6                     	ds	2
  4387  0001D8                     _timer7ReloadVal:
  4388                           	opt stack 0
  4389  0001D8                     	ds	2
  4390  0001DA                     _eusart2RxCount:
  4391                           	opt stack 0
  4392  0001DA                     	ds	1
  4393  0001DB                     _eusart2RxTail:
  4394                           	opt stack 0
  4395  0001DB                     	ds	1
  4396  0001DC                     _eusart2TxBufferRemaining:
  4397                           	opt stack 0
  4398  0001DC                     	ds	1
  4399  0001DD                     _eusart2TxTail:
  4400                           	opt stack 0
  4401  0001DD                     	ds	1
  4402  0001DE                     _eusart2TxHead:
  4403                           	opt stack 0
  4404  0001DE                     	ds	1
  4405                           tblptru	equ	0xFF8
  4406                           tblptrh	equ	0xFF7
  4407                           tblptrl	equ	0xFF6
  4408                           tablat	equ	0xFF5
  4409                           postinc0	equ	0xFEE
  4410                           wreg	equ	0xFE8
  4411                           postdec1	equ	0xFE5
  4412                           fsr1h	equ	0xFE2
  4413                           fsr1l	equ	0xFE1
  4414                           
  4415                           	psect	bssBANK2
  4416  000200                     __pbssBANK2:
  4417                           	opt stack 0
  4418  000200                     _eusart2TxBuffer:
  4419                           	opt stack 0
  4420  000200                     	ds	128
  4421  000280                     _eusart2RxBuffer:
  4422                           	opt stack 0
  4423  000280                     	ds	64
  4424  0002C0                     _line:
  4425                           	opt stack 0
  4426  0002C0                     	ds	64
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           postinc0	equ	0xFEE
  4432                           wreg	equ	0xFE8
  4433                           postdec1	equ	0xFE5
  4434                           fsr1h	equ	0xFE2
  4435                           fsr1l	equ	0xFE1
  4436                           
  4437                           	psect	cstackBANK1
  4438  000100                     __pcstackBANK1:
  4439                           	opt stack 0
  4440  000100                     ??_heartbeatTimerCallback:
  4441  000100                     ADCC_StartConversion@channel:
  4442                           	opt stack 0
  4443  000100                     TMR7_WriteTimer@timerVal:
  4444                           	opt stack 0
  4445                           
  4446                           ; 2 bytes @ 0x0
  4447  000100                     	ds	1
  4448  000101                     
  4449                           ; 1 bytes @ 0x1
  4450  000101                     	ds	1
  4451  000102                     ??_INTERRUPT_InterruptManagerLow:
  4452  000102                     
  4453                           ; 1 bytes @ 0x2
  4454  000102                     	ds	21
  4455  000117                     ??_isdigit:
  4456  000117                     ?_strlen:
  4457                           	opt stack 0
  4458  000117                     ?_strcmp:
  4459                           	opt stack 0
  4460  000117                     ?_strchr:
  4461                           	opt stack 0
  4462  000117                     ?___awmod:
  4463                           	opt stack 0
  4464  000117                     ?___ftpack:
  4465                           	opt stack 0
  4466  000117                     ?__tdiv_to_l_:
  4467                           	opt stack 0
  4468  000117                     ?__div_to_l_:
  4469                           	opt stack 0
  4470  000117                     ?___lldiv:
  4471                           	opt stack 0
  4472  000117                     EUSART2_Read@readValue:
  4473                           	opt stack 0
  4474  000117                     EUSART2_Write@txData:
  4475                           	opt stack 0
  4476  000117                     ___awmod@dividend:
  4477                           	opt stack 0
  4478  000117                     strcat@to:
  4479                           	opt stack 0
  4480  000117                     strcmp@s1:
  4481                           	opt stack 0
  4482  000117                     strlen@s:
  4483                           	opt stack 0
  4484  000117                     strncpy@to:
  4485                           	opt stack 0
  4486  000117                     strchr@ptr:
  4487                           	opt stack 0
  4488  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  4489                           	opt stack 0
  4490  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  4491                           	opt stack 0
  4492  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  4493                           	opt stack 0
  4494  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  4495                           	opt stack 0
  4496  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  4497                           	opt stack 0
  4498  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  4499                           	opt stack 0
  4500  000117                     __div_to_l_@f1:
  4501                           	opt stack 0
  4502  000117                     ___ftpack@arg:
  4503                           	opt stack 0
  4504  000117                     __tdiv_to_l_@f1:
  4505                           	opt stack 0
  4506  000117                     ___ftge@ff1:
  4507                           	opt stack 0
  4508  000117                     ___lldiv@dividend:
  4509                           	opt stack 0
  4510                           
  4511                           ; 4 bytes @ 0x17
  4512  000117                     	ds	1
  4513  000118                     putch@txData:
  4514                           	opt stack 0
  4515  000118                     _isdigit$2506:
  4516                           	opt stack 0
  4517                           
  4518                           ; 1 bytes @ 0x18
  4519  000118                     	ds	1
  4520  000119                     ??_strlen:
  4521  000119                     isdigit@c:
  4522                           	opt stack 0
  4523  000119                     ___awmod@divisor:
  4524                           	opt stack 0
  4525  000119                     strcat@from:
  4526                           	opt stack 0
  4527  000119                     strcmp@s2:
  4528                           	opt stack 0
  4529  000119                     strncpy@from:
  4530                           	opt stack 0
  4531  000119                     strchr@chr:
  4532                           	opt stack 0
  4533                           
  4534                           ; 2 bytes @ 0x19
  4535  000119                     	ds	1
  4536  00011A                     ??_TMR7_Initialize:
  4537  00011A                     ??_TMR5_Initialize:
  4538  00011A                     ___ftpack@exp:
  4539                           	opt stack 0
  4540  00011A                     __div_to_l_@f2:
  4541                           	opt stack 0
  4542  00011A                     __tdiv_to_l_@f2:
  4543                           	opt stack 0
  4544  00011A                     ___ftge@ff2:
  4545                           	opt stack 0
  4546                           
  4547                           ; 3 bytes @ 0x1A
  4548  00011A                     	ds	1
  4549  00011B                     ??_strcmp:
  4550  00011B                     ___awmod@counter:
  4551                           	opt stack 0
  4552  00011B                     ___ftpack@sign:
  4553                           	opt stack 0
  4554  00011B                     strcat@cp:
  4555                           	opt stack 0
  4556  00011B                     strlen@cp:
  4557                           	opt stack 0
  4558  00011B                     strncpy@size:
  4559                           	opt stack 0
  4560  00011B                     ___lldiv@divisor:
  4561                           	opt stack 0
  4562                           
  4563                           ; 4 bytes @ 0x1B
  4564  00011B                     	ds	1
  4565  00011C                     ??___ftpack:
  4566  00011C                     ___awmod@sign:
  4567                           	opt stack 0
  4568  00011C                     strcmp@r:
  4569                           	opt stack 0
  4570                           
  4571                           ; 1 bytes @ 0x1C
  4572  00011C                     	ds	1
  4573  00011D                     ??__tdiv_to_l_:
  4574  00011D                     ??___ftge:
  4575  00011D                     ?_strncmp:
  4576                           	opt stack 0
  4577  00011D                     ?___awdiv:
  4578                           	opt stack 0
  4579  00011D                     ___awdiv@dividend:
  4580                           	opt stack 0
  4581  00011D                     strncpy@cp:
  4582                           	opt stack 0
  4583  00011D                     strncmp@s1:
  4584                           	opt stack 0
  4585  00011D                     __div_to_l_@quot:
  4586                           	opt stack 0
  4587                           
  4588                           ; 4 bytes @ 0x1D
  4589  00011D                     	ds	2
  4590  00011F                     ?___awtoft:
  4591                           	opt stack 0
  4592  00011F                     ?___lltoft:
  4593                           	opt stack 0
  4594  00011F                     ___awdiv@divisor:
  4595                           	opt stack 0
  4596  00011F                     ___awtoft@c:
  4597                           	opt stack 0
  4598  00011F                     strncmp@s2:
  4599                           	opt stack 0
  4600  00011F                     ___lldiv@quotient:
  4601                           	opt stack 0
  4602  00011F                     ___lltoft@c:
  4603                           	opt stack 0
  4604                           
  4605                           ; 4 bytes @ 0x1F
  4606  00011F                     	ds	1
  4607  000120                     __tdiv_to_l_@quot:
  4608                           	opt stack 0
  4609                           
  4610                           ; 4 bytes @ 0x20
  4611  000120                     	ds	1
  4612  000121                     ___awdiv@counter:
  4613                           	opt stack 0
  4614  000121                     __div_to_l_@cntr:
  4615                           	opt stack 0
  4616  000121                     strncmp@len:
  4617                           	opt stack 0
  4618                           
  4619                           ; 2 bytes @ 0x21
  4620  000121                     	ds	1
  4621  000122                     ___awdiv@sign:
  4622                           	opt stack 0
  4623  000122                     ___awtoft@sign:
  4624                           	opt stack 0
  4625  000122                     __div_to_l_@exp1:
  4626                           	opt stack 0
  4627                           
  4628                           ; 1 bytes @ 0x22
  4629  000122                     	ds	1
  4630  000123                     ??_strncmp:
  4631  000123                     ??___lltoft:
  4632  000123                     ?___ftneg:
  4633                           	opt stack 0
  4634  000123                     ___lldiv@counter:
  4635                           	opt stack 0
  4636  000123                     ___awdiv@quotient:
  4637                           	opt stack 0
  4638  000123                     ___ftneg@f1:
  4639                           	opt stack 0
  4640                           
  4641                           ; 3 bytes @ 0x23
  4642  000123                     	ds	1
  4643  000124                     ?___llmod:
  4644                           	opt stack 0
  4645  000124                     __tdiv_to_l_@cntr:
  4646                           	opt stack 0
  4647  000124                     ___llmod@dividend:
  4648                           	opt stack 0
  4649                           
  4650                           ; 4 bytes @ 0x24
  4651  000124                     	ds	1
  4652  000125                     ?___wmul:
  4653                           	opt stack 0
  4654  000125                     __tdiv_to_l_@exp1:
  4655                           	opt stack 0
  4656  000125                     ___wmul@multiplier:
  4657                           	opt stack 0
  4658                           
  4659                           ; 2 bytes @ 0x25
  4660  000125                     	ds	1
  4661  000126                     ?_strstr:
  4662                           	opt stack 0
  4663  000126                     strstr@s1:
  4664                           	opt stack 0
  4665                           
  4666                           ; 2 bytes @ 0x26
  4667  000126                     	ds	1
  4668  000127                     ___lltoft@exp:
  4669                           	opt stack 0
  4670  000127                     ___wmul@multiplicand:
  4671                           	opt stack 0
  4672                           
  4673                           ; 2 bytes @ 0x27
  4674  000127                     	ds	1
  4675  000128                     strstr@s2:
  4676                           	opt stack 0
  4677  000128                     ___llmod@divisor:
  4678                           	opt stack 0
  4679                           
  4680                           ; 4 bytes @ 0x28
  4681  000128                     	ds	1
  4682  000129                     ___wmul@product:
  4683                           	opt stack 0
  4684                           
  4685                           ; 2 bytes @ 0x29
  4686  000129                     	ds	1
  4687  00012A                     
  4688                           ; 1 bytes @ 0x2A
  4689  00012A                     	ds	1
  4690  00012B                     ?_atoi:
  4691                           	opt stack 0
  4692  00012B                     ?___ftadd:
  4693                           	opt stack 0
  4694  00012B                     atoi@s:
  4695                           	opt stack 0
  4696  00012B                     ___ftadd@f1:
  4697                           	opt stack 0
  4698                           
  4699                           ; 3 bytes @ 0x2B
  4700  00012B                     	ds	1
  4701  00012C                     ___llmod@counter:
  4702                           	opt stack 0
  4703                           
  4704                           ; 1 bytes @ 0x2C
  4705  00012C                     	ds	1
  4706  00012D                     ??_atoi:
  4707                           
  4708                           ; 1 bytes @ 0x2D
  4709  00012D                     	ds	1
  4710  00012E                     ___ftadd@f2:
  4711                           	opt stack 0
  4712                           
  4713                           ; 3 bytes @ 0x2E
  4714  00012E                     	ds	1
  4715  00012F                     atoi@sign:
  4716                           	opt stack 0
  4717                           
  4718                           ; 1 bytes @ 0x2F
  4719  00012F                     	ds	1
  4720  000130                     atoi@a:
  4721                           	opt stack 0
  4722                           
  4723                           ; 2 bytes @ 0x30
  4724  000130                     	ds	1
  4725  000131                     ??___ftadd:
  4726                           
  4727                           ; 1 bytes @ 0x31
  4728  000131                     	ds	3
  4729  000134                     ___ftadd@sign:
  4730                           	opt stack 0
  4731                           
  4732                           ; 1 bytes @ 0x34
  4733  000134                     	ds	1
  4734  000135                     ___ftadd@exp2:
  4735                           	opt stack 0
  4736                           
  4737                           ; 1 bytes @ 0x35
  4738  000135                     	ds	1
  4739  000136                     ___ftadd@exp1:
  4740                           	opt stack 0
  4741                           
  4742                           ; 1 bytes @ 0x36
  4743  000136                     	ds	1
  4744  000137                     ?___ftdiv:
  4745                           	opt stack 0
  4746  000137                     ?___ftsub:
  4747                           	opt stack 0
  4748  000137                     ___ftdiv@f1:
  4749                           	opt stack 0
  4750  000137                     ___ftsub@f1:
  4751                           	opt stack 0
  4752                           
  4753                           ; 3 bytes @ 0x37
  4754  000137                     	ds	3
  4755  00013A                     ___ftdiv@f2:
  4756                           	opt stack 0
  4757  00013A                     ___ftsub@f2:
  4758                           	opt stack 0
  4759                           
  4760                           ; 3 bytes @ 0x3A
  4761  00013A                     	ds	3
  4762  00013D                     ??___ftdiv:
  4763  00013D                     
  4764                           ; 1 bytes @ 0x3D
  4765  00013D                     	ds	3
  4766  000140                     ___ftdiv@cntr:
  4767                           	opt stack 0
  4768                           
  4769                           ; 1 bytes @ 0x40
  4770  000140                     	ds	1
  4771  000141                     ___ftdiv@f3:
  4772                           	opt stack 0
  4773                           
  4774                           ; 3 bytes @ 0x41
  4775  000141                     	ds	3
  4776  000144                     ___ftdiv@exp:
  4777                           	opt stack 0
  4778                           
  4779                           ; 1 bytes @ 0x44
  4780  000144                     	ds	1
  4781  000145                     ___ftdiv@sign:
  4782                           	opt stack 0
  4783                           
  4784                           ; 1 bytes @ 0x45
  4785  000145                     	ds	1
  4786  000146                     ?___ftmul:
  4787                           	opt stack 0
  4788  000146                     ___ftmul@f1:
  4789                           	opt stack 0
  4790                           
  4791                           ; 3 bytes @ 0x46
  4792  000146                     	ds	3
  4793  000149                     ___ftmul@f2:
  4794                           	opt stack 0
  4795                           
  4796                           ; 3 bytes @ 0x49
  4797  000149                     	ds	3
  4798  00014C                     ??___ftmul:
  4799                           
  4800                           ; 1 bytes @ 0x4C
  4801  00014C                     	ds	3
  4802  00014F                     ___ftmul@exp:
  4803                           	opt stack 0
  4804                           
  4805                           ; 1 bytes @ 0x4F
  4806  00014F                     	ds	1
  4807  000150                     ___ftmul@f3_as_product:
  4808                           	opt stack 0
  4809                           
  4810                           ; 3 bytes @ 0x50
  4811  000150                     	ds	3
  4812  000153                     ___ftmul@cntr:
  4813                           	opt stack 0
  4814                           
  4815                           ; 1 bytes @ 0x53
  4816  000153                     	ds	1
  4817  000154                     ___ftmul@sign:
  4818                           	opt stack 0
  4819                           
  4820                           ; 1 bytes @ 0x54
  4821  000154                     	ds	1
  4822  000155                     ?_fround:
  4823                           	opt stack 0
  4824  000155                     ?_scale:
  4825                           	opt stack 0
  4826  000155                     ?___fttol:
  4827                           	opt stack 0
  4828  000155                     ___fttol@f1:
  4829                           	opt stack 0
  4830                           
  4831                           ; 3 bytes @ 0x55
  4832  000155                     	ds	3
  4833  000158                     _fround$3150:
  4834                           	opt stack 0
  4835  000158                     _scale$3151:
  4836                           	opt stack 0
  4837                           
  4838                           ; 3 bytes @ 0x58
  4839  000158                     	ds	1
  4840  000159                     ??___fttol:
  4841                           
  4842                           ; 1 bytes @ 0x59
  4843  000159                     	ds	2
  4844  00015B                     scale@scl:
  4845                           	opt stack 0
  4846  00015B                     _fround$3149:
  4847                           	opt stack 0
  4848                           
  4849                           ; 3 bytes @ 0x5B
  4850  00015B                     	ds	3
  4851  00015E                     fround@prec:
  4852                           	opt stack 0
  4853  00015E                     ___fttol@sign1:
  4854                           	opt stack 0
  4855                           
  4856                           ; 1 bytes @ 0x5E
  4857  00015E                     	ds	1
  4858  00015F                     ___fttol@lval:
  4859                           	opt stack 0
  4860                           
  4861                           ; 4 bytes @ 0x5F
  4862  00015F                     	ds	4
  4863  000163                     ___fttol@exp1:
  4864                           	opt stack 0
  4865                           
  4866                           ; 1 bytes @ 0x63
  4867  000163                     	ds	1
  4868  000164                     ?_printf:
  4869                           	opt stack 0
  4870  000164                     printf@f:
  4871                           	opt stack 0
  4872                           
  4873                           ; 2 bytes @ 0x64
  4874  000164                     	ds	8
  4875  00016C                     ??_printf:
  4876                           
  4877                           ; 1 bytes @ 0x6C
  4878  00016C                     	ds	6
  4879  000172                     _printf$3152:
  4880                           	opt stack 0
  4881                           
  4882                           ; 3 bytes @ 0x72
  4883  000172                     	ds	3
  4884  000175                     printf@idx:
  4885                           	opt stack 0
  4886                           
  4887                           ; 1 bytes @ 0x75
  4888  000175                     	ds	1
  4889  000176                     printf@cp:
  4890                           	opt stack 0
  4891                           
  4892                           ; 2 bytes @ 0x76
  4893  000176                     	ds	2
  4894  000178                     printf@len:
  4895                           	opt stack 0
  4896                           
  4897                           ; 2 bytes @ 0x78
  4898  000178                     	ds	2
  4899  00017A                     printf@ap:
  4900                           	opt stack 0
  4901                           
  4902                           ; 2 bytes @ 0x7A
  4903  00017A                     	ds	2
  4904  00017C                     printf@flag:
  4905                           	opt stack 0
  4906                           
  4907                           ; 2 bytes @ 0x7C
  4908  00017C                     	ds	2
  4909  00017E                     printf@exp:
  4910                           	opt stack 0
  4911                           
  4912                           ; 2 bytes @ 0x7E
  4913  00017E                     	ds	2
  4914  000180                     printf@tmpval:
  4915                           	opt stack 0
  4916                           
  4917                           ; 4 bytes @ 0x80
  4918  000180                     	ds	4
  4919  000184                     printf@val:
  4920                           	opt stack 0
  4921                           
  4922                           ; 4 bytes @ 0x84
  4923  000184                     	ds	4
  4924  000188                     printf@fval:
  4925                           	opt stack 0
  4926                           
  4927                           ; 3 bytes @ 0x88
  4928  000188                     	ds	3
  4929  00018B                     printf@prec:
  4930                           	opt stack 0
  4931                           
  4932                           ; 2 bytes @ 0x8B
  4933  00018B                     	ds	2
  4934  00018D                     printf@c:
  4935                           	opt stack 0
  4936                           
  4937                           ; 1 bytes @ 0x8D
  4938  00018D                     	ds	1
  4939  00018E                     terminal_textAttributes@background_color:
  4940                           	opt stack 0
  4941                           
  4942                           ; 1 bytes @ 0x8E
  4943  00018E                     	ds	1
  4944  00018F                     terminal_textAttributes@input_attribute:
  4945                           	opt stack 0
  4946                           
  4947                           ; 1 bytes @ 0x8F
  4948  00018F                     	ds	1
  4949  000190                     terminal_textAttributes@foreground_color:
  4950                           	opt stack 0
  4951                           
  4952                           ; 1 bytes @ 0x90
  4953  000190                     	ds	1
  4954  000191                     terminal_textAttributes@output_buff:
  4955                           	opt stack 0
  4956                           
  4957                           ; 15 bytes @ 0x91
  4958  000191                     	ds	15
  4959  0001A0                     ringBufferLUT@line:
  4960                           	opt stack 0
  4961                           
  4962                           ; 2 bytes @ 0xA0
  4963  0001A0                     	ds	2
  4964  0001A2                     ??_ringBufferLUT:
  4965                           
  4966                           ; 1 bytes @ 0xA2
  4967  0001A2                     	ds	2
  4968  0001A4                     ringBufferLUT@angle_degrees:
  4969                           	opt stack 0
  4970                           
  4971                           ; 3 bytes @ 0xA4
  4972  0001A4                     	ds	3
  4973  0001A7                     ringBufferLUT@arg_buff:
  4974                           	opt stack 0
  4975                           
  4976                           ; 3 bytes @ 0xA7
  4977  0001A7                     	ds	3
  4978  0001AA                     ringBufferLUT@index:
  4979                           	opt stack 0
  4980                           
  4981                           ; 2 bytes @ 0xAA
  4982  0001AA                     	ds	2
  4983  0001AC                     ringBufferLUT@percentage:
  4984                           	opt stack 0
  4985                           
  4986                           ; 2 bytes @ 0xAC
  4987  0001AC                     	ds	2
  4988  0001AE                     ??_terminal_ringBufferPull:
  4989                           
  4990                           ; 1 bytes @ 0xAE
  4991  0001AE                     	ds	3
  4992  0001B1                     terminal_ringBufferPull@charNumber:
  4993                           	opt stack 0
  4994                           
  4995                           ; 2 bytes @ 0xB1
  4996  0001B1                     	ds	2
  4997  0001B3                     terminal_ringBufferPull@index_1978:
  4998                           	opt stack 0
  4999                           
  5000                           ; 2 bytes @ 0xB3
  5001  0001B3                     	ds	2
  5002  0001B5                     terminal_ringBufferPull@index:
  5003                           	opt stack 0
  5004                           
  5005                           ; 2 bytes @ 0xB5
  5006  0001B5                     	ds	2
  5007  0001B7                     ??_main:
  5008                           
  5009                           ; 1 bytes @ 0xB7
  5010  0001B7                     	ds	2
  5011                           tblptru	equ	0xFF8
  5012                           tblptrh	equ	0xFF7
  5013                           tblptrl	equ	0xFF6
  5014                           tablat	equ	0xFF5
  5015                           postinc0	equ	0xFEE
  5016                           wreg	equ	0xFE8
  5017                           postdec1	equ	0xFE5
  5018                           fsr1h	equ	0xFE2
  5019                           fsr1l	equ	0xFE1
  5020                           
  5021                           	psect	cstackBANK0
  5022  000060                     __pcstackBANK0:
  5023                           	opt stack 0
  5024  000060                     ?i2___ftsub:
  5025                           	opt stack 0
  5026  000060                     atan@y:
  5027                           	opt stack 0
  5028  000060                     i2___ftsub@f1:
  5029                           	opt stack 0
  5030                           
  5031                           ; 3 bytes @ 0x0
  5032  000060                     	ds	3
  5033  000063                     atan@x:
  5034                           	opt stack 0
  5035  000063                     i2___ftsub@f2:
  5036                           	opt stack 0
  5037                           
  5038                           ; 3 bytes @ 0x3
  5039  000063                     	ds	3
  5040  000066                     ?i2_printf:
  5041                           	opt stack 0
  5042  000066                     ?_sin:
  5043                           	opt stack 0
  5044  000066                     ?_sqrt:
  5045                           	opt stack 0
  5046  000066                     atan@recip:
  5047                           	opt stack 0
  5048  000066                     i2printf@f:
  5049                           	opt stack 0
  5050  000066                     sin@f:
  5051                           	opt stack 0
  5052  000066                     sqrt@a:
  5053                           	opt stack 0
  5054                           
  5055                           ; 3 bytes @ 0x6
  5056  000066                     	ds	1
  5057  000067                     atan@val_squared:
  5058                           	opt stack 0
  5059                           
  5060                           ; 3 bytes @ 0x7
  5061  000067                     	ds	1
  5062  000068                     ??i2_printf:
  5063                           
  5064                           ; 1 bytes @ 0x8
  5065  000068                     	ds	1
  5066  000069                     ??_sqrt:
  5067  000069                     sin@y:
  5068                           	opt stack 0
  5069                           
  5070                           ; 3 bytes @ 0x9
  5071  000069                     	ds	1
  5072  00006A                     atan@val:
  5073                           	opt stack 0
  5074                           
  5075                           ; 3 bytes @ 0xA
  5076  00006A                     	ds	2
  5077  00006C                     sqrt@og:
  5078                           	opt stack 0
  5079  00006C                     _sin$3344:
  5080                           	opt stack 0
  5081                           
  5082                           ; 3 bytes @ 0xC
  5083  00006C                     	ds	2
  5084  00006E                     i2_printf$3348:
  5085                           	opt stack 0
  5086                           
  5087                           ; 3 bytes @ 0xE
  5088  00006E                     	ds	1
  5089  00006F                     sqrt@i:
  5090                           	opt stack 0
  5091  00006F                     sin@x2:
  5092                           	opt stack 0
  5093                           
  5094                           ; 3 bytes @ 0xF
  5095  00006F                     	ds	1
  5096  000070                     sqrt@z:
  5097                           	opt stack 0
  5098                           
  5099                           ; 3 bytes @ 0x10
  5100  000070                     	ds	1
  5101  000071                     i2printf@idx:
  5102                           	opt stack 0
  5103                           
  5104                           ; 1 bytes @ 0x11
  5105  000071                     	ds	1
  5106  000072                     sin@sgn:
  5107                           	opt stack 0
  5108  000072                     i2printf@cp:
  5109                           	opt stack 0
  5110                           
  5111                           ; 2 bytes @ 0x12
  5112  000072                     	ds	1
  5113  000073                     ?_currentMeasuredToPeak:
  5114                           	opt stack 0
  5115  000073                     currentMeasuredToPeak@Measured:
  5116                           	opt stack 0
  5117  000073                     sqrt@q:
  5118                           	opt stack 0
  5119                           
  5120                           ; 3 bytes @ 0x13
  5121  000073                     	ds	1
  5122  000074                     i2printf@len:
  5123                           	opt stack 0
  5124                           
  5125                           ; 2 bytes @ 0x14
  5126  000074                     	ds	2
  5127  000076                     i2printf@ap:
  5128                           	opt stack 0
  5129  000076                     currentMeasuredToPeak@Angle:
  5130                           	opt stack 0
  5131  000076                     sqrt@x:
  5132                           	opt stack 0
  5133                           
  5134                           ; 3 bytes @ 0x16
  5135  000076                     	ds	2
  5136  000078                     i2printf@flag:
  5137                           	opt stack 0
  5138                           
  5139                           ; 2 bytes @ 0x18
  5140  000078                     	ds	1
  5141  000079                     ?_asin:
  5142                           	opt stack 0
  5143  000079                     currentMeasuredToPeak@Peak:
  5144                           	opt stack 0
  5145  000079                     asin@x:
  5146                           	opt stack 0
  5147                           
  5148                           ; 3 bytes @ 0x19
  5149  000079                     	ds	1
  5150  00007A                     i2printf@exp:
  5151                           	opt stack 0
  5152                           
  5153                           ; 2 bytes @ 0x1A
  5154  00007A                     	ds	2
  5155  00007C                     asin@sgn:
  5156                           	opt stack 0
  5157  00007C                     i2printf@tmpval:
  5158                           	opt stack 0
  5159                           
  5160                           ; 4 bytes @ 0x1C
  5161  00007C                     	ds	3
  5162  00007F                     _asin$3340:
  5163                           	opt stack 0
  5164                           
  5165                           ; 3 bytes @ 0x1F
  5166  00007F                     	ds	1
  5167  000080                     i2printf@fval:
  5168                           	opt stack 0
  5169                           
  5170                           ; 3 bytes @ 0x20
  5171  000080                     	ds	2
  5172  000082                     _asin$3343:
  5173                           	opt stack 0
  5174                           
  5175                           ; 3 bytes @ 0x22
  5176  000082                     	ds	1
  5177  000083                     i2printf@val:
  5178                           	opt stack 0
  5179                           
  5180                           ; 4 bytes @ 0x23
  5181  000083                     	ds	2
  5182  000085                     _asin$3342:
  5183                           	opt stack 0
  5184                           
  5185                           ; 3 bytes @ 0x25
  5186  000085                     	ds	2
  5187  000087                     i2printf@prec:
  5188                           	opt stack 0
  5189                           
  5190                           ; 2 bytes @ 0x27
  5191  000087                     	ds	1
  5192  000088                     asin@y:
  5193                           	opt stack 0
  5194                           
  5195                           ; 3 bytes @ 0x28
  5196  000088                     	ds	1
  5197  000089                     i2printf@c:
  5198                           	opt stack 0
  5199                           
  5200                           ; 1 bytes @ 0x29
  5201  000089                     	ds	2
  5202  00008B                     _asin$3341:
  5203                           	opt stack 0
  5204                           
  5205                           ; 3 bytes @ 0x2B
  5206  00008B                     	ds	3
  5207  00008E                     ?_acos:
  5208                           	opt stack 0
  5209  00008E                     acos@x:
  5210                           	opt stack 0
  5211                           
  5212                           ; 3 bytes @ 0x2E
  5213  00008E                     	ds	3
  5214  000091                     _acos$3339:
  5215                           	opt stack 0
  5216                           
  5217                           ; 3 bytes @ 0x31
  5218  000091                     	ds	3
  5219  000094                     ?_peakToRMS:
  5220                           	opt stack 0
  5221  000094                     peakToRMS@Peak:
  5222                           	opt stack 0
  5223                           
  5224                           ; 3 bytes @ 0x34
  5225  000094                     	ds	3
  5226  000097                     peakToRMS@Angle:
  5227                           	opt stack 0
  5228                           
  5229                           ; 3 bytes @ 0x37
  5230  000097                     	ds	3
  5231  00009A                     _peakToRMS$3332:
  5232                           	opt stack 0
  5233                           
  5234                           ; 3 bytes @ 0x3A
  5235  00009A                     	ds	3
  5236  00009D                     _peakToRMS$3333:
  5237                           	opt stack 0
  5238                           
  5239                           ; 3 bytes @ 0x3D
  5240  00009D                     	ds	3
  5241  0000A0                     _peakToRMS$3331:
  5242                           	opt stack 0
  5243                           
  5244                           ; 3 bytes @ 0x40
  5245  0000A0                     	ds	3
  5246  0000A3                     peakToRMS@RMS:
  5247                           	opt stack 0
  5248                           
  5249                           ; 3 bytes @ 0x43
  5250  0000A3                     	ds	3
  5251  0000A6                     _ADC_postProcessingCallback$3336:
  5252                           	opt stack 0
  5253                           
  5254                           ; 3 bytes @ 0x46
  5255  0000A6                     	ds	3
  5256  0000A9                     _ADC_postProcessingCallback$3337:
  5257                           	opt stack 0
  5258                           
  5259                           ; 3 bytes @ 0x49
  5260  0000A9                     	ds	3
  5261  0000AC                     _ADC_postProcessingCallback$3338:
  5262                           	opt stack 0
  5263                           
  5264                           ; 3 bytes @ 0x4C
  5265  0000AC                     	ds	3
  5266  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  5267                           	opt stack 0
  5268                           
  5269                           ; 1 bytes @ 0x4F
  5270  0000AF                     	ds	1
  5271  0000B0                     _ADC_postProcessingCallback$3335:
  5272                           	opt stack 0
  5273                           
  5274                           ; 3 bytes @ 0x50
  5275  0000B0                     	ds	3
  5276  0000B3                     _ADC_postProcessingCallback$3334:
  5277                           	opt stack 0
  5278                           
  5279                           ; 3 bytes @ 0x53
  5280  0000B3                     	ds	3
  5281  0000B6                     ??_INTERRUPT_InterruptManagerHigh:
  5282                           
  5283                           ; 1 bytes @ 0x56
  5284  0000B6                     	ds	18
  5285                           tblptru	equ	0xFF8
  5286                           tblptrh	equ	0xFF7
  5287                           tblptrl	equ	0xFF6
  5288                           tablat	equ	0xFF5
  5289                           postinc0	equ	0xFEE
  5290                           wreg	equ	0xFE8
  5291                           postdec1	equ	0xFE5
  5292                           fsr1h	equ	0xFE2
  5293                           fsr1l	equ	0xFE1
  5294                           
  5295                           	psect	cstackCOMRAM
  5296  000001                     __pcstackCOMRAM:
  5297                           	opt stack 0
  5298  000001                     ??i2_isdigit:
  5299  000001                     ?_ADCC_GetConversionResult:
  5300                           	opt stack 0
  5301  000001                     ?i2___awmod:
  5302                           	opt stack 0
  5303  000001                     ?i2___ftpack:
  5304                           	opt stack 0
  5305  000001                     ?i2__div_to_l_:
  5306                           	opt stack 0
  5307  000001                     ?i2__tdiv_to_l_:
  5308                           	opt stack 0
  5309  000001                     ?i2___lldiv:
  5310                           	opt stack 0
  5311  000001                     i2EUSART2_Write@txData:
  5312                           	opt stack 0
  5313  000001                     TMR5_WriteTimer@timerVal:
  5314                           	opt stack 0
  5315  000001                     i2___awmod@dividend:
  5316                           	opt stack 0
  5317  000001                     frexp@value:
  5318                           	opt stack 0
  5319  000001                     i2__div_to_l_@f1:
  5320                           	opt stack 0
  5321  000001                     i2___ftpack@arg:
  5322                           	opt stack 0
  5323  000001                     i2__tdiv_to_l_@f1:
  5324                           	opt stack 0
  5325  000001                     i2___lldiv@dividend:
  5326                           	opt stack 0
  5327                           
  5328                           ; 4 bytes @ 0x0
  5329  000001                     	ds	1
  5330  000002                     i2putch@txData:
  5331                           	opt stack 0
  5332  000002                     i2_isdigit$2506:
  5333                           	opt stack 0
  5334                           
  5335                           ; 1 bytes @ 0x1
  5336  000002                     	ds	1
  5337  000003                     ??_ADCC_GetConversionResult:
  5338  000003                     i2isdigit@c:
  5339                           	opt stack 0
  5340  000003                     i2___awmod@divisor:
  5341                           	opt stack 0
  5342                           
  5343                           ; 2 bytes @ 0x2
  5344  000003                     	ds	1
  5345  000004                     i2___ftpack@exp:
  5346                           	opt stack 0
  5347  000004                     frexp@eptr:
  5348                           	opt stack 0
  5349  000004                     i2__div_to_l_@f2:
  5350                           	opt stack 0
  5351  000004                     i2__tdiv_to_l_@f2:
  5352                           	opt stack 0
  5353                           
  5354                           ; 3 bytes @ 0x3
  5355  000004                     	ds	1
  5356  000005                     i2___awmod@counter:
  5357                           	opt stack 0
  5358  000005                     i2___ftpack@sign:
  5359                           	opt stack 0
  5360  000005                     i2___lldiv@divisor:
  5361                           	opt stack 0
  5362                           
  5363                           ; 4 bytes @ 0x4
  5364  000005                     	ds	1
  5365  000006                     ??_frexp:
  5366  000006                     ??i2___ftpack:
  5367  000006                     i2___awmod@sign:
  5368                           	opt stack 0
  5369                           
  5370                           ; 1 bytes @ 0x5
  5371  000006                     	ds	1
  5372  000007                     ??i2__tdiv_to_l_:
  5373  000007                     ?i2___awdiv:
  5374                           	opt stack 0
  5375  000007                     i2___awdiv@dividend:
  5376                           	opt stack 0
  5377  000007                     i2__div_to_l_@quot:
  5378                           	opt stack 0
  5379                           
  5380                           ; 4 bytes @ 0x6
  5381  000007                     	ds	2
  5382  000009                     ?___lwtoft:
  5383                           	opt stack 0
  5384  000009                     ?i2___lltoft:
  5385                           	opt stack 0
  5386  000009                     ___lwtoft@c:
  5387                           	opt stack 0
  5388  000009                     i2___awdiv@divisor:
  5389                           	opt stack 0
  5390  000009                     i2___lldiv@quotient:
  5391                           	opt stack 0
  5392  000009                     i2___lltoft@c:
  5393                           	opt stack 0
  5394                           
  5395                           ; 4 bytes @ 0x8
  5396  000009                     	ds	1
  5397  00000A                     i2__tdiv_to_l_@quot:
  5398                           	opt stack 0
  5399                           
  5400                           ; 4 bytes @ 0x9
  5401  00000A                     	ds	1
  5402  00000B                     i2___awdiv@counter:
  5403                           	opt stack 0
  5404  00000B                     i2__div_to_l_@cntr:
  5405                           	opt stack 0
  5406                           
  5407                           ; 1 bytes @ 0xA
  5408  00000B                     	ds	1
  5409  00000C                     i2___awdiv@sign:
  5410                           	opt stack 0
  5411  00000C                     i2__div_to_l_@exp1:
  5412                           	opt stack 0
  5413                           
  5414                           ; 1 bytes @ 0xB
  5415  00000C                     	ds	1
  5416  00000D                     ??i2___lltoft:
  5417  00000D                     i2___lldiv@counter:
  5418                           	opt stack 0
  5419  00000D                     i2___awdiv@quotient:
  5420                           	opt stack 0
  5421                           
  5422                           ; 2 bytes @ 0xC
  5423  00000D                     	ds	1
  5424  00000E                     ?i2___llmod:
  5425                           	opt stack 0
  5426  00000E                     i2__tdiv_to_l_@cntr:
  5427                           	opt stack 0
  5428  00000E                     i2___llmod@dividend:
  5429                           	opt stack 0
  5430                           
  5431                           ; 4 bytes @ 0xD
  5432  00000E                     	ds	1
  5433  00000F                     ?i2___wmul:
  5434                           	opt stack 0
  5435  00000F                     i2__tdiv_to_l_@exp1:
  5436                           	opt stack 0
  5437  00000F                     i2___wmul@multiplier:
  5438                           	opt stack 0
  5439                           
  5440                           ; 2 bytes @ 0xE
  5441  00000F                     	ds	2
  5442  000011                     i2___lltoft@exp:
  5443                           	opt stack 0
  5444  000011                     i2___wmul@multiplicand:
  5445                           	opt stack 0
  5446                           
  5447                           ; 2 bytes @ 0x10
  5448  000011                     	ds	1
  5449  000012                     i2___llmod@divisor:
  5450                           	opt stack 0
  5451                           
  5452                           ; 4 bytes @ 0x11
  5453  000012                     	ds	1
  5454  000013                     i2___wmul@product:
  5455                           	opt stack 0
  5456                           
  5457                           ; 2 bytes @ 0x12
  5458  000013                     	ds	2
  5459  000015                     ?i2___ftdiv:
  5460                           	opt stack 0
  5461  000015                     i2___ftdiv@f1:
  5462                           	opt stack 0
  5463                           
  5464                           ; 3 bytes @ 0x14
  5465  000015                     	ds	1
  5466  000016                     i2___llmod@counter:
  5467                           	opt stack 0
  5468                           
  5469                           ; 1 bytes @ 0x15
  5470  000016                     	ds	2
  5471  000018                     i2___ftdiv@f2:
  5472                           	opt stack 0
  5473                           
  5474                           ; 3 bytes @ 0x17
  5475  000018                     	ds	3
  5476  00001B                     ??i2___ftdiv:
  5477                           
  5478                           ; 1 bytes @ 0x1A
  5479  00001B                     	ds	3
  5480  00001E                     i2___ftdiv@cntr:
  5481                           	opt stack 0
  5482                           
  5483                           ; 1 bytes @ 0x1D
  5484  00001E                     	ds	1
  5485  00001F                     i2___ftdiv@exp:
  5486                           	opt stack 0
  5487                           
  5488                           ; 1 bytes @ 0x1E
  5489  00001F                     	ds	1
  5490  000020                     i2___ftdiv@f3:
  5491                           	opt stack 0
  5492                           
  5493                           ; 3 bytes @ 0x1F
  5494  000020                     	ds	3
  5495  000023                     i2___ftdiv@sign:
  5496                           	opt stack 0
  5497                           
  5498                           ; 1 bytes @ 0x22
  5499  000023                     	ds	1
  5500  000024                     ?i2___ftneg:
  5501                           	opt stack 0
  5502  000024                     i2___ftneg@f1:
  5503                           	opt stack 0
  5504                           
  5505                           ; 3 bytes @ 0x23
  5506  000024                     	ds	3
  5507  000027                     ?_fabs:
  5508                           	opt stack 0
  5509  000027                     ?i2___ftmul:
  5510                           	opt stack 0
  5511  000027                     fabs@d:
  5512                           	opt stack 0
  5513  000027                     i2___ftmul@f1:
  5514                           	opt stack 0
  5515                           
  5516                           ; 3 bytes @ 0x26
  5517  000027                     	ds	3
  5518  00002A                     i2___ftge@ff1:
  5519                           	opt stack 0
  5520  00002A                     i2___ftmul@f2:
  5521                           	opt stack 0
  5522                           
  5523                           ; 3 bytes @ 0x29
  5524  00002A                     	ds	3
  5525  00002D                     ??i2___ftmul:
  5526  00002D                     i2___ftge@ff2:
  5527                           	opt stack 0
  5528                           
  5529                           ; 3 bytes @ 0x2C
  5530  00002D                     	ds	3
  5531  000030                     ??i2___ftge:
  5532  000030                     i2___ftmul@exp:
  5533                           	opt stack 0
  5534                           
  5535                           ; 1 bytes @ 0x2F
  5536  000030                     	ds	1
  5537  000031                     i2___ftmul@f3_as_product:
  5538                           	opt stack 0
  5539                           
  5540                           ; 3 bytes @ 0x30
  5541  000031                     	ds	3
  5542  000034                     i2___ftmul@cntr:
  5543                           	opt stack 0
  5544                           
  5545                           ; 1 bytes @ 0x33
  5546  000034                     	ds	1
  5547  000035                     i2___ftmul@sign:
  5548                           	opt stack 0
  5549                           
  5550                           ; 1 bytes @ 0x34
  5551  000035                     	ds	1
  5552  000036                     ?i2_fround:
  5553                           	opt stack 0
  5554  000036                     ?i2_scale:
  5555                           	opt stack 0
  5556                           
  5557                           ; 3 bytes @ 0x35
  5558  000036                     	ds	3
  5559  000039                     i2_fround$3346:
  5560                           	opt stack 0
  5561  000039                     i2_scale$3347:
  5562                           	opt stack 0
  5563                           
  5564                           ; 3 bytes @ 0x38
  5565  000039                     	ds	3
  5566  00003C                     i2scale@scl:
  5567                           	opt stack 0
  5568  00003C                     i2_fround$3345:
  5569                           	opt stack 0
  5570                           
  5571                           ; 3 bytes @ 0x3B
  5572  00003C                     	ds	1
  5573  00003D                     ?i2___fttol:
  5574                           	opt stack 0
  5575  00003D                     i2___fttol@f1:
  5576                           	opt stack 0
  5577                           
  5578                           ; 3 bytes @ 0x3C
  5579  00003D                     	ds	2
  5580  00003F                     i2fround@prec:
  5581                           	opt stack 0
  5582                           
  5583                           ; 1 bytes @ 0x3E
  5584  00003F                     	ds	1
  5585  000040                     ?i2___ftadd:
  5586                           	opt stack 0
  5587  000040                     i2___ftadd@f1:
  5588                           	opt stack 0
  5589                           
  5590                           ; 3 bytes @ 0x3F
  5591  000040                     	ds	1
  5592  000041                     ??i2___fttol:
  5593                           
  5594                           ; 1 bytes @ 0x40
  5595  000041                     	ds	2
  5596  000043                     i2___ftadd@f2:
  5597                           	opt stack 0
  5598                           
  5599                           ; 3 bytes @ 0x42
  5600  000043                     	ds	3
  5601  000046                     ??i2___ftadd:
  5602  000046                     i2___fttol@sign1:
  5603                           	opt stack 0
  5604                           
  5605                           ; 1 bytes @ 0x45
  5606  000046                     	ds	1
  5607  000047                     i2___fttol@lval:
  5608                           	opt stack 0
  5609                           
  5610                           ; 4 bytes @ 0x46
  5611  000047                     	ds	2
  5612  000049                     i2___ftadd@sign:
  5613                           	opt stack 0
  5614                           
  5615                           ; 1 bytes @ 0x48
  5616  000049                     	ds	1
  5617  00004A                     i2___ftadd@exp2:
  5618                           	opt stack 0
  5619                           
  5620                           ; 1 bytes @ 0x49
  5621  00004A                     	ds	1
  5622  00004B                     i2___ftadd@exp1:
  5623                           	opt stack 0
  5624  00004B                     i2___fttol@exp1:
  5625                           	opt stack 0
  5626                           
  5627                           ; 1 bytes @ 0x4A
  5628  00004B                     	ds	1
  5629  00004C                     ?_eval_poly:
  5630                           	opt stack 0
  5631  00004C                     ?___altoft:
  5632                           	opt stack 0
  5633  00004C                     eval_poly@x:
  5634                           	opt stack 0
  5635  00004C                     ___altoft@c:
  5636                           	opt stack 0
  5637                           
  5638                           ; 4 bytes @ 0x4B
  5639  00004C                     	ds	3
  5640  00004F                     eval_poly@d:
  5641                           	opt stack 0
  5642                           
  5643                           ; 2 bytes @ 0x4E
  5644  00004F                     	ds	1
  5645  000050                     ??___altoft:
  5646                           
  5647                           ; 1 bytes @ 0x4F
  5648  000050                     	ds	1
  5649  000051                     eval_poly@n:
  5650                           	opt stack 0
  5651                           
  5652                           ; 2 bytes @ 0x50
  5653  000051                     	ds	2
  5654  000053                     ??_eval_poly:
  5655                           
  5656                           ; 1 bytes @ 0x52
  5657  000053                     	ds	1
  5658  000054                     ___altoft@exp:
  5659                           	opt stack 0
  5660                           
  5661                           ; 1 bytes @ 0x53
  5662  000054                     	ds	1
  5663  000055                     ___altoft@sign:
  5664                           	opt stack 0
  5665  000055                     eval_poly@res:
  5666                           	opt stack 0
  5667                           
  5668                           ; 3 bytes @ 0x54
  5669  000055                     	ds	1
  5670  000056                     ?_floor:
  5671                           	opt stack 0
  5672  000056                     floor@x:
  5673                           	opt stack 0
  5674                           
  5675                           ; 3 bytes @ 0x55
  5676  000056                     	ds	2
  5677  000058                     ?_atan:
  5678                           	opt stack 0
  5679  000058                     atan@f:
  5680                           	opt stack 0
  5681                           
  5682                           ; 3 bytes @ 0x57
  5683  000058                     	ds	1
  5684  000059                     floor@i:
  5685                           	opt stack 0
  5686                           
  5687                           ; 3 bytes @ 0x58
  5688  000059                     	ds	2
  5689  00005B                     
  5690                           ; 1 bytes @ 0x5A
  5691  00005B                     	ds	1
  5692  00005C                     floor@expon:
  5693                           	opt stack 0
  5694                           
  5695                           ; 2 bytes @ 0x5B
  5696  00005C                     	ds	2
  5697  00005E                     tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           postinc0	equ	0xFEE
  5702                           wreg	equ	0xFE8
  5703                           postdec1	equ	0xFE5
  5704                           fsr1h	equ	0xFE2
  5705                           fsr1l	equ	0xFE1
  5706                           
  5707                           ; 1 bytes @ 0x5D
  5708 ;;
  5709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5710 ;;
  5711 ;; *************** function _main *****************
  5712 ;; Defined at:
  5713 ;;		line 289 in file "main.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels required when called:   22
  5733 ;; This function calls:
  5734 ;;		_ADCC_SetADIInterruptHandler
  5735 ;;		_SYSTEM_Initialize
  5736 ;;		_TMR6_SetInterruptHandler
  5737 ;;		_TMR7_SetInterruptHandler
  5738 ;;		_terminal_clearTerminal
  5739 ;;		_terminal_ringBufferPull
  5740 ;;		_terminal_setCursorHome
  5741 ;;		_terminal_textAttributesReset
  5742 ;; This function is called by:
  5743 ;;		Startup code after reset
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text0
  5748  0157F0                     __ptext0:
  5749                           	opt stack 0
  5750  0157F0                     _main:
  5751                           	opt stack 9
  5752                           
  5753                           ;main.c: 294: _delay((unsigned long)((250)*(64000000/4000.0)));
  5754                           
  5755                           ;incstack = 0
  5756  0157F0  0E15               	movlw	21
  5757  0157F2  0101               	movlb	1	; () banked
  5758  0157F4  6FB8               	movwf	(??_main+1)& (0+255),b
  5759  0157F6  0E4B               	movlw	75
  5760  0157F8  6FB7               	movwf	??_main& (0+255),b
  5761  0157FA  0EBE               	movlw	190
  5762  0157FC                     u16407:
  5763  0157FC  2EE8               	decfsz	wreg,f,c
  5764  0157FE  D7FE               	bra	u16407
  5765  015800  2FB7               	decfsz	??_main& (0+255),f,b
  5766  015802  D7FC               	bra	u16407
  5767  015804  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  5768  015806  D7FA               	bra	u16407
  5769  015808  F000               	nop	
  5770                           
  5771                           ;main.c: 297: SYSTEM_Initialize();
  5772  01580A  EC04  F0B1         	call	_SYSTEM_Initialize	;wreg free
  5773                           
  5774                           ;main.c: 300: LATGbits.LATG0 = 0;
  5775  01580E  907F               	bcf	3967,0,c	;volatile
  5776                           
  5777                           ;main.c: 301: LATGbits.LATG1 = 0;
  5778  015810  927F               	bcf	3967,1,c	;volatile
  5779                           
  5780                           ;main.c: 302: load_enable = 0;
  5781  015812  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  5782                           
  5783                           ;main.c: 305: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  5784  015814  0E58               	movlw	low _heartbeatTimerCallback
  5785  015816  0101               	movlb	1	; () banked
  5786  015818  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  5787  01581A  0E60               	movlw	high _heartbeatTimerCallback
  5788  01581C  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5789  01581E  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  5790  015820  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5791  015822  EC45  F0B2         	call	_TMR6_SetInterruptHandler	;wreg free
  5792                           
  5793                           ;main.c: 308: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  5794  015826  0E64               	movlw	low _ADC_postProcessingCallback
  5795  015828  0101               	movlb	1	; () banked
  5796  01582A  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  5797  01582C  0E1D               	movlw	high _ADC_postProcessingCallback
  5798  01582E  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  5799  015830  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  5800  015832  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  5801  015834  EC61  F0B2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  5802                           
  5803                           ;main.c: 311: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  5804  015838  0E48               	movlw	low _acquisitionTimerCallback
  5805  01583A  0101               	movlb	1	; () banked
  5806  01583C  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  5807  01583E  0E5B               	movlw	high _acquisitionTimerCallback
  5808  015840  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5809  015842  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  5810  015844  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5811  015846  EC3E  F0B2         	call	_TMR7_SetInterruptHandler	;wreg free
  5812                           
  5813                           ;main.c: 314: (INTCONbits.GIEH = 1);
  5814  01584A  8EF2               	bsf	intcon,7,c	;volatile
  5815                           
  5816                           ;main.c: 317: (INTCONbits.GIEL = 1);
  5817  01584C  8CF2               	bsf	intcon,6,c	;volatile
  5818                           
  5819                           ;main.c: 321: terminal_clearTerminal();
  5820  01584E  EC28  F0B2         	call	_terminal_clearTerminal	;wreg free
  5821                           
  5822                           ;main.c: 322: terminal_setCursorHome();
  5823  015852  EC18  F0B2         	call	_terminal_setCursorHome	;wreg free
  5824                           
  5825                           ;main.c: 323: terminal_textAttributesReset();
  5826  015856  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  5827  01585A                     
  5828                           ;main.c: 327: {
  5829                           ;main.c: 330: if (eusart2RxStringReady) {
  5830  01585A  0100               	movlb	0	; () banked
  5831  01585C  A1FD               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5832  01585E  D7FD               	goto	l861
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;main.c: 332: terminal_ringBufferPull();
  5836  015860  ECF6  F0A2         	call	_terminal_ringBufferPull	;wreg free
  5837  015864  D7FA               	goto	l861
  5838  015866                     __end_of_main:
  5839                           	opt stack 0
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           intcon	equ	0xFF2
  5845                           postinc0	equ	0xFEE
  5846                           wreg	equ	0xFE8
  5847                           postdec1	equ	0xFE5
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           
  5851 ;; *************** function _terminal_setCursorHome *****************
  5852 ;; Defined at:
  5853 ;;		line 85 in file "ring_buffer_interface.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:   18
  5874 ;; This function calls:
  5875 ;;		_printf
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text1
  5882  016430                     __ptext1:
  5883                           	opt stack 0
  5884  016430                     _terminal_setCursorHome:
  5885                           	opt stack 12
  5886                           
  5887                           ;ring_buffer_interface.c: 86: printf("\033[H");
  5888                           
  5889                           ;incstack = 0
  5890  016430  0EB6               	movlw	low STR_3
  5891  016432  0101               	movlb	1	; () banked
  5892  016434  6F64               	movwf	printf@f& (0+255),b
  5893  016436  0EFF               	movlw	high STR_3
  5894  016438  6F65               	movwf	(printf@f+1)& (0+255),b
  5895  01643A  EC00  F080         	call	_printf	;wreg free
  5896  01643E  0012               	return		;funcret
  5897  016440                     __end_of_terminal_setCursorHome:
  5898                           	opt stack 0
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           intcon	equ	0xFF2
  5904                           postinc0	equ	0xFEE
  5905                           wreg	equ	0xFE8
  5906                           postdec1	equ	0xFE5
  5907                           fsr1h	equ	0xFE2
  5908                           fsr1l	equ	0xFE1
  5909                           
  5910 ;; *************** function _terminal_ringBufferPull *****************
  5911 ;; Defined at:
  5912 ;;		line 12 in file "ring_buffer_interface.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  index           2  179[BANK1 ] int 
  5917 ;;  index           2  181[BANK1 ] int 
  5918 ;;  charNumber      2  177[BANK1 ] int 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5930 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5931 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5932 ;;Total ram usage:        9 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:   21
  5935 ;; This function calls:
  5936 ;;		_EUSART2_Read
  5937 ;;		_ringBufferLUT
  5938 ;;		_strlen
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text2
  5945  0145EC                     __ptext2:
  5946                           	opt stack 0
  5947  0145EC                     _terminal_ringBufferPull:
  5948                           	opt stack 9
  5949                           
  5950                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  5951                           
  5952                           ;incstack = 0
  5953  0145EC  C1DA  F1B1         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  5954  0145F0  0101               	movlb	1	; () banked
  5955  0145F2  6BB2               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  5956                           
  5957                           ; BSR set to: 1
  5958                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  5959  0145F4  0E00               	movlw	0
  5960  0145F6  6FB6               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  5961  0145F8  0E00               	movlw	0
  5962  0145FA  6FB5               	movwf	terminal_ringBufferPull@index& (0+255),b
  5963  0145FC                     l10524:
  5964                           
  5965                           ; BSR set to: 1
  5966  0145FC  BFB6               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  5967  0145FE  D006               	goto	l900
  5968  014600  51B6               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5969  014602  E10F               	bnz	l10534
  5970  014604  0E40               	movlw	64
  5971  014606  5DB5               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  5972  014608  B0D8               	btfsc	status,0,c
  5973  01460A  D00B               	goto	u12590
  5974  01460C                     l900:
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  5978                           
  5979                           ; BSR set to: 1
  5980  01460C  0EC0               	movlw	low _line
  5981  01460E  25B5               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  5982  014610  6ED9               	movwf	fsr2l,c
  5983  014612  0E02               	movlw	high _line
  5984  014614  21B6               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5985  014616  6EDA               	movwf	fsr2h,c
  5986  014618  0E00               	movlw	0
  5987  01461A  6EDF               	movwf	indf2,c
  5988                           
  5989                           ; BSR set to: 1
  5990  01461C  4BB5               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  5991  01461E  2BB6               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  5992  014620  D7ED               	goto	l10524
  5993  014622                     u12590:
  5994  014622                     l10534:
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;ring_buffer_interface.c: 21: }
  5998                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  5999  014622  0E00               	movlw	0
  6000  014624  6FB4               	movwf	(terminal_ringBufferPull@index_1978+1)& (0+255),b
  6001  014626  0E00               	movlw	0
  6002  014628  6FB3               	movwf	terminal_ringBufferPull@index_1978& (0+255),b
  6003  01462A  D00E               	goto	l902
  6004  01462C                     
  6005                           ; BSR set to: 1
  6006                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  6007                           
  6008                           ; BSR set to: 1
  6009  01462C  ECC8  F0AF         	call	_EUSART2_Read	;wreg free
  6010  014630  0101               	movlb	1	; () banked
  6011  014632  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6012  014634  0EC0               	movlw	low _line
  6013  014636  25B3               	addwf	terminal_ringBufferPull@index_1978& (0+255),w,b
  6014  014638  6ED9               	movwf	fsr2l,c
  6015  01463A  0E02               	movlw	high _line
  6016  01463C  21B4               	addwfc	(terminal_ringBufferPull@index_1978+1)& (0+255),w,b
  6017  01463E  6EDA               	movwf	fsr2h,c
  6018  014640  C1AE  FFDF         	movff	??_terminal_ringBufferPull,indf2
  6019                           
  6020                           ; BSR set to: 1
  6021  014644  4BB3               	infsnz	terminal_ringBufferPull@index_1978& (0+255),f,b
  6022  014646  2BB4               	incf	(terminal_ringBufferPull@index_1978+1)& (0+255),f,b
  6023  014648                     l902:
  6024                           
  6025                           ; BSR set to: 1
  6026                           
  6027                           ; BSR set to: 1
  6028  014648  51B1               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  6029  01464A  5DB3               	subwf	terminal_ringBufferPull@index_1978& (0+255),w,b
  6030  01464C  51B4               	movf	(terminal_ringBufferPull@index_1978+1)& (0+255),w,b
  6031  01464E  0A80               	xorlw	128
  6032  014650  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6033  014652  51B2               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  6034  014654  0A80               	xorlw	128
  6035  014656  59AE               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  6036  014658  A0D8               	btfss	status,0,c
  6037  01465A  D7E8               	goto	l903
  6038                           
  6039                           ; BSR set to: 1
  6040                           ;ring_buffer_interface.c: 28: }
  6041                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  6042  01465C  C0EB  F1DB         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  6043                           
  6044                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  6045                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  6046  014660  D017               	goto	l905
  6047  014662                     
  6048                           ; BSR set to: 1
  6049                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  6050                           
  6051                           ; BSR set to: 1
  6052  014662  0EFF               	movlw	255
  6053  014664  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6054  014666  0EFF               	movlw	255
  6055  014668  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  6056  01466A  0EC0               	movlw	low _line
  6057  01466C  6F17               	movwf	strlen@s& (0+255),b
  6058  01466E  0E02               	movlw	high _line
  6059  014670  6F18               	movwf	(strlen@s+1)& (0+255),b
  6060  014672  EC90  F0AE         	call	_strlen	;wreg free
  6061  014676  0101               	movlb	1	; () banked
  6062  014678  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  6063  01467A  2717               	addwf	?_strlen& (0+255),f,b
  6064  01467C  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  6065  01467E  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  6066  014680  0EC0               	movlw	low _line
  6067  014682  2517               	addwf	?_strlen& (0+255),w,b
  6068  014684  6ED9               	movwf	fsr2l,c
  6069  014686  0E02               	movlw	high _line
  6070  014688  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  6071  01468A  6EDA               	movwf	fsr2h,c
  6072  01468C  0E00               	movlw	0
  6073  01468E  6EDF               	movwf	indf2,c
  6074  014690                     l905:
  6075                           
  6076                           ; BSR set to: 1
  6077  014690  0EFF               	movlw	255
  6078  014692  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6079  014694  0EFF               	movlw	255
  6080  014696  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  6081  014698  0EC0               	movlw	low _line
  6082  01469A  6F17               	movwf	strlen@s& (0+255),b
  6083  01469C  0E02               	movlw	high _line
  6084  01469E  6F18               	movwf	(strlen@s+1)& (0+255),b
  6085  0146A0  EC90  F0AE         	call	_strlen	;wreg free
  6086  0146A4  0101               	movlb	1	; () banked
  6087  0146A6  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  6088  0146A8  2717               	addwf	?_strlen& (0+255),f,b
  6089  0146AA  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  6090  0146AC  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  6091  0146AE  0EC0               	movlw	low _line
  6092  0146B0  2517               	addwf	?_strlen& (0+255),w,b
  6093  0146B2  6ED9               	movwf	fsr2l,c
  6094  0146B4  0E02               	movlw	high _line
  6095  0146B6  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  6096  0146B8  6EDA               	movwf	fsr2h,c
  6097  0146BA  0E0A               	movlw	10
  6098  0146BC  18DE               	xorwf	postinc2,w,c
  6099  0146BE  B4D8               	btfsc	status,2,c
  6100  0146C0  D7D0               	goto	l906
  6101                           
  6102                           ; BSR set to: 1
  6103  0146C2  0EFF               	movlw	255
  6104  0146C4  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6105  0146C6  0EFF               	movlw	255
  6106  0146C8  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  6107  0146CA  0EC0               	movlw	low _line
  6108  0146CC  6F17               	movwf	strlen@s& (0+255),b
  6109  0146CE  0E02               	movlw	high _line
  6110  0146D0  6F18               	movwf	(strlen@s+1)& (0+255),b
  6111  0146D2  EC90  F0AE         	call	_strlen	;wreg free
  6112  0146D6  0101               	movlb	1	; () banked
  6113  0146D8  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  6114  0146DA  2717               	addwf	?_strlen& (0+255),f,b
  6115  0146DC  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  6116  0146DE  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  6117  0146E0  0EC0               	movlw	low _line
  6118  0146E2  2517               	addwf	?_strlen& (0+255),w,b
  6119  0146E4  6ED9               	movwf	fsr2l,c
  6120  0146E6  0E02               	movlw	high _line
  6121  0146E8  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  6122  0146EA  6EDA               	movwf	fsr2h,c
  6123  0146EC  0E0D               	movlw	13
  6124  0146EE  18DE               	xorwf	postinc2,w,c
  6125  0146F0  B4D8               	btfsc	status,2,c
  6126  0146F2  D7B7               	goto	l906
  6127                           
  6128                           ; BSR set to: 1
  6129                           ;ring_buffer_interface.c: 40: }
  6130                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  6131  0146F4  0100               	movlb	0	; () banked
  6132  0146F6  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  6136  0146F8  0EC0               	movlw	low _line
  6137  0146FA  0101               	movlb	1	; () banked
  6138  0146FC  6FA0               	movwf	ringBufferLUT@line& (0+255),b
  6139  0146FE  0E02               	movlw	high _line
  6140  014700  6FA1               	movwf	(ringBufferLUT@line+1)& (0+255),b
  6141  014702  EC2B  F08A         	call	_ringBufferLUT	;wreg free
  6142  014706  0012               	return		;funcret
  6143  014708                     __end_of_terminal_ringBufferPull:
  6144                           	opt stack 0
  6145                           tblptru	equ	0xFF8
  6146                           tblptrh	equ	0xFF7
  6147                           tblptrl	equ	0xFF6
  6148                           tablat	equ	0xFF5
  6149                           intcon	equ	0xFF2
  6150                           postinc0	equ	0xFEE
  6151                           wreg	equ	0xFE8
  6152                           postdec1	equ	0xFE5
  6153                           fsr1h	equ	0xFE2
  6154                           fsr1l	equ	0xFE1
  6155                           indf2	equ	0xFDF
  6156                           postinc2	equ	0xFDE
  6157                           fsr2h	equ	0xFDA
  6158                           fsr2l	equ	0xFD9
  6159                           status	equ	0xFD8
  6160                           
  6161 ;; *************** function _ringBufferLUT *****************
  6162 ;; Defined at:
  6163 ;;		line 34 in file "ring_buffer_LUT.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  line            2  160[BANK1 ] PTR unsigned char 
  6166 ;;		 -> line(64), 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  angle_degree    3  164[BANK1 ] PTR unsigned char 
  6169 ;;  index           2  170[BANK1 ] int 
  6170 ;;  arg_buff        3  167[BANK1 ] unsigned char [3]
  6171 ;;  percentage      2  172[BANK1 ] int 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6181 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;Total ram usage:       14 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:   20
  6188 ;; This function calls:
  6189 ;;		___awtoft
  6190 ;;		___ftadd
  6191 ;;		___ftdiv
  6192 ;;		___ftmul
  6193 ;;		___ftneg
  6194 ;;		___wmul
  6195 ;;		_atoi
  6196 ;;		_printf
  6197 ;;		_strcmp
  6198 ;;		_strstr
  6199 ;;		_terminal_printNewline
  6200 ;;		_terminal_textAttributes
  6201 ;;		_terminal_textAttributesReset
  6202 ;; This function is called by:
  6203 ;;		_terminal_ringBufferPull
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text3
  6208  011456                     __ptext3:
  6209                           	opt stack 0
  6210  011456                     _ringBufferLUT:
  6211                           	opt stack 9
  6212                           
  6213                           ;ring_buffer_LUT.c: 40: if((0 == strcmp(line, "Reset"))) {
  6214                           
  6215                           ;incstack = 0
  6216  011456  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6217  01145A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6218  01145E  0EA2               	movlw	low STR_41
  6219  011460  0101               	movlb	1	; () banked
  6220  011462  6F19               	movwf	strcmp@s2& (0+255),b
  6221  011464  0EFF               	movlw	high STR_41
  6222  011466  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6223  011468  ECE7  F0AE         	call	_strcmp	;wreg free
  6224  01146C  0101               	movlb	1	; () banked
  6225  01146E  5117               	movf	?_strcmp& (0+255),w,b
  6226  011470  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6227  011472  A4D8               	btfss	status,2,c
  6228  011474  D00F               	goto	l1019
  6229                           
  6230                           ; BSR set to: 1
  6231                           ;ring_buffer_LUT.c: 43: printf("\033[2J");
  6232  011476  0EAD               	movlw	low STR_2
  6233  011478  6F64               	movwf	printf@f& (0+255),b
  6234  01147A  0EFF               	movlw	high STR_2
  6235  01147C  6F65               	movwf	(printf@f+1)& (0+255),b
  6236  01147E  EC00  F080         	call	_printf	;wreg free
  6237                           
  6238                           ;ring_buffer_LUT.c: 46: printf("\033[H");
  6239  011482  0EB6               	movlw	low STR_3
  6240  011484  0101               	movlb	1	; () banked
  6241  011486  6F64               	movwf	printf@f& (0+255),b
  6242  011488  0EFF               	movlw	high STR_3
  6243  01148A  6F65               	movwf	(printf@f+1)& (0+255),b
  6244  01148C  EC00  F080         	call	_printf	;wreg free
  6245  011490  00FF               	reset		;# 
  6246                           
  6247                           ;ring_buffer_LUT.c: 51: }
  6248  011492  0012               	return	
  6249  011494                     l1019:
  6250                           
  6251                           ;ring_buffer_LUT.c: 54: else if((0 == strcmp(line, "Clear"))) {
  6252  011494  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6253  011498  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6254  01149C  0E9C               	movlw	low STR_44
  6255  01149E  0101               	movlb	1	; () banked
  6256  0114A0  6F19               	movwf	strcmp@s2& (0+255),b
  6257  0114A2  0EFF               	movlw	high STR_44
  6258  0114A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6259  0114A6  ECE7  F0AE         	call	_strcmp	;wreg free
  6260  0114AA  0101               	movlb	1	; () banked
  6261  0114AC  5117               	movf	?_strcmp& (0+255),w,b
  6262  0114AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6263  0114B0  A4D8               	btfss	status,2,c
  6264  0114B2  D00E               	goto	l1021
  6265                           
  6266                           ; BSR set to: 1
  6267                           ;ring_buffer_LUT.c: 57: printf("\033[2J");
  6268  0114B4  0EAD               	movlw	low STR_2
  6269  0114B6  6F64               	movwf	printf@f& (0+255),b
  6270  0114B8  0EFF               	movlw	high STR_2
  6271  0114BA  6F65               	movwf	(printf@f+1)& (0+255),b
  6272  0114BC  EC00  F080         	call	_printf	;wreg free
  6273                           
  6274                           ;ring_buffer_LUT.c: 60: printf("\033[H");
  6275  0114C0  0EB6               	movlw	low STR_3
  6276  0114C2  0101               	movlb	1	; () banked
  6277  0114C4  6F64               	movwf	printf@f& (0+255),b
  6278  0114C6  0EFF               	movlw	high STR_3
  6279  0114C8  6F65               	movwf	(printf@f+1)& (0+255),b
  6280  0114CA  EC00  F080         	call	_printf	;wreg free
  6281                           
  6282                           ;ring_buffer_LUT.c: 62: }
  6283  0114CE  0012               	return	
  6284  0114D0                     l1021:
  6285                           
  6286                           ;ring_buffer_LUT.c: 65: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  6287  0114D0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6288  0114D4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6289  0114D8  0E96               	movlw	low STR_47
  6290  0114DA  0101               	movlb	1	; () banked
  6291  0114DC  6F19               	movwf	strcmp@s2& (0+255),b
  6292  0114DE  0EFF               	movlw	high STR_47
  6293  0114E0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6294  0114E2  ECE7  F0AE         	call	_strcmp	;wreg free
  6295  0114E6  0101               	movlb	1	; () banked
  6296  0114E8  5117               	movf	?_strcmp& (0+255),w,b
  6297  0114EA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6298  0114EC  B4D8               	btfsc	status,2,c
  6299  0114EE  D00F               	goto	u11720
  6300                           
  6301                           ; BSR set to: 1
  6302  0114F0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6303  0114F4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6304  0114F8  0EB2               	movlw	low STR_48
  6305  0114FA  6F19               	movwf	strcmp@s2& (0+255),b
  6306  0114FC  0EFF               	movlw	high STR_48
  6307  0114FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6308  011500  ECE7  F0AE         	call	_strcmp	;wreg free
  6309  011504  0101               	movlb	1	; () banked
  6310  011506  5117               	movf	?_strcmp& (0+255),w,b
  6311  011508  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6312  01150A  A4D8               	btfss	status,2,c
  6313  01150C  D01D               	goto	l1023
  6314  01150E                     u11720:
  6315                           
  6316                           ; BSR set to: 1
  6317                           ;ring_buffer_LUT.c: 68: terminal_printNewline();
  6318                           
  6319                           ; BSR set to: 1
  6320  01150E  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6321                           
  6322                           ;ring_buffer_LUT.c: 70: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6323  011512  0E00               	movlw	0
  6324  011514  0101               	movlb	1	; () banked
  6325  011516  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6326  011518  0E00               	movlw	0
  6327  01151A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6328  01151C  0E02               	movlw	2
  6329  01151E  ECC3  F095         	call	_terminal_textAttributes
  6330                           
  6331                           ;ring_buffer_LUT.c: 72: printf("AC Power Meter\n\r");
  6332  011522  0EE6               	movlw	low STR_49
  6333  011524  0101               	movlb	1	; () banked
  6334  011526  6F64               	movwf	printf@f& (0+255),b
  6335  011528  0EFE               	movlw	high STR_49
  6336  01152A  6F65               	movwf	(printf@f+1)& (0+255),b
  6337  01152C  EC00  F080         	call	_printf	;wreg free
  6338                           
  6339                           ;ring_buffer_LUT.c: 73: printf("Marquette University ELEN 3035 Final Project\n\r");
  6340  011530  0EC5               	movlw	low STR_50
  6341  011532  0101               	movlb	1	; () banked
  6342  011534  6F64               	movwf	printf@f& (0+255),b
  6343  011536  0EFB               	movlw	high STR_50
  6344  011538  6F65               	movwf	(printf@f+1)& (0+255),b
  6345  01153A  EC00  F080         	call	_printf	;wreg free
  6346                           
  6347                           ;ring_buffer_LUT.c: 75: terminal_textAttributesReset();
  6348  01153E  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6349                           
  6350                           ;ring_buffer_LUT.c: 77: terminal_printNewline();
  6351  011542  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6352                           
  6353                           ;ring_buffer_LUT.c: 79: }
  6354  011546  0012               	return	
  6355  011548                     l1023:
  6356                           
  6357                           ;ring_buffer_LUT.c: 82: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  6358  011548  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6359  01154C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6360  011550  0EF7               	movlw	low STR_51
  6361  011552  0101               	movlb	1	; () banked
  6362  011554  6F19               	movwf	strcmp@s2& (0+255),b
  6363  011556  0EFE               	movlw	high STR_51
  6364  011558  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6365  01155A  ECE7  F0AE         	call	_strcmp	;wreg free
  6366  01155E  0101               	movlb	1	; () banked
  6367  011560  5117               	movf	?_strcmp& (0+255),w,b
  6368  011562  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6369  011564  A4D8               	btfss	status,2,c
  6370  011566  D01C               	goto	l1027
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;ring_buffer_LUT.c: 85: terminal_printNewline();
  6374  011568  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6375                           
  6376                           ;ring_buffer_LUT.c: 87: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6377  01156C  0E00               	movlw	0
  6378  01156E  0101               	movlb	1	; () banked
  6379  011570  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6380  011572  0E00               	movlw	0
  6381  011574  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6382  011576  0E06               	movlw	6
  6383  011578  ECC3  F095         	call	_terminal_textAttributes
  6384                           
  6385                           ;ring_buffer_LUT.c: 88: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  6386  01157C  0E0E               	movlw	low STR_52
  6387  01157E  0101               	movlb	1	; () banked
  6388  011580  6F64               	movwf	printf@f& (0+255),b
  6389  011582  0EFD               	movlw	high STR_52
  6390  011584  6F65               	movwf	(printf@f+1)& (0+255),b
  6391  011586  C0D7  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  6392  01158A  C0D8  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  6393  01158E  C0D9  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  6394  011592  EC00  F080         	call	_printf	;wreg free
  6395                           
  6396                           ;ring_buffer_LUT.c: 90: terminal_textAttributesReset();
  6397  011596  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6398                           
  6399                           ;ring_buffer_LUT.c: 92: terminal_printNewline();
  6400  01159A  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6401                           
  6402                           ;ring_buffer_LUT.c: 95: }
  6403  01159E  0012               	return	
  6404  0115A0                     l1027:
  6405                           
  6406                           ;ring_buffer_LUT.c: 98: else if((0 == strcmp(line, "Measure POS12?"))) {
  6407  0115A0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6408  0115A4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6409  0115A8  0E27               	movlw	low STR_53
  6410  0115AA  0101               	movlb	1	; () banked
  6411  0115AC  6F19               	movwf	strcmp@s2& (0+255),b
  6412  0115AE  0EFF               	movlw	high STR_53
  6413  0115B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6414  0115B2  ECE7  F0AE         	call	_strcmp	;wreg free
  6415  0115B6  0101               	movlb	1	; () banked
  6416  0115B8  5117               	movf	?_strcmp& (0+255),w,b
  6417  0115BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6418  0115BC  A4D8               	btfss	status,2,c
  6419  0115BE  D01C               	goto	l1029
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;ring_buffer_LUT.c: 101: terminal_printNewline();
  6423  0115C0  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6424                           
  6425                           ;ring_buffer_LUT.c: 103: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6426  0115C4  0E00               	movlw	0
  6427  0115C6  0101               	movlb	1	; () banked
  6428  0115C8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6429  0115CA  0E00               	movlw	0
  6430  0115CC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6431  0115CE  0E06               	movlw	6
  6432  0115D0  ECC3  F095         	call	_terminal_textAttributes
  6433                           
  6434                           ;ring_buffer_LUT.c: 104: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  6435  0115D4  0E97               	movlw	low STR_54
  6436  0115D6  0101               	movlb	1	; () banked
  6437  0115D8  6F64               	movwf	printf@f& (0+255),b
  6438  0115DA  0EFD               	movlw	high STR_54
  6439  0115DC  6F65               	movwf	(printf@f+1)& (0+255),b
  6440  0115DE  C1C7  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  6441  0115E2  C1C8  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  6442  0115E6  C1C9  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  6443  0115EA  EC00  F080         	call	_printf	;wreg free
  6444                           
  6445                           ;ring_buffer_LUT.c: 106: terminal_textAttributesReset();
  6446  0115EE  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6447                           
  6448                           ;ring_buffer_LUT.c: 108: terminal_printNewline();
  6449  0115F2  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6450                           
  6451                           ;ring_buffer_LUT.c: 111: }
  6452  0115F6  0012               	return	
  6453  0115F8                     l1029:
  6454                           
  6455                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  6456  0115F8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6457  0115FC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6458  011600  0EC3               	movlw	low STR_55
  6459  011602  0101               	movlb	1	; () banked
  6460  011604  6F19               	movwf	strcmp@s2& (0+255),b
  6461  011606  0EFE               	movlw	high STR_55
  6462  011608  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6463  01160A  ECE7  F0AE         	call	_strcmp	;wreg free
  6464  01160E  0101               	movlb	1	; () banked
  6465  011610  5117               	movf	?_strcmp& (0+255),w,b
  6466  011612  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6467  011614  A4D8               	btfss	status,2,c
  6468  011616  D01C               	goto	l1031
  6469                           
  6470                           ; BSR set to: 1
  6471                           ;ring_buffer_LUT.c: 117: terminal_printNewline();
  6472  011618  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6473                           
  6474                           ;ring_buffer_LUT.c: 119: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6475  01161C  0E00               	movlw	0
  6476  01161E  0101               	movlb	1	; () banked
  6477  011620  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6478  011622  0E00               	movlw	0
  6479  011624  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6480  011626  0E06               	movlw	6
  6481  011628  ECC3  F095         	call	_terminal_textAttributes
  6482                           
  6483                           ;ring_buffer_LUT.c: 120: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  6484  01162C  0E31               	movlw	low STR_56
  6485  01162E  0101               	movlb	1	; () banked
  6486  011630  6F64               	movwf	printf@f& (0+255),b
  6487  011632  0EFD               	movlw	high STR_56
  6488  011634  6F65               	movwf	(printf@f+1)& (0+255),b
  6489  011636  C1C4  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  6490  01163A  C1C5  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  6491  01163E  C1C6  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  6492  011642  EC00  F080         	call	_printf	;wreg free
  6493                           
  6494                           ;ring_buffer_LUT.c: 122: terminal_textAttributesReset();
  6495  011646  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6496                           
  6497                           ;ring_buffer_LUT.c: 124: terminal_printNewline();
  6498  01164A  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6499                           
  6500                           ;ring_buffer_LUT.c: 127: }
  6501  01164E  0012               	return	
  6502  011650                     l1031:
  6503                           
  6504                           ;ring_buffer_LUT.c: 130: else if((0 == strcmp(line, "Measure FVR?"))) {
  6505  011650  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6506  011654  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6507  011658  0E70               	movlw	low STR_57
  6508  01165A  0101               	movlb	1	; () banked
  6509  01165C  6F19               	movwf	strcmp@s2& (0+255),b
  6510  01165E  0EFF               	movlw	high STR_57
  6511  011660  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6512  011662  ECE7  F0AE         	call	_strcmp	;wreg free
  6513  011666  0101               	movlb	1	; () banked
  6514  011668  5117               	movf	?_strcmp& (0+255),w,b
  6515  01166A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6516  01166C  A4D8               	btfss	status,2,c
  6517  01166E  D01C               	goto	l1033
  6518                           
  6519                           ; BSR set to: 1
  6520                           ;ring_buffer_LUT.c: 133: terminal_printNewline();
  6521  011670  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6522                           
  6523                           ;ring_buffer_LUT.c: 135: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6524  011674  0E00               	movlw	0
  6525  011676  0101               	movlb	1	; () banked
  6526  011678  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6527  01167A  0E00               	movlw	0
  6528  01167C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6529  01167E  0E06               	movlw	6
  6530  011680  ECC3  F095         	call	_terminal_textAttributes
  6531                           
  6532                           ;ring_buffer_LUT.c: 136: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  6533  011684  0E58               	movlw	low STR_58
  6534  011686  0101               	movlb	1	; () banked
  6535  011688  6F64               	movwf	printf@f& (0+255),b
  6536  01168A  0EFB               	movlw	high STR_58
  6537  01168C  6F65               	movwf	(printf@f+1)& (0+255),b
  6538  01168E  C0EC  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  6539  011692  C0ED  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  6540  011696  C0EE  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  6541  01169A  EC00  F080         	call	_printf	;wreg free
  6542                           
  6543                           ;ring_buffer_LUT.c: 138: terminal_textAttributesReset();
  6544  01169E  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6545                           
  6546                           ;ring_buffer_LUT.c: 140: terminal_printNewline();
  6547  0116A2  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6548                           
  6549                           ;ring_buffer_LUT.c: 143: }
  6550  0116A6  0012               	return	
  6551  0116A8                     l1033:
  6552                           
  6553                           ;ring_buffer_LUT.c: 146: else if((0 == strcmp(line, "Measure AVSS?"))) {
  6554  0116A8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6555  0116AC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6556  0116B0  0E54               	movlw	low STR_59
  6557  0116B2  0101               	movlb	1	; () banked
  6558  0116B4  6F19               	movwf	strcmp@s2& (0+255),b
  6559  0116B6  0EFF               	movlw	high STR_59
  6560  0116B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6561  0116BA  ECE7  F0AE         	call	_strcmp	;wreg free
  6562  0116BE  0101               	movlb	1	; () banked
  6563  0116C0  5117               	movf	?_strcmp& (0+255),w,b
  6564  0116C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6565  0116C4  A4D8               	btfss	status,2,c
  6566  0116C6  D01C               	goto	l1035
  6567                           
  6568                           ; BSR set to: 1
  6569                           ;ring_buffer_LUT.c: 149: terminal_printNewline();
  6570  0116C8  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6571                           
  6572                           ;ring_buffer_LUT.c: 151: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6573  0116CC  0E00               	movlw	0
  6574  0116CE  0101               	movlb	1	; () banked
  6575  0116D0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6576  0116D2  0E00               	movlw	0
  6577  0116D4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6578  0116D6  0E06               	movlw	6
  6579  0116D8  ECC3  F095         	call	_terminal_textAttributes
  6580                           
  6581                           ;ring_buffer_LUT.c: 152: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  6582  0116DC  0EC4               	movlw	low STR_60
  6583  0116DE  0101               	movlb	1	; () banked
  6584  0116E0  6F64               	movwf	printf@f& (0+255),b
  6585  0116E2  0EFC               	movlw	high STR_60
  6586  0116E4  6F65               	movwf	(printf@f+1)& (0+255),b
  6587  0116E6  C0DD  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  6588  0116EA  C0DE  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  6589  0116EE  C0DF  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  6590  0116F2  EC00  F080         	call	_printf	;wreg free
  6591                           
  6592                           ;ring_buffer_LUT.c: 154: terminal_textAttributesReset();
  6593  0116F6  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6594                           
  6595                           ;ring_buffer_LUT.c: 156: terminal_printNewline();
  6596  0116FA  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6597                           
  6598                           ;ring_buffer_LUT.c: 159: }
  6599  0116FE  0012               	return	
  6600  011700                     l1035:
  6601                           
  6602                           ;ring_buffer_LUT.c: 162: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  6603  011700  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6604  011704  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6605  011708  0E36               	movlw	low STR_61
  6606  01170A  0101               	movlb	1	; () banked
  6607  01170C  6F19               	movwf	strcmp@s2& (0+255),b
  6608  01170E  0EFE               	movlw	high STR_61
  6609  011710  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6610  011712  ECE7  F0AE         	call	_strcmp	;wreg free
  6611  011716  0101               	movlb	1	; () banked
  6612  011718  5117               	movf	?_strcmp& (0+255),w,b
  6613  01171A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6614  01171C  A4D8               	btfss	status,2,c
  6615  01171E  D01C               	goto	l1037
  6616                           
  6617                           ; BSR set to: 1
  6618                           ;ring_buffer_LUT.c: 165: terminal_printNewline();
  6619  011720  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6620                           
  6621                           ;ring_buffer_LUT.c: 167: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6622  011724  0E00               	movlw	0
  6623  011726  0101               	movlb	1	; () banked
  6624  011728  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6625  01172A  0E00               	movlw	0
  6626  01172C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6627  01172E  0E06               	movlw	6
  6628  011730  ECC3  F095         	call	_terminal_textAttributes
  6629                           
  6630                           ;ring_buffer_LUT.c: 168: printf("Measured Current is %.3f Amps\n\r", Imeas);
  6631  011734  0EDA               	movlw	low STR_62
  6632  011736  0101               	movlb	1	; () banked
  6633  011738  6F64               	movwf	printf@f& (0+255),b
  6634  01173A  0EFD               	movlw	high STR_62
  6635  01173C  6F65               	movwf	(printf@f+1)& (0+255),b
  6636  01173E  C0CE  F166         	movff	_Imeas,?_printf+2	;volatile
  6637  011742  C0CF  F167         	movff	_Imeas+1,?_printf+3	;volatile
  6638  011746  C0D0  F168         	movff	_Imeas+2,?_printf+4	;volatile
  6639  01174A  EC00  F080         	call	_printf	;wreg free
  6640                           
  6641                           ;ring_buffer_LUT.c: 170: terminal_textAttributesReset();
  6642  01174E  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6643                           
  6644                           ;ring_buffer_LUT.c: 172: terminal_printNewline();
  6645  011752  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6646                           
  6647                           ;ring_buffer_LUT.c: 174: }
  6648  011756  0012               	return	
  6649  011758                     l1037:
  6650                           
  6651                           ;ring_buffer_LUT.c: 177: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  6652  011758  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6653  01175C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6654  011760  0EAE               	movlw	low STR_63
  6655  011762  0101               	movlb	1	; () banked
  6656  011764  6F19               	movwf	strcmp@s2& (0+255),b
  6657  011766  0EFE               	movlw	high STR_63
  6658  011768  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6659  01176A  ECE7  F0AE         	call	_strcmp	;wreg free
  6660  01176E  0101               	movlb	1	; () banked
  6661  011770  5117               	movf	?_strcmp& (0+255),w,b
  6662  011772  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6663  011774  A4D8               	btfss	status,2,c
  6664  011776  D01C               	goto	l1039
  6665                           
  6666                           ; BSR set to: 1
  6667                           ;ring_buffer_LUT.c: 180: terminal_printNewline();
  6668  011778  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6669                           
  6670                           ;ring_buffer_LUT.c: 182: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6671  01177C  0E00               	movlw	0
  6672  01177E  0101               	movlb	1	; () banked
  6673  011780  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6674  011782  0E00               	movlw	0
  6675  011784  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6676  011786  0E06               	movlw	6
  6677  011788  ECC3  F095         	call	_terminal_textAttributes
  6678                           
  6679                           ;ring_buffer_LUT.c: 183: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  6680  01178C  0E53               	movlw	low STR_64
  6681  01178E  0101               	movlb	1	; () banked
  6682  011790  6F64               	movwf	printf@f& (0+255),b
  6683  011792  0EFD               	movlw	high STR_64
  6684  011794  6F65               	movwf	(printf@f+1)& (0+255),b
  6685  011796  C0CB  F166         	movff	_Irms,?_printf+2	;volatile
  6686  01179A  C0CC  F167         	movff	_Irms+1,?_printf+3	;volatile
  6687  01179E  C0CD  F168         	movff	_Irms+2,?_printf+4	;volatile
  6688  0117A2  EC00  F080         	call	_printf	;wreg free
  6689                           
  6690                           ;ring_buffer_LUT.c: 185: terminal_textAttributesReset();
  6691  0117A6  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6692                           
  6693                           ;ring_buffer_LUT.c: 187: terminal_printNewline();
  6694  0117AA  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6695                           
  6696                           ;ring_buffer_LUT.c: 189: }
  6697  0117AE  0012               	return	
  6698  0117B0                     l1039:
  6699                           
  6700                           ;ring_buffer_LUT.c: 192: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  6701  0117B0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6702  0117B4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6703  0117B8  0E99               	movlw	low STR_65
  6704  0117BA  0101               	movlb	1	; () banked
  6705  0117BC  6F19               	movwf	strcmp@s2& (0+255),b
  6706  0117BE  0EFE               	movlw	high STR_65
  6707  0117C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6708  0117C2  ECE7  F0AE         	call	_strcmp	;wreg free
  6709  0117C6  0101               	movlb	1	; () banked
  6710  0117C8  5117               	movf	?_strcmp& (0+255),w,b
  6711  0117CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6712  0117CC  A4D8               	btfss	status,2,c
  6713  0117CE  D01C               	goto	l1041
  6714                           
  6715                           ; BSR set to: 1
  6716                           ;ring_buffer_LUT.c: 195: terminal_printNewline();
  6717  0117D0  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6718                           
  6719                           ;ring_buffer_LUT.c: 197: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6720  0117D4  0E00               	movlw	0
  6721  0117D6  0101               	movlb	1	; () banked
  6722  0117D8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6723  0117DA  0E00               	movlw	0
  6724  0117DC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6725  0117DE  0E06               	movlw	6
  6726  0117E0  ECC3  F095         	call	_terminal_textAttributes
  6727                           
  6728                           ;ring_buffer_LUT.c: 198: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  6729  0117E4  0E75               	movlw	low STR_66
  6730  0117E6  0101               	movlb	1	; () banked
  6731  0117E8  6F64               	movwf	printf@f& (0+255),b
  6732  0117EA  0EFD               	movlw	high STR_66
  6733  0117EC  6F65               	movwf	(printf@f+1)& (0+255),b
  6734  0117EE  C0C8  F166         	movff	_Vrms,?_printf+2	;volatile
  6735  0117F2  C0C9  F167         	movff	_Vrms+1,?_printf+3	;volatile
  6736  0117F6  C0CA  F168         	movff	_Vrms+2,?_printf+4	;volatile
  6737  0117FA  EC00  F080         	call	_printf	;wreg free
  6738                           
  6739                           ;ring_buffer_LUT.c: 200: terminal_textAttributesReset();
  6740  0117FE  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6741                           
  6742                           ;ring_buffer_LUT.c: 202: terminal_printNewline();
  6743  011802  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6744                           
  6745                           ;ring_buffer_LUT.c: 204: }
  6746  011806  0012               	return	
  6747  011808                     l1041:
  6748                           
  6749                           ;ring_buffer_LUT.c: 207: else if ((0 == strcmp(line, "Measure Power?"))) {
  6750  011808  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6751  01180C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6752  011810  0E36               	movlw	low STR_67
  6753  011812  0101               	movlb	1	; () banked
  6754  011814  6F19               	movwf	strcmp@s2& (0+255),b
  6755  011816  0EFF               	movlw	high STR_67
  6756  011818  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6757  01181A  ECE7  F0AE         	call	_strcmp	;wreg free
  6758  01181E  0101               	movlb	1	; () banked
  6759  011820  5117               	movf	?_strcmp& (0+255),w,b
  6760  011822  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6761  011824  A4D8               	btfss	status,2,c
  6762  011826  D01C               	goto	l1043
  6763                           
  6764                           ; BSR set to: 1
  6765                           ;ring_buffer_LUT.c: 210: terminal_printNewline();
  6766  011828  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6767                           
  6768                           ;ring_buffer_LUT.c: 212: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6769  01182C  0E00               	movlw	0
  6770  01182E  0101               	movlb	1	; () banked
  6771  011830  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6772  011832  0E00               	movlw	0
  6773  011834  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6774  011836  0E06               	movlw	6
  6775  011838  ECC3  F095         	call	_terminal_textAttributes
  6776                           
  6777                           ;ring_buffer_LUT.c: 213: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  6778  01183C  0E20               	movlw	low STR_68
  6779  01183E  0101               	movlb	1	; () banked
  6780  011840  6F64               	movwf	printf@f& (0+255),b
  6781  011842  0EFB               	movlw	high STR_68
  6782  011844  6F65               	movwf	(printf@f+1)& (0+255),b
  6783  011846  C1C1  F166         	movff	_Avg_Power,?_printf+2	;volatile
  6784  01184A  C1C2  F167         	movff	_Avg_Power+1,?_printf+3	;volatile
  6785  01184E  C1C3  F168         	movff	_Avg_Power+2,?_printf+4	;volatile
  6786  011852  EC00  F080         	call	_printf	;wreg free
  6787                           
  6788                           ;ring_buffer_LUT.c: 215: terminal_textAttributesReset();
  6789  011856  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6790                           
  6791                           ;ring_buffer_LUT.c: 217: terminal_printNewline();
  6792  01185A  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6793                           
  6794                           ;ring_buffer_LUT.c: 219: }
  6795  01185E  0012               	return	
  6796  011860                     l1043:
  6797                           
  6798                           ;ring_buffer_LUT.c: 222: else if ((0 == strcmp(line, "Enable Dimming"))) {
  6799  011860  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6800  011864  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6801  011868  0E45               	movlw	low STR_69
  6802  01186A  0101               	movlb	1	; () banked
  6803  01186C  6F19               	movwf	strcmp@s2& (0+255),b
  6804  01186E  0EFF               	movlw	high STR_69
  6805  011870  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6806  011872  ECE7  F0AE         	call	_strcmp	;wreg free
  6807  011876  0101               	movlb	1	; () banked
  6808  011878  5117               	movf	?_strcmp& (0+255),w,b
  6809  01187A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6810  01187C  A4D8               	btfss	status,2,c
  6811  01187E  D017               	goto	l1045
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;ring_buffer_LUT.c: 225: LATGbits.LATG0 = 0;
  6815  011880  907F               	bcf	3967,0,c	;volatile
  6816                           
  6817                           ; BSR set to: 1
  6818                           ;ring_buffer_LUT.c: 228: terminal_printNewline();
  6819  011882  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6820                           
  6821                           ;ring_buffer_LUT.c: 230: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6822  011886  0E00               	movlw	0
  6823  011888  0101               	movlb	1	; () banked
  6824  01188A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6825  01188C  0E00               	movlw	0
  6826  01188E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6827  011890  0E06               	movlw	6
  6828  011892  ECC3  F095         	call	_terminal_textAttributes
  6829                           
  6830                           ;ring_buffer_LUT.c: 231: printf("TRIAC output dimming has been enabled\n\r");
  6831  011896  0E75               	movlw	low STR_70
  6832  011898  0101               	movlb	1	; () banked
  6833  01189A  6F64               	movwf	printf@f& (0+255),b
  6834  01189C  0EFC               	movlw	high STR_70
  6835  01189E  6F65               	movwf	(printf@f+1)& (0+255),b
  6836  0118A0  EC00  F080         	call	_printf	;wreg free
  6837                           
  6838                           ;ring_buffer_LUT.c: 233: terminal_textAttributesReset();
  6839  0118A4  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6840                           
  6841                           ;ring_buffer_LUT.c: 235: terminal_printNewline();
  6842  0118A8  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6843                           
  6844                           ;ring_buffer_LUT.c: 237: }
  6845  0118AC  0012               	return	
  6846  0118AE                     l1045:
  6847                           
  6848                           ;ring_buffer_LUT.c: 240: else if ((0 == strcmp(line, "Disable Dimming"))) {
  6849  0118AE  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6850  0118B2  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6851  0118B6  0E17               	movlw	low STR_71
  6852  0118B8  0101               	movlb	1	; () banked
  6853  0118BA  6F19               	movwf	strcmp@s2& (0+255),b
  6854  0118BC  0EFF               	movlw	high STR_71
  6855  0118BE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6856  0118C0  ECE7  F0AE         	call	_strcmp	;wreg free
  6857  0118C4  0101               	movlb	1	; () banked
  6858  0118C6  5117               	movf	?_strcmp& (0+255),w,b
  6859  0118C8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6860  0118CA  A4D8               	btfss	status,2,c
  6861  0118CC  D017               	goto	l1047
  6862                           
  6863                           ; BSR set to: 1
  6864                           ;ring_buffer_LUT.c: 243: LATGbits.LATG0 = 1;
  6865  0118CE  807F               	bsf	3967,0,c	;volatile
  6866                           
  6867                           ; BSR set to: 1
  6868                           ;ring_buffer_LUT.c: 246: terminal_printNewline();
  6869  0118D0  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6870                           
  6871                           ;ring_buffer_LUT.c: 248: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6872  0118D4  0E00               	movlw	0
  6873  0118D6  0101               	movlb	1	; () banked
  6874  0118D8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6875  0118DA  0E00               	movlw	0
  6876  0118DC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6877  0118DE  0E06               	movlw	6
  6878  0118E0  ECC3  F095         	call	_terminal_textAttributes
  6879                           
  6880                           ;ring_buffer_LUT.c: 249: printf("TRIAC output dimming has been disabled\n\r");
  6881  0118E4  0E4C               	movlw	low STR_72
  6882  0118E6  0101               	movlb	1	; () banked
  6883  0118E8  6F64               	movwf	printf@f& (0+255),b
  6884  0118EA  0EFC               	movlw	high STR_72
  6885  0118EC  6F65               	movwf	(printf@f+1)& (0+255),b
  6886  0118EE  EC00  F080         	call	_printf	;wreg free
  6887                           
  6888                           ;ring_buffer_LUT.c: 251: terminal_textAttributesReset();
  6889  0118F2  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6890                           
  6891                           ;ring_buffer_LUT.c: 253: terminal_printNewline();
  6892  0118F6  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6893                           
  6894                           ;ring_buffer_LUT.c: 255: }
  6895  0118FA  0012               	return	
  6896  0118FC                     l1047:
  6897                           
  6898                           ;ring_buffer_LUT.c: 258: else if ((0 == strcmp(line, "Enable Load"))) {
  6899  0118FC  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6900  011900  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6901  011904  0E8A               	movlw	low STR_73
  6902  011906  0101               	movlb	1	; () banked
  6903  011908  6F19               	movwf	strcmp@s2& (0+255),b
  6904  01190A  0EFF               	movlw	high STR_73
  6905  01190C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6906  01190E  ECE7  F0AE         	call	_strcmp	;wreg free
  6907  011912  0101               	movlb	1	; () banked
  6908  011914  5117               	movf	?_strcmp& (0+255),w,b
  6909  011916  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6910  011918  A4D8               	btfss	status,2,c
  6911  01191A  D019               	goto	l1049
  6912                           
  6913                           ; BSR set to: 1
  6914                           ;ring_buffer_LUT.c: 260: LATGbits.LATG0 = 1;
  6915  01191C  807F               	bsf	3967,0,c	;volatile
  6916                           
  6917                           ;ring_buffer_LUT.c: 261: LATGbits.LATG1 = 0;
  6918  01191E  927F               	bcf	3967,1,c	;volatile
  6919                           
  6920                           ;ring_buffer_LUT.c: 262: load_enable = 1;
  6921  011920  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6922                           
  6923                           ; BSR set to: 1
  6924                           ;ring_buffer_LUT.c: 265: terminal_printNewline();
  6925  011922  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6926                           
  6927                           ;ring_buffer_LUT.c: 267: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6928  011926  0E00               	movlw	0
  6929  011928  0101               	movlb	1	; () banked
  6930  01192A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6931  01192C  0E00               	movlw	0
  6932  01192E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6933  011930  0E06               	movlw	6
  6934  011932  ECC3  F095         	call	_terminal_textAttributes
  6935                           
  6936                           ;ring_buffer_LUT.c: 268: printf("Load has been enabled, dimming disabled\n\r");
  6937  011936  0E22               	movlw	low STR_74
  6938  011938  0101               	movlb	1	; () banked
  6939  01193A  6F64               	movwf	printf@f& (0+255),b
  6940  01193C  0EFC               	movlw	high STR_74
  6941  01193E  6F65               	movwf	(printf@f+1)& (0+255),b
  6942  011940  EC00  F080         	call	_printf	;wreg free
  6943                           
  6944                           ;ring_buffer_LUT.c: 270: terminal_textAttributesReset();
  6945  011944  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  6946                           
  6947                           ;ring_buffer_LUT.c: 272: terminal_printNewline();
  6948  011948  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6949                           
  6950                           ;ring_buffer_LUT.c: 274: }
  6951  01194C  0012               	return	
  6952  01194E                     l1049:
  6953                           
  6954                           ;ring_buffer_LUT.c: 277: else if ((0 == strcmp(line, "Disable Load"))) {
  6955  01194E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6956  011952  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6957  011956  0E7D               	movlw	low STR_75
  6958  011958  0101               	movlb	1	; () banked
  6959  01195A  6F19               	movwf	strcmp@s2& (0+255),b
  6960  01195C  0EFF               	movlw	high STR_75
  6961  01195E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6962  011960  ECE7  F0AE         	call	_strcmp	;wreg free
  6963  011964  0101               	movlb	1	; () banked
  6964  011966  5117               	movf	?_strcmp& (0+255),w,b
  6965  011968  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6966  01196A  A4D8               	btfss	status,2,c
  6967  01196C  D019               	goto	l1051
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;ring_buffer_LUT.c: 279: LATGbits.LATG1 = 0;
  6971  01196E  927F               	bcf	3967,1,c	;volatile
  6972                           
  6973                           ;ring_buffer_LUT.c: 280: LATGbits.LATG0 = 0;
  6974  011970  907F               	bcf	3967,0,c	;volatile
  6975                           
  6976                           ;ring_buffer_LUT.c: 281: load_enable = 0;
  6977  011972  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6978                           
  6979                           ; BSR set to: 1
  6980                           ;ring_buffer_LUT.c: 284: terminal_printNewline();
  6981  011974  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  6982                           
  6983                           ;ring_buffer_LUT.c: 286: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6984  011978  0E00               	movlw	0
  6985  01197A  0101               	movlb	1	; () banked
  6986  01197C  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6987  01197E  0E00               	movlw	0
  6988  011980  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6989  011982  0E06               	movlw	6
  6990  011984  ECC3  F095         	call	_terminal_textAttributes
  6991                           
  6992                           ;ring_buffer_LUT.c: 287: printf("Load has been disabled\n\r");
  6993  011988  0E50               	movlw	low STR_76
  6994  01198A  0101               	movlb	1	; () banked
  6995  01198C  6F64               	movwf	printf@f& (0+255),b
  6996  01198E  0EFE               	movlw	high STR_76
  6997  011990  6F65               	movwf	(printf@f+1)& (0+255),b
  6998  011992  EC00  F080         	call	_printf	;wreg free
  6999                           
  7000                           ;ring_buffer_LUT.c: 289: terminal_textAttributesReset();
  7001  011996  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  7002                           
  7003                           ;ring_buffer_LUT.c: 291: terminal_printNewline();
  7004  01199A  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7005                           
  7006                           ;ring_buffer_LUT.c: 293: }
  7007  01199E  0012               	return	
  7008  0119A0                     l1051:
  7009                           
  7010                           ;ring_buffer_LUT.c: 296: else if ((strstr(line, "Set Dimming Percentage: "))) {
  7011  0119A0  C1A0  F126         	movff	ringBufferLUT@line,strstr@s1
  7012  0119A4  C1A1  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  7013  0119A8  0E69               	movlw	low STR_77
  7014  0119AA  0101               	movlb	1	; () banked
  7015  0119AC  6F28               	movwf	strstr@s2& (0+255),b
  7016  0119AE  0EFE               	movlw	high STR_77
  7017  0119B0  6F29               	movwf	(strstr@s2+1)& (0+255),b
  7018  0119B2  EC32  F0AA         	call	_strstr	;wreg free
  7019  0119B6  0101               	movlb	1	; () banked
  7020  0119B8  5126               	movf	?_strstr& (0+255),w,b
  7021  0119BA  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  7022  0119BC  B4D8               	btfsc	status,2,c
  7023  0119BE  D113               	goto	l1053
  7024                           
  7025                           ; BSR set to: 1
  7026                           ;ring_buffer_LUT.c: 299: char arg_buff[3];
  7027                           ;ring_buffer_LUT.c: 302: for (int index = 0; index < 3; index++) {
  7028  0119C0  0E00               	movlw	0
  7029  0119C2  6FAB               	movwf	(ringBufferLUT@index+1)& (0+255),b
  7030  0119C4  0E00               	movlw	0
  7031  0119C6  6FAA               	movwf	ringBufferLUT@index& (0+255),b
  7032  0119C8                     l10116:
  7033                           
  7034                           ; BSR set to: 1
  7035  0119C8  BFAB               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  7036  0119CA  D006               	goto	l1054
  7037  0119CC  51AB               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  7038  0119CE  E11B               	bnz	l10126
  7039  0119D0  0E03               	movlw	3
  7040  0119D2  5DAA               	subwf	ringBufferLUT@index& (0+255),w,b
  7041  0119D4  B0D8               	btfsc	status,0,c
  7042  0119D6  D017               	goto	u11880
  7043  0119D8                     l1054:
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;ring_buffer_LUT.c: 304: arg_buff[index] = line[index + 24];
  7047                           
  7048                           ; BSR set to: 1
  7049  0119D8  0E18               	movlw	24
  7050  0119DA  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  7051  0119DC  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  7052  0119DE  0E00               	movlw	0
  7053  0119E0  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  7054  0119E2  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  7055  0119E4  51A2               	movf	??_ringBufferLUT& (0+255),w,b
  7056  0119E6  25A0               	addwf	ringBufferLUT@line& (0+255),w,b
  7057  0119E8  6ED9               	movwf	fsr2l,c
  7058  0119EA  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  7059  0119EC  21A1               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  7060  0119EE  6EDA               	movwf	fsr2h,c
  7061  0119F0  0EA7               	movlw	low ringBufferLUT@arg_buff
  7062  0119F2  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  7063  0119F4  6EE1               	movwf	fsr1l,c
  7064  0119F6  0E01               	movlw	high ringBufferLUT@arg_buff
  7065  0119F8  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  7066  0119FA  6EE2               	movwf	fsr1h,c
  7067  0119FC  CFDF FFE7          	movff	indf2,indf1
  7068                           
  7069                           ; BSR set to: 1
  7070  011A00  4BAA               	infsnz	ringBufferLUT@index& (0+255),f,b
  7071  011A02  2BAB               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  7072  011A04  D7E1               	goto	l10116
  7073  011A06                     u11880:
  7074  011A06                     l10126:
  7075                           
  7076                           ; BSR set to: 1
  7077                           ;ring_buffer_LUT.c: 306: }
  7078                           ;ring_buffer_LUT.c: 308: int percentage = atoi(arg_buff);
  7079  011A06  0EA7               	movlw	low ringBufferLUT@arg_buff
  7080  011A08  6F2B               	movwf	atoi@s& (0+255),b
  7081  011A0A  0E01               	movlw	high ringBufferLUT@arg_buff
  7082  011A0C  6F2C               	movwf	(atoi@s+1)& (0+255),b
  7083  011A0E  EC32  F0A7         	call	_atoi	;wreg free
  7084  011A12  C12B  F1AC         	movff	?_atoi,ringBufferLUT@percentage
  7085  011A16  C12C  F1AD         	movff	?_atoi+1,ringBufferLUT@percentage+1
  7086                           
  7087                           ;ring_buffer_LUT.c: 311: if ( (percentage >= 100) ||
  7088                           ;ring_buffer_LUT.c: 312: (percentage <= 0)) {
  7089  011A1A  0101               	movlb	1	; () banked
  7090  011A1C  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  7091  011A1E  D006               	goto	u11890
  7092  011A20  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  7093  011A22  E10B               	bnz	l10132
  7094  011A24  0E64               	movlw	100
  7095  011A26  5DAC               	subwf	ringBufferLUT@percentage& (0+255),w,b
  7096  011A28  B0D8               	btfsc	status,0,c
  7097  011A2A  D007               	goto	u11900
  7098  011A2C                     u11890:
  7099                           
  7100                           ; BSR set to: 1
  7101  011A2C  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  7102  011A2E  D005               	goto	u11900
  7103  011A30  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  7104  011A32  E12F               	bnz	l10134
  7105  011A34  05AC               	decf	ringBufferLUT@percentage& (0+255),w,b
  7106  011A36  B0D8               	btfsc	status,0,c
  7107  011A38  D02C               	goto	l1056
  7108  011A3A                     u11900:
  7109  011A3A                     l10132:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;ring_buffer_LUT.c: 315: terminal_printNewline();
  7113  011A3A  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7114                           
  7115                           ;ring_buffer_LUT.c: 317: terminal_textAttributes(RED, BLACK, NORMAL);
  7116  011A3E  0E00               	movlw	0
  7117  011A40  0101               	movlb	1	; () banked
  7118  011A42  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7119  011A44  0E00               	movlw	0
  7120  011A46  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7121  011A48  0E01               	movlw	1
  7122  011A4A  ECC3  F095         	call	_terminal_textAttributes
  7123                           
  7124                           ;ring_buffer_LUT.c: 318: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  7125  011A4E  0E0A               	movlw	low STR_78
  7126  011A50  0101               	movlb	1	; () banked
  7127  011A52  6F64               	movwf	printf@f& (0+255),b
  7128  011A54  0EFA               	movlw	high STR_78
  7129  011A56  6F65               	movwf	(printf@f+1)& (0+255),b
  7130  011A58  EC00  F080         	call	_printf	;wreg free
  7131                           
  7132                           ;ring_buffer_LUT.c: 320: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  7133  011A5C  0E00               	movlw	0
  7134  011A5E  0101               	movlb	1	; () banked
  7135  011A60  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7136  011A62  0E00               	movlw	0
  7137  011A64  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7138  011A66  0E03               	movlw	3
  7139  011A68  ECC3  F095         	call	_terminal_textAttributes
  7140                           
  7141                           ;ring_buffer_LUT.c: 321: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  7142  011A6C  0EA4               	movlw	low STR_79
  7143  011A6E  0101               	movlb	1	; () banked
  7144  011A70  6F64               	movwf	printf@f& (0+255),b
  7145  011A72  0EF9               	movlw	high STR_79
  7146  011A74  6F65               	movwf	(printf@f+1)& (0+255),b
  7147  011A76  EC00  F080         	call	_printf	;wreg free
  7148                           
  7149                           ;ring_buffer_LUT.c: 322: printf("Enter 'Help' for list of available commands\n\r");
  7150  011A7A  0EF4               	movlw	low STR_80
  7151  011A7C  0101               	movlb	1	; () banked
  7152  011A7E  6F64               	movwf	printf@f& (0+255),b
  7153  011A80  0EFB               	movlw	high STR_80
  7154  011A82  6F65               	movwf	(printf@f+1)& (0+255),b
  7155  011A84  EC00  F080         	call	_printf	;wreg free
  7156                           
  7157                           ;ring_buffer_LUT.c: 324: terminal_textAttributesReset();
  7158  011A88  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  7159                           
  7160                           ;ring_buffer_LUT.c: 326: terminal_printNewline();
  7161  011A8C  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7162                           
  7163                           ;ring_buffer_LUT.c: 328: }
  7164  011A90  0012               	return	
  7165  011A92                     l1056:
  7166  011A92                     l10134:
  7167                           
  7168                           ;ring_buffer_LUT.c: 331: else {
  7169                           ;ring_buffer_LUT.c: 334: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  7170  011A92  0E00               	movlw	0
  7171  011A94  0101               	movlb	1	; () banked
  7172  011A96  6F3A               	movwf	___ftdiv@f2& (0+255),b
  7173  011A98  0EC8               	movlw	200
  7174  011A9A  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  7175  011A9C  0E42               	movlw	66
  7176  011A9E  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  7177  011AA0  0E00               	movlw	0
  7178  011AA2  6F2E               	movwf	___ftadd@f2& (0+255),b
  7179  011AA4  0EC8               	movlw	200
  7180  011AA6  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  7181  011AA8  0E42               	movlw	66
  7182  011AAA  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  7183  011AAC  C1AC  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  7184  011AB0  C1AD  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  7185  011AB4  EC4B  F0B0         	call	___awtoft	;wreg free
  7186  011AB8  C11F  F123         	movff	?___awtoft,___ftneg@f1
  7187  011ABC  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  7188  011AC0  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  7189  011AC4  EC55  F0B1         	call	___ftneg	;wreg free
  7190  011AC8  C123  F12B         	movff	?___ftneg,___ftadd@f1
  7191  011ACC  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  7192  011AD0  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  7193  011AD4  EC24  F09E         	call	___ftadd	;wreg free
  7194  011AD8  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  7195  011ADC  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  7196  011AE0  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  7197  011AE4  EC6F  F0A5         	call	___ftdiv	;wreg free
  7198  011AE8  C137  F146         	movff	?___ftdiv,___ftmul@f1
  7199  011AEC  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  7200  011AF0  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  7201  011AF4  0E10               	movlw	16
  7202  011AF6  0101               	movlb	1	; () banked
  7203  011AF8  6F49               	movwf	___ftmul@f2& (0+255),b
  7204  011AFA  0E49               	movlw	73
  7205  011AFC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  7206  011AFE  0E40               	movlw	64
  7207  011B00  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  7208  011B02  EC00  F0A4         	call	___ftmul	;wreg free
  7209  011B06  C146  F0FA         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  7210  011B0A  C147  F0FB         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  7211  011B0E  C148  F0FC         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  7212                           
  7213                           ;ring_buffer_LUT.c: 335: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  7214  011B12  C0FA  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  7215  011B16  C0FB  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  7216  011B1A  C0FC  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  7217  011B1E  0E2F               	movlw	47
  7218  011B20  0101               	movlb	1	; () banked
  7219  011B22  6F49               	movwf	___ftmul@f2& (0+255),b
  7220  011B24  0E65               	movlw	101
  7221  011B26  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  7222  011B28  0E42               	movlw	66
  7223  011B2A  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  7224  011B2C  EC00  F0A4         	call	___ftmul	;wreg free
  7225  011B30  C146  F1A4         	movff	?___ftmul,ringBufferLUT@angle_degrees
  7226  011B34  C147  F1A5         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  7227  011B38  C148  F1A6         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  7228                           
  7229                           ;ring_buffer_LUT.c: 336: dimming_period = (100 - percentage) * (0xFFFF / 100);
  7230  011B3C  C1AC  F1A2         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  7231  011B40  C1AD  F1A3         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  7232  011B44  0101               	movlb	1	; () banked
  7233  011B46  1FA2               	comf	??_ringBufferLUT& (0+255),f,b
  7234  011B48  1FA3               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  7235  011B4A  4BA2               	infsnz	??_ringBufferLUT& (0+255),f,b
  7236  011B4C  2BA3               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  7237  011B4E  0E64               	movlw	100
  7238  011B50  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  7239  011B52  6F25               	movwf	___wmul@multiplier& (0+255),b
  7240  011B54  0E00               	movlw	0
  7241  011B56  21A3               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  7242  011B58  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  7243  011B5A  0E02               	movlw	2
  7244  011B5C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7245  011B5E  0E8F               	movlw	143
  7246  011B60  6F27               	movwf	___wmul@multiplicand& (0+255),b
  7247  011B62  EC19  F0B1         	call	___wmul	;wreg free
  7248  011B66  C125  F0F8         	movff	?___wmul,_dimming_period	;volatile
  7249  011B6A  C126  F0F9         	movff	?___wmul+1,_dimming_period+1	;volatile
  7250                           
  7251                           ;ring_buffer_LUT.c: 339: terminal_printNewline();
  7252  011B6E  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7253                           
  7254                           ;ring_buffer_LUT.c: 341: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7255  011B72  0E00               	movlw	0
  7256  011B74  0101               	movlb	1	; () banked
  7257  011B76  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7258  011B78  0E00               	movlw	0
  7259  011B7A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7260  011B7C  0E06               	movlw	6
  7261  011B7E  ECC3  F095         	call	_terminal_textAttributes
  7262                           
  7263                           ;ring_buffer_LUT.c: 342: printf("Dimming has been set to %d percent\n\r", percentage);
  7264  011B82  0EE9               	movlw	low STR_81
  7265  011B84  0101               	movlb	1	; () banked
  7266  011B86  6F64               	movwf	printf@f& (0+255),b
  7267  011B88  0EFC               	movlw	high STR_81
  7268  011B8A  6F65               	movwf	(printf@f+1)& (0+255),b
  7269  011B8C  C1AC  F166         	movff	ringBufferLUT@percentage,?_printf+2
  7270  011B90  C1AD  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  7271  011B94  EC00  F080         	call	_printf	;wreg free
  7272                           
  7273                           ;ring_buffer_LUT.c: 343: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  7274  011B98  0EA7               	movlw	low STR_82
  7275  011B9A  0101               	movlb	1	; () banked
  7276  011B9C  6F64               	movwf	printf@f& (0+255),b
  7277  011B9E  0EFA               	movlw	high STR_82
  7278  011BA0  6F65               	movwf	(printf@f+1)& (0+255),b
  7279  011BA2  C0FA  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  7280  011BA6  C0FB  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  7281  011BAA  C0FC  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  7282  011BAE  C1A4  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  7283  011BB2  C1A5  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  7284  011BB6  C1A6  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  7285  011BBA  EC00  F080         	call	_printf	;wreg free
  7286                           
  7287                           ;ring_buffer_LUT.c: 344: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  7288  011BBE  0E60               	movlw	low STR_83
  7289  011BC0  0101               	movlb	1	; () banked
  7290  011BC2  6F64               	movwf	printf@f& (0+255),b
  7291  011BC4  0EFA               	movlw	high STR_83
  7292  011BC6  6F65               	movwf	(printf@f+1)& (0+255),b
  7293  011BC8  C0F8  F166         	movff	_dimming_period,?_printf+2	;volatile
  7294  011BCC  C0F9  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  7295  011BD0  C0F8  F168         	movff	_dimming_period,?_printf+4	;volatile
  7296  011BD4  C0F9  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  7297  011BD8  EC00  F080         	call	_printf	;wreg free
  7298                           
  7299                           ;ring_buffer_LUT.c: 346: terminal_textAttributesReset();
  7300  011BDC  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  7301                           
  7302                           ;ring_buffer_LUT.c: 348: terminal_printNewline();
  7303  011BE0  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7304                           
  7305                           ;ring_buffer_LUT.c: 350: }
  7306                           ;ring_buffer_LUT.c: 352: }
  7307  011BE4  0012               	return	
  7308  011BE6                     l1053:
  7309                           
  7310                           ;ring_buffer_LUT.c: 355: else if((0 == strcmp(line, "Device On Time?"))) {
  7311  011BE6  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7312  011BEA  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7313  011BEE  0E07               	movlw	low STR_84
  7314  011BF0  0101               	movlb	1	; () banked
  7315  011BF2  6F19               	movwf	strcmp@s2& (0+255),b
  7316  011BF4  0EFF               	movlw	high STR_84
  7317  011BF6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7318  011BF8  ECE7  F0AE         	call	_strcmp	;wreg free
  7319  011BFC  0101               	movlb	1	; () banked
  7320  011BFE  5117               	movf	?_strcmp& (0+255),w,b
  7321  011C00  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7322  011C02  A4D8               	btfss	status,2,c
  7323  011C04  D01E               	goto	l1061
  7324                           
  7325                           ; BSR set to: 1
  7326                           ;ring_buffer_LUT.c: 358: terminal_printNewline();
  7327  011C06  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7328                           
  7329                           ;ring_buffer_LUT.c: 360: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7330  011C0A  0E00               	movlw	0
  7331  011C0C  0101               	movlb	1	; () banked
  7332  011C0E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7333  011C10  0E00               	movlw	0
  7334  011C12  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7335  011C14  0E06               	movlw	6
  7336  011C16  ECC3  F095         	call	_terminal_textAttributes
  7337                           
  7338                           ;ring_buffer_LUT.c: 361: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  7339  011C1A  0EE6               	movlw	low STR_85
  7340  011C1C  0101               	movlb	1	; () banked
  7341  011C1E  6F64               	movwf	printf@f& (0+255),b
  7342  011C20  0EFA               	movlw	high STR_85
  7343  011C22  6F65               	movwf	(printf@f+1)& (0+255),b
  7344  011C24  C1BD  F166         	movff	_dev_on_time,?_printf+2	;volatile
  7345  011C28  C1BE  F167         	movff	_dev_on_time+1,?_printf+3	;volatile
  7346  011C2C  C1BF  F168         	movff	_dev_on_time+2,?_printf+4	;volatile
  7347  011C30  C1C0  F169         	movff	_dev_on_time+3,?_printf+5	;volatile
  7348  011C34  EC00  F080         	call	_printf	;wreg free
  7349                           
  7350                           ;ring_buffer_LUT.c: 363: terminal_textAttributesReset();
  7351  011C38  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  7352                           
  7353                           ;ring_buffer_LUT.c: 365: terminal_printNewline();
  7354  011C3C  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7355                           
  7356                           ;ring_buffer_LUT.c: 367: }
  7357  011C40  0012               	return	
  7358  011C42                     l1061:
  7359                           
  7360                           ;ring_buffer_LUT.c: 370: else if((0 == strcmp(line, "Load On Time?"))) {
  7361  011C42  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7362  011C46  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7363  011C4A  0E62               	movlw	low STR_86
  7364  011C4C  0101               	movlb	1	; () banked
  7365  011C4E  6F19               	movwf	strcmp@s2& (0+255),b
  7366  011C50  0EFF               	movlw	high STR_86
  7367  011C52  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7368  011C54  ECE7  F0AE         	call	_strcmp	;wreg free
  7369  011C58  0101               	movlb	1	; () banked
  7370  011C5A  5117               	movf	?_strcmp& (0+255),w,b
  7371  011C5C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7372  011C5E  A4D8               	btfss	status,2,c
  7373  011C60  D01E               	goto	l1063
  7374                           
  7375                           ; BSR set to: 1
  7376                           ;ring_buffer_LUT.c: 373: terminal_printNewline();
  7377  011C62  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7378                           
  7379                           ;ring_buffer_LUT.c: 375: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7380  011C66  0E00               	movlw	0
  7381  011C68  0101               	movlb	1	; () banked
  7382  011C6A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7383  011C6C  0E00               	movlw	0
  7384  011C6E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7385  011C70  0E06               	movlw	6
  7386  011C72  ECC3  F095         	call	_terminal_textAttributes
  7387                           
  7388                           ;ring_buffer_LUT.c: 376: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  7389  011C76  0E90               	movlw	low STR_87
  7390  011C78  0101               	movlb	1	; () banked
  7391  011C7A  6F64               	movwf	printf@f& (0+255),b
  7392  011C7C  0EFB               	movlw	high STR_87
  7393  011C7E  6F65               	movwf	(printf@f+1)& (0+255),b
  7394  011C80  C1B9  F166         	movff	_load_on_time,?_printf+2	;volatile
  7395  011C84  C1BA  F167         	movff	_load_on_time+1,?_printf+3	;volatile
  7396  011C88  C1BB  F168         	movff	_load_on_time+2,?_printf+4	;volatile
  7397  011C8C  C1BC  F169         	movff	_load_on_time+3,?_printf+5	;volatile
  7398  011C90  EC00  F080         	call	_printf	;wreg free
  7399                           
  7400                           ;ring_buffer_LUT.c: 378: terminal_textAttributesReset();
  7401  011C94  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  7402                           
  7403                           ;ring_buffer_LUT.c: 380: terminal_printNewline();
  7404  011C98  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7405                           
  7406                           ;ring_buffer_LUT.c: 382: }
  7407  011C9C  0012               	return	
  7408  011C9E                     l1063:
  7409                           
  7410                           ;ring_buffer_LUT.c: 387: else if((0 == strcmp(line, "Help"))) {
  7411  011C9E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7412  011CA2  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7413  011CA6  0EA8               	movlw	low STR_88
  7414  011CA8  0101               	movlb	1	; () banked
  7415  011CAA  6F19               	movwf	strcmp@s2& (0+255),b
  7416  011CAC  0EFF               	movlw	high STR_88
  7417  011CAE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7418  011CB0  ECE7  F0AE         	call	_strcmp	;wreg free
  7419  011CB4  0101               	movlb	1	; () banked
  7420  011CB6  5117               	movf	?_strcmp& (0+255),w,b
  7421  011CB8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7422  011CBA  A4D8               	btfss	status,2,c
  7423  011CBC  0012               	return	
  7424                           
  7425                           ; BSR set to: 1
  7426                           ;ring_buffer_LUT.c: 390: terminal_printNewline();
  7427  011CBE  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7428                           
  7429                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  7430  011CC2  0E00               	movlw	0
  7431  011CC4  0101               	movlb	1	; () banked
  7432  011CC6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7433  011CC8  0E00               	movlw	0
  7434  011CCA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7435  011CCC  0E03               	movlw	3
  7436  011CCE  ECC3  F095         	call	_terminal_textAttributes
  7437                           
  7438                           ;ring_buffer_LUT.c: 393: printf("List of supported commands:\n\r\n\r"
  7439                           ;ring_buffer_LUT.c: 395: "Housekeeping Commands:\n\r"
  7440                           ;ring_buffer_LUT.c: 396: "   Reset: Clears the terminal and resets the micro\n\r"
  7441                           ;ring_buffer_LUT.c: 397: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  7442                           ;ring_buffer_LUT.c: 398: "   *IDN?: Returns device identification string\n\r"
  7443                           ;ring_buffer_LUT.c: 399: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  7444                           ;ring_buffer_LUT.c: 400: "   Help: This message, lists supported commands\n\r\n\r"
  7445  011CD2  0E4B               	movlw	low STR_89
  7446  011CD4  0101               	movlb	1	; () banked
  7447  011CD6  6F64               	movwf	printf@f& (0+255),b
  7448  011CD8  0EF2               	movlw	high STR_89
  7449  011CDA  6F65               	movwf	(printf@f+1)& (0+255),b
  7450  011CDC  EC00  F080         	call	_printf	;wreg free
  7451                           
  7452                           ;ring_buffer_LUT.c: 425: terminal_printNewline();
  7453  011CE0  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7454                           
  7455                           ;ring_buffer_LUT.c: 426: printf("Help messages appear in yellow\n\r");
  7456  011CE4  0EB9               	movlw	low STR_90
  7457  011CE6  0101               	movlb	1	; () banked
  7458  011CE8  6F64               	movwf	printf@f& (0+255),b
  7459  011CEA  0EFD               	movlw	high STR_90
  7460  011CEC  6F65               	movwf	(printf@f+1)& (0+255),b
  7461  011CEE  EC00  F080         	call	_printf	;wreg free
  7462                           
  7463                           ;ring_buffer_LUT.c: 428: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7464  011CF2  0E00               	movlw	0
  7465  011CF4  0101               	movlb	1	; () banked
  7466  011CF6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7467  011CF8  0E00               	movlw	0
  7468  011CFA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7469  011CFC  0E02               	movlw	2
  7470  011CFE  ECC3  F095         	call	_terminal_textAttributes
  7471                           
  7472                           ;ring_buffer_LUT.c: 429: printf("IDN string appears in green\n\r");
  7473  011D02  0E18               	movlw	low STR_91
  7474  011D04  0101               	movlb	1	; () banked
  7475  011D06  6F64               	movwf	printf@f& (0+255),b
  7476  011D08  0EFE               	movlw	high STR_91
  7477  011D0A  6F65               	movwf	(printf@f+1)& (0+255),b
  7478  011D0C  EC00  F080         	call	_printf	;wreg free
  7479                           
  7480                           ;ring_buffer_LUT.c: 430: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7481  011D10  0E00               	movlw	0
  7482  011D12  0101               	movlb	1	; () banked
  7483  011D14  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7484  011D16  0E00               	movlw	0
  7485  011D18  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7486  011D1A  0E06               	movlw	6
  7487  011D1C  ECC3  F095         	call	_terminal_textAttributes
  7488                           
  7489                           ;ring_buffer_LUT.c: 431: printf("Measurement responses appear in cyan\n\r");
  7490  011D20  0E9D               	movlw	low STR_92
  7491  011D22  0101               	movlb	1	; () banked
  7492  011D24  6F64               	movwf	printf@f& (0+255),b
  7493  011D26  0EFC               	movlw	high STR_92
  7494  011D28  6F65               	movwf	(printf@f+1)& (0+255),b
  7495  011D2A  EC00  F080         	call	_printf	;wreg free
  7496                           
  7497                           ;ring_buffer_LUT.c: 432: terminal_textAttributes(RED, BLACK, NORMAL);
  7498  011D2E  0E00               	movlw	0
  7499  011D30  0101               	movlb	1	; () banked
  7500  011D32  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7501  011D34  0E00               	movlw	0
  7502  011D36  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7503  011D38  0E01               	movlw	1
  7504  011D3A  ECC3  F095         	call	_terminal_textAttributes
  7505                           
  7506                           ;ring_buffer_LUT.c: 433: printf("Errors appear in red\n\r");
  7507  011D3E  0E82               	movlw	low STR_93
  7508  011D40  0101               	movlb	1	; () banked
  7509  011D42  6F64               	movwf	printf@f& (0+255),b
  7510  011D44  0EFE               	movlw	high STR_93
  7511  011D46  6F65               	movwf	(printf@f+1)& (0+255),b
  7512  011D48  EC00  F080         	call	_printf	;wreg free
  7513                           
  7514                           ;ring_buffer_LUT.c: 434: terminal_textAttributesReset();
  7515  011D4C  EC06  F0B2         	call	_terminal_textAttributesReset	;wreg free
  7516                           
  7517                           ;ring_buffer_LUT.c: 435: printf("User input appears in white\n\r");
  7518  011D50  0EFA               	movlw	low STR_94
  7519  011D52  0101               	movlb	1	; () banked
  7520  011D54  6F64               	movwf	printf@f& (0+255),b
  7521  011D56  0EFD               	movlw	high STR_94
  7522  011D58  6F65               	movwf	(printf@f+1)& (0+255),b
  7523  011D5A  EC00  F080         	call	_printf	;wreg free
  7524                           
  7525                           ;ring_buffer_LUT.c: 438: terminal_printNewline();
  7526  011D5E  EC20  F0B2         	call	_terminal_printNewline	;wreg free
  7527  011D62  0012               	return	
  7528  011D64                     __end_of_ringBufferLUT:
  7529                           	opt stack 0
  7530                           tblptru	equ	0xFF8
  7531                           tblptrh	equ	0xFF7
  7532                           tblptrl	equ	0xFF6
  7533                           tablat	equ	0xFF5
  7534                           intcon	equ	0xFF2
  7535                           postinc0	equ	0xFEE
  7536                           wreg	equ	0xFE8
  7537                           indf1	equ	0xFE7
  7538                           postdec1	equ	0xFE5
  7539                           fsr1h	equ	0xFE2
  7540                           fsr1l	equ	0xFE1
  7541                           indf2	equ	0xFDF
  7542                           postinc2	equ	0xFDE
  7543                           fsr2h	equ	0xFDA
  7544                           fsr2l	equ	0xFD9
  7545                           status	equ	0xFD8
  7546                           
  7547 ;; *************** function _terminal_textAttributesReset *****************
  7548 ;; Defined at:
  7549 ;;		line 223 in file "ring_buffer_interface.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      void 
  7556 ;; Registers used:
  7557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;Total ram usage:        0 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:   19
  7570 ;; This function calls:
  7571 ;;		_terminal_textAttributes
  7572 ;; This function is called by:
  7573 ;;		_main
  7574 ;;		_ringBufferLUT
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text4
  7579  01640C                     __ptext4:
  7580                           	opt stack 0
  7581  01640C                     _terminal_textAttributesReset:
  7582                           	opt stack 11
  7583                           
  7584                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  7585                           
  7586                           ;incstack = 0
  7587  01640C  0E00               	movlw	0
  7588  01640E  0101               	movlb	1	; () banked
  7589  016410  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7590  016412  0E00               	movlw	0
  7591  016414  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7592  016416  0E07               	movlw	7
  7593  016418  ECC3  F095         	call	_terminal_textAttributes
  7594  01641C  0012               	return		;funcret
  7595  01641E                     __end_of_terminal_textAttributesReset:
  7596                           	opt stack 0
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           intcon	equ	0xFF2
  7602                           postinc0	equ	0xFEE
  7603                           wreg	equ	0xFE8
  7604                           indf1	equ	0xFE7
  7605                           postdec1	equ	0xFE5
  7606                           fsr1h	equ	0xFE2
  7607                           fsr1l	equ	0xFE1
  7608                           indf2	equ	0xFDF
  7609                           postinc2	equ	0xFDE
  7610                           fsr2h	equ	0xFDA
  7611                           fsr2l	equ	0xFD9
  7612                           status	equ	0xFD8
  7613                           
  7614 ;; *************** function _terminal_textAttributes *****************
  7615 ;; Defined at:
  7616 ;;		line 115 in file "ring_buffer_interface.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  foreground_c    1    wreg     enum E17839
  7619 ;;  background_c    1  142[BANK1 ] enum E17839
  7620 ;;  input_attrib    1  143[BANK1 ] enum E17831
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  foreground_c    1  144[BANK1 ] enum E17839
  7623 ;;  output_buff    15  145[BANK1 ] unsigned char [15]
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1    wreg      void 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7633 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;Total ram usage:       18 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:   18
  7640 ;; This function calls:
  7641 ;;		_printf
  7642 ;;		_strcat
  7643 ;;		_strncpy
  7644 ;; This function is called by:
  7645 ;;		_terminal_textAttributesReset
  7646 ;;		_ringBufferLUT
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text5
  7651  012B86                     __ptext5:
  7652                           	opt stack 0
  7653  012B86                     _terminal_textAttributes:
  7654                           	opt stack 11
  7655                           
  7656                           ;incstack = 0
  7657                           ;terminal_textAttributes@foreground_color stored from wreg
  7658  012B86  0101               	movlb	1	; () banked
  7659  012B88  6F90               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  7660                           
  7661                           ;ring_buffer_interface.c: 119: char output_buff[15];
  7662                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  7663  012B8A  0E91               	movlw	low terminal_textAttributes@output_buff
  7664  012B8C  0101               	movlb	1	; () banked
  7665  012B8E  6F17               	movwf	strncpy@to& (0+255),b
  7666  012B90  0E01               	movlw	high terminal_textAttributes@output_buff
  7667  012B92  6F18               	movwf	(strncpy@to+1)& (0+255),b
  7668  012B94  0EF6               	movlw	low STR_11
  7669  012B96  6F19               	movwf	strncpy@from& (0+255),b
  7670  012B98  0EFF               	movlw	high STR_11
  7671  012B9A  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  7672  012B9C  0E00               	movlw	0
  7673  012B9E  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  7674  012BA0  0E0F               	movlw	15
  7675  012BA2  6F1B               	movwf	strncpy@size& (0+255),b
  7676  012BA4  ECA4  F0AC         	call	_strncpy	;wreg free
  7677                           
  7678                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  7679  012BA8  D054               	goto	l929
  7680  012BAA                     
  7681                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  7682  012BAA  0E91               	movlw	low terminal_textAttributes@output_buff
  7683  012BAC  0101               	movlb	1	; () banked
  7684  012BAE  6F17               	movwf	strcat@to& (0+255),b
  7685  012BB0  0E01               	movlw	high terminal_textAttributes@output_buff
  7686  012BB2  6F18               	movwf	(strcat@to+1)& (0+255),b
  7687  012BB4  0EC7               	movlw	low (STR_20+1)
  7688  012BB6  6F19               	movwf	strcat@from& (0+255),b
  7689  012BB8  0EFF               	movlw	high (STR_20+1)
  7690  012BBA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7691  012BBC  EC36  F0AF         	call	_strcat	;wreg free
  7692                           
  7693                           ;ring_buffer_interface.c: 127: break;
  7694  012BC0  D05D               	goto	l931
  7695  012BC2                     
  7696                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  7697  012BC2  0E91               	movlw	low terminal_textAttributes@output_buff
  7698  012BC4  0101               	movlb	1	; () banked
  7699  012BC6  6F17               	movwf	strcat@to& (0+255),b
  7700  012BC8  0E01               	movlw	high terminal_textAttributes@output_buff
  7701  012BCA  6F18               	movwf	(strcat@to+1)& (0+255),b
  7702  012BCC  0ECD               	movlw	low (STR_21+1)
  7703  012BCE  6F19               	movwf	strcat@from& (0+255),b
  7704  012BD0  0EFF               	movlw	high (STR_21+1)
  7705  012BD2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7706  012BD4  EC36  F0AF         	call	_strcat	;wreg free
  7707                           
  7708                           ;ring_buffer_interface.c: 130: break;
  7709  012BD8  D051               	goto	l931
  7710  012BDA                     
  7711                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  7712  012BDA  0E91               	movlw	low terminal_textAttributes@output_buff
  7713  012BDC  0101               	movlb	1	; () banked
  7714  012BDE  6F17               	movwf	strcat@to& (0+255),b
  7715  012BE0  0E01               	movlw	high terminal_textAttributes@output_buff
  7716  012BE2  6F18               	movwf	(strcat@to+1)& (0+255),b
  7717  012BE4  0EDF               	movlw	low (STR_24+1)
  7718  012BE6  6F19               	movwf	strcat@from& (0+255),b
  7719  012BE8  0EFF               	movlw	high (STR_24+1)
  7720  012BEA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7721  012BEC  EC36  F0AF         	call	_strcat	;wreg free
  7722                           
  7723                           ;ring_buffer_interface.c: 133: break;
  7724  012BF0  D045               	goto	l931
  7725  012BF2                     
  7726                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  7727  012BF2  0E91               	movlw	low terminal_textAttributes@output_buff
  7728  012BF4  0101               	movlb	1	; () banked
  7729  012BF6  6F17               	movwf	strcat@to& (0+255),b
  7730  012BF8  0E01               	movlw	high terminal_textAttributes@output_buff
  7731  012BFA  6F18               	movwf	(strcat@to+1)& (0+255),b
  7732  012BFC  0EE5               	movlw	low (STR_25+1)
  7733  012BFE  6F19               	movwf	strcat@from& (0+255),b
  7734  012C00  0EFF               	movlw	high (STR_25+1)
  7735  012C02  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7736  012C04  EC36  F0AF         	call	_strcat	;wreg free
  7737                           
  7738                           ;ring_buffer_interface.c: 136: break;
  7739  012C08  D039               	goto	l931
  7740  012C0A                     
  7741                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  7742  012C0A  0E91               	movlw	low terminal_textAttributes@output_buff
  7743  012C0C  0101               	movlb	1	; () banked
  7744  012C0E  6F17               	movwf	strcat@to& (0+255),b
  7745  012C10  0E01               	movlw	high terminal_textAttributes@output_buff
  7746  012C12  6F18               	movwf	(strcat@to+1)& (0+255),b
  7747  012C14  0EF1               	movlw	low (STR_27+1)
  7748  012C16  6F19               	movwf	strcat@from& (0+255),b
  7749  012C18  0EFF               	movlw	high (STR_27+1)
  7750  012C1A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7751  012C1C  EC36  F0AF         	call	_strcat	;wreg free
  7752                           
  7753                           ;ring_buffer_interface.c: 139: break;
  7754  012C20  D02D               	goto	l931
  7755  012C22                     
  7756                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  7757  012C22  0E91               	movlw	low terminal_textAttributes@output_buff
  7758  012C24  0101               	movlb	1	; () banked
  7759  012C26  6F17               	movwf	strcat@to& (0+255),b
  7760  012C28  0E01               	movlw	high terminal_textAttributes@output_buff
  7761  012C2A  6F18               	movwf	(strcat@to+1)& (0+255),b
  7762  012C2C  0EF9               	movlw	low STR_17
  7763  012C2E  6F19               	movwf	strcat@from& (0+255),b
  7764  012C30  0EFF               	movlw	high STR_17
  7765  012C32  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7766  012C34  EC36  F0AF         	call	_strcat	;wreg free
  7767                           
  7768                           ;ring_buffer_interface.c: 142: break;
  7769  012C38  D021               	goto	l931
  7770  012C3A                     
  7771                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  7772  012C3A  0E91               	movlw	low terminal_textAttributes@output_buff
  7773  012C3C  0101               	movlb	1	; () banked
  7774  012C3E  6F17               	movwf	strcat@to& (0+255),b
  7775  012C40  0E01               	movlw	high terminal_textAttributes@output_buff
  7776  012C42  6F18               	movwf	(strcat@to+1)& (0+255),b
  7777  012C44  0EC7               	movlw	low (STR_20+1)
  7778  012C46  6F19               	movwf	strcat@from& (0+255),b
  7779  012C48  0EFF               	movlw	high (STR_20+1)
  7780  012C4A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7781  012C4C  EC36  F0AF         	call	_strcat	;wreg free
  7782                           
  7783                           ;ring_buffer_interface.c: 147: }
  7784                           
  7785                           ;ring_buffer_interface.c: 146: break;
  7786  012C50  D015               	goto	l931
  7787  012C52                     l929:
  7788  012C52  0101               	movlb	1	; () banked
  7789  012C54  518F               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  7790                           
  7791                           ; Switch size 1, requested type "space"
  7792                           ; Number of cases is 6, Range of values is 0 to 5
  7793                           ; switch strategies available:
  7794                           ; Name         Instructions Cycles
  7795                           ; simple_byte           19    10 (average)
  7796                           ;	Chosen strategy is simple_byte
  7797  012C56  0A00               	xorlw	0	; case 0
  7798  012C58  B4D8               	btfsc	status,2,c
  7799  012C5A  D7A7               	goto	l930
  7800  012C5C  0A01               	xorlw	1	; case 1
  7801  012C5E  B4D8               	btfsc	status,2,c
  7802  012C60  D7B0               	goto	l932
  7803  012C62  0A03               	xorlw	3	; case 2
  7804  012C64  B4D8               	btfsc	status,2,c
  7805  012C66  D7B9               	goto	l933
  7806  012C68  0A01               	xorlw	1	; case 3
  7807  012C6A  B4D8               	btfsc	status,2,c
  7808  012C6C  D7C2               	goto	l934
  7809  012C6E  0A07               	xorlw	7	; case 4
  7810  012C70  B4D8               	btfsc	status,2,c
  7811  012C72  D7CB               	goto	l935
  7812  012C74  0A01               	xorlw	1	; case 5
  7813  012C76  B4D8               	btfsc	status,2,c
  7814  012C78  D7D4               	goto	l936
  7815  012C7A  D7DF               	goto	l937
  7816  012C7C                     l931:
  7817                           
  7818                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  7819                           
  7820                           ; BSR set to: 1
  7821  012C7C  0E91               	movlw	low terminal_textAttributes@output_buff
  7822  012C7E  0101               	movlb	1	; () banked
  7823  012C80  6F17               	movwf	strcat@to& (0+255),b
  7824  012C82  0E01               	movlw	high terminal_textAttributes@output_buff
  7825  012C84  6F18               	movwf	(strcat@to+1)& (0+255),b
  7826  012C86  0EFB               	movlw	low STR_19
  7827  012C88  6F19               	movwf	strcat@from& (0+255),b
  7828  012C8A  0EFF               	movlw	high STR_19
  7829  012C8C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7830  012C8E  EC36  F0AF         	call	_strcat	;wreg free
  7831                           
  7832                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  7833  012C92  D06C               	goto	l938
  7834  012C94                     
  7835                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  7836  012C94  0E91               	movlw	low terminal_textAttributes@output_buff
  7837  012C96  0101               	movlb	1	; () banked
  7838  012C98  6F17               	movwf	strcat@to& (0+255),b
  7839  012C9A  0E01               	movlw	high terminal_textAttributes@output_buff
  7840  012C9C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7841  012C9E  0EC6               	movlw	low STR_20
  7842  012CA0  6F19               	movwf	strcat@from& (0+255),b
  7843  012CA2  0EFF               	movlw	high STR_20
  7844  012CA4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7845  012CA6  EC36  F0AF         	call	_strcat	;wreg free
  7846                           
  7847                           ;ring_buffer_interface.c: 155: break;
  7848  012CAA  D07B               	goto	l940
  7849  012CAC                     
  7850                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  7851  012CAC  0E91               	movlw	low terminal_textAttributes@output_buff
  7852  012CAE  0101               	movlb	1	; () banked
  7853  012CB0  6F17               	movwf	strcat@to& (0+255),b
  7854  012CB2  0E01               	movlw	high terminal_textAttributes@output_buff
  7855  012CB4  6F18               	movwf	(strcat@to+1)& (0+255),b
  7856  012CB6  0ECC               	movlw	low STR_21
  7857  012CB8  6F19               	movwf	strcat@from& (0+255),b
  7858  012CBA  0EFF               	movlw	high STR_21
  7859  012CBC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7860  012CBE  EC36  F0AF         	call	_strcat	;wreg free
  7861                           
  7862                           ;ring_buffer_interface.c: 158: break;
  7863  012CC2  D06F               	goto	l940
  7864  012CC4                     
  7865                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  7866  012CC4  0E91               	movlw	low terminal_textAttributes@output_buff
  7867  012CC6  0101               	movlb	1	; () banked
  7868  012CC8  6F17               	movwf	strcat@to& (0+255),b
  7869  012CCA  0E01               	movlw	high terminal_textAttributes@output_buff
  7870  012CCC  6F18               	movwf	(strcat@to+1)& (0+255),b
  7871  012CCE  0ED2               	movlw	low STR_22
  7872  012CD0  6F19               	movwf	strcat@from& (0+255),b
  7873  012CD2  0EFF               	movlw	high STR_22
  7874  012CD4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7875  012CD6  EC36  F0AF         	call	_strcat	;wreg free
  7876                           
  7877                           ;ring_buffer_interface.c: 161: break;
  7878  012CDA  D063               	goto	l940
  7879  012CDC                     
  7880                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  7881  012CDC  0E91               	movlw	low terminal_textAttributes@output_buff
  7882  012CDE  0101               	movlb	1	; () banked
  7883  012CE0  6F17               	movwf	strcat@to& (0+255),b
  7884  012CE2  0E01               	movlw	high terminal_textAttributes@output_buff
  7885  012CE4  6F18               	movwf	(strcat@to+1)& (0+255),b
  7886  012CE6  0ED8               	movlw	low STR_23
  7887  012CE8  6F19               	movwf	strcat@from& (0+255),b
  7888  012CEA  0EFF               	movlw	high STR_23
  7889  012CEC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7890  012CEE  EC36  F0AF         	call	_strcat	;wreg free
  7891                           
  7892                           ;ring_buffer_interface.c: 164: break;
  7893  012CF2  D057               	goto	l940
  7894  012CF4                     
  7895                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  7896  012CF4  0E91               	movlw	low terminal_textAttributes@output_buff
  7897  012CF6  0101               	movlb	1	; () banked
  7898  012CF8  6F17               	movwf	strcat@to& (0+255),b
  7899  012CFA  0E01               	movlw	high terminal_textAttributes@output_buff
  7900  012CFC  6F18               	movwf	(strcat@to+1)& (0+255),b
  7901  012CFE  0EDE               	movlw	low STR_24
  7902  012D00  6F19               	movwf	strcat@from& (0+255),b
  7903  012D02  0EFF               	movlw	high STR_24
  7904  012D04  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7905  012D06  EC36  F0AF         	call	_strcat	;wreg free
  7906                           
  7907                           ;ring_buffer_interface.c: 167: break;
  7908  012D0A  D04B               	goto	l940
  7909  012D0C                     
  7910                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  7911  012D0C  0E91               	movlw	low terminal_textAttributes@output_buff
  7912  012D0E  0101               	movlb	1	; () banked
  7913  012D10  6F17               	movwf	strcat@to& (0+255),b
  7914  012D12  0E01               	movlw	high terminal_textAttributes@output_buff
  7915  012D14  6F18               	movwf	(strcat@to+1)& (0+255),b
  7916  012D16  0EE4               	movlw	low STR_25
  7917  012D18  6F19               	movwf	strcat@from& (0+255),b
  7918  012D1A  0EFF               	movlw	high STR_25
  7919  012D1C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7920  012D1E  EC36  F0AF         	call	_strcat	;wreg free
  7921                           
  7922                           ;ring_buffer_interface.c: 170: break;
  7923  012D22  D03F               	goto	l940
  7924  012D24                     
  7925                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  7926  012D24  0E91               	movlw	low terminal_textAttributes@output_buff
  7927  012D26  0101               	movlb	1	; () banked
  7928  012D28  6F17               	movwf	strcat@to& (0+255),b
  7929  012D2A  0E01               	movlw	high terminal_textAttributes@output_buff
  7930  012D2C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7931  012D2E  0EEA               	movlw	low STR_26
  7932  012D30  6F19               	movwf	strcat@from& (0+255),b
  7933  012D32  0EFF               	movlw	high STR_26
  7934  012D34  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7935  012D36  EC36  F0AF         	call	_strcat	;wreg free
  7936                           
  7937                           ;ring_buffer_interface.c: 173: break;
  7938  012D3A  D033               	goto	l940
  7939  012D3C                     
  7940                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  7941  012D3C  0E91               	movlw	low terminal_textAttributes@output_buff
  7942  012D3E  0101               	movlb	1	; () banked
  7943  012D40  6F17               	movwf	strcat@to& (0+255),b
  7944  012D42  0E01               	movlw	high terminal_textAttributes@output_buff
  7945  012D44  6F18               	movwf	(strcat@to+1)& (0+255),b
  7946  012D46  0EF0               	movlw	low STR_27
  7947  012D48  6F19               	movwf	strcat@from& (0+255),b
  7948  012D4A  0EFF               	movlw	high STR_27
  7949  012D4C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7950  012D4E  EC36  F0AF         	call	_strcat	;wreg free
  7951                           
  7952                           ;ring_buffer_interface.c: 176: break;
  7953  012D52  D027               	goto	l940
  7954  012D54                     
  7955                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  7956  012D54  0E91               	movlw	low terminal_textAttributes@output_buff
  7957  012D56  0101               	movlb	1	; () banked
  7958  012D58  6F17               	movwf	strcat@to& (0+255),b
  7959  012D5A  0E01               	movlw	high terminal_textAttributes@output_buff
  7960  012D5C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7961  012D5E  0EF0               	movlw	low STR_27
  7962  012D60  6F19               	movwf	strcat@from& (0+255),b
  7963  012D62  0EFF               	movlw	high STR_27
  7964  012D64  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7965  012D66  EC36  F0AF         	call	_strcat	;wreg free
  7966                           
  7967                           ;ring_buffer_interface.c: 181: }
  7968                           
  7969                           ;ring_buffer_interface.c: 180: break;
  7970  012D6A  D01B               	goto	l940
  7971  012D6C                     l938:
  7972  012D6C  0101               	movlb	1	; () banked
  7973  012D6E  5190               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  7974                           
  7975                           ; Switch size 1, requested type "space"
  7976                           ; Number of cases is 8, Range of values is 0 to 7
  7977                           ; switch strategies available:
  7978                           ; Name         Instructions Cycles
  7979                           ; simple_byte           25    13 (average)
  7980                           ;	Chosen strategy is simple_byte
  7981  012D70  0A00               	xorlw	0	; case 0
  7982  012D72  B4D8               	btfsc	status,2,c
  7983  012D74  D78F               	goto	l939
  7984  012D76  0A01               	xorlw	1	; case 1
  7985  012D78  B4D8               	btfsc	status,2,c
  7986  012D7A  D798               	goto	l941
  7987  012D7C  0A03               	xorlw	3	; case 2
  7988  012D7E  B4D8               	btfsc	status,2,c
  7989  012D80  D7A1               	goto	l942
  7990  012D82  0A01               	xorlw	1	; case 3
  7991  012D84  B4D8               	btfsc	status,2,c
  7992  012D86  D7AA               	goto	l943
  7993  012D88  0A07               	xorlw	7	; case 4
  7994  012D8A  B4D8               	btfsc	status,2,c
  7995  012D8C  D7B3               	goto	l944
  7996  012D8E  0A01               	xorlw	1	; case 5
  7997  012D90  B4D8               	btfsc	status,2,c
  7998  012D92  D7BC               	goto	l945
  7999  012D94  0A03               	xorlw	3	; case 6
  8000  012D96  B4D8               	btfsc	status,2,c
  8001  012D98  D7C5               	goto	l946
  8002  012D9A  0A01               	xorlw	1	; case 7
  8003  012D9C  B4D8               	btfsc	status,2,c
  8004  012D9E  D7CE               	goto	l947
  8005  012DA0  D7D9               	goto	l948
  8006  012DA2                     l940:
  8007                           
  8008                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  8009                           
  8010                           ; BSR set to: 1
  8011  012DA2  0E91               	movlw	low terminal_textAttributes@output_buff
  8012  012DA4  0101               	movlb	1	; () banked
  8013  012DA6  6F17               	movwf	strcat@to& (0+255),b
  8014  012DA8  0E01               	movlw	high terminal_textAttributes@output_buff
  8015  012DAA  6F18               	movwf	(strcat@to+1)& (0+255),b
  8016  012DAC  0EFB               	movlw	low STR_19
  8017  012DAE  6F19               	movwf	strcat@from& (0+255),b
  8018  012DB0  0EFF               	movlw	high STR_19
  8019  012DB2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8020  012DB4  EC36  F0AF         	call	_strcat	;wreg free
  8021                           
  8022                           ;ring_buffer_interface.c: 185: switch (background_color) {
  8023  012DB8  D06C               	goto	l949
  8024  012DBA                     
  8025                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  8026  012DBA  0E91               	movlw	low terminal_textAttributes@output_buff
  8027  012DBC  0101               	movlb	1	; () banked
  8028  012DBE  6F17               	movwf	strcat@to& (0+255),b
  8029  012DC0  0E01               	movlw	high terminal_textAttributes@output_buff
  8030  012DC2  6F18               	movwf	(strcat@to+1)& (0+255),b
  8031  012DC4  0EC9               	movlw	low STR_30
  8032  012DC6  6F19               	movwf	strcat@from& (0+255),b
  8033  012DC8  0EFF               	movlw	high STR_30
  8034  012DCA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8035  012DCC  EC36  F0AF         	call	_strcat	;wreg free
  8036                           
  8037                           ;ring_buffer_interface.c: 189: break;
  8038  012DD0  D07B               	goto	l951
  8039  012DD2                     
  8040                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  8041  012DD2  0E91               	movlw	low terminal_textAttributes@output_buff
  8042  012DD4  0101               	movlb	1	; () banked
  8043  012DD6  6F17               	movwf	strcat@to& (0+255),b
  8044  012DD8  0E01               	movlw	high terminal_textAttributes@output_buff
  8045  012DDA  6F18               	movwf	(strcat@to+1)& (0+255),b
  8046  012DDC  0ECF               	movlw	low STR_31
  8047  012DDE  6F19               	movwf	strcat@from& (0+255),b
  8048  012DE0  0EFF               	movlw	high STR_31
  8049  012DE2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8050  012DE4  EC36  F0AF         	call	_strcat	;wreg free
  8051                           
  8052                           ;ring_buffer_interface.c: 192: break;
  8053  012DE8  D06F               	goto	l951
  8054  012DEA                     
  8055                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  8056  012DEA  0E91               	movlw	low terminal_textAttributes@output_buff
  8057  012DEC  0101               	movlb	1	; () banked
  8058  012DEE  6F17               	movwf	strcat@to& (0+255),b
  8059  012DF0  0E01               	movlw	high terminal_textAttributes@output_buff
  8060  012DF2  6F18               	movwf	(strcat@to+1)& (0+255),b
  8061  012DF4  0ED5               	movlw	low STR_32
  8062  012DF6  6F19               	movwf	strcat@from& (0+255),b
  8063  012DF8  0EFF               	movlw	high STR_32
  8064  012DFA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8065  012DFC  EC36  F0AF         	call	_strcat	;wreg free
  8066                           
  8067                           ;ring_buffer_interface.c: 195: break;
  8068  012E00  D063               	goto	l951
  8069  012E02                     
  8070                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  8071  012E02  0E91               	movlw	low terminal_textAttributes@output_buff
  8072  012E04  0101               	movlb	1	; () banked
  8073  012E06  6F17               	movwf	strcat@to& (0+255),b
  8074  012E08  0E01               	movlw	high terminal_textAttributes@output_buff
  8075  012E0A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8076  012E0C  0EDB               	movlw	low STR_33
  8077  012E0E  6F19               	movwf	strcat@from& (0+255),b
  8078  012E10  0EFF               	movlw	high STR_33
  8079  012E12  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8080  012E14  EC36  F0AF         	call	_strcat	;wreg free
  8081                           
  8082                           ;ring_buffer_interface.c: 198: break;
  8083  012E18  D057               	goto	l951
  8084  012E1A                     
  8085                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  8086  012E1A  0E91               	movlw	low terminal_textAttributes@output_buff
  8087  012E1C  0101               	movlb	1	; () banked
  8088  012E1E  6F17               	movwf	strcat@to& (0+255),b
  8089  012E20  0E01               	movlw	high terminal_textAttributes@output_buff
  8090  012E22  6F18               	movwf	(strcat@to+1)& (0+255),b
  8091  012E24  0EE1               	movlw	low STR_34
  8092  012E26  6F19               	movwf	strcat@from& (0+255),b
  8093  012E28  0EFF               	movlw	high STR_34
  8094  012E2A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8095  012E2C  EC36  F0AF         	call	_strcat	;wreg free
  8096                           
  8097                           ;ring_buffer_interface.c: 201: break;
  8098  012E30  D04B               	goto	l951
  8099  012E32                     
  8100                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  8101  012E32  0E91               	movlw	low terminal_textAttributes@output_buff
  8102  012E34  0101               	movlb	1	; () banked
  8103  012E36  6F17               	movwf	strcat@to& (0+255),b
  8104  012E38  0E01               	movlw	high terminal_textAttributes@output_buff
  8105  012E3A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8106  012E3C  0EE7               	movlw	low STR_35
  8107  012E3E  6F19               	movwf	strcat@from& (0+255),b
  8108  012E40  0EFF               	movlw	high STR_35
  8109  012E42  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8110  012E44  EC36  F0AF         	call	_strcat	;wreg free
  8111                           
  8112                           ;ring_buffer_interface.c: 204: break;
  8113  012E48  D03F               	goto	l951
  8114  012E4A                     
  8115                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  8116  012E4A  0E91               	movlw	low terminal_textAttributes@output_buff
  8117  012E4C  0101               	movlb	1	; () banked
  8118  012E4E  6F17               	movwf	strcat@to& (0+255),b
  8119  012E50  0E01               	movlw	high terminal_textAttributes@output_buff
  8120  012E52  6F18               	movwf	(strcat@to+1)& (0+255),b
  8121  012E54  0EED               	movlw	low STR_36
  8122  012E56  6F19               	movwf	strcat@from& (0+255),b
  8123  012E58  0EFF               	movlw	high STR_36
  8124  012E5A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8125  012E5C  EC36  F0AF         	call	_strcat	;wreg free
  8126                           
  8127                           ;ring_buffer_interface.c: 207: break;
  8128  012E60  D033               	goto	l951
  8129  012E62                     
  8130                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  8131  012E62  0E91               	movlw	low terminal_textAttributes@output_buff
  8132  012E64  0101               	movlb	1	; () banked
  8133  012E66  6F17               	movwf	strcat@to& (0+255),b
  8134  012E68  0E01               	movlw	high terminal_textAttributes@output_buff
  8135  012E6A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8136  012E6C  0EF3               	movlw	low STR_37
  8137  012E6E  6F19               	movwf	strcat@from& (0+255),b
  8138  012E70  0EFF               	movlw	high STR_37
  8139  012E72  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8140  012E74  EC36  F0AF         	call	_strcat	;wreg free
  8141                           
  8142                           ;ring_buffer_interface.c: 210: break;
  8143  012E78  D027               	goto	l951
  8144  012E7A                     
  8145                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  8146  012E7A  0E91               	movlw	low terminal_textAttributes@output_buff
  8147  012E7C  0101               	movlb	1	; () banked
  8148  012E7E  6F17               	movwf	strcat@to& (0+255),b
  8149  012E80  0E01               	movlw	high terminal_textAttributes@output_buff
  8150  012E82  6F18               	movwf	(strcat@to+1)& (0+255),b
  8151  012E84  0EF3               	movlw	low STR_37
  8152  012E86  6F19               	movwf	strcat@from& (0+255),b
  8153  012E88  0EFF               	movlw	high STR_37
  8154  012E8A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8155  012E8C  EC36  F0AF         	call	_strcat	;wreg free
  8156                           
  8157                           ;ring_buffer_interface.c: 215: }
  8158                           
  8159                           ;ring_buffer_interface.c: 214: break;
  8160  012E90  D01B               	goto	l951
  8161  012E92                     l949:
  8162  012E92  0101               	movlb	1	; () banked
  8163  012E94  518E               	movf	terminal_textAttributes@background_color& (0+255),w,b
  8164                           
  8165                           ; Switch size 1, requested type "space"
  8166                           ; Number of cases is 8, Range of values is 0 to 7
  8167                           ; switch strategies available:
  8168                           ; Name         Instructions Cycles
  8169                           ; simple_byte           25    13 (average)
  8170                           ;	Chosen strategy is simple_byte
  8171  012E96  0A00               	xorlw	0	; case 0
  8172  012E98  B4D8               	btfsc	status,2,c
  8173  012E9A  D78F               	goto	l950
  8174  012E9C  0A01               	xorlw	1	; case 1
  8175  012E9E  B4D8               	btfsc	status,2,c
  8176  012EA0  D798               	goto	l952
  8177  012EA2  0A03               	xorlw	3	; case 2
  8178  012EA4  B4D8               	btfsc	status,2,c
  8179  012EA6  D7A1               	goto	l953
  8180  012EA8  0A01               	xorlw	1	; case 3
  8181  012EAA  B4D8               	btfsc	status,2,c
  8182  012EAC  D7AA               	goto	l954
  8183  012EAE  0A07               	xorlw	7	; case 4
  8184  012EB0  B4D8               	btfsc	status,2,c
  8185  012EB2  D7B3               	goto	l955
  8186  012EB4  0A01               	xorlw	1	; case 5
  8187  012EB6  B4D8               	btfsc	status,2,c
  8188  012EB8  D7BC               	goto	l956
  8189  012EBA  0A03               	xorlw	3	; case 6
  8190  012EBC  B4D8               	btfsc	status,2,c
  8191  012EBE  D7C5               	goto	l957
  8192  012EC0  0A01               	xorlw	1	; case 7
  8193  012EC2  B4D8               	btfsc	status,2,c
  8194  012EC4  D7CE               	goto	l958
  8195  012EC6  D7D9               	goto	l959
  8196  012EC8                     l951:
  8197                           
  8198                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  8199                           
  8200                           ; BSR set to: 1
  8201  012EC8  0E91               	movlw	low terminal_textAttributes@output_buff
  8202  012ECA  0101               	movlb	1	; () banked
  8203  012ECC  6F17               	movwf	strcat@to& (0+255),b
  8204  012ECE  0E01               	movlw	high terminal_textAttributes@output_buff
  8205  012ED0  6F18               	movwf	(strcat@to+1)& (0+255),b
  8206  012ED2  0EFD               	movlw	low STR_39
  8207  012ED4  6F19               	movwf	strcat@from& (0+255),b
  8208  012ED6  0EFF               	movlw	high STR_39
  8209  012ED8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8210  012EDA  EC36  F0AF         	call	_strcat	;wreg free
  8211                           
  8212                           ;ring_buffer_interface.c: 219: printf(output_buff);
  8213  012EDE  0E91               	movlw	low terminal_textAttributes@output_buff
  8214  012EE0  0101               	movlb	1	; () banked
  8215  012EE2  6F64               	movwf	printf@f& (0+255),b
  8216  012EE4  0E01               	movlw	high terminal_textAttributes@output_buff
  8217  012EE6  6F65               	movwf	(printf@f+1)& (0+255),b
  8218  012EE8  EC00  F080         	call	_printf	;wreg free
  8219  012EEC  0012               	return		;funcret
  8220  012EEE                     __end_of_terminal_textAttributes:
  8221                           	opt stack 0
  8222                           tblptru	equ	0xFF8
  8223                           tblptrh	equ	0xFF7
  8224                           tblptrl	equ	0xFF6
  8225                           tablat	equ	0xFF5
  8226                           intcon	equ	0xFF2
  8227                           postinc0	equ	0xFEE
  8228                           wreg	equ	0xFE8
  8229                           indf1	equ	0xFE7
  8230                           postdec1	equ	0xFE5
  8231                           fsr1h	equ	0xFE2
  8232                           fsr1l	equ	0xFE1
  8233                           indf2	equ	0xFDF
  8234                           postinc2	equ	0xFDE
  8235                           fsr2h	equ	0xFDA
  8236                           fsr2l	equ	0xFD9
  8237                           status	equ	0xFD8
  8238                           
  8239 ;; *************** function _strncpy *****************
  8240 ;; Defined at:
  8241 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  to              2   23[BANK1 ] PTR unsigned char 
  8244 ;;		 -> terminal_textAttributes@output_buff(15), 
  8245 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  8246 ;;		 -> STR_11(3), 
  8247 ;;  size            2   27[BANK1 ] unsigned int 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  8250 ;;		 -> terminal_textAttributes@output_buff(15), 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  2   23[BANK1 ] PTR unsigned char 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8260 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8264 ;;Total ram usage:        8 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:   14
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_terminal_textAttributes
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text6
  8275  015948                     __ptext6:
  8276                           	opt stack 0
  8277  015948                     _strncpy:
  8278                           	opt stack 14
  8279                           
  8280                           ;incstack = 0
  8281  015948  C117  F11D         	movff	strncpy@to,strncpy@cp
  8282  01594C  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  8283  015950  D018               	goto	l1899
  8284  015952  0101               	movlb	1	; () banked
  8285  015954  071B               	decf	strncpy@size& (0+255),f,b
  8286  015956  A0D8               	btfss	status,0,c
  8287  015958  071C               	decf	(strncpy@size+1)& (0+255),f,b
  8288                           
  8289                           ; BSR set to: 1
  8290  01595A  C119  FFF6         	movff	strncpy@from,tblptrl
  8291  01595E  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  8292  015962  4B19               	infsnz	strncpy@from& (0+255),f,b
  8293  015964  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  8294  015966                     	if	0	;tblptru may be non-zero
  8295  015966                     	endif
  8296  015966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8297  015966  0E00               	movlw	low (__mediumconst shr (0+16))
  8298  015968  6EF8               	movwf	tblptru,c
  8299  01596A                     	endif
  8300  01596A  C11D  FFD9         	movff	strncpy@cp,fsr2l
  8301  01596E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  8302  015972  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  8303  015974  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  8304  015976  0008               	tblrd		*
  8305  015978  CFF5 FFDF          	movff	tablat,indf2
  8306  01597C  50DF               	movf	indf2,w,c
  8307  01597E  B4D8               	btfsc	status,2,c
  8308  015980  D00E               	goto	l1901
  8309  015982                     l1899:
  8310                           
  8311                           ; BSR set to: 1
  8312                           
  8313                           ; BSR set to: 1
  8314  015982  0101               	movlb	1	; () banked
  8315  015984  511B               	movf	strncpy@size& (0+255),w,b
  8316  015986  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  8317  015988  B4D8               	btfsc	status,2,c
  8318  01598A  D009               	goto	l1901
  8319  01598C  D7E2               	goto	l1898
  8320  01598E                     l9114:
  8321                           
  8322                           ; BSR set to: 1
  8323  01598E  C11D  FFD9         	movff	strncpy@cp,fsr2l
  8324  015992  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  8325  015996  0E00               	movlw	0
  8326  015998  6EDF               	movwf	indf2,c
  8327                           
  8328                           ; BSR set to: 1
  8329  01599A  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  8330  01599C  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  8331  01599E                     l1901:
  8332                           
  8333                           ; BSR set to: 1
  8334                           
  8335                           ; BSR set to: 1
  8336  01599E  071B               	decf	strncpy@size& (0+255),f,b
  8337  0159A0  A0D8               	btfss	status,0,c
  8338  0159A2  071C               	decf	(strncpy@size+1)& (0+255),f,b
  8339  0159A4  291B               	incf	strncpy@size& (0+255),w,b
  8340  0159A6  E1F3               	bnz	l9114
  8341  0159A8  291C               	incf	(strncpy@size+1)& (0+255),w,b
  8342  0159AA  B4D8               	btfsc	status,2,c
  8343  0159AC  0012               	return	
  8344  0159AE  D7EF               	goto	l1902
  8345  0159B0                     __end_of_strncpy:
  8346                           	opt stack 0
  8347                           tblptru	equ	0xFF8
  8348                           tblptrh	equ	0xFF7
  8349                           tblptrl	equ	0xFF6
  8350                           tablat	equ	0xFF5
  8351                           intcon	equ	0xFF2
  8352                           postinc0	equ	0xFEE
  8353                           wreg	equ	0xFE8
  8354                           indf1	equ	0xFE7
  8355                           postdec1	equ	0xFE5
  8356                           fsr1h	equ	0xFE2
  8357                           fsr1l	equ	0xFE1
  8358                           indf2	equ	0xFDF
  8359                           postinc2	equ	0xFDE
  8360                           fsr2h	equ	0xFDA
  8361                           fsr2l	equ	0xFD9
  8362                           status	equ	0xFD8
  8363                           
  8364 ;; *************** function _strcat *****************
  8365 ;; Defined at:
  8366 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  to              2   23[BANK1 ] PTR unsigned char 
  8369 ;;		 -> terminal_textAttributes@output_buff(15), 
  8370 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  8371 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  8372 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  8373 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  8374 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  8375 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  8376 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  8377 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  8380 ;;		 -> terminal_textAttributes@output_buff(15), 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  2   23[BANK1 ] PTR unsigned char 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8390 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;Total ram usage:        6 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:   14
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_terminal_textAttributes
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text7
  8405  015E6C                     __ptext7:
  8406                           	opt stack 0
  8407  015E6C                     _strcat:
  8408                           	opt stack 14
  8409                           
  8410                           ; BSR set to: 1
  8411                           ;incstack = 0
  8412  015E6C  C117  F11B         	movff	strcat@to,strcat@cp
  8413  015E70  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  8414  015E74  D003               	goto	l1874
  8415  015E76  0101               	movlb	1	; () banked
  8416  015E78  4B1B               	infsnz	strcat@cp& (0+255),f,b
  8417  015E7A  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  8418  015E7C                     l1874:
  8419                           
  8420                           ; BSR set to: 1
  8421  015E7C  C11B  FFD9         	movff	strcat@cp,fsr2l
  8422  015E80  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  8423  015E84  50DF               	movf	indf2,w,c
  8424  015E86  B4D8               	btfsc	status,2,c
  8425  015E88  D006               	goto	l1877
  8426  015E8A  D7F5               	goto	l1875
  8427  015E8C  0101               	movlb	1	; () banked
  8428  015E8E  4B1B               	infsnz	strcat@cp& (0+255),f,b
  8429  015E90  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  8430  015E92  4B19               	infsnz	strcat@from& (0+255),f,b
  8431  015E94  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  8432  015E96                     l1877:
  8433                           
  8434                           ; BSR set to: 1
  8435  015E96  C119  FFF6         	movff	strcat@from,tblptrl
  8436  015E9A  C11A  FFF7         	movff	strcat@from+1,tblptrh
  8437  015E9E                     	if	0	;tblptru may be non-zero
  8438  015E9E                     	endif
  8439  015E9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8440  015E9E  0E00               	movlw	low (__mediumconst shr (0+16))
  8441  015EA0  6EF8               	movwf	tblptru,c
  8442  015EA2                     	endif
  8443  015EA2  C11B  FFD9         	movff	strcat@cp,fsr2l
  8444  015EA6  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  8445  015EAA  0008               	tblrd		*
  8446  015EAC  CFF5 FFDF          	movff	tablat,indf2
  8447  015EB0  50DF               	movf	indf2,w,c
  8448  015EB2  B4D8               	btfsc	status,2,c
  8449  015EB4  0012               	return	
  8450  015EB6  D7EA               	goto	l1878
  8451  015EB8                     __end_of_strcat:
  8452                           	opt stack 0
  8453                           tblptru	equ	0xFF8
  8454                           tblptrh	equ	0xFF7
  8455                           tblptrl	equ	0xFF6
  8456                           tablat	equ	0xFF5
  8457                           intcon	equ	0xFF2
  8458                           postinc0	equ	0xFEE
  8459                           wreg	equ	0xFE8
  8460                           indf1	equ	0xFE7
  8461                           postdec1	equ	0xFE5
  8462                           fsr1h	equ	0xFE2
  8463                           fsr1l	equ	0xFE1
  8464                           indf2	equ	0xFDF
  8465                           postinc2	equ	0xFDE
  8466                           fsr2h	equ	0xFDA
  8467                           fsr2l	equ	0xFD9
  8468                           status	equ	0xFD8
  8469                           
  8470 ;; *************** function _terminal_printNewline *****************
  8471 ;; Defined at:
  8472 ;;		line 230 in file "ring_buffer_interface.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:   18
  8493 ;; This function calls:
  8494 ;;		_printf
  8495 ;; This function is called by:
  8496 ;;		_ringBufferLUT
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text8
  8501  016440                     __ptext8:
  8502                           	opt stack 0
  8503  016440                     _terminal_printNewline:
  8504                           	opt stack 10
  8505                           
  8506                           ;ring_buffer_interface.c: 232: printf("\n\r");
  8507                           
  8508                           ;incstack = 0
  8509  016440  0EA4               	movlw	low (STR_83+68)
  8510  016442  0101               	movlb	1	; () banked
  8511  016444  6F64               	movwf	printf@f& (0+255),b
  8512  016446  0EFA               	movlw	high (STR_83+68)
  8513  016448  6F65               	movwf	(printf@f+1)& (0+255),b
  8514  01644A  EC00  F080         	call	_printf	;wreg free
  8515  01644E  0012               	return		;funcret
  8516  016450                     __end_of_terminal_printNewline:
  8517                           	opt stack 0
  8518                           tblptru	equ	0xFF8
  8519                           tblptrh	equ	0xFF7
  8520                           tblptrl	equ	0xFF6
  8521                           tablat	equ	0xFF5
  8522                           intcon	equ	0xFF2
  8523                           postinc0	equ	0xFEE
  8524                           wreg	equ	0xFE8
  8525                           indf1	equ	0xFE7
  8526                           postdec1	equ	0xFE5
  8527                           fsr1h	equ	0xFE2
  8528                           fsr1l	equ	0xFE1
  8529                           indf2	equ	0xFDF
  8530                           postinc2	equ	0xFDE
  8531                           fsr2h	equ	0xFDA
  8532                           fsr2l	equ	0xFD9
  8533                           status	equ	0xFD8
  8534                           
  8535 ;; *************** function _strstr *****************
  8536 ;; Defined at:
  8537 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  8540 ;;		 -> NULL(0), line(64), 
  8541 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  8542 ;;		 -> STR_77(25), 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  2   38[BANK1 ] PTR unsigned char 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8554 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;Total ram usage:        4 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:   15
  8561 ;; This function calls:
  8562 ;;		_strchr
  8563 ;;		_strlen
  8564 ;;		_strncmp
  8565 ;; This function is called by:
  8566 ;;		_ringBufferLUT
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text9
  8571  015464                     __ptext9:
  8572                           	opt stack 0
  8573  015464                     _strstr:
  8574                           	opt stack 13
  8575                           
  8576                           ;incstack = 0
  8577  015464  D034               	goto	l1913
  8578  015466  C126  F11D         	movff	strstr@s1,strncmp@s1
  8579  01546A  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  8580  01546E  C128  F11F         	movff	strstr@s2,strncmp@s2
  8581  015472  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  8582  015476  C128  F117         	movff	strstr@s2,strlen@s
  8583  01547A  C129  F118         	movff	strstr@s2+1,strlen@s+1
  8584  01547E  EC90  F0AE         	call	_strlen	;wreg free
  8585  015482  C117  F121         	movff	?_strlen,strncmp@len
  8586  015486  C118  F122         	movff	?_strlen+1,strncmp@len+1
  8587  01548A  ECA2  F0A9         	call	_strncmp	;wreg free
  8588  01548E  0101               	movlb	1	; () banked
  8589  015490  511D               	movf	?_strncmp& (0+255),w,b
  8590  015492  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8591  015494  A4D8               	btfss	status,2,c
  8592  015496  D005               	goto	l1915
  8593                           
  8594                           ; BSR set to: 1
  8595  015498  C126  F126         	movff	strstr@s1,?_strstr
  8596  01549C  C127  F127         	movff	strstr@s1+1,?_strstr+1
  8597                           
  8598                           ; BSR set to: 1
  8599  0154A0  0012               	return	
  8600  0154A2                     l1915:
  8601                           
  8602                           ; BSR set to: 1
  8603                           
  8604                           ; BSR set to: 1
  8605  0154A2  0E01               	movlw	1
  8606  0154A4  2526               	addwf	strstr@s1& (0+255),w,b
  8607  0154A6  6F17               	movwf	strchr@ptr& (0+255),b
  8608  0154A8  0E00               	movlw	0
  8609  0154AA  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  8610  0154AC  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  8611  0154AE  C128  FFF6         	movff	strstr@s2,tblptrl
  8612  0154B2  C129  FFF7         	movff	strstr@s2+1,tblptrh
  8613  0154B6                     	if	0	;tblptru may be non-zero
  8614  0154B6                     	endif
  8615  0154B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8616  0154B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8617  0154B8  6EF8               	movwf	tblptru,c
  8618  0154BA                     	endif
  8619  0154BA  0008               	tblrd		*
  8620  0154BC  50F5               	movf	tablat,w,c
  8621  0154BE  6F19               	movwf	strchr@chr& (0+255),b
  8622  0154C0  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  8623  0154C2  EC68  F0B0         	call	_strchr	;wreg free
  8624  0154C6  C117  F126         	movff	?_strchr,strstr@s1
  8625  0154CA  C118  F127         	movff	?_strchr+1,strstr@s1+1
  8626  0154CE                     l1913:
  8627  0154CE  0101               	movlb	1	; () banked
  8628  0154D0  5126               	movf	strstr@s1& (0+255),w,b
  8629  0154D2  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  8630  0154D4  B4D8               	btfsc	status,2,c
  8631  0154D6  D007               	goto	u11180
  8632                           
  8633                           ; BSR set to: 1
  8634  0154D8  C126  FFD9         	movff	strstr@s1,fsr2l
  8635  0154DC  C127  FFDA         	movff	strstr@s1+1,fsr2h
  8636  0154E0  50DF               	movf	indf2,w,c
  8637  0154E2  A4D8               	btfss	status,2,c
  8638  0154E4  D7C0               	goto	l1914
  8639  0154E6                     u11180:
  8640                           
  8641                           ; BSR set to: 1
  8642                           
  8643                           ; BSR set to: 1
  8644                           
  8645                           ; BSR set to: 1
  8646  0154E6  0E00               	movlw	0
  8647  0154E8  6F26               	movwf	?_strstr& (0+255),b
  8648  0154EA  0E00               	movlw	0
  8649  0154EC  6F27               	movwf	(?_strstr+1)& (0+255),b
  8650  0154EE  0012               	return	
  8651  0154F0                     __end_of_strstr:
  8652                           	opt stack 0
  8653                           tblptru	equ	0xFF8
  8654                           tblptrh	equ	0xFF7
  8655                           tblptrl	equ	0xFF6
  8656                           tablat	equ	0xFF5
  8657                           intcon	equ	0xFF2
  8658                           postinc0	equ	0xFEE
  8659                           wreg	equ	0xFE8
  8660                           indf1	equ	0xFE7
  8661                           postdec1	equ	0xFE5
  8662                           fsr1h	equ	0xFE2
  8663                           fsr1l	equ	0xFE1
  8664                           indf2	equ	0xFDF
  8665                           postinc2	equ	0xFDE
  8666                           fsr2h	equ	0xFDA
  8667                           fsr2l	equ	0xFD9
  8668                           status	equ	0xFD8
  8669                           
  8670 ;; *************** function _strncmp *****************
  8671 ;; Defined at:
  8672 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  8675 ;;		 -> NULL(0), line(64), 
  8676 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  8677 ;;		 -> STR_77(25), 
  8678 ;;  len             2   33[BANK1 ] unsigned int 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  2   29[BANK1 ] int 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8690 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:        9 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   14
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_strstr
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text10
  8705  015344                     __ptext10:
  8706                           	opt stack 0
  8707  015344                     _strncmp:
  8708                           	opt stack 13
  8709                           
  8710                           ; BSR set to: 1
  8711                           ;incstack = 0
  8712  015344  D039               	goto	l1972
  8713  015346                     l9318:
  8714  015346  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8715  01534A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8716  01534E  50DF               	movf	indf2,w,c
  8717  015350  B4D8               	btfsc	status,2,c
  8718  015352  D012               	goto	u10950
  8719  015354  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8720  015358  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8721  01535C  50DF               	movf	indf2,w,c
  8722  01535E  0101               	movlb	1	; () banked
  8723  015360  6F23               	movwf	??_strncmp& (0+255),b
  8724  015362  C11F  FFF6         	movff	strncmp@s2,tblptrl
  8725  015366  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  8726  01536A                     	if	0	;tblptru may be non-zero
  8727  01536A                     	endif
  8728  01536A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8729  01536A  0E00               	movlw	low (__mediumconst shr (0+16))
  8730  01536C  6EF8               	movwf	tblptru,c
  8731  01536E                     	endif
  8732  01536E  0008               	tblrd		*
  8733  015370  50F5               	movf	tablat,w,c
  8734  015372  1923               	xorwf	??_strncmp& (0+255),w,b
  8735  015374  B4D8               	btfsc	status,2,c
  8736  015376  D01C               	goto	l1974
  8737  015378                     u10950:
  8738                           
  8739                           ; BSR set to: 1
  8740  015378  C11F  FFF6         	movff	strncmp@s2,tblptrl
  8741  01537C  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  8742  015380                     	if	0	;tblptru may be non-zero
  8743  015380                     	endif
  8744  015380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8745  015380  0E00               	movlw	low (__mediumconst shr (0+16))
  8746  015382  6EF8               	movwf	tblptru,c
  8747  015384                     	endif
  8748  015384  0008               	tblrd		*
  8749  015386  50F5               	movf	tablat,w,c
  8750  015388  0101               	movlb	1	; () banked
  8751  01538A  6F23               	movwf	??_strncmp& (0+255),b
  8752  01538C  6B24               	clrf	(??_strncmp+1)& (0+255),b
  8753  01538E  1F23               	comf	??_strncmp& (0+255),f,b
  8754  015390  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  8755  015392  4B23               	infsnz	??_strncmp& (0+255),f,b
  8756  015394  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  8757  015396  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8758  01539A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8759  01539E  50DF               	movf	indf2,w,c
  8760  0153A0  6F25               	movwf	(??_strncmp+2)& (0+255),b
  8761  0153A2  5125               	movf	(??_strncmp+2)& (0+255),w,b
  8762  0153A4  2523               	addwf	??_strncmp& (0+255),w,b
  8763  0153A6  6F1D               	movwf	?_strncmp& (0+255),b
  8764  0153A8  0E00               	movlw	0
  8765  0153AA  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  8766  0153AC  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  8767                           
  8768                           ; BSR set to: 1
  8769  0153AE  0012               	return	
  8770  0153B0                     l1974:
  8771                           
  8772                           ; BSR set to: 1
  8773                           
  8774                           ; BSR set to: 1
  8775  0153B0  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  8776  0153B2  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  8777  0153B4  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  8778  0153B6  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  8779  0153B8                     l1972:
  8780                           
  8781                           ; BSR set to: 1
  8782  0153B8  0101               	movlb	1	; () banked
  8783  0153BA  0721               	decf	strncmp@len& (0+255),f,b
  8784  0153BC  A0D8               	btfss	status,0,c
  8785  0153BE  0722               	decf	(strncmp@len+1)& (0+255),f,b
  8786  0153C0  2921               	incf	strncmp@len& (0+255),w,b
  8787  0153C2  E1C1               	bnz	l9318
  8788  0153C4  2922               	incf	(strncmp@len+1)& (0+255),w,b
  8789  0153C6  A4D8               	btfss	status,2,c
  8790  0153C8  D7BE               	goto	l1973
  8791                           
  8792                           ; BSR set to: 1
  8793                           
  8794                           ; BSR set to: 1
  8795  0153CA  0E00               	movlw	0
  8796  0153CC  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  8797  0153CE  0E00               	movlw	0
  8798  0153D0  6F1D               	movwf	?_strncmp& (0+255),b
  8799  0153D2  0012               	return	
  8800  0153D4                     __end_of_strncmp:
  8801                           	opt stack 0
  8802                           tblptru	equ	0xFF8
  8803                           tblptrh	equ	0xFF7
  8804                           tblptrl	equ	0xFF6
  8805                           tablat	equ	0xFF5
  8806                           intcon	equ	0xFF2
  8807                           postinc0	equ	0xFEE
  8808                           wreg	equ	0xFE8
  8809                           indf1	equ	0xFE7
  8810                           postdec1	equ	0xFE5
  8811                           fsr1h	equ	0xFE2
  8812                           fsr1l	equ	0xFE1
  8813                           indf2	equ	0xFDF
  8814                           postinc2	equ	0xFDE
  8815                           fsr2h	equ	0xFDA
  8816                           fsr2l	equ	0xFD9
  8817                           status	equ	0xFD8
  8818                           
  8819 ;; *************** function _strlen *****************
  8820 ;; Defined at:
  8821 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  8824 ;;		 -> STR_77(25), line(64), 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  8827 ;;		 -> STR_77(25), line(64), 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  2   23[BANK1 ] unsigned int 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8837 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8838 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8839 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8840 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8841 ;;Total ram usage:        6 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:   14
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_terminal_ringBufferPull
  8848 ;;		_strstr
  8849 ;; This function uses a non-reentrant model
  8850 ;;
  8851                           
  8852                           	psect	text11
  8853  015D20                     __ptext11:
  8854                           	opt stack 0
  8855  015D20                     _strlen:
  8856                           	opt stack 15
  8857                           
  8858                           ; BSR set to: 1
  8859                           ;incstack = 0
  8860  015D20  C117  F11B         	movff	strlen@s,strlen@cp
  8861  015D24  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  8862  015D28  D003               	goto	l1891
  8863  015D2A  0101               	movlb	1	; () banked
  8864  015D2C  4B1B               	infsnz	strlen@cp& (0+255),f,b
  8865  015D2E  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  8866  015D30                     l1891:
  8867                           
  8868                           ; BSR set to: 1
  8869  015D30  C11B  FFF6         	movff	strlen@cp,tblptrl
  8870  015D34  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  8871  015D38  0E00               	movlw	low (__mediumconst shr (0+16))
  8872  015D3A  6EF8               	movwf	tblptru,c
  8873  015D3C  0E0D               	movlw	(high __ramtop+-1)
  8874  015D3E  64F7               	cpfsgt	tblptrh,c
  8875  015D40  D003               	bra	u10927
  8876  015D42  0008               	tblrd		*
  8877  015D44  50F5               	movf	tablat,w,c
  8878  015D46  D005               	bra	u10920
  8879  015D48                     u10927:
  8880  015D48  CFF6 FFE1          	movff	tblptrl,fsr1l
  8881  015D4C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8882  015D50  50E7               	movf	indf1,w,c
  8883  015D52                     u10920:
  8884  015D52  0900               	iorlw	0
  8885  015D54  A4D8               	btfss	status,2,c
  8886  015D56  D7E9               	goto	l1892
  8887  015D58  C117  F119         	movff	strlen@s,??_strlen
  8888  015D5C  C118  F11A         	movff	strlen@s+1,??_strlen+1
  8889  015D60  0101               	movlb	1	; () banked
  8890  015D62  1F19               	comf	??_strlen& (0+255),f,b
  8891  015D64  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  8892  015D66  4B19               	infsnz	??_strlen& (0+255),f,b
  8893  015D68  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  8894  015D6A  511B               	movf	strlen@cp& (0+255),w,b
  8895  015D6C  2519               	addwf	??_strlen& (0+255),w,b
  8896  015D6E  6F17               	movwf	?_strlen& (0+255),b
  8897  015D70  511C               	movf	(strlen@cp+1)& (0+255),w,b
  8898  015D72  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  8899  015D74  6F18               	movwf	(?_strlen+1)& (0+255),b
  8900  015D76  0012               	return	
  8901  015D78                     __end_of_strlen:
  8902                           	opt stack 0
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           intcon	equ	0xFF2
  8908                           postinc0	equ	0xFEE
  8909                           wreg	equ	0xFE8
  8910                           indf1	equ	0xFE7
  8911                           postdec1	equ	0xFE5
  8912                           fsr1h	equ	0xFE2
  8913                           fsr1l	equ	0xFE1
  8914                           indf2	equ	0xFDF
  8915                           postinc2	equ	0xFDE
  8916                           fsr2h	equ	0xFDA
  8917                           fsr2l	equ	0xFD9
  8918                           status	equ	0xFD8
  8919                           
  8920 ;; *************** function _strchr *****************
  8921 ;; Defined at:
  8922 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  8925 ;;		 -> NULL(0), line(64), 
  8926 ;;  chr             2   25[BANK1 ] int 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  2   23[BANK1 ] PTR unsigned char 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8938 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8940 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8941 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;Total ram usage:        5 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:   14
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_strstr
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           	psect	text12
  8953  0160D0                     __ptext12:
  8954                           	opt stack 0
  8955  0160D0                     _strchr:
  8956                           	opt stack 13
  8957                           
  8958                           ; BSR set to: 1
  8959                           ;incstack = 0
  8960  0160D0  C117  FFD9         	movff	strchr@ptr,fsr2l
  8961  0160D4  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8962  0160D8  0101               	movlb	1	; () banked
  8963  0160DA  5119               	movf	strchr@chr& (0+255),w,b
  8964  0160DC  18DE               	xorwf	postinc2,w,c
  8965  0160DE  A4D8               	btfss	status,2,c
  8966  0160E0  D005               	goto	l1967
  8967                           
  8968                           ; BSR set to: 1
  8969  0160E2  C117  F117         	movff	strchr@ptr,?_strchr
  8970  0160E6  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  8971                           
  8972                           ; BSR set to: 1
  8973  0160EA  0012               	return	
  8974  0160EC                     l1967:
  8975                           
  8976                           ; BSR set to: 1
  8977                           
  8978                           ; BSR set to: 1
  8979  0160EC  C117  FFD9         	movff	strchr@ptr,fsr2l
  8980  0160F0  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8981  0160F4  4B17               	infsnz	strchr@ptr& (0+255),f,b
  8982  0160F6  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  8983  0160F8  50DF               	movf	indf2,w,c
  8984  0160FA  A4D8               	btfss	status,2,c
  8985  0160FC  D7E9               	goto	_strchr
  8986                           
  8987                           ; BSR set to: 1
  8988                           
  8989                           ; BSR set to: 1
  8990  0160FE  0E00               	movlw	0
  8991  016100  6F17               	movwf	?_strchr& (0+255),b
  8992  016102  0E00               	movlw	0
  8993  016104  6F18               	movwf	(?_strchr+1)& (0+255),b
  8994  016106  0012               	return	
  8995  016108                     __end_of_strchr:
  8996                           	opt stack 0
  8997                           tblptru	equ	0xFF8
  8998                           tblptrh	equ	0xFF7
  8999                           tblptrl	equ	0xFF6
  9000                           tablat	equ	0xFF5
  9001                           intcon	equ	0xFF2
  9002                           postinc0	equ	0xFEE
  9003                           wreg	equ	0xFE8
  9004                           indf1	equ	0xFE7
  9005                           postdec1	equ	0xFE5
  9006                           fsr1h	equ	0xFE2
  9007                           fsr1l	equ	0xFE1
  9008                           indf2	equ	0xFDF
  9009                           postinc2	equ	0xFDE
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8
  9013                           
  9014 ;; *************** function _strcmp *****************
  9015 ;; Defined at:
  9016 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  9019 ;;		 -> line(64), 
  9020 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  9021 ;;		 -> STR_88(5), STR_86(14), STR_84(16), STR_75(13), 
  9022 ;;		 -> STR_73(12), STR_71(16), STR_69(15), STR_67(15), 
  9023 ;;		 -> STR_65(21), STR_63(21), STR_61(26), STR_59(14), 
  9024 ;;		 -> STR_57(13), STR_55(18), STR_53(15), STR_51(16), 
  9025 ;;		 -> STR_48(4), STR_47(6), STR_44(6), STR_41(6), 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  r               1   28[BANK1 ] char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  2   23[BANK1 ] int 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9037 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9038 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9039 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9040 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9041 ;;Total ram usage:        6 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:   14
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_ringBufferLUT
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text13
  9052  015DCE                     __ptext13:
  9053                           	opt stack 0
  9054  015DCE                     _strcmp:
  9055                           	opt stack 14
  9056                           
  9057                           ; BSR set to: 1
  9058                           ;incstack = 0
  9059  015DCE  D005               	goto	l1883
  9060  015DD0  0101               	movlb	1	; () banked
  9061  015DD2  4B17               	infsnz	strcmp@s1& (0+255),f,b
  9062  015DD4  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  9063  015DD6  4B19               	infsnz	strcmp@s2& (0+255),f,b
  9064  015DD8  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  9065  015DDA                     l1883:
  9066                           
  9067                           ; BSR set to: 1
  9068  015DDA  C117  FFD9         	movff	strcmp@s1,fsr2l
  9069  015DDE  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  9070  015DE2  50DF               	movf	indf2,w,c
  9071  015DE4  0101               	movlb	1	; () banked
  9072  015DE6  6F1B               	movwf	??_strcmp& (0+255),b
  9073  015DE8  C119  FFF6         	movff	strcmp@s2,tblptrl
  9074  015DEC  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  9075  015DF0                     	if	0	;tblptru may be non-zero
  9076  015DF0                     	endif
  9077  015DF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9078  015DF0  0E00               	movlw	low (__mediumconst shr (0+16))
  9079  015DF2  6EF8               	movwf	tblptru,c
  9080  015DF4                     	endif
  9081  015DF4  0008               	tblrd		*
  9082  015DF6  50F5               	movf	tablat,w,c
  9083  015DF8  0800               	sublw	0
  9084  015DFA  251B               	addwf	??_strcmp& (0+255),w,b
  9085  015DFC  6F1C               	movwf	strcmp@r& (0+255),b
  9086  015DFE  511C               	movf	strcmp@r& (0+255),w,b
  9087  015E00  A4D8               	btfss	status,2,c
  9088  015E02  D007               	goto	u11150
  9089                           
  9090                           ; BSR set to: 1
  9091  015E04  C117  FFD9         	movff	strcmp@s1,fsr2l
  9092  015E08  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  9093  015E0C  50DF               	movf	indf2,w,c
  9094  015E0E  A4D8               	btfss	status,2,c
  9095  015E10  D7DF               	goto	l1884
  9096  015E12                     u11150:
  9097                           
  9098                           ; BSR set to: 1
  9099                           
  9100                           ; BSR set to: 1
  9101                           
  9102                           ; BSR set to: 1
  9103  015E12  511C               	movf	strcmp@r& (0+255),w,b
  9104  015E14  6F17               	movwf	?_strcmp& (0+255),b
  9105  015E16  6B18               	clrf	(?_strcmp+1)& (0+255),b
  9106  015E18  BF17               	btfsc	?_strcmp& (0+255),7,b
  9107  015E1A  0718               	decf	(?_strcmp+1)& (0+255),f,b
  9108  015E1C  0012               	return	
  9109  015E1E                     __end_of_strcmp:
  9110                           	opt stack 0
  9111                           tblptru	equ	0xFF8
  9112                           tblptrh	equ	0xFF7
  9113                           tblptrl	equ	0xFF6
  9114                           tablat	equ	0xFF5
  9115                           intcon	equ	0xFF2
  9116                           postinc0	equ	0xFEE
  9117                           wreg	equ	0xFE8
  9118                           indf1	equ	0xFE7
  9119                           postdec1	equ	0xFE5
  9120                           fsr1h	equ	0xFE2
  9121                           fsr1l	equ	0xFE1
  9122                           indf2	equ	0xFDF
  9123                           postinc2	equ	0xFDE
  9124                           fsr2h	equ	0xFDA
  9125                           fsr2l	equ	0xFD9
  9126                           status	equ	0xFD8
  9127                           
  9128 ;; *************** function _atoi *****************
  9129 ;; Defined at:
  9130 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  9133 ;;		 -> ringBufferLUT@arg_buff(3), 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  a               2   48[BANK1 ] int 
  9136 ;;  sign            1   47[BANK1 ] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  2   43[BANK1 ] int 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;Total ram usage:        7 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:   15
  9153 ;; This function calls:
  9154 ;;		___wmul
  9155 ;;		_isdigit
  9156 ;; This function is called by:
  9157 ;;		_ringBufferLUT
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text14
  9162  014E64                     __ptext14:
  9163                           	opt stack 0
  9164  014E64                     _atoi:
  9165                           	opt stack 13
  9166                           
  9167                           ; BSR set to: 1
  9168                           ;incstack = 0
  9169  014E64  D003               	goto	l1396
  9170  014E66  0101               	movlb	1	; () banked
  9171  014E68  4B2B               	infsnz	atoi@s& (0+255),f,b
  9172  014E6A  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  9173  014E6C                     l1396:
  9174                           
  9175                           ; BSR set to: 1
  9176  014E6C  C12B  FFD9         	movff	atoi@s,fsr2l
  9177  014E70  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9178  014E74  0E20               	movlw	32
  9179  014E76  18DE               	xorwf	postinc2,w,c
  9180  014E78  B4D8               	btfsc	status,2,c
  9181  014E7A  D7F5               	goto	l1397
  9182  014E7C  C12B  FFD9         	movff	atoi@s,fsr2l
  9183  014E80  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9184  014E84  0E09               	movlw	9
  9185  014E86  18DE               	xorwf	postinc2,w,c
  9186  014E88  B4D8               	btfsc	status,2,c
  9187  014E8A  D7ED               	goto	l1397
  9188  014E8C  0E00               	movlw	0
  9189  014E8E  0101               	movlb	1	; () banked
  9190  014E90  6F31               	movwf	(atoi@a+1)& (0+255),b
  9191  014E92  0E00               	movlw	0
  9192  014E94  6F30               	movwf	atoi@a& (0+255),b
  9193  014E96  0E00               	movlw	0
  9194  014E98  6F2F               	movwf	atoi@sign& (0+255),b
  9195                           
  9196                           ; BSR set to: 1
  9197  014E9A  C12B  FFD9         	movff	atoi@s,fsr2l
  9198  014E9E  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9199  014EA2  0E2D               	movlw	45
  9200  014EA4  18DE               	xorwf	postinc2,w,c
  9201  014EA6  A4D8               	btfss	status,2,c
  9202  014EA8  D002               	goto	l1399
  9203                           
  9204                           ; BSR set to: 1
  9205  014EAA  2B2F               	incf	atoi@sign& (0+255),f,b
  9206  014EAC  D026               	goto	l9546
  9207  014EAE                     l1399:
  9208                           
  9209                           ; BSR set to: 1
  9210                           
  9211                           ; BSR set to: 1
  9212  014EAE  C12B  FFD9         	movff	atoi@s,fsr2l
  9213  014EB2  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9214  014EB6  0E2B               	movlw	43
  9215  014EB8  18DE               	xorwf	postinc2,w,c
  9216  014EBA  A4D8               	btfss	status,2,c
  9217  014EBC  D020               	goto	l1402
  9218  014EBE  D01D               	goto	l9546
  9219  014EC0                     
  9220                           ; BSR set to: 1
  9221  014EC0  C130  F125         	movff	atoi@a,___wmul@multiplier
  9222  014EC4  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
  9223  014EC8  0E00               	movlw	0
  9224  014ECA  0101               	movlb	1	; () banked
  9225  014ECC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9226  014ECE  0E0A               	movlw	10
  9227  014ED0  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9228  014ED2  EC19  F0B1         	call	___wmul	;wreg free
  9229  014ED6  C12B  FFD9         	movff	atoi@s,fsr2l
  9230  014EDA  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9231  014EDE  50DF               	movf	indf2,w,c
  9232  014EE0  0101               	movlb	1	; () banked
  9233  014EE2  6F2D               	movwf	??_atoi& (0+255),b
  9234  014EE4  6B2E               	clrf	(??_atoi+1)& (0+255),b
  9235  014EE6  5125               	movf	?___wmul& (0+255),w,b
  9236  014EE8  272D               	addwf	??_atoi& (0+255),f,b
  9237  014EEA  5126               	movf	(?___wmul+1)& (0+255),w,b
  9238  014EEC  232E               	addwfc	(??_atoi+1)& (0+255),f,b
  9239  014EEE  0ED0               	movlw	208
  9240  014EF0  252D               	addwf	??_atoi& (0+255),w,b
  9241  014EF2  6F30               	movwf	atoi@a& (0+255),b
  9242  014EF4  0EFF               	movlw	255
  9243  014EF6  212E               	addwfc	(??_atoi+1)& (0+255),w,b
  9244  014EF8  6F31               	movwf	(atoi@a+1)& (0+255),b
  9245  014EFA                     l9546:
  9246                           
  9247                           ; BSR set to: 1
  9248  014EFA  4B2B               	infsnz	atoi@s& (0+255),f,b
  9249  014EFC  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  9250  014EFE                     l1402:
  9251                           
  9252                           ; BSR set to: 1
  9253                           
  9254                           ; BSR set to: 1
  9255  014EFE  C12B  FFD9         	movff	atoi@s,fsr2l
  9256  014F02  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9257  014F06  50DF               	movf	indf2,w,c
  9258  014F08  ECB2  F0B1         	call	_isdigit
  9259  014F0C  B0D8               	btfsc	status,0,c
  9260  014F0E  D7D8               	goto	l1403
  9261  014F10  0101               	movlb	1	; () banked
  9262  014F12  512F               	movf	atoi@sign& (0+255),w,b
  9263  014F14  B4D8               	btfsc	status,2,c
  9264  014F16  D00D               	goto	l1405
  9265                           
  9266                           ; BSR set to: 1
  9267  014F18  C130  F12D         	movff	atoi@a,??_atoi
  9268  014F1C  C131  F12E         	movff	atoi@a+1,??_atoi+1
  9269  014F20  1F2D               	comf	??_atoi& (0+255),f,b
  9270  014F22  1F2E               	comf	(??_atoi+1)& (0+255),f,b
  9271  014F24  4B2D               	infsnz	??_atoi& (0+255),f,b
  9272  014F26  2B2E               	incf	(??_atoi+1)& (0+255),f,b
  9273  014F28  C12D  F12B         	movff	??_atoi,?_atoi
  9274  014F2C  C12E  F12C         	movff	??_atoi+1,?_atoi+1
  9275  014F30  0012               	return	
  9276  014F32                     l1405:
  9277                           
  9278                           ; BSR set to: 1
  9279  014F32  C130  F12B         	movff	atoi@a,?_atoi
  9280  014F36  C131  F12C         	movff	atoi@a+1,?_atoi+1
  9281                           
  9282                           ; BSR set to: 1
  9283  014F3A  0012               	return		;funcret
  9284  014F3C                     __end_of_atoi:
  9285                           	opt stack 0
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           intcon	equ	0xFF2
  9291                           postinc0	equ	0xFEE
  9292                           wreg	equ	0xFE8
  9293                           indf1	equ	0xFE7
  9294                           postdec1	equ	0xFE5
  9295                           fsr1h	equ	0xFE2
  9296                           fsr1l	equ	0xFE1
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           fsr2h	equ	0xFDA
  9300                           fsr2l	equ	0xFD9
  9301                           status	equ	0xFD8
  9302                           
  9303 ;; *************** function ___ftdiv *****************
  9304 ;; Defined at:
  9305 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;  f1              3   55[BANK1 ] float 
  9308 ;;  f2              3   58[BANK1 ] float 
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  f3              3   65[BANK1 ] float 
  9311 ;;  sign            1   69[BANK1 ] unsigned char 
  9312 ;;  exp             1   68[BANK1 ] unsigned char 
  9313 ;;  cntr            1   64[BANK1 ] unsigned char 
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  3   55[BANK1 ] float 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0, cstack
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9323 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9327 ;;Total ram usage:       15 bytes
  9328 ;; Hardware stack levels used:    1
  9329 ;; Hardware stack levels required when called:   15
  9330 ;; This function calls:
  9331 ;;		___ftpack
  9332 ;; This function is called by:
  9333 ;;		_ringBufferLUT
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text15
  9338  014ADE                     __ptext15:
  9339                           	opt stack 0
  9340  014ADE                     ___ftdiv:
  9341                           	opt stack 13
  9342                           
  9343                           ; BSR set to: 1
  9344                           ;incstack = 0
  9345  014ADE  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
  9346  014AE2  0101               	movlb	1	; () banked
  9347  014AE4  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  9348  014AE6  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  9349  014AE8  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9350  014AEA  373D               	rlcf	??___ftdiv& (0+255),f,b
  9351  014AEC  E301               	bnc	u11251
  9352  014AEE  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  9353  014AF0                     u11251:
  9354  014AF0  513D               	movf	??___ftdiv& (0+255),w,b
  9355  014AF2  6F44               	movwf	___ftdiv@exp& (0+255),b
  9356  014AF4  5144               	movf	___ftdiv@exp& (0+255),w,b
  9357  014AF6  A4D8               	btfss	status,2,c
  9358  014AF8  D007               	goto	l1555
  9359                           
  9360                           ; BSR set to: 1
  9361  014AFA  0E00               	movlw	0
  9362  014AFC  6F37               	movwf	?___ftdiv& (0+255),b
  9363  014AFE  0E00               	movlw	0
  9364  014B00  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  9365  014B02  0E00               	movlw	0
  9366  014B04  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  9367                           
  9368                           ; BSR set to: 1
  9369  014B06  0012               	return	
  9370  014B08                     l1555:
  9371                           
  9372                           ; BSR set to: 1
  9373                           
  9374                           ; BSR set to: 1
  9375  014B08  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
  9376  014B0C  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  9377  014B0E  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  9378  014B10  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9379  014B12  373D               	rlcf	??___ftdiv& (0+255),f,b
  9380  014B14  E301               	bnc	u11271
  9381  014B16  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  9382  014B18                     u11271:
  9383  014B18  513D               	movf	??___ftdiv& (0+255),w,b
  9384  014B1A  6F45               	movwf	___ftdiv@sign& (0+255),b
  9385  014B1C  5145               	movf	___ftdiv@sign& (0+255),w,b
  9386  014B1E  A4D8               	btfss	status,2,c
  9387  014B20  D007               	goto	l1557
  9388                           
  9389                           ; BSR set to: 1
  9390  014B22  0E00               	movlw	0
  9391  014B24  6F37               	movwf	?___ftdiv& (0+255),b
  9392  014B26  0E00               	movlw	0
  9393  014B28  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  9394  014B2A  0E00               	movlw	0
  9395  014B2C  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  9396                           
  9397                           ; BSR set to: 1
  9398  014B2E  0012               	return	
  9399  014B30                     l1557:
  9400                           
  9401                           ; BSR set to: 1
  9402                           
  9403                           ; BSR set to: 1
  9404  014B30  0E00               	movlw	0
  9405  014B32  6F41               	movwf	___ftdiv@f3& (0+255),b
  9406  014B34  0E00               	movlw	0
  9407  014B36  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
  9408  014B38  0E00               	movlw	0
  9409  014B3A  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
  9410                           
  9411                           ; BSR set to: 1
  9412  014B3C  5145               	movf	___ftdiv@sign& (0+255),w,b
  9413  014B3E  0F89               	addlw	137
  9414  014B40  5F44               	subwf	___ftdiv@exp& (0+255),f,b
  9415                           
  9416                           ; BSR set to: 1
  9417  014B42  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
  9418                           
  9419                           ; BSR set to: 1
  9420  014B46  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9421  014B48  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
  9422                           
  9423                           ; BSR set to: 1
  9424  014B4A  0E80               	movlw	128
  9425  014B4C  1745               	andwf	___ftdiv@sign& (0+255),f,b
  9426                           
  9427                           ; BSR set to: 1
  9428  014B4E  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9429                           
  9430                           ; BSR set to: 1
  9431  014B50  0EFF               	movlw	255
  9432  014B52  1737               	andwf	___ftdiv@f1& (0+255),f,b
  9433  014B54  0EFF               	movlw	255
  9434  014B56  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9435  014B58  0E00               	movlw	0
  9436  014B5A  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9437                           
  9438                           ; BSR set to: 1
  9439  014B5C  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9440                           
  9441                           ; BSR set to: 1
  9442  014B5E  0EFF               	movlw	255
  9443  014B60  173A               	andwf	___ftdiv@f2& (0+255),f,b
  9444  014B62  0EFF               	movlw	255
  9445  014B64  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9446  014B66  0E00               	movlw	0
  9447  014B68  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9448                           
  9449                           ; BSR set to: 1
  9450  014B6A  0E18               	movlw	24
  9451  014B6C  6F40               	movwf	___ftdiv@cntr& (0+255),b
  9452  014B6E                     
  9453                           ; BSR set to: 1
  9454                           
  9455                           ; BSR set to: 1
  9456  014B6E  90D8               	bcf	status,0,c
  9457  014B70  3741               	rlcf	___ftdiv@f3& (0+255),f,b
  9458  014B72  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9459  014B74  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9460                           
  9461                           ; BSR set to: 1
  9462  014B76  513A               	movf	___ftdiv@f2& (0+255),w,b
  9463  014B78  5D37               	subwf	___ftdiv@f1& (0+255),w,b
  9464  014B7A  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9465  014B7C  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9466  014B7E  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9467  014B80  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9468  014B82  A0D8               	btfss	status,0,c
  9469  014B84  D007               	goto	l1559
  9470                           
  9471                           ; BSR set to: 1
  9472  014B86  513A               	movf	___ftdiv@f2& (0+255),w,b
  9473  014B88  5F37               	subwf	___ftdiv@f1& (0+255),f,b
  9474  014B8A  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9475  014B8C  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9476  014B8E  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9477  014B90  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9478                           
  9479                           ; BSR set to: 1
  9480  014B92  8141               	bsf	___ftdiv@f3& (0+255),0,b
  9481  014B94                     l1559:
  9482                           
  9483                           ; BSR set to: 1
  9484  014B94  90D8               	bcf	status,0,c
  9485  014B96  3737               	rlcf	___ftdiv@f1& (0+255),f,b
  9486  014B98  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9487  014B9A  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9488                           
  9489                           ; BSR set to: 1
  9490  014B9C  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
  9491  014B9E  D7E7               	goto	l1558
  9492                           
  9493                           ; BSR set to: 1
  9494                           
  9495                           ; BSR set to: 1
  9496  014BA0  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
  9497  014BA4  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9498  014BA8  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9499  014BAC  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
  9500  014BB0  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
  9501  014BB4  EC04  F0A8         	call	___ftpack	;wreg free
  9502  014BB8  C117  F137         	movff	?___ftpack,?___ftdiv
  9503  014BBC  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
  9504  014BC0  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
  9505  014BC4  0012               	return	
  9506  014BC6                     __end_of___ftdiv:
  9507                           	opt stack 0
  9508                           tblptru	equ	0xFF8
  9509                           tblptrh	equ	0xFF7
  9510                           tblptrl	equ	0xFF6
  9511                           tablat	equ	0xFF5
  9512                           intcon	equ	0xFF2
  9513                           postinc0	equ	0xFEE
  9514                           wreg	equ	0xFE8
  9515                           indf1	equ	0xFE7
  9516                           postdec1	equ	0xFE5
  9517                           fsr1h	equ	0xFE2
  9518                           fsr1l	equ	0xFE1
  9519                           indf2	equ	0xFDF
  9520                           postinc2	equ	0xFDE
  9521                           fsr2h	equ	0xFDA
  9522                           fsr2l	equ	0xFD9
  9523                           status	equ	0xFD8
  9524                           
  9525 ;; *************** function ___awtoft *****************
  9526 ;; Defined at:
  9527 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  c               2   31[BANK1 ] int 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;  sign            1   34[BANK1 ] unsigned char 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  3   31[BANK1 ] float 
  9534 ;; Registers used:
  9535 ;;		wreg, status,2, status,0, cstack
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9541 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;Total ram usage:        4 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:   15
  9548 ;; This function calls:
  9549 ;;		___ftpack
  9550 ;; This function is called by:
  9551 ;;		_ringBufferLUT
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text16
  9556  016096                     __ptext16:
  9557                           	opt stack 0
  9558  016096                     ___awtoft:
  9559                           	opt stack 13
  9560                           
  9561                           ;incstack = 0
  9562  016096  0E00               	movlw	0
  9563  016098  0101               	movlb	1	; () banked
  9564  01609A  6F22               	movwf	___awtoft@sign& (0+255),b
  9565                           
  9566                           ; BSR set to: 1
  9567  01609C  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
  9568  01609E  D006               	goto	l1443
  9569                           
  9570                           ; BSR set to: 1
  9571  0160A0  6D1F               	negf	___awtoft@c& (0+255),b
  9572  0160A2  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
  9573  0160A4  B0D8               	btfsc	status,0,c
  9574  0160A6  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
  9575                           
  9576                           ; BSR set to: 1
  9577  0160A8  0E01               	movlw	1
  9578  0160AA  6F22               	movwf	___awtoft@sign& (0+255),b
  9579  0160AC                     l1443:
  9580                           
  9581                           ; BSR set to: 1
  9582                           
  9583                           ; BSR set to: 1
  9584  0160AC  C11F  F117         	movff	___awtoft@c,___ftpack@arg
  9585  0160B0  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
  9586  0160B4  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
  9587  0160B6  0E8E               	movlw	142
  9588  0160B8  6F1A               	movwf	___ftpack@exp& (0+255),b
  9589  0160BA  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
  9590  0160BE  EC04  F0A8         	call	___ftpack	;wreg free
  9591  0160C2  C117  F11F         	movff	?___ftpack,?___awtoft
  9592  0160C6  C118  F120         	movff	?___ftpack+1,?___awtoft+1
  9593  0160CA  C119  F121         	movff	?___ftpack+2,?___awtoft+2
  9594  0160CE  0012               	return	
  9595  0160D0                     __end_of___awtoft:
  9596                           	opt stack 0
  9597                           tblptru	equ	0xFF8
  9598                           tblptrh	equ	0xFF7
  9599                           tblptrl	equ	0xFF6
  9600                           tablat	equ	0xFF5
  9601                           intcon	equ	0xFF2
  9602                           postinc0	equ	0xFEE
  9603                           wreg	equ	0xFE8
  9604                           indf1	equ	0xFE7
  9605                           postdec1	equ	0xFE5
  9606                           fsr1h	equ	0xFE2
  9607                           fsr1l	equ	0xFE1
  9608                           indf2	equ	0xFDF
  9609                           postinc2	equ	0xFDE
  9610                           fsr2h	equ	0xFDA
  9611                           fsr2l	equ	0xFD9
  9612                           status	equ	0xFD8
  9613                           
  9614 ;; *************** function _EUSART2_Read *****************
  9615 ;; Defined at:
  9616 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;		None
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  readValue       1   23[BANK1 ] unsigned char 
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  1    wreg      unsigned char 
  9623 ;; Registers used:
  9624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;Total ram usage:        1 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; Hardware stack levels required when called:   14
  9637 ;; This function calls:
  9638 ;;		Nothing
  9639 ;; This function is called by:
  9640 ;;		_terminal_ringBufferPull
  9641 ;;		_getch
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text17
  9646  015F90                     __ptext17:
  9647                           	opt stack 0
  9648  015F90                     _EUSART2_Read:
  9649                           	opt stack 15
  9650                           
  9651                           ;eusart2.c: 132: uint8_t readValue = 0;
  9652                           
  9653                           ;incstack = 0
  9654  015F90  0E00               	movlw	0
  9655  015F92  0101               	movlb	1	; () banked
  9656  015F94  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  9657                           
  9658                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  9659  015F96  D001               	goto	l367
  9660  015F98                     l368:
  9661                           
  9662                           ; BSR set to: 1
  9663  015F98  0004               	clrwdt		;# 
  9664  015F9A                     l367:
  9665  015F9A  0101               	movlb	1	; () banked
  9666  015F9C  51DA               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  9667  015F9E  B4D8               	btfsc	status,2,c
  9668  015FA0  D7FB               	goto	l368
  9669                           
  9670                           ; BSR set to: 1
  9671                           ;eusart2.c: 137: }
  9672                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  9673                           
  9674                           ; BSR set to: 1
  9675  015FA2  51DB               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  9676  015FA4  0D01               	mullw	1
  9677  015FA6  0E80               	movlw	low _eusart2RxBuffer
  9678  015FA8  24F3               	addwf	prodl,w,c
  9679  015FAA  6ED9               	movwf	fsr2l,c
  9680  015FAC  0E02               	movlw	high _eusart2RxBuffer
  9681  015FAE  20F4               	addwfc	prodh,w,c
  9682  015FB0  6EDA               	movwf	fsr2h,c
  9683  015FB2  50DF               	movf	indf2,w,c
  9684  015FB4  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  9685                           
  9686                           ; BSR set to: 1
  9687  015FB6  2BDB               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  9688                           
  9689                           ; BSR set to: 1
  9690                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  9691  015FB8  0E3F               	movlw	63
  9692  015FBA  65DB               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  9693  015FBC  D002               	goto	l370
  9694                           
  9695                           ; BSR set to: 1
  9696                           ;eusart2.c: 141: {
  9697                           ;eusart2.c: 142: eusart2RxTail = 0;
  9698  015FBE  0E00               	movlw	0
  9699  015FC0  6FDB               	movwf	_eusart2RxTail& (0+255),b	;volatile
  9700  015FC2                     l370:
  9701                           
  9702                           ; BSR set to: 1
  9703                           ;eusart2.c: 143: }
  9704                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  9705                           
  9706                           ; BSR set to: 1
  9707  015FC2  010E               	movlb	14	; () banked
  9708  015FC4  9F2C               	bcf	44,7,b	;volatile
  9709                           
  9710                           ; BSR set to: 14
  9711                           ;eusart2.c: 145: eusart2RxCount--;
  9712  015FC6  0101               	movlb	1	; () banked
  9713  015FC8  07DA               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  9714                           
  9715                           ; BSR set to: 1
  9716                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  9717  015FCA  010E               	movlb	14	; () banked
  9718  015FCC  8F2C               	bsf	44,7,b	;volatile
  9719                           
  9720                           ; BSR set to: 14
  9721                           ;eusart2.c: 148: return readValue;
  9722  015FCE  0101               	movlb	1	; () banked
  9723  015FD0  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
  9724  015FD2  0012               	return	
  9725  015FD4                     __end_of_EUSART2_Read:
  9726                           	opt stack 0
  9727                           tblptru	equ	0xFF8
  9728                           tblptrh	equ	0xFF7
  9729                           tblptrl	equ	0xFF6
  9730                           tablat	equ	0xFF5
  9731                           prodh	equ	0xFF4
  9732                           prodl	equ	0xFF3
  9733                           intcon	equ	0xFF2
  9734                           postinc0	equ	0xFEE
  9735                           wreg	equ	0xFE8
  9736                           indf1	equ	0xFE7
  9737                           postdec1	equ	0xFE5
  9738                           fsr1h	equ	0xFE2
  9739                           fsr1l	equ	0xFE1
  9740                           indf2	equ	0xFDF
  9741                           postinc2	equ	0xFDE
  9742                           fsr2h	equ	0xFDA
  9743                           fsr2l	equ	0xFD9
  9744                           status	equ	0xFD8
  9745                           
  9746 ;; *************** function _terminal_clearTerminal *****************
  9747 ;; Defined at:
  9748 ;;		line 80 in file "ring_buffer_interface.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;Total ram usage:        0 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:   18
  9769 ;; This function calls:
  9770 ;;		_printf
  9771 ;; This function is called by:
  9772 ;;		_main
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text18
  9777  016450                     __ptext18:
  9778                           	opt stack 0
  9779  016450                     _terminal_clearTerminal:
  9780                           	opt stack 12
  9781                           
  9782                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;incstack = 0
  9786  016450  0EAD               	movlw	low STR_2
  9787  016452  0101               	movlb	1	; () banked
  9788  016454  6F64               	movwf	printf@f& (0+255),b
  9789  016456  0EFF               	movlw	high STR_2
  9790  016458  6F65               	movwf	(printf@f+1)& (0+255),b
  9791  01645A  EC00  F080         	call	_printf	;wreg free
  9792  01645E  0012               	return		;funcret
  9793  016460                     __end_of_terminal_clearTerminal:
  9794                           	opt stack 0
  9795                           tblptru	equ	0xFF8
  9796                           tblptrh	equ	0xFF7
  9797                           tblptrl	equ	0xFF6
  9798                           tablat	equ	0xFF5
  9799                           prodh	equ	0xFF4
  9800                           prodl	equ	0xFF3
  9801                           intcon	equ	0xFF2
  9802                           postinc0	equ	0xFEE
  9803                           wreg	equ	0xFE8
  9804                           indf1	equ	0xFE7
  9805                           postdec1	equ	0xFE5
  9806                           fsr1h	equ	0xFE2
  9807                           fsr1l	equ	0xFE1
  9808                           indf2	equ	0xFDF
  9809                           postinc2	equ	0xFDE
  9810                           fsr2h	equ	0xFDA
  9811                           fsr2l	equ	0xFD9
  9812                           status	equ	0xFD8
  9813                           
  9814 ;; *************** function _printf *****************
  9815 ;; Defined at:
  9816 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  9819 ;;		 -> STR_94(30), STR_93(23), STR_92(39), STR_91(30), 
  9820 ;;		 -> STR_90(33), STR_89(1509), STR_87(53), STR_85(58), 
  9821 ;;		 -> STR_83(71), STR_82(63), STR_81(37), STR_80(46), 
  9822 ;;		 -> STR_79(102), STR_78(86), STR_76(25), STR_74(42), 
  9823 ;;		 -> STR_72(41), STR_70(40), STR_68(56), STR_66(34), 
  9824 ;;		 -> STR_64(34), STR_62(32), STR_60(37), STR_58(56), 
  9825 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
  9826 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
  9827 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
  9828 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  9829 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
  9830 ;;		 -> STR_1(4), 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;  idx             1  117[BANK1 ] unsigned char 
  9833 ;;  val             4  132[BANK1 ] unsigned long 
  9834 ;;  tmpval          4  128[BANK1 ] struct .
  9835 ;;  fval            3  136[BANK1 ] struct .
  9836 ;;  prec            2  139[BANK1 ] int 
  9837 ;;  exp             2  126[BANK1 ] int 
  9838 ;;  flag            2  124[BANK1 ] unsigned short 
  9839 ;;  ap              2  122[BANK1 ] PTR void [1]
  9840 ;;		 -> ?i2_printf(2), ?_printf(2), 
  9841 ;;  len             2  120[BANK1 ] unsigned int 
  9842 ;;  cp              2  118[BANK1 ] PTR const unsigned char 
  9843 ;;		 -> printf@c(1), 
  9844 ;;  width           2    0        int 
  9845 ;;  c               1  141[BANK1 ] char 
  9846 ;;  d               1    0        unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2  100[BANK1 ] int 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9856 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9857 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9859 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9860 ;;Total ram usage:       42 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:   17
  9863 ;; This function calls:
  9864 ;;		___awdiv
  9865 ;;		___ftadd
  9866 ;;		___ftge
  9867 ;;		___ftmul
  9868 ;;		___ftneg
  9869 ;;		___ftsub
  9870 ;;		___fttol
  9871 ;;		___lldiv
  9872 ;;		___llmod
  9873 ;;		___lltoft
  9874 ;;		___wmul
  9875 ;;		__div_to_l_
  9876 ;;		__tdiv_to_l_
  9877 ;;		_fround
  9878 ;;		_isdigit
  9879 ;;		_putch
  9880 ;;		_scale
  9881 ;; This function is called by:
  9882 ;;		_terminal_clearTerminal
  9883 ;;		_terminal_setCursorHome
  9884 ;;		_terminal_textAttributes
  9885 ;;		_terminal_printNewline
  9886 ;;		_ringBufferLUT
  9887 ;;		_terminal_printResetMessage
  9888 ;;		_terminal_clearLine
  9889 ;;		_terminal_saveCursor
  9890 ;;		_terminal_returnCursor
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text19
  9895  010000                     __ptext19:
  9896                           	opt stack 0
  9897  010000                     _printf:
  9898                           	opt stack 11
  9899                           
  9900                           ;doprnt.c: 466: va_list ap;
  9901                           ;doprnt.c: 499: signed char c;
  9902                           ;doprnt.c: 501: int width;
  9903                           ;doprnt.c: 504: int prec;
  9904                           ;doprnt.c: 508: unsigned short flag;
  9905                           ;doprnt.c: 515: char d;
  9906                           ;doprnt.c: 516: double fval;
  9907                           ;doprnt.c: 517: int exp;
  9908                           ;doprnt.c: 523: union {
  9909                           ;doprnt.c: 524: unsigned long vd;
  9910                           ;doprnt.c: 525: double integ;
  9911                           ;doprnt.c: 526: } tmpval;
  9912                           ;doprnt.c: 528: unsigned long val;
  9913                           ;doprnt.c: 529: unsigned len;
  9914                           ;doprnt.c: 530: const char * cp;
  9915                           ;doprnt.c: 533: *ap = __va_start();
  9916                           
  9917                           ;incstack = 0
  9918  010000  0E66               	movlw	low (?_printf+2)
  9919  010002  0101               	movlb	1	; () banked
  9920  010004  6F7A               	movwf	printf@ap& (0+255),b
  9921  010006  0E01               	movlw	high (?_printf+2)
  9922  010008  6F7B               	movwf	(printf@ap+1)& (0+255),b
  9923                           
  9924                           ;doprnt.c: 536: while(c = *f++) {
  9925  01000A  EFF8  F084         	goto	u10710
  9926  01000E                     
  9927                           ; BSR set to: 1
  9928                           ;doprnt.c: 538: if(c != '%')
  9929                           
  9930                           ; BSR set to: 1
  9931  01000E  0E25               	movlw	37
  9932  010010  198D               	xorwf	printf@c& (0+255),w,b
  9933  010012  B4D8               	btfsc	status,2,c
  9934  010014  D005               	goto	l1107
  9935                           
  9936                           ; BSR set to: 1
  9937                           ;doprnt.c: 540: {
  9938                           ;doprnt.c: 541: (putch(c) );
  9939  010016  518D               	movf	printf@c& (0+255),w,b
  9940  010018  EC37  F0B2         	call	_putch
  9941                           
  9942                           ;doprnt.c: 542: continue;
  9943  01001C  EFF8  F084         	goto	u10710
  9944  010020                     l1107:
  9945                           
  9946                           ;doprnt.c: 543: }
  9947                           ;doprnt.c: 548: flag = 0;
  9948  010020  0E00               	movlw	0
  9949  010022  0101               	movlb	1	; () banked
  9950  010024  6F7D               	movwf	(printf@flag+1)& (0+255),b
  9951  010026  0E00               	movlw	0
  9952  010028  6F7C               	movwf	printf@flag& (0+255),b
  9953                           
  9954                           ; BSR set to: 1
  9955                           ;doprnt.c: 611: if(*f == '.') {
  9956  01002A  C164  FFF6         	movff	printf@f,tblptrl
  9957  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
  9958  010032  0E00               	movlw	low (__mediumconst shr (0+16))
  9959  010034  6EF8               	movwf	tblptru,c
  9960  010036  0E0D               	movlw	(high __ramtop+-1)
  9961  010038  64F7               	cpfsgt	tblptrh,c
  9962  01003A  D003               	bra	u10257
  9963  01003C  0008               	tblrd		*
  9964  01003E  50F5               	movf	tablat,w,c
  9965  010040  D005               	bra	u10250
  9966  010042                     u10257:
  9967  010042  CFF6 FFE1          	movff	tblptrl,fsr1l
  9968  010046  CFF7 FFE2          	movff	tblptrh,fsr1h
  9969  01004A  50E7               	movf	indf1,w,c
  9970  01004C                     u10250:
  9971  01004C  0A2E               	xorlw	46
  9972  01004E  A4D8               	btfss	status,2,c
  9973  010050  D049               	goto	l1108
  9974                           
  9975                           ;doprnt.c: 612: flag |= 0x4000;
  9976  010052  0101               	movlb	1	; () banked
  9977  010054  8D7D               	bsf	(printf@flag+1)& (0+255),6,b
  9978                           
  9979                           ;doprnt.c: 613: f++;
  9980  010056  4B64               	infsnz	printf@f& (0+255),f,b
  9981  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
  9982                           
  9983                           ; BSR set to: 1
  9984                           ;doprnt.c: 620: {
  9985                           ;doprnt.c: 621: prec = 0;
  9986  01005A  0E00               	movlw	0
  9987  01005C  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9988  01005E  0E00               	movlw	0
  9989  010060  6F8B               	movwf	printf@prec& (0+255),b
  9990                           
  9991                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9992  010062  D02A               	goto	l1109
  9993  010064                     
  9994                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9995                           
  9996                           ; BSR set to: 1
  9997  010064  C18B  F125         	movff	printf@prec,___wmul@multiplier
  9998  010068  C18C  F126         	movff	printf@prec+1,___wmul@multiplier+1
  9999  01006C  0E00               	movlw	0
 10000  01006E  0101               	movlb	1	; () banked
 10001  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10002  010072  0E0A               	movlw	10
 10003  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10004  010076  EC19  F0B1         	call	___wmul	;wreg free
 10005  01007A  C164  FFF6         	movff	printf@f,tblptrl
 10006  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
 10007  010082  0E00               	movlw	low (__mediumconst shr (0+16))
 10008  010084  6EF8               	movwf	tblptru,c
 10009  010086  0E0D               	movlw	(high __ramtop+-1)
 10010  010088  64F7               	cpfsgt	tblptrh,c
 10011  01008A  D003               	bra	u10277
 10012  01008C  0008               	tblrd		*
 10013  01008E  50F5               	movf	tablat,w,c
 10014  010090  D005               	bra	u10270
 10015  010092                     u10277:
 10016  010092  CFF6 FFE1          	movff	tblptrl,fsr1l
 10017  010096  CFF7 FFE2          	movff	tblptrh,fsr1h
 10018  01009A  50E7               	movf	indf1,w,c
 10019  01009C                     u10270:
 10020  01009C  0101               	movlb	1	; () banked
 10021  01009E  6F6C               	movwf	??_printf& (0+255),b
 10022  0100A0  516C               	movf	??_printf& (0+255),w,b
 10023  0100A2  2725               	addwf	?___wmul& (0+255),f,b
 10024  0100A4  0E00               	movlw	0
 10025  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
 10026  0100A8  0ED0               	movlw	208
 10027  0100AA  2525               	addwf	?___wmul& (0+255),w,b
 10028  0100AC  6F8B               	movwf	printf@prec& (0+255),b
 10029  0100AE  0EFF               	movlw	255
 10030  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10031  0100B2  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10032                           
 10033                           ; BSR set to: 1
 10034  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
 10035  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
 10036  0100B8                     l1109:
 10037                           
 10038                           ; BSR set to: 1
 10039                           
 10040                           ; BSR set to: 1
 10041  0100B8  C164  FFF6         	movff	printf@f,tblptrl
 10042  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
 10043  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
 10044  0100C2  6EF8               	movwf	tblptru,c
 10045  0100C4  0E0D               	movlw	(high __ramtop+-1)
 10046  0100C6  64F7               	cpfsgt	tblptrh,c
 10047  0100C8  D003               	bra	u10287
 10048  0100CA  0008               	tblrd		*
 10049  0100CC  50F5               	movf	tablat,w,c
 10050  0100CE  D005               	bra	u10280
 10051  0100D0                     u10287:
 10052  0100D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10053  0100D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10054  0100D8  50E7               	movf	indf1,w,c
 10055  0100DA                     u10280:
 10056  0100DA  ECB2  F0B1         	call	_isdigit
 10057  0100DE  A0D8               	btfss	status,0,c
 10058  0100E0  D03B               	goto	l1113
 10059  0100E2  D7C0               	goto	l1110
 10060  0100E4                     l1108:
 10061                           
 10062                           ;doprnt.c: 626: prec = 0;
 10063  0100E4  0E00               	movlw	0
 10064  0100E6  0101               	movlb	1	; () banked
 10065  0100E8  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10066  0100EA  0E00               	movlw	0
 10067  0100EC  6F8B               	movwf	printf@prec& (0+255),b
 10068                           
 10069                           ; BSR set to: 1
 10070                           ;doprnt.c: 628: flag |= 0x1000;
 10071  0100EE  897D               	bsf	(printf@flag+1)& (0+255),4,b
 10072                           
 10073                           ; BSR set to: 1
 10074                           ;doprnt.c: 630: }
 10075                           ;doprnt.c: 635: switch(c = *f++) {
 10076  0100F0  D033               	goto	l1113
 10077  0100F2                     
 10078                           ; BSR set to: 1
 10079                           ;doprnt.c: 663: flag |= 0x400;
 10080                           
 10081                           ; BSR set to: 1
 10082  0100F2  857D               	bsf	(printf@flag+1)& (0+255),2,b
 10083                           
 10084                           ; BSR set to: 1
 10085                           ;doprnt.c: 698: case 'i':
 10086                           ;doprnt.c: 699: break;
 10087                           
 10088                           ; BSR set to: 1
 10089                           
 10090                           ;doprnt.c: 697: case 'd':
 10091                           
 10092                           ;doprnt.c: 664: break;
 10093  0100F4  D062               	goto	l1117
 10094  0100F6                     
 10095                           ; BSR set to: 1
 10096                           ;doprnt.c: 718: case 'x':
 10097                           ;doprnt.c: 721: flag |= 0x80;
 10098                           
 10099                           ; BSR set to: 1
 10100                           
 10101                           ; BSR set to: 1
 10102  0100F6  8F7C               	bsf	printf@flag& (0+255),7,b
 10103                           
 10104                           ;doprnt.c: 723: break;
 10105  0100F8  D060               	goto	l1117
 10106  0100FA                     
 10107                           ; BSR set to: 1
 10108                           ;doprnt.c: 753: if(prec && prec < len)
 10109                           
 10110                           ; BSR set to: 1
 10111  0100FA  518B               	movf	printf@prec& (0+255),w,b
 10112  0100FC  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10113  0100FE  B4D8               	btfsc	status,2,c
 10114  010100  D015               	goto	l1124
 10115                           
 10116                           ; BSR set to: 1
 10117  010102  5178               	movf	printf@len& (0+255),w,b
 10118  010104  5D8B               	subwf	printf@prec& (0+255),w,b
 10119  010106  5179               	movf	(printf@len+1)& (0+255),w,b
 10120  010108  598C               	subwfb	(printf@prec+1)& (0+255),w,b
 10121  01010A  B0D8               	btfsc	status,0,c
 10122  01010C  D00F               	goto	l1124
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;doprnt.c: 754: len = prec;
 10126  01010E  C18B  F178         	movff	printf@prec,printf@len
 10127  010112  C18C  F179         	movff	printf@prec+1,printf@len+1
 10128                           
 10129                           ; BSR set to: 1
 10130                           ;doprnt.c: 767: while(len--)
 10131  010116  D00A               	goto	l1124
 10132  010118                     l8870:
 10133                           
 10134                           ; BSR set to: 1
 10135                           ;doprnt.c: 768: (putch(*cp++) );
 10136  010118  C176  FFD9         	movff	printf@cp,fsr2l
 10137  01011C  C177  FFDA         	movff	printf@cp+1,fsr2h
 10138  010120  50DF               	movf	indf2,w,c
 10139  010122  EC37  F0B2         	call	_putch
 10140  010126  0101               	movlb	1	; () banked
 10141  010128  4B76               	infsnz	printf@cp& (0+255),f,b
 10142  01012A  2B77               	incf	(printf@cp+1)& (0+255),f,b
 10143  01012C                     l1124:
 10144                           
 10145                           ; BSR set to: 1
 10146                           
 10147                           ; BSR set to: 1
 10148  01012C  0778               	decf	printf@len& (0+255),f,b
 10149  01012E  A0D8               	btfss	status,0,c
 10150  010130  0779               	decf	(printf@len+1)& (0+255),f,b
 10151  010132  2978               	incf	printf@len& (0+255),w,b
 10152  010134  E1F1               	bnz	l8870
 10153  010136  2979               	incf	(printf@len+1)& (0+255),w,b
 10154  010138  B4D8               	btfsc	status,2,c
 10155  01013A  EFF8  F084         	goto	u10710
 10156  01013E  D7EC               	goto	l1125
 10157  010140                     
 10158                           ; BSR set to: 1
 10159                           ;doprnt.c: 805: cp = (char *)&c;
 10160                           
 10161                           ; BSR set to: 1
 10162  010140  0E8D               	movlw	low printf@c
 10163  010142  6F76               	movwf	printf@cp& (0+255),b
 10164  010144  0E01               	movlw	high printf@c
 10165  010146  6F77               	movwf	(printf@cp+1)& (0+255),b
 10166                           
 10167                           ; BSR set to: 1
 10168                           ;doprnt.c: 806: len = 1;
 10169  010148  0E00               	movlw	0
 10170  01014A  6F79               	movwf	(printf@len+1)& (0+255),b
 10171  01014C  0E01               	movlw	1
 10172  01014E  6F78               	movwf	printf@len& (0+255),b
 10173                           
 10174                           ;doprnt.c: 807: goto dostring;
 10175  010150  D7D4               	goto	l1122
 10176  010152                     
 10177                           ; BSR set to: 1
 10178                           ;doprnt.c: 818: flag |= 0xC0;
 10179                           
 10180                           ; BSR set to: 1
 10181  010152  0EC0               	movlw	192
 10182  010154  137C               	iorwf	printf@flag& (0+255),f,b
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;doprnt.c: 822: }
 10186                           
 10187                           ;doprnt.c: 819: break;
 10188  010156  D031               	goto	l1117
 10189  010158                     l1113:
 10190                           
 10191                           ; BSR set to: 1
 10192  010158  0101               	movlb	1	; () banked
 10193  01015A  5164               	movf	printf@f& (0+255),w,b
 10194  01015C  6F6C               	movwf	??_printf& (0+255),b
 10195  01015E  5165               	movf	(printf@f+1)& (0+255),w,b
 10196  010160  6F6D               	movwf	(??_printf+1)& (0+255),b
 10197  010162  4B64               	infsnz	printf@f& (0+255),f,b
 10198  010164  2B65               	incf	(printf@f+1)& (0+255),f,b
 10199  010166  C16C  FFF6         	movff	??_printf,tblptrl
 10200  01016A  C16D  FFF7         	movff	??_printf+1,tblptrh
 10201  01016E  0E00               	movlw	low (__mediumconst shr (0+16))
 10202  010170  6EF8               	movwf	tblptru,c
 10203  010172  0E0D               	movlw	(high __ramtop+-1)
 10204  010174  64F7               	cpfsgt	tblptrh,c
 10205  010176  D003               	bra	u10337
 10206  010178  0008               	tblrd		*
 10207  01017A  50F5               	movf	tablat,w,c
 10208  01017C  D005               	bra	u10330
 10209  01017E                     u10337:
 10210  01017E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10211  010182  CFF7 FFE2          	movff	tblptrh,fsr1h
 10212  010186  50E7               	movf	indf1,w,c
 10213  010188                     u10330:
 10214  010188  0101               	movlb	1	; () banked
 10215  01018A  6F8D               	movwf	printf@c& (0+255),b
 10216  01018C  518D               	movf	printf@c& (0+255),w,b
 10217                           
 10218                           ; Switch size 1, requested type "space"
 10219                           ; Number of cases is 7, Range of values is 0 to 120
 10220                           ; switch strategies available:
 10221                           ; Name         Instructions Cycles
 10222                           ; simple_byte           22    12 (average)
 10223                           ;	Chosen strategy is simple_byte
 10224  01018E  0A00               	xorlw	0	; case 0
 10225  010190  B4D8               	btfsc	status,2,c
 10226  010192  0012               	return	
 10227  010194  0A58               	xorlw	88	; case 88
 10228  010196  B4D8               	btfsc	status,2,c
 10229  010198  D7AE               	goto	l1120
 10230  01019A  0A3C               	xorlw	60	; case 100
 10231  01019C  B4D8               	btfsc	status,2,c
 10232  01019E  D00D               	goto	l1117
 10233  0101A0  0A02               	xorlw	2	; case 102
 10234  0101A2  B4D8               	btfsc	status,2,c
 10235  0101A4  D7A6               	goto	l1116
 10236  0101A6  0A0F               	xorlw	15	; case 105
 10237  0101A8  B4D8               	btfsc	status,2,c
 10238  0101AA  D007               	goto	l1117
 10239  0101AC  0A1C               	xorlw	28	; case 117
 10240  0101AE  B4D8               	btfsc	status,2,c
 10241  0101B0  D7D0               	goto	l1128
 10242  0101B2  0A0D               	xorlw	13	; case 120
 10243  0101B4  B4D8               	btfsc	status,2,c
 10244  0101B6  D79F               	goto	l1120
 10245  0101B8  D7C3               	goto	l1127
 10246  0101BA                     l1117:
 10247                           
 10248                           ; BSR set to: 1
 10249                           ;doprnt.c: 825: if(flag & (0x700)) {
 10250                           
 10251                           ; BSR set to: 1
 10252  0101BA  0E07               	movlw	7
 10253  0101BC  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10254  0101BE  B4D8               	btfsc	status,2,c
 10255  0101C0  D2C1               	goto	l1129
 10256                           
 10257                           ; BSR set to: 1
 10258                           ;doprnt.c: 827: if(flag & 0x1000)
 10259  0101C2  A97D               	btfss	(printf@flag+1)& (0+255),4,b
 10260  0101C4  D004               	goto	l1130
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;doprnt.c: 829: prec = 6;
 10264  0101C6  0E00               	movlw	0
 10265  0101C8  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10266  0101CA  0E06               	movlw	6
 10267  0101CC  6F8B               	movwf	printf@prec& (0+255),b
 10268  0101CE                     l1130:
 10269                           
 10270                           ; BSR set to: 1
 10271                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10272                           
 10273                           ; BSR set to: 1
 10274  0101CE  C17A  FFD9         	movff	printf@ap,fsr2l
 10275  0101D2  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10276  0101D6  CFDE F188          	movff	postinc2,printf@fval
 10277  0101DA  CFDE F189          	movff	postinc2,printf@fval+1
 10278  0101DE  CFDD F18A          	movff	postdec2,printf@fval+2
 10279                           
 10280                           ; BSR set to: 1
 10281  0101E2  0E03               	movlw	3
 10282  0101E4  277A               	addwf	printf@ap& (0+255),f,b
 10283  0101E6  0E00               	movlw	0
 10284  0101E8  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10285                           
 10286                           ; BSR set to: 1
 10287                           ;doprnt.c: 831: if(fval < 0.0) {
 10288  0101EA  AF8A               	btfss	(printf@fval+2)& (0+255),7,b
 10289  0101EC  D011               	goto	l1131
 10290                           
 10291                           ; BSR set to: 1
 10292                           ;doprnt.c: 832: fval = -fval;
 10293  0101EE  C188  F123         	movff	printf@fval,___ftneg@f1
 10294  0101F2  C189  F124         	movff	printf@fval+1,___ftneg@f1+1
 10295  0101F6  C18A  F125         	movff	printf@fval+2,___ftneg@f1+2
 10296  0101FA  EC55  F0B1         	call	___ftneg	;wreg free
 10297  0101FE  C123  F188         	movff	?___ftneg,printf@fval
 10298  010202  C124  F189         	movff	?___ftneg+1,printf@fval+1
 10299  010206  C125  F18A         	movff	?___ftneg+2,printf@fval+2
 10300                           
 10301                           ;doprnt.c: 833: flag |= 0x03;
 10302  01020A  0E03               	movlw	3
 10303  01020C  0101               	movlb	1	; () banked
 10304  01020E  137C               	iorwf	printf@flag& (0+255),f,b
 10305  010210                     l1131:
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;doprnt.c: 834: }
 10309                           ;doprnt.c: 835: exp = 0;
 10310                           
 10311                           ; BSR set to: 1
 10312  010210  0E00               	movlw	0
 10313  010212  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10314  010214  0E00               	movlw	0
 10315  010216  6F7E               	movwf	printf@exp& (0+255),b
 10316                           
 10317                           ; BSR set to: 1
 10318                           ;doprnt.c: 836: if( fval!=0) {
 10319  010218  5188               	movf	printf@fval& (0+255),w,b
 10320  01021A  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 10321  01021C  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 10322  01021E  B4D8               	btfsc	status,2,c
 10323  010220  D088               	goto	l1136
 10324                           
 10325                           ; BSR set to: 1
 10326                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10327  010222  0E82               	movlw	130
 10328  010224  6F6C               	movwf	??_printf& (0+255),b
 10329  010226  0EFF               	movlw	255
 10330  010228  6F6D               	movwf	(??_printf+1)& (0+255),b
 10331  01022A  C188  F16E         	movff	printf@fval,??_printf+2
 10332  01022E  C189  F16F         	movff	printf@fval+1,??_printf+3
 10333  010232  C18A  F170         	movff	printf@fval+2,??_printf+4
 10334  010236  C18B  F171         	movff	printf@fval+3,??_printf+5
 10335  01023A  0E10               	movlw	16
 10336  01023C  D005               	goto	u10380
 10337  01023E                     u10385:
 10338  01023E  90D8               	bcf	status,0,c
 10339  010240  3371               	rrcf	(??_printf+5)& (0+255),f,b
 10340  010242  3370               	rrcf	(??_printf+4)& (0+255),f,b
 10341  010244  336F               	rrcf	(??_printf+3)& (0+255),f,b
 10342  010246  336E               	rrcf	(??_printf+2)& (0+255),f,b
 10343  010248                     u10380:
 10344  010248  2EE8               	decfsz	wreg,f,c
 10345  01024A  D7F9               	goto	u10385
 10346  01024C  516E               	movf	(??_printf+2)& (0+255),w,b
 10347  01024E  256C               	addwf	??_printf& (0+255),w,b
 10348  010250  6F7E               	movwf	printf@exp& (0+255),b
 10349  010252  0E00               	movlw	0
 10350  010254  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10351  010256  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10352                           
 10353                           ; BSR set to: 1
 10354                           ;doprnt.c: 838: exp--;
 10355  010258  077E               	decf	printf@exp& (0+255),f,b
 10356  01025A  A0D8               	btfss	status,0,c
 10357  01025C  077F               	decf	(printf@exp+1)& (0+255),f,b
 10358                           
 10359                           ; BSR set to: 1
 10360                           ;doprnt.c: 839: exp *= 3;
 10361  01025E  C17E  F125         	movff	printf@exp,___wmul@multiplier
 10362  010262  C17F  F126         	movff	printf@exp+1,___wmul@multiplier+1
 10363  010266  0E00               	movlw	0
 10364  010268  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10365  01026A  0E03               	movlw	3
 10366  01026C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10367  01026E  EC19  F0B1         	call	___wmul	;wreg free
 10368  010272  C125  F17E         	movff	?___wmul,printf@exp
 10369  010276  C126  F17F         	movff	?___wmul+1,printf@exp+1
 10370                           
 10371                           ;doprnt.c: 840: exp /= 10;
 10372  01027A  C17E  F11D         	movff	printf@exp,___awdiv@dividend
 10373  01027E  C17F  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 10374  010282  0E00               	movlw	0
 10375  010284  0101               	movlb	1	; () banked
 10376  010286  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10377  010288  0E0A               	movlw	10
 10378  01028A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10379  01028C  EC78  F0AA         	call	___awdiv	;wreg free
 10380  010290  C11D  F17E         	movff	?___awdiv,printf@exp
 10381  010294  C11E  F17F         	movff	?___awdiv+1,printf@exp+1
 10382                           
 10383                           ;doprnt.c: 841: if(exp < 0)
 10384  010298  0101               	movlb	1	; () banked
 10385  01029A  AF7F               	btfss	(printf@exp+1)& (0+255),7,b
 10386  01029C  D003               	goto	l1133
 10387                           
 10388                           ; BSR set to: 1
 10389                           ;doprnt.c: 842: exp--;
 10390  01029E  077E               	decf	printf@exp& (0+255),f,b
 10391  0102A0  A0D8               	btfss	status,0,c
 10392  0102A2  077F               	decf	(printf@exp+1)& (0+255),f,b
 10393  0102A4                     l1133:
 10394                           
 10395                           ; BSR set to: 1
 10396                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 10397                           
 10398                           ; BSR set to: 1
 10399  0102A4  517E               	movf	printf@exp& (0+255),w,b
 10400  0102A6  0800               	sublw	0
 10401  0102A8  EC5B  F091         	call	_scale
 10402  0102AC  C155  F180         	movff	?_scale,printf@tmpval
 10403  0102B0  C156  F181         	movff	?_scale+1,printf@tmpval+1
 10404  0102B4  C157  F182         	movff	?_scale+2,printf@tmpval+2
 10405                           
 10406                           ;doprnt.c: 847: tmpval.integ *= fval;
 10407  0102B8  C180  F146         	movff	printf@tmpval,___ftmul@f1
 10408  0102BC  C181  F147         	movff	printf@tmpval+1,___ftmul@f1+1
 10409  0102C0  C182  F148         	movff	printf@tmpval+2,___ftmul@f1+2
 10410  0102C4  C188  F149         	movff	printf@fval,___ftmul@f2
 10411  0102C8  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 10412  0102CC  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 10413  0102D0  EC00  F0A4         	call	___ftmul	;wreg free
 10414  0102D4  C146  F180         	movff	?___ftmul,printf@tmpval
 10415  0102D8  C147  F181         	movff	?___ftmul+1,printf@tmpval+1
 10416  0102DC  C148  F182         	movff	?___ftmul+2,printf@tmpval+2
 10417                           
 10418                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 10419  0102E0  C180  F117         	movff	printf@tmpval,___ftge@ff1
 10420  0102E4  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 10421  0102E8  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 10422  0102EC  0E00               	movlw	0
 10423  0102EE  0101               	movlb	1	; () banked
 10424  0102F0  6F1A               	movwf	___ftge@ff2& (0+255),b
 10425  0102F2  0E80               	movlw	128
 10426  0102F4  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 10427  0102F6  0E3F               	movlw	63
 10428  0102F8  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 10429  0102FA  EC59  F0A9         	call	___ftge	;wreg free
 10430  0102FE  0101               	movlb	1	; () banked
 10431  010300  B0D8               	btfsc	status,0,c
 10432  010302  D004               	goto	l1134
 10433                           
 10434                           ; BSR set to: 1
 10435                           ;doprnt.c: 849: exp--;
 10436  010304  077E               	decf	printf@exp& (0+255),f,b
 10437  010306  A0D8               	btfss	status,0,c
 10438  010308  077F               	decf	(printf@exp+1)& (0+255),f,b
 10439  01030A  D013               	goto	l1136
 10440  01030C                     l1134:
 10441                           
 10442                           ; BSR set to: 1
 10443                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 10444                           
 10445                           ; BSR set to: 1
 10446  01030C  C180  F117         	movff	printf@tmpval,___ftge@ff1
 10447  010310  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 10448  010314  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 10449  010318  0E00               	movlw	0
 10450  01031A  6F1A               	movwf	___ftge@ff2& (0+255),b
 10451  01031C  0E20               	movlw	32
 10452  01031E  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 10453  010320  0E41               	movlw	65
 10454  010322  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 10455  010324  EC59  F0A9         	call	___ftge	;wreg free
 10456  010328  0101               	movlb	1	; () banked
 10457  01032A  A0D8               	btfss	status,0,c
 10458  01032C  D002               	goto	l1136
 10459                           
 10460                           ; BSR set to: 1
 10461                           ;doprnt.c: 851: exp++;
 10462  01032E  4B7E               	infsnz	printf@exp& (0+255),f,b
 10463  010330  2B7F               	incf	(printf@exp+1)& (0+255),f,b
 10464  010332                     l1136:
 10465                           
 10466                           ; BSR set to: 1
 10467                           ;doprnt.c: 852: }
 10468                           ;doprnt.c: 1112: if(prec <= 12)
 10469                           
 10470                           ; BSR set to: 1
 10471                           
 10472                           ; BSR set to: 1
 10473                           
 10474                           ; BSR set to: 1
 10475  010332  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 10476  010334  D006               	goto	u10420
 10477  010336  518C               	movf	(printf@prec+1)& (0+255),w,b
 10478  010338  E11B               	bnz	l8934
 10479  01033A  0E0D               	movlw	13
 10480  01033C  5D8B               	subwf	printf@prec& (0+255),w,b
 10481  01033E  B0D8               	btfsc	status,0,c
 10482  010340  D017               	goto	l1137
 10483  010342                     u10420:
 10484                           
 10485                           ; BSR set to: 1
 10486                           ;doprnt.c: 1113: fval += fround(prec);
 10487  010342  C188  F12B         	movff	printf@fval,___ftadd@f1
 10488  010346  C189  F12C         	movff	printf@fval+1,___ftadd@f1+1
 10489  01034A  C18A  F12D         	movff	printf@fval+2,___ftadd@f1+2
 10490  01034E  518B               	movf	printf@prec& (0+255),w,b
 10491  010350  EC77  F097         	call	_fround
 10492  010354  C155  F12E         	movff	?_fround,___ftadd@f2
 10493  010358  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
 10494  01035C  C157  F130         	movff	?_fround+2,___ftadd@f2+2
 10495  010360  EC24  F09E         	call	___ftadd	;wreg free
 10496  010364  C12B  F188         	movff	?___ftadd,printf@fval
 10497  010368  C12C  F189         	movff	?___ftadd+1,printf@fval+1
 10498  01036C  C12D  F18A         	movff	?___ftadd+2,printf@fval+2
 10499  010370                     l1137:
 10500  010370                     l8934:
 10501                           
 10502                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 10503  010370  0101               	movlb	1	; () banked
 10504  010372  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10505  010374  D006               	goto	u10430
 10506  010376  517F               	movf	(printf@exp+1)& (0+255),w,b
 10507  010378  E11F               	bnz	l8942
 10508  01037A  0E0A               	movlw	10
 10509  01037C  5D7E               	subwf	printf@exp& (0+255),w,b
 10510  01037E  B0D8               	btfsc	status,0,c
 10511  010380  D01B               	goto	u10460
 10512  010382                     u10430:
 10513                           
 10514                           ; BSR set to: 1
 10515  010382  5188               	movf	printf@fval& (0+255),w,b
 10516  010384  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 10517  010386  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 10518  010388  B4D8               	btfsc	status,2,c
 10519  01038A  D054               	goto	l1138
 10520                           
 10521                           ; BSR set to: 1
 10522  01038C  C188  F155         	movff	printf@fval,___fttol@f1
 10523  010390  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 10524  010394  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 10525  010398  EC84  F0A3         	call	___fttol	;wreg free
 10526  01039C  0101               	movlb	1	; () banked
 10527  01039E  5155               	movf	?___fttol& (0+255),w,b
 10528  0103A0  1156               	iorwf	(?___fttol+1)& (0+255),w,b
 10529  0103A2  1157               	iorwf	(?___fttol+2)& (0+255),w,b
 10530  0103A4  1158               	iorwf	(?___fttol+3)& (0+255),w,b
 10531  0103A6  B4D8               	btfsc	status,2,c
 10532                           
 10533                           ; BSR set to: 1
 10534  0103A8  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10535  0103AA  D044               	goto	l1138
 10536  0103AC  517F               	movf	(printf@exp+1)& (0+255),w,b
 10537  0103AE  E104               	bnz	l8942
 10538  0103B0  0E02               	movlw	2
 10539  0103B2  5D7E               	subwf	printf@exp& (0+255),w,b
 10540  0103B4  A0D8               	btfss	status,0,c
 10541  0103B6  D03E               	goto	l1138
 10542  0103B8                     u10460:
 10543  0103B8                     l8942:
 10544                           
 10545                           ; BSR set to: 1
 10546                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 10547  0103B8  C180  F117         	movff	printf@tmpval,___ftge@ff1
 10548  0103BC  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 10549  0103C0  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 10550  0103C4  0E70               	movlw	112
 10551  0103C6  6F1A               	movwf	___ftge@ff2& (0+255),b
 10552  0103C8  0E89               	movlw	137
 10553  0103CA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 10554  0103CC  0E40               	movlw	64
 10555  0103CE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 10556  0103D0  EC59  F0A9         	call	___ftge	;wreg free
 10557  0103D4  0101               	movlb	1	; () banked
 10558  0103D6  B0D8               	btfsc	status,0,c
 10559  0103D8  D002               	goto	l1141
 10560                           
 10561                           ; BSR set to: 1
 10562                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10563  0103DA  0EF7               	movlw	247
 10564  0103DC  D001               	goto	L1
 10565  0103DE                     l1141:
 10566                           
 10567                           ; BSR set to: 1
 10568                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10569                           
 10570                           ; BSR set to: 1
 10571  0103DE  0EF8               	movlw	248
 10572  0103E0                     L1:
 10573  0103E0  277E               	addwf	printf@exp& (0+255),f,b
 10574  0103E2  0EFF               	movlw	255
 10575  0103E4  237F               	addwfc	(printf@exp+1)& (0+255),f,b
 10576                           
 10577                           ; BSR set to: 1
 10578                           ;doprnt.c: 1124: }
 10579                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10580                           
 10581                           ; BSR set to: 1
 10582  0103E6  517E               	movf	printf@exp& (0+255),w,b
 10583  0103E8  EC5B  F091         	call	_scale
 10584  0103EC  C155  F180         	movff	?_scale,printf@tmpval
 10585  0103F0  C156  F181         	movff	?_scale+1,printf@tmpval+1
 10586  0103F4  C157  F182         	movff	?_scale+2,printf@tmpval+2
 10587                           
 10588                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10589  0103F8  C188  F117         	movff	printf@fval,__tdiv_to_l_@f1
 10590  0103FC  C189  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 10591  010400  C18A  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 10592  010404  C180  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 10593  010408  C181  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 10594  01040C  C182  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 10595  010410  EC9A  F0A0         	call	__tdiv_to_l_	;wreg free
 10596  010414  C117  F184         	movff	?__tdiv_to_l_,printf@val
 10597  010418  C118  F185         	movff	?__tdiv_to_l_+1,printf@val+1
 10598  01041C  C119  F186         	movff	?__tdiv_to_l_+2,printf@val+2
 10599  010420  C11A  F187         	movff	?__tdiv_to_l_+3,printf@val+3
 10600                           
 10601                           ;doprnt.c: 1129: fval = 0.0;
 10602  010424  0E00               	movlw	0
 10603  010426  0101               	movlb	1	; () banked
 10604  010428  6F88               	movwf	printf@fval& (0+255),b
 10605  01042A  0E00               	movlw	0
 10606  01042C  6F89               	movwf	(printf@fval+1)& (0+255),b
 10607  01042E  0E00               	movlw	0
 10608  010430  6F8A               	movwf	(printf@fval+2)& (0+255),b
 10609                           
 10610                           ;doprnt.c: 1130: } else {
 10611  010432  D033               	goto	l1147
 10612  010434                     l1138:
 10613                           
 10614                           ; BSR set to: 1
 10615                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10616                           
 10617                           ; BSR set to: 1
 10618  010434  C188  F155         	movff	printf@fval,___fttol@f1
 10619  010438  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 10620  01043C  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 10621  010440  EC84  F0A3         	call	___fttol	;wreg free
 10622  010444  C155  F184         	movff	?___fttol,printf@val
 10623  010448  C156  F185         	movff	?___fttol+1,printf@val+1
 10624  01044C  C157  F186         	movff	?___fttol+2,printf@val+2
 10625  010450  C158  F187         	movff	?___fttol+3,printf@val+3
 10626                           
 10627                           ;doprnt.c: 1132: fval -= (double)val;
 10628  010454  C188  F137         	movff	printf@fval,___ftsub@f1
 10629  010458  C189  F138         	movff	printf@fval+1,___ftsub@f1+1
 10630  01045C  C18A  F139         	movff	printf@fval+2,___ftsub@f1+2
 10631  010460  C184  F11F         	movff	printf@val,___lltoft@c
 10632  010464  C185  F120         	movff	printf@val+1,___lltoft@c+1
 10633  010468  C186  F121         	movff	printf@val+2,___lltoft@c+2
 10634  01046C  C187  F122         	movff	printf@val+3,___lltoft@c+3
 10635  010470  EC05  F0AE         	call	___lltoft	;wreg free
 10636  010474  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 10637  010478  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 10638  01047C  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 10639  010480  ECEA  F0AF         	call	___ftsub	;wreg free
 10640  010484  C137  F188         	movff	?___ftsub,printf@fval
 10641  010488  C138  F189         	movff	?___ftsub+1,printf@fval+1
 10642  01048C  C139  F18A         	movff	?___ftsub+2,printf@fval+2
 10643                           
 10644                           ;doprnt.c: 1133: exp = 0;
 10645  010490  0E00               	movlw	0
 10646  010492  0101               	movlb	1	; () banked
 10647  010494  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10648  010496  0E00               	movlw	0
 10649  010498  6F7E               	movwf	printf@exp& (0+255),b
 10650  01049A                     l1147:
 10651                           
 10652                           ; BSR set to: 1
 10653                           ;doprnt.c: 1134: }
 10654                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10655                           
 10656                           ; BSR set to: 1
 10657  01049A  0E01               	movlw	1
 10658  01049C  6F8D               	movwf	printf@c& (0+255),b
 10659  01049E                     l8962:
 10660                           
 10661                           ; BSR set to: 1
 10662  01049E  0E0A               	movlw	10
 10663  0104A0  198D               	xorwf	printf@c& (0+255),w,b
 10664  0104A2  B4D8               	btfsc	status,2,c
 10665  0104A4  D01B               	goto	u10500
 10666                           
 10667                           ; BSR set to: 1
 10668                           ;doprnt.c: 1137: if(val < dpowers[c])
 10669                           
 10670                           ; BSR set to: 1
 10671                           
 10672                           ; BSR set to: 1
 10673  0104A6  518D               	movf	printf@c& (0+255),w,b
 10674  0104A8  0D04               	mullw	4
 10675  0104AA  0E79               	movlw	low _dpowers
 10676  0104AC  24F3               	addwf	prodl,w,c
 10677  0104AE  6EF6               	movwf	tblptrl,c
 10678  0104B0  0EF1               	movlw	high _dpowers
 10679  0104B2  20F4               	addwfc	prodh,w,c
 10680  0104B4  6EF7               	movwf	tblptrh,c
 10681  0104B6                     	if	1	;There are 3 active tblptr bytes
 10682  0104B6  6AF8               	clrf	tblptru,c
 10683  0104B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10684  0104BA  22F8               	addwfc	tblptru,f,c
 10685  0104BC                     	endif
 10686  0104BC  0009               	tblrd		*+
 10687  0104BE  50F5               	movf	tablat,w,c
 10688  0104C0  5D84               	subwf	printf@val& (0+255),w,b
 10689  0104C2  0009               	tblrd		*+
 10690  0104C4  50F5               	movf	tablat,w,c
 10691  0104C6  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10692  0104C8  0009               	tblrd		*+
 10693  0104CA  50F5               	movf	tablat,w,c
 10694  0104CC  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10695  0104CE  0009               	tblrd		*+
 10696  0104D0  50F5               	movf	tablat,w,c
 10697  0104D2  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10698  0104D4  A0D8               	btfss	status,0,c
 10699  0104D6  D002               	goto	u10500
 10700                           
 10701                           ; BSR set to: 1
 10702                           
 10703                           ; BSR set to: 1
 10704                           
 10705                           ; BSR set to: 1
 10706                           ;doprnt.c: 1138: break;
 10707  0104D8  2B8D               	incf	printf@c& (0+255),f,b
 10708  0104DA  D7E1               	goto	l8962
 10709  0104DC                     u10500:
 10710                           
 10711                           ; BSR set to: 1
 10712                           ;doprnt.c: 1175: {
 10713                           ;doprnt.c: 1188: if(flag & 0x03)
 10714                           
 10715                           ; BSR set to: 1
 10716  0104DC  0E03               	movlw	3
 10717  0104DE  157C               	andwf	printf@flag& (0+255),w,b
 10718  0104E0  6F6C               	movwf	??_printf& (0+255),b
 10719  0104E2  0E00               	movlw	0
 10720  0104E4  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10721  0104E6  6F6D               	movwf	(??_printf+1)& (0+255),b
 10722  0104E8  516C               	movf	??_printf& (0+255),w,b
 10723  0104EA  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10724  0104EC  B4D8               	btfsc	status,2,c
 10725  0104EE  D04E               	goto	l1152
 10726                           
 10727                           ; BSR set to: 1
 10728                           ;doprnt.c: 1190: (putch('-') );
 10729  0104F0  0E2D               	movlw	45
 10730  0104F2  EC37  F0B2         	call	_putch
 10731                           
 10732                           ;doprnt.c: 1195: }
 10733                           ;doprnt.c: 1196: while(c--) {
 10734  0104F6  D04A               	goto	l1152
 10735  0104F8                     
 10736                           ;doprnt.c: 1200: {
 10737                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10738  0104F8  C184  F117         	movff	printf@val,___lldiv@dividend
 10739  0104FC  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10740  010500  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10741  010504  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10742  010508  0101               	movlb	1	; () banked
 10743  01050A  518D               	movf	printf@c& (0+255),w,b
 10744  01050C  0D04               	mullw	4
 10745  01050E  0E79               	movlw	low _dpowers
 10746  010510  24F3               	addwf	prodl,w,c
 10747  010512  6EF6               	movwf	tblptrl,c
 10748  010514  0EF1               	movlw	high _dpowers
 10749  010516  20F4               	addwfc	prodh,w,c
 10750  010518  6EF7               	movwf	tblptrh,c
 10751  01051A                     	if	1	;There are 3 active tblptr bytes
 10752  01051A  6AF8               	clrf	tblptru,c
 10753  01051C  0E00               	movlw	low (__mediumconst shr (0+16))
 10754  01051E  22F8               	addwfc	tblptru,f,c
 10755  010520                     	endif
 10756  010520  0009               	tblrd		*+
 10757  010522  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10758  010526  0009               	tblrd		*+
 10759  010528  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10760  01052C  0009               	tblrd		*+
 10761  01052E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10762  010532  000A               	tblrd		*-
 10763  010534  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10764  010538  ECBB  F0AA         	call	___lldiv	;wreg free
 10765  01053C  C117  F180         	movff	?___lldiv,printf@tmpval
 10766  010540  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10767  010544  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10768  010548  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10769                           
 10770                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10771  01054C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10772  010550  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10773  010554  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10774  010558  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10775  01055C  0E0A               	movlw	10
 10776  01055E  0101               	movlb	1	; () banked
 10777  010560  6F28               	movwf	___llmod@divisor& (0+255),b
 10778  010562  0E00               	movlw	0
 10779  010564  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10780  010566  0E00               	movlw	0
 10781  010568  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10782  01056A  0E00               	movlw	0
 10783  01056C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10784  01056E  ECD8  F0AC         	call	___llmod	;wreg free
 10785  010572  C124  F180         	movff	?___llmod,printf@tmpval
 10786  010576  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10787  01057A  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10788  01057E  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10789                           
 10790                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 10791  010582  0101               	movlb	1	; () banked
 10792  010584  5180               	movf	printf@tmpval& (0+255),w,b
 10793  010586  0F30               	addlw	48
 10794  010588  EC37  F0B2         	call	_putch
 10795  01058C                     l1152:
 10796  01058C  0101               	movlb	1	; () banked
 10797  01058E  078D               	decf	printf@c& (0+255),f,b
 10798  010590  298D               	incf	printf@c& (0+255),w,b
 10799  010592  B4D8               	btfsc	status,2,c
 10800  010594  D008               	goto	l1155
 10801  010596  D7B0               	goto	l1153
 10802  010598                     l8986:
 10803                           
 10804                           ; BSR set to: 1
 10805                           ;doprnt.c: 1208: (putch('0') );
 10806  010598  0E30               	movlw	48
 10807  01059A  EC37  F0B2         	call	_putch
 10808                           
 10809                           ;doprnt.c: 1209: exp--;
 10810  01059E  0101               	movlb	1	; () banked
 10811  0105A0  077E               	decf	printf@exp& (0+255),f,b
 10812  0105A2  A0D8               	btfss	status,0,c
 10813  0105A4  077F               	decf	(printf@exp+1)& (0+255),f,b
 10814  0105A6                     l1155:
 10815                           
 10816                           ; BSR set to: 1
 10817                           
 10818                           ; BSR set to: 1
 10819  0105A6  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10820  0105A8  D005               	goto	u10530
 10821  0105AA  517F               	movf	(printf@exp+1)& (0+255),w,b
 10822  0105AC  E1F5               	bnz	l8986
 10823  0105AE  057E               	decf	printf@exp& (0+255),w,b
 10824  0105B0  B0D8               	btfsc	status,0,c
 10825  0105B2  D7F2               	goto	l1156
 10826  0105B4                     u10530:
 10827                           
 10828                           ; BSR set to: 1
 10829                           ;doprnt.c: 1210: }
 10830                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10831                           
 10832                           ; BSR set to: 1
 10833  0105B4  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 10834  0105B6  D009               	goto	l1158
 10835  0105B8  518C               	movf	(printf@prec+1)& (0+255),w,b
 10836  0105BA  E104               	bnz	u10540
 10837  0105BC  0E09               	movlw	9
 10838  0105BE  5D8B               	subwf	printf@prec& (0+255),w,b
 10839  0105C0  A0D8               	btfss	status,0,c
 10840  0105C2  D003               	goto	l1158
 10841  0105C4                     u10540:
 10842                           
 10843                           ; BSR set to: 1
 10844                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 10845  0105C4  0E08               	movlw	8
 10846  0105C6  6F8D               	movwf	printf@c& (0+255),b
 10847  0105C8  D002               	goto	l1159
 10848  0105CA                     l1158:
 10849                           
 10850                           ; BSR set to: 1
 10851                           ;doprnt.c: 1213: else
 10852                           ;doprnt.c: 1214: c = prec;
 10853  0105CA  C18B  F18D         	movff	printf@prec,printf@c
 10854  0105CE                     l1159:
 10855                           
 10856                           ; BSR set to: 1
 10857                           ;doprnt.c: 1215: prec -= c;
 10858                           
 10859                           ; BSR set to: 1
 10860  0105CE  518D               	movf	printf@c& (0+255),w,b
 10861  0105D0  5F8B               	subwf	printf@prec& (0+255),f,b
 10862  0105D2  0E00               	movlw	0
 10863  0105D4  BF8D               	btfsc	printf@c& (0+255),7,b
 10864  0105D6  0EFF               	movlw	255
 10865  0105D8  5B8C               	subwfb	(printf@prec+1)& (0+255),f,b
 10866                           
 10867                           ; BSR set to: 1
 10868                           ;doprnt.c: 1219: if(c)
 10869  0105DA  518D               	movf	printf@c& (0+255),w,b
 10870  0105DC  B4D8               	btfsc	status,2,c
 10871  0105DE  D003               	goto	l1160
 10872                           
 10873                           ; BSR set to: 1
 10874                           ;doprnt.c: 1221: (putch('.') );
 10875  0105E0  0E2E               	movlw	46
 10876  0105E2  EC37  F0B2         	call	_putch
 10877  0105E6                     l1160:
 10878                           
 10879                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10880  0105E6  0101               	movlb	1	; () banked
 10881  0105E8  518D               	movf	printf@c& (0+255),w,b
 10882  0105EA  EC5B  F091         	call	_scale
 10883  0105EE  C155  F172         	movff	?_scale,_printf$3152
 10884  0105F2  C156  F173         	movff	?_scale+1,_printf$3152+1
 10885  0105F6  C157  F174         	movff	?_scale+2,_printf$3152+2
 10886                           
 10887                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10888  0105FA  C188  F149         	movff	printf@fval,___ftmul@f2
 10889  0105FE  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 10890  010602  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 10891  010606  C172  F146         	movff	_printf$3152,___ftmul@f1
 10892  01060A  C173  F147         	movff	_printf$3152+1,___ftmul@f1+1
 10893  01060E  C174  F148         	movff	_printf$3152+2,___ftmul@f1+2
 10894  010612  EC00  F0A4         	call	___ftmul	;wreg free
 10895  010616  C146  F155         	movff	?___ftmul,___fttol@f1
 10896  01061A  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 10897  01061E  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 10898  010622  EC84  F0A3         	call	___fttol	;wreg free
 10899  010626  C155  F184         	movff	?___fttol,printf@val
 10900  01062A  C156  F185         	movff	?___fttol+1,printf@val+1
 10901  01062E  C157  F186         	movff	?___fttol+2,printf@val+2
 10902  010632  C158  F187         	movff	?___fttol+3,printf@val+3
 10903                           
 10904                           ;doprnt.c: 1228: while(c--) {
 10905  010636  D074               	goto	l1161
 10906  010638                     
 10907                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10908  010638  C184  F117         	movff	printf@val,___lldiv@dividend
 10909  01063C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10910  010640  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10911  010644  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10912  010648  0101               	movlb	1	; () banked
 10913  01064A  518D               	movf	printf@c& (0+255),w,b
 10914  01064C  0D04               	mullw	4
 10915  01064E  0E79               	movlw	low _dpowers
 10916  010650  24F3               	addwf	prodl,w,c
 10917  010652  6EF6               	movwf	tblptrl,c
 10918  010654  0EF1               	movlw	high _dpowers
 10919  010656  20F4               	addwfc	prodh,w,c
 10920  010658  6EF7               	movwf	tblptrh,c
 10921  01065A                     	if	1	;There are 3 active tblptr bytes
 10922  01065A  6AF8               	clrf	tblptru,c
 10923  01065C  0E00               	movlw	low (__mediumconst shr (0+16))
 10924  01065E  22F8               	addwfc	tblptru,f,c
 10925  010660                     	endif
 10926  010660  0009               	tblrd		*+
 10927  010662  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10928  010666  0009               	tblrd		*+
 10929  010668  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10930  01066C  0009               	tblrd		*+
 10931  01066E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10932  010672  000A               	tblrd		*-
 10933  010674  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10934  010678  ECBB  F0AA         	call	___lldiv	;wreg free
 10935  01067C  C117  F180         	movff	?___lldiv,printf@tmpval
 10936  010680  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10937  010684  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10938  010688  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10939                           
 10940                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10941  01068C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10942  010690  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10943  010694  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10944  010698  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10945  01069C  0E0A               	movlw	10
 10946  01069E  0101               	movlb	1	; () banked
 10947  0106A0  6F28               	movwf	___llmod@divisor& (0+255),b
 10948  0106A2  0E00               	movlw	0
 10949  0106A4  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10950  0106A6  0E00               	movlw	0
 10951  0106A8  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10952  0106AA  0E00               	movlw	0
 10953  0106AC  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10954  0106AE  ECD8  F0AC         	call	___llmod	;wreg free
 10955  0106B2  C124  F180         	movff	?___llmod,printf@tmpval
 10956  0106B6  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10957  0106BA  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10958  0106BE  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10959                           
 10960                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 10961  0106C2  0101               	movlb	1	; () banked
 10962  0106C4  5180               	movf	printf@tmpval& (0+255),w,b
 10963  0106C6  0F30               	addlw	48
 10964  0106C8  EC37  F0B2         	call	_putch
 10965                           
 10966                           ;doprnt.c: 1232: val %= dpowers[c];
 10967  0106CC  C184  F124         	movff	printf@val,___llmod@dividend
 10968  0106D0  C185  F125         	movff	printf@val+1,___llmod@dividend+1
 10969  0106D4  C186  F126         	movff	printf@val+2,___llmod@dividend+2
 10970  0106D8  C187  F127         	movff	printf@val+3,___llmod@dividend+3
 10971  0106DC  0101               	movlb	1	; () banked
 10972  0106DE  518D               	movf	printf@c& (0+255),w,b
 10973  0106E0  0D04               	mullw	4
 10974  0106E2  0E79               	movlw	low _dpowers
 10975  0106E4  24F3               	addwf	prodl,w,c
 10976  0106E6  6EF6               	movwf	tblptrl,c
 10977  0106E8  0EF1               	movlw	high _dpowers
 10978  0106EA  20F4               	addwfc	prodh,w,c
 10979  0106EC  6EF7               	movwf	tblptrh,c
 10980  0106EE                     	if	1	;There are 3 active tblptr bytes
 10981  0106EE  6AF8               	clrf	tblptru,c
 10982  0106F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10983  0106F2  22F8               	addwfc	tblptru,f,c
 10984  0106F4                     	endif
 10985  0106F4  0009               	tblrd		*+
 10986  0106F6  CFF5 F128          	movff	tablat,___llmod@divisor
 10987  0106FA  0009               	tblrd		*+
 10988  0106FC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 10989  010700  0009               	tblrd		*+
 10990  010702  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 10991  010706  000A               	tblrd		*-
 10992  010708  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 10993  01070C  ECD8  F0AC         	call	___llmod	;wreg free
 10994  010710  C124  F184         	movff	?___llmod,printf@val
 10995  010714  C125  F185         	movff	?___llmod+1,printf@val+1
 10996  010718  C126  F186         	movff	?___llmod+2,printf@val+2
 10997  01071C  C127  F187         	movff	?___llmod+3,printf@val+3
 10998  010720                     l1161:
 10999  010720  0101               	movlb	1	; () banked
 11000  010722  078D               	decf	printf@c& (0+255),f,b
 11001  010724  298D               	incf	printf@c& (0+255),w,b
 11002  010726  B4D8               	btfsc	status,2,c
 11003  010728  D008               	goto	l1164
 11004  01072A  D786               	goto	l1162
 11005  01072C                     
 11006                           ; BSR set to: 1
 11007                           ;doprnt.c: 1236: (putch('0') );
 11008                           
 11009                           ; BSR set to: 1
 11010  01072C  0E30               	movlw	48
 11011  01072E  EC37  F0B2         	call	_putch
 11012                           
 11013                           ;doprnt.c: 1237: prec--;
 11014  010732  0101               	movlb	1	; () banked
 11015  010734  078B               	decf	printf@prec& (0+255),f,b
 11016  010736  A0D8               	btfss	status,0,c
 11017  010738  078C               	decf	(printf@prec+1)& (0+255),f,b
 11018  01073A                     l1164:
 11019                           
 11020                           ; BSR set to: 1
 11021                           
 11022                           ; BSR set to: 1
 11023  01073A  518B               	movf	printf@prec& (0+255),w,b
 11024  01073C  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 11025  01073E  B4D8               	btfsc	status,2,c
 11026  010740  D157               	goto	u10710
 11027  010742  D7F4               	goto	l1165
 11028  010744                     l1129:
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;doprnt.c: 1246: }
 11032                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11033                           
 11034                           ; BSR set to: 1
 11035  010744  0EC0               	movlw	192
 11036  010746  157C               	andwf	printf@flag& (0+255),w,b
 11037  010748  6F6C               	movwf	??_printf& (0+255),b
 11038  01074A  0E00               	movlw	0
 11039  01074C  157D               	andwf	(printf@flag+1)& (0+255),w,b
 11040  01074E  6F6D               	movwf	(??_printf+1)& (0+255),b
 11041  010750  516C               	movf	??_printf& (0+255),w,b
 11042  010752  116D               	iorwf	(??_printf+1)& (0+255),w,b
 11043  010754  A4D8               	btfss	status,2,c
 11044  010756  D01E               	goto	l1167
 11045                           
 11046                           ; BSR set to: 1
 11047                           ;doprnt.c: 1253: {
 11048                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11049  010758  C17A  FFD9         	movff	printf@ap,fsr2l
 11050  01075C  C17B  FFDA         	movff	printf@ap+1,fsr2h
 11051  010760  CFDE F184          	movff	postinc2,printf@val
 11052  010764  CFDD F185          	movff	postdec2,printf@val+1
 11053  010768  0E00               	movlw	0
 11054  01076A  BF85               	btfsc	(printf@val+1)& (0+255),7,b
 11055  01076C  0EFF               	movlw	-1
 11056  01076E  6F86               	movwf	(printf@val+2)& (0+255),b
 11057  010770  6F87               	movwf	(printf@val+3)& (0+255),b
 11058                           
 11059                           ; BSR set to: 1
 11060  010772  0E02               	movlw	2
 11061  010774  277A               	addwf	printf@ap& (0+255),f,b
 11062  010776  0E00               	movlw	0
 11063  010778  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;doprnt.c: 1261: if((long)val < 0) {
 11067  01077A  AF87               	btfss	(printf@val+3)& (0+255),7,b
 11068  01077C  D01D               	goto	l1169
 11069                           
 11070                           ; BSR set to: 1
 11071                           ;doprnt.c: 1262: flag |= 0x03;
 11072  01077E  0E03               	movlw	3
 11073  010780  137C               	iorwf	printf@flag& (0+255),f,b
 11074                           
 11075                           ; BSR set to: 1
 11076                           ;doprnt.c: 1263: val = -val;
 11077  010782  1F87               	comf	(printf@val+3)& (0+255),f,b
 11078  010784  1F86               	comf	(printf@val+2)& (0+255),f,b
 11079  010786  1F85               	comf	(printf@val+1)& (0+255),f,b
 11080  010788  6D84               	negf	printf@val& (0+255),b
 11081  01078A  0E00               	movlw	0
 11082  01078C  2385               	addwfc	(printf@val+1)& (0+255),f,b
 11083  01078E  2386               	addwfc	(printf@val+2)& (0+255),f,b
 11084  010790  2387               	addwfc	(printf@val+3)& (0+255),f,b
 11085                           
 11086                           ; BSR set to: 1
 11087                           ;doprnt.c: 1264: }
 11088                           ;doprnt.c: 1266: }
 11089  010792  D012               	goto	l1169
 11090  010794                     l1167:
 11091                           
 11092                           ; BSR set to: 1
 11093                           ;doprnt.c: 1268: else
 11094                           ;doprnt.c: 1273: {
 11095                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11096                           
 11097                           ; BSR set to: 1
 11098  010794  C17A  FFD9         	movff	printf@ap,fsr2l
 11099  010798  C17B  FFDA         	movff	printf@ap+1,fsr2h
 11100  01079C  CFDE F16C          	movff	postinc2,??_printf
 11101  0107A0  CFDD F16D          	movff	postdec2,??_printf+1
 11102  0107A4  C16C  F184         	movff	??_printf,printf@val
 11103  0107A8  C16D  F185         	movff	??_printf+1,printf@val+1
 11104  0107AC  6B86               	clrf	(printf@val+2)& (0+255),b
 11105  0107AE  6B87               	clrf	(printf@val+3)& (0+255),b
 11106                           
 11107                           ; BSR set to: 1
 11108  0107B0  0E02               	movlw	2
 11109  0107B2  277A               	addwf	printf@ap& (0+255),f,b
 11110  0107B4  0E00               	movlw	0
 11111  0107B6  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 11112  0107B8                     l1169:
 11113                           
 11114                           ; BSR set to: 1
 11115                           ;doprnt.c: 1287: }
 11116                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11117                           
 11118                           ; BSR set to: 1
 11119  0107B8  518B               	movf	printf@prec& (0+255),w,b
 11120  0107BA  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 11121  0107BC  A4D8               	btfss	status,2,c
 11122  0107BE  D04B               	goto	l1171
 11123                           
 11124                           ; BSR set to: 1
 11125  0107C0  5184               	movf	printf@val& (0+255),w,b
 11126  0107C2  1185               	iorwf	(printf@val+1)& (0+255),w,b
 11127  0107C4  1186               	iorwf	(printf@val+2)& (0+255),w,b
 11128  0107C6  1187               	iorwf	(printf@val+3)& (0+255),w,b
 11129  0107C8  A4D8               	btfss	status,2,c
 11130  0107CA  D045               	goto	l1171
 11131                           
 11132                           ; BSR set to: 1
 11133                           ;doprnt.c: 1291: prec++;
 11134  0107CC  4B8B               	infsnz	printf@prec& (0+255),f,b
 11135  0107CE  2B8C               	incf	(printf@prec+1)& (0+255),f,b
 11136                           
 11137                           ; BSR set to: 1
 11138                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11139  0107D0  D042               	goto	l1171
 11140  0107D2                     
 11141                           ; BSR set to: 1
 11142                           ;doprnt.c: 1302: case 0xC0:
 11143                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11144                           
 11145                           ; BSR set to: 1
 11146                           
 11147                           ; BSR set to: 1
 11148  0107D2  0E01               	movlw	1
 11149  0107D4  6F8D               	movwf	printf@c& (0+255),b
 11150  0107D6                     l9046:
 11151                           
 11152                           ; BSR set to: 1
 11153  0107D6  0E0A               	movlw	10
 11154  0107D8  198D               	xorwf	printf@c& (0+255),w,b
 11155  0107DA  B4D8               	btfsc	status,2,c
 11156  0107DC  D047               	goto	l1177
 11157                           
 11158                           ; BSR set to: 1
 11159                           ;doprnt.c: 1306: if(val < dpowers[c])
 11160                           
 11161                           ; BSR set to: 1
 11162                           
 11163                           ; BSR set to: 1
 11164  0107DE  518D               	movf	printf@c& (0+255),w,b
 11165  0107E0  0D04               	mullw	4
 11166  0107E2  0E79               	movlw	low _dpowers
 11167  0107E4  24F3               	addwf	prodl,w,c
 11168  0107E6  6EF6               	movwf	tblptrl,c
 11169  0107E8  0EF1               	movlw	high _dpowers
 11170  0107EA  20F4               	addwfc	prodh,w,c
 11171  0107EC  6EF7               	movwf	tblptrh,c
 11172  0107EE                     	if	1	;There are 3 active tblptr bytes
 11173  0107EE  6AF8               	clrf	tblptru,c
 11174  0107F0  0E00               	movlw	low (__mediumconst shr (0+16))
 11175  0107F2  22F8               	addwfc	tblptru,f,c
 11176  0107F4                     	endif
 11177  0107F4  0009               	tblrd		*+
 11178  0107F6  50F5               	movf	tablat,w,c
 11179  0107F8  5D84               	subwf	printf@val& (0+255),w,b
 11180  0107FA  0009               	tblrd		*+
 11181  0107FC  50F5               	movf	tablat,w,c
 11182  0107FE  5985               	subwfb	(printf@val+1)& (0+255),w,b
 11183  010800  0009               	tblrd		*+
 11184  010802  50F5               	movf	tablat,w,c
 11185  010804  5986               	subwfb	(printf@val+2)& (0+255),w,b
 11186  010806  0009               	tblrd		*+
 11187  010808  50F5               	movf	tablat,w,c
 11188  01080A  5987               	subwfb	(printf@val+3)& (0+255),w,b
 11189  01080C  A0D8               	btfss	status,0,c
 11190  01080E  D02E               	goto	l1177
 11191                           
 11192                           ; BSR set to: 1
 11193                           
 11194                           ; BSR set to: 1
 11195                           
 11196                           ; BSR set to: 1
 11197                           ;doprnt.c: 1307: break;
 11198  010810  2B8D               	incf	printf@c& (0+255),f,b
 11199  010812  D7E1               	goto	l9046
 11200  010814                     
 11201                           ; BSR set to: 1
 11202                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11203                           
 11204                           ; BSR set to: 1
 11205  010814  0E01               	movlw	1
 11206  010816  6F8D               	movwf	printf@c& (0+255),b
 11207  010818                     l9060:
 11208                           
 11209                           ; BSR set to: 1
 11210  010818  0E08               	movlw	8
 11211  01081A  198D               	xorwf	printf@c& (0+255),w,b
 11212  01081C  B4D8               	btfsc	status,2,c
 11213  01081E  D026               	goto	l1177
 11214                           
 11215                           ; BSR set to: 1
 11216                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11217                           
 11218                           ; BSR set to: 1
 11219                           
 11220                           ; BSR set to: 1
 11221  010820  518D               	movf	printf@c& (0+255),w,b
 11222  010822  0D04               	mullw	4
 11223  010824  0EEF               	movlw	low _hexpowers
 11224  010826  24F3               	addwf	prodl,w,c
 11225  010828  6EF6               	movwf	tblptrl,c
 11226  01082A  0EF1               	movlw	high _hexpowers
 11227  01082C  20F4               	addwfc	prodh,w,c
 11228  01082E  6EF7               	movwf	tblptrh,c
 11229  010830                     	if	1	;There are 3 active tblptr bytes
 11230  010830  6AF8               	clrf	tblptru,c
 11231  010832  0E00               	movlw	low (__mediumconst shr (0+16))
 11232  010834  22F8               	addwfc	tblptru,f,c
 11233  010836                     	endif
 11234  010836  0009               	tblrd		*+
 11235  010838  50F5               	movf	tablat,w,c
 11236  01083A  5D84               	subwf	printf@val& (0+255),w,b
 11237  01083C  0009               	tblrd		*+
 11238  01083E  50F5               	movf	tablat,w,c
 11239  010840  5985               	subwfb	(printf@val+1)& (0+255),w,b
 11240  010842  0009               	tblrd		*+
 11241  010844  50F5               	movf	tablat,w,c
 11242  010846  5986               	subwfb	(printf@val+2)& (0+255),w,b
 11243  010848  0009               	tblrd		*+
 11244  01084A  50F5               	movf	tablat,w,c
 11245  01084C  5987               	subwfb	(printf@val+3)& (0+255),w,b
 11246  01084E  A0D8               	btfss	status,0,c
 11247  010850  D00D               	goto	l1177
 11248                           
 11249                           ; BSR set to: 1
 11250                           
 11251                           ; BSR set to: 1
 11252                           
 11253                           ; BSR set to: 1
 11254                           ;doprnt.c: 1318: break;
 11255  010852  2B8D               	incf	printf@c& (0+255),f,b
 11256  010854  D7E1               	goto	l9060
 11257  010856                     l1171:
 11258                           
 11259                           ; BSR set to: 1
 11260                           
 11261                           ; BSR set to: 1
 11262  010856  517C               	movf	printf@flag& (0+255),w,b
 11263  010858  0BC0               	andlw	192
 11264                           
 11265                           ; Switch size 1, requested type "space"
 11266                           ; Number of cases is 3, Range of values is 0 to 192
 11267                           ; switch strategies available:
 11268                           ; Name         Instructions Cycles
 11269                           ; simple_byte           10     6 (average)
 11270                           ;	Chosen strategy is simple_byte
 11271  01085A  0A00               	xorlw	0	; case 0
 11272  01085C  B4D8               	btfsc	status,2,c
 11273  01085E  D7B9               	goto	l1172
 11274  010860  0A80               	xorlw	128	; case 128
 11275  010862  B4D8               	btfsc	status,2,c
 11276  010864  D7D7               	goto	l1178
 11277  010866  0A40               	xorlw	64	; case 192
 11278  010868  B4D8               	btfsc	status,2,c
 11279  01086A  D7B3               	goto	l1172
 11280  01086C                     l1177:
 11281                           
 11282                           ; BSR set to: 1
 11283                           ;doprnt.c: 1339: if(c < prec)
 11284                           
 11285                           ; BSR set to: 1
 11286  01086C  0E80               	movlw	128
 11287  01086E  BF8D               	btfsc	printf@c& (0+255),7,b
 11288  010870  0E7F               	movlw	127
 11289  010872  6F6C               	movwf	??_printf& (0+255),b
 11290  010874  518B               	movf	printf@prec& (0+255),w,b
 11291  010876  5D8D               	subwf	printf@c& (0+255),w,b
 11292  010878  518C               	movf	(printf@prec+1)& (0+255),w,b
 11293  01087A  0A80               	xorlw	128
 11294  01087C  596C               	subwfb	??_printf& (0+255),w,b
 11295  01087E  B0D8               	btfsc	status,0,c
 11296  010880  D003               	goto	l1182
 11297                           
 11298                           ; BSR set to: 1
 11299                           ;doprnt.c: 1340: c = prec;
 11300  010882  C18B  F18D         	movff	printf@prec,printf@c
 11301  010886  D010               	goto	l1184
 11302  010888                     l1182:
 11303                           
 11304                           ; BSR set to: 1
 11305                           ;doprnt.c: 1341: else if(prec < c)
 11306                           
 11307                           ; BSR set to: 1
 11308  010888  518C               	movf	(printf@prec+1)& (0+255),w,b
 11309  01088A  0A80               	xorlw	128
 11310  01088C  6F6C               	movwf	??_printf& (0+255),b
 11311  01088E  518D               	movf	printf@c& (0+255),w,b
 11312  010890  5D8B               	subwf	printf@prec& (0+255),w,b
 11313  010892  0E80               	movlw	128
 11314  010894  BF8D               	btfsc	printf@c& (0+255),7,b
 11315  010896  0E7F               	movlw	127
 11316  010898  596C               	subwfb	??_printf& (0+255),w,b
 11317  01089A  B0D8               	btfsc	status,0,c
 11318  01089C  D005               	goto	l1184
 11319                           
 11320                           ; BSR set to: 1
 11321                           ;doprnt.c: 1342: prec = c;
 11322  01089E  518D               	movf	printf@c& (0+255),w,b
 11323  0108A0  6F8B               	movwf	printf@prec& (0+255),b
 11324  0108A2  6B8C               	clrf	(printf@prec+1)& (0+255),b
 11325  0108A4  BF8B               	btfsc	printf@prec& (0+255),7,b
 11326  0108A6  078C               	decf	(printf@prec+1)& (0+255),f,b
 11327  0108A8                     l1184:
 11328                           
 11329                           ; BSR set to: 1
 11330                           ;doprnt.c: 1422: {
 11331                           ;doprnt.c: 1438: if(flag & 0x03)
 11332                           
 11333                           ; BSR set to: 1
 11334                           
 11335                           ; BSR set to: 1
 11336  0108A8  0E03               	movlw	3
 11337  0108AA  157C               	andwf	printf@flag& (0+255),w,b
 11338  0108AC  6F6C               	movwf	??_printf& (0+255),b
 11339  0108AE  0E00               	movlw	0
 11340  0108B0  157D               	andwf	(printf@flag+1)& (0+255),w,b
 11341  0108B2  6F6D               	movwf	(??_printf+1)& (0+255),b
 11342  0108B4  516C               	movf	??_printf& (0+255),w,b
 11343  0108B6  116D               	iorwf	(??_printf+1)& (0+255),w,b
 11344  0108B8  B4D8               	btfsc	status,2,c
 11345  0108BA  D091               	goto	l1186
 11346                           
 11347                           ; BSR set to: 1
 11348                           ;doprnt.c: 1439: (putch('-') );
 11349  0108BC  0E2D               	movlw	45
 11350  0108BE  EC37  F0B2         	call	_putch
 11351                           
 11352                           ;doprnt.c: 1469: }
 11353                           ;doprnt.c: 1474: while(prec--) {
 11354  0108C2  D08D               	goto	l1186
 11355  0108C4                     
 11356                           ;doprnt.c: 1486: case 0xC0:
 11357                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11358  0108C4  C18B  F16C         	movff	printf@prec,??_printf
 11359  0108C8  C18C  F16D         	movff	printf@prec+1,??_printf+1
 11360  0108CC  0101               	movlb	1	; () banked
 11361  0108CE  90D8               	bcf	status,0,c
 11362  0108D0  376C               	rlcf	??_printf& (0+255),f,b
 11363  0108D2  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11364  0108D4  90D8               	bcf	status,0,c
 11365  0108D6  376C               	rlcf	??_printf& (0+255),f,b
 11366  0108D8  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11367  0108DA  0E79               	movlw	low _dpowers
 11368  0108DC  256C               	addwf	??_printf& (0+255),w,b
 11369  0108DE  6EF6               	movwf	tblptrl,c
 11370  0108E0  0EF1               	movlw	high _dpowers
 11371  0108E2  216D               	addwfc	(??_printf+1)& (0+255),w,b
 11372  0108E4  6EF7               	movwf	tblptrh,c
 11373  0108E6                     	if	1	;There are 3 active tblptr bytes
 11374  0108E6  6AF8               	clrf	tblptru,c
 11375  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11376  0108EA  22F8               	addwfc	tblptru,f,c
 11377  0108EC                     	endif
 11378  0108EC  0009               	tblrd		*+
 11379  0108EE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 11380  0108F2  0009               	tblrd		*+
 11381  0108F4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 11382  0108F8  0009               	tblrd		*+
 11383  0108FA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 11384  0108FE  000A               	tblrd		*-
 11385  010900  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 11386  010904  C184  F117         	movff	printf@val,___lldiv@dividend
 11387  010908  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 11388  01090C  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 11389  010910  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 11390  010914  ECBB  F0AA         	call	___lldiv	;wreg free
 11391  010918  C117  F124         	movff	?___lldiv,___llmod@dividend
 11392  01091C  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 11393  010920  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 11394  010924  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 11395  010928  0E0A               	movlw	10
 11396  01092A  0101               	movlb	1	; () banked
 11397  01092C  6F28               	movwf	___llmod@divisor& (0+255),b
 11398  01092E  0E00               	movlw	0
 11399  010930  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 11400  010932  0E00               	movlw	0
 11401  010934  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 11402  010936  0E00               	movlw	0
 11403  010938  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 11404  01093A  ECD8  F0AC         	call	___llmod	;wreg free
 11405  01093E  0101               	movlb	1	; () banked
 11406  010940  5124               	movf	?___llmod& (0+255),w,b
 11407  010942  0F30               	addlw	48
 11408  010944  6F8D               	movwf	printf@c& (0+255),b
 11409                           
 11410                           ;doprnt.c: 1491: break;
 11411  010946  D048               	goto	l1191
 11412  010948                     
 11413                           ; BSR set to: 1
 11414                           ;doprnt.c: 1499: {
 11415                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11416                           
 11417                           ; BSR set to: 1
 11418  010948  C184  F117         	movff	printf@val,___lldiv@dividend
 11419  01094C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 11420  010950  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 11421  010954  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 11422  010958  C18B  F16C         	movff	printf@prec,??_printf
 11423  01095C  C18C  F16D         	movff	printf@prec+1,??_printf+1
 11424  010960  90D8               	bcf	status,0,c
 11425  010962  376C               	rlcf	??_printf& (0+255),f,b
 11426  010964  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11427  010966  90D8               	bcf	status,0,c
 11428  010968  376C               	rlcf	??_printf& (0+255),f,b
 11429  01096A  376D               	rlcf	(??_printf+1)& (0+255),f,b
 11430  01096C  0EEF               	movlw	low _hexpowers
 11431  01096E  256C               	addwf	??_printf& (0+255),w,b
 11432  010970  6EF6               	movwf	tblptrl,c
 11433  010972  0EF1               	movlw	high _hexpowers
 11434  010974  216D               	addwfc	(??_printf+1)& (0+255),w,b
 11435  010976  6EF7               	movwf	tblptrh,c
 11436  010978                     	if	1	;There are 3 active tblptr bytes
 11437  010978  6AF8               	clrf	tblptru,c
 11438  01097A  0E00               	movlw	low (__mediumconst shr (0+16))
 11439  01097C  22F8               	addwfc	tblptru,f,c
 11440  01097E                     	endif
 11441  01097E  0009               	tblrd		*+
 11442  010980  CFF5 F11B          	movff	tablat,___lldiv@divisor
 11443  010984  0009               	tblrd		*+
 11444  010986  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 11445  01098A  0009               	tblrd		*+
 11446  01098C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 11447  010990  000A               	tblrd		*-
 11448  010992  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 11449  010996  ECBB  F0AA         	call	___lldiv	;wreg free
 11450  01099A  0101               	movlb	1	; () banked
 11451  01099C  5117               	movf	?___lldiv& (0+255),w,b
 11452  01099E  0B0F               	andlw	15
 11453  0109A0  6F75               	movwf	printf@idx& (0+255),b
 11454                           
 11455                           ; BSR set to: 1
 11456                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 11457  0109A2  5175               	movf	printf@idx& (0+255),w,b
 11458  0109A4  0D01               	mullw	1
 11459  0109A6  0ED5               	movlw	low STR_95
 11460  0109A8  24F3               	addwf	prodl,w,c
 11461  0109AA  6EF6               	movwf	tblptrl,c
 11462  0109AC  0EFE               	movlw	high STR_95
 11463  0109AE  20F4               	addwfc	prodh,w,c
 11464  0109B0  6EF7               	movwf	tblptrh,c
 11465  0109B2                     	if	1	;There are 3 active tblptr bytes
 11466  0109B2  6AF8               	clrf	tblptru,c
 11467  0109B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11468  0109B6  22F8               	addwfc	tblptru,f,c
 11469  0109B8                     	endif
 11470  0109B8  0008               	tblrd		*
 11471  0109BA  CFF5 F18D          	movff	tablat,printf@c
 11472                           
 11473                           ; BSR set to: 1
 11474                           ;doprnt.c: 1523: }
 11475                           
 11476                           ;doprnt.c: 1508: }
 11477                           ;doprnt.c: 1510: break;
 11478  0109BE  D00C               	goto	l1191
 11479  0109C0                     l9096:
 11480  0109C0  0101               	movlb	1	; () banked
 11481  0109C2  517C               	movf	printf@flag& (0+255),w,b
 11482  0109C4  0BC0               	andlw	192
 11483                           
 11484                           ; Switch size 1, requested type "space"
 11485                           ; Number of cases is 3, Range of values is 0 to 192
 11486                           ; switch strategies available:
 11487                           ; Name         Instructions Cycles
 11488                           ; simple_byte           10     6 (average)
 11489                           ;	Chosen strategy is simple_byte
 11490  0109C6  0A00               	xorlw	0	; case 0
 11491  0109C8  B4D8               	btfsc	status,2,c
 11492  0109CA  D77C               	goto	l1189
 11493  0109CC  0A80               	xorlw	128	; case 128
 11494  0109CE  B4D8               	btfsc	status,2,c
 11495  0109D0  D7BB               	goto	l1192
 11496  0109D2  0A40               	xorlw	64	; case 192
 11497  0109D4  B4D8               	btfsc	status,2,c
 11498  0109D6  D776               	goto	l1189
 11499  0109D8                     l1191:
 11500                           
 11501                           ; BSR set to: 1
 11502                           ;doprnt.c: 1524: (putch(c) );
 11503                           
 11504                           ; BSR set to: 1
 11505  0109D8  518D               	movf	printf@c& (0+255),w,b
 11506  0109DA  EC37  F0B2         	call	_putch
 11507  0109DE                     l1186:
 11508  0109DE  0101               	movlb	1	; () banked
 11509  0109E0  078B               	decf	printf@prec& (0+255),f,b
 11510  0109E2  A0D8               	btfss	status,0,c
 11511  0109E4  078C               	decf	(printf@prec+1)& (0+255),f,b
 11512  0109E6  298B               	incf	printf@prec& (0+255),w,b
 11513  0109E8  E1EB               	bnz	l9096
 11514  0109EA  298C               	incf	(printf@prec+1)& (0+255),w,b
 11515  0109EC  A4D8               	btfss	status,2,c
 11516  0109EE  D7E8               	goto	l1188
 11517  0109F0                     u10710:
 11518                           
 11519                           ; BSR set to: 1
 11520                           
 11521                           ; BSR set to: 1
 11522  0109F0  0101               	movlb	1	; () banked
 11523  0109F2  5164               	movf	printf@f& (0+255),w,b
 11524  0109F4  6F6C               	movwf	??_printf& (0+255),b
 11525  0109F6  5165               	movf	(printf@f+1)& (0+255),w,b
 11526  0109F8  6F6D               	movwf	(??_printf+1)& (0+255),b
 11527  0109FA  4B64               	infsnz	printf@f& (0+255),f,b
 11528  0109FC  2B65               	incf	(printf@f+1)& (0+255),f,b
 11529  0109FE  C16C  FFF6         	movff	??_printf,tblptrl
 11530  010A02  C16D  FFF7         	movff	??_printf+1,tblptrh
 11531  010A06  0E00               	movlw	low (__mediumconst shr (0+16))
 11532  010A08  6EF8               	movwf	tblptru,c
 11533  010A0A  0E0D               	movlw	(high __ramtop+-1)
 11534  010A0C  64F7               	cpfsgt	tblptrh,c
 11535  010A0E  D003               	bra	u10727
 11536  010A10  0008               	tblrd		*
 11537  010A12  50F5               	movf	tablat,w,c
 11538  010A14  D005               	bra	u10720
 11539  010A16                     u10727:
 11540  010A16  CFF6 FFE1          	movff	tblptrl,fsr1l
 11541  010A1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11542  010A1E  50E7               	movf	indf1,w,c
 11543  010A20                     u10720:
 11544  010A20  0101               	movlb	1	; () banked
 11545  010A22  6F8D               	movwf	printf@c& (0+255),b
 11546  010A24  518D               	movf	printf@c& (0+255),w,b
 11547  010A26  B4D8               	btfsc	status,2,c
 11548  010A28  0012               	return	
 11549  010A2A  EF07  F080         	goto	l1106
 11550  010A2E                     __end_of_printf:
 11551                           	opt stack 0
 11552                           tblptru	equ	0xFF8
 11553                           tblptrh	equ	0xFF7
 11554                           tblptrl	equ	0xFF6
 11555                           tablat	equ	0xFF5
 11556                           prodh	equ	0xFF4
 11557                           prodl	equ	0xFF3
 11558                           intcon	equ	0xFF2
 11559                           postinc0	equ	0xFEE
 11560                           wreg	equ	0xFE8
 11561                           indf1	equ	0xFE7
 11562                           postdec1	equ	0xFE5
 11563                           fsr1h	equ	0xFE2
 11564                           fsr1l	equ	0xFE1
 11565                           indf2	equ	0xFDF
 11566                           postinc2	equ	0xFDE
 11567                           postdec2	equ	0xFDD
 11568                           fsr2h	equ	0xFDA
 11569                           fsr2l	equ	0xFD9
 11570                           status	equ	0xFD8
 11571                           
 11572 ;; *************** function _scale *****************
 11573 ;; Defined at:
 11574 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;  scl             1    wreg     char 
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;  scl             1   91[BANK1 ] char 
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  3   85[BANK1 ] char 
 11581 ;; Registers used:
 11582 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11588 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11589 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11591 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11592 ;;Total ram usage:        7 bytes
 11593 ;; Hardware stack levels used:    1
 11594 ;; Hardware stack levels required when called:   16
 11595 ;; This function calls:
 11596 ;;		___awdiv
 11597 ;;		___awmod
 11598 ;;		___ftmul
 11599 ;;		___wmul
 11600 ;; This function is called by:
 11601 ;;		_printf
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text20
 11606  0122B6                     __ptext20:
 11607                           	opt stack 0
 11608  0122B6                     _scale:
 11609                           	opt stack 11
 11610                           
 11611                           ; BSR set to: 1
 11612                           ;incstack = 0
 11613                           ;scale@scl stored from wreg
 11614  0122B6  0101               	movlb	1	; () banked
 11615  0122B8  6F5B               	movwf	scale@scl& (0+255),b
 11616                           
 11617                           ;doprnt.c: 428: if(scl < 0) {
 11618  0122BA  0101               	movlb	1	; () banked
 11619  0122BC  AF5B               	btfss	scale@scl& (0+255),7,b
 11620  0122BE  D11E               	goto	l1095
 11621                           
 11622                           ; BSR set to: 1
 11623                           ;doprnt.c: 429: scl = -scl;
 11624  0122C0  6D5B               	negf	scale@scl& (0+255),b
 11625                           
 11626                           ;doprnt.c: 430: if(scl>=110)
 11627  0122C2  515B               	movf	scale@scl& (0+255),w,b
 11628  0122C4  0A80               	xorlw	128
 11629  0122C6  0F12               	addlw	-238
 11630  0122C8  A0D8               	btfss	status,0,c
 11631  0122CA  D0A0               	goto	l1096
 11632                           
 11633                           ; BSR set to: 1
 11634                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11635  0122CC  0E00               	movlw	0
 11636  0122CE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11637  0122D0  0E03               	movlw	3
 11638  0122D2  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11639  0122D4  0E00               	movlw	0
 11640  0122D6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11641  0122D8  0E0A               	movlw	10
 11642  0122DA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11643  0122DC  0E00               	movlw	0
 11644  0122DE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11645  0122E0  0E64               	movlw	100
 11646  0122E2  6F19               	movwf	___awmod@divisor& (0+255),b
 11647  0122E4  515B               	movf	scale@scl& (0+255),w,b
 11648  0122E6  6F17               	movwf	___awmod@dividend& (0+255),b
 11649  0122E8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11650  0122EA  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11651  0122EC  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11652  0122EE  EC33  F0AC         	call	___awmod	;wreg free
 11653  0122F2  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11654  0122F6  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11655  0122FA  EC78  F0AA         	call	___awdiv	;wreg free
 11656  0122FE  0E09               	movlw	9
 11657  012300  0101               	movlb	1	; () banked
 11658  012302  251D               	addwf	?___awdiv& (0+255),w,b
 11659  012304  6F25               	movwf	___wmul@multiplier& (0+255),b
 11660  012306  0E00               	movlw	0
 11661  012308  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11662  01230A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11663  01230C  EC19  F0B1         	call	___wmul	;wreg free
 11664  012310  0EC8               	movlw	low __npowers_
 11665  012312  0101               	movlb	1	; () banked
 11666  012314  2525               	addwf	?___wmul& (0+255),w,b
 11667  012316  6EF6               	movwf	tblptrl,c
 11668  012318  0EF1               	movlw	high __npowers_
 11669  01231A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11670  01231C  6EF7               	movwf	tblptrh,c
 11671  01231E                     	if	1	;There are 3 active tblptr bytes
 11672  01231E  6AF8               	clrf	tblptru,c
 11673  012320  0E00               	movlw	low (__mediumconst shr (0+16))
 11674  012322  22F8               	addwfc	tblptru,f,c
 11675  012324                     	endif
 11676  012324  0009               	tblrd		*+
 11677  012326  CFF5 F149          	movff	tablat,___ftmul@f2
 11678  01232A  0009               	tblrd		*+
 11679  01232C  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11680  012330  000A               	tblrd		*-
 11681  012332  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11682  012336  0E00               	movlw	0
 11683  012338  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11684  01233A  0E64               	movlw	100
 11685  01233C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11686  01233E  515B               	movf	scale@scl& (0+255),w,b
 11687  012340  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11688  012342  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11689  012344  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11690  012346  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11691  012348  EC78  F0AA         	call	___awdiv	;wreg free
 11692  01234C  0E12               	movlw	18
 11693  01234E  0101               	movlb	1	; () banked
 11694  012350  251D               	addwf	?___awdiv& (0+255),w,b
 11695  012352  6F25               	movwf	___wmul@multiplier& (0+255),b
 11696  012354  0E00               	movlw	0
 11697  012356  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11698  012358  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11699  01235A  0E00               	movlw	0
 11700  01235C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11701  01235E  0E03               	movlw	3
 11702  012360  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11703  012362  EC19  F0B1         	call	___wmul	;wreg free
 11704  012366  0EC8               	movlw	low __npowers_
 11705  012368  0101               	movlb	1	; () banked
 11706  01236A  2525               	addwf	?___wmul& (0+255),w,b
 11707  01236C  6EF6               	movwf	tblptrl,c
 11708  01236E  0EF1               	movlw	high __npowers_
 11709  012370  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11710  012372  6EF7               	movwf	tblptrh,c
 11711  012374                     	if	1	;There are 3 active tblptr bytes
 11712  012374  6AF8               	clrf	tblptru,c
 11713  012376  0E00               	movlw	low (__mediumconst shr (0+16))
 11714  012378  22F8               	addwfc	tblptru,f,c
 11715  01237A                     	endif
 11716  01237A  0009               	tblrd		*+
 11717  01237C  CFF5 F146          	movff	tablat,___ftmul@f1
 11718  012380  0009               	tblrd		*+
 11719  012382  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11720  012386  000A               	tblrd		*-
 11721  012388  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11722  01238C  EC00  F0A4         	call	___ftmul	;wreg free
 11723  012390  C146  F158         	movff	?___ftmul,_scale$3151
 11724  012394  C147  F159         	movff	?___ftmul+1,_scale$3151+1
 11725  012398  C148  F15A         	movff	?___ftmul+2,_scale$3151+2
 11726                           
 11727                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11728  01239C  C158  F146         	movff	_scale$3151,___ftmul@f1
 11729  0123A0  C159  F147         	movff	_scale$3151+1,___ftmul@f1+1
 11730  0123A4  C15A  F148         	movff	_scale$3151+2,___ftmul@f1+2
 11731  0123A8  0E00               	movlw	0
 11732  0123AA  0101               	movlb	1	; () banked
 11733  0123AC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11734  0123AE  0E03               	movlw	3
 11735  0123B0  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11736  0123B2  0E00               	movlw	0
 11737  0123B4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11738  0123B6  0E0A               	movlw	10
 11739  0123B8  6F19               	movwf	___awmod@divisor& (0+255),b
 11740  0123BA  515B               	movf	scale@scl& (0+255),w,b
 11741  0123BC  6F17               	movwf	___awmod@dividend& (0+255),b
 11742  0123BE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11743  0123C0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11744  0123C2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11745  0123C4  EC33  F0AC         	call	___awmod	;wreg free
 11746  0123C8  C117  F125         	movff	?___awmod,___wmul@multiplier
 11747  0123CC  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11748  0123D0  EC19  F0B1         	call	___wmul	;wreg free
 11749  0123D4  0EC8               	movlw	low __npowers_
 11750  0123D6  0101               	movlb	1	; () banked
 11751  0123D8  2525               	addwf	?___wmul& (0+255),w,b
 11752  0123DA  6EF6               	movwf	tblptrl,c
 11753  0123DC  0EF1               	movlw	high __npowers_
 11754  0123DE  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11755  0123E0  6EF7               	movwf	tblptrh,c
 11756  0123E2                     	if	1	;There are 3 active tblptr bytes
 11757  0123E2  6AF8               	clrf	tblptru,c
 11758  0123E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11759  0123E6  22F8               	addwfc	tblptru,f,c
 11760  0123E8                     	endif
 11761  0123E8  0009               	tblrd		*+
 11762  0123EA  CFF5 F149          	movff	tablat,___ftmul@f2
 11763  0123EE  0009               	tblrd		*+
 11764  0123F0  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11765  0123F4  000A               	tblrd		*-
 11766  0123F6  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11767  0123FA  EC00  F0A4         	call	___ftmul	;wreg free
 11768  0123FE  C146  F155         	movff	?___ftmul,?_scale
 11769  012402  C147  F156         	movff	?___ftmul+1,?_scale+1
 11770  012406  C148  F157         	movff	?___ftmul+2,?_scale+2
 11771  01240A  0012               	return	
 11772  01240C                     l1096:
 11773                           
 11774                           ;doprnt.c: 432: else if(scl > 10)
 11775  01240C  0101               	movlb	1	; () banked
 11776  01240E  515B               	movf	scale@scl& (0+255),w,b
 11777  012410  0A80               	xorlw	128
 11778  012412  0F75               	addlw	-139
 11779  012414  A0D8               	btfss	status,0,c
 11780  012416  D05C               	goto	l1099
 11781                           
 11782                           ; BSR set to: 1
 11783                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 11784  012418  0E00               	movlw	0
 11785  01241A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11786  01241C  0E0A               	movlw	10
 11787  01241E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11788  012420  515B               	movf	scale@scl& (0+255),w,b
 11789  012422  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11790  012424  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11791  012426  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11792  012428  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11793  01242A  EC78  F0AA         	call	___awdiv	;wreg free
 11794  01242E  0E09               	movlw	9
 11795  012430  0101               	movlb	1	; () banked
 11796  012432  251D               	addwf	?___awdiv& (0+255),w,b
 11797  012434  6F25               	movwf	___wmul@multiplier& (0+255),b
 11798  012436  0E00               	movlw	0
 11799  012438  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11800  01243A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11801  01243C  0E00               	movlw	0
 11802  01243E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11803  012440  0E03               	movlw	3
 11804  012442  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11805  012444  EC19  F0B1         	call	___wmul	;wreg free
 11806  012448  0EC8               	movlw	low __npowers_
 11807  01244A  0101               	movlb	1	; () banked
 11808  01244C  2525               	addwf	?___wmul& (0+255),w,b
 11809  01244E  6EF6               	movwf	tblptrl,c
 11810  012450  0EF1               	movlw	high __npowers_
 11811  012452  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11812  012454  6EF7               	movwf	tblptrh,c
 11813  012456                     	if	1	;There are 3 active tblptr bytes
 11814  012456  6AF8               	clrf	tblptru,c
 11815  012458  0E00               	movlw	low (__mediumconst shr (0+16))
 11816  01245A  22F8               	addwfc	tblptru,f,c
 11817  01245C                     	endif
 11818  01245C  0009               	tblrd		*+
 11819  01245E  CFF5 F146          	movff	tablat,___ftmul@f1
 11820  012462  0009               	tblrd		*+
 11821  012464  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11822  012468  000A               	tblrd		*-
 11823  01246A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11824  01246E  0E00               	movlw	0
 11825  012470  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11826  012472  0E03               	movlw	3
 11827  012474  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11828  012476  0E00               	movlw	0
 11829  012478  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11830  01247A  0E0A               	movlw	10
 11831  01247C  6F19               	movwf	___awmod@divisor& (0+255),b
 11832  01247E  515B               	movf	scale@scl& (0+255),w,b
 11833  012480  6F17               	movwf	___awmod@dividend& (0+255),b
 11834  012482  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11835  012484  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11836  012486  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11837  012488  EC33  F0AC         	call	___awmod	;wreg free
 11838  01248C  C117  F125         	movff	?___awmod,___wmul@multiplier
 11839  012490  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11840  012494  EC19  F0B1         	call	___wmul	;wreg free
 11841  012498  0EC8               	movlw	low __npowers_
 11842  01249A  0101               	movlb	1	; () banked
 11843  01249C  2525               	addwf	?___wmul& (0+255),w,b
 11844  01249E  6EF6               	movwf	tblptrl,c
 11845  0124A0  0EF1               	movlw	high __npowers_
 11846  0124A2  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11847  0124A4  6EF7               	movwf	tblptrh,c
 11848  0124A6                     	if	1	;There are 3 active tblptr bytes
 11849  0124A6  6AF8               	clrf	tblptru,c
 11850  0124A8  0E00               	movlw	low (__mediumconst shr (0+16))
 11851  0124AA  22F8               	addwfc	tblptru,f,c
 11852  0124AC                     	endif
 11853  0124AC  0009               	tblrd		*+
 11854  0124AE  CFF5 F149          	movff	tablat,___ftmul@f2
 11855  0124B2  0009               	tblrd		*+
 11856  0124B4  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11857  0124B8  000A               	tblrd		*-
 11858  0124BA  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11859  0124BE  EC00  F0A4         	call	___ftmul	;wreg free
 11860  0124C2  C146  F155         	movff	?___ftmul,?_scale
 11861  0124C6  C147  F156         	movff	?___ftmul+1,?_scale+1
 11862  0124CA  C148  F157         	movff	?___ftmul+2,?_scale+2
 11863  0124CE  0012               	return	
 11864  0124D0                     l1099:
 11865                           
 11866                           ;doprnt.c: 434: return _npowers_[scl];
 11867  0124D0  0101               	movlb	1	; () banked
 11868  0124D2  515B               	movf	scale@scl& (0+255),w,b
 11869  0124D4  0D03               	mullw	3
 11870  0124D6  0EC8               	movlw	low __npowers_
 11871  0124D8  24F3               	addwf	prodl,w,c
 11872  0124DA  6EF6               	movwf	tblptrl,c
 11873  0124DC  0EF1               	movlw	high __npowers_
 11874  0124DE  20F4               	addwfc	prodh,w,c
 11875  0124E0  6EF7               	movwf	tblptrh,c
 11876  0124E2                     	if	1	;There are 3 active tblptr bytes
 11877  0124E2  6AF8               	clrf	tblptru,c
 11878  0124E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11879  0124E6  22F8               	addwfc	tblptru,f,c
 11880  0124E8                     	endif
 11881  0124E8  0009               	tblrd		*+
 11882  0124EA  CFF5 F155          	movff	tablat,?_scale
 11883  0124EE  0009               	tblrd		*+
 11884  0124F0  CFF5 F156          	movff	tablat,?_scale+1
 11885  0124F4  000A               	tblrd		*-
 11886  0124F6  CFF5 F157          	movff	tablat,?_scale+2
 11887                           
 11888                           ; BSR set to: 1
 11889  0124FA  0012               	return	
 11890  0124FC                     l1095:
 11891                           
 11892                           ; BSR set to: 1
 11893                           ;doprnt.c: 435: }
 11894                           ;doprnt.c: 436: if(scl>=110)
 11895                           
 11896                           ; BSR set to: 1
 11897  0124FC  515B               	movf	scale@scl& (0+255),w,b
 11898  0124FE  0A80               	xorlw	128
 11899  012500  0F12               	addlw	-238
 11900  012502  A0D8               	btfss	status,0,c
 11901  012504  D0A0               	goto	l1100
 11902                           
 11903                           ; BSR set to: 1
 11904                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11905  012506  0E00               	movlw	0
 11906  012508  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11907  01250A  0E03               	movlw	3
 11908  01250C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11909  01250E  0E00               	movlw	0
 11910  012510  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11911  012512  0E0A               	movlw	10
 11912  012514  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11913  012516  0E00               	movlw	0
 11914  012518  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11915  01251A  0E64               	movlw	100
 11916  01251C  6F19               	movwf	___awmod@divisor& (0+255),b
 11917  01251E  515B               	movf	scale@scl& (0+255),w,b
 11918  012520  6F17               	movwf	___awmod@dividend& (0+255),b
 11919  012522  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11920  012524  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11921  012526  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11922  012528  EC33  F0AC         	call	___awmod	;wreg free
 11923  01252C  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11924  012530  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11925  012534  EC78  F0AA         	call	___awdiv	;wreg free
 11926  012538  0E09               	movlw	9
 11927  01253A  0101               	movlb	1	; () banked
 11928  01253C  251D               	addwf	?___awdiv& (0+255),w,b
 11929  01253E  6F25               	movwf	___wmul@multiplier& (0+255),b
 11930  012540  0E00               	movlw	0
 11931  012542  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11932  012544  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11933  012546  EC19  F0B1         	call	___wmul	;wreg free
 11934  01254A  0EA1               	movlw	low __powers_
 11935  01254C  0101               	movlb	1	; () banked
 11936  01254E  2525               	addwf	?___wmul& (0+255),w,b
 11937  012550  6EF6               	movwf	tblptrl,c
 11938  012552  0EF1               	movlw	high __powers_
 11939  012554  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11940  012556  6EF7               	movwf	tblptrh,c
 11941  012558                     	if	1	;There are 3 active tblptr bytes
 11942  012558  6AF8               	clrf	tblptru,c
 11943  01255A  0E00               	movlw	low (__mediumconst shr (0+16))
 11944  01255C  22F8               	addwfc	tblptru,f,c
 11945  01255E                     	endif
 11946  01255E  0009               	tblrd		*+
 11947  012560  CFF5 F149          	movff	tablat,___ftmul@f2
 11948  012564  0009               	tblrd		*+
 11949  012566  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11950  01256A  000A               	tblrd		*-
 11951  01256C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11952  012570  0E00               	movlw	0
 11953  012572  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11954  012574  0E64               	movlw	100
 11955  012576  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11956  012578  515B               	movf	scale@scl& (0+255),w,b
 11957  01257A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11958  01257C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11959  01257E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11960  012580  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11961  012582  EC78  F0AA         	call	___awdiv	;wreg free
 11962  012586  0E12               	movlw	18
 11963  012588  0101               	movlb	1	; () banked
 11964  01258A  251D               	addwf	?___awdiv& (0+255),w,b
 11965  01258C  6F25               	movwf	___wmul@multiplier& (0+255),b
 11966  01258E  0E00               	movlw	0
 11967  012590  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11968  012592  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11969  012594  0E00               	movlw	0
 11970  012596  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11971  012598  0E03               	movlw	3
 11972  01259A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11973  01259C  EC19  F0B1         	call	___wmul	;wreg free
 11974  0125A0  0EA1               	movlw	low __powers_
 11975  0125A2  0101               	movlb	1	; () banked
 11976  0125A4  2525               	addwf	?___wmul& (0+255),w,b
 11977  0125A6  6EF6               	movwf	tblptrl,c
 11978  0125A8  0EF1               	movlw	high __powers_
 11979  0125AA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11980  0125AC  6EF7               	movwf	tblptrh,c
 11981  0125AE                     	if	1	;There are 3 active tblptr bytes
 11982  0125AE  6AF8               	clrf	tblptru,c
 11983  0125B0  0E00               	movlw	low (__mediumconst shr (0+16))
 11984  0125B2  22F8               	addwfc	tblptru,f,c
 11985  0125B4                     	endif
 11986  0125B4  0009               	tblrd		*+
 11987  0125B6  CFF5 F146          	movff	tablat,___ftmul@f1
 11988  0125BA  0009               	tblrd		*+
 11989  0125BC  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11990  0125C0  000A               	tblrd		*-
 11991  0125C2  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11992  0125C6  EC00  F0A4         	call	___ftmul	;wreg free
 11993  0125CA  C146  F158         	movff	?___ftmul,_scale$3151
 11994  0125CE  C147  F159         	movff	?___ftmul+1,_scale$3151+1
 11995  0125D2  C148  F15A         	movff	?___ftmul+2,_scale$3151+2
 11996                           
 11997                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11998  0125D6  C158  F146         	movff	_scale$3151,___ftmul@f1
 11999  0125DA  C159  F147         	movff	_scale$3151+1,___ftmul@f1+1
 12000  0125DE  C15A  F148         	movff	_scale$3151+2,___ftmul@f1+2
 12001  0125E2  0E00               	movlw	0
 12002  0125E4  0101               	movlb	1	; () banked
 12003  0125E6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12004  0125E8  0E03               	movlw	3
 12005  0125EA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12006  0125EC  0E00               	movlw	0
 12007  0125EE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12008  0125F0  0E0A               	movlw	10
 12009  0125F2  6F19               	movwf	___awmod@divisor& (0+255),b
 12010  0125F4  515B               	movf	scale@scl& (0+255),w,b
 12011  0125F6  6F17               	movwf	___awmod@dividend& (0+255),b
 12012  0125F8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12013  0125FA  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12014  0125FC  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12015  0125FE  EC33  F0AC         	call	___awmod	;wreg free
 12016  012602  C117  F125         	movff	?___awmod,___wmul@multiplier
 12017  012606  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12018  01260A  EC19  F0B1         	call	___wmul	;wreg free
 12019  01260E  0EA1               	movlw	low __powers_
 12020  012610  0101               	movlb	1	; () banked
 12021  012612  2525               	addwf	?___wmul& (0+255),w,b
 12022  012614  6EF6               	movwf	tblptrl,c
 12023  012616  0EF1               	movlw	high __powers_
 12024  012618  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12025  01261A  6EF7               	movwf	tblptrh,c
 12026  01261C                     	if	1	;There are 3 active tblptr bytes
 12027  01261C  6AF8               	clrf	tblptru,c
 12028  01261E  0E00               	movlw	low (__mediumconst shr (0+16))
 12029  012620  22F8               	addwfc	tblptru,f,c
 12030  012622                     	endif
 12031  012622  0009               	tblrd		*+
 12032  012624  CFF5 F149          	movff	tablat,___ftmul@f2
 12033  012628  0009               	tblrd		*+
 12034  01262A  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12035  01262E  000A               	tblrd		*-
 12036  012630  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12037  012634  EC00  F0A4         	call	___ftmul	;wreg free
 12038  012638  C146  F155         	movff	?___ftmul,?_scale
 12039  01263C  C147  F156         	movff	?___ftmul+1,?_scale+1
 12040  012640  C148  F157         	movff	?___ftmul+2,?_scale+2
 12041  012644  0012               	return	
 12042  012646                     l1100:
 12043                           
 12044                           ;doprnt.c: 438: else if(scl > 10)
 12045  012646  0101               	movlb	1	; () banked
 12046  012648  515B               	movf	scale@scl& (0+255),w,b
 12047  01264A  0A80               	xorlw	128
 12048  01264C  0F75               	addlw	-139
 12049  01264E  A0D8               	btfss	status,0,c
 12050  012650  D05C               	goto	l1102
 12051                           
 12052                           ; BSR set to: 1
 12053                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12054  012652  0E00               	movlw	0
 12055  012654  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12056  012656  0E0A               	movlw	10
 12057  012658  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12058  01265A  515B               	movf	scale@scl& (0+255),w,b
 12059  01265C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 12060  01265E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12061  012660  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 12062  012662  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12063  012664  EC78  F0AA         	call	___awdiv	;wreg free
 12064  012668  0E09               	movlw	9
 12065  01266A  0101               	movlb	1	; () banked
 12066  01266C  251D               	addwf	?___awdiv& (0+255),w,b
 12067  01266E  6F25               	movwf	___wmul@multiplier& (0+255),b
 12068  012670  0E00               	movlw	0
 12069  012672  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12070  012674  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12071  012676  0E00               	movlw	0
 12072  012678  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12073  01267A  0E03               	movlw	3
 12074  01267C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12075  01267E  EC19  F0B1         	call	___wmul	;wreg free
 12076  012682  0EA1               	movlw	low __powers_
 12077  012684  0101               	movlb	1	; () banked
 12078  012686  2525               	addwf	?___wmul& (0+255),w,b
 12079  012688  6EF6               	movwf	tblptrl,c
 12080  01268A  0EF1               	movlw	high __powers_
 12081  01268C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12082  01268E  6EF7               	movwf	tblptrh,c
 12083  012690                     	if	1	;There are 3 active tblptr bytes
 12084  012690  6AF8               	clrf	tblptru,c
 12085  012692  0E00               	movlw	low (__mediumconst shr (0+16))
 12086  012694  22F8               	addwfc	tblptru,f,c
 12087  012696                     	endif
 12088  012696  0009               	tblrd		*+
 12089  012698  CFF5 F146          	movff	tablat,___ftmul@f1
 12090  01269C  0009               	tblrd		*+
 12091  01269E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12092  0126A2  000A               	tblrd		*-
 12093  0126A4  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12094  0126A8  0E00               	movlw	0
 12095  0126AA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12096  0126AC  0E03               	movlw	3
 12097  0126AE  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12098  0126B0  0E00               	movlw	0
 12099  0126B2  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12100  0126B4  0E0A               	movlw	10
 12101  0126B6  6F19               	movwf	___awmod@divisor& (0+255),b
 12102  0126B8  515B               	movf	scale@scl& (0+255),w,b
 12103  0126BA  6F17               	movwf	___awmod@dividend& (0+255),b
 12104  0126BC  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12105  0126BE  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12106  0126C0  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12107  0126C2  EC33  F0AC         	call	___awmod	;wreg free
 12108  0126C6  C117  F125         	movff	?___awmod,___wmul@multiplier
 12109  0126CA  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12110  0126CE  EC19  F0B1         	call	___wmul	;wreg free
 12111  0126D2  0EA1               	movlw	low __powers_
 12112  0126D4  0101               	movlb	1	; () banked
 12113  0126D6  2525               	addwf	?___wmul& (0+255),w,b
 12114  0126D8  6EF6               	movwf	tblptrl,c
 12115  0126DA  0EF1               	movlw	high __powers_
 12116  0126DC  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12117  0126DE  6EF7               	movwf	tblptrh,c
 12118  0126E0                     	if	1	;There are 3 active tblptr bytes
 12119  0126E0  6AF8               	clrf	tblptru,c
 12120  0126E2  0E00               	movlw	low (__mediumconst shr (0+16))
 12121  0126E4  22F8               	addwfc	tblptru,f,c
 12122  0126E6                     	endif
 12123  0126E6  0009               	tblrd		*+
 12124  0126E8  CFF5 F149          	movff	tablat,___ftmul@f2
 12125  0126EC  0009               	tblrd		*+
 12126  0126EE  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12127  0126F2  000A               	tblrd		*-
 12128  0126F4  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12129  0126F8  EC00  F0A4         	call	___ftmul	;wreg free
 12130  0126FC  C146  F155         	movff	?___ftmul,?_scale
 12131  012700  C147  F156         	movff	?___ftmul+1,?_scale+1
 12132  012704  C148  F157         	movff	?___ftmul+2,?_scale+2
 12133  012708  0012               	return	
 12134  01270A                     l1102:
 12135                           
 12136                           ;doprnt.c: 440: return _powers_[scl];
 12137  01270A  0101               	movlb	1	; () banked
 12138  01270C  515B               	movf	scale@scl& (0+255),w,b
 12139  01270E  0D03               	mullw	3
 12140  012710  0EA1               	movlw	low __powers_
 12141  012712  24F3               	addwf	prodl,w,c
 12142  012714  6EF6               	movwf	tblptrl,c
 12143  012716  0EF1               	movlw	high __powers_
 12144  012718  20F4               	addwfc	prodh,w,c
 12145  01271A  6EF7               	movwf	tblptrh,c
 12146  01271C                     	if	1	;There are 3 active tblptr bytes
 12147  01271C  6AF8               	clrf	tblptru,c
 12148  01271E  0E00               	movlw	low (__mediumconst shr (0+16))
 12149  012720  22F8               	addwfc	tblptru,f,c
 12150  012722                     	endif
 12151  012722  0009               	tblrd		*+
 12152  012724  CFF5 F155          	movff	tablat,?_scale
 12153  012728  0009               	tblrd		*+
 12154  01272A  CFF5 F156          	movff	tablat,?_scale+1
 12155  01272E  000A               	tblrd		*-
 12156  012730  CFF5 F157          	movff	tablat,?_scale+2
 12157  012734  0012               	return	
 12158  012736                     __end_of_scale:
 12159                           	opt stack 0
 12160                           tblptru	equ	0xFF8
 12161                           tblptrh	equ	0xFF7
 12162                           tblptrl	equ	0xFF6
 12163                           tablat	equ	0xFF5
 12164                           prodh	equ	0xFF4
 12165                           prodl	equ	0xFF3
 12166                           intcon	equ	0xFF2
 12167                           postinc0	equ	0xFEE
 12168                           wreg	equ	0xFE8
 12169                           indf1	equ	0xFE7
 12170                           postdec1	equ	0xFE5
 12171                           fsr1h	equ	0xFE2
 12172                           fsr1l	equ	0xFE1
 12173                           indf2	equ	0xFDF
 12174                           postinc2	equ	0xFDE
 12175                           postdec2	equ	0xFDD
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function _putch *****************
 12181 ;; Defined at:
 12182 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  txData          1    wreg     unsigned char 
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  txData          1   24[BANK1 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12200 ;;Total ram usage:        1 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:   15
 12203 ;; This function calls:
 12204 ;;		_EUSART2_Write
 12205 ;; This function is called by:
 12206 ;;		_printf
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text21
 12211  01646E                     __ptext21:
 12212                           	opt stack 0
 12213  01646E                     _putch:
 12214                           	opt stack 12
 12215                           
 12216                           ;incstack = 0
 12217                           ;putch@txData stored from wreg
 12218  01646E  0101               	movlb	1	; () banked
 12219  016470  6F18               	movwf	putch@txData& (0+255),b
 12220                           
 12221                           ;eusart2.c: 182: EUSART2_Write(txData);
 12222  016472  0101               	movlb	1	; () banked
 12223  016474  5118               	movf	putch@txData& (0+255),w,b
 12224  016476  EC81  F0AF         	call	_EUSART2_Write
 12225  01647A  0012               	return		;funcret
 12226  01647C                     __end_of_putch:
 12227                           	opt stack 0
 12228                           tblptru	equ	0xFF8
 12229                           tblptrh	equ	0xFF7
 12230                           tblptrl	equ	0xFF6
 12231                           tablat	equ	0xFF5
 12232                           prodh	equ	0xFF4
 12233                           prodl	equ	0xFF3
 12234                           intcon	equ	0xFF2
 12235                           postinc0	equ	0xFEE
 12236                           wreg	equ	0xFE8
 12237                           indf1	equ	0xFE7
 12238                           postdec1	equ	0xFE5
 12239                           fsr1h	equ	0xFE2
 12240                           fsr1l	equ	0xFE1
 12241                           indf2	equ	0xFDF
 12242                           postinc2	equ	0xFDE
 12243                           postdec2	equ	0xFDD
 12244                           fsr2h	equ	0xFDA
 12245                           fsr2l	equ	0xFD9
 12246                           status	equ	0xFD8
 12247                           
 12248 ;; *************** function _EUSART2_Write *****************
 12249 ;; Defined at:
 12250 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 12251 ;; Parameters:    Size  Location     Type
 12252 ;;  txData          1    wreg     unsigned char 
 12253 ;; Auto vars:     Size  Location     Type
 12254 ;;  txData          1   23[BANK1 ] unsigned char 
 12255 ;; Return value:  Size  Location     Type
 12256 ;;                  1    wreg      void 
 12257 ;; Registers used:
 12258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12259 ;; Tracked objects:
 12260 ;;		On entry : 0/0
 12261 ;;		On exit  : 0/0
 12262 ;;		Unchanged: 0/0
 12263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12265 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12267 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12268 ;;Total ram usage:        1 bytes
 12269 ;; Hardware stack levels used:    1
 12270 ;; Hardware stack levels required when called:   14
 12271 ;; This function calls:
 12272 ;;		Nothing
 12273 ;; This function is called by:
 12274 ;;		_putch
 12275 ;; This function uses a non-reentrant model
 12276 ;;
 12277                           
 12278                           	psect	text22
 12279  015F02                     __ptext22:
 12280                           	opt stack 0
 12281  015F02                     _EUSART2_Write:
 12282                           	opt stack 12
 12283                           
 12284                           ;incstack = 0
 12285                           ;EUSART2_Write@txData stored from wreg
 12286  015F02  0101               	movlb	1	; () banked
 12287  015F04  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 12288                           
 12289                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 12290  015F06  D001               	goto	l374
 12291  015F08                     l375:
 12292                           
 12293                           ; BSR set to: 1
 12294  015F08  0004               	clrwdt		;# 
 12295  015F0A                     l374:
 12296  015F0A  0101               	movlb	1	; () banked
 12297  015F0C  51DC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 12298  015F0E  B4D8               	btfsc	status,2,c
 12299  015F10  D7FB               	goto	l375
 12300                           
 12301                           ; BSR set to: 1
 12302                           ;eusart2.c: 156: }
 12303                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 12304  015F12  010E               	movlb	14	; () banked
 12305  015F14  BD2C               	btfsc	44,6,b	;volatile
 12306  015F16  D003               	goto	l377
 12307                           
 12308                           ; BSR set to: 14
 12309                           ;eusart2.c: 159: {
 12310                           ;eusart2.c: 160: TX2REG = txData;
 12311  015F18  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 12312                           
 12313                           ;eusart2.c: 161: }
 12314  015F1C  D013               	goto	l378
 12315  015F1E                     l377:
 12316                           
 12317                           ; BSR set to: 14
 12318                           ;eusart2.c: 162: else
 12319                           ;eusart2.c: 163: {
 12320                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 12321  015F1E  9D2C               	bcf	44,6,b	;volatile
 12322                           
 12323                           ; BSR set to: 14
 12324                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 12325  015F20  0101               	movlb	1	; () banked
 12326  015F22  51DE               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 12327  015F24  0D01               	mullw	1
 12328  015F26  0E00               	movlw	low _eusart2TxBuffer
 12329  015F28  24F3               	addwf	prodl,w,c
 12330  015F2A  6ED9               	movwf	fsr2l,c
 12331  015F2C  0E02               	movlw	high _eusart2TxBuffer
 12332  015F2E  20F4               	addwfc	prodh,w,c
 12333  015F30  6EDA               	movwf	fsr2h,c
 12334  015F32  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 12335                           
 12336                           ; BSR set to: 1
 12337  015F36  2BDE               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 12341  015F38  0E7F               	movlw	127
 12342  015F3A  65DE               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 12343  015F3C  D002               	goto	l379
 12344                           
 12345                           ; BSR set to: 1
 12346                           ;eusart2.c: 167: {
 12347                           ;eusart2.c: 168: eusart2TxHead = 0;
 12348  015F3E  0E00               	movlw	0
 12349  015F40  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 12350  015F42                     l379:
 12351                           
 12352                           ; BSR set to: 1
 12353                           ;eusart2.c: 169: }
 12354                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 12355                           
 12356                           ; BSR set to: 1
 12357  015F42  07DC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 12358  015F44                     l378:
 12359                           
 12360                           ;eusart2.c: 171: }
 12361                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 12362                           
 12363                           ; BSR set to: 1
 12364  015F44  010E               	movlb	14	; () banked
 12365  015F46  8D2C               	bsf	44,6,b	;volatile
 12366                           
 12367                           ; BSR set to: 14
 12368  015F48  0012               	return		;funcret
 12369  015F4A                     __end_of_EUSART2_Write:
 12370                           	opt stack 0
 12371                           tblptru	equ	0xFF8
 12372                           tblptrh	equ	0xFF7
 12373                           tblptrl	equ	0xFF6
 12374                           tablat	equ	0xFF5
 12375                           prodh	equ	0xFF4
 12376                           prodl	equ	0xFF3
 12377                           intcon	equ	0xFF2
 12378                           postinc0	equ	0xFEE
 12379                           wreg	equ	0xFE8
 12380                           indf1	equ	0xFE7
 12381                           postdec1	equ	0xFE5
 12382                           fsr1h	equ	0xFE2
 12383                           fsr1l	equ	0xFE1
 12384                           indf2	equ	0xFDF
 12385                           postinc2	equ	0xFDE
 12386                           postdec2	equ	0xFDD
 12387                           fsr2h	equ	0xFDA
 12388                           fsr2l	equ	0xFD9
 12389                           status	equ	0xFD8
 12390                           
 12391 ;; *************** function _isdigit *****************
 12392 ;; Defined at:
 12393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  c               1    wreg     unsigned char 
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;  c               1   25[BANK1 ] unsigned char 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;		None               void
 12400 ;; Registers used:
 12401 ;;		wreg, status,2, status,0
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12408 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12409 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12410 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12411 ;;Total ram usage:        3 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:   14
 12414 ;; This function calls:
 12415 ;;		Nothing
 12416 ;; This function is called by:
 12417 ;;		_printf
 12418 ;;		_atoi
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text23
 12423  016364                     __ptext23:
 12424                           	opt stack 0
 12425  016364                     _isdigit:
 12426                           	opt stack 13
 12427                           
 12428                           ; BSR set to: 14
 12429                           ;incstack = 0
 12430                           ;isdigit@c stored from wreg
 12431  016364  0101               	movlb	1	; () banked
 12432  016366  6F19               	movwf	isdigit@c& (0+255),b
 12433  016368  0E00               	movlw	0
 12434  01636A  0101               	movlb	1	; () banked
 12435  01636C  6F18               	movwf	_isdigit$2506& (0+255),b
 12436                           
 12437                           ; BSR set to: 1
 12438  01636E  0E3A               	movlw	58
 12439  016370  6119               	cpfslt	isdigit@c& (0+255),b
 12440  016372  D005               	goto	l1623
 12441                           
 12442                           ; BSR set to: 1
 12443  016374  0E2F               	movlw	47
 12444  016376  6519               	cpfsgt	isdigit@c& (0+255),b
 12445  016378  D002               	goto	l1623
 12446                           
 12447                           ; BSR set to: 1
 12448  01637A  0E01               	movlw	1
 12449  01637C  6F18               	movwf	_isdigit$2506& (0+255),b
 12450  01637E                     l1623:
 12451                           
 12452                           ; BSR set to: 1
 12453                           
 12454                           ; BSR set to: 1
 12455  01637E  C118  F117         	movff	_isdigit$2506,??_isdigit
 12456  016382  3117               	rrcf	??_isdigit& (0+255),w,b
 12457  016384  0012               	return	
 12458  016386                     __end_of_isdigit:
 12459                           	opt stack 0
 12460                           tblptru	equ	0xFF8
 12461                           tblptrh	equ	0xFF7
 12462                           tblptrl	equ	0xFF6
 12463                           tablat	equ	0xFF5
 12464                           prodh	equ	0xFF4
 12465                           prodl	equ	0xFF3
 12466                           intcon	equ	0xFF2
 12467                           postinc0	equ	0xFEE
 12468                           wreg	equ	0xFE8
 12469                           indf1	equ	0xFE7
 12470                           postdec1	equ	0xFE5
 12471                           fsr1h	equ	0xFE2
 12472                           fsr1l	equ	0xFE1
 12473                           indf2	equ	0xFDF
 12474                           postinc2	equ	0xFDE
 12475                           postdec2	equ	0xFDD
 12476                           fsr2h	equ	0xFDA
 12477                           fsr2l	equ	0xFD9
 12478                           status	equ	0xFD8
 12479                           
 12480 ;; *************** function _fround *****************
 12481 ;; Defined at:
 12482 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  prec            1    wreg     unsigned char 
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;  prec            1   94[BANK1 ] unsigned char 
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  3   85[BANK1 ] unsigned char 
 12489 ;; Registers used:
 12490 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12496 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12497 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12499 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12500 ;;Total ram usage:       10 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:   16
 12503 ;; This function calls:
 12504 ;;		___awdiv
 12505 ;;		___awmod
 12506 ;;		___ftmul
 12507 ;;		___wmul
 12508 ;; This function is called by:
 12509 ;;		_printf
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text24
 12514  012EEE                     __ptext24:
 12515                           	opt stack 0
 12516  012EEE                     _fround:
 12517                           	opt stack 11
 12518                           
 12519                           ; BSR set to: 1
 12520                           ;incstack = 0
 12521                           ;fround@prec stored from wreg
 12522  012EEE  0101               	movlb	1	; () banked
 12523  012EF0  6F5E               	movwf	fround@prec& (0+255),b
 12524                           
 12525                           ;doprnt.c: 413: if(prec>=110)
 12526  012EF2  0E6D               	movlw	109
 12527  012EF4  0101               	movlb	1	; () banked
 12528  012EF6  655E               	cpfsgt	fround@prec& (0+255),b
 12529  012EF8  D0AF               	goto	l1089
 12530                           
 12531                           ; BSR set to: 1
 12532                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12533  012EFA  0E00               	movlw	0
 12534  012EFC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12535  012EFE  0E03               	movlw	3
 12536  012F00  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12537  012F02  0E00               	movlw	0
 12538  012F04  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12539  012F06  0E0A               	movlw	10
 12540  012F08  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12541  012F0A  0E00               	movlw	0
 12542  012F0C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12543  012F0E  0E64               	movlw	100
 12544  012F10  6F19               	movwf	___awmod@divisor& (0+255),b
 12545  012F12  C15E  F117         	movff	fround@prec,___awmod@dividend
 12546  012F16  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12547  012F18  EC33  F0AC         	call	___awmod	;wreg free
 12548  012F1C  C117  F11D         	movff	?___awmod,___awdiv@dividend
 12549  012F20  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 12550  012F24  EC78  F0AA         	call	___awdiv	;wreg free
 12551  012F28  0E09               	movlw	9
 12552  012F2A  0101               	movlb	1	; () banked
 12553  012F2C  251D               	addwf	?___awdiv& (0+255),w,b
 12554  012F2E  6F25               	movwf	___wmul@multiplier& (0+255),b
 12555  012F30  0E00               	movlw	0
 12556  012F32  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12557  012F34  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12558  012F36  EC19  F0B1         	call	___wmul	;wreg free
 12559  012F3A  0EC8               	movlw	low __npowers_
 12560  012F3C  0101               	movlb	1	; () banked
 12561  012F3E  2525               	addwf	?___wmul& (0+255),w,b
 12562  012F40  6EF6               	movwf	tblptrl,c
 12563  012F42  0EF1               	movlw	high __npowers_
 12564  012F44  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12565  012F46  6EF7               	movwf	tblptrh,c
 12566  012F48                     	if	1	;There are 3 active tblptr bytes
 12567  012F48  6AF8               	clrf	tblptru,c
 12568  012F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 12569  012F4C  22F8               	addwfc	tblptru,f,c
 12570  012F4E                     	endif
 12571  012F4E  0009               	tblrd		*+
 12572  012F50  CFF5 F149          	movff	tablat,___ftmul@f2
 12573  012F54  0009               	tblrd		*+
 12574  012F56  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12575  012F5A  000A               	tblrd		*-
 12576  012F5C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12577  012F60  0E00               	movlw	0
 12578  012F62  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12579  012F64  0E64               	movlw	100
 12580  012F66  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12581  012F68  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 12582  012F6C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12583  012F6E  EC78  F0AA         	call	___awdiv	;wreg free
 12584  012F72  0E12               	movlw	18
 12585  012F74  0101               	movlb	1	; () banked
 12586  012F76  251D               	addwf	?___awdiv& (0+255),w,b
 12587  012F78  6F25               	movwf	___wmul@multiplier& (0+255),b
 12588  012F7A  0E00               	movlw	0
 12589  012F7C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12590  012F7E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12591  012F80  0E00               	movlw	0
 12592  012F82  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12593  012F84  0E03               	movlw	3
 12594  012F86  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12595  012F88  EC19  F0B1         	call	___wmul	;wreg free
 12596  012F8C  0EC8               	movlw	low __npowers_
 12597  012F8E  0101               	movlb	1	; () banked
 12598  012F90  2525               	addwf	?___wmul& (0+255),w,b
 12599  012F92  6EF6               	movwf	tblptrl,c
 12600  012F94  0EF1               	movlw	high __npowers_
 12601  012F96  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12602  012F98  6EF7               	movwf	tblptrh,c
 12603  012F9A                     	if	1	;There are 3 active tblptr bytes
 12604  012F9A  6AF8               	clrf	tblptru,c
 12605  012F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 12606  012F9E  22F8               	addwfc	tblptru,f,c
 12607  012FA0                     	endif
 12608  012FA0  0009               	tblrd		*+
 12609  012FA2  CFF5 F146          	movff	tablat,___ftmul@f1
 12610  012FA6  0009               	tblrd		*+
 12611  012FA8  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12612  012FAC  000A               	tblrd		*-
 12613  012FAE  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12614  012FB2  EC00  F0A4         	call	___ftmul	;wreg free
 12615  012FB6  C146  F15B         	movff	?___ftmul,_fround$3149
 12616  012FBA  C147  F15C         	movff	?___ftmul+1,_fround$3149+1
 12617  012FBE  C148  F15D         	movff	?___ftmul+2,_fround$3149+2
 12618                           
 12619                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12620  012FC2  0E00               	movlw	0
 12621  012FC4  0101               	movlb	1	; () banked
 12622  012FC6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12623  012FC8  0E03               	movlw	3
 12624  012FCA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12625  012FCC  0E00               	movlw	0
 12626  012FCE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12627  012FD0  0E0A               	movlw	10
 12628  012FD2  6F19               	movwf	___awmod@divisor& (0+255),b
 12629  012FD4  C15E  F117         	movff	fround@prec,___awmod@dividend
 12630  012FD8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12631  012FDA  EC33  F0AC         	call	___awmod	;wreg free
 12632  012FDE  C117  F125         	movff	?___awmod,___wmul@multiplier
 12633  012FE2  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12634  012FE6  EC19  F0B1         	call	___wmul	;wreg free
 12635  012FEA  0EC8               	movlw	low __npowers_
 12636  012FEC  0101               	movlb	1	; () banked
 12637  012FEE  2525               	addwf	?___wmul& (0+255),w,b
 12638  012FF0  6EF6               	movwf	tblptrl,c
 12639  012FF2  0EF1               	movlw	high __npowers_
 12640  012FF4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12641  012FF6  6EF7               	movwf	tblptrh,c
 12642  012FF8                     	if	1	;There are 3 active tblptr bytes
 12643  012FF8  6AF8               	clrf	tblptru,c
 12644  012FFA  0E00               	movlw	low (__mediumconst shr (0+16))
 12645  012FFC  22F8               	addwfc	tblptru,f,c
 12646  012FFE                     	endif
 12647  012FFE  0009               	tblrd		*+
 12648  013000  CFF5 F149          	movff	tablat,___ftmul@f2
 12649  013004  0009               	tblrd		*+
 12650  013006  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12651  01300A  000A               	tblrd		*-
 12652  01300C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12653  013010  C15B  F146         	movff	_fround$3149,___ftmul@f1
 12654  013014  C15C  F147         	movff	_fround$3149+1,___ftmul@f1+1
 12655  013018  C15D  F148         	movff	_fround$3149+2,___ftmul@f1+2
 12656  01301C  EC00  F0A4         	call	___ftmul	;wreg free
 12657  013020  C146  F158         	movff	?___ftmul,_fround$3150
 12658  013024  C147  F159         	movff	?___ftmul+1,_fround$3150+1
 12659  013028  C148  F15A         	movff	?___ftmul+2,_fround$3150+2
 12660                           
 12661                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12662  01302C  C158  F146         	movff	_fround$3150,___ftmul@f1
 12663  013030  C159  F147         	movff	_fround$3150+1,___ftmul@f1+1
 12664  013034  C15A  F148         	movff	_fround$3150+2,___ftmul@f1+2
 12665  013038  0E00               	movlw	0
 12666  01303A  0101               	movlb	1	; () banked
 12667  01303C  6F49               	movwf	___ftmul@f2& (0+255),b
 12668  01303E  0E00               	movlw	0
 12669  013040  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12670  013042  0E3F               	movlw	63
 12671  013044  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12672  013046  EC00  F0A4         	call	___ftmul	;wreg free
 12673  01304A  C146  F155         	movff	?___ftmul,?_fround
 12674  01304E  C147  F156         	movff	?___ftmul+1,?_fround+1
 12675  013052  C148  F157         	movff	?___ftmul+2,?_fround+2
 12676  013056  0012               	return	
 12677  013058                     l1089:
 12678                           
 12679                           ;doprnt.c: 415: else if(prec > 10)
 12680  013058  0E0A               	movlw	10
 12681  01305A  0101               	movlb	1	; () banked
 12682  01305C  655E               	cpfsgt	fround@prec& (0+255),b
 12683  01305E  D06D               	goto	l1092
 12684                           
 12685                           ; BSR set to: 1
 12686                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12687  013060  0E00               	movlw	0
 12688  013062  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12689  013064  0E03               	movlw	3
 12690  013066  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12691  013068  0E00               	movlw	0
 12692  01306A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12693  01306C  0E0A               	movlw	10
 12694  01306E  6F19               	movwf	___awmod@divisor& (0+255),b
 12695  013070  C15E  F117         	movff	fround@prec,___awmod@dividend
 12696  013074  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12697  013076  EC33  F0AC         	call	___awmod	;wreg free
 12698  01307A  C117  F125         	movff	?___awmod,___wmul@multiplier
 12699  01307E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12700  013082  EC19  F0B1         	call	___wmul	;wreg free
 12701  013086  0EC8               	movlw	low __npowers_
 12702  013088  0101               	movlb	1	; () banked
 12703  01308A  2525               	addwf	?___wmul& (0+255),w,b
 12704  01308C  6EF6               	movwf	tblptrl,c
 12705  01308E  0EF1               	movlw	high __npowers_
 12706  013090  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12707  013092  6EF7               	movwf	tblptrh,c
 12708  013094                     	if	1	;There are 3 active tblptr bytes
 12709  013094  6AF8               	clrf	tblptru,c
 12710  013096  0E00               	movlw	low (__mediumconst shr (0+16))
 12711  013098  22F8               	addwfc	tblptru,f,c
 12712  01309A                     	endif
 12713  01309A  0009               	tblrd		*+
 12714  01309C  CFF5 F149          	movff	tablat,___ftmul@f2
 12715  0130A0  0009               	tblrd		*+
 12716  0130A2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12717  0130A6  000A               	tblrd		*-
 12718  0130A8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12719  0130AC  0E00               	movlw	0
 12720  0130AE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12721  0130B0  0E0A               	movlw	10
 12722  0130B2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12723  0130B4  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 12724  0130B8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12725  0130BA  EC78  F0AA         	call	___awdiv	;wreg free
 12726  0130BE  0E09               	movlw	9
 12727  0130C0  0101               	movlb	1	; () banked
 12728  0130C2  251D               	addwf	?___awdiv& (0+255),w,b
 12729  0130C4  6F25               	movwf	___wmul@multiplier& (0+255),b
 12730  0130C6  0E00               	movlw	0
 12731  0130C8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12732  0130CA  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12733  0130CC  0E00               	movlw	0
 12734  0130CE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12735  0130D0  0E03               	movlw	3
 12736  0130D2  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12737  0130D4  EC19  F0B1         	call	___wmul	;wreg free
 12738  0130D8  0EC8               	movlw	low __npowers_
 12739  0130DA  0101               	movlb	1	; () banked
 12740  0130DC  2525               	addwf	?___wmul& (0+255),w,b
 12741  0130DE  6EF6               	movwf	tblptrl,c
 12742  0130E0  0EF1               	movlw	high __npowers_
 12743  0130E2  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12744  0130E4  6EF7               	movwf	tblptrh,c
 12745  0130E6                     	if	1	;There are 3 active tblptr bytes
 12746  0130E6  6AF8               	clrf	tblptru,c
 12747  0130E8  0E00               	movlw	low (__mediumconst shr (0+16))
 12748  0130EA  22F8               	addwfc	tblptru,f,c
 12749  0130EC                     	endif
 12750  0130EC  0009               	tblrd		*+
 12751  0130EE  CFF5 F146          	movff	tablat,___ftmul@f1
 12752  0130F2  0009               	tblrd		*+
 12753  0130F4  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12754  0130F8  000A               	tblrd		*-
 12755  0130FA  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12756  0130FE  EC00  F0A4         	call	___ftmul	;wreg free
 12757  013102  C146  F15B         	movff	?___ftmul,_fround$3149
 12758  013106  C147  F15C         	movff	?___ftmul+1,_fround$3149+1
 12759  01310A  C148  F15D         	movff	?___ftmul+2,_fround$3149+2
 12760                           
 12761                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12762  01310E  C15B  F146         	movff	_fround$3149,___ftmul@f1
 12763  013112  C15C  F147         	movff	_fround$3149+1,___ftmul@f1+1
 12764  013116  C15D  F148         	movff	_fround$3149+2,___ftmul@f1+2
 12765  01311A  0E00               	movlw	0
 12766  01311C  0101               	movlb	1	; () banked
 12767  01311E  6F49               	movwf	___ftmul@f2& (0+255),b
 12768  013120  0E00               	movlw	0
 12769  013122  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12770  013124  0E3F               	movlw	63
 12771  013126  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12772  013128  EC00  F0A4         	call	___ftmul	;wreg free
 12773  01312C  C146  F155         	movff	?___ftmul,?_fround
 12774  013130  C147  F156         	movff	?___ftmul+1,?_fround+1
 12775  013134  C148  F157         	movff	?___ftmul+2,?_fround+2
 12776  013138  0012               	return	
 12777  01313A                     l1092:
 12778                           
 12779                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 12780  01313A  0101               	movlb	1	; () banked
 12781  01313C  515E               	movf	fround@prec& (0+255),w,b
 12782  01313E  0D03               	mullw	3
 12783  013140  0EC8               	movlw	low __npowers_
 12784  013142  24F3               	addwf	prodl,w,c
 12785  013144  6EF6               	movwf	tblptrl,c
 12786  013146  0EF1               	movlw	high __npowers_
 12787  013148  20F4               	addwfc	prodh,w,c
 12788  01314A  6EF7               	movwf	tblptrh,c
 12789  01314C                     	if	1	;There are 3 active tblptr bytes
 12790  01314C  6AF8               	clrf	tblptru,c
 12791  01314E  0E00               	movlw	low (__mediumconst shr (0+16))
 12792  013150  22F8               	addwfc	tblptru,f,c
 12793  013152                     	endif
 12794  013152  0009               	tblrd		*+
 12795  013154  CFF5 F146          	movff	tablat,___ftmul@f1
 12796  013158  0009               	tblrd		*+
 12797  01315A  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12798  01315E  000A               	tblrd		*-
 12799  013160  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12800  013164  0E00               	movlw	0
 12801  013166  6F49               	movwf	___ftmul@f2& (0+255),b
 12802  013168  0E00               	movlw	0
 12803  01316A  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12804  01316C  0E3F               	movlw	63
 12805  01316E  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12806  013170  EC00  F0A4         	call	___ftmul	;wreg free
 12807  013174  C146  F155         	movff	?___ftmul,?_fround
 12808  013178  C147  F156         	movff	?___ftmul+1,?_fround+1
 12809  01317C  C148  F157         	movff	?___ftmul+2,?_fround+2
 12810  013180  0012               	return	
 12811  013182                     __end_of_fround:
 12812                           	opt stack 0
 12813                           tblptru	equ	0xFF8
 12814                           tblptrh	equ	0xFF7
 12815                           tblptrl	equ	0xFF6
 12816                           tablat	equ	0xFF5
 12817                           prodh	equ	0xFF4
 12818                           prodl	equ	0xFF3
 12819                           intcon	equ	0xFF2
 12820                           postinc0	equ	0xFEE
 12821                           wreg	equ	0xFE8
 12822                           indf1	equ	0xFE7
 12823                           postdec1	equ	0xFE5
 12824                           fsr1h	equ	0xFE2
 12825                           fsr1l	equ	0xFE1
 12826                           indf2	equ	0xFDF
 12827                           postinc2	equ	0xFDE
 12828                           postdec2	equ	0xFDD
 12829                           fsr2h	equ	0xFDA
 12830                           fsr2l	equ	0xFD9
 12831                           status	equ	0xFD8
 12832                           
 12833 ;; *************** function ___wmul *****************
 12834 ;; Defined at:
 12835 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  multiplier      2   37[BANK1 ] unsigned int 
 12838 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  product         2   41[BANK1 ] unsigned int 
 12841 ;; Return value:  Size  Location     Type
 12842 ;;                  2   37[BANK1 ] unsigned int 
 12843 ;; Registers used:
 12844 ;;		wreg, status,2, status,0, prodl, prodh
 12845 ;; Tracked objects:
 12846 ;;		On entry : 0/0
 12847 ;;		On exit  : 0/0
 12848 ;;		Unchanged: 0/0
 12849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12850 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12851 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12853 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12854 ;;Total ram usage:        6 bytes
 12855 ;; Hardware stack levels used:    1
 12856 ;; Hardware stack levels required when called:   14
 12857 ;; This function calls:
 12858 ;;		Nothing
 12859 ;; This function is called by:
 12860 ;;		_ringBufferLUT
 12861 ;;		_fround
 12862 ;;		_scale
 12863 ;;		_printf
 12864 ;;		_atoi
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text25
 12869  016232                     __ptext25:
 12870                           	opt stack 0
 12871  016232                     ___wmul:
 12872                           	opt stack 12
 12873                           
 12874                           ;incstack = 0
 12875  016232  0101               	movlb	1	; () banked
 12876  016234  5125               	movf	___wmul@multiplier& (0+255),w,b
 12877  016236  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12878  016238  CFF3 F129          	movff	prodl,___wmul@product
 12879  01623C  CFF4 F12A          	movff	prodh,___wmul@product+1
 12880  016240  5125               	movf	___wmul@multiplier& (0+255),w,b
 12881  016242  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12882  016244  50F3               	movf	prodl,w,c
 12883  016246  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12884  016248  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12885  01624A  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12886  01624C  50F3               	movf	prodl,w,c
 12887  01624E  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12888                           
 12889                           ; BSR set to: 1
 12890  016250  C129  F125         	movff	___wmul@product,?___wmul
 12891  016254  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 12892  016258  0012               	return	
 12893  01625A                     __end_of___wmul:
 12894                           	opt stack 0
 12895                           tblptru	equ	0xFF8
 12896                           tblptrh	equ	0xFF7
 12897                           tblptrl	equ	0xFF6
 12898                           tablat	equ	0xFF5
 12899                           prodh	equ	0xFF4
 12900                           prodl	equ	0xFF3
 12901                           intcon	equ	0xFF2
 12902                           postinc0	equ	0xFEE
 12903                           wreg	equ	0xFE8
 12904                           indf1	equ	0xFE7
 12905                           postdec1	equ	0xFE5
 12906                           fsr1h	equ	0xFE2
 12907                           fsr1l	equ	0xFE1
 12908                           indf2	equ	0xFDF
 12909                           postinc2	equ	0xFDE
 12910                           postdec2	equ	0xFDD
 12911                           fsr2h	equ	0xFDA
 12912                           fsr2l	equ	0xFD9
 12913                           status	equ	0xFD8
 12914                           
 12915 ;; *************** function ___ftmul *****************
 12916 ;; Defined at:
 12917 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;  f1              3   70[BANK1 ] float 
 12920 ;;  f2              3   73[BANK1 ] float 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 12923 ;;  sign            1   84[BANK1 ] unsigned char 
 12924 ;;  cntr            1   83[BANK1 ] unsigned char 
 12925 ;;  exp             1   79[BANK1 ] unsigned char 
 12926 ;; Return value:  Size  Location     Type
 12927 ;;                  3   70[BANK1 ] float 
 12928 ;; Registers used:
 12929 ;;		wreg, status,2, status,0, cstack
 12930 ;; Tracked objects:
 12931 ;;		On entry : 0/0
 12932 ;;		On exit  : 0/0
 12933 ;;		Unchanged: 0/0
 12934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12935 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12936 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12937 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12938 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12939 ;;Total ram usage:       15 bytes
 12940 ;; Hardware stack levels used:    1
 12941 ;; Hardware stack levels required when called:   15
 12942 ;; This function calls:
 12943 ;;		___ftpack
 12944 ;; This function is called by:
 12945 ;;		_ringBufferLUT
 12946 ;;		_fround
 12947 ;;		_scale
 12948 ;;		_printf
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952                           	psect	text26
 12953  014800                     __ptext26:
 12954                           	opt stack 0
 12955  014800                     ___ftmul:
 12956                           	opt stack 11
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;incstack = 0
 12960  014800  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 12961  014804  0101               	movlb	1	; () banked
 12962  014806  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12963  014808  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12964  01480A  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 12965  01480C  374C               	rlcf	??___ftmul& (0+255),f,b
 12966  01480E  E301               	bnc	u9321
 12967  014810  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12968  014812                     u9321:
 12969  014812  514C               	movf	??___ftmul& (0+255),w,b
 12970  014814  6F4F               	movwf	___ftmul@exp& (0+255),b
 12971  014816  514F               	movf	___ftmul@exp& (0+255),w,b
 12972  014818  A4D8               	btfss	status,2,c
 12973  01481A  D007               	goto	l1587
 12974                           
 12975                           ; BSR set to: 1
 12976  01481C  0E00               	movlw	0
 12977  01481E  6F46               	movwf	?___ftmul& (0+255),b
 12978  014820  0E00               	movlw	0
 12979  014822  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12980  014824  0E00               	movlw	0
 12981  014826  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12982                           
 12983                           ; BSR set to: 1
 12984  014828  0012               	return	
 12985  01482A                     l1587:
 12986                           
 12987                           ; BSR set to: 1
 12988                           
 12989                           ; BSR set to: 1
 12990  01482A  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 12991  01482E  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12992  014830  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12993  014832  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 12994  014834  374C               	rlcf	??___ftmul& (0+255),f,b
 12995  014836  E301               	bnc	u9341
 12996  014838  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12997  01483A                     u9341:
 12998  01483A  514C               	movf	??___ftmul& (0+255),w,b
 12999  01483C  6F54               	movwf	___ftmul@sign& (0+255),b
 13000  01483E  5154               	movf	___ftmul@sign& (0+255),w,b
 13001  014840  A4D8               	btfss	status,2,c
 13002  014842  D007               	goto	l1589
 13003                           
 13004                           ; BSR set to: 1
 13005  014844  0E00               	movlw	0
 13006  014846  6F46               	movwf	?___ftmul& (0+255),b
 13007  014848  0E00               	movlw	0
 13008  01484A  6F47               	movwf	(?___ftmul+1)& (0+255),b
 13009  01484C  0E00               	movlw	0
 13010  01484E  6F48               	movwf	(?___ftmul+2)& (0+255),b
 13011                           
 13012                           ; BSR set to: 1
 13013  014850  0012               	return	
 13014  014852                     l1589:
 13015                           
 13016                           ; BSR set to: 1
 13017                           
 13018                           ; BSR set to: 1
 13019  014852  5154               	movf	___ftmul@sign& (0+255),w,b
 13020  014854  0F7B               	addlw	123
 13021  014856  274F               	addwf	___ftmul@exp& (0+255),f,b
 13022                           
 13023                           ; BSR set to: 1
 13024  014858  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 13025  01485C  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 13026  01485E  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 13027  014860  0E80               	movlw	128
 13028  014862  1754               	andwf	___ftmul@sign& (0+255),f,b
 13029                           
 13030                           ; BSR set to: 1
 13031  014864  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13032                           
 13033                           ; BSR set to: 1
 13034  014866  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13035                           
 13036                           ; BSR set to: 1
 13037  014868  0EFF               	movlw	255
 13038  01486A  1749               	andwf	___ftmul@f2& (0+255),f,b
 13039  01486C  0EFF               	movlw	255
 13040  01486E  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13041  014870  0E00               	movlw	0
 13042  014872  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13043                           
 13044                           ; BSR set to: 1
 13045  014874  0E00               	movlw	0
 13046  014876  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 13047  014878  0E00               	movlw	0
 13048  01487A  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13049  01487C  0E00               	movlw	0
 13050  01487E  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13051                           
 13052                           ; BSR set to: 1
 13053  014880  0E07               	movlw	7
 13054  014882  6F53               	movwf	___ftmul@cntr& (0+255),b
 13055  014884                     
 13056                           ; BSR set to: 1
 13057                           
 13058                           ; BSR set to: 1
 13059  014884  A146               	btfss	___ftmul@f1& (0+255),0,b
 13060  014886  D006               	goto	l1591
 13061                           
 13062                           ; BSR set to: 1
 13063  014888  5149               	movf	___ftmul@f2& (0+255),w,b
 13064  01488A  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13065  01488C  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 13066  01488E  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13067  014890  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 13068  014892  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13069  014894                     l1591:
 13070                           
 13071                           ; BSR set to: 1
 13072                           
 13073                           ; BSR set to: 1
 13074  014894  90D8               	bcf	status,0,c
 13075  014896  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13076  014898  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13077  01489A  3346               	rrcf	___ftmul@f1& (0+255),f,b
 13078  01489C  90D8               	bcf	status,0,c
 13079  01489E  3749               	rlcf	___ftmul@f2& (0+255),f,b
 13080  0148A0  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13081  0148A2  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13082                           
 13083                           ; BSR set to: 1
 13084  0148A4  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 13085  0148A6  D7EE               	goto	l1590
 13086                           
 13087                           ; BSR set to: 1
 13088                           
 13089                           ; BSR set to: 1
 13090  0148A8  0E09               	movlw	9
 13091  0148AA  6F53               	movwf	___ftmul@cntr& (0+255),b
 13092  0148AC                     
 13093                           ; BSR set to: 1
 13094                           
 13095                           ; BSR set to: 1
 13096  0148AC  A146               	btfss	___ftmul@f1& (0+255),0,b
 13097  0148AE  D006               	goto	l1594
 13098                           
 13099                           ; BSR set to: 1
 13100  0148B0  5149               	movf	___ftmul@f2& (0+255),w,b
 13101  0148B2  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13102  0148B4  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 13103  0148B6  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13104  0148B8  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 13105  0148BA  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13106  0148BC                     l1594:
 13107                           
 13108                           ; BSR set to: 1
 13109                           
 13110                           ; BSR set to: 1
 13111  0148BC  90D8               	bcf	status,0,c
 13112  0148BE  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13113  0148C0  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13114  0148C2  3346               	rrcf	___ftmul@f1& (0+255),f,b
 13115  0148C4  90D8               	bcf	status,0,c
 13116  0148C6  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13117  0148C8  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13118  0148CA  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13119                           
 13120                           ; BSR set to: 1
 13121  0148CC  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 13122  0148CE  D7EE               	goto	l1593
 13123                           
 13124                           ; BSR set to: 1
 13125                           
 13126                           ; BSR set to: 1
 13127  0148D0  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 13128  0148D4  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13129  0148D8  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13130  0148DC  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 13131  0148E0  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 13132  0148E4  EC04  F0A8         	call	___ftpack	;wreg free
 13133  0148E8  C117  F146         	movff	?___ftpack,?___ftmul
 13134  0148EC  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 13135  0148F0  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 13136  0148F4  0012               	return	
 13137  0148F6                     __end_of___ftmul:
 13138                           	opt stack 0
 13139                           tblptru	equ	0xFF8
 13140                           tblptrh	equ	0xFF7
 13141                           tblptrl	equ	0xFF6
 13142                           tablat	equ	0xFF5
 13143                           prodh	equ	0xFF4
 13144                           prodl	equ	0xFF3
 13145                           intcon	equ	0xFF2
 13146                           postinc0	equ	0xFEE
 13147                           wreg	equ	0xFE8
 13148                           indf1	equ	0xFE7
 13149                           postdec1	equ	0xFE5
 13150                           fsr1h	equ	0xFE2
 13151                           fsr1l	equ	0xFE1
 13152                           indf2	equ	0xFDF
 13153                           postinc2	equ	0xFDE
 13154                           postdec2	equ	0xFDD
 13155                           fsr2h	equ	0xFDA
 13156                           fsr2l	equ	0xFD9
 13157                           status	equ	0xFD8
 13158                           
 13159 ;; *************** function ___awmod *****************
 13160 ;; Defined at:
 13161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;  dividend        2   23[BANK1 ] int 
 13164 ;;  divisor         2   25[BANK1 ] int 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;  sign            1   28[BANK1 ] unsigned char 
 13167 ;;  counter         1   27[BANK1 ] unsigned char 
 13168 ;; Return value:  Size  Location     Type
 13169 ;;                  2   23[BANK1 ] int 
 13170 ;; Registers used:
 13171 ;;		wreg, status,2, status,0
 13172 ;; Tracked objects:
 13173 ;;		On entry : 0/0
 13174 ;;		On exit  : 0/0
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13177 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13178 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13180 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13181 ;;Total ram usage:        6 bytes
 13182 ;; Hardware stack levels used:    1
 13183 ;; Hardware stack levels required when called:   14
 13184 ;; This function calls:
 13185 ;;		Nothing
 13186 ;; This function is called by:
 13187 ;;		_fround
 13188 ;;		_scale
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text27
 13193  015866                     __ptext27:
 13194                           	opt stack 0
 13195  015866                     ___awmod:
 13196                           	opt stack 12
 13197                           
 13198                           ;incstack = 0
 13199  015866  0E00               	movlw	0
 13200  015868  0101               	movlb	1	; () banked
 13201  01586A  6F1C               	movwf	___awmod@sign& (0+255),b
 13202                           
 13203                           ; BSR set to: 1
 13204  01586C  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13205  01586E  D006               	goto	l1428
 13206                           
 13207                           ; BSR set to: 1
 13208  015870  6D17               	negf	___awmod@dividend& (0+255),b
 13209  015872  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 13210  015874  B0D8               	btfsc	status,0,c
 13211  015876  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 13212                           
 13213                           ; BSR set to: 1
 13214  015878  0E01               	movlw	1
 13215  01587A  6F1C               	movwf	___awmod@sign& (0+255),b
 13216  01587C                     l1428:
 13217                           
 13218                           ; BSR set to: 1
 13219                           
 13220                           ; BSR set to: 1
 13221  01587C  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13222  01587E  D004               	goto	l1429
 13223                           
 13224                           ; BSR set to: 1
 13225  015880  6D19               	negf	___awmod@divisor& (0+255),b
 13226  015882  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 13227  015884  B0D8               	btfsc	status,0,c
 13228  015886  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 13229  015888                     l1429:
 13230                           
 13231                           ; BSR set to: 1
 13232                           
 13233                           ; BSR set to: 1
 13234  015888  5119               	movf	___awmod@divisor& (0+255),w,b
 13235  01588A  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13236  01588C  B4D8               	btfsc	status,2,c
 13237  01588E  D018               	goto	l1436
 13238                           
 13239                           ; BSR set to: 1
 13240  015890  0E01               	movlw	1
 13241  015892  6F1B               	movwf	___awmod@counter& (0+255),b
 13242  015894  D004               	goto	l1431
 13243  015896                     
 13244                           ; BSR set to: 1
 13245                           
 13246                           ; BSR set to: 1
 13247  015896  90D8               	bcf	status,0,c
 13248  015898  3719               	rlcf	___awmod@divisor& (0+255),f,b
 13249  01589A  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13250  01589C  2B1B               	incf	___awmod@counter& (0+255),f,b
 13251  01589E                     l1431:
 13252                           
 13253                           ; BSR set to: 1
 13254                           
 13255                           ; BSR set to: 1
 13256  01589E  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13257  0158A0  D7FA               	goto	l1432
 13258  0158A2                     u9490:
 13259                           
 13260                           ; BSR set to: 1
 13261                           
 13262                           ; BSR set to: 1
 13263                           
 13264                           ; BSR set to: 1
 13265  0158A2  5119               	movf	___awmod@divisor& (0+255),w,b
 13266  0158A4  5D17               	subwf	___awmod@dividend& (0+255),w,b
 13267  0158A6  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 13268  0158A8  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13269  0158AA  A0D8               	btfss	status,0,c
 13270  0158AC  D004               	goto	l1435
 13271                           
 13272                           ; BSR set to: 1
 13273  0158AE  5119               	movf	___awmod@divisor& (0+255),w,b
 13274  0158B0  5F17               	subwf	___awmod@dividend& (0+255),f,b
 13275  0158B2  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 13276  0158B4  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13277  0158B6                     l1435:
 13278                           
 13279                           ; BSR set to: 1
 13280                           
 13281                           ; BSR set to: 1
 13282  0158B6  90D8               	bcf	status,0,c
 13283  0158B8  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13284  0158BA  3319               	rrcf	___awmod@divisor& (0+255),f,b
 13285                           
 13286                           ; BSR set to: 1
 13287  0158BC  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 13288  0158BE  D7F1               	goto	u9490
 13289  0158C0                     l1436:
 13290                           
 13291                           ; BSR set to: 1
 13292                           
 13293                           ; BSR set to: 1
 13294                           
 13295                           ; BSR set to: 1
 13296  0158C0  511C               	movf	___awmod@sign& (0+255),w,b
 13297  0158C2  B4D8               	btfsc	status,2,c
 13298  0158C4  D004               	goto	l1437
 13299                           
 13300                           ; BSR set to: 1
 13301  0158C6  6D17               	negf	___awmod@dividend& (0+255),b
 13302  0158C8  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 13303  0158CA  B0D8               	btfsc	status,0,c
 13304  0158CC  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 13305  0158CE                     l1437:
 13306                           
 13307                           ; BSR set to: 1
 13308                           
 13309                           ; BSR set to: 1
 13310  0158CE  C117  F117         	movff	___awmod@dividend,?___awmod
 13311  0158D2  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 13312  0158D6  0012               	return	
 13313  0158D8                     __end_of___awmod:
 13314                           	opt stack 0
 13315                           tblptru	equ	0xFF8
 13316                           tblptrh	equ	0xFF7
 13317                           tblptrl	equ	0xFF6
 13318                           tablat	equ	0xFF5
 13319                           prodh	equ	0xFF4
 13320                           prodl	equ	0xFF3
 13321                           intcon	equ	0xFF2
 13322                           postinc0	equ	0xFEE
 13323                           wreg	equ	0xFE8
 13324                           indf1	equ	0xFE7
 13325                           postdec1	equ	0xFE5
 13326                           fsr1h	equ	0xFE2
 13327                           fsr1l	equ	0xFE1
 13328                           indf2	equ	0xFDF
 13329                           postinc2	equ	0xFDE
 13330                           postdec2	equ	0xFDD
 13331                           fsr2h	equ	0xFDA
 13332                           fsr2l	equ	0xFD9
 13333                           status	equ	0xFD8
 13334                           
 13335 ;; *************** function ___awdiv *****************
 13336 ;; Defined at:
 13337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;  dividend        2   29[BANK1 ] int 
 13340 ;;  divisor         2   31[BANK1 ] int 
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;  quotient        2   35[BANK1 ] int 
 13343 ;;  sign            1   34[BANK1 ] unsigned char 
 13344 ;;  counter         1   33[BANK1 ] unsigned char 
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  2   29[BANK1 ] int 
 13347 ;; Registers used:
 13348 ;;		wreg, status,2, status,0
 13349 ;; Tracked objects:
 13350 ;;		On entry : 0/0
 13351 ;;		On exit  : 0/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13354 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13355 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13357 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13358 ;;Total ram usage:        8 bytes
 13359 ;; Hardware stack levels used:    1
 13360 ;; Hardware stack levels required when called:   14
 13361 ;; This function calls:
 13362 ;;		Nothing
 13363 ;; This function is called by:
 13364 ;;		_fround
 13365 ;;		_scale
 13366 ;;		_printf
 13367 ;; This function uses a non-reentrant model
 13368 ;;
 13369                           
 13370                           	psect	text28
 13371  0154F0                     __ptext28:
 13372                           	opt stack 0
 13373  0154F0                     ___awdiv:
 13374                           	opt stack 12
 13375                           
 13376                           ; BSR set to: 1
 13377                           ;incstack = 0
 13378  0154F0  0E00               	movlw	0
 13379  0154F2  0101               	movlb	1	; () banked
 13380  0154F4  6F22               	movwf	___awdiv@sign& (0+255),b
 13381                           
 13382                           ; BSR set to: 1
 13383  0154F6  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13384  0154F8  D006               	goto	l1415
 13385                           
 13386                           ; BSR set to: 1
 13387  0154FA  6D1F               	negf	___awdiv@divisor& (0+255),b
 13388  0154FC  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13389  0154FE  B0D8               	btfsc	status,0,c
 13390  015500  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13391                           
 13392                           ; BSR set to: 1
 13393  015502  0E01               	movlw	1
 13394  015504  6F22               	movwf	___awdiv@sign& (0+255),b
 13395  015506                     l1415:
 13396                           
 13397                           ; BSR set to: 1
 13398                           
 13399                           ; BSR set to: 1
 13400  015506  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13401  015508  D006               	goto	l1416
 13402                           
 13403                           ; BSR set to: 1
 13404  01550A  6D1D               	negf	___awdiv@dividend& (0+255),b
 13405  01550C  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13406  01550E  B0D8               	btfsc	status,0,c
 13407  015510  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13408                           
 13409                           ; BSR set to: 1
 13410  015512  0E01               	movlw	1
 13411  015514  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 13412  015516                     l1416:
 13413                           
 13414                           ; BSR set to: 1
 13415                           
 13416                           ; BSR set to: 1
 13417  015516  0E00               	movlw	0
 13418  015518  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 13419  01551A  0E00               	movlw	0
 13420  01551C  6F23               	movwf	___awdiv@quotient& (0+255),b
 13421                           
 13422                           ; BSR set to: 1
 13423  01551E  511F               	movf	___awdiv@divisor& (0+255),w,b
 13424  015520  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13425  015522  B4D8               	btfsc	status,2,c
 13426  015524  D01C               	goto	l1423
 13427                           
 13428                           ; BSR set to: 1
 13429  015526  0E01               	movlw	1
 13430  015528  6F21               	movwf	___awdiv@counter& (0+255),b
 13431  01552A  D004               	goto	l1418
 13432  01552C                     
 13433                           ; BSR set to: 1
 13434                           
 13435                           ; BSR set to: 1
 13436  01552C  90D8               	bcf	status,0,c
 13437  01552E  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 13438  015530  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13439  015532  2B21               	incf	___awdiv@counter& (0+255),f,b
 13440  015534                     l1418:
 13441                           
 13442                           ; BSR set to: 1
 13443                           
 13444                           ; BSR set to: 1
 13445  015534  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13446  015536  D7FA               	goto	l1419
 13447  015538                     u9430:
 13448                           
 13449                           ; BSR set to: 1
 13450                           
 13451                           ; BSR set to: 1
 13452                           
 13453                           ; BSR set to: 1
 13454  015538  90D8               	bcf	status,0,c
 13455  01553A  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 13456  01553C  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13457                           
 13458                           ; BSR set to: 1
 13459  01553E  511F               	movf	___awdiv@divisor& (0+255),w,b
 13460  015540  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 13461  015542  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13462  015544  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13463  015546  A0D8               	btfss	status,0,c
 13464  015548  D005               	goto	l1422
 13465                           
 13466                           ; BSR set to: 1
 13467  01554A  511F               	movf	___awdiv@divisor& (0+255),w,b
 13468  01554C  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 13469  01554E  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13470  015550  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13471                           
 13472                           ; BSR set to: 1
 13473  015552  8123               	bsf	___awdiv@quotient& (0+255),0,b
 13474  015554                     l1422:
 13475                           
 13476                           ; BSR set to: 1
 13477                           
 13478                           ; BSR set to: 1
 13479  015554  90D8               	bcf	status,0,c
 13480  015556  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13481  015558  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 13482                           
 13483                           ; BSR set to: 1
 13484  01555A  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 13485  01555C  D7ED               	goto	u9430
 13486  01555E                     l1423:
 13487                           
 13488                           ; BSR set to: 1
 13489                           
 13490                           ; BSR set to: 1
 13491                           
 13492                           ; BSR set to: 1
 13493  01555E  5122               	movf	___awdiv@sign& (0+255),w,b
 13494  015560  B4D8               	btfsc	status,2,c
 13495  015562  D004               	goto	l1424
 13496                           
 13497                           ; BSR set to: 1
 13498  015564  6D23               	negf	___awdiv@quotient& (0+255),b
 13499  015566  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13500  015568  B0D8               	btfsc	status,0,c
 13501  01556A  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13502  01556C                     l1424:
 13503                           
 13504                           ; BSR set to: 1
 13505                           
 13506                           ; BSR set to: 1
 13507  01556C  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 13508  015570  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 13509  015574  0012               	return	
 13510  015576                     __end_of___awdiv:
 13511                           	opt stack 0
 13512                           tblptru	equ	0xFF8
 13513                           tblptrh	equ	0xFF7
 13514                           tblptrl	equ	0xFF6
 13515                           tablat	equ	0xFF5
 13516                           prodh	equ	0xFF4
 13517                           prodl	equ	0xFF3
 13518                           intcon	equ	0xFF2
 13519                           postinc0	equ	0xFEE
 13520                           wreg	equ	0xFE8
 13521                           indf1	equ	0xFE7
 13522                           postdec1	equ	0xFE5
 13523                           fsr1h	equ	0xFE2
 13524                           fsr1l	equ	0xFE1
 13525                           indf2	equ	0xFDF
 13526                           postinc2	equ	0xFDE
 13527                           postdec2	equ	0xFDD
 13528                           fsr2h	equ	0xFDA
 13529                           fsr2l	equ	0xFD9
 13530                           status	equ	0xFD8
 13531                           
 13532 ;; *************** function __tdiv_to_l_ *****************
 13533 ;; Defined at:
 13534 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;  f1              3   23[BANK1 ] float 
 13537 ;;  f2              3   26[BANK1 ] float 
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;  quot            4   32[BANK1 ] unsigned long 
 13540 ;;  exp1            1   37[BANK1 ] unsigned char 
 13541 ;;  cntr            1   36[BANK1 ] unsigned char 
 13542 ;; Return value:  Size  Location     Type
 13543 ;;                  4   23[BANK1 ] unsigned long 
 13544 ;; Registers used:
 13545 ;;		wreg, status,2, status,0
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13551 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13552 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13553 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13554 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13555 ;;Total ram usage:       15 bytes
 13556 ;; Hardware stack levels used:    1
 13557 ;; Hardware stack levels required when called:   14
 13558 ;; This function calls:
 13559 ;;		Nothing
 13560 ;; This function is called by:
 13561 ;;		_printf
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text29
 13566  014134                     __ptext29:
 13567                           	opt stack 0
 13568  014134                     __tdiv_to_l_:
 13569                           	opt stack 13
 13570                           
 13571                           ; BSR set to: 1
 13572                           ;incstack = 0
 13573  014134  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13574  014138  0101               	movlb	1	; () banked
 13575  01413A  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13576  01413C  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13577  01413E  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13578  014140  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13579  014142  E301               	bnc	u9721
 13580  014144  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13581  014146                     u9721:
 13582  014146  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 13583  014148  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13584  01414A  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13585  01414C  A4D8               	btfss	status,2,c
 13586  01414E  D009               	goto	l1563
 13587                           
 13588                           ; BSR set to: 1
 13589  014150  0E00               	movlw	0
 13590  014152  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13591  014154  0E00               	movlw	0
 13592  014156  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13593  014158  0E00               	movlw	0
 13594  01415A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13595  01415C  0E00               	movlw	0
 13596  01415E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13597                           
 13598                           ; BSR set to: 1
 13599  014160  0012               	return	
 13600  014162                     l1563:
 13601                           
 13602                           ; BSR set to: 1
 13603                           
 13604                           ; BSR set to: 1
 13605  014162  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13606  014166  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13607  014168  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13608  01416A  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13609  01416C  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13610  01416E  E301               	bnc	u9741
 13611  014170  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13612  014172                     u9741:
 13613  014172  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 13614  014174  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13615  014176  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13616  014178  A4D8               	btfss	status,2,c
 13617  01417A  D009               	goto	l1565
 13618                           
 13619                           ; BSR set to: 1
 13620  01417C  0E00               	movlw	0
 13621  01417E  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13622  014180  0E00               	movlw	0
 13623  014182  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13624  014184  0E00               	movlw	0
 13625  014186  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13626  014188  0E00               	movlw	0
 13627  01418A  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13628                           
 13629                           ; BSR set to: 1
 13630  01418C  0012               	return	
 13631  01418E                     l1565:
 13632                           
 13633                           ; BSR set to: 1
 13634                           
 13635                           ; BSR set to: 1
 13636  01418E  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 13637                           
 13638                           ; BSR set to: 1
 13639  014190  0EFF               	movlw	255
 13640  014192  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 13641  014194  0EFF               	movlw	255
 13642  014196  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13643  014198  0E00               	movlw	0
 13644  01419A  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13645  01419C  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 13646                           
 13647                           ; BSR set to: 1
 13648  01419E  0EFF               	movlw	255
 13649  0141A0  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 13650  0141A2  0EFF               	movlw	255
 13651  0141A4  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 13652  0141A6  0E00               	movlw	0
 13653  0141A8  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 13654                           
 13655                           ; BSR set to: 1
 13656  0141AA  0E00               	movlw	0
 13657  0141AC  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 13658  0141AE  0E00               	movlw	0
 13659  0141B0  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 13660  0141B2  0E00               	movlw	0
 13661  0141B4  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 13662  0141B6  0E00               	movlw	0
 13663  0141B8  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 13664                           
 13665                           ; BSR set to: 1
 13666  0141BA  0E7F               	movlw	127
 13667  0141BC  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13668                           
 13669                           ; BSR set to: 1
 13670  0141BE  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13671  0141C0  0F98               	addlw	152
 13672  0141C2  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13673                           
 13674                           ; BSR set to: 1
 13675  0141C4  0E18               	movlw	24
 13676  0141C6  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13677  0141C8                     l1566:
 13678                           
 13679                           ; BSR set to: 1
 13680  0141C8  90D8               	bcf	status,0,c
 13681  0141CA  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13682  0141CC  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13683  0141CE  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13684  0141D0  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13685                           
 13686                           ; BSR set to: 1
 13687  0141D2  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13688  0141D4  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 13689  0141D6  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13690  0141D8  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13691  0141DA  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13692  0141DC  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 13693  0141DE  A0D8               	btfss	status,0,c
 13694  0141E0  D007               	goto	l1567
 13695                           
 13696                           ; BSR set to: 1
 13697  0141E2  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13698  0141E4  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 13699  0141E6  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13700  0141E8  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13701  0141EA  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13702  0141EC  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13703                           
 13704                           ; BSR set to: 1
 13705  0141EE  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 13706  0141F0                     l1567:
 13707                           
 13708                           ; BSR set to: 1
 13709  0141F0  90D8               	bcf	status,0,c
 13710  0141F2  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 13711  0141F4  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13712  0141F6  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13713                           
 13714                           ; BSR set to: 1
 13715  0141F8  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 13716  0141FA  D7E6               	goto	l1566
 13717                           
 13718                           ; BSR set to: 1
 13719                           
 13720                           ; BSR set to: 1
 13721  0141FC  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 13722  0141FE  D016               	goto	l1569
 13723                           
 13724                           ; BSR set to: 1
 13725  014200  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13726  014202  0A80               	xorlw	128
 13727  014204  0F97               	addlw	151
 13728  014206  B0D8               	btfsc	status,0,c
 13729  014208  D009               	goto	l1570
 13730                           
 13731                           ; BSR set to: 1
 13732  01420A  0E00               	movlw	0
 13733  01420C  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13734  01420E  0E00               	movlw	0
 13735  014210  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13736  014212  0E00               	movlw	0
 13737  014214  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13738  014216  0E00               	movlw	0
 13739  014218  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13740                           
 13741                           ; BSR set to: 1
 13742  01421A  0012               	return	
 13743  01421C                     l1570:
 13744                           
 13745                           ; BSR set to: 1
 13746                           
 13747                           ; BSR set to: 1
 13748                           
 13749                           ; BSR set to: 1
 13750  01421C  90D8               	bcf	status,0,c
 13751  01421E  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13752  014220  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13753  014222  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13754  014224  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 13755                           
 13756                           ; BSR set to: 1
 13757  014226  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 13758  014228  D7F9               	goto	l1570
 13759                           
 13760                           ; BSR set to: 1
 13761  01422A  D015               	goto	u9800
 13762  01422C                     l1569:
 13763                           
 13764                           ; BSR set to: 1
 13765                           
 13766                           ; BSR set to: 1
 13767  01422C  0E17               	movlw	23
 13768  01422E  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 13769  014230  D00F               	goto	l1575
 13770                           
 13771                           ; BSR set to: 1
 13772  014232  0E00               	movlw	0
 13773  014234  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13774  014236  0E00               	movlw	0
 13775  014238  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13776  01423A  0E00               	movlw	0
 13777  01423C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13778  01423E  0E00               	movlw	0
 13779  014240  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13780                           
 13781                           ; BSR set to: 1
 13782  014242  0012               	return	
 13783  014244                     
 13784                           ; BSR set to: 1
 13785                           
 13786                           ; BSR set to: 1
 13787  014244  90D8               	bcf	status,0,c
 13788  014246  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13789  014248  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13790  01424A  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13791  01424C  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13792  01424E  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 13793  014250                     l1575:
 13794                           
 13795                           ; BSR set to: 1
 13796                           
 13797                           ; BSR set to: 1
 13798  014250  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13799  014252  A4D8               	btfss	status,2,c
 13800  014254  D7F7               	goto	l1576
 13801  014256                     u9800:
 13802                           
 13803                           ; BSR set to: 1
 13804                           
 13805                           ; BSR set to: 1
 13806  014256  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 13807  01425A  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 13808  01425E  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 13809  014262  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 13810                           
 13811                           ; BSR set to: 1
 13812  014266  0012               	return		;funcret
 13813  014268                     __end_of__tdiv_to_l_:
 13814                           	opt stack 0
 13815                           tblptru	equ	0xFF8
 13816                           tblptrh	equ	0xFF7
 13817                           tblptrl	equ	0xFF6
 13818                           tablat	equ	0xFF5
 13819                           prodh	equ	0xFF4
 13820                           prodl	equ	0xFF3
 13821                           intcon	equ	0xFF2
 13822                           postinc0	equ	0xFEE
 13823                           wreg	equ	0xFE8
 13824                           indf1	equ	0xFE7
 13825                           postdec1	equ	0xFE5
 13826                           fsr1h	equ	0xFE2
 13827                           fsr1l	equ	0xFE1
 13828                           indf2	equ	0xFDF
 13829                           postinc2	equ	0xFDE
 13830                           postdec2	equ	0xFDD
 13831                           fsr2h	equ	0xFDA
 13832                           fsr2l	equ	0xFD9
 13833                           status	equ	0xFD8
 13834                           
 13835 ;; *************** function __div_to_l_ *****************
 13836 ;; Defined at:
 13837 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 13838 ;; Parameters:    Size  Location     Type
 13839 ;;  f1              3   23[BANK1 ] unsigned long 
 13840 ;;  f2              3   26[BANK1 ] unsigned long 
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;  quot            4   29[BANK1 ] unsigned long 
 13843 ;;  exp1            1   34[BANK1 ] unsigned char 
 13844 ;;  cntr            1   33[BANK1 ] unsigned char 
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  4   23[BANK1 ] unsigned long 
 13847 ;; Registers used:
 13848 ;;		wreg, status,2, status,0
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13854 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13855 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13857 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13858 ;;Total ram usage:       12 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:   14
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		_printf
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text30
 13869  01439A                     __ptext30:
 13870                           	opt stack 0
 13871  01439A                     __div_to_l_:
 13872                           	opt stack 13
 13873                           
 13874                           ; BSR set to: 1
 13875                           ;incstack = 0
 13876  01439A  0101               	movlb	1	; () banked
 13877  01439C  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 13878  01439E  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 13879  0143A0  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 13880  0143A2  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13881  0143A4  A4D8               	btfss	status,2,c
 13882  0143A6  D009               	goto	l1459
 13883                           
 13884                           ; BSR set to: 1
 13885  0143A8  0E00               	movlw	0
 13886  0143AA  6F17               	movwf	?__div_to_l_& (0+255),b
 13887  0143AC  0E00               	movlw	0
 13888  0143AE  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13889  0143B0  0E00               	movlw	0
 13890  0143B2  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13891  0143B4  0E00               	movlw	0
 13892  0143B6  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13893                           
 13894                           ; BSR set to: 1
 13895  0143B8  0012               	return	
 13896  0143BA                     l1459:
 13897                           
 13898                           ; BSR set to: 1
 13899                           
 13900                           ; BSR set to: 1
 13901  0143BA  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 13902  0143BC  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 13903  0143BE  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13904  0143C0  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13905  0143C2  A4D8               	btfss	status,2,c
 13906  0143C4  D009               	goto	l1461
 13907                           
 13908                           ; BSR set to: 1
 13909  0143C6  0E00               	movlw	0
 13910  0143C8  6F17               	movwf	?__div_to_l_& (0+255),b
 13911  0143CA  0E00               	movlw	0
 13912  0143CC  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13913  0143CE  0E00               	movlw	0
 13914  0143D0  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13915  0143D2  0E00               	movlw	0
 13916  0143D4  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13917                           
 13918                           ; BSR set to: 1
 13919  0143D6  0012               	return	
 13920  0143D8                     l1461:
 13921                           
 13922                           ; BSR set to: 1
 13923                           
 13924                           ; BSR set to: 1
 13925  0143D8  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 13926                           
 13927                           ; BSR set to: 1
 13928  0143DA  0EFF               	movlw	255
 13929  0143DC  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 13930  0143DE  0EFF               	movlw	255
 13931  0143E0  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 13932  0143E2  0EFF               	movlw	255
 13933  0143E4  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 13934  0143E6  0E00               	movlw	0
 13935  0143E8  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 13936                           
 13937                           ; BSR set to: 1
 13938  0143EA  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 13939  0143EC  0EFF               	movlw	255
 13940  0143EE  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 13941  0143F0  0EFF               	movlw	255
 13942  0143F2  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 13943  0143F4  0EFF               	movlw	255
 13944  0143F6  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 13945  0143F8  0E00               	movlw	0
 13946  0143FA  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 13947                           
 13948                           ; BSR set to: 1
 13949  0143FC  0E00               	movlw	0
 13950  0143FE  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 13951  014400  0E00               	movlw	0
 13952  014402  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 13953  014404  0E00               	movlw	0
 13954  014406  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 13955  014408  0E00               	movlw	0
 13956  01440A  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 13957                           
 13958                           ; BSR set to: 1
 13959  01440C  0E7F               	movlw	127
 13960  01440E  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13961                           
 13962                           ; BSR set to: 1
 13963  014410  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13964  014412  0FA0               	addlw	160
 13965  014414  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13966                           
 13967                           ; BSR set to: 1
 13968  014416  0E20               	movlw	32
 13969  014418  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13970  01441A                     
 13971                           ; BSR set to: 1
 13972                           
 13973                           ; BSR set to: 1
 13974  01441A  90D8               	bcf	status,0,c
 13975  01441C  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13976  01441E  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13977  014420  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13978  014422  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13979                           
 13980                           ; BSR set to: 1
 13981  014424  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13982  014426  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 13983  014428  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13984  01442A  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 13985  01442C  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13986  01442E  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 13987  014430  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13988  014432  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 13989  014434  A0D8               	btfss	status,0,c
 13990  014436  D009               	goto	l1463
 13991                           
 13992                           ; BSR set to: 1
 13993  014438  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13994  01443A  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 13995  01443C  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13996  01443E  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 13997  014440  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13998  014442  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 13999  014444  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14000  014446  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 14001                           
 14002                           ; BSR set to: 1
 14003  014448  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 14004  01444A                     l1463:
 14005                           
 14006                           ; BSR set to: 1
 14007                           
 14008                           ; BSR set to: 1
 14009  01444A  90D8               	bcf	status,0,c
 14010  01444C  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 14011  01444E  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 14012  014450  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 14013  014452  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 14014                           
 14015                           ; BSR set to: 1
 14016  014454  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 14017  014456  D7E1               	goto	l1462
 14018                           
 14019                           ; BSR set to: 1
 14020                           
 14021                           ; BSR set to: 1
 14022  014458  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 14023  01445A  D016               	goto	l1465
 14024                           
 14025                           ; BSR set to: 1
 14026  01445C  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 14027  01445E  0A80               	xorlw	128
 14028  014460  0F9F               	addlw	159
 14029  014462  B0D8               	btfsc	status,0,c
 14030  014464  D009               	goto	l1466
 14031                           
 14032                           ; BSR set to: 1
 14033  014466  0E00               	movlw	0
 14034  014468  6F17               	movwf	?__div_to_l_& (0+255),b
 14035  01446A  0E00               	movlw	0
 14036  01446C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 14037  01446E  0E00               	movlw	0
 14038  014470  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 14039  014472  0E00               	movlw	0
 14040  014474  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 14041                           
 14042                           ; BSR set to: 1
 14043  014476  0012               	return	
 14044  014478                     l1466:
 14045                           
 14046                           ; BSR set to: 1
 14047                           
 14048                           ; BSR set to: 1
 14049                           
 14050                           ; BSR set to: 1
 14051  014478  90D8               	bcf	status,0,c
 14052  01447A  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 14053  01447C  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 14054  01447E  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 14055  014480  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 14056                           
 14057                           ; BSR set to: 1
 14058  014482  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 14059  014484  D7F9               	goto	l1466
 14060                           
 14061                           ; BSR set to: 1
 14062  014486  D015               	goto	u9870
 14063  014488                     l1465:
 14064                           
 14065                           ; BSR set to: 1
 14066                           
 14067                           ; BSR set to: 1
 14068  014488  0E1F               	movlw	31
 14069  01448A  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 14070  01448C  D00F               	goto	l1471
 14071                           
 14072                           ; BSR set to: 1
 14073  01448E  0E00               	movlw	0
 14074  014490  6F17               	movwf	?__div_to_l_& (0+255),b
 14075  014492  0E00               	movlw	0
 14076  014494  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 14077  014496  0E00               	movlw	0
 14078  014498  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 14079  01449A  0E00               	movlw	0
 14080  01449C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 14081                           
 14082                           ; BSR set to: 1
 14083  01449E  0012               	return	
 14084  0144A0                     
 14085                           ; BSR set to: 1
 14086                           
 14087                           ; BSR set to: 1
 14088  0144A0  90D8               	bcf	status,0,c
 14089  0144A2  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 14090  0144A4  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14091  0144A6  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14092  0144A8  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14093  0144AA  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 14094  0144AC                     l1471:
 14095                           
 14096                           ; BSR set to: 1
 14097                           
 14098                           ; BSR set to: 1
 14099  0144AC  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 14100  0144AE  A4D8               	btfss	status,2,c
 14101  0144B0  D7F7               	goto	l1472
 14102  0144B2                     u9870:
 14103                           
 14104                           ; BSR set to: 1
 14105                           
 14106                           ; BSR set to: 1
 14107  0144B2  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 14108  0144B6  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 14109  0144BA  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 14110  0144BE  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 14111                           
 14112                           ; BSR set to: 1
 14113  0144C2  0012               	return		;funcret
 14114  0144C4                     __end_of__div_to_l_:
 14115                           	opt stack 0
 14116                           tblptru	equ	0xFF8
 14117                           tblptrh	equ	0xFF7
 14118                           tblptrl	equ	0xFF6
 14119                           tablat	equ	0xFF5
 14120                           prodh	equ	0xFF4
 14121                           prodl	equ	0xFF3
 14122                           intcon	equ	0xFF2
 14123                           postinc0	equ	0xFEE
 14124                           wreg	equ	0xFE8
 14125                           indf1	equ	0xFE7
 14126                           postdec1	equ	0xFE5
 14127                           fsr1h	equ	0xFE2
 14128                           fsr1l	equ	0xFE1
 14129                           indf2	equ	0xFDF
 14130                           postinc2	equ	0xFDE
 14131                           postdec2	equ	0xFDD
 14132                           fsr2h	equ	0xFDA
 14133                           fsr2l	equ	0xFD9
 14134                           status	equ	0xFD8
 14135                           
 14136 ;; *************** function ___lltoft *****************
 14137 ;; Defined at:
 14138 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  c               4   31[BANK1 ] unsigned long 
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;  exp             1   39[BANK1 ] unsigned char 
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  3   31[BANK1 ] float 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2, status,0, cstack
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14152 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14153 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14154 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14155 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14156 ;;Total ram usage:        9 bytes
 14157 ;; Hardware stack levels used:    1
 14158 ;; Hardware stack levels required when called:   15
 14159 ;; This function calls:
 14160 ;;		___ftpack
 14161 ;; This function is called by:
 14162 ;;		_printf
 14163 ;; This function uses a non-reentrant model
 14164 ;;
 14165                           
 14166                           	psect	text31
 14167  015C0A                     __ptext31:
 14168                           	opt stack 0
 14169  015C0A                     ___lltoft:
 14170                           	opt stack 12
 14171                           
 14172                           ; BSR set to: 1
 14173                           ;incstack = 0
 14174  015C0A  0E8E               	movlw	142
 14175  015C0C  0101               	movlb	1	; () banked
 14176  015C0E  6F27               	movwf	___lltoft@exp& (0+255),b
 14177  015C10  D006               	goto	l1670
 14178  015C12                     
 14179                           ; BSR set to: 1
 14180                           
 14181                           ; BSR set to: 1
 14182  015C12  90D8               	bcf	status,0,c
 14183  015C14  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 14184  015C16  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 14185  015C18  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 14186  015C1A  331F               	rrcf	___lltoft@c& (0+255),f,b
 14187  015C1C  2B27               	incf	___lltoft@exp& (0+255),f,b
 14188  015C1E                     l1670:
 14189                           
 14190                           ; BSR set to: 1
 14191                           
 14192                           ; BSR set to: 1
 14193  015C1E  0E00               	movlw	0
 14194  015C20  151F               	andwf	___lltoft@c& (0+255),w,b
 14195  015C22  6F23               	movwf	??___lltoft& (0+255),b
 14196  015C24  0E00               	movlw	0
 14197  015C26  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 14198  015C28  6F24               	movwf	(??___lltoft+1)& (0+255),b
 14199  015C2A  0E00               	movlw	0
 14200  015C2C  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 14201  015C2E  6F25               	movwf	(??___lltoft+2)& (0+255),b
 14202  015C30  0EFF               	movlw	255
 14203  015C32  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 14204  015C34  6F26               	movwf	(??___lltoft+3)& (0+255),b
 14205  015C36  5123               	movf	??___lltoft& (0+255),w,b
 14206  015C38  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 14207  015C3A  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 14208  015C3C  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 14209  015C3E  A4D8               	btfss	status,2,c
 14210  015C40  D7E8               	goto	l1671
 14211                           
 14212                           ; BSR set to: 1
 14213                           
 14214                           ; BSR set to: 1
 14215  015C42  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 14216  015C46  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 14217  015C4A  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 14218  015C4E  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 14219  015C52  0E00               	movlw	0
 14220  015C54  6F1B               	movwf	___ftpack@sign& (0+255),b
 14221  015C56  EC04  F0A8         	call	___ftpack	;wreg free
 14222  015C5A  C117  F11F         	movff	?___ftpack,?___lltoft
 14223  015C5E  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 14224  015C62  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 14225  015C66  0012               	return	
 14226  015C68                     __end_of___lltoft:
 14227                           	opt stack 0
 14228                           tblptru	equ	0xFF8
 14229                           tblptrh	equ	0xFF7
 14230                           tblptrl	equ	0xFF6
 14231                           tablat	equ	0xFF5
 14232                           prodh	equ	0xFF4
 14233                           prodl	equ	0xFF3
 14234                           intcon	equ	0xFF2
 14235                           postinc0	equ	0xFEE
 14236                           wreg	equ	0xFE8
 14237                           indf1	equ	0xFE7
 14238                           postdec1	equ	0xFE5
 14239                           fsr1h	equ	0xFE2
 14240                           fsr1l	equ	0xFE1
 14241                           indf2	equ	0xFDF
 14242                           postinc2	equ	0xFDE
 14243                           postdec2	equ	0xFDD
 14244                           fsr2h	equ	0xFDA
 14245                           fsr2l	equ	0xFD9
 14246                           status	equ	0xFD8
 14247                           
 14248 ;; *************** function ___llmod *****************
 14249 ;; Defined at:
 14250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  dividend        4   36[BANK1 ] unsigned long 
 14253 ;;  divisor         4   40[BANK1 ] unsigned long 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  counter         1   44[BANK1 ] unsigned char 
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  4   36[BANK1 ] unsigned long 
 14258 ;; Registers used:
 14259 ;;		wreg, status,2, status,0
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14265 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14266 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14268 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14269 ;;Total ram usage:        9 bytes
 14270 ;; Hardware stack levels used:    1
 14271 ;; Hardware stack levels required when called:   14
 14272 ;; This function calls:
 14273 ;;		Nothing
 14274 ;; This function is called by:
 14275 ;;		_printf
 14276 ;; This function uses a non-reentrant model
 14277 ;;
 14278                           
 14279                           	psect	text32
 14280  0159B0                     __ptext32:
 14281                           	opt stack 0
 14282  0159B0                     ___llmod:
 14283                           	opt stack 13
 14284                           
 14285                           ;incstack = 0
 14286  0159B0  0101               	movlb	1	; () banked
 14287  0159B2  5128               	movf	___llmod@divisor& (0+255),w,b
 14288  0159B4  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14289  0159B6  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14290  0159B8  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14291  0159BA  B4D8               	btfsc	status,2,c
 14292  0159BC  D024               	goto	l1664
 14293                           
 14294                           ; BSR set to: 1
 14295  0159BE  0E01               	movlw	1
 14296  0159C0  6F2C               	movwf	___llmod@counter& (0+255),b
 14297  0159C2  D006               	goto	l1659
 14298  0159C4                     
 14299                           ; BSR set to: 1
 14300                           
 14301                           ; BSR set to: 1
 14302  0159C4  90D8               	bcf	status,0,c
 14303  0159C6  3728               	rlcf	___llmod@divisor& (0+255),f,b
 14304  0159C8  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14305  0159CA  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14306  0159CC  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14307  0159CE  2B2C               	incf	___llmod@counter& (0+255),f,b
 14308  0159D0                     l1659:
 14309                           
 14310                           ; BSR set to: 1
 14311                           
 14312                           ; BSR set to: 1
 14313  0159D0  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14314  0159D2  D7F8               	goto	l1660
 14315  0159D4                     u10130:
 14316                           
 14317                           ; BSR set to: 1
 14318                           
 14319                           ; BSR set to: 1
 14320                           
 14321                           ; BSR set to: 1
 14322  0159D4  5128               	movf	___llmod@divisor& (0+255),w,b
 14323  0159D6  5D24               	subwf	___llmod@dividend& (0+255),w,b
 14324  0159D8  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 14325  0159DA  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14326  0159DC  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 14327  0159DE  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14328  0159E0  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 14329  0159E2  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14330  0159E4  A0D8               	btfss	status,0,c
 14331  0159E6  D008               	goto	l1663
 14332                           
 14333                           ; BSR set to: 1
 14334  0159E8  5128               	movf	___llmod@divisor& (0+255),w,b
 14335  0159EA  5F24               	subwf	___llmod@dividend& (0+255),f,b
 14336  0159EC  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 14337  0159EE  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14338  0159F0  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 14339  0159F2  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14340  0159F4  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 14341  0159F6  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14342  0159F8                     l1663:
 14343                           
 14344                           ; BSR set to: 1
 14345                           
 14346                           ; BSR set to: 1
 14347  0159F8  90D8               	bcf	status,0,c
 14348  0159FA  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14349  0159FC  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14350  0159FE  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14351  015A00  3328               	rrcf	___llmod@divisor& (0+255),f,b
 14352                           
 14353                           ; BSR set to: 1
 14354  015A02  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 14355  015A04  D7E7               	goto	u10130
 14356  015A06                     l1664:
 14357                           
 14358                           ; BSR set to: 1
 14359                           
 14360                           ; BSR set to: 1
 14361  015A06  C124  F124         	movff	___llmod@dividend,?___llmod
 14362  015A0A  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 14363  015A0E  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 14364  015A12  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 14365                           
 14366                           ; BSR set to: 1
 14367  015A16  0012               	return		;funcret
 14368  015A18                     __end_of___llmod:
 14369                           	opt stack 0
 14370                           tblptru	equ	0xFF8
 14371                           tblptrh	equ	0xFF7
 14372                           tblptrl	equ	0xFF6
 14373                           tablat	equ	0xFF5
 14374                           prodh	equ	0xFF4
 14375                           prodl	equ	0xFF3
 14376                           intcon	equ	0xFF2
 14377                           postinc0	equ	0xFEE
 14378                           wreg	equ	0xFE8
 14379                           indf1	equ	0xFE7
 14380                           postdec1	equ	0xFE5
 14381                           fsr1h	equ	0xFE2
 14382                           fsr1l	equ	0xFE1
 14383                           indf2	equ	0xFDF
 14384                           postinc2	equ	0xFDE
 14385                           postdec2	equ	0xFDD
 14386                           fsr2h	equ	0xFDA
 14387                           fsr2l	equ	0xFD9
 14388                           status	equ	0xFD8
 14389                           
 14390 ;; *************** function ___lldiv *****************
 14391 ;; Defined at:
 14392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 14393 ;; Parameters:    Size  Location     Type
 14394 ;;  dividend        4   23[BANK1 ] unsigned long 
 14395 ;;  divisor         4   27[BANK1 ] unsigned long 
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;  quotient        4   31[BANK1 ] unsigned long 
 14398 ;;  counter         1   35[BANK1 ] unsigned char 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  4   23[BANK1 ] unsigned long 
 14401 ;; Registers used:
 14402 ;;		wreg, status,2, status,0
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14408 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14409 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14411 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14412 ;;Total ram usage:       13 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:   14
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_printf
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text33
 14423  015576                     __ptext33:
 14424                           	opt stack 0
 14425  015576                     ___lldiv:
 14426                           	opt stack 13
 14427                           
 14428                           ; BSR set to: 1
 14429                           ;incstack = 0
 14430  015576  0E00               	movlw	0
 14431  015578  0101               	movlb	1	; () banked
 14432  01557A  6F1F               	movwf	___lldiv@quotient& (0+255),b
 14433  01557C  0E00               	movlw	0
 14434  01557E  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 14435  015580  0E00               	movlw	0
 14436  015582  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 14437  015584  0E00               	movlw	0
 14438  015586  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 14439                           
 14440                           ; BSR set to: 1
 14441  015588  511B               	movf	___lldiv@divisor& (0+255),w,b
 14442  01558A  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14443  01558C  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14444  01558E  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14445  015590  B4D8               	btfsc	status,2,c
 14446  015592  D02A               	goto	l1654
 14447                           
 14448                           ; BSR set to: 1
 14449  015594  0E01               	movlw	1
 14450  015596  6F23               	movwf	___lldiv@counter& (0+255),b
 14451  015598  D006               	goto	l1649
 14452  01559A                     
 14453                           ; BSR set to: 1
 14454                           
 14455                           ; BSR set to: 1
 14456  01559A  90D8               	bcf	status,0,c
 14457  01559C  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 14458  01559E  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14459  0155A0  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14460  0155A2  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14461  0155A4  2B23               	incf	___lldiv@counter& (0+255),f,b
 14462  0155A6                     l1649:
 14463                           
 14464                           ; BSR set to: 1
 14465                           
 14466                           ; BSR set to: 1
 14467  0155A6  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14468  0155A8  D7F8               	goto	l1650
 14469  0155AA                     u10100:
 14470                           
 14471                           ; BSR set to: 1
 14472                           
 14473                           ; BSR set to: 1
 14474                           
 14475                           ; BSR set to: 1
 14476  0155AA  90D8               	bcf	status,0,c
 14477  0155AC  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 14478  0155AE  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14479  0155B0  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14480  0155B2  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14481                           
 14482                           ; BSR set to: 1
 14483  0155B4  511B               	movf	___lldiv@divisor& (0+255),w,b
 14484  0155B6  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 14485  0155B8  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14486  0155BA  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14487  0155BC  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14488  0155BE  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14489  0155C0  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14490  0155C2  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14491  0155C4  A0D8               	btfss	status,0,c
 14492  0155C6  D009               	goto	l1653
 14493                           
 14494                           ; BSR set to: 1
 14495  0155C8  511B               	movf	___lldiv@divisor& (0+255),w,b
 14496  0155CA  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 14497  0155CC  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14498  0155CE  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14499  0155D0  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14500  0155D2  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14501  0155D4  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14502  0155D6  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14503                           
 14504                           ; BSR set to: 1
 14505  0155D8  811F               	bsf	___lldiv@quotient& (0+255),0,b
 14506  0155DA                     l1653:
 14507                           
 14508                           ; BSR set to: 1
 14509                           
 14510                           ; BSR set to: 1
 14511  0155DA  90D8               	bcf	status,0,c
 14512  0155DC  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14513  0155DE  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14514  0155E0  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14515  0155E2  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 14516                           
 14517                           ; BSR set to: 1
 14518  0155E4  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 14519  0155E6  D7E1               	goto	u10100
 14520  0155E8                     l1654:
 14521                           
 14522                           ; BSR set to: 1
 14523                           
 14524                           ; BSR set to: 1
 14525  0155E8  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 14526  0155EC  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 14527  0155F0  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 14528  0155F4  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 14529                           
 14530                           ; BSR set to: 1
 14531  0155F8  0012               	return		;funcret
 14532  0155FA                     __end_of___lldiv:
 14533                           	opt stack 0
 14534                           tblptru	equ	0xFF8
 14535                           tblptrh	equ	0xFF7
 14536                           tblptrl	equ	0xFF6
 14537                           tablat	equ	0xFF5
 14538                           prodh	equ	0xFF4
 14539                           prodl	equ	0xFF3
 14540                           intcon	equ	0xFF2
 14541                           postinc0	equ	0xFEE
 14542                           wreg	equ	0xFE8
 14543                           indf1	equ	0xFE7
 14544                           postdec1	equ	0xFE5
 14545                           fsr1h	equ	0xFE2
 14546                           fsr1l	equ	0xFE1
 14547                           indf2	equ	0xFDF
 14548                           postinc2	equ	0xFDE
 14549                           postdec2	equ	0xFDD
 14550                           fsr2h	equ	0xFDA
 14551                           fsr2l	equ	0xFD9
 14552                           status	equ	0xFD8
 14553                           
 14554 ;; *************** function ___fttol *****************
 14555 ;; Defined at:
 14556 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 14557 ;; Parameters:    Size  Location     Type
 14558 ;;  f1              3   85[BANK1 ] float 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  lval            4   95[BANK1 ] unsigned long 
 14561 ;;  exp1            1   99[BANK1 ] unsigned char 
 14562 ;;  sign1           1   94[BANK1 ] unsigned char 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  4   85[BANK1 ] long 
 14565 ;; Registers used:
 14566 ;;		wreg, status,2, status,0
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14572 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14573 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14574 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14575 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14576 ;;Total ram usage:       15 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:   14
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_printf
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text34
 14587  014708                     __ptext34:
 14588                           	opt stack 0
 14589  014708                     ___fttol:
 14590                           	opt stack 13
 14591                           
 14592                           ; BSR set to: 1
 14593                           ;incstack = 0
 14594  014708  C157  F159         	movff	___fttol@f1+2,??___fttol
 14595  01470C  0101               	movlb	1	; () banked
 14596  01470E  6B5A               	clrf	(??___fttol+1)& (0+255),b
 14597  014710  6B5B               	clrf	(??___fttol+2)& (0+255),b
 14598  014712  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14599  014714  3759               	rlcf	??___fttol& (0+255),f,b
 14600  014716  E301               	bnc	u10011
 14601  014718  815A               	bsf	(??___fttol+1)& (0+255),0,b
 14602  01471A                     u10011:
 14603  01471A  5159               	movf	??___fttol& (0+255),w,b
 14604  01471C  6F63               	movwf	___fttol@exp1& (0+255),b
 14605  01471E  5163               	movf	___fttol@exp1& (0+255),w,b
 14606  014720  A4D8               	btfss	status,2,c
 14607  014722  D009               	goto	l1608
 14608                           
 14609                           ; BSR set to: 1
 14610  014724  0E00               	movlw	0
 14611  014726  6F55               	movwf	?___fttol& (0+255),b
 14612  014728  0E00               	movlw	0
 14613  01472A  6F56               	movwf	(?___fttol+1)& (0+255),b
 14614  01472C  0E00               	movlw	0
 14615  01472E  6F57               	movwf	(?___fttol+2)& (0+255),b
 14616  014730  0E00               	movlw	0
 14617  014732  6F58               	movwf	(?___fttol+3)& (0+255),b
 14618                           
 14619                           ; BSR set to: 1
 14620  014734  0012               	return	
 14621  014736                     l1608:
 14622                           
 14623                           ; BSR set to: 1
 14624                           
 14625                           ; BSR set to: 1
 14626  014736  0E17               	movlw	23
 14627  014738  6F59               	movwf	??___fttol& (0+255),b
 14628  01473A  C155  F15A         	movff	___fttol@f1,??___fttol+1
 14629  01473E  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 14630  014742  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 14631  014746  2959               	incf	??___fttol& (0+255),w,b
 14632  014748  6F5D               	movwf	(??___fttol+4)& (0+255),b
 14633  01474A  D004               	goto	u10030
 14634  01474C                     u10035:
 14635  01474C  90D8               	bcf	status,0,c
 14636  01474E  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 14637  014750  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 14638  014752  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 14639  014754                     u10030:
 14640  014754  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 14641  014756  D7FA               	goto	u10035
 14642  014758  0101               	movlb	1	; () banked
 14643  01475A  515A               	movf	(??___fttol+1)& (0+255),w,b
 14644  01475C  6F5E               	movwf	___fttol@sign1& (0+255),b
 14645                           
 14646                           ; BSR set to: 1
 14647  01475E  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 14648                           
 14649                           ; BSR set to: 1
 14650  014760  0EFF               	movlw	255
 14651  014762  1755               	andwf	___fttol@f1& (0+255),f,b
 14652  014764  0EFF               	movlw	255
 14653  014766  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 14654  014768  0E00               	movlw	0
 14655  01476A  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 14656                           
 14657                           ; BSR set to: 1
 14658  01476C  5155               	movf	___fttol@f1& (0+255),w,b
 14659  01476E  6F5F               	movwf	___fttol@lval& (0+255),b
 14660  014770  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 14661  014772  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 14662  014774  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 14663  014776  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 14664  014778  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 14665                           
 14666                           ; BSR set to: 1
 14667  01477A  0E8E               	movlw	142
 14668  01477C  5F63               	subwf	___fttol@exp1& (0+255),f,b
 14669                           
 14670                           ; BSR set to: 1
 14671  01477E  AF63               	btfss	___fttol@exp1& (0+255),7,b
 14672  014780  D016               	goto	l1610
 14673                           
 14674                           ; BSR set to: 1
 14675  014782  5163               	movf	___fttol@exp1& (0+255),w,b
 14676  014784  0A80               	xorlw	128
 14677  014786  0F8F               	addlw	143
 14678  014788  B0D8               	btfsc	status,0,c
 14679  01478A  D009               	goto	l1611
 14680                           
 14681                           ; BSR set to: 1
 14682  01478C  0E00               	movlw	0
 14683  01478E  6F55               	movwf	?___fttol& (0+255),b
 14684  014790  0E00               	movlw	0
 14685  014792  6F56               	movwf	(?___fttol+1)& (0+255),b
 14686  014794  0E00               	movlw	0
 14687  014796  6F57               	movwf	(?___fttol+2)& (0+255),b
 14688  014798  0E00               	movlw	0
 14689  01479A  6F58               	movwf	(?___fttol+3)& (0+255),b
 14690                           
 14691                           ; BSR set to: 1
 14692  01479C  0012               	return	
 14693  01479E                     l1611:
 14694                           
 14695                           ; BSR set to: 1
 14696                           
 14697                           ; BSR set to: 1
 14698                           
 14699                           ; BSR set to: 1
 14700  01479E  90D8               	bcf	status,0,c
 14701  0147A0  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 14702  0147A2  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 14703  0147A4  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 14704  0147A6  335F               	rrcf	___fttol@lval& (0+255),f,b
 14705                           
 14706                           ; BSR set to: 1
 14707  0147A8  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 14708  0147AA  D7F9               	goto	l1611
 14709                           
 14710                           ; BSR set to: 1
 14711  0147AC  D015               	goto	u10070
 14712  0147AE                     l1610:
 14713                           
 14714                           ; BSR set to: 1
 14715                           
 14716                           ; BSR set to: 1
 14717  0147AE  0E17               	movlw	23
 14718  0147B0  6563               	cpfsgt	___fttol@exp1& (0+255),b
 14719  0147B2  D00F               	goto	l1616
 14720                           
 14721                           ; BSR set to: 1
 14722  0147B4  0E00               	movlw	0
 14723  0147B6  6F55               	movwf	?___fttol& (0+255),b
 14724  0147B8  0E00               	movlw	0
 14725  0147BA  6F56               	movwf	(?___fttol+1)& (0+255),b
 14726  0147BC  0E00               	movlw	0
 14727  0147BE  6F57               	movwf	(?___fttol+2)& (0+255),b
 14728  0147C0  0E00               	movlw	0
 14729  0147C2  6F58               	movwf	(?___fttol+3)& (0+255),b
 14730                           
 14731                           ; BSR set to: 1
 14732  0147C4  0012               	return	
 14733  0147C6                     
 14734                           ; BSR set to: 1
 14735                           
 14736                           ; BSR set to: 1
 14737  0147C6  90D8               	bcf	status,0,c
 14738  0147C8  375F               	rlcf	___fttol@lval& (0+255),f,b
 14739  0147CA  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 14740  0147CC  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 14741  0147CE  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 14742  0147D0  0763               	decf	___fttol@exp1& (0+255),f,b
 14743  0147D2                     l1616:
 14744                           
 14745                           ; BSR set to: 1
 14746                           
 14747                           ; BSR set to: 1
 14748  0147D2  5163               	movf	___fttol@exp1& (0+255),w,b
 14749  0147D4  A4D8               	btfss	status,2,c
 14750  0147D6  D7F7               	goto	l1617
 14751  0147D8                     u10070:
 14752                           
 14753                           ; BSR set to: 1
 14754                           
 14755                           ; BSR set to: 1
 14756                           
 14757                           ; BSR set to: 1
 14758  0147D8  515E               	movf	___fttol@sign1& (0+255),w,b
 14759  0147DA  B4D8               	btfsc	status,2,c
 14760  0147DC  D008               	goto	l1619
 14761                           
 14762                           ; BSR set to: 1
 14763  0147DE  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 14764  0147E0  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 14765  0147E2  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 14766  0147E4  6D5F               	negf	___fttol@lval& (0+255),b
 14767  0147E6  0E00               	movlw	0
 14768  0147E8  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 14769  0147EA  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 14770  0147EC  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 14771  0147EE                     l1619:
 14772                           
 14773                           ; BSR set to: 1
 14774                           
 14775                           ; BSR set to: 1
 14776  0147EE  C15F  F155         	movff	___fttol@lval,?___fttol
 14777  0147F2  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 14778  0147F6  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 14779  0147FA  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 14780  0147FE  0012               	return	
 14781  014800                     __end_of___fttol:
 14782                           	opt stack 0
 14783                           tblptru	equ	0xFF8
 14784                           tblptrh	equ	0xFF7
 14785                           tblptrl	equ	0xFF6
 14786                           tablat	equ	0xFF5
 14787                           prodh	equ	0xFF4
 14788                           prodl	equ	0xFF3
 14789                           intcon	equ	0xFF2
 14790                           postinc0	equ	0xFEE
 14791                           wreg	equ	0xFE8
 14792                           indf1	equ	0xFE7
 14793                           postdec1	equ	0xFE5
 14794                           fsr1h	equ	0xFE2
 14795                           fsr1l	equ	0xFE1
 14796                           indf2	equ	0xFDF
 14797                           postinc2	equ	0xFDE
 14798                           postdec2	equ	0xFDD
 14799                           fsr2h	equ	0xFDA
 14800                           fsr2l	equ	0xFD9
 14801                           status	equ	0xFD8
 14802                           
 14803 ;; *************** function ___ftsub *****************
 14804 ;; Defined at:
 14805 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;  f1              3   55[BANK1 ] float 
 14808 ;;  f2              3   58[BANK1 ] float 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;		None
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  3   55[BANK1 ] float 
 14813 ;; Registers used:
 14814 ;;		wreg, status,2, status,0, cstack
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14820 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14823 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14824 ;;Total ram usage:        6 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; Hardware stack levels required when called:   16
 14827 ;; This function calls:
 14828 ;;		___ftadd
 14829 ;; This function is called by:
 14830 ;;		_printf
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           	psect	text35
 14835  015FD4                     __ptext35:
 14836                           	opt stack 0
 14837  015FD4                     ___ftsub:
 14838                           	opt stack 11
 14839                           
 14840                           ; BSR set to: 1
 14841                           ;incstack = 0
 14842  015FD4  0101               	movlb	1	; () banked
 14843  015FD6  513A               	movf	___ftsub@f2& (0+255),w,b
 14844  015FD8  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14845  015FDA  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14846  015FDC  B4D8               	btfsc	status,2,c
 14847  015FDE  D006               	goto	l1604
 14848                           
 14849                           ; BSR set to: 1
 14850  015FE0  0E00               	movlw	0
 14851  015FE2  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 14852  015FE4  0E00               	movlw	0
 14853  015FE6  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14854  015FE8  0E80               	movlw	128
 14855  015FEA  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14856  015FEC                     l1604:
 14857                           
 14858                           ; BSR set to: 1
 14859                           
 14860                           ; BSR set to: 1
 14861  015FEC  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 14862  015FF0  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 14863  015FF4  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 14864  015FF8  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 14865  015FFC  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 14866  016000  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 14867  016004  EC24  F09E         	call	___ftadd	;wreg free
 14868  016008  C12B  F137         	movff	?___ftadd,?___ftsub
 14869  01600C  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 14870  016010  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 14871  016014  0012               	return	
 14872  016016                     __end_of___ftsub:
 14873                           	opt stack 0
 14874                           tblptru	equ	0xFF8
 14875                           tblptrh	equ	0xFF7
 14876                           tblptrl	equ	0xFF6
 14877                           tablat	equ	0xFF5
 14878                           prodh	equ	0xFF4
 14879                           prodl	equ	0xFF3
 14880                           intcon	equ	0xFF2
 14881                           postinc0	equ	0xFEE
 14882                           wreg	equ	0xFE8
 14883                           indf1	equ	0xFE7
 14884                           postdec1	equ	0xFE5
 14885                           fsr1h	equ	0xFE2
 14886                           fsr1l	equ	0xFE1
 14887                           indf2	equ	0xFDF
 14888                           postinc2	equ	0xFDE
 14889                           postdec2	equ	0xFDD
 14890                           fsr2h	equ	0xFDA
 14891                           fsr2l	equ	0xFD9
 14892                           status	equ	0xFD8
 14893                           
 14894 ;; *************** function ___ftadd *****************
 14895 ;; Defined at:
 14896 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;  f1              3   43[BANK1 ] float 
 14899 ;;  f2              3   46[BANK1 ] float 
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;  exp1            1   54[BANK1 ] unsigned char 
 14902 ;;  exp2            1   53[BANK1 ] unsigned char 
 14903 ;;  sign            1   52[BANK1 ] unsigned char 
 14904 ;; Return value:  Size  Location     Type
 14905 ;;                  3   43[BANK1 ] float 
 14906 ;; Registers used:
 14907 ;;		wreg, status,2, status,0, cstack
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14913 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14914 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14915 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14916 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14917 ;;Total ram usage:       12 bytes
 14918 ;; Hardware stack levels used:    1
 14919 ;; Hardware stack levels required when called:   15
 14920 ;; This function calls:
 14921 ;;		___ftpack
 14922 ;; This function is called by:
 14923 ;;		_ringBufferLUT
 14924 ;;		_printf
 14925 ;;		___ftsub
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           
 14929                           	psect	text36
 14930  013C48                     __ptext36:
 14931                           	opt stack 0
 14932  013C48                     ___ftadd:
 14933                           	opt stack 11
 14934                           
 14935                           ;incstack = 0
 14936  013C48  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 14937  013C4C  0101               	movlb	1	; () banked
 14938  013C4E  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14939  013C50  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14940  013C52  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14941  013C54  3731               	rlcf	??___ftadd& (0+255),f,b
 14942  013C56  E301               	bnc	u9111
 14943  013C58  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14944  013C5A                     u9111:
 14945  013C5A  5131               	movf	??___ftadd& (0+255),w,b
 14946  013C5C  6F36               	movwf	___ftadd@exp1& (0+255),b
 14947  013C5E  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 14948  013C62  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14949  013C64  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14950  013C66  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14951  013C68  3731               	rlcf	??___ftadd& (0+255),f,b
 14952  013C6A  E301               	bnc	u9121
 14953  013C6C  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14954  013C6E                     u9121:
 14955  013C6E  5131               	movf	??___ftadd& (0+255),w,b
 14956  013C70  6F35               	movwf	___ftadd@exp2& (0+255),b
 14957                           
 14958                           ; BSR set to: 1
 14959  013C72  5136               	movf	___ftadd@exp1& (0+255),w,b
 14960  013C74  B4D8               	btfsc	status,2,c
 14961  013C76  D00B               	goto	u9150
 14962                           
 14963                           ; BSR set to: 1
 14964  013C78  5135               	movf	___ftadd@exp2& (0+255),w,b
 14965  013C7A  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14966  013C7C  B0D8               	btfsc	status,0,c
 14967  013C7E  D00E               	goto	l1522
 14968                           
 14969                           ; BSR set to: 1
 14970  013C80  5136               	movf	___ftadd@exp1& (0+255),w,b
 14971  013C82  0800               	sublw	0
 14972  013C84  2535               	addwf	___ftadd@exp2& (0+255),w,b
 14973  013C86  6F31               	movwf	??___ftadd& (0+255),b
 14974  013C88  0E18               	movlw	24
 14975  013C8A  6531               	cpfsgt	??___ftadd& (0+255),b
 14976  013C8C  D007               	goto	l1522
 14977  013C8E                     u9150:
 14978                           
 14979                           ; BSR set to: 1
 14980  013C8E  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 14981  013C92  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 14982  013C96  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 14983  013C9A  0012               	return	
 14984  013C9C                     l1522:
 14985                           
 14986                           ; BSR set to: 1
 14987                           
 14988                           ; BSR set to: 1
 14989  013C9C  5135               	movf	___ftadd@exp2& (0+255),w,b
 14990  013C9E  B4D8               	btfsc	status,2,c
 14991  013CA0  D00B               	goto	u9180
 14992                           
 14993                           ; BSR set to: 1
 14994  013CA2  5136               	movf	___ftadd@exp1& (0+255),w,b
 14995  013CA4  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14996  013CA6  B0D8               	btfsc	status,0,c
 14997  013CA8  D00E               	goto	l1526
 14998                           
 14999                           ; BSR set to: 1
 15000  013CAA  5135               	movf	___ftadd@exp2& (0+255),w,b
 15001  013CAC  0800               	sublw	0
 15002  013CAE  2536               	addwf	___ftadd@exp1& (0+255),w,b
 15003  013CB0  6F31               	movwf	??___ftadd& (0+255),b
 15004  013CB2  0E18               	movlw	24
 15005  013CB4  6531               	cpfsgt	??___ftadd& (0+255),b
 15006  013CB6  D007               	goto	l1526
 15007  013CB8                     u9180:
 15008                           
 15009                           ; BSR set to: 1
 15010  013CB8  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 15011  013CBC  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 15012  013CC0  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 15013  013CC4  0012               	return	
 15014  013CC6                     l1526:
 15015                           
 15016                           ; BSR set to: 1
 15017                           
 15018                           ; BSR set to: 1
 15019  013CC6  0E06               	movlw	6
 15020  013CC8  6F34               	movwf	___ftadd@sign& (0+255),b
 15021                           
 15022                           ; BSR set to: 1
 15023  013CCA  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15024                           
 15025                           ; BSR set to: 1
 15026  013CCC  8F34               	bsf	___ftadd@sign& (0+255),7,b
 15027                           
 15028                           ; BSR set to: 1
 15029                           
 15030                           ; BSR set to: 1
 15031  013CCE  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 15032                           
 15033                           ; BSR set to: 1
 15034  013CD0  8D34               	bsf	___ftadd@sign& (0+255),6,b
 15035                           
 15036                           ; BSR set to: 1
 15037  013CD2  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 15038                           
 15039                           ; BSR set to: 1
 15040  013CD4  0EFF               	movlw	255
 15041  013CD6  172B               	andwf	___ftadd@f1& (0+255),f,b
 15042  013CD8  0EFF               	movlw	255
 15043  013CDA  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 15044  013CDC  0E00               	movlw	0
 15045  013CDE  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 15046  013CE0  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 15047                           
 15048                           ; BSR set to: 1
 15049  013CE2  0EFF               	movlw	255
 15050  013CE4  172E               	andwf	___ftadd@f2& (0+255),f,b
 15051  013CE6  0EFF               	movlw	255
 15052  013CE8  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 15053  013CEA  0E00               	movlw	0
 15054  013CEC  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 15055                           
 15056                           ; BSR set to: 1
 15057  013CEE  5135               	movf	___ftadd@exp2& (0+255),w,b
 15058  013CF0  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 15059  013CF2  B0D8               	btfsc	status,0,c
 15060  013CF4  D01B               	goto	l1531
 15061  013CF6                     u9210:
 15062                           
 15063                           ; BSR set to: 1
 15064                           
 15065                           ; BSR set to: 1
 15066  013CF6  90D8               	bcf	status,0,c
 15067  013CF8  372E               	rlcf	___ftadd@f2& (0+255),f,b
 15068  013CFA  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 15069  013CFC  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 15070  013CFE  0735               	decf	___ftadd@exp2& (0+255),f,b
 15071                           
 15072                           ; BSR set to: 1
 15073  013D00  5136               	movf	___ftadd@exp1& (0+255),w,b
 15074  013D02  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 15075  013D04  B4D8               	btfsc	status,2,c
 15076  013D06  D00D               	goto	l1536
 15077                           
 15078                           ; BSR set to: 1
 15079  013D08  0734               	decf	___ftadd@sign& (0+255),f,b
 15080  013D0A  C134  F131         	movff	___ftadd@sign,??___ftadd
 15081  013D0E  0E07               	movlw	7
 15082  013D10  1731               	andwf	??___ftadd& (0+255),f,b
 15083  013D12  B4D8               	btfsc	status,2,c
 15084  013D14  D006               	goto	l1536
 15085  013D16  D7EF               	goto	u9210
 15086  013D18                     
 15087                           ; BSR set to: 1
 15088                           
 15089                           ; BSR set to: 1
 15090  013D18  90D8               	bcf	status,0,c
 15091  013D1A  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 15092  013D1C  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 15093  013D1E  332B               	rrcf	___ftadd@f1& (0+255),f,b
 15094  013D20  2B36               	incf	___ftadd@exp1& (0+255),f,b
 15095  013D22                     l1536:
 15096                           
 15097                           ; BSR set to: 1
 15098                           
 15099                           ; BSR set to: 1
 15100  013D22  5135               	movf	___ftadd@exp2& (0+255),w,b
 15101  013D24  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 15102  013D26  B4D8               	btfsc	status,2,c
 15103  013D28  D01F               	goto	u9280
 15104  013D2A  D7F6               	goto	l1537
 15105  013D2C                     l1531:
 15106                           
 15107                           ; BSR set to: 1
 15108                           
 15109                           ; BSR set to: 1
 15110  013D2C  5136               	movf	___ftadd@exp1& (0+255),w,b
 15111  013D2E  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 15112  013D30  B0D8               	btfsc	status,0,c
 15113  013D32  D01A               	goto	u9280
 15114  013D34                     u9250:
 15115                           
 15116                           ; BSR set to: 1
 15117                           
 15118                           ; BSR set to: 1
 15119  013D34  90D8               	bcf	status,0,c
 15120  013D36  372B               	rlcf	___ftadd@f1& (0+255),f,b
 15121  013D38  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 15122  013D3A  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 15123  013D3C  0736               	decf	___ftadd@exp1& (0+255),f,b
 15124                           
 15125                           ; BSR set to: 1
 15126  013D3E  5136               	movf	___ftadd@exp1& (0+255),w,b
 15127  013D40  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 15128  013D42  B4D8               	btfsc	status,2,c
 15129  013D44  D00D               	goto	l1545
 15130                           
 15131                           ; BSR set to: 1
 15132  013D46  0734               	decf	___ftadd@sign& (0+255),f,b
 15133  013D48  C134  F131         	movff	___ftadd@sign,??___ftadd
 15134  013D4C  0E07               	movlw	7
 15135  013D4E  1731               	andwf	??___ftadd& (0+255),f,b
 15136  013D50  B4D8               	btfsc	status,2,c
 15137  013D52  D006               	goto	l1545
 15138  013D54  D7EF               	goto	u9250
 15139  013D56                     
 15140                           ; BSR set to: 1
 15141                           
 15142                           ; BSR set to: 1
 15143  013D56  90D8               	bcf	status,0,c
 15144  013D58  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 15145  013D5A  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 15146  013D5C  332E               	rrcf	___ftadd@f2& (0+255),f,b
 15147  013D5E  2B35               	incf	___ftadd@exp2& (0+255),f,b
 15148  013D60                     l1545:
 15149                           
 15150                           ; BSR set to: 1
 15151                           
 15152                           ; BSR set to: 1
 15153  013D60  5135               	movf	___ftadd@exp2& (0+255),w,b
 15154  013D62  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 15155  013D64  A4D8               	btfss	status,2,c
 15156  013D66  D7F7               	goto	l1546
 15157  013D68                     u9280:
 15158                           
 15159                           ; BSR set to: 1
 15160                           
 15161                           ; BSR set to: 1
 15162                           
 15163                           ; BSR set to: 1
 15164  013D68  AF34               	btfss	___ftadd@sign& (0+255),7,b
 15165  013D6A  D00C               	goto	l1548
 15166                           
 15167                           ; BSR set to: 1
 15168  013D6C  0EFF               	movlw	255
 15169  013D6E  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 15170  013D70  0EFF               	movlw	255
 15171  013D72  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 15172  013D74  0EFF               	movlw	255
 15173  013D76  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 15174  013D78  0E01               	movlw	1
 15175  013D7A  272B               	addwf	___ftadd@f1& (0+255),f,b
 15176  013D7C  0E00               	movlw	0
 15177  013D7E  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 15178  013D80  0E00               	movlw	0
 15179  013D82  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 15180  013D84                     l1548:
 15181                           
 15182                           ; BSR set to: 1
 15183  013D84  AD34               	btfss	___ftadd@sign& (0+255),6,b
 15184  013D86  D00C               	goto	l1549
 15185                           
 15186                           ; BSR set to: 1
 15187  013D88  0EFF               	movlw	255
 15188  013D8A  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 15189  013D8C  0EFF               	movlw	255
 15190  013D8E  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15191  013D90  0EFF               	movlw	255
 15192  013D92  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15193  013D94  0E01               	movlw	1
 15194  013D96  272E               	addwf	___ftadd@f2& (0+255),f,b
 15195  013D98  0E00               	movlw	0
 15196  013D9A  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15197  013D9C  0E00               	movlw	0
 15198  013D9E  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15199  013DA0                     l1549:
 15200                           
 15201                           ; BSR set to: 1
 15202                           
 15203                           ; BSR set to: 1
 15204  013DA0  0E00               	movlw	0
 15205  013DA2  6F34               	movwf	___ftadd@sign& (0+255),b
 15206                           
 15207                           ; BSR set to: 1
 15208  013DA4  512B               	movf	___ftadd@f1& (0+255),w,b
 15209  013DA6  272E               	addwf	___ftadd@f2& (0+255),f,b
 15210  013DA8  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 15211  013DAA  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15212  013DAC  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 15213  013DAE  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15214                           
 15215                           ; BSR set to: 1
 15216  013DB0  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 15217  013DB2  D00E               	goto	l1550
 15218                           
 15219                           ; BSR set to: 1
 15220  013DB4  0EFF               	movlw	255
 15221  013DB6  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 15222  013DB8  0EFF               	movlw	255
 15223  013DBA  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 15224  013DBC  0EFF               	movlw	255
 15225  013DBE  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 15226  013DC0  0E01               	movlw	1
 15227  013DC2  272E               	addwf	___ftadd@f2& (0+255),f,b
 15228  013DC4  0E00               	movlw	0
 15229  013DC6  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 15230  013DC8  0E00               	movlw	0
 15231  013DCA  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 15232                           
 15233                           ; BSR set to: 1
 15234  013DCC  0E01               	movlw	1
 15235  013DCE  6F34               	movwf	___ftadd@sign& (0+255),b
 15236  013DD0                     l1550:
 15237                           
 15238                           ; BSR set to: 1
 15239                           
 15240                           ; BSR set to: 1
 15241  013DD0  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 15242  013DD4  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 15243  013DD8  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 15244  013DDC  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 15245  013DE0  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 15246  013DE4  EC04  F0A8         	call	___ftpack	;wreg free
 15247  013DE8  C117  F12B         	movff	?___ftpack,?___ftadd
 15248  013DEC  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 15249  013DF0  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 15250  013DF4  0012               	return	
 15251  013DF6                     __end_of___ftadd:
 15252                           	opt stack 0
 15253                           tblptru	equ	0xFF8
 15254                           tblptrh	equ	0xFF7
 15255                           tblptrl	equ	0xFF6
 15256                           tablat	equ	0xFF5
 15257                           prodh	equ	0xFF4
 15258                           prodl	equ	0xFF3
 15259                           intcon	equ	0xFF2
 15260                           postinc0	equ	0xFEE
 15261                           wreg	equ	0xFE8
 15262                           indf1	equ	0xFE7
 15263                           postdec1	equ	0xFE5
 15264                           fsr1h	equ	0xFE2
 15265                           fsr1l	equ	0xFE1
 15266                           indf2	equ	0xFDF
 15267                           postinc2	equ	0xFDE
 15268                           postdec2	equ	0xFDD
 15269                           fsr2h	equ	0xFDA
 15270                           fsr2l	equ	0xFD9
 15271                           status	equ	0xFD8
 15272                           
 15273 ;; *************** function ___ftpack *****************
 15274 ;; Defined at:
 15275 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;  arg             3   23[BANK1 ] unsigned um
 15278 ;;  exp             1   26[BANK1 ] unsigned char 
 15279 ;;  sign            1   27[BANK1 ] unsigned char 
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;		None
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  3   23[BANK1 ] float 
 15284 ;; Registers used:
 15285 ;;		wreg, status,2, status,0
 15286 ;; Tracked objects:
 15287 ;;		On entry : 0/0
 15288 ;;		On exit  : 0/0
 15289 ;;		Unchanged: 0/0
 15290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15291 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15293 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15294 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15295 ;;Total ram usage:        8 bytes
 15296 ;; Hardware stack levels used:    1
 15297 ;; Hardware stack levels required when called:   14
 15298 ;; This function calls:
 15299 ;;		Nothing
 15300 ;; This function is called by:
 15301 ;;		___awtoft
 15302 ;;		___ftadd
 15303 ;;		___ftdiv
 15304 ;;		___ftmul
 15305 ;;		___lltoft
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           
 15309                           	psect	text37
 15310  015008                     __ptext37:
 15311                           	opt stack 0
 15312  015008                     ___ftpack:
 15313                           	opt stack 11
 15314                           
 15315                           ;incstack = 0
 15316  015008  0101               	movlb	1	; () banked
 15317  01500A  511A               	movf	___ftpack@exp& (0+255),w,b
 15318  01500C  B4D8               	btfsc	status,2,c
 15319  01500E  D005               	goto	u8730
 15320                           
 15321                           ; BSR set to: 1
 15322  015010  5117               	movf	___ftpack@arg& (0+255),w,b
 15323  015012  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 15324  015014  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 15325  015016  A4D8               	btfss	status,2,c
 15326  015018  D00C               	goto	l1491
 15327  01501A                     u8730:
 15328                           
 15329                           ; BSR set to: 1
 15330                           
 15331                           ; BSR set to: 1
 15332  01501A  0E00               	movlw	0
 15333  01501C  6F17               	movwf	?___ftpack& (0+255),b
 15334  01501E  0E00               	movlw	0
 15335  015020  6F18               	movwf	(?___ftpack+1)& (0+255),b
 15336  015022  0E00               	movlw	0
 15337  015024  6F19               	movwf	(?___ftpack+2)& (0+255),b
 15338                           
 15339                           ; BSR set to: 1
 15340  015026  0012               	return	
 15341  015028                     
 15342                           ; BSR set to: 1
 15343                           
 15344                           ; BSR set to: 1
 15345  015028  2B1A               	incf	___ftpack@exp& (0+255),f,b
 15346  01502A  90D8               	bcf	status,0,c
 15347  01502C  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15348  01502E  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15349  015030  3317               	rrcf	___ftpack@arg& (0+255),f,b
 15350  015032                     l1491:
 15351                           
 15352                           ; BSR set to: 1
 15353                           
 15354                           ; BSR set to: 1
 15355  015032  0E00               	movlw	0
 15356  015034  1517               	andwf	___ftpack@arg& (0+255),w,b
 15357  015036  6F1C               	movwf	??___ftpack& (0+255),b
 15358  015038  0E00               	movlw	0
 15359  01503A  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15360  01503C  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 15361  01503E  0EFE               	movlw	254
 15362  015040  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15363  015042  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 15364  015044  511C               	movf	??___ftpack& (0+255),w,b
 15365  015046  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 15366  015048  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 15367  01504A  B4D8               	btfsc	status,2,c
 15368  01504C  D00C               	goto	l1494
 15369  01504E  D7EC               	goto	l1492
 15370  015050                     
 15371                           ; BSR set to: 1
 15372                           
 15373                           ; BSR set to: 1
 15374  015050  2B1A               	incf	___ftpack@exp& (0+255),f,b
 15375                           
 15376                           ; BSR set to: 1
 15377  015052  0E01               	movlw	1
 15378  015054  2717               	addwf	___ftpack@arg& (0+255),f,b
 15379  015056  0E00               	movlw	0
 15380  015058  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15381  01505A  0E00               	movlw	0
 15382  01505C  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15383  01505E  90D8               	bcf	status,0,c
 15384  015060  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15385  015062  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15386  015064  3317               	rrcf	___ftpack@arg& (0+255),f,b
 15387  015066                     l1494:
 15388                           
 15389                           ; BSR set to: 1
 15390                           
 15391                           ; BSR set to: 1
 15392  015066  0E00               	movlw	0
 15393  015068  1517               	andwf	___ftpack@arg& (0+255),w,b
 15394  01506A  6F1C               	movwf	??___ftpack& (0+255),b
 15395  01506C  0E00               	movlw	0
 15396  01506E  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15397  015070  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 15398  015072  0EFF               	movlw	255
 15399  015074  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15400  015076  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 15401  015078  511C               	movf	??___ftpack& (0+255),w,b
 15402  01507A  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 15403  01507C  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 15404  01507E  B4D8               	btfsc	status,2,c
 15405  015080  D006               	goto	l1497
 15406  015082  D7E6               	goto	l1495
 15407  015084                     
 15408                           ; BSR set to: 1
 15409                           
 15410                           ; BSR set to: 1
 15411  015084  071A               	decf	___ftpack@exp& (0+255),f,b
 15412  015086  90D8               	bcf	status,0,c
 15413  015088  3717               	rlcf	___ftpack@arg& (0+255),f,b
 15414  01508A  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15415  01508C  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15416  01508E                     l1497:
 15417                           
 15418                           ; BSR set to: 1
 15419                           
 15420                           ; BSR set to: 1
 15421  01508E  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15422  015090  D003               	goto	u8770
 15423                           
 15424                           ; BSR set to: 1
 15425  015092  0E02               	movlw	2
 15426  015094  611A               	cpfslt	___ftpack@exp& (0+255),b
 15427  015096  D7F6               	goto	l1498
 15428  015098                     u8770:
 15429                           
 15430                           ; BSR set to: 1
 15431                           
 15432                           ; BSR set to: 1
 15433  015098  A11A               	btfss	___ftpack@exp& (0+255),0,b
 15434                           
 15435                           ; BSR set to: 1
 15436  01509A  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15437                           
 15438                           ; BSR set to: 1
 15439                           
 15440                           ; BSR set to: 1
 15441  01509C  90D8               	bcf	status,0,c
 15442  01509E  331A               	rrcf	___ftpack@exp& (0+255),f,b
 15443  0150A0  511A               	movf	___ftpack@exp& (0+255),w,b
 15444  0150A2  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15445                           
 15446                           ; BSR set to: 1
 15447  0150A4  511B               	movf	___ftpack@sign& (0+255),w,b
 15448  0150A6  A4D8               	btfss	status,2,c
 15449                           
 15450                           ; BSR set to: 1
 15451  0150A8  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15452                           
 15453                           ; BSR set to: 1
 15454                           
 15455                           ; BSR set to: 1
 15456  0150AA  C117  F117         	movff	___ftpack@arg,?___ftpack
 15457  0150AE  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 15458  0150B2  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 15459  0150B6  0012               	return	
 15460  0150B8                     __end_of___ftpack:
 15461                           	opt stack 0
 15462                           tblptru	equ	0xFF8
 15463                           tblptrh	equ	0xFF7
 15464                           tblptrl	equ	0xFF6
 15465                           tablat	equ	0xFF5
 15466                           prodh	equ	0xFF4
 15467                           prodl	equ	0xFF3
 15468                           intcon	equ	0xFF2
 15469                           postinc0	equ	0xFEE
 15470                           wreg	equ	0xFE8
 15471                           indf1	equ	0xFE7
 15472                           postdec1	equ	0xFE5
 15473                           fsr1h	equ	0xFE2
 15474                           fsr1l	equ	0xFE1
 15475                           indf2	equ	0xFDF
 15476                           postinc2	equ	0xFDE
 15477                           postdec2	equ	0xFDD
 15478                           fsr2h	equ	0xFDA
 15479                           fsr2l	equ	0xFD9
 15480                           status	equ	0xFD8
 15481                           
 15482 ;; *************** function ___ftneg *****************
 15483 ;; Defined at:
 15484 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;  f1              3   35[BANK1 ] float 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;		None
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  3   35[BANK1 ] float 
 15491 ;; Registers used:
 15492 ;;		wreg, status,2, status,0
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15498 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15501 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15502 ;;Total ram usage:        3 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:   14
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_ringBufferLUT
 15509 ;;		_printf
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text38
 15514  0162AA                     __ptext38:
 15515                           	opt stack 0
 15516  0162AA                     ___ftneg:
 15517                           	opt stack 13
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;incstack = 0
 15521  0162AA  0101               	movlb	1	; () banked
 15522  0162AC  5123               	movf	___ftneg@f1& (0+255),w,b
 15523  0162AE  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 15524  0162B0  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 15525  0162B2  B4D8               	btfsc	status,2,c
 15526  0162B4  D006               	goto	l1598
 15527                           
 15528                           ; BSR set to: 1
 15529  0162B6  0E00               	movlw	0
 15530  0162B8  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 15531  0162BA  0E00               	movlw	0
 15532  0162BC  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 15533  0162BE  0E80               	movlw	128
 15534  0162C0  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 15535  0162C2                     l1598:
 15536                           
 15537                           ; BSR set to: 1
 15538  0162C2  C123  F123         	movff	___ftneg@f1,?___ftneg
 15539  0162C6  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 15540  0162CA  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 15541                           
 15542                           ; BSR set to: 1
 15543  0162CE  0012               	return		;funcret
 15544  0162D0                     __end_of___ftneg:
 15545                           	opt stack 0
 15546                           tblptru	equ	0xFF8
 15547                           tblptrh	equ	0xFF7
 15548                           tblptrl	equ	0xFF6
 15549                           tablat	equ	0xFF5
 15550                           prodh	equ	0xFF4
 15551                           prodl	equ	0xFF3
 15552                           intcon	equ	0xFF2
 15553                           postinc0	equ	0xFEE
 15554                           wreg	equ	0xFE8
 15555                           indf1	equ	0xFE7
 15556                           postdec1	equ	0xFE5
 15557                           fsr1h	equ	0xFE2
 15558                           fsr1l	equ	0xFE1
 15559                           indf2	equ	0xFDF
 15560                           postinc2	equ	0xFDE
 15561                           postdec2	equ	0xFDD
 15562                           fsr2h	equ	0xFDA
 15563                           fsr2l	equ	0xFD9
 15564                           status	equ	0xFD8
 15565                           
 15566 ;; *************** function ___ftge *****************
 15567 ;; Defined at:
 15568 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 15569 ;; Parameters:    Size  Location     Type
 15570 ;;  ff1             3   23[BANK1 ] float 
 15571 ;;  ff2             3   26[BANK1 ] float 
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;		None               void
 15576 ;; Registers used:
 15577 ;;		wreg, status,2, status,0
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15583 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15585 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15586 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15587 ;;Total ram usage:        9 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   14
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		_printf
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           	psect	text39
 15598  0152B2                     __ptext39:
 15599                           	opt stack 0
 15600  0152B2                     ___ftge:
 15601                           	opt stack 13
 15602                           
 15603                           ; BSR set to: 1
 15604                           ;incstack = 0
 15605  0152B2  0101               	movlb	1	; () banked
 15606  0152B4  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15607  0152B6  D016               	goto	l1580
 15608                           
 15609                           ; BSR set to: 1
 15610  0152B8  C117  F11D         	movff	___ftge@ff1,??___ftge
 15611  0152BC  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 15612  0152C0  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 15613  0152C4  1F1D               	comf	??___ftge& (0+255),f,b
 15614  0152C6  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 15615  0152C8  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 15616  0152CA  2B1D               	incf	??___ftge& (0+255),f,b
 15617  0152CC  0E00               	movlw	0
 15618  0152CE  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 15619  0152D0  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 15620  0152D2  0E00               	movlw	0
 15621  0152D4  251D               	addwf	??___ftge& (0+255),w,b
 15622  0152D6  6F17               	movwf	___ftge@ff1& (0+255),b
 15623  0152D8  0E00               	movlw	0
 15624  0152DA  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 15625  0152DC  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 15626  0152DE  0E80               	movlw	128
 15627  0152E0  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 15628  0152E2  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 15629  0152E4                     l1580:
 15630                           
 15631                           ; BSR set to: 1
 15632                           
 15633                           ; BSR set to: 1
 15634  0152E4  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15635  0152E6  D016               	goto	l1581
 15636                           
 15637                           ; BSR set to: 1
 15638  0152E8  C11A  F11D         	movff	___ftge@ff2,??___ftge
 15639  0152EC  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 15640  0152F0  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 15641  0152F4  1F1D               	comf	??___ftge& (0+255),f,b
 15642  0152F6  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 15643  0152F8  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 15644  0152FA  2B1D               	incf	??___ftge& (0+255),f,b
 15645  0152FC  0E00               	movlw	0
 15646  0152FE  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 15647  015300  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 15648  015302  0E00               	movlw	0
 15649  015304  251D               	addwf	??___ftge& (0+255),w,b
 15650  015306  6F1A               	movwf	___ftge@ff2& (0+255),b
 15651  015308  0E00               	movlw	0
 15652  01530A  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 15653  01530C  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 15654  01530E  0E80               	movlw	128
 15655  015310  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 15656  015312  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 15657  015314                     l1581:
 15658                           
 15659                           ; BSR set to: 1
 15660                           
 15661                           ; BSR set to: 1
 15662  015314  0E00               	movlw	0
 15663  015316  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 15664  015318  0E00               	movlw	0
 15665  01531A  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15666  01531C  0E80               	movlw	128
 15667  01531E  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15668                           
 15669                           ; BSR set to: 1
 15670  015320  0E00               	movlw	0
 15671  015322  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 15672  015324  0E00               	movlw	0
 15673  015326  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15674  015328  0E80               	movlw	128
 15675  01532A  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15676  01532C  511A               	movf	___ftge@ff2& (0+255),w,b
 15677  01532E  5D17               	subwf	___ftge@ff1& (0+255),w,b
 15678  015330  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 15679  015332  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15680  015334  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 15681  015336  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15682  015338  B0D8               	btfsc	status,0,c
 15683  01533A  D002               	goto	l7886
 15684                           
 15685                           ; BSR set to: 1
 15686  01533C  90D8               	bcf	status,0,c
 15687  01533E  0012               	return	
 15688  015340                     l7886:
 15689                           
 15690                           ; BSR set to: 1
 15691                           
 15692                           ; BSR set to: 1
 15693  015340  80D8               	bsf	status,0,c
 15694                           
 15695                           ; BSR set to: 1
 15696  015342  0012               	return	
 15697  015344                     __end_of___ftge:
 15698                           	opt stack 0
 15699                           tblptru	equ	0xFF8
 15700                           tblptrh	equ	0xFF7
 15701                           tblptrl	equ	0xFF6
 15702                           tablat	equ	0xFF5
 15703                           prodh	equ	0xFF4
 15704                           prodl	equ	0xFF3
 15705                           intcon	equ	0xFF2
 15706                           postinc0	equ	0xFEE
 15707                           wreg	equ	0xFE8
 15708                           indf1	equ	0xFE7
 15709                           postdec1	equ	0xFE5
 15710                           fsr1h	equ	0xFE2
 15711                           fsr1l	equ	0xFE1
 15712                           indf2	equ	0xFDF
 15713                           postinc2	equ	0xFDE
 15714                           postdec2	equ	0xFDD
 15715                           fsr2h	equ	0xFDA
 15716                           fsr2l	equ	0xFD9
 15717                           status	equ	0xFD8
 15718                           
 15719 ;; *************** function _SYSTEM_Initialize *****************
 15720 ;; Defined at:
 15721 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15722 ;; Parameters:    Size  Location     Type
 15723 ;;		None
 15724 ;; Auto vars:     Size  Location     Type
 15725 ;;		None
 15726 ;; Return value:  Size  Location     Type
 15727 ;;                  1    wreg      void 
 15728 ;; Registers used:
 15729 ;;		wreg, status,2, status,0, cstack
 15730 ;; Tracked objects:
 15731 ;;		On entry : 0/0
 15732 ;;		On exit  : 0/0
 15733 ;;		Unchanged: 0/0
 15734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15739 ;;Total ram usage:        0 bytes
 15740 ;; Hardware stack levels used:    1
 15741 ;; Hardware stack levels required when called:   16
 15742 ;; This function calls:
 15743 ;;		_ADCC_Initialize
 15744 ;;		_EUSART2_Initialize
 15745 ;;		_FVR_Initialize
 15746 ;;		_INTERRUPT_Initialize
 15747 ;;		_OSCILLATOR_Initialize
 15748 ;;		_PIN_MANAGER_Initialize
 15749 ;;		_PMD_Initialize
 15750 ;;		_TMR5_Initialize
 15751 ;;		_TMR6_Initialize
 15752 ;;		_TMR7_Initialize
 15753 ;; This function is called by:
 15754 ;;		_main
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text40
 15759  016208                     __ptext40:
 15760                           	opt stack 0
 15761  016208                     _SYSTEM_Initialize:
 15762                           	opt stack 14
 15763                           
 15764                           ;mcc.c: 52: INTERRUPT_Initialize();
 15765                           
 15766                           ; BSR set to: 1
 15767                           ;incstack = 0
 15768  016208  EC0F  F0B2         	call	_INTERRUPT_Initialize	;wreg free
 15769                           
 15770                           ;mcc.c: 53: PMD_Initialize();
 15771  01620C  ECD2  F0B1         	call	_PMD_Initialize	;wreg free
 15772                           
 15773                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15774  016210  EC08  F0A9         	call	_PIN_MANAGER_Initialize	;wreg free
 15775                           
 15776                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15777  016214  ECE0  F0B1         	call	_OSCILLATOR_Initialize	;wreg free
 15778                           
 15779                           ;mcc.c: 56: FVR_Initialize();
 15780  016218  EC7A  F0B2         	call	_FVR_Initialize	;wreg free
 15781                           
 15782                           ;mcc.c: 57: TMR7_Initialize();
 15783  01621C  EC0F  F0AF         	call	_TMR7_Initialize	;wreg free
 15784                           
 15785                           ;mcc.c: 58: TMR6_Initialize();
 15786  016220  ECD3  F0B0         	call	_TMR6_Initialize	;wreg free
 15787                           
 15788                           ;mcc.c: 59: ADCC_Initialize();
 15789  016224  EC72  F0AD         	call	_ADCC_Initialize	;wreg free
 15790                           
 15791                           ;mcc.c: 60: TMR5_Initialize();
 15792  016228  EC5C  F0AF         	call	_TMR5_Initialize	;wreg free
 15793                           
 15794                           ;mcc.c: 61: EUSART2_Initialize();
 15795  01622C  EC0C  F0AD         	call	_EUSART2_Initialize	;wreg free
 15796  016230  0012               	return		;funcret
 15797  016232                     __end_of_SYSTEM_Initialize:
 15798                           	opt stack 0
 15799                           tblptru	equ	0xFF8
 15800                           tblptrh	equ	0xFF7
 15801                           tblptrl	equ	0xFF6
 15802                           tablat	equ	0xFF5
 15803                           prodh	equ	0xFF4
 15804                           prodl	equ	0xFF3
 15805                           intcon	equ	0xFF2
 15806                           postinc0	equ	0xFEE
 15807                           wreg	equ	0xFE8
 15808                           indf1	equ	0xFE7
 15809                           postdec1	equ	0xFE5
 15810                           fsr1h	equ	0xFE2
 15811                           fsr1l	equ	0xFE1
 15812                           indf2	equ	0xFDF
 15813                           postinc2	equ	0xFDE
 15814                           postdec2	equ	0xFDD
 15815                           fsr2h	equ	0xFDA
 15816                           fsr2l	equ	0xFD9
 15817                           status	equ	0xFD8
 15818                           
 15819 ;; *************** function _TMR7_Initialize *****************
 15820 ;; Defined at:
 15821 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;		None
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;		None
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      void 
 15828 ;; Registers used:
 15829 ;;		wreg, status,2, status,0, cstack
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15837 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15838 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15839 ;;Total ram usage:        2 bytes
 15840 ;; Hardware stack levels used:    1
 15841 ;; Hardware stack levels required when called:   15
 15842 ;; This function calls:
 15843 ;;		_TMR7_SetInterruptHandler
 15844 ;; This function is called by:
 15845 ;;		_SYSTEM_Initialize
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           	psect	text41
 15850  015E1E                     __ptext41:
 15851                           	opt stack 0
 15852  015E1E                     _TMR7_Initialize:
 15853                           	opt stack 14
 15854                           
 15855                           ;tmr7.c: 69: T7GCON = 0x00;
 15856                           
 15857                           ;incstack = 0
 15858  015E1E  0E00               	movlw	0
 15859  015E20  010F               	movlb	15	; () banked
 15860  015E22  6F31               	movwf	49,b	;volatile
 15861                           
 15862                           ;tmr7.c: 72: T7GATE = 0x00;
 15863  015E24  0E00               	movlw	0
 15864  015E26  6F32               	movwf	50,b	;volatile
 15865                           
 15866                           ;tmr7.c: 75: T7CLK = 0x03;
 15867  015E28  0E03               	movlw	3
 15868  015E2A  6F33               	movwf	51,b	;volatile
 15869                           
 15870                           ;tmr7.c: 78: TMR7H = 0x3C;
 15871  015E2C  0E3C               	movlw	60
 15872  015E2E  6F2F               	movwf	47,b	;volatile
 15873                           
 15874                           ;tmr7.c: 81: TMR7L = 0xB0;
 15875  015E30  0EB0               	movlw	176
 15876  015E32  6F2E               	movwf	46,b	;volatile
 15877                           
 15878                           ; BSR set to: 15
 15879                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 15880  015E34  512E               	movf	46,w,b	;volatile
 15881  015E36  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 15882  015E3A  0101               	movlb	1	; () banked
 15883  015E3C  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 15884  015E3E  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 15885  015E42  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 15886  015E44  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 15887  015E46  6FD8               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 15888  015E48  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 15889  015E4A  6FD9               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 15890                           
 15891                           ; BSR set to: 1
 15892                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 15893  015E4C  010E               	movlb	14	; () banked
 15894  015E4E  9D38               	bcf	56,6,b	;volatile
 15895                           
 15896                           ; BSR set to: 14
 15897                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 15898  015E50  8D2E               	bsf	46,6,b	;volatile
 15899                           
 15900                           ; BSR set to: 14
 15901                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 15902  015E52  0EFC               	movlw	low _TMR7_DefaultInterruptHandler
 15903  015E54  0101               	movlb	1	; () banked
 15904  015E56  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15905  015E58  0E64               	movlw	high _TMR7_DefaultInterruptHandler
 15906  015E5A  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15907  015E5C  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 15908  015E5E  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15909  015E60  EC3E  F0B2         	call	_TMR7_SetInterruptHandler	;wreg free
 15910                           
 15911                           ;tmr7.c: 96: T7CON = 0x31;
 15912  015E64  0E31               	movlw	49
 15913  015E66  010F               	movlb	15	; () banked
 15914  015E68  6F30               	movwf	48,b	;volatile
 15915                           
 15916                           ; BSR set to: 15
 15917  015E6A  0012               	return		;funcret
 15918  015E6C                     __end_of_TMR7_Initialize:
 15919                           	opt stack 0
 15920                           tblptru	equ	0xFF8
 15921                           tblptrh	equ	0xFF7
 15922                           tblptrl	equ	0xFF6
 15923                           tablat	equ	0xFF5
 15924                           prodh	equ	0xFF4
 15925                           prodl	equ	0xFF3
 15926                           intcon	equ	0xFF2
 15927                           postinc0	equ	0xFEE
 15928                           wreg	equ	0xFE8
 15929                           indf1	equ	0xFE7
 15930                           postdec1	equ	0xFE5
 15931                           fsr1h	equ	0xFE2
 15932                           fsr1l	equ	0xFE1
 15933                           indf2	equ	0xFDF
 15934                           postinc2	equ	0xFDE
 15935                           postdec2	equ	0xFDD
 15936                           fsr2h	equ	0xFDA
 15937                           fsr2l	equ	0xFD9
 15938                           status	equ	0xFD8
 15939                           
 15940 ;; *************** function _TMR7_SetInterruptHandler *****************
 15941 ;; Defined at:
 15942 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15945 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg, status,2, status,0
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15957 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15960 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15961 ;;Total ram usage:        3 bytes
 15962 ;; Hardware stack levels used:    1
 15963 ;; Hardware stack levels required when called:   14
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_TMR7_Initialize
 15968 ;;		_main
 15969 ;; This function uses a non-reentrant model
 15970 ;;
 15971                           
 15972                           	psect	text42
 15973  01647C                     __ptext42:
 15974                           	opt stack 0
 15975  01647C                     _TMR7_SetInterruptHandler:
 15976                           	opt stack 16
 15977                           
 15978                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 15979                           
 15980                           ; BSR set to: 15
 15981                           ;incstack = 0
 15982  01647C  C117  F1CD         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 15983  016480  C118  F1CE         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 15984  016484  C119  F1CF         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 15985  016488  0012               	return		;funcret
 15986  01648A                     __end_of_TMR7_SetInterruptHandler:
 15987                           	opt stack 0
 15988                           tblptru	equ	0xFF8
 15989                           tblptrh	equ	0xFF7
 15990                           tblptrl	equ	0xFF6
 15991                           tablat	equ	0xFF5
 15992                           prodh	equ	0xFF4
 15993                           prodl	equ	0xFF3
 15994                           intcon	equ	0xFF2
 15995                           postinc0	equ	0xFEE
 15996                           wreg	equ	0xFE8
 15997                           indf1	equ	0xFE7
 15998                           postdec1	equ	0xFE5
 15999                           fsr1h	equ	0xFE2
 16000                           fsr1l	equ	0xFE1
 16001                           indf2	equ	0xFDF
 16002                           postinc2	equ	0xFDE
 16003                           postdec2	equ	0xFDD
 16004                           fsr2h	equ	0xFDA
 16005                           fsr2l	equ	0xFD9
 16006                           status	equ	0xFD8
 16007                           
 16008 ;; *************** function _TMR6_Initialize *****************
 16009 ;; Defined at:
 16010 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 16011 ;; Parameters:    Size  Location     Type
 16012 ;;		None
 16013 ;; Auto vars:     Size  Location     Type
 16014 ;;		None
 16015 ;; Return value:  Size  Location     Type
 16016 ;;                  1    wreg      void 
 16017 ;; Registers used:
 16018 ;;		wreg, status,2, status,0, cstack
 16019 ;; Tracked objects:
 16020 ;;		On entry : 0/0
 16021 ;;		On exit  : 0/0
 16022 ;;		Unchanged: 0/0
 16023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16028 ;;Total ram usage:        0 bytes
 16029 ;; Hardware stack levels used:    1
 16030 ;; Hardware stack levels required when called:   15
 16031 ;; This function calls:
 16032 ;;		_TMR6_SetInterruptHandler
 16033 ;; This function is called by:
 16034 ;;		_SYSTEM_Initialize
 16035 ;; This function uses a non-reentrant model
 16036 ;;
 16037                           
 16038                           	psect	text43
 16039  0161A6                     __ptext43:
 16040                           	opt stack 0
 16041  0161A6                     _TMR6_Initialize:
 16042                           	opt stack 14
 16043                           
 16044                           ;tmr6.c: 69: T6CLKCON = 0x04;
 16045                           
 16046                           ;incstack = 0
 16047  0161A6  0E04               	movlw	4
 16048  0161A8  6EB3               	movwf	4019,c	;volatile
 16049                           
 16050                           ;tmr6.c: 72: T6HLT = 0x20;
 16051  0161AA  0E20               	movlw	32
 16052  0161AC  6EB2               	movwf	4018,c	;volatile
 16053                           
 16054                           ;tmr6.c: 75: T6RST = 0x00;
 16055  0161AE  0E00               	movlw	0
 16056  0161B0  6EB4               	movwf	4020,c	;volatile
 16057                           
 16058                           ;tmr6.c: 78: T6PR = 0xF1;
 16059  0161B2  0EF1               	movlw	241
 16060  0161B4  6EB0               	movwf	4016,c	;volatile
 16061                           
 16062                           ;tmr6.c: 81: T6TMR = 0x00;
 16063  0161B6  0E00               	movlw	0
 16064  0161B8  6EAF               	movwf	4015,c	;volatile
 16065                           
 16066                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 16067  0161BA  010E               	movlb	14	; () banked
 16068  0161BC  9B38               	bcf	56,5,b	;volatile
 16069                           
 16070                           ; BSR set to: 14
 16071                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 16072  0161BE  8B2E               	bsf	46,5,b	;volatile
 16073                           
 16074                           ; BSR set to: 14
 16075                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 16076  0161C0  0EFE               	movlw	low _TMR6_DefaultInterruptHandler
 16077  0161C2  0101               	movlb	1	; () banked
 16078  0161C4  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 16079  0161C6  0E64               	movlw	high _TMR6_DefaultInterruptHandler
 16080  0161C8  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16081  0161CA  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 16082  0161CC  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16083  0161CE  EC45  F0B2         	call	_TMR6_SetInterruptHandler	;wreg free
 16084                           
 16085                           ;tmr6.c: 93: T6CON = 0xBF;
 16086  0161D2  0EBF               	movlw	191
 16087  0161D4  6EB1               	movwf	4017,c	;volatile
 16088  0161D6  0012               	return		;funcret
 16089  0161D8                     __end_of_TMR6_Initialize:
 16090                           	opt stack 0
 16091                           tblptru	equ	0xFF8
 16092                           tblptrh	equ	0xFF7
 16093                           tblptrl	equ	0xFF6
 16094                           tablat	equ	0xFF5
 16095                           prodh	equ	0xFF4
 16096                           prodl	equ	0xFF3
 16097                           intcon	equ	0xFF2
 16098                           postinc0	equ	0xFEE
 16099                           wreg	equ	0xFE8
 16100                           indf1	equ	0xFE7
 16101                           postdec1	equ	0xFE5
 16102                           fsr1h	equ	0xFE2
 16103                           fsr1l	equ	0xFE1
 16104                           indf2	equ	0xFDF
 16105                           postinc2	equ	0xFDE
 16106                           postdec2	equ	0xFDD
 16107                           fsr2h	equ	0xFDA
 16108                           fsr2l	equ	0xFD9
 16109                           status	equ	0xFD8
 16110                           
 16111 ;; *************** function _TMR6_SetInterruptHandler *****************
 16112 ;; Defined at:
 16113 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 16114 ;; Parameters:    Size  Location     Type
 16115 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16116 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;		None
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  1    wreg      void 
 16121 ;; Registers used:
 16122 ;;		wreg, status,2, status,0
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/0
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16128 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16131 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16132 ;;Total ram usage:        3 bytes
 16133 ;; Hardware stack levels used:    1
 16134 ;; Hardware stack levels required when called:   14
 16135 ;; This function calls:
 16136 ;;		Nothing
 16137 ;; This function is called by:
 16138 ;;		_TMR6_Initialize
 16139 ;;		_main
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text44
 16144  01648A                     __ptext44:
 16145                           	opt stack 0
 16146  01648A                     _TMR6_SetInterruptHandler:
 16147                           	opt stack 16
 16148                           
 16149                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 16150                           
 16151                           ;incstack = 0
 16152  01648A  C117  F1D0         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 16153  01648E  C118  F1D1         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 16154  016492  C119  F1D2         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 16155  016496  0012               	return		;funcret
 16156  016498                     __end_of_TMR6_SetInterruptHandler:
 16157                           	opt stack 0
 16158                           tblptru	equ	0xFF8
 16159                           tblptrh	equ	0xFF7
 16160                           tblptrl	equ	0xFF6
 16161                           tablat	equ	0xFF5
 16162                           prodh	equ	0xFF4
 16163                           prodl	equ	0xFF3
 16164                           intcon	equ	0xFF2
 16165                           postinc0	equ	0xFEE
 16166                           wreg	equ	0xFE8
 16167                           indf1	equ	0xFE7
 16168                           postdec1	equ	0xFE5
 16169                           fsr1h	equ	0xFE2
 16170                           fsr1l	equ	0xFE1
 16171                           indf2	equ	0xFDF
 16172                           postinc2	equ	0xFDE
 16173                           postdec2	equ	0xFDD
 16174                           fsr2h	equ	0xFDA
 16175                           fsr2l	equ	0xFD9
 16176                           status	equ	0xFD8
 16177                           
 16178 ;; *************** function _TMR5_Initialize *****************
 16179 ;; Defined at:
 16180 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 16181 ;; Parameters:    Size  Location     Type
 16182 ;;		None
 16183 ;; Auto vars:     Size  Location     Type
 16184 ;;		None
 16185 ;; Return value:  Size  Location     Type
 16186 ;;                  1    wreg      void 
 16187 ;; Registers used:
 16188 ;;		wreg, status,2, status,0, cstack
 16189 ;; Tracked objects:
 16190 ;;		On entry : 0/0
 16191 ;;		On exit  : 0/0
 16192 ;;		Unchanged: 0/0
 16193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16196 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16197 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16198 ;;Total ram usage:        2 bytes
 16199 ;; Hardware stack levels used:    1
 16200 ;; Hardware stack levels required when called:   15
 16201 ;; This function calls:
 16202 ;;		_TMR5_SetInterruptHandler
 16203 ;; This function is called by:
 16204 ;;		_SYSTEM_Initialize
 16205 ;; This function uses a non-reentrant model
 16206 ;;
 16207                           
 16208                           	psect	text45
 16209  015EB8                     __ptext45:
 16210                           	opt stack 0
 16211  015EB8                     _TMR5_Initialize:
 16212                           	opt stack 14
 16213                           
 16214                           ;tmr5.c: 69: T5GCON = 0x00;
 16215                           
 16216                           ;incstack = 0
 16217  015EB8  0E00               	movlw	0
 16218  015EBA  6EC4               	movwf	4036,c	;volatile
 16219                           
 16220                           ;tmr5.c: 72: T5GATE = 0x00;
 16221  015EBC  0E00               	movlw	0
 16222  015EBE  6EC5               	movwf	4037,c	;volatile
 16223                           
 16224                           ;tmr5.c: 75: T5CLK = 0x01;
 16225  015EC0  0E01               	movlw	1
 16226  015EC2  6EC6               	movwf	4038,c	;volatile
 16227                           
 16228                           ;tmr5.c: 78: TMR5H = 0x00;
 16229  015EC4  0E00               	movlw	0
 16230  015EC6  6EC2               	movwf	4034,c	;volatile
 16231                           
 16232                           ;tmr5.c: 81: TMR5L = 0x00;
 16233  015EC8  0E00               	movlw	0
 16234  015ECA  6EC1               	movwf	4033,c	;volatile
 16235                           
 16236                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 16237  015ECC  50C1               	movf	4033,w,c	;volatile
 16238  015ECE  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 16239  015ED2  0101               	movlb	1	; () banked
 16240  015ED4  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 16241  015ED6  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 16242  015EDA  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 16243  015EDC  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 16244  015EDE  6FD6               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 16245  015EE0  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 16246  015EE2  6FD7               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 16247                           
 16248                           ; BSR set to: 1
 16249                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 16250  015EE4  010E               	movlb	14	; () banked
 16251  015EE6  9938               	bcf	56,4,b	;volatile
 16252                           
 16253                           ; BSR set to: 14
 16254                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 16255  015EE8  892E               	bsf	46,4,b	;volatile
 16256                           
 16257                           ; BSR set to: 14
 16258                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 16259  015EEA  0E00               	movlw	low _TMR5_DefaultInterruptHandler
 16260  015EEC  0101               	movlb	1	; () banked
 16261  015EEE  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 16262  015EF0  0E65               	movlw	high _TMR5_DefaultInterruptHandler
 16263  015EF2  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16264  015EF4  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 16265  015EF6  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16266  015EF8  EC4C  F0B2         	call	_TMR5_SetInterruptHandler	;wreg free
 16267                           
 16268                           ;tmr5.c: 96: T5CON = 0x13;
 16269  015EFC  0E13               	movlw	19
 16270  015EFE  6EC3               	movwf	4035,c	;volatile
 16271  015F00  0012               	return		;funcret
 16272  015F02                     __end_of_TMR5_Initialize:
 16273                           	opt stack 0
 16274                           tblptru	equ	0xFF8
 16275                           tblptrh	equ	0xFF7
 16276                           tblptrl	equ	0xFF6
 16277                           tablat	equ	0xFF5
 16278                           prodh	equ	0xFF4
 16279                           prodl	equ	0xFF3
 16280                           intcon	equ	0xFF2
 16281                           postinc0	equ	0xFEE
 16282                           wreg	equ	0xFE8
 16283                           indf1	equ	0xFE7
 16284                           postdec1	equ	0xFE5
 16285                           fsr1h	equ	0xFE2
 16286                           fsr1l	equ	0xFE1
 16287                           indf2	equ	0xFDF
 16288                           postinc2	equ	0xFDE
 16289                           postdec2	equ	0xFDD
 16290                           fsr2h	equ	0xFDA
 16291                           fsr2l	equ	0xFD9
 16292                           status	equ	0xFD8
 16293                           
 16294 ;; *************** function _TMR5_SetInterruptHandler *****************
 16295 ;; Defined at:
 16296 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 16297 ;; Parameters:    Size  Location     Type
 16298 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16299 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 16300 ;; Auto vars:     Size  Location     Type
 16301 ;;		None
 16302 ;; Return value:  Size  Location     Type
 16303 ;;                  1    wreg      void 
 16304 ;; Registers used:
 16305 ;;		wreg, status,2, status,0
 16306 ;; Tracked objects:
 16307 ;;		On entry : 0/0
 16308 ;;		On exit  : 0/0
 16309 ;;		Unchanged: 0/0
 16310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16311 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16314 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16315 ;;Total ram usage:        3 bytes
 16316 ;; Hardware stack levels used:    1
 16317 ;; Hardware stack levels required when called:   14
 16318 ;; This function calls:
 16319 ;;		Nothing
 16320 ;; This function is called by:
 16321 ;;		_TMR5_Initialize
 16322 ;; This function uses a non-reentrant model
 16323 ;;
 16324                           
 16325                           	psect	text46
 16326  016498                     __ptext46:
 16327                           	opt stack 0
 16328  016498                     _TMR5_SetInterruptHandler:
 16329                           	opt stack 14
 16330                           
 16331                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 16332                           
 16333                           ;incstack = 0
 16334  016498  C117  F1CA         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 16335  01649C  C118  F1CB         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 16336  0164A0  C119  F1CC         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 16337  0164A4  0012               	return		;funcret
 16338  0164A6                     __end_of_TMR5_SetInterruptHandler:
 16339                           	opt stack 0
 16340                           tblptru	equ	0xFF8
 16341                           tblptrh	equ	0xFF7
 16342                           tblptrl	equ	0xFF6
 16343                           tablat	equ	0xFF5
 16344                           prodh	equ	0xFF4
 16345                           prodl	equ	0xFF3
 16346                           intcon	equ	0xFF2
 16347                           postinc0	equ	0xFEE
 16348                           wreg	equ	0xFE8
 16349                           indf1	equ	0xFE7
 16350                           postdec1	equ	0xFE5
 16351                           fsr1h	equ	0xFE2
 16352                           fsr1l	equ	0xFE1
 16353                           indf2	equ	0xFDF
 16354                           postinc2	equ	0xFDE
 16355                           postdec2	equ	0xFDD
 16356                           fsr2h	equ	0xFDA
 16357                           fsr2l	equ	0xFD9
 16358                           status	equ	0xFD8
 16359                           
 16360 ;; *************** function _PMD_Initialize *****************
 16361 ;; Defined at:
 16362 ;;		line 82 in file "mcc_generated_files/mcc.c"
 16363 ;; Parameters:    Size  Location     Type
 16364 ;;		None
 16365 ;; Auto vars:     Size  Location     Type
 16366 ;;		None
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      void 
 16369 ;; Registers used:
 16370 ;;		wreg, status,2
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16380 ;;Total ram usage:        0 bytes
 16381 ;; Hardware stack levels used:    1
 16382 ;; Hardware stack levels required when called:   14
 16383 ;; This function calls:
 16384 ;;		Nothing
 16385 ;; This function is called by:
 16386 ;;		_SYSTEM_Initialize
 16387 ;; This function uses a non-reentrant model
 16388 ;;
 16389                           
 16390                           	psect	text47
 16391  0163A4                     __ptext47:
 16392                           	opt stack 0
 16393  0163A4                     _PMD_Initialize:
 16394                           	opt stack 15
 16395                           
 16396                           ;mcc.c: 85: PMD0 = 0x00;
 16397                           
 16398                           ;incstack = 0
 16399  0163A4  0E00               	movlw	0
 16400  0163A6  010E               	movlb	14	; () banked
 16401  0163A8  6F4C               	movwf	76,b	;volatile
 16402                           
 16403                           ;mcc.c: 87: PMD1 = 0x00;
 16404  0163AA  0E00               	movlw	0
 16405  0163AC  6F4D               	movwf	77,b	;volatile
 16406                           
 16407                           ;mcc.c: 89: PMD2 = 0x00;
 16408  0163AE  0E00               	movlw	0
 16409  0163B0  6F4E               	movwf	78,b	;volatile
 16410                           
 16411                           ;mcc.c: 91: PMD3 = 0x00;
 16412  0163B2  0E00               	movlw	0
 16413  0163B4  6F4F               	movwf	79,b	;volatile
 16414                           
 16415                           ;mcc.c: 93: PMD4 = 0x00;
 16416  0163B6  0E00               	movlw	0
 16417  0163B8  6F50               	movwf	80,b	;volatile
 16418                           
 16419                           ;mcc.c: 95: PMD5 = 0x00;
 16420  0163BA  0E00               	movlw	0
 16421  0163BC  6F51               	movwf	81,b	;volatile
 16422                           
 16423                           ; BSR set to: 14
 16424  0163BE  0012               	return		;funcret
 16425  0163C0                     __end_of_PMD_Initialize:
 16426                           	opt stack 0
 16427                           tblptru	equ	0xFF8
 16428                           tblptrh	equ	0xFF7
 16429                           tblptrl	equ	0xFF6
 16430                           tablat	equ	0xFF5
 16431                           prodh	equ	0xFF4
 16432                           prodl	equ	0xFF3
 16433                           intcon	equ	0xFF2
 16434                           postinc0	equ	0xFEE
 16435                           wreg	equ	0xFE8
 16436                           indf1	equ	0xFE7
 16437                           postdec1	equ	0xFE5
 16438                           fsr1h	equ	0xFE2
 16439                           fsr1l	equ	0xFE1
 16440                           indf2	equ	0xFDF
 16441                           postinc2	equ	0xFDE
 16442                           postdec2	equ	0xFDD
 16443                           fsr2h	equ	0xFDA
 16444                           fsr2l	equ	0xFD9
 16445                           status	equ	0xFD8
 16446                           
 16447 ;; *************** function _PIN_MANAGER_Initialize *****************
 16448 ;; Defined at:
 16449 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;		None
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;		None
 16454 ;; Return value:  Size  Location     Type
 16455 ;;                  1    wreg      void 
 16456 ;; Registers used:
 16457 ;;		wreg, status,2
 16458 ;; Tracked objects:
 16459 ;;		On entry : 0/0
 16460 ;;		On exit  : 0/0
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16467 ;;Total ram usage:        0 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; Hardware stack levels required when called:   14
 16470 ;; This function calls:
 16471 ;;		Nothing
 16472 ;; This function is called by:
 16473 ;;		_SYSTEM_Initialize
 16474 ;; This function uses a non-reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text48
 16478  015210                     __ptext48:
 16479                           	opt stack 0
 16480  015210                     _PIN_MANAGER_Initialize:
 16481                           	opt stack 15
 16482                           
 16483                           ;pin_manager.c: 62: LATE = 0x00;
 16484                           
 16485                           ; BSR set to: 14
 16486                           ;incstack = 0
 16487  015210  0E00               	movlw	0
 16488  015212  6E7D               	movwf	3965,c	;volatile
 16489                           
 16490                           ;pin_manager.c: 63: LATD = 0x00;
 16491  015214  0E00               	movlw	0
 16492  015216  6E7C               	movwf	3964,c	;volatile
 16493                           
 16494                           ;pin_manager.c: 64: LATA = 0x00;
 16495  015218  0E00               	movlw	0
 16496  01521A  6E79               	movwf	3961,c	;volatile
 16497                           
 16498                           ;pin_manager.c: 65: LATF = 0x00;
 16499  01521C  0E00               	movlw	0
 16500  01521E  6E7E               	movwf	3966,c	;volatile
 16501                           
 16502                           ;pin_manager.c: 66: LATB = 0x00;
 16503  015220  0E00               	movlw	0
 16504  015222  6E7A               	movwf	3962,c	;volatile
 16505                           
 16506                           ;pin_manager.c: 67: LATG = 0x00;
 16507  015224  0E00               	movlw	0
 16508  015226  6E7F               	movwf	3967,c	;volatile
 16509                           
 16510                           ;pin_manager.c: 68: LATC = 0x00;
 16511  015228  0E00               	movlw	0
 16512  01522A  6E7B               	movwf	3963,c	;volatile
 16513                           
 16514                           ;pin_manager.c: 69: LATH = 0x00;
 16515  01522C  0E00               	movlw	0
 16516  01522E  6E80               	movwf	3968,c	;volatile
 16517                           
 16518                           ;pin_manager.c: 74: TRISE = 0xFF;
 16519  015230  6885               	setf	3973,c	;volatile
 16520                           
 16521                           ;pin_manager.c: 75: TRISF = 0xF0;
 16522  015232  0EF0               	movlw	240
 16523  015234  6E86               	movwf	3974,c	;volatile
 16524                           
 16525                           ;pin_manager.c: 76: TRISA = 0xFF;
 16526  015236  6881               	setf	3969,c	;volatile
 16527                           
 16528                           ;pin_manager.c: 77: TRISG = 0x5C;
 16529  015238  0E5C               	movlw	92
 16530  01523A  6E87               	movwf	3975,c	;volatile
 16531                           
 16532                           ;pin_manager.c: 78: TRISB = 0xFF;
 16533  01523C  6882               	setf	3970,c	;volatile
 16534                           
 16535                           ;pin_manager.c: 79: TRISH = 0x0F;
 16536  01523E  0E0F               	movlw	15
 16537  015240  6E88               	movwf	3976,c	;volatile
 16538                           
 16539                           ;pin_manager.c: 80: TRISC = 0xFF;
 16540  015242  6883               	setf	3971,c	;volatile
 16541                           
 16542                           ;pin_manager.c: 81: TRISD = 0xFF;
 16543  015244  6884               	setf	3972,c	;volatile
 16544                           
 16545                           ;pin_manager.c: 86: ANSELD = 0xFF;
 16546  015246  010E               	movlb	14	; () banked
 16547  015248  69A7               	setf	167,b	;volatile
 16548                           
 16549                           ; BSR set to: 14
 16550                           ;pin_manager.c: 87: ANSELB = 0xFF;
 16551  01524A  699A               	setf	154,b	;volatile
 16552                           
 16553                           ; BSR set to: 14
 16554                           ;pin_manager.c: 88: ANSELE = 0xFF;
 16555  01524C  69AF               	setf	175,b	;volatile
 16556                           
 16557                           ;pin_manager.c: 89: ANSELG = 0x3C;
 16558  01524E  0E3C               	movlw	60
 16559  015250  6FBC               	movwf	188,b	;volatile
 16560                           
 16561                           ;pin_manager.c: 90: ANSELF = 0xF0;
 16562  015252  0EF0               	movlw	240
 16563  015254  6FB4               	movwf	180,b	;volatile
 16564                           
 16565                           ; BSR set to: 14
 16566                           ;pin_manager.c: 91: ANSELA = 0xFF;
 16567  015256  6992               	setf	146,b	;volatile
 16568                           
 16569                           ;pin_manager.c: 96: WPUD = 0x00;
 16570  015258  0E00               	movlw	0
 16571  01525A  6FA6               	movwf	166,b	;volatile
 16572                           
 16573                           ;pin_manager.c: 97: WPUF = 0x00;
 16574  01525C  0E00               	movlw	0
 16575  01525E  6FB3               	movwf	179,b	;volatile
 16576                           
 16577                           ;pin_manager.c: 98: WPUE = 0x00;
 16578  015260  0E00               	movlw	0
 16579  015262  6FAE               	movwf	174,b	;volatile
 16580                           
 16581                           ;pin_manager.c: 99: WPUB = 0x00;
 16582  015264  0E00               	movlw	0
 16583  015266  6F99               	movwf	153,b	;volatile
 16584                           
 16585                           ;pin_manager.c: 100: WPUG = 0x00;
 16586  015268  0E00               	movlw	0
 16587  01526A  6FBB               	movwf	187,b	;volatile
 16588                           
 16589                           ;pin_manager.c: 101: WPUA = 0x00;
 16590  01526C  0E00               	movlw	0
 16591  01526E  6F91               	movwf	145,b	;volatile
 16592                           
 16593                           ;pin_manager.c: 102: WPUC = 0x00;
 16594  015270  0E00               	movlw	0
 16595  015272  6FA1               	movwf	161,b	;volatile
 16596                           
 16597                           ;pin_manager.c: 103: WPUH = 0x00;
 16598  015274  0E00               	movlw	0
 16599  015276  6FC0               	movwf	192,b	;volatile
 16600                           
 16601                           ;pin_manager.c: 108: ODCONE = 0x00;
 16602  015278  0E00               	movlw	0
 16603  01527A  6FAD               	movwf	173,b	;volatile
 16604                           
 16605                           ;pin_manager.c: 109: ODCONF = 0x01;
 16606  01527C  0E01               	movlw	1
 16607  01527E  6FB2               	movwf	178,b	;volatile
 16608                           
 16609                           ;pin_manager.c: 110: ODCONA = 0x00;
 16610  015280  0E00               	movlw	0
 16611  015282  6F90               	movwf	144,b	;volatile
 16612                           
 16613                           ;pin_manager.c: 111: ODCONG = 0x00;
 16614  015284  0E00               	movlw	0
 16615  015286  6FBA               	movwf	186,b	;volatile
 16616                           
 16617                           ;pin_manager.c: 112: ODCONB = 0x00;
 16618  015288  0E00               	movlw	0
 16619  01528A  6F98               	movwf	152,b	;volatile
 16620                           
 16621                           ;pin_manager.c: 113: ODCONH = 0x00;
 16622  01528C  0E00               	movlw	0
 16623  01528E  6FBF               	movwf	191,b	;volatile
 16624                           
 16625                           ;pin_manager.c: 114: ODCONC = 0x00;
 16626  015290  0E00               	movlw	0
 16627  015292  6FA0               	movwf	160,b	;volatile
 16628                           
 16629                           ;pin_manager.c: 115: ODCOND = 0x00;
 16630  015294  0E00               	movlw	0
 16631  015296  6FA5               	movwf	165,b	;volatile
 16632                           
 16633                           ; BSR set to: 14
 16634                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 16635  015298  698F               	setf	143,b	;volatile
 16636                           
 16637                           ; BSR set to: 14
 16638                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 16639  01529A  6997               	setf	151,b	;volatile
 16640                           
 16641                           ; BSR set to: 14
 16642                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 16643  01529C  699F               	setf	159,b	;volatile
 16644                           
 16645                           ; BSR set to: 14
 16646                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 16647  01529E  69A4               	setf	164,b	;volatile
 16648                           
 16649                           ; BSR set to: 14
 16650                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 16651  0152A0  69AC               	setf	172,b	;volatile
 16652                           
 16653                           ; BSR set to: 14
 16654                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 16655  0152A2  69B1               	setf	177,b	;volatile
 16656                           
 16657                           ; BSR set to: 14
 16658                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 16659  0152A4  69B9               	setf	185,b	;volatile
 16660                           
 16661                           ; BSR set to: 14
 16662                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 16663  0152A6  69BE               	setf	190,b	;volatile
 16664                           
 16665                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 16666  0152A8  0E0E               	movlw	14
 16667  0152AA  6F89               	movwf	137,b	;volatile
 16668                           
 16669                           ;pin_manager.c: 137: RX2PPS = 0x36;
 16670  0152AC  0E36               	movlw	54
 16671  0152AE  6F11               	movwf	17,b	;volatile
 16672                           
 16673                           ; BSR set to: 14
 16674  0152B0  0012               	return		;funcret
 16675  0152B2                     __end_of_PIN_MANAGER_Initialize:
 16676                           	opt stack 0
 16677                           tblptru	equ	0xFF8
 16678                           tblptrh	equ	0xFF7
 16679                           tblptrl	equ	0xFF6
 16680                           tablat	equ	0xFF5
 16681                           prodh	equ	0xFF4
 16682                           prodl	equ	0xFF3
 16683                           intcon	equ	0xFF2
 16684                           postinc0	equ	0xFEE
 16685                           wreg	equ	0xFE8
 16686                           indf1	equ	0xFE7
 16687                           postdec1	equ	0xFE5
 16688                           fsr1h	equ	0xFE2
 16689                           fsr1l	equ	0xFE1
 16690                           indf2	equ	0xFDF
 16691                           postinc2	equ	0xFDE
 16692                           postdec2	equ	0xFDD
 16693                           fsr2h	equ	0xFDA
 16694                           fsr2l	equ	0xFD9
 16695                           status	equ	0xFD8
 16696                           
 16697 ;; *************** function _OSCILLATOR_Initialize *****************
 16698 ;; Defined at:
 16699 ;;		line 64 in file "mcc_generated_files/mcc.c"
 16700 ;; Parameters:    Size  Location     Type
 16701 ;;		None
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;		None
 16704 ;; Return value:  Size  Location     Type
 16705 ;;                  1    wreg      void 
 16706 ;; Registers used:
 16707 ;;		wreg, status,2
 16708 ;; Tracked objects:
 16709 ;;		On entry : 0/0
 16710 ;;		On exit  : 0/0
 16711 ;;		Unchanged: 0/0
 16712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16717 ;;Total ram usage:        0 bytes
 16718 ;; Hardware stack levels used:    1
 16719 ;; Hardware stack levels required when called:   14
 16720 ;; This function calls:
 16721 ;;		Nothing
 16722 ;; This function is called by:
 16723 ;;		_SYSTEM_Initialize
 16724 ;; This function uses a non-reentrant model
 16725 ;;
 16726                           
 16727                           	psect	text49
 16728  0163C0                     __ptext49:
 16729                           	opt stack 0
 16730  0163C0                     _OSCILLATOR_Initialize:
 16731                           	opt stack 15
 16732                           
 16733                           ;mcc.c: 67: OSCCON1 = 0x20;
 16734                           
 16735                           ; BSR set to: 14
 16736                           ;incstack = 0
 16737  0163C0  0E20               	movlw	32
 16738  0163C2  010E               	movlb	14	; () banked
 16739  0163C4  6F43               	movwf	67,b	;volatile
 16740                           
 16741                           ;mcc.c: 69: OSCCON3 = 0x00;
 16742  0163C6  0E00               	movlw	0
 16743  0163C8  6F45               	movwf	69,b	;volatile
 16744                           
 16745                           ;mcc.c: 71: OSCEN = 0x00;
 16746  0163CA  0E00               	movlw	0
 16747  0163CC  6F47               	movwf	71,b	;volatile
 16748                           
 16749                           ;mcc.c: 73: OSCFRQ = 0x02;
 16750  0163CE  0E02               	movlw	2
 16751  0163D0  6F49               	movwf	73,b	;volatile
 16752                           
 16753                           ;mcc.c: 75: OSCTUNE = 0x00;
 16754  0163D2  0E00               	movlw	0
 16755  0163D4  6F48               	movwf	72,b	;volatile
 16756  0163D6                     
 16757                           ; BSR set to: 14
 16758                           
 16759                           ; BSR set to: 14
 16760                           ;mcc.c: 78: {
 16761  0163D6  B146               	btfsc	70,0,b	;volatile
 16762  0163D8  0012               	return	
 16763  0163DA  D7FD               	goto	l55
 16764  0163DC                     __end_of_OSCILLATOR_Initialize:
 16765                           	opt stack 0
 16766                           tblptru	equ	0xFF8
 16767                           tblptrh	equ	0xFF7
 16768                           tblptrl	equ	0xFF6
 16769                           tablat	equ	0xFF5
 16770                           prodh	equ	0xFF4
 16771                           prodl	equ	0xFF3
 16772                           intcon	equ	0xFF2
 16773                           postinc0	equ	0xFEE
 16774                           wreg	equ	0xFE8
 16775                           indf1	equ	0xFE7
 16776                           postdec1	equ	0xFE5
 16777                           fsr1h	equ	0xFE2
 16778                           fsr1l	equ	0xFE1
 16779                           indf2	equ	0xFDF
 16780                           postinc2	equ	0xFDE
 16781                           postdec2	equ	0xFDD
 16782                           fsr2h	equ	0xFDA
 16783                           fsr2l	equ	0xFD9
 16784                           status	equ	0xFD8
 16785                           
 16786 ;; *************** function _INTERRUPT_Initialize *****************
 16787 ;; Defined at:
 16788 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16789 ;; Parameters:    Size  Location     Type
 16790 ;;		None
 16791 ;; Auto vars:     Size  Location     Type
 16792 ;;		None
 16793 ;; Return value:  Size  Location     Type
 16794 ;;                  1    wreg      void 
 16795 ;; Registers used:
 16796 ;;		None
 16797 ;; Tracked objects:
 16798 ;;		On entry : 0/0
 16799 ;;		On exit  : 0/0
 16800 ;;		Unchanged: 0/0
 16801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16806 ;;Total ram usage:        0 bytes
 16807 ;; Hardware stack levels used:    1
 16808 ;; Hardware stack levels required when called:   14
 16809 ;; This function calls:
 16810 ;;		Nothing
 16811 ;; This function is called by:
 16812 ;;		_SYSTEM_Initialize
 16813 ;; This function uses a non-reentrant model
 16814 ;;
 16815                           
 16816                           	psect	text50
 16817  01641E                     __ptext50:
 16818                           	opt stack 0
 16819  01641E                     _INTERRUPT_Initialize:
 16820                           	opt stack 15
 16821                           
 16822                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 16823                           
 16824                           ; BSR set to: 14
 16825                           ;incstack = 0
 16826  01641E  8AF2               	bsf	intcon,5,c	;volatile
 16827                           
 16828                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 16829  016420  010E               	movlb	14	; () banked
 16830  016422  8F22               	bsf	34,7,b	;volatile
 16831                           
 16832                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 16833  016424  8924               	bsf	36,4,b	;volatile
 16834                           
 16835                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 16836  016426  8120               	bsf	32,0,b	;volatile
 16837                           
 16838                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 16839  016428  9B24               	bcf	36,5,b	;volatile
 16840                           
 16841                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 16842  01642A  9D22               	bcf	34,6,b	;volatile
 16843                           
 16844                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 16845  01642C  9D24               	bcf	36,6,b	;volatile
 16846                           
 16847                           ; BSR set to: 14
 16848  01642E  0012               	return		;funcret
 16849  016430                     __end_of_INTERRUPT_Initialize:
 16850                           	opt stack 0
 16851                           tblptru	equ	0xFF8
 16852                           tblptrh	equ	0xFF7
 16853                           tblptrl	equ	0xFF6
 16854                           tablat	equ	0xFF5
 16855                           prodh	equ	0xFF4
 16856                           prodl	equ	0xFF3
 16857                           intcon	equ	0xFF2
 16858                           postinc0	equ	0xFEE
 16859                           wreg	equ	0xFE8
 16860                           indf1	equ	0xFE7
 16861                           postdec1	equ	0xFE5
 16862                           fsr1h	equ	0xFE2
 16863                           fsr1l	equ	0xFE1
 16864                           indf2	equ	0xFDF
 16865                           postinc2	equ	0xFDE
 16866                           postdec2	equ	0xFDD
 16867                           fsr2h	equ	0xFDA
 16868                           fsr2l	equ	0xFD9
 16869                           status	equ	0xFD8
 16870                           
 16871 ;; *************** function _FVR_Initialize *****************
 16872 ;; Defined at:
 16873 ;;		line 58 in file "mcc_generated_files/fvr.c"
 16874 ;; Parameters:    Size  Location     Type
 16875 ;;		None
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;		None
 16878 ;; Return value:  Size  Location     Type
 16879 ;;                  1    wreg      void 
 16880 ;; Registers used:
 16881 ;;		wreg, status,2
 16882 ;; Tracked objects:
 16883 ;;		On entry : 0/0
 16884 ;;		On exit  : 0/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16891 ;;Total ram usage:        0 bytes
 16892 ;; Hardware stack levels used:    1
 16893 ;; Hardware stack levels required when called:   14
 16894 ;; This function calls:
 16895 ;;		Nothing
 16896 ;; This function is called by:
 16897 ;;		_SYSTEM_Initialize
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901                           	psect	text51
 16902  0164F4                     __ptext51:
 16903                           	opt stack 0
 16904  0164F4                     _FVR_Initialize:
 16905                           	opt stack 15
 16906                           
 16907                           ;fvr.c: 61: FVRCON = 0xA6;
 16908                           
 16909                           ; BSR set to: 14
 16910                           ;incstack = 0
 16911  0164F4  0EA6               	movlw	166
 16912  0164F6  010E               	movlb	14	; () banked
 16913  0164F8  6FC4               	movwf	196,b	;volatile
 16914                           
 16915                           ; BSR set to: 14
 16916  0164FA  0012               	return		;funcret
 16917  0164FC                     __end_of_FVR_Initialize:
 16918                           	opt stack 0
 16919                           tblptru	equ	0xFF8
 16920                           tblptrh	equ	0xFF7
 16921                           tblptrl	equ	0xFF6
 16922                           tablat	equ	0xFF5
 16923                           prodh	equ	0xFF4
 16924                           prodl	equ	0xFF3
 16925                           intcon	equ	0xFF2
 16926                           postinc0	equ	0xFEE
 16927                           wreg	equ	0xFE8
 16928                           indf1	equ	0xFE7
 16929                           postdec1	equ	0xFE5
 16930                           fsr1h	equ	0xFE2
 16931                           fsr1l	equ	0xFE1
 16932                           indf2	equ	0xFDF
 16933                           postinc2	equ	0xFDE
 16934                           postdec2	equ	0xFDD
 16935                           fsr2h	equ	0xFDA
 16936                           fsr2l	equ	0xFD9
 16937                           status	equ	0xFD8
 16938                           
 16939 ;; *************** function _EUSART2_Initialize *****************
 16940 ;; Defined at:
 16941 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;		None
 16944 ;; Auto vars:     Size  Location     Type
 16945 ;;		None
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      void 
 16948 ;; Registers used:
 16949 ;;		wreg, status,2, status,0, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16959 ;;Total ram usage:        0 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:   15
 16962 ;; This function calls:
 16963 ;;		_EUSART2_SetRxInterruptHandler
 16964 ;;		_EUSART2_SetTxInterruptHandler
 16965 ;; This function is called by:
 16966 ;;		_SYSTEM_Initialize
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           	psect	text52
 16971  015A18                     __ptext52:
 16972                           	opt stack 0
 16973  015A18                     _EUSART2_Initialize:
 16974                           	opt stack 14
 16975                           
 16976                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 16977                           
 16978                           ; BSR set to: 14
 16979                           ;incstack = 0
 16980  015A18  010E               	movlb	14	; () banked
 16981  015A1A  9F2C               	bcf	44,7,b	;volatile
 16982                           
 16983                           ; BSR set to: 14
 16984                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 16985  015A1C  0E66               	movlw	low _EUSART2_Receive_ISR
 16986  015A1E  0101               	movlb	1	; () banked
 16987  015A20  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 16988  015A22  0E51               	movlw	high _EUSART2_Receive_ISR
 16989  015A24  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 16990  015A26  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 16991  015A28  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 16992  015A2A  EC5A  F0B2         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 16993                           
 16994                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 16995  015A2E  010E               	movlb	14	; () banked
 16996  015A30  9D2C               	bcf	44,6,b	;volatile
 16997                           
 16998                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 16999  015A32  0E08               	movlw	low _EUSART2_Transmit_ISR
 17000  015A34  0101               	movlb	1	; () banked
 17001  015A36  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 17002  015A38  0E61               	movlw	high _EUSART2_Transmit_ISR
 17003  015A3A  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 17004  015A3C  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 17005  015A3E  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 17006  015A40  EC53  F0B2         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 17007                           
 17008                           ;eusart2.c: 87: BAUD2CON = 0x08;
 17009  015A44  0E08               	movlw	8
 17010  015A46  010E               	movlb	14	; () banked
 17011  015A48  6FF7               	movwf	247,b	;volatile
 17012                           
 17013                           ; BSR set to: 14
 17014                           ;eusart2.c: 90: RC2STA = 0x90;
 17015  015A4A  0E90               	movlw	144
 17016  015A4C  6FF5               	movwf	245,b	;volatile
 17017                           
 17018                           ; BSR set to: 14
 17019                           ;eusart2.c: 93: TX2STA = 0x24;
 17020  015A4E  0E24               	movlw	36
 17021  015A50  6FF6               	movwf	246,b	;volatile
 17022                           
 17023                           ; BSR set to: 14
 17024                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 17025  015A52  0E8A               	movlw	138
 17026  015A54  6FF3               	movwf	243,b	;volatile
 17027                           
 17028                           ; BSR set to: 14
 17029                           ;eusart2.c: 99: SP2BRGH = 0x00;
 17030  015A56  0E00               	movlw	0
 17031  015A58  6FF4               	movwf	244,b	;volatile
 17032                           
 17033                           ; BSR set to: 14
 17034                           ;eusart2.c: 103: eusart2TxHead = 0;
 17035  015A5A  0E00               	movlw	0
 17036  015A5C  0101               	movlb	1	; () banked
 17037  015A5E  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17038                           
 17039                           ; BSR set to: 1
 17040                           ;eusart2.c: 104: eusart2TxTail = 0;
 17041  015A60  0E00               	movlw	0
 17042  015A62  6FDD               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17043                           
 17044                           ; BSR set to: 1
 17045                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 17046  015A64  0E80               	movlw	128
 17047  015A66  6FDC               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17048                           
 17049                           ; BSR set to: 1
 17050                           ;eusart2.c: 107: eusart2RxHead = 0;
 17051  015A68  0E00               	movlw	0
 17052  015A6A  0100               	movlb	0	; () banked
 17053  015A6C  6FEB               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;eusart2.c: 108: eusart2RxTail = 0;
 17057  015A6E  0E00               	movlw	0
 17058  015A70  0101               	movlb	1	; () banked
 17059  015A72  6FDB               	movwf	_eusart2RxTail& (0+255),b	;volatile
 17060                           
 17061                           ; BSR set to: 1
 17062                           ;eusart2.c: 109: eusart2RxCount = 0;
 17063  015A74  0E00               	movlw	0
 17064  015A76  6FDA               	movwf	_eusart2RxCount& (0+255),b	;volatile
 17065                           
 17066                           ; BSR set to: 1
 17067                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 17068  015A78  010E               	movlb	14	; () banked
 17069  015A7A  8F2C               	bsf	44,7,b	;volatile
 17070                           
 17071                           ; BSR set to: 14
 17072  015A7C  0012               	return		;funcret
 17073  015A7E                     __end_of_EUSART2_Initialize:
 17074                           	opt stack 0
 17075                           tblptru	equ	0xFF8
 17076                           tblptrh	equ	0xFF7
 17077                           tblptrl	equ	0xFF6
 17078                           tablat	equ	0xFF5
 17079                           prodh	equ	0xFF4
 17080                           prodl	equ	0xFF3
 17081                           intcon	equ	0xFF2
 17082                           postinc0	equ	0xFEE
 17083                           wreg	equ	0xFE8
 17084                           indf1	equ	0xFE7
 17085                           postdec1	equ	0xFE5
 17086                           fsr1h	equ	0xFE2
 17087                           fsr1l	equ	0xFE1
 17088                           indf2	equ	0xFDF
 17089                           postinc2	equ	0xFDE
 17090                           postdec2	equ	0xFDD
 17091                           fsr2h	equ	0xFDA
 17092                           fsr2l	equ	0xFD9
 17093                           status	equ	0xFD8
 17094                           
 17095 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 17096 ;; Defined at:
 17097 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 17098 ;; Parameters:    Size  Location     Type
 17099 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 17100 ;;		 -> EUSART2_Transmit_ISR(1), 
 17101 ;; Auto vars:     Size  Location     Type
 17102 ;;		None
 17103 ;; Return value:  Size  Location     Type
 17104 ;;                  1    wreg      void 
 17105 ;; Registers used:
 17106 ;;		wreg, status,2, status,0
 17107 ;; Tracked objects:
 17108 ;;		On entry : 0/0
 17109 ;;		On exit  : 0/0
 17110 ;;		Unchanged: 0/0
 17111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17112 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17115 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17116 ;;Total ram usage:        3 bytes
 17117 ;; Hardware stack levels used:    1
 17118 ;; Hardware stack levels required when called:   14
 17119 ;; This function calls:
 17120 ;;		Nothing
 17121 ;; This function is called by:
 17122 ;;		_EUSART2_Initialize
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126                           	psect	text53
 17127  0164A6                     __ptext53:
 17128                           	opt stack 0
 17129  0164A6                     _EUSART2_SetTxInterruptHandler:
 17130                           	opt stack 14
 17131                           
 17132                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 17133                           
 17134                           ; BSR set to: 14
 17135                           ;incstack = 0
 17136  0164A6  C117  F1D3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 17137  0164AA  C118  F1D4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 17138  0164AE  C119  F1D5         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 17139  0164B2  0012               	return		;funcret
 17140  0164B4                     __end_of_EUSART2_SetTxInterruptHandler:
 17141                           	opt stack 0
 17142                           tblptru	equ	0xFF8
 17143                           tblptrh	equ	0xFF7
 17144                           tblptrl	equ	0xFF6
 17145                           tablat	equ	0xFF5
 17146                           prodh	equ	0xFF4
 17147                           prodl	equ	0xFF3
 17148                           intcon	equ	0xFF2
 17149                           postinc0	equ	0xFEE
 17150                           wreg	equ	0xFE8
 17151                           indf1	equ	0xFE7
 17152                           postdec1	equ	0xFE5
 17153                           fsr1h	equ	0xFE2
 17154                           fsr1l	equ	0xFE1
 17155                           indf2	equ	0xFDF
 17156                           postinc2	equ	0xFDE
 17157                           postdec2	equ	0xFDD
 17158                           fsr2h	equ	0xFDA
 17159                           fsr2l	equ	0xFD9
 17160                           status	equ	0xFD8
 17161                           
 17162 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 17163 ;; Defined at:
 17164 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 17165 ;; Parameters:    Size  Location     Type
 17166 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 17167 ;;		 -> EUSART2_Receive_ISR(1), 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;		None
 17170 ;; Return value:  Size  Location     Type
 17171 ;;                  1    wreg      void 
 17172 ;; Registers used:
 17173 ;;		wreg, status,2, status,0
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17179 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17182 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17183 ;;Total ram usage:        3 bytes
 17184 ;; Hardware stack levels used:    1
 17185 ;; Hardware stack levels required when called:   14
 17186 ;; This function calls:
 17187 ;;		Nothing
 17188 ;; This function is called by:
 17189 ;;		_EUSART2_Initialize
 17190 ;; This function uses a non-reentrant model
 17191 ;;
 17192                           
 17193                           	psect	text54
 17194  0164B4                     __ptext54:
 17195                           	opt stack 0
 17196  0164B4                     _EUSART2_SetRxInterruptHandler:
 17197                           	opt stack 14
 17198                           
 17199                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 17200                           
 17201                           ;incstack = 0
 17202  0164B4  C117  F0E3         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 17203  0164B8  C118  F0E4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 17204  0164BC  C119  F0E5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 17205  0164C0  0012               	return		;funcret
 17206  0164C2                     __end_of_EUSART2_SetRxInterruptHandler:
 17207                           	opt stack 0
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           prodh	equ	0xFF4
 17213                           prodl	equ	0xFF3
 17214                           intcon	equ	0xFF2
 17215                           postinc0	equ	0xFEE
 17216                           wreg	equ	0xFE8
 17217                           indf1	equ	0xFE7
 17218                           postdec1	equ	0xFE5
 17219                           fsr1h	equ	0xFE2
 17220                           fsr1l	equ	0xFE1
 17221                           indf2	equ	0xFDF
 17222                           postinc2	equ	0xFDE
 17223                           postdec2	equ	0xFDD
 17224                           fsr2h	equ	0xFDA
 17225                           fsr2l	equ	0xFD9
 17226                           status	equ	0xFD8
 17227                           
 17228 ;; *************** function _ADCC_Initialize *****************
 17229 ;; Defined at:
 17230 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17231 ;; Parameters:    Size  Location     Type
 17232 ;;		None
 17233 ;; Auto vars:     Size  Location     Type
 17234 ;;		None
 17235 ;; Return value:  Size  Location     Type
 17236 ;;                  1    wreg      void 
 17237 ;; Registers used:
 17238 ;;		wreg, status,2, status,0, cstack
 17239 ;; Tracked objects:
 17240 ;;		On entry : 0/0
 17241 ;;		On exit  : 0/0
 17242 ;;		Unchanged: 0/0
 17243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17248 ;;Total ram usage:        0 bytes
 17249 ;; Hardware stack levels used:    1
 17250 ;; Hardware stack levels required when called:   15
 17251 ;; This function calls:
 17252 ;;		_ADCC_SetADIInterruptHandler
 17253 ;; This function is called by:
 17254 ;;		_SYSTEM_Initialize
 17255 ;; This function uses a non-reentrant model
 17256 ;;
 17257                           
 17258                           	psect	text55
 17259  015AE4                     __ptext55:
 17260                           	opt stack 0
 17261  015AE4                     _ADCC_Initialize:
 17262                           	opt stack 14
 17263                           
 17264                           ;adcc.c: 67: ADLTHL = 0x00;
 17265                           
 17266                           ;incstack = 0
 17267  015AE4  0E00               	movlw	0
 17268  015AE6  6E6A               	movwf	3946,c	;volatile
 17269                           
 17270                           ;adcc.c: 69: ADLTHH = 0x00;
 17271  015AE8  0E00               	movlw	0
 17272  015AEA  6E6B               	movwf	3947,c	;volatile
 17273                           
 17274                           ;adcc.c: 71: ADUTHL = 0x00;
 17275  015AEC  0E00               	movlw	0
 17276  015AEE  6E6C               	movwf	3948,c	;volatile
 17277                           
 17278                           ;adcc.c: 73: ADUTHH = 0x00;
 17279  015AF0  0E00               	movlw	0
 17280  015AF2  6E6D               	movwf	3949,c	;volatile
 17281                           
 17282                           ;adcc.c: 75: ADSTPTL = 0x00;
 17283  015AF4  0E00               	movlw	0
 17284  015AF6  6E68               	movwf	3944,c	;volatile
 17285                           
 17286                           ;adcc.c: 77: ADSTPTH = 0x00;
 17287  015AF8  0E00               	movlw	0
 17288  015AFA  6E69               	movwf	3945,c	;volatile
 17289                           
 17290                           ;adcc.c: 79: ADRPT = 0x00;
 17291  015AFC  0E00               	movlw	0
 17292  015AFE  6E66               	movwf	3942,c	;volatile
 17293                           
 17294                           ;adcc.c: 81: ADPCH = 0x00;
 17295  015B00  0E00               	movlw	0
 17296  015B02  010F               	movlb	15	; () banked
 17297  015B04  6F5F               	movwf	95,b	;volatile
 17298                           
 17299                           ;adcc.c: 83: ADCAP = 0x00;
 17300  015B06  0E00               	movlw	0
 17301  015B08  6F5D               	movwf	93,b	;volatile
 17302                           
 17303                           ;adcc.c: 85: ADCON1 = 0x00;
 17304  015B0A  0E00               	movlw	0
 17305  015B0C  6F59               	movwf	89,b	;volatile
 17306                           
 17307                           ;adcc.c: 87: ADCON2 = 0x04;
 17308  015B0E  0E04               	movlw	4
 17309  015B10  6F5A               	movwf	90,b	;volatile
 17310                           
 17311                           ;adcc.c: 89: ADCON3 = 0x00;
 17312  015B12  0E00               	movlw	0
 17313  015B14  6F5B               	movwf	91,b	;volatile
 17314                           
 17315                           ;adcc.c: 91: ADSTAT = 0x00;
 17316  015B16  0E00               	movlw	0
 17317  015B18  6E65               	movwf	3941,c	;volatile
 17318                           
 17319                           ;adcc.c: 93: ADREF = 0x12;
 17320  015B1A  0E12               	movlw	18
 17321  015B1C  6F58               	movwf	88,b	;volatile
 17322                           
 17323                           ;adcc.c: 95: ADACT = 0x00;
 17324  015B1E  0E00               	movlw	0
 17325  015B20  6F56               	movwf	86,b	;volatile
 17326                           
 17327                           ;adcc.c: 97: ADCLK = 0x00;
 17328  015B22  0E00               	movlw	0
 17329  015B24  6F57               	movwf	87,b	;volatile
 17330                           
 17331                           ;adcc.c: 99: ADCON0 = 0x94;
 17332  015B26  0E94               	movlw	148
 17333  015B28  6E60               	movwf	3936,c	;volatile
 17334                           
 17335                           ;adcc.c: 101: ADACQ = 0x00;
 17336  015B2A  0E00               	movlw	0
 17337  015B2C  6F5C               	movwf	92,b	;volatile
 17338                           
 17339                           ; BSR set to: 15
 17340                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 17341  015B2E  010E               	movlb	14	; () banked
 17342  015B30  9134               	bcf	52,0,b	;volatile
 17343                           
 17344                           ; BSR set to: 14
 17345                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 17346  015B32  812A               	bsf	42,0,b	;volatile
 17347                           
 17348                           ; BSR set to: 14
 17349                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 17350  015B34  0E02               	movlw	low _ADCC_DefaultInterruptHandler
 17351  015B36  0101               	movlb	1	; () banked
 17352  015B38  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 17353  015B3A  0E65               	movlw	high _ADCC_DefaultInterruptHandler
 17354  015B3C  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 17355  015B3E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17356  015B40  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 17357  015B42  EC61  F0B2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 17358  015B46  0012               	return		;funcret
 17359  015B48                     __end_of_ADCC_Initialize:
 17360                           	opt stack 0
 17361                           tblptru	equ	0xFF8
 17362                           tblptrh	equ	0xFF7
 17363                           tblptrl	equ	0xFF6
 17364                           tablat	equ	0xFF5
 17365                           prodh	equ	0xFF4
 17366                           prodl	equ	0xFF3
 17367                           intcon	equ	0xFF2
 17368                           postinc0	equ	0xFEE
 17369                           wreg	equ	0xFE8
 17370                           indf1	equ	0xFE7
 17371                           postdec1	equ	0xFE5
 17372                           fsr1h	equ	0xFE2
 17373                           fsr1l	equ	0xFE1
 17374                           indf2	equ	0xFDF
 17375                           postinc2	equ	0xFDE
 17376                           postdec2	equ	0xFDD
 17377                           fsr2h	equ	0xFDA
 17378                           fsr2l	equ	0xFD9
 17379                           status	equ	0xFD8
 17380                           
 17381 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 17382 ;; Defined at:
 17383 ;;		line 306 in file "mcc_generated_files/adcc.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 17386 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 17387 ;; Auto vars:     Size  Location     Type
 17388 ;;		None
 17389 ;; Return value:  Size  Location     Type
 17390 ;;                  1    wreg      void 
 17391 ;; Registers used:
 17392 ;;		wreg, status,2, status,0
 17393 ;; Tracked objects:
 17394 ;;		On entry : 0/0
 17395 ;;		On exit  : 0/0
 17396 ;;		Unchanged: 0/0
 17397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17398 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17401 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17402 ;;Total ram usage:        3 bytes
 17403 ;; Hardware stack levels used:    1
 17404 ;; Hardware stack levels required when called:   14
 17405 ;; This function calls:
 17406 ;;		Nothing
 17407 ;; This function is called by:
 17408 ;;		_ADCC_Initialize
 17409 ;;		_main
 17410 ;; This function uses a non-reentrant model
 17411 ;;
 17412                           
 17413                           	psect	text56
 17414  0164C2                     __ptext56:
 17415                           	opt stack 0
 17416  0164C2                     _ADCC_SetADIInterruptHandler:
 17417                           	opt stack 14
 17418                           
 17419                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 17420                           
 17421                           ;incstack = 0
 17422  0164C2  C117  F0E0         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 17423  0164C6  C118  F0E1         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 17424  0164CA  C119  F0E2         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 17425  0164CE  0012               	return		;funcret
 17426  0164D0                     __end_of_ADCC_SetADIInterruptHandler:
 17427                           	opt stack 0
 17428                           tblptru	equ	0xFF8
 17429                           tblptrh	equ	0xFF7
 17430                           tblptrl	equ	0xFF6
 17431                           tablat	equ	0xFF5
 17432                           prodh	equ	0xFF4
 17433                           prodl	equ	0xFF3
 17434                           intcon	equ	0xFF2
 17435                           postinc0	equ	0xFEE
 17436                           wreg	equ	0xFE8
 17437                           indf1	equ	0xFE7
 17438                           postdec1	equ	0xFE5
 17439                           fsr1h	equ	0xFE2
 17440                           fsr1l	equ	0xFE1
 17441                           indf2	equ	0xFDF
 17442                           postinc2	equ	0xFDE
 17443                           postdec2	equ	0xFDD
 17444                           fsr2h	equ	0xFDA
 17445                           fsr2l	equ	0xFD9
 17446                           status	equ	0xFD8
 17447                           
 17448 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 17449 ;; Defined at:
 17450 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;		None
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;                  1    wreg      void 
 17457 ;; Registers used:
 17458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17459 ;; Tracked objects:
 17460 ;;		On entry : 0/0
 17461 ;;		On exit  : 0/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17466 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17467 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17468 ;;Total ram usage:       21 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:   13
 17471 ;; This function calls:
 17472 ;;		Absolute function
 17473 ;;		_EUSART2_Transmit_ISR
 17474 ;;		_TMR6_ISR
 17475 ;;		_TMR7_ISR
 17476 ;; This function is called by:
 17477 ;;		Interrupt level 1
 17478 ;; This function uses a non-reentrant model
 17479 ;;
 17480                           
 17481                           	psect	intcodelo
 17482  000018                     __pintcodelo:
 17483                           	opt stack 0
 17484  000018                     _INTERRUPT_InterruptManagerLow:
 17485                           	opt stack 9
 17486                           
 17487                           ;incstack = 0
 17488  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17489  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 17490  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 17491  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 17492  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 17493  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 17494  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 17495  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 17496  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 17497  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 17498  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 17499  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 17500  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 17501  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 17502  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 17503  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 17504  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 17505  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 17506  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 17507  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 17508  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 17509  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 17510                           
 17511                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 17512  00006E  010E               	movlb	14	; () banked
 17513  000070  BB2E               	btfsc	46,5,b	;volatile
 17514                           
 17515                           ; BSR set to: 14
 17516  000072  AB38               	btfss	56,5,b	;volatile
 17517  000074  D003               	goto	i1l213
 17518                           
 17519                           ; BSR set to: 14
 17520                           ;interrupt_manager.c: 105: {
 17521                           ;interrupt_manager.c: 106: TMR6_ISR();
 17522  000076  EC2D  F0B1         	call	_TMR6_ISR	;wreg free
 17523                           
 17524                           ;interrupt_manager.c: 107: }
 17525  00007A  D015               	goto	i1l217
 17526  00007C                     i1l213:
 17527                           
 17528                           ; BSR set to: 14
 17529                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 17530  00007C  BD2C               	btfsc	44,6,b	;volatile
 17531                           
 17532                           ; BSR set to: 14
 17533  00007E  AD36               	btfss	54,6,b	;volatile
 17534  000080  D00D               	goto	i1l215
 17535                           
 17536                           ; BSR set to: 14
 17537                           ;interrupt_manager.c: 109: {
 17538                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 17539  000082  D801               	call	i1u1636_28
 17540  000084  D010               	goto	i1l217
 17541  000086                     i1u1636_28:
 17542  000086  0005               	push	
 17543  000088  6EFA               	movwf	pclath,c
 17544  00008A  0101               	movlb	1	; () banked
 17545  00008C  51D3               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 17546  00008E  6EFD               	movwf	tosl,c
 17547  000090  51D4               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 17548  000092  6EFE               	movwf	tosh,c
 17549  000094  51D5               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 17550  000096  6EFF               	movwf	tosu,c
 17551  000098  50FA               	movf	pclath,w,c
 17552  00009A  0012               	return		;indir
 17553  00009C                     i1l215:
 17554                           
 17555                           ; BSR set to: 14
 17556                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 17557  00009C  BD2E               	btfsc	46,6,b	;volatile
 17558                           
 17559                           ; BSR set to: 14
 17560  00009E  AD38               	btfss	56,6,b	;volatile
 17561  0000A0  D002               	goto	i1l217
 17562                           
 17563                           ; BSR set to: 14
 17564                           ;interrupt_manager.c: 113: {
 17565                           ;interrupt_manager.c: 114: TMR7_ISR();
 17566  0000A2  EC9F  F0B0         	call	_TMR7_ISR	;wreg free
 17567  0000A6                     i1l217:
 17568                           
 17569                           ;interrupt_manager.c: 116: else
 17570                           ;interrupt_manager.c: 117: {
 17571  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 17572  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 17573  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 17574  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 17575  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 17576  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 17577  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 17578  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 17579  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 17580  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 17581  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 17582  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 17583  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 17584  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 17585  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 17586  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 17587  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 17588  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 17589  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 17590  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 17591  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 17592  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17593  0000FC  0010               	retfie	
 17594  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 17595                           	opt stack 0
 17596                           tosu	equ	0xFFF
 17597                           tosh	equ	0xFFE
 17598                           tosl	equ	0xFFD
 17599                           pclatu	equ	0xFFB
 17600                           pclath	equ	0xFFA
 17601                           tblptru	equ	0xFF8
 17602                           tblptrh	equ	0xFF7
 17603                           tblptrl	equ	0xFF6
 17604                           tablat	equ	0xFF5
 17605                           prodh	equ	0xFF4
 17606                           prodl	equ	0xFF3
 17607                           intcon	equ	0xFF2
 17608                           postinc0	equ	0xFEE
 17609                           fsr0h	equ	0xFEA
 17610                           fsr0l	equ	0xFE9
 17611                           wreg	equ	0xFE8
 17612                           indf1	equ	0xFE7
 17613                           postdec1	equ	0xFE5
 17614                           fsr1h	equ	0xFE2
 17615                           fsr1l	equ	0xFE1
 17616                           bsr	equ	0xFE0
 17617                           indf2	equ	0xFDF
 17618                           postinc2	equ	0xFDE
 17619                           postdec2	equ	0xFDD
 17620                           fsr2h	equ	0xFDA
 17621                           fsr2l	equ	0xFD9
 17622                           status	equ	0xFD8
 17623                           
 17624 ;; *************** function _TMR7_ISR *****************
 17625 ;; Defined at:
 17626 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;		None
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;		None
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  1    wreg      void 
 17633 ;; Registers used:
 17634 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17635 ;; Tracked objects:
 17636 ;;		On entry : 0/0
 17637 ;;		On exit  : 0/0
 17638 ;;		Unchanged: 0/0
 17639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17644 ;;Total ram usage:        0 bytes
 17645 ;; Hardware stack levels used:    1
 17646 ;; Hardware stack levels required when called:   12
 17647 ;; This function calls:
 17648 ;;		Absolute function
 17649 ;;		_TMR7_DefaultInterruptHandler
 17650 ;;		_TMR7_WriteTimer
 17651 ;;		_acquisitionTimerCallback
 17652 ;; This function is called by:
 17653 ;;		_INTERRUPT_InterruptManagerLow
 17654 ;; This function uses a non-reentrant model
 17655 ;;
 17656                           
 17657                           	psect	text58
 17658  01613E                     __ptext58:
 17659                           	opt stack 0
 17660  01613E                     _TMR7_ISR:
 17661                           	opt stack 9
 17662                           
 17663                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 17664                           
 17665                           ;incstack = 0
 17666  01613E  010E               	movlb	14	; () banked
 17667  016140  9D38               	bcf	56,6,b	;volatile
 17668                           
 17669                           ; BSR set to: 14
 17670                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 17671  016142  C1D8  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 17672  016146  C1D9  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 17673  01614A  EC68  F0B1         	call	_TMR7_WriteTimer	;wreg free
 17674                           
 17675                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 17676  01614E  0101               	movlb	1	; () banked
 17677  016150  51CD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 17678  016152  11CE               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 17679  016154  11CF               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 17680  016156  B4D8               	btfsc	status,2,c
 17681  016158  0012               	return	
 17682                           
 17683                           ; BSR set to: 1
 17684                           ;tmr7.c: 172: {
 17685                           ;tmr7.c: 173: TMR7_InterruptHandler();
 17686  01615A  D801               	call	i1u1618_28
 17687  01615C  0012               	return	
 17688  01615E                     i1u1618_28:
 17689  01615E  0005               	push	
 17690  016160  6EFA               	movwf	pclath,c
 17691  016162  51CD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 17692  016164  6EFD               	movwf	tosl,c
 17693  016166  51CE               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 17694  016168  6EFE               	movwf	tosh,c
 17695  01616A  51CF               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 17696  01616C  6EFF               	movwf	tosu,c
 17697  01616E  50FA               	movf	pclath,w,c
 17698  016170  0012               	return		;indir
 17699  016172                     __end_of_TMR7_ISR:
 17700                           	opt stack 0
 17701                           tosu	equ	0xFFF
 17702                           tosh	equ	0xFFE
 17703                           tosl	equ	0xFFD
 17704                           pclatu	equ	0xFFB
 17705                           pclath	equ	0xFFA
 17706                           tblptru	equ	0xFF8
 17707                           tblptrh	equ	0xFF7
 17708                           tblptrl	equ	0xFF6
 17709                           tablat	equ	0xFF5
 17710                           prodh	equ	0xFF4
 17711                           prodl	equ	0xFF3
 17712                           intcon	equ	0xFF2
 17713                           postinc0	equ	0xFEE
 17714                           fsr0h	equ	0xFEA
 17715                           fsr0l	equ	0xFE9
 17716                           wreg	equ	0xFE8
 17717                           indf1	equ	0xFE7
 17718                           postdec1	equ	0xFE5
 17719                           fsr1h	equ	0xFE2
 17720                           fsr1l	equ	0xFE1
 17721                           bsr	equ	0xFE0
 17722                           indf2	equ	0xFDF
 17723                           postinc2	equ	0xFDE
 17724                           postdec2	equ	0xFDD
 17725                           fsr2h	equ	0xFDA
 17726                           fsr2l	equ	0xFD9
 17727                           status	equ	0xFD8
 17728                           
 17729 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 17730 ;; Defined at:
 17731 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 17732 ;; Parameters:    Size  Location     Type
 17733 ;;		None
 17734 ;; Auto vars:     Size  Location     Type
 17735 ;;		None
 17736 ;; Return value:  Size  Location     Type
 17737 ;;                  1    wreg      void 
 17738 ;; Registers used:
 17739 ;;		None
 17740 ;; Tracked objects:
 17741 ;;		On entry : 0/0
 17742 ;;		On exit  : 0/0
 17743 ;;		Unchanged: 0/0
 17744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17749 ;;Total ram usage:        0 bytes
 17750 ;; Hardware stack levels used:    1
 17751 ;; Hardware stack levels required when called:   10
 17752 ;; This function calls:
 17753 ;;		Nothing
 17754 ;; This function is called by:
 17755 ;;		_TMR7_Initialize
 17756 ;;		_TMR7_ISR
 17757 ;; This function uses a non-reentrant model
 17758 ;;
 17759                           
 17760                           	psect	text59
 17761  0164FC                     __ptext59:
 17762                           	opt stack 0
 17763  0164FC                     _TMR7_DefaultInterruptHandler:
 17764                           	opt stack 10
 17765                           
 17766                           ;incstack = 0
 17767  0164FC  0012               	return		;funcret
 17768  0164FE                     __end_of_TMR7_DefaultInterruptHandler:
 17769                           	opt stack 0
 17770                           tosu	equ	0xFFF
 17771                           tosh	equ	0xFFE
 17772                           tosl	equ	0xFFD
 17773                           pclatu	equ	0xFFB
 17774                           pclath	equ	0xFFA
 17775                           tblptru	equ	0xFF8
 17776                           tblptrh	equ	0xFF7
 17777                           tblptrl	equ	0xFF6
 17778                           tablat	equ	0xFF5
 17779                           prodh	equ	0xFF4
 17780                           prodl	equ	0xFF3
 17781                           intcon	equ	0xFF2
 17782                           postinc0	equ	0xFEE
 17783                           fsr0h	equ	0xFEA
 17784                           fsr0l	equ	0xFE9
 17785                           wreg	equ	0xFE8
 17786                           indf1	equ	0xFE7
 17787                           postdec1	equ	0xFE5
 17788                           fsr1h	equ	0xFE2
 17789                           fsr1l	equ	0xFE1
 17790                           bsr	equ	0xFE0
 17791                           indf2	equ	0xFDF
 17792                           postinc2	equ	0xFDE
 17793                           postdec2	equ	0xFDD
 17794                           fsr2h	equ	0xFDA
 17795                           fsr2l	equ	0xFD9
 17796                           status	equ	0xFD8
 17797                           
 17798 ;; *************** function _acquisitionTimerCallback *****************
 17799 ;; Defined at:
 17800 ;;		line 242 in file "main.c"
 17801 ;; Parameters:    Size  Location     Type
 17802 ;;		None
 17803 ;; Auto vars:     Size  Location     Type
 17804 ;;		None
 17805 ;; Return value:  Size  Location     Type
 17806 ;;                  1    wreg      void 
 17807 ;; Registers used:
 17808 ;;		wreg, status,2, cstack
 17809 ;; Tracked objects:
 17810 ;;		On entry : 0/0
 17811 ;;		On exit  : 0/0
 17812 ;;		Unchanged: 0/0
 17813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17818 ;;Total ram usage:        0 bytes
 17819 ;; Hardware stack levels used:    1
 17820 ;; Hardware stack levels required when called:   11
 17821 ;; This function calls:
 17822 ;;		_ADCC_IsConversionDone
 17823 ;;		_ADCC_StartConversion
 17824 ;; This function is called by:
 17825 ;;		_main
 17826 ;;		_TMR7_ISR
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           	psect	text60
 17831  015B48                     __ptext60:
 17832                           	opt stack 0
 17833  015B48                     _acquisitionTimerCallback:
 17834                           	opt stack 9
 17835                           
 17836                           ;main.c: 245: ADCC_StartConversion(channel_VSS);
 17837                           
 17838                           ;incstack = 0
 17839  015B48  0E3C               	movlw	60
 17840  015B4A  EC68  F0B2         	call	_ADCC_StartConversion
 17841  015B4E  EC6F  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17842  015B52  0900               	iorlw	0
 17843  015B54  B4D8               	btfsc	status,2,c
 17844  015B56  D7FB               	goto	i1l839
 17845                           
 17846                           ;main.c: 252: ADCC_StartConversion(channel_FVR_buf1);
 17847  015B58  0E3F               	movlw	63
 17848  015B5A  EC68  F0B2         	call	_ADCC_StartConversion
 17849  015B5E  EC6F  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17850  015B62  0900               	iorlw	0
 17851  015B64  B4D8               	btfsc	status,2,c
 17852  015B66  D7FB               	goto	i1l842
 17853                           
 17854                           ;main.c: 258: ADCC_StartConversion(POS3P3_ADC);
 17855  015B68  0E22               	movlw	34
 17856  015B6A  EC68  F0B2         	call	_ADCC_StartConversion
 17857  015B6E  EC6F  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17858  015B72  0900               	iorlw	0
 17859  015B74  B4D8               	btfsc	status,2,c
 17860  015B76  D7FB               	goto	i1l845
 17861                           
 17862                           ;main.c: 264: ADCC_StartConversion(ISNS_ADC);
 17863  015B78  0E00               	movlw	0
 17864  015B7A  EC68  F0B2         	call	_ADCC_StartConversion
 17865  015B7E  EC6F  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17866  015B82  0900               	iorlw	0
 17867  015B84  B4D8               	btfsc	status,2,c
 17868  015B86  D7FB               	goto	i1l848
 17869                           
 17870                           ;main.c: 270: ADCC_StartConversion(POS12_ADC);
 17871  015B88  0E04               	movlw	4
 17872  015B8A  EC68  F0B2         	call	_ADCC_StartConversion
 17873  015B8E  EC6F  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17874  015B92  0900               	iorlw	0
 17875  015B94  B4D8               	btfsc	status,2,c
 17876  015B96  D7FB               	goto	i1l851
 17877                           
 17878                           ;main.c: 276: ADCC_StartConversion(channel_Temp);
 17879  015B98  0E3D               	movlw	61
 17880  015B9A  EC68  F0B2         	call	_ADCC_StartConversion
 17881  015B9E  EC6F  F0B2         	call	_ADCC_IsConversionDone	;wreg free
 17882  015BA2  0900               	iorlw	0
 17883  015BA4  A4D8               	btfss	status,2,c
 17884  015BA6  0012               	return	
 17885  015BA8  D7FA               	goto	i1l854
 17886  015BAA                     __end_of_acquisitionTimerCallback:
 17887                           	opt stack 0
 17888                           tosu	equ	0xFFF
 17889                           tosh	equ	0xFFE
 17890                           tosl	equ	0xFFD
 17891                           pclatu	equ	0xFFB
 17892                           pclath	equ	0xFFA
 17893                           tblptru	equ	0xFF8
 17894                           tblptrh	equ	0xFF7
 17895                           tblptrl	equ	0xFF6
 17896                           tablat	equ	0xFF5
 17897                           prodh	equ	0xFF4
 17898                           prodl	equ	0xFF3
 17899                           intcon	equ	0xFF2
 17900                           postinc0	equ	0xFEE
 17901                           fsr0h	equ	0xFEA
 17902                           fsr0l	equ	0xFE9
 17903                           wreg	equ	0xFE8
 17904                           indf1	equ	0xFE7
 17905                           postdec1	equ	0xFE5
 17906                           fsr1h	equ	0xFE2
 17907                           fsr1l	equ	0xFE1
 17908                           bsr	equ	0xFE0
 17909                           indf2	equ	0xFDF
 17910                           postinc2	equ	0xFDE
 17911                           postdec2	equ	0xFDD
 17912                           fsr2h	equ	0xFDA
 17913                           fsr2l	equ	0xFD9
 17914                           status	equ	0xFD8
 17915                           
 17916 ;; *************** function _ADCC_StartConversion *****************
 17917 ;; Defined at:
 17918 ;;		line 112 in file "mcc_generated_files/adcc.c"
 17919 ;; Parameters:    Size  Location     Type
 17920 ;;  channel         1    wreg     enum E17310
 17921 ;; Auto vars:     Size  Location     Type
 17922 ;;  channel         1    0[BANK1 ] enum E17310
 17923 ;; Return value:  Size  Location     Type
 17924 ;;                  1    wreg      void 
 17925 ;; Registers used:
 17926 ;;		wreg
 17927 ;; Tracked objects:
 17928 ;;		On entry : 0/0
 17929 ;;		On exit  : 0/0
 17930 ;;		Unchanged: 0/0
 17931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17933 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17935 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17936 ;;Total ram usage:        1 bytes
 17937 ;; Hardware stack levels used:    1
 17938 ;; Hardware stack levels required when called:   10
 17939 ;; This function calls:
 17940 ;;		Nothing
 17941 ;; This function is called by:
 17942 ;;		_acquisitionTimerCallback
 17943 ;; This function uses a non-reentrant model
 17944 ;;
 17945                           
 17946                           	psect	text61
 17947  0164D0                     __ptext61:
 17948                           	opt stack 0
 17949  0164D0                     _ADCC_StartConversion:
 17950                           	opt stack 9
 17951                           
 17952                           ;incstack = 0
 17953                           ;ADCC_StartConversion@channel stored from wreg
 17954  0164D0  0101               	movlb	1	; () banked
 17955  0164D2  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 17956                           
 17957                           ;adcc.c: 115: ADPCH = channel;
 17958  0164D4  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 17959                           
 17960                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 17961  0164D8  8E60               	bsf	3936,7,c	;volatile
 17962                           
 17963                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 17964  0164DA  8060               	bsf	3936,0,c	;volatile
 17965  0164DC  0012               	return		;funcret
 17966  0164DE                     __end_of_ADCC_StartConversion:
 17967                           	opt stack 0
 17968                           tosu	equ	0xFFF
 17969                           tosh	equ	0xFFE
 17970                           tosl	equ	0xFFD
 17971                           pclatu	equ	0xFFB
 17972                           pclath	equ	0xFFA
 17973                           tblptru	equ	0xFF8
 17974                           tblptrh	equ	0xFF7
 17975                           tblptrl	equ	0xFF6
 17976                           tablat	equ	0xFF5
 17977                           prodh	equ	0xFF4
 17978                           prodl	equ	0xFF3
 17979                           intcon	equ	0xFF2
 17980                           postinc0	equ	0xFEE
 17981                           fsr0h	equ	0xFEA
 17982                           fsr0l	equ	0xFE9
 17983                           wreg	equ	0xFE8
 17984                           indf1	equ	0xFE7
 17985                           postdec1	equ	0xFE5
 17986                           fsr1h	equ	0xFE2
 17987                           fsr1l	equ	0xFE1
 17988                           bsr	equ	0xFE0
 17989                           indf2	equ	0xFDF
 17990                           postinc2	equ	0xFDE
 17991                           postdec2	equ	0xFDD
 17992                           fsr2h	equ	0xFDA
 17993                           fsr2l	equ	0xFD9
 17994                           status	equ	0xFD8
 17995                           
 17996 ;; *************** function _ADCC_IsConversionDone *****************
 17997 ;; Defined at:
 17998 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;		None
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;		None
 18003 ;; Return value:  Size  Location     Type
 18004 ;;                  1    wreg      unsigned char 
 18005 ;; Registers used:
 18006 ;;		wreg
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18016 ;;Total ram usage:        0 bytes
 18017 ;; Hardware stack levels used:    1
 18018 ;; Hardware stack levels required when called:   10
 18019 ;; This function calls:
 18020 ;;		Nothing
 18021 ;; This function is called by:
 18022 ;;		_acquisitionTimerCallback
 18023 ;; This function uses a non-reentrant model
 18024 ;;
 18025                           
 18026                           	psect	text62
 18027  0164DE                     __ptext62:
 18028                           	opt stack 0
 18029  0164DE                     _ADCC_IsConversionDone:
 18030                           	opt stack 9
 18031                           
 18032                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 18033                           
 18034                           ;incstack = 0
 18035  0164DE  B060               	btfsc	3936,0,c	;volatile
 18036  0164E0  D002               	goto	i1u685_20
 18037  0164E2  0E01               	movlw	1
 18038  0164E4  0012               	return	
 18039  0164E6                     i1u685_20:
 18040  0164E6  0E00               	movlw	0
 18041  0164E8  0012               	return	
 18042  0164EA                     __end_of_ADCC_IsConversionDone:
 18043                           	opt stack 0
 18044                           tosu	equ	0xFFF
 18045                           tosh	equ	0xFFE
 18046                           tosl	equ	0xFFD
 18047                           pclatu	equ	0xFFB
 18048                           pclath	equ	0xFFA
 18049                           tblptru	equ	0xFF8
 18050                           tblptrh	equ	0xFF7
 18051                           tblptrl	equ	0xFF6
 18052                           tablat	equ	0xFF5
 18053                           prodh	equ	0xFF4
 18054                           prodl	equ	0xFF3
 18055                           intcon	equ	0xFF2
 18056                           postinc0	equ	0xFEE
 18057                           fsr0h	equ	0xFEA
 18058                           fsr0l	equ	0xFE9
 18059                           wreg	equ	0xFE8
 18060                           indf1	equ	0xFE7
 18061                           postdec1	equ	0xFE5
 18062                           fsr1h	equ	0xFE2
 18063                           fsr1l	equ	0xFE1
 18064                           bsr	equ	0xFE0
 18065                           indf2	equ	0xFDF
 18066                           postinc2	equ	0xFDE
 18067                           postdec2	equ	0xFDD
 18068                           fsr2h	equ	0xFDA
 18069                           fsr2l	equ	0xFD9
 18070                           status	equ	0xFD8
 18071                           
 18072 ;; *************** function _TMR7_WriteTimer *****************
 18073 ;; Defined at:
 18074 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 18075 ;; Parameters:    Size  Location     Type
 18076 ;;  timerVal        2    0[BANK1 ] unsigned int 
 18077 ;; Auto vars:     Size  Location     Type
 18078 ;;		None
 18079 ;; Return value:  Size  Location     Type
 18080 ;;                  1    wreg      void 
 18081 ;; Registers used:
 18082 ;;		wreg, status,2
 18083 ;; Tracked objects:
 18084 ;;		On entry : 0/0
 18085 ;;		On exit  : 0/0
 18086 ;;		Unchanged: 0/0
 18087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18088 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18091 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18092 ;;Total ram usage:        2 bytes
 18093 ;; Hardware stack levels used:    1
 18094 ;; Hardware stack levels required when called:   10
 18095 ;; This function calls:
 18096 ;;		Nothing
 18097 ;; This function is called by:
 18098 ;;		_TMR7_ISR
 18099 ;;		_TMR7_Reload
 18100 ;; This function uses a non-reentrant model
 18101 ;;
 18102                           
 18103                           	psect	text63
 18104  0162D0                     __ptext63:
 18105                           	opt stack 0
 18106  0162D0                     _TMR7_WriteTimer:
 18107                           	opt stack 10
 18108                           
 18109                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 18110                           
 18111                           ;incstack = 0
 18112  0162D0  010F               	movlb	15	; () banked
 18113  0162D2  A530               	btfss	48,2,b	;volatile
 18114  0162D4  D009               	goto	i1l626
 18115                           
 18116                           ; BSR set to: 15
 18117                           ;tmr7.c: 130: {
 18118                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 18119  0162D6  9130               	bcf	48,0,b	;volatile
 18120                           
 18121                           ; BSR set to: 15
 18122                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 18123  0162D8  0101               	movlb	1	; () banked
 18124  0162DA  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 18125  0162DC  010F               	movlb	15	; () banked
 18126  0162DE  6F2F               	movwf	47,b	;volatile
 18127                           
 18128                           ; BSR set to: 15
 18129                           ;tmr7.c: 136: TMR7L = timerVal;
 18130  0162E0  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 18131                           
 18132                           ; BSR set to: 15
 18133                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 18134  0162E4  8130               	bsf	48,0,b	;volatile
 18135                           
 18136                           ;tmr7.c: 140: }
 18137  0162E6  0012               	return	
 18138  0162E8                     i1l626:
 18139                           
 18140                           ; BSR set to: 15
 18141                           ;tmr7.c: 141: else
 18142                           ;tmr7.c: 142: {
 18143                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 18144                           
 18145                           ; BSR set to: 15
 18146  0162E8  0101               	movlb	1	; () banked
 18147  0162EA  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 18148  0162EC  010F               	movlb	15	; () banked
 18149  0162EE  6F2F               	movwf	47,b	;volatile
 18150                           
 18151                           ; BSR set to: 15
 18152                           ;tmr7.c: 145: TMR7L = timerVal;
 18153  0162F0  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 18154  0162F4  0012               	return	
 18155  0162F6                     __end_of_TMR7_WriteTimer:
 18156                           	opt stack 0
 18157                           tosu	equ	0xFFF
 18158                           tosh	equ	0xFFE
 18159                           tosl	equ	0xFFD
 18160                           pclatu	equ	0xFFB
 18161                           pclath	equ	0xFFA
 18162                           tblptru	equ	0xFF8
 18163                           tblptrh	equ	0xFF7
 18164                           tblptrl	equ	0xFF6
 18165                           tablat	equ	0xFF5
 18166                           prodh	equ	0xFF4
 18167                           prodl	equ	0xFF3
 18168                           intcon	equ	0xFF2
 18169                           postinc0	equ	0xFEE
 18170                           fsr0h	equ	0xFEA
 18171                           fsr0l	equ	0xFE9
 18172                           wreg	equ	0xFE8
 18173                           indf1	equ	0xFE7
 18174                           postdec1	equ	0xFE5
 18175                           fsr1h	equ	0xFE2
 18176                           fsr1l	equ	0xFE1
 18177                           bsr	equ	0xFE0
 18178                           indf2	equ	0xFDF
 18179                           postinc2	equ	0xFDE
 18180                           postdec2	equ	0xFDD
 18181                           fsr2h	equ	0xFDA
 18182                           fsr2l	equ	0xFD9
 18183                           status	equ	0xFD8
 18184                           
 18185 ;; *************** function _TMR6_ISR *****************
 18186 ;; Defined at:
 18187 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 18188 ;; Parameters:    Size  Location     Type
 18189 ;;		None
 18190 ;; Auto vars:     Size  Location     Type
 18191 ;;		None
 18192 ;; Return value:  Size  Location     Type
 18193 ;;                  1    wreg      void 
 18194 ;; Registers used:
 18195 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18196 ;; Tracked objects:
 18197 ;;		On entry : 0/0
 18198 ;;		On exit  : 0/0
 18199 ;;		Unchanged: 0/0
 18200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18205 ;;Total ram usage:        0 bytes
 18206 ;; Hardware stack levels used:    1
 18207 ;; Hardware stack levels required when called:   11
 18208 ;; This function calls:
 18209 ;;		Absolute function
 18210 ;;		_TMR6_DefaultInterruptHandler
 18211 ;;		_heartbeatTimerCallback
 18212 ;; This function is called by:
 18213 ;;		_INTERRUPT_InterruptManagerLow
 18214 ;; This function uses a non-reentrant model
 18215 ;;
 18216                           
 18217                           	psect	text64
 18218  01625A                     __ptext64:
 18219                           	opt stack 0
 18220  01625A                     _TMR6_ISR:
 18221                           	opt stack 10
 18222                           
 18223                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 18224                           
 18225                           ; BSR set to: 15
 18226                           ;incstack = 0
 18227  01625A  010E               	movlb	14	; () banked
 18228  01625C  9B38               	bcf	56,5,b	;volatile
 18229                           
 18230                           ; BSR set to: 14
 18231                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 18232  01625E  0101               	movlb	1	; () banked
 18233  016260  51D0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18234  016262  11D1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18235  016264  11D2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18236  016266  B4D8               	btfsc	status,2,c
 18237  016268  0012               	return	
 18238                           
 18239                           ; BSR set to: 1
 18240                           ;tmr6.c: 172: {
 18241                           ;tmr6.c: 173: TMR6_InterruptHandler();
 18242  01626A  D801               	call	i1u1616_28
 18243  01626C  0012               	return	
 18244  01626E                     i1u1616_28:
 18245  01626E  0005               	push	
 18246  016270  6EFA               	movwf	pclath,c
 18247  016272  51D0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18248  016274  6EFD               	movwf	tosl,c
 18249  016276  51D1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18250  016278  6EFE               	movwf	tosh,c
 18251  01627A  51D2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18252  01627C  6EFF               	movwf	tosu,c
 18253  01627E  50FA               	movf	pclath,w,c
 18254  016280  0012               	return		;indir
 18255  016282                     __end_of_TMR6_ISR:
 18256                           	opt stack 0
 18257                           tosu	equ	0xFFF
 18258                           tosh	equ	0xFFE
 18259                           tosl	equ	0xFFD
 18260                           pclatu	equ	0xFFB
 18261                           pclath	equ	0xFFA
 18262                           tblptru	equ	0xFF8
 18263                           tblptrh	equ	0xFF7
 18264                           tblptrl	equ	0xFF6
 18265                           tablat	equ	0xFF5
 18266                           prodh	equ	0xFF4
 18267                           prodl	equ	0xFF3
 18268                           intcon	equ	0xFF2
 18269                           postinc0	equ	0xFEE
 18270                           fsr0h	equ	0xFEA
 18271                           fsr0l	equ	0xFE9
 18272                           wreg	equ	0xFE8
 18273                           indf1	equ	0xFE7
 18274                           postdec1	equ	0xFE5
 18275                           fsr1h	equ	0xFE2
 18276                           fsr1l	equ	0xFE1
 18277                           bsr	equ	0xFE0
 18278                           indf2	equ	0xFDF
 18279                           postinc2	equ	0xFDE
 18280                           postdec2	equ	0xFDD
 18281                           fsr2h	equ	0xFDA
 18282                           fsr2l	equ	0xFD9
 18283                           status	equ	0xFD8
 18284                           
 18285 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 18286 ;; Defined at:
 18287 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 18288 ;; Parameters:    Size  Location     Type
 18289 ;;		None
 18290 ;; Auto vars:     Size  Location     Type
 18291 ;;		None
 18292 ;; Return value:  Size  Location     Type
 18293 ;;                  1    wreg      void 
 18294 ;; Registers used:
 18295 ;;		None
 18296 ;; Tracked objects:
 18297 ;;		On entry : 0/0
 18298 ;;		On exit  : 0/0
 18299 ;;		Unchanged: 0/0
 18300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18305 ;;Total ram usage:        0 bytes
 18306 ;; Hardware stack levels used:    1
 18307 ;; Hardware stack levels required when called:   10
 18308 ;; This function calls:
 18309 ;;		Nothing
 18310 ;; This function is called by:
 18311 ;;		_TMR6_Initialize
 18312 ;;		_TMR6_ISR
 18313 ;; This function uses a non-reentrant model
 18314 ;;
 18315                           
 18316                           	psect	text65
 18317  0164FE                     __ptext65:
 18318                           	opt stack 0
 18319  0164FE                     _TMR6_DefaultInterruptHandler:
 18320                           	opt stack 10
 18321                           
 18322                           ;incstack = 0
 18323  0164FE  0012               	return		;funcret
 18324  016500                     __end_of_TMR6_DefaultInterruptHandler:
 18325                           	opt stack 0
 18326                           tosu	equ	0xFFF
 18327                           tosh	equ	0xFFE
 18328                           tosl	equ	0xFFD
 18329                           pclatu	equ	0xFFB
 18330                           pclath	equ	0xFFA
 18331                           tblptru	equ	0xFF8
 18332                           tblptrh	equ	0xFF7
 18333                           tblptrl	equ	0xFF6
 18334                           tablat	equ	0xFF5
 18335                           prodh	equ	0xFF4
 18336                           prodl	equ	0xFF3
 18337                           intcon	equ	0xFF2
 18338                           postinc0	equ	0xFEE
 18339                           fsr0h	equ	0xFEA
 18340                           fsr0l	equ	0xFE9
 18341                           wreg	equ	0xFE8
 18342                           indf1	equ	0xFE7
 18343                           postdec1	equ	0xFE5
 18344                           fsr1h	equ	0xFE2
 18345                           fsr1l	equ	0xFE1
 18346                           bsr	equ	0xFE0
 18347                           indf2	equ	0xFDF
 18348                           postinc2	equ	0xFDE
 18349                           postdec2	equ	0xFDD
 18350                           fsr2h	equ	0xFDA
 18351                           fsr2l	equ	0xFD9
 18352                           status	equ	0xFD8
 18353                           
 18354 ;; *************** function _heartbeatTimerCallback *****************
 18355 ;; Defined at:
 18356 ;;		line 126 in file "main.c"
 18357 ;; Parameters:    Size  Location     Type
 18358 ;;		None
 18359 ;; Auto vars:     Size  Location     Type
 18360 ;;		None
 18361 ;; Return value:  Size  Location     Type
 18362 ;;                  1    wreg      void 
 18363 ;; Registers used:
 18364 ;;		wreg, status,2, status,0
 18365 ;; Tracked objects:
 18366 ;;		On entry : 0/0
 18367 ;;		On exit  : 0/0
 18368 ;;		Unchanged: 0/0
 18369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18372 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18373 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18374 ;;Total ram usage:        1 bytes
 18375 ;; Hardware stack levels used:    1
 18376 ;; Hardware stack levels required when called:   10
 18377 ;; This function calls:
 18378 ;;		Nothing
 18379 ;; This function is called by:
 18380 ;;		_main
 18381 ;;		_TMR6_ISR
 18382 ;; This function uses a non-reentrant model
 18383 ;;
 18384                           
 18385                           	psect	text66
 18386  016058                     __ptext66:
 18387                           	opt stack 0
 18388  016058                     _heartbeatTimerCallback:
 18389                           	opt stack 10
 18390                           
 18391                           ;main.c: 129: LATFbits.LATF2 = !LATFbits.LATF2;
 18392                           
 18393                           ;incstack = 0
 18394  016058  B47E               	btfsc	3966,2,c	;volatile
 18395  01605A  D004               	goto	i1u741_20
 18396  01605C  0101               	movlb	1	; () banked
 18397  01605E  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 18398  016060  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 18399  016062  D002               	goto	i1u742_28
 18400  016064                     i1u741_20:
 18401  016064  0101               	movlb	1	; () banked
 18402  016066  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 18403  016068                     i1u742_28:
 18404  016068  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 18405  01606A  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 18406  01606C  507E               	movf	3966,w,c	;volatile
 18407  01606E  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 18408  016070  0BFB               	andlw	-5
 18409  016072  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 18410  016074  6E7E               	movwf	3966,c	;volatile
 18411                           
 18412                           ;main.c: 132: dev_on_time++;
 18413  016076  0E01               	movlw	1
 18414  016078  27BD               	addwf	_dev_on_time& (0+255),f,b	;volatile
 18415  01607A  0E00               	movlw	0
 18416  01607C  23BE               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 18417  01607E  23BF               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 18418  016080  23C0               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 18419                           
 18420                           ; BSR set to: 1
 18421                           ;main.c: 135: if (load_enable) {
 18422  016082  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 18423  016084  D006               	goto	i1l816
 18424                           
 18425                           ; BSR set to: 1
 18426                           ;main.c: 137: load_on_time++;
 18427  016086  0E01               	movlw	1
 18428  016088  27B9               	addwf	_load_on_time& (0+255),f,b	;volatile
 18429  01608A  0E00               	movlw	0
 18430  01608C  23BA               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 18431  01608E  23BB               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 18432  016090  23BC               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 18433  016092                     i1l816:
 18434                           
 18435                           ; BSR set to: 1
 18436  016092  0004               	clrwdt		;# 
 18437  016094  0012               	return		;funcret
 18438  016096                     __end_of_heartbeatTimerCallback:
 18439                           	opt stack 0
 18440                           tosu	equ	0xFFF
 18441                           tosh	equ	0xFFE
 18442                           tosl	equ	0xFFD
 18443                           pclatu	equ	0xFFB
 18444                           pclath	equ	0xFFA
 18445                           tblptru	equ	0xFF8
 18446                           tblptrh	equ	0xFF7
 18447                           tblptrl	equ	0xFF6
 18448                           tablat	equ	0xFF5
 18449                           prodh	equ	0xFF4
 18450                           prodl	equ	0xFF3
 18451                           intcon	equ	0xFF2
 18452                           postinc0	equ	0xFEE
 18453                           fsr0h	equ	0xFEA
 18454                           fsr0l	equ	0xFE9
 18455                           wreg	equ	0xFE8
 18456                           indf1	equ	0xFE7
 18457                           postdec1	equ	0xFE5
 18458                           fsr1h	equ	0xFE2
 18459                           fsr1l	equ	0xFE1
 18460                           bsr	equ	0xFE0
 18461                           indf2	equ	0xFDF
 18462                           postinc2	equ	0xFDE
 18463                           postdec2	equ	0xFDD
 18464                           fsr2h	equ	0xFDA
 18465                           fsr2l	equ	0xFD9
 18466                           status	equ	0xFD8
 18467                           
 18468 ;; *************** function _EUSART2_Transmit_ISR *****************
 18469 ;; Defined at:
 18470 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 18471 ;; Parameters:    Size  Location     Type
 18472 ;;		None
 18473 ;; Auto vars:     Size  Location     Type
 18474 ;;		None
 18475 ;; Return value:  Size  Location     Type
 18476 ;;                  1    wreg      void 
 18477 ;; Registers used:
 18478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18479 ;; Tracked objects:
 18480 ;;		On entry : 0/0
 18481 ;;		On exit  : 0/0
 18482 ;;		Unchanged: 0/0
 18483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18488 ;;Total ram usage:        0 bytes
 18489 ;; Hardware stack levels used:    1
 18490 ;; Hardware stack levels required when called:   10
 18491 ;; This function calls:
 18492 ;;		Nothing
 18493 ;; This function is called by:
 18494 ;;		_EUSART2_Initialize
 18495 ;;		_INTERRUPT_InterruptManagerLow
 18496 ;; This function uses a non-reentrant model
 18497 ;;
 18498                           
 18499                           	psect	text67
 18500  016108                     __ptext67:
 18501                           	opt stack 0
 18502  016108                     _EUSART2_Transmit_ISR:
 18503                           	opt stack 11
 18504                           
 18505                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 18506                           
 18507                           ;incstack = 0
 18508  016108  0E80               	movlw	128
 18509  01610A  0101               	movlb	1	; () banked
 18510  01610C  61DC               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 18511  01610E  D014               	goto	i1l389
 18512                           
 18513                           ; BSR set to: 1
 18514                           ;eusart2.c: 190: {
 18515                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 18516  016110  51DD               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 18517  016112  0D01               	mullw	1
 18518  016114  0E00               	movlw	low _eusart2TxBuffer
 18519  016116  24F3               	addwf	prodl,w,c
 18520  016118  6ED9               	movwf	fsr2l,c
 18521  01611A  0E02               	movlw	high _eusart2TxBuffer
 18522  01611C  20F4               	addwfc	prodh,w,c
 18523  01611E  6EDA               	movwf	fsr2h,c
 18524  016120  50DF               	movf	indf2,w,c
 18525  016122  010E               	movlb	14	; () banked
 18526  016124  6FF2               	movwf	242,b	;volatile
 18527                           
 18528                           ; BSR set to: 14
 18529  016126  0101               	movlb	1	; () banked
 18530  016128  2BDD               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 18531                           
 18532                           ; BSR set to: 1
 18533                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 18534  01612A  0E7F               	movlw	127
 18535  01612C  65DD               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 18536  01612E  D002               	goto	i1l390
 18537                           
 18538                           ; BSR set to: 1
 18539                           ;eusart2.c: 193: {
 18540                           ;eusart2.c: 194: eusart2TxTail = 0;
 18541  016130  0E00               	movlw	0
 18542  016132  6FDD               	movwf	_eusart2TxTail& (0+255),b	;volatile
 18543  016134                     i1l390:
 18544                           
 18545                           ; BSR set to: 1
 18546                           ;eusart2.c: 195: }
 18547                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 18548                           
 18549                           ; BSR set to: 1
 18550  016134  2BDC               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18551                           
 18552                           ;eusart2.c: 197: }
 18553  016136  0012               	return	
 18554  016138                     i1l389:
 18555                           
 18556                           ; BSR set to: 1
 18557                           ;eusart2.c: 198: else
 18558                           ;eusart2.c: 199: {
 18559                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 18560  016138  010E               	movlb	14	; () banked
 18561  01613A  9D2C               	bcf	44,6,b	;volatile
 18562  01613C  0012               	return	
 18563  01613E                     __end_of_EUSART2_Transmit_ISR:
 18564                           	opt stack 0
 18565                           tosu	equ	0xFFF
 18566                           tosh	equ	0xFFE
 18567                           tosl	equ	0xFFD
 18568                           pclatu	equ	0xFFB
 18569                           pclath	equ	0xFFA
 18570                           tblptru	equ	0xFF8
 18571                           tblptrh	equ	0xFF7
 18572                           tblptrl	equ	0xFF6
 18573                           tablat	equ	0xFF5
 18574                           prodh	equ	0xFF4
 18575                           prodl	equ	0xFF3
 18576                           intcon	equ	0xFF2
 18577                           postinc0	equ	0xFEE
 18578                           fsr0h	equ	0xFEA
 18579                           fsr0l	equ	0xFE9
 18580                           wreg	equ	0xFE8
 18581                           indf1	equ	0xFE7
 18582                           postdec1	equ	0xFE5
 18583                           fsr1h	equ	0xFE2
 18584                           fsr1l	equ	0xFE1
 18585                           bsr	equ	0xFE0
 18586                           indf2	equ	0xFDF
 18587                           postinc2	equ	0xFDE
 18588                           postdec2	equ	0xFDD
 18589                           fsr2h	equ	0xFDA
 18590                           fsr2l	equ	0xFD9
 18591                           status	equ	0xFD8
 18592                           
 18593 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 18594 ;; Defined at:
 18595 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;		None
 18598 ;; Auto vars:     Size  Location     Type
 18599 ;;		None
 18600 ;; Return value:  Size  Location     Type
 18601 ;;                  1    wreg      void 
 18602 ;; Registers used:
 18603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18604 ;; Tracked objects:
 18605 ;;		On entry : 0/0
 18606 ;;		On exit  : 0/0
 18607 ;;		Unchanged: 0/0
 18608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18611 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18612 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18613 ;;Total ram usage:       18 bytes
 18614 ;; Hardware stack levels used:    1
 18615 ;; Hardware stack levels required when called:    9
 18616 ;; This function calls:
 18617 ;;		Absolute function
 18618 ;;		_ADCC_ISR
 18619 ;;		_EUSART2_Receive_ISR
 18620 ;;		_TMR5_ISR
 18621 ;; This function is called by:
 18622 ;;		Interrupt level 2
 18623 ;; This function uses a non-reentrant model
 18624 ;;
 18625                           
 18626                           	psect	intcode
 18627  000008                     __pintcode:
 18628                           	opt stack 0
 18629  000008                     _INTERRUPT_InterruptManagerHigh:
 18630                           	opt stack 9
 18631                           
 18632                           ;incstack = 0
 18633  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18634  00000A  EF9E  F0A7         	goto	int_func
 18635                           tosu	equ	0xFFF
 18636                           tosh	equ	0xFFE
 18637                           tosl	equ	0xFFD
 18638                           pclatu	equ	0xFFB
 18639                           pclath	equ	0xFFA
 18640                           tblptru	equ	0xFF8
 18641                           tblptrh	equ	0xFF7
 18642                           tblptrl	equ	0xFF6
 18643                           tablat	equ	0xFF5
 18644                           prodh	equ	0xFF4
 18645                           prodl	equ	0xFF3
 18646                           intcon	equ	0xFF2
 18647                           postinc0	equ	0xFEE
 18648                           fsr0h	equ	0xFEA
 18649                           fsr0l	equ	0xFE9
 18650                           wreg	equ	0xFE8
 18651                           indf1	equ	0xFE7
 18652                           postdec1	equ	0xFE5
 18653                           fsr1h	equ	0xFE2
 18654                           fsr1l	equ	0xFE1
 18655                           bsr	equ	0xFE0
 18656                           indf2	equ	0xFDF
 18657                           postinc2	equ	0xFDE
 18658                           postdec2	equ	0xFDD
 18659                           fsr2h	equ	0xFDA
 18660                           fsr2l	equ	0xFD9
 18661                           status	equ	0xFD8
 18662                           
 18663                           	psect	intcode_body
 18664  014F3C                     __pintcode_body:
 18665                           	opt stack 9
 18666  014F3C                     int_func:
 18667                           	opt stack 9
 18668  014F3C  CFFA F0B6          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 18669  014F40  CFFB F0B7          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 18670  014F44  CFE9 F0B8          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 18671  014F48  CFEA F0B9          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 18672  014F4C  CFE1 F0BA          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 18673  014F50  CFE2 F0BB          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 18674  014F54  CFD9 F0BC          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 18675  014F58  CFDA F0BD          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 18676  014F5C  CFF3 F0BE          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 18677  014F60  CFF4 F0BF          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 18678  014F64  CFF6 F0C0          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 18679  014F68  CFF7 F0C1          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 18680  014F6C  CFF8 F0C2          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 18681  014F70  CFF5 F0C3          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 18682  014F74  C05F  F0C4         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 18683  014F78  C060  F0C5         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 18684  014F7C  C061  F0C6         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 18685  014F80  C062  F0C7         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 18686                           
 18687                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 18688  014F84  010E               	movlb	14	; () banked
 18689  014F86  BF2C               	btfsc	44,7,b	;volatile
 18690                           
 18691                           ; BSR set to: 14
 18692  014F88  AF36               	btfss	54,7,b	;volatile
 18693  014F8A  D00D               	goto	i2l202
 18694                           
 18695                           ; BSR set to: 14
 18696                           ;interrupt_manager.c: 84: {
 18697                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 18698  014F8C  D801               	call	i2u1627_48
 18699  014F8E  D016               	goto	i2l206
 18700  014F90                     i2u1627_48:
 18701  014F90  0005               	push	
 18702  014F92  6EFA               	movwf	pclath,c
 18703  014F94  0100               	movlb	0	; () banked
 18704  014F96  51E3               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 18705  014F98  6EFD               	movwf	tosl,c
 18706  014F9A  51E4               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 18707  014F9C  6EFE               	movwf	tosh,c
 18708  014F9E  51E5               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 18709  014FA0  6EFF               	movwf	tosu,c
 18710  014FA2  50FA               	movf	pclath,w,c
 18711  014FA4  0012               	return		;indir
 18712  014FA6                     i2l202:
 18713                           
 18714                           ; BSR set to: 14
 18715                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 18716  014FA6  B92E               	btfsc	46,4,b	;volatile
 18717                           
 18718                           ; BSR set to: 14
 18719  014FA8  A938               	btfss	56,4,b	;volatile
 18720  014FAA  D003               	goto	i2l204
 18721                           
 18722                           ; BSR set to: 14
 18723                           ;interrupt_manager.c: 88: {
 18724                           ;interrupt_manager.c: 89: TMR5_ISR();
 18725  014FAC  ECB9  F0B0         	call	_TMR5_ISR	;wreg free
 18726                           
 18727                           ;interrupt_manager.c: 90: }
 18728  014FB0  D005               	goto	i2l206
 18729  014FB2                     i2l204:
 18730                           
 18731                           ; BSR set to: 14
 18732                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 18733  014FB2  B12A               	btfsc	42,0,b	;volatile
 18734                           
 18735                           ; BSR set to: 14
 18736  014FB4  A134               	btfss	52,0,b	;volatile
 18737  014FB6  D002               	goto	i2l206
 18738                           
 18739                           ; BSR set to: 14
 18740                           ;interrupt_manager.c: 92: {
 18741                           ;interrupt_manager.c: 93: ADCC_ISR();
 18742  014FB8  EC41  F0B1         	call	_ADCC_ISR	;wreg free
 18743  014FBC                     i2l206:
 18744                           
 18745                           ;interrupt_manager.c: 95: else
 18746                           ;interrupt_manager.c: 96: {
 18747  014FBC  C0C7  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 18748  014FC0  C0C6  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 18749  014FC4  C0C5  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 18750  014FC8  C0C4  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 18751  014FCC  C0C3  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 18752  014FD0  C0C2  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 18753  014FD4  C0C1  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 18754  014FD8  C0C0  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 18755  014FDC  C0BF  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 18756  014FE0  C0BE  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 18757  014FE4  C0BD  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 18758  014FE8  C0BC  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 18759  014FEC  C0BB  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 18760  014FF0  C0BA  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 18761  014FF4  C0B9  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 18762  014FF8  C0B8  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 18763  014FFC  C0B7  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 18764  015000  C0B6  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 18765  015004  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18766  015006  0011               	retfie		f
 18767  015008                     __end_of_INTERRUPT_InterruptManagerHigh:
 18768                           	opt stack 0
 18769                           tosu	equ	0xFFF
 18770                           tosh	equ	0xFFE
 18771                           tosl	equ	0xFFD
 18772                           pclatu	equ	0xFFB
 18773                           pclath	equ	0xFFA
 18774                           tblptru	equ	0xFF8
 18775                           tblptrh	equ	0xFF7
 18776                           tblptrl	equ	0xFF6
 18777                           tablat	equ	0xFF5
 18778                           prodh	equ	0xFF4
 18779                           prodl	equ	0xFF3
 18780                           intcon	equ	0xFF2
 18781                           postinc0	equ	0xFEE
 18782                           fsr0h	equ	0xFEA
 18783                           fsr0l	equ	0xFE9
 18784                           wreg	equ	0xFE8
 18785                           indf1	equ	0xFE7
 18786                           postdec1	equ	0xFE5
 18787                           fsr1h	equ	0xFE2
 18788                           fsr1l	equ	0xFE1
 18789                           bsr	equ	0xFE0
 18790                           indf2	equ	0xFDF
 18791                           postinc2	equ	0xFDE
 18792                           postdec2	equ	0xFDD
 18793                           fsr2h	equ	0xFDA
 18794                           fsr2l	equ	0xFD9
 18795                           status	equ	0xFD8
 18796                           
 18797 ;; *************** function _TMR5_ISR *****************
 18798 ;; Defined at:
 18799 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:    1
 18820 ;; This function calls:
 18821 ;;		Absolute function
 18822 ;;		_TMR5_DefaultInterruptHandler
 18823 ;;		_TMR5_WriteTimer
 18824 ;; This function is called by:
 18825 ;;		_INTERRUPT_InterruptManagerHigh
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829                           	psect	text69
 18830  016172                     __ptext69:
 18831                           	opt stack 0
 18832  016172                     _TMR5_ISR:
 18833                           	opt stack 16
 18834                           
 18835                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 18836                           
 18837                           ;incstack = 0
 18838  016172  010E               	movlb	14	; () banked
 18839  016174  9938               	bcf	56,4,b	;volatile
 18840                           
 18841                           ; BSR set to: 14
 18842                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 18843  016176  C1D6  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 18844  01617A  C1D7  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 18845  01617E  ECEE  F0B1         	call	_TMR5_WriteTimer	;wreg free
 18846                           
 18847                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 18848  016182  0101               	movlb	1	; () banked
 18849  016184  51CA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18850  016186  11CB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18851  016188  11CC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18852  01618A  B4D8               	btfsc	status,2,c
 18853  01618C  0012               	return	
 18854                           
 18855                           ; BSR set to: 1
 18856                           ;tmr5.c: 172: {
 18857                           ;tmr5.c: 173: TMR5_InterruptHandler();
 18858  01618E  D801               	call	i2u1612_48
 18859  016190  0012               	return	
 18860  016192                     i2u1612_48:
 18861  016192  0005               	push	
 18862  016194  6EFA               	movwf	pclath,c
 18863  016196  51CA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18864  016198  6EFD               	movwf	tosl,c
 18865  01619A  51CB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18866  01619C  6EFE               	movwf	tosh,c
 18867  01619E  51CC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18868  0161A0  6EFF               	movwf	tosu,c
 18869  0161A2  50FA               	movf	pclath,w,c
 18870  0161A4  0012               	return		;indir
 18871  0161A6                     __end_of_TMR5_ISR:
 18872                           	opt stack 0
 18873                           tosu	equ	0xFFF
 18874                           tosh	equ	0xFFE
 18875                           tosl	equ	0xFFD
 18876                           pclatu	equ	0xFFB
 18877                           pclath	equ	0xFFA
 18878                           tblptru	equ	0xFF8
 18879                           tblptrh	equ	0xFF7
 18880                           tblptrl	equ	0xFF6
 18881                           tablat	equ	0xFF5
 18882                           prodh	equ	0xFF4
 18883                           prodl	equ	0xFF3
 18884                           intcon	equ	0xFF2
 18885                           postinc0	equ	0xFEE
 18886                           fsr0h	equ	0xFEA
 18887                           fsr0l	equ	0xFE9
 18888                           wreg	equ	0xFE8
 18889                           indf1	equ	0xFE7
 18890                           postdec1	equ	0xFE5
 18891                           fsr1h	equ	0xFE2
 18892                           fsr1l	equ	0xFE1
 18893                           bsr	equ	0xFE0
 18894                           indf2	equ	0xFDF
 18895                           postinc2	equ	0xFDE
 18896                           postdec2	equ	0xFDD
 18897                           fsr2h	equ	0xFDA
 18898                           fsr2l	equ	0xFD9
 18899                           status	equ	0xFD8
 18900                           
 18901 ;; *************** function _TMR5_WriteTimer *****************
 18902 ;; Defined at:
 18903 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 18904 ;; Parameters:    Size  Location     Type
 18905 ;;  timerVal        2    0[COMRAM] unsigned int 
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;		None
 18908 ;; Return value:  Size  Location     Type
 18909 ;;                  1    wreg      void 
 18910 ;; Registers used:
 18911 ;;		wreg, status,2
 18912 ;; Tracked objects:
 18913 ;;		On entry : 0/0
 18914 ;;		On exit  : 0/0
 18915 ;;		Unchanged: 0/0
 18916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18921 ;;Total ram usage:        2 bytes
 18922 ;; Hardware stack levels used:    1
 18923 ;; This function calls:
 18924 ;;		Nothing
 18925 ;; This function is called by:
 18926 ;;		_TMR5_ISR
 18927 ;;		_TMR5_Reload
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931                           	psect	text70
 18932  0163DC                     __ptext70:
 18933                           	opt stack 0
 18934  0163DC                     _TMR5_WriteTimer:
 18935                           	opt stack 16
 18936                           
 18937                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 18938                           
 18939                           ;incstack = 0
 18940  0163DC  A4C3               	btfss	4035,2,c	;volatile
 18941  0163DE  D007               	goto	i2l700
 18942                           
 18943                           ;tmr5.c: 130: {
 18944                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 18945  0163E0  90C3               	bcf	4035,0,c	;volatile
 18946                           
 18947                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 18948  0163E2  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18949  0163E4  6EC2               	movwf	4034,c	;volatile
 18950                           
 18951                           ;tmr5.c: 136: TMR5L = timerVal;
 18952  0163E6  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18953                           
 18954                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 18955  0163EA  80C3               	bsf	4035,0,c	;volatile
 18956                           
 18957                           ;tmr5.c: 140: }
 18958  0163EC  0012               	return	
 18959  0163EE                     i2l700:
 18960                           
 18961                           ;tmr5.c: 141: else
 18962                           ;tmr5.c: 142: {
 18963                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 18964  0163EE  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18965  0163F0  6EC2               	movwf	4034,c	;volatile
 18966                           
 18967                           ;tmr5.c: 145: TMR5L = timerVal;
 18968  0163F2  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18969  0163F6  0012               	return	
 18970  0163F8                     __end_of_TMR5_WriteTimer:
 18971                           	opt stack 0
 18972                           tosu	equ	0xFFF
 18973                           tosh	equ	0xFFE
 18974                           tosl	equ	0xFFD
 18975                           pclatu	equ	0xFFB
 18976                           pclath	equ	0xFFA
 18977                           tblptru	equ	0xFF8
 18978                           tblptrh	equ	0xFF7
 18979                           tblptrl	equ	0xFF6
 18980                           tablat	equ	0xFF5
 18981                           prodh	equ	0xFF4
 18982                           prodl	equ	0xFF3
 18983                           intcon	equ	0xFF2
 18984                           postinc0	equ	0xFEE
 18985                           fsr0h	equ	0xFEA
 18986                           fsr0l	equ	0xFE9
 18987                           wreg	equ	0xFE8
 18988                           indf1	equ	0xFE7
 18989                           postdec1	equ	0xFE5
 18990                           fsr1h	equ	0xFE2
 18991                           fsr1l	equ	0xFE1
 18992                           bsr	equ	0xFE0
 18993                           indf2	equ	0xFDF
 18994                           postinc2	equ	0xFDE
 18995                           postdec2	equ	0xFDD
 18996                           fsr2h	equ	0xFDA
 18997                           fsr2l	equ	0xFD9
 18998                           status	equ	0xFD8
 18999                           
 19000 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 19001 ;; Defined at:
 19002 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 19003 ;; Parameters:    Size  Location     Type
 19004 ;;		None
 19005 ;; Auto vars:     Size  Location     Type
 19006 ;;		None
 19007 ;; Return value:  Size  Location     Type
 19008 ;;                  1    wreg      void 
 19009 ;; Registers used:
 19010 ;;		None
 19011 ;; Tracked objects:
 19012 ;;		On entry : 0/0
 19013 ;;		On exit  : 0/0
 19014 ;;		Unchanged: 0/0
 19015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19020 ;;Total ram usage:        0 bytes
 19021 ;; Hardware stack levels used:    1
 19022 ;; This function calls:
 19023 ;;		Nothing
 19024 ;; This function is called by:
 19025 ;;		_TMR5_Initialize
 19026 ;;		_TMR5_ISR
 19027 ;; This function uses a non-reentrant model
 19028 ;;
 19029                           
 19030                           	psect	text71
 19031  016500                     __ptext71:
 19032                           	opt stack 0
 19033  016500                     _TMR5_DefaultInterruptHandler:
 19034                           	opt stack 16
 19035                           
 19036                           ;incstack = 0
 19037  016500  0012               	return		;funcret
 19038  016502                     __end_of_TMR5_DefaultInterruptHandler:
 19039                           	opt stack 0
 19040                           tosu	equ	0xFFF
 19041                           tosh	equ	0xFFE
 19042                           tosl	equ	0xFFD
 19043                           pclatu	equ	0xFFB
 19044                           pclath	equ	0xFFA
 19045                           tblptru	equ	0xFF8
 19046                           tblptrh	equ	0xFF7
 19047                           tblptrl	equ	0xFF6
 19048                           tablat	equ	0xFF5
 19049                           prodh	equ	0xFF4
 19050                           prodl	equ	0xFF3
 19051                           intcon	equ	0xFF2
 19052                           postinc0	equ	0xFEE
 19053                           fsr0h	equ	0xFEA
 19054                           fsr0l	equ	0xFE9
 19055                           wreg	equ	0xFE8
 19056                           indf1	equ	0xFE7
 19057                           postdec1	equ	0xFE5
 19058                           fsr1h	equ	0xFE2
 19059                           fsr1l	equ	0xFE1
 19060                           bsr	equ	0xFE0
 19061                           indf2	equ	0xFDF
 19062                           postinc2	equ	0xFDE
 19063                           postdec2	equ	0xFDD
 19064                           fsr2h	equ	0xFDA
 19065                           fsr2l	equ	0xFD9
 19066                           status	equ	0xFD8
 19067                           
 19068 ;; *************** function _EUSART2_Receive_ISR *****************
 19069 ;; Defined at:
 19070 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 19071 ;; Parameters:    Size  Location     Type
 19072 ;;		None
 19073 ;; Auto vars:     Size  Location     Type
 19074 ;;		None
 19075 ;; Return value:  Size  Location     Type
 19076 ;;                  1    wreg      void 
 19077 ;; Registers used:
 19078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19079 ;; Tracked objects:
 19080 ;;		On entry : 0/0
 19081 ;;		On exit  : 0/0
 19082 ;;		Unchanged: 0/0
 19083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19088 ;;Total ram usage:        0 bytes
 19089 ;; Hardware stack levels used:    1
 19090 ;; Hardware stack levels required when called:    4
 19091 ;; This function calls:
 19092 ;;		i2_printf
 19093 ;; This function is called by:
 19094 ;;		_EUSART2_Initialize
 19095 ;;		_INTERRUPT_InterruptManagerHigh
 19096 ;; This function uses a non-reentrant model
 19097 ;;
 19098                           
 19099                           	psect	text72
 19100  015166                     __ptext72:
 19101                           	opt stack 0
 19102  015166                     _EUSART2_Receive_ISR:
 19103                           	opt stack 13
 19104                           
 19105                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 19106                           
 19107                           ;incstack = 0
 19108  015166  010E               	movlb	14	; () banked
 19109  015168  A3F5               	btfss	245,1,b	;volatile
 19110  01516A  D002               	goto	i2l395
 19111                           
 19112                           ; BSR set to: 14
 19113                           ;eusart2.c: 208: {
 19114                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 19115  01516C  99F5               	bcf	245,4,b	;volatile
 19116                           
 19117                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 19118  01516E  89F5               	bsf	245,4,b	;volatile
 19119  015170                     i2l395:
 19120                           
 19121                           ; BSR set to: 14
 19122                           ;eusart2.c: 213: }
 19123                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 19124                           
 19125                           ; BSR set to: 14
 19126  015170  0100               	movlb	0	; () banked
 19127  015172  51EB               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 19128  015174  0D01               	mullw	1
 19129  015176  0E80               	movlw	low _eusart2RxBuffer
 19130  015178  24F3               	addwf	prodl,w,c
 19131  01517A  6ED9               	movwf	fsr2l,c
 19132  01517C  0E02               	movlw	high _eusart2RxBuffer
 19133  01517E  20F4               	addwfc	prodh,w,c
 19134  015180  6EDA               	movwf	fsr2h,c
 19135  015182  CEF1 FFDF          	movff	3825,indf2	;volatile
 19136                           
 19137                           ; BSR set to: 0
 19138  015186  2BEB               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 19142  015188  0E3F               	movlw	63
 19143  01518A  65EB               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 19144  01518C  D002               	goto	i2l396
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;eusart2.c: 218: {
 19148                           ;eusart2.c: 219: eusart2RxHead = 0;
 19149  01518E  0E00               	movlw	0
 19150  015190  6FEB               	movwf	_eusart2RxHead& (0+255),b	;volatile
 19151  015192                     i2l396:
 19152                           
 19153                           ; BSR set to: 0
 19154                           ;eusart2.c: 220: }
 19155                           ;eusart2.c: 221: eusart2RxCount++;
 19156                           
 19157                           ; BSR set to: 0
 19158  015192  0101               	movlb	1	; () banked
 19159  015194  2BDA               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 19160                           
 19161                           ; BSR set to: 1
 19162                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 19163  015196  0E0A               	movlw	10
 19164  015198  010E               	movlb	14	; () banked
 19165  01519A  19F1               	xorwf	241,w,b	;volatile
 19166  01519C  B4D8               	btfsc	status,2,c
 19167  01519E  D004               	goto	i2u1622_40
 19168                           
 19169                           ; BSR set to: 14
 19170  0151A0  0E0D               	movlw	13
 19171  0151A2  19F1               	xorwf	241,w,b	;volatile
 19172  0151A4  A4D8               	btfss	status,2,c
 19173  0151A6  D006               	goto	i2l397
 19174  0151A8                     i2u1622_40:
 19175                           
 19176                           ; BSR set to: 14
 19177                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 19178  0151A8  0100               	movlb	0	; () banked
 19179  0151AA  81FD               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;eusart2.c: 232: RC2REG = 0;
 19183  0151AC  0E00               	movlw	0
 19184  0151AE  010E               	movlb	14	; () banked
 19185  0151B0  6FF1               	movwf	241,b	;volatile
 19186                           
 19187                           ;eusart2.c: 234: }
 19188  0151B2  D002               	goto	i2l400
 19189  0151B4                     i2l397:
 19190                           
 19191                           ; BSR set to: 14
 19192                           ;eusart2.c: 236: else {
 19193                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 19194  0151B4  0100               	movlb	0	; () banked
 19195  0151B6  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 19196  0151B8                     i2l400:
 19197                           
 19198                           ;eusart2.c: 240: }
 19199                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 19200                           
 19201                           ; BSR set to: 0
 19202  0151B8  0E08               	movlw	8
 19203  0151BA  010E               	movlb	14	; () banked
 19204  0151BC  19F1               	xorwf	241,w,b	;volatile
 19205  0151BE  A4D8               	btfss	status,2,c
 19206  0151C0  0012               	return	
 19207                           
 19208                           ; BSR set to: 14
 19209                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 19210  0151C2  0100               	movlb	0	; () banked
 19211  0151C4  51EB               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 19212  0151C6  0D01               	mullw	1
 19213  0151C8  0E80               	movlw	low _eusart2RxBuffer
 19214  0151CA  24F3               	addwf	prodl,w,c
 19215  0151CC  6ED9               	movwf	fsr2l,c
 19216  0151CE  0E02               	movlw	high _eusart2RxBuffer
 19217  0151D0  20F4               	addwfc	prodh,w,c
 19218  0151D2  6EDA               	movwf	fsr2h,c
 19219  0151D4  0E00               	movlw	0
 19220  0151D6  6EDF               	movwf	indf2,c
 19221                           
 19222                           ; BSR set to: 0
 19223                           ;eusart2.c: 246: eusart2RxHead--;
 19224  0151D8  07EB               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;eusart2.c: 249: printf("\033[K");
 19228  0151DA  0EC2               	movlw	low STR_1
 19229  0151DC  6F66               	movwf	i2printf@f& (0+255),b
 19230  0151DE  0EFF               	movlw	high STR_1
 19231  0151E0  6F67               	movwf	(i2printf@f+1)& (0+255),b
 19232  0151E2  EC17  F085         	call	i2_printf	;wreg free
 19233                           
 19234                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 19235  0151E6  0101               	movlb	1	; () banked
 19236  0151E8  51DB               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 19237  0151EA  0100               	movlb	0	; () banked
 19238  0151EC  19EB               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 19239  0151EE  B4D8               	btfsc	status,2,c
 19240  0151F0  D00B               	goto	i2l402
 19241                           
 19242                           ; BSR set to: 0
 19243                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 19244  0151F2  51EB               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 19245  0151F4  0D01               	mullw	1
 19246  0151F6  0E80               	movlw	low _eusart2RxBuffer
 19247  0151F8  24F3               	addwf	prodl,w,c
 19248  0151FA  6ED9               	movwf	fsr2l,c
 19249  0151FC  0E02               	movlw	high _eusart2RxBuffer
 19250  0151FE  20F4               	addwfc	prodh,w,c
 19251  015200  6EDA               	movwf	fsr2h,c
 19252  015202  0E00               	movlw	0
 19253  015204  6EDF               	movwf	indf2,c
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;eusart2.c: 254: eusart2RxHead--;
 19257  015206  07EB               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 19258  015208                     i2l402:
 19259                           
 19260                           ; BSR set to: 0
 19261                           ;eusart2.c: 256: }
 19262                           ;eusart2.c: 258: RC2REG = 0;
 19263                           
 19264                           ; BSR set to: 0
 19265  015208  0E00               	movlw	0
 19266  01520A  010E               	movlb	14	; () banked
 19267  01520C  6FF1               	movwf	241,b	;volatile
 19268  01520E  0012               	return	
 19269  015210                     __end_of_EUSART2_Receive_ISR:
 19270                           	opt stack 0
 19271                           tosu	equ	0xFFF
 19272                           tosh	equ	0xFFE
 19273                           tosl	equ	0xFFD
 19274                           pclatu	equ	0xFFB
 19275                           pclath	equ	0xFFA
 19276                           tblptru	equ	0xFF8
 19277                           tblptrh	equ	0xFF7
 19278                           tblptrl	equ	0xFF6
 19279                           tablat	equ	0xFF5
 19280                           prodh	equ	0xFF4
 19281                           prodl	equ	0xFF3
 19282                           intcon	equ	0xFF2
 19283                           postinc0	equ	0xFEE
 19284                           fsr0h	equ	0xFEA
 19285                           fsr0l	equ	0xFE9
 19286                           wreg	equ	0xFE8
 19287                           indf1	equ	0xFE7
 19288                           postdec1	equ	0xFE5
 19289                           fsr1h	equ	0xFE2
 19290                           fsr1l	equ	0xFE1
 19291                           bsr	equ	0xFE0
 19292                           indf2	equ	0xFDF
 19293                           postinc2	equ	0xFDE
 19294                           postdec2	equ	0xFDD
 19295                           fsr2h	equ	0xFDA
 19296                           fsr2l	equ	0xFD9
 19297                           status	equ	0xFD8
 19298                           
 19299 ;; *************** function i2_printf *****************
 19300 ;; Defined at:
 19301 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19302 ;; Parameters:    Size  Location     Type
 19303 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 19304 ;;		 -> STR_94(30), STR_93(23), STR_92(39), STR_91(30), 
 19305 ;;		 -> STR_90(33), STR_89(1509), STR_87(53), STR_85(58), 
 19306 ;;		 -> STR_83(71), STR_82(63), STR_81(37), STR_80(46), 
 19307 ;;		 -> STR_79(102), STR_78(86), STR_76(25), STR_74(42), 
 19308 ;;		 -> STR_72(41), STR_70(40), STR_68(56), STR_66(34), 
 19309 ;;		 -> STR_64(34), STR_62(32), STR_60(37), STR_58(56), 
 19310 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
 19311 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
 19312 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 19313 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 19314 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 19315 ;;		 -> STR_1(4), 
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;  printf          4   35[BANK0 ] unsigned long 
 19318 ;;  printf          4   28[BANK0 ] struct .
 19319 ;;  printf          3   32[BANK0 ] struct .
 19320 ;;  printf          2   39[BANK0 ] int 
 19321 ;;  printf          2   26[BANK0 ] int 
 19322 ;;  printf          2   24[BANK0 ] unsigned short 
 19323 ;;  printf          2   22[BANK0 ] PTR void [1]
 19324 ;;		 -> ?i2_printf(2), ?_printf(2), 
 19325 ;;  printf          2   20[BANK0 ] unsigned int 
 19326 ;;  printf          2   18[BANK0 ] PTR const unsigned char 
 19327 ;;		 -> printf@c(1), 
 19328 ;;  printf          2    0        int 
 19329 ;;  printf          1   41[BANK0 ] char 
 19330 ;;  printf          1   17[BANK0 ] unsigned char 
 19331 ;;  printf          1    0        unsigned char 
 19332 ;; Return value:  Size  Location     Type
 19333 ;;                  2    6[BANK0 ] int 
 19334 ;; Registers used:
 19335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19336 ;; Tracked objects:
 19337 ;;		On entry : 0/0
 19338 ;;		On exit  : 0/0
 19339 ;;		Unchanged: 0/0
 19340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19342 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19343 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19344 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19345 ;;Total ram usage:       36 bytes
 19346 ;; Hardware stack levels used:    1
 19347 ;; Hardware stack levels required when called:    3
 19348 ;; This function calls:
 19349 ;;		i2___awdiv
 19350 ;;		i2___ftadd
 19351 ;;		i2___ftge
 19352 ;;		i2___ftmul
 19353 ;;		i2___ftneg
 19354 ;;		i2___ftsub
 19355 ;;		i2___fttol
 19356 ;;		i2___lldiv
 19357 ;;		i2___llmod
 19358 ;;		i2___lltoft
 19359 ;;		i2___wmul
 19360 ;;		i2__div_to_l_
 19361 ;;		i2__tdiv_to_l_
 19362 ;;		i2_fround
 19363 ;;		i2_isdigit
 19364 ;;		i2_putch
 19365 ;;		i2_scale
 19366 ;; This function is called by:
 19367 ;;		_EUSART2_Receive_ISR
 19368 ;; This function uses a non-reentrant model
 19369 ;;
 19370                           
 19371                           	psect	text73
 19372  010A2E                     __ptext73:
 19373                           	opt stack 0
 19374  010A2E                     i2_printf:
 19375                           	opt stack 13
 19376                           
 19377                           ;doprnt.c: 466: va_list ap;
 19378                           ;doprnt.c: 499: signed char c;
 19379                           ;doprnt.c: 501: int width;
 19380                           ;doprnt.c: 504: int prec;
 19381                           ;doprnt.c: 508: unsigned short flag;
 19382                           ;doprnt.c: 515: char d;
 19383                           ;doprnt.c: 516: double fval;
 19384                           ;doprnt.c: 517: int exp;
 19385                           ;doprnt.c: 523: union {
 19386                           ;doprnt.c: 524: unsigned long vd;
 19387                           ;doprnt.c: 525: double integ;
 19388                           ;doprnt.c: 526: } tmpval;
 19389                           ;doprnt.c: 528: unsigned long val;
 19390                           ;doprnt.c: 529: unsigned len;
 19391                           ;doprnt.c: 530: const char * cp;
 19392                           ;doprnt.c: 533: *ap = __va_start();
 19393                           
 19394                           ; BSR set to: 14
 19395                           ;incstack = 0
 19396  010A2E  0E68               	movlw	low (?i2_printf+2)
 19397  010A30  0100               	movlb	0	; () banked
 19398  010A32  6F76               	movwf	i2printf@ap& (0+255),b
 19399  010A34  0E00               	movlw	high (?i2_printf+2)
 19400  010A36  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 19401                           
 19402                           ;doprnt.c: 536: while(c = *f++) {
 19403  010A38  EF0C  F08A         	goto	i2u1608_40
 19404  010A3C                     
 19405                           ; BSR set to: 0
 19406                           ;doprnt.c: 538: if(c != '%')
 19407                           
 19408                           ; BSR set to: 0
 19409  010A3C  0E25               	movlw	37
 19410  010A3E  1989               	xorwf	i2printf@c& (0+255),w,b
 19411  010A40  B4D8               	btfsc	status,2,c
 19412  010A42  D005               	goto	i2l1107
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;doprnt.c: 540: {
 19416                           ;doprnt.c: 541: (putch(c) );
 19417  010A44  5189               	movf	i2printf@c& (0+255),w,b
 19418  010A46  EC75  F0B2         	call	i2_putch
 19419                           
 19420                           ;doprnt.c: 542: continue;
 19421  010A4A  EF0C  F08A         	goto	i2u1608_40
 19422  010A4E                     i2l1107:
 19423                           
 19424                           ;doprnt.c: 543: }
 19425                           ;doprnt.c: 548: flag = 0;
 19426  010A4E  0E00               	movlw	0
 19427  010A50  0100               	movlb	0	; () banked
 19428  010A52  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 19429  010A54  0E00               	movlw	0
 19430  010A56  6F78               	movwf	i2printf@flag& (0+255),b
 19431                           
 19432                           ; BSR set to: 0
 19433                           ;doprnt.c: 611: if(*f == '.') {
 19434  010A58  C066  FFF6         	movff	i2printf@f,tblptrl
 19435  010A5C  C067  FFF7         	movff	i2printf@f+1,tblptrh
 19436  010A60  0E00               	movlw	low (__mediumconst shr (0+16))
 19437  010A62  6EF8               	movwf	tblptru,c
 19438  010A64  0E0D               	movlw	(high __ramtop+-1)
 19439  010A66  64F7               	cpfsgt	tblptrh,c
 19440  010A68  D003               	bra	i2u1562_47
 19441  010A6A  0008               	tblrd		*
 19442  010A6C  50F5               	movf	tablat,w,c
 19443  010A6E  D005               	bra	i2u1562_40
 19444  010A70                     i2u1562_47:
 19445  010A70  CFF6 FFE1          	movff	tblptrl,fsr1l
 19446  010A74  CFF7 FFE2          	movff	tblptrh,fsr1h
 19447  010A78  50E7               	movf	indf1,w,c
 19448  010A7A                     i2u1562_40:
 19449  010A7A  0A2E               	xorlw	46
 19450  010A7C  A4D8               	btfss	status,2,c
 19451  010A7E  D048               	goto	i2l1108
 19452                           
 19453                           ;doprnt.c: 612: flag |= 0x4000;
 19454  010A80  0100               	movlb	0	; () banked
 19455  010A82  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 19456                           
 19457                           ;doprnt.c: 613: f++;
 19458  010A84  4B66               	infsnz	i2printf@f& (0+255),f,b
 19459  010A86  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;doprnt.c: 620: {
 19463                           ;doprnt.c: 621: prec = 0;
 19464  010A88  0E00               	movlw	0
 19465  010A8A  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19466  010A8C  0E00               	movlw	0
 19467  010A8E  6F87               	movwf	i2printf@prec& (0+255),b
 19468                           
 19469                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 19470  010A90  D029               	goto	i2l1109
 19471  010A92                     
 19472                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 19473                           
 19474                           ; BSR set to: 0
 19475  010A92  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 19476  010A96  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 19477  010A9A  0E00               	movlw	0
 19478  010A9C  6E12               	movwf	i2___wmul@multiplicand+1,c
 19479  010A9E  0E0A               	movlw	10
 19480  010AA0  6E11               	movwf	i2___wmul@multiplicand,c
 19481  010AA2  EC7B  F0B1         	call	i2___wmul	;wreg free
 19482  010AA6  C066  FFF6         	movff	i2printf@f,tblptrl
 19483  010AAA  C067  FFF7         	movff	i2printf@f+1,tblptrh
 19484  010AAE  0E00               	movlw	low (__mediumconst shr (0+16))
 19485  010AB0  6EF8               	movwf	tblptru,c
 19486  010AB2  0E0D               	movlw	(high __ramtop+-1)
 19487  010AB4  64F7               	cpfsgt	tblptrh,c
 19488  010AB6  D003               	bra	i2u1564_47
 19489  010AB8  0008               	tblrd		*
 19490  010ABA  50F5               	movf	tablat,w,c
 19491  010ABC  D005               	bra	i2u1564_40
 19492  010ABE                     i2u1564_47:
 19493  010ABE  CFF6 FFE1          	movff	tblptrl,fsr1l
 19494  010AC2  CFF7 FFE2          	movff	tblptrh,fsr1h
 19495  010AC6  50E7               	movf	indf1,w,c
 19496  010AC8                     i2u1564_40:
 19497  010AC8  0100               	movlb	0	; () banked
 19498  010ACA  6F68               	movwf	??i2_printf& (0+255),b
 19499  010ACC  5168               	movf	??i2_printf& (0+255),w,b
 19500  010ACE  260F               	addwf	?i2___wmul,f,c
 19501  010AD0  0E00               	movlw	0
 19502  010AD2  2210               	addwfc	?i2___wmul+1,f,c
 19503  010AD4  0ED0               	movlw	208
 19504  010AD6  240F               	addwf	?i2___wmul,w,c
 19505  010AD8  6F87               	movwf	i2printf@prec& (0+255),b
 19506  010ADA  0EFF               	movlw	255
 19507  010ADC  2010               	addwfc	?i2___wmul+1,w,c
 19508  010ADE  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19509                           
 19510                           ; BSR set to: 0
 19511  010AE0  4B66               	infsnz	i2printf@f& (0+255),f,b
 19512  010AE2  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19513  010AE4                     i2l1109:
 19514                           
 19515                           ; BSR set to: 0
 19516                           
 19517                           ; BSR set to: 0
 19518  010AE4  C066  FFF6         	movff	i2printf@f,tblptrl
 19519  010AE8  C067  FFF7         	movff	i2printf@f+1,tblptrh
 19520  010AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 19521  010AEE  6EF8               	movwf	tblptru,c
 19522  010AF0  0E0D               	movlw	(high __ramtop+-1)
 19523  010AF2  64F7               	cpfsgt	tblptrh,c
 19524  010AF4  D003               	bra	i2u1565_47
 19525  010AF6  0008               	tblrd		*
 19526  010AF8  50F5               	movf	tablat,w,c
 19527  010AFA  D005               	bra	i2u1565_40
 19528  010AFC                     i2u1565_47:
 19529  010AFC  CFF6 FFE1          	movff	tblptrl,fsr1l
 19530  010B00  CFF7 FFE2          	movff	tblptrh,fsr1h
 19531  010B04  50E7               	movf	indf1,w,c
 19532  010B06                     i2u1565_40:
 19533  010B06  ECC3  F0B1         	call	i2_isdigit
 19534  010B0A  A0D8               	btfss	status,0,c
 19535  010B0C  D03B               	goto	i2l1113
 19536  010B0E  D7C1               	goto	i2l1110
 19537  010B10                     i2l1108:
 19538                           
 19539                           ;doprnt.c: 626: prec = 0;
 19540  010B10  0E00               	movlw	0
 19541  010B12  0100               	movlb	0	; () banked
 19542  010B14  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19543  010B16  0E00               	movlw	0
 19544  010B18  6F87               	movwf	i2printf@prec& (0+255),b
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;doprnt.c: 628: flag |= 0x1000;
 19548  010B1A  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 19549                           
 19550                           ; BSR set to: 0
 19551                           ;doprnt.c: 630: }
 19552                           ;doprnt.c: 635: switch(c = *f++) {
 19553  010B1C  D033               	goto	i2l1113
 19554  010B1E                     
 19555                           ; BSR set to: 0
 19556                           ;doprnt.c: 663: flag |= 0x400;
 19557                           
 19558                           ; BSR set to: 0
 19559  010B1E  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 19560                           
 19561                           ; BSR set to: 0
 19562                           ;doprnt.c: 698: case 'i':
 19563                           ;doprnt.c: 699: break;
 19564                           
 19565                           ; BSR set to: 0
 19566                           
 19567                           ;doprnt.c: 697: case 'd':
 19568                           
 19569                           ;doprnt.c: 664: break;
 19570  010B20  D062               	goto	i2l1117
 19571  010B22                     
 19572                           ; BSR set to: 0
 19573                           ;doprnt.c: 718: case 'x':
 19574                           ;doprnt.c: 721: flag |= 0x80;
 19575                           
 19576                           ; BSR set to: 0
 19577                           
 19578                           ; BSR set to: 0
 19579  010B22  8F78               	bsf	i2printf@flag& (0+255),7,b
 19580                           
 19581                           ;doprnt.c: 723: break;
 19582  010B24  D060               	goto	i2l1117
 19583  010B26                     
 19584                           ; BSR set to: 0
 19585                           ;doprnt.c: 753: if(prec && prec < len)
 19586                           
 19587                           ; BSR set to: 0
 19588  010B26  5187               	movf	i2printf@prec& (0+255),w,b
 19589  010B28  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19590  010B2A  B4D8               	btfsc	status,2,c
 19591  010B2C  D015               	goto	i2l1124
 19592                           
 19593                           ; BSR set to: 0
 19594  010B2E  5174               	movf	i2printf@len& (0+255),w,b
 19595  010B30  5D87               	subwf	i2printf@prec& (0+255),w,b
 19596  010B32  5175               	movf	(i2printf@len+1)& (0+255),w,b
 19597  010B34  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 19598  010B36  B0D8               	btfsc	status,0,c
 19599  010B38  D00F               	goto	i2l1124
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;doprnt.c: 754: len = prec;
 19603  010B3A  C087  F074         	movff	i2printf@prec,i2printf@len
 19604  010B3E  C088  F075         	movff	i2printf@prec+1,i2printf@len+1
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;doprnt.c: 767: while(len--)
 19608  010B42  D00A               	goto	i2l1124
 19609  010B44                     i2l12478:
 19610                           
 19611                           ; BSR set to: 0
 19612                           ;doprnt.c: 768: (putch(*cp++) );
 19613  010B44  C072  FFD9         	movff	i2printf@cp,fsr2l
 19614  010B48  C073  FFDA         	movff	i2printf@cp+1,fsr2h
 19615  010B4C  50DF               	movf	indf2,w,c
 19616  010B4E  EC75  F0B2         	call	i2_putch
 19617  010B52  0100               	movlb	0	; () banked
 19618  010B54  4B72               	infsnz	i2printf@cp& (0+255),f,b
 19619  010B56  2B73               	incf	(i2printf@cp+1)& (0+255),f,b
 19620  010B58                     i2l1124:
 19621                           
 19622                           ; BSR set to: 0
 19623                           
 19624                           ; BSR set to: 0
 19625  010B58  0774               	decf	i2printf@len& (0+255),f,b
 19626  010B5A  A0D8               	btfss	status,0,c
 19627  010B5C  0775               	decf	(i2printf@len+1)& (0+255),f,b
 19628  010B5E  2974               	incf	i2printf@len& (0+255),w,b
 19629  010B60  E1F1               	bnz	i2l12478
 19630  010B62  2975               	incf	(i2printf@len+1)& (0+255),w,b
 19631  010B64  B4D8               	btfsc	status,2,c
 19632  010B66  EF0C  F08A         	goto	i2u1608_40
 19633  010B6A  D7EC               	goto	i2l1125
 19634  010B6C                     
 19635                           ; BSR set to: 0
 19636                           ;doprnt.c: 805: cp = (char *)&c;
 19637                           
 19638                           ; BSR set to: 0
 19639  010B6C  0E89               	movlw	low i2printf@c
 19640  010B6E  6F72               	movwf	i2printf@cp& (0+255),b
 19641  010B70  0E00               	movlw	high i2printf@c
 19642  010B72  6F73               	movwf	(i2printf@cp+1)& (0+255),b
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;doprnt.c: 806: len = 1;
 19646  010B74  0E00               	movlw	0
 19647  010B76  6F75               	movwf	(i2printf@len+1)& (0+255),b
 19648  010B78  0E01               	movlw	1
 19649  010B7A  6F74               	movwf	i2printf@len& (0+255),b
 19650                           
 19651                           ;doprnt.c: 807: goto dostring;
 19652  010B7C  D7D4               	goto	i2l1122
 19653  010B7E                     
 19654                           ; BSR set to: 0
 19655                           ;doprnt.c: 818: flag |= 0xC0;
 19656                           
 19657                           ; BSR set to: 0
 19658  010B7E  0EC0               	movlw	192
 19659  010B80  1378               	iorwf	i2printf@flag& (0+255),f,b
 19660                           
 19661                           ; BSR set to: 0
 19662                           ;doprnt.c: 822: }
 19663                           
 19664                           ;doprnt.c: 819: break;
 19665  010B82  D031               	goto	i2l1117
 19666  010B84                     i2l1113:
 19667                           
 19668                           ; BSR set to: 0
 19669  010B84  0100               	movlb	0	; () banked
 19670  010B86  5166               	movf	i2printf@f& (0+255),w,b
 19671  010B88  6F68               	movwf	??i2_printf& (0+255),b
 19672  010B8A  5167               	movf	(i2printf@f+1)& (0+255),w,b
 19673  010B8C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19674  010B8E  4B66               	infsnz	i2printf@f& (0+255),f,b
 19675  010B90  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19676  010B92  C068  FFF6         	movff	??i2_printf,tblptrl
 19677  010B96  C069  FFF7         	movff	??i2_printf+1,tblptrh
 19678  010B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 19679  010B9C  6EF8               	movwf	tblptru,c
 19680  010B9E  0E0D               	movlw	(high __ramtop+-1)
 19681  010BA0  64F7               	cpfsgt	tblptrh,c
 19682  010BA2  D003               	bra	i2u1570_47
 19683  010BA4  0008               	tblrd		*
 19684  010BA6  50F5               	movf	tablat,w,c
 19685  010BA8  D005               	bra	i2u1570_40
 19686  010BAA                     i2u1570_47:
 19687  010BAA  CFF6 FFE1          	movff	tblptrl,fsr1l
 19688  010BAE  CFF7 FFE2          	movff	tblptrh,fsr1h
 19689  010BB2  50E7               	movf	indf1,w,c
 19690  010BB4                     i2u1570_40:
 19691  010BB4  0100               	movlb	0	; () banked
 19692  010BB6  6F89               	movwf	i2printf@c& (0+255),b
 19693  010BB8  5189               	movf	i2printf@c& (0+255),w,b
 19694                           
 19695                           ; Switch size 1, requested type "space"
 19696                           ; Number of cases is 7, Range of values is 0 to 120
 19697                           ; switch strategies available:
 19698                           ; Name         Instructions Cycles
 19699                           ; simple_byte           22    12 (average)
 19700                           ;	Chosen strategy is simple_byte
 19701  010BBA  0A00               	xorlw	0	; case 0
 19702  010BBC  B4D8               	btfsc	status,2,c
 19703  010BBE  0012               	return	
 19704  010BC0  0A58               	xorlw	88	; case 88
 19705  010BC2  B4D8               	btfsc	status,2,c
 19706  010BC4  D7AE               	goto	i2l1120
 19707  010BC6  0A3C               	xorlw	60	; case 100
 19708  010BC8  B4D8               	btfsc	status,2,c
 19709  010BCA  D00D               	goto	i2l1117
 19710  010BCC  0A02               	xorlw	2	; case 102
 19711  010BCE  B4D8               	btfsc	status,2,c
 19712  010BD0  D7A6               	goto	i2l1116
 19713  010BD2  0A0F               	xorlw	15	; case 105
 19714  010BD4  B4D8               	btfsc	status,2,c
 19715  010BD6  D007               	goto	i2l1117
 19716  010BD8  0A1C               	xorlw	28	; case 117
 19717  010BDA  B4D8               	btfsc	status,2,c
 19718  010BDC  D7D0               	goto	i2l1128
 19719  010BDE  0A0D               	xorlw	13	; case 120
 19720  010BE0  B4D8               	btfsc	status,2,c
 19721  010BE2  D79F               	goto	i2l1120
 19722  010BE4  D7C3               	goto	i2l1127
 19723  010BE6                     i2l1117:
 19724                           
 19725                           ; BSR set to: 0
 19726                           ;doprnt.c: 825: if(flag & (0x700)) {
 19727                           
 19728                           ; BSR set to: 0
 19729  010BE6  0E07               	movlw	7
 19730  010BE8  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19731  010BEA  B4D8               	btfsc	status,2,c
 19732  010BEC  D2C0               	goto	i2l1129
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;doprnt.c: 827: if(flag & 0x1000)
 19736  010BEE  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 19737  010BF0  D004               	goto	i2l1130
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;doprnt.c: 829: prec = 6;
 19741  010BF2  0E00               	movlw	0
 19742  010BF4  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19743  010BF6  0E06               	movlw	6
 19744  010BF8  6F87               	movwf	i2printf@prec& (0+255),b
 19745  010BFA                     i2l1130:
 19746                           
 19747                           ; BSR set to: 0
 19748                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 19749                           
 19750                           ; BSR set to: 0
 19751  010BFA  C076  FFD9         	movff	i2printf@ap,fsr2l
 19752  010BFE  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19753  010C02  CFDE F080          	movff	postinc2,i2printf@fval
 19754  010C06  CFDE F081          	movff	postinc2,i2printf@fval+1
 19755  010C0A  CFDD F082          	movff	postdec2,i2printf@fval+2
 19756                           
 19757                           ; BSR set to: 0
 19758  010C0E  0E03               	movlw	3
 19759  010C10  2776               	addwf	i2printf@ap& (0+255),f,b
 19760  010C12  0E00               	movlw	0
 19761  010C14  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19762                           
 19763                           ; BSR set to: 0
 19764                           ;doprnt.c: 831: if(fval < 0.0) {
 19765  010C16  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 19766  010C18  D011               	goto	i2l1131
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;doprnt.c: 832: fval = -fval;
 19770  010C1A  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 19771  010C1E  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 19772  010C22  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 19773  010C26  EC8E  F0B1         	call	i2___ftneg	;wreg free
 19774  010C2A  C024  F080         	movff	?i2___ftneg,i2printf@fval
 19775  010C2E  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 19776  010C32  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 19777                           
 19778                           ;doprnt.c: 833: flag |= 0x03;
 19779  010C36  0E03               	movlw	3
 19780  010C38  0100               	movlb	0	; () banked
 19781  010C3A  1378               	iorwf	i2printf@flag& (0+255),f,b
 19782  010C3C                     i2l1131:
 19783                           
 19784                           ; BSR set to: 0
 19785                           ;doprnt.c: 834: }
 19786                           ;doprnt.c: 835: exp = 0;
 19787                           
 19788                           ; BSR set to: 0
 19789  010C3C  0E00               	movlw	0
 19790  010C3E  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19791  010C40  0E00               	movlw	0
 19792  010C42  6F7A               	movwf	i2printf@exp& (0+255),b
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;doprnt.c: 836: if( fval!=0) {
 19796  010C44  5180               	movf	i2printf@fval& (0+255),w,b
 19797  010C46  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19798  010C48  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19799  010C4A  B4D8               	btfsc	status,2,c
 19800  010C4C  D086               	goto	i2l1136
 19801                           
 19802                           ; BSR set to: 0
 19803                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 19804  010C4E  0E82               	movlw	130
 19805  010C50  6F68               	movwf	??i2_printf& (0+255),b
 19806  010C52  0EFF               	movlw	255
 19807  010C54  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19808  010C56  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 19809  010C5A  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 19810  010C5E  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 19811  010C62  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 19812  010C66  0E10               	movlw	16
 19813  010C68  D005               	goto	i2u1575_40
 19814  010C6A                     i2u1575_45:
 19815  010C6A  90D8               	bcf	status,0,c
 19816  010C6C  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 19817  010C6E  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 19818  010C70  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 19819  010C72  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 19820  010C74                     i2u1575_40:
 19821  010C74  2EE8               	decfsz	wreg,f,c
 19822  010C76  D7F9               	goto	i2u1575_45
 19823  010C78  516A               	movf	(??i2_printf+2)& (0+255),w,b
 19824  010C7A  2568               	addwf	??i2_printf& (0+255),w,b
 19825  010C7C  6F7A               	movwf	i2printf@exp& (0+255),b
 19826  010C7E  0E00               	movlw	0
 19827  010C80  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 19828  010C82  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;doprnt.c: 838: exp--;
 19832  010C84  077A               	decf	i2printf@exp& (0+255),f,b
 19833  010C86  A0D8               	btfss	status,0,c
 19834  010C88  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;doprnt.c: 839: exp *= 3;
 19838  010C8A  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 19839  010C8E  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 19840  010C92  0E00               	movlw	0
 19841  010C94  6E12               	movwf	i2___wmul@multiplicand+1,c
 19842  010C96  0E03               	movlw	3
 19843  010C98  6E11               	movwf	i2___wmul@multiplicand,c
 19844  010C9A  EC7B  F0B1         	call	i2___wmul	;wreg free
 19845  010C9E  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 19846  010CA2  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 19847                           
 19848                           ;doprnt.c: 840: exp /= 10;
 19849  010CA6  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 19850  010CAA  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 19851  010CAE  0E00               	movlw	0
 19852  010CB0  6E0A               	movwf	i2___awdiv@divisor+1,c
 19853  010CB2  0E0A               	movlw	10
 19854  010CB4  6E09               	movwf	i2___awdiv@divisor,c
 19855  010CB6  ECFD  F0AA         	call	i2___awdiv	;wreg free
 19856  010CBA  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 19857  010CBE  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 19858                           
 19859                           ;doprnt.c: 841: if(exp < 0)
 19860  010CC2  0100               	movlb	0	; () banked
 19861  010CC4  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 19862  010CC6  D003               	goto	i2l1133
 19863                           
 19864                           ; BSR set to: 0
 19865                           ;doprnt.c: 842: exp--;
 19866  010CC8  077A               	decf	i2printf@exp& (0+255),f,b
 19867  010CCA  A0D8               	btfss	status,0,c
 19868  010CCC  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19869  010CCE                     i2l1133:
 19870                           
 19871                           ; BSR set to: 0
 19872                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 19873                           
 19874                           ; BSR set to: 0
 19875  010CCE  517A               	movf	i2printf@exp& (0+255),w,b
 19876  010CD0  0800               	sublw	0
 19877  010CD2  EC9B  F093         	call	i2_scale
 19878  010CD6  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 19879  010CDA  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 19880  010CDE  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 19881                           
 19882                           ;doprnt.c: 847: tmpval.integ *= fval;
 19883  010CE2  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 19884  010CE6  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 19885  010CEA  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 19886  010CEE  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19887  010CF2  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19888  010CF6  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19889  010CFA  ECF5  F0A4         	call	i2___ftmul	;wreg free
 19890  010CFE  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 19891  010D02  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 19892  010D06  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 19893                           
 19894                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 19895  010D0A  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19896  010D0E  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19897  010D12  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19898  010D16  0E00               	movlw	0
 19899  010D18  6E2D               	movwf	i2___ftge@ff2,c
 19900  010D1A  0E80               	movlw	128
 19901  010D1C  6E2E               	movwf	i2___ftge@ff2+1,c
 19902  010D1E  0E3F               	movlw	63
 19903  010D20  6E2F               	movwf	i2___ftge@ff2+2,c
 19904  010D22  ECEA  F0A9         	call	i2___ftge	;wreg free
 19905  010D26  B0D8               	btfsc	status,0,c
 19906  010D28  D005               	goto	i2l1134
 19907                           
 19908                           ;doprnt.c: 849: exp--;
 19909  010D2A  0100               	movlb	0	; () banked
 19910  010D2C  077A               	decf	i2printf@exp& (0+255),f,b
 19911  010D2E  A0D8               	btfss	status,0,c
 19912  010D30  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19913  010D32  D013               	goto	i2l1136
 19914  010D34                     i2l1134:
 19915                           
 19916                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 19917                           
 19918                           ; BSR set to: 0
 19919  010D34  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19920  010D38  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19921  010D3C  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19922  010D40  0E00               	movlw	0
 19923  010D42  6E2D               	movwf	i2___ftge@ff2,c
 19924  010D44  0E20               	movlw	32
 19925  010D46  6E2E               	movwf	i2___ftge@ff2+1,c
 19926  010D48  0E41               	movlw	65
 19927  010D4A  6E2F               	movwf	i2___ftge@ff2+2,c
 19928  010D4C  ECEA  F0A9         	call	i2___ftge	;wreg free
 19929  010D50  A0D8               	btfss	status,0,c
 19930  010D52  D003               	goto	i2l1136
 19931                           
 19932                           ;doprnt.c: 851: exp++;
 19933  010D54  0100               	movlb	0	; () banked
 19934  010D56  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 19935  010D58  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 19936  010D5A                     i2l1136:
 19937                           
 19938                           ;doprnt.c: 852: }
 19939                           ;doprnt.c: 1112: if(prec <= 12)
 19940                           
 19941                           ; BSR set to: 0
 19942                           
 19943                           ; BSR set to: 0
 19944                           
 19945                           ; BSR set to: 0
 19946  010D5A  0100               	movlb	0	; () banked
 19947  010D5C  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19948  010D5E  D006               	goto	i2u1579_40
 19949  010D60  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19950  010D62  E11B               	bnz	i2l12542
 19951  010D64  0E0D               	movlw	13
 19952  010D66  5D87               	subwf	i2printf@prec& (0+255),w,b
 19953  010D68  B0D8               	btfsc	status,0,c
 19954  010D6A  D017               	goto	i2l1137
 19955  010D6C                     i2u1579_40:
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;doprnt.c: 1113: fval += fround(prec);
 19959  010D6C  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 19960  010D70  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 19961  010D74  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 19962  010D78  5187               	movf	i2printf@prec& (0+255),w,b
 19963  010D7A  ECC1  F098         	call	i2_fround
 19964  010D7E  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 19965  010D82  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 19966  010D86  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 19967  010D8A  ECFB  F09E         	call	i2___ftadd	;wreg free
 19968  010D8E  C040  F080         	movff	?i2___ftadd,i2printf@fval
 19969  010D92  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 19970  010D96  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 19971  010D9A                     i2l1137:
 19972  010D9A                     i2l12542:
 19973                           
 19974                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 19975  010D9A  0100               	movlb	0	; () banked
 19976  010D9C  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19977  010D9E  D006               	goto	i2u1580_40
 19978  010DA0  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19979  010DA2  E120               	bnz	i2l12550
 19980  010DA4  0E0A               	movlw	10
 19981  010DA6  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19982  010DA8  B0D8               	btfsc	status,0,c
 19983  010DAA  D01C               	goto	i2u1583_40
 19984  010DAC                     i2u1580_40:
 19985                           
 19986                           ; BSR set to: 0
 19987  010DAC  5180               	movf	i2printf@fval& (0+255),w,b
 19988  010DAE  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19989  010DB0  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19990  010DB2  B4D8               	btfsc	status,2,c
 19991  010DB4  D056               	goto	i2l1138
 19992                           
 19993                           ; BSR set to: 0
 19994  010DB6  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19995  010DBA  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19996  010DBE  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19997  010DC2  EC7B  F0A4         	call	i2___fttol	;wreg free
 19998  010DC6  503D               	movf	?i2___fttol,w,c
 19999  010DC8  103E               	iorwf	?i2___fttol+1,w,c
 20000  010DCA  103F               	iorwf	?i2___fttol+2,w,c
 20001  010DCC  1040               	iorwf	?i2___fttol+3,w,c
 20002  010DCE  A4D8               	btfss	status,2,c
 20003  010DD0  D048               	goto	i2l1138
 20004  010DD2  0100               	movlb	0	; () banked
 20005  010DD4  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 20006  010DD6  D045               	goto	i2l1138
 20007  010DD8  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 20008  010DDA  E104               	bnz	i2l12550
 20009  010DDC  0E02               	movlw	2
 20010  010DDE  5D7A               	subwf	i2printf@exp& (0+255),w,b
 20011  010DE0  A0D8               	btfss	status,0,c
 20012  010DE2  D03F               	goto	i2l1138
 20013  010DE4                     i2u1583_40:
 20014  010DE4                     i2l12550:
 20015                           
 20016                           ; BSR set to: 0
 20017                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 20018  010DE4  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 20019  010DE8  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 20020  010DEC  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 20021  010DF0  0E70               	movlw	112
 20022  010DF2  6E2D               	movwf	i2___ftge@ff2,c
 20023  010DF4  0E89               	movlw	137
 20024  010DF6  6E2E               	movwf	i2___ftge@ff2+1,c
 20025  010DF8  0E40               	movlw	64
 20026  010DFA  6E2F               	movwf	i2___ftge@ff2+2,c
 20027  010DFC  ECEA  F0A9         	call	i2___ftge	;wreg free
 20028  010E00  B0D8               	btfsc	status,0,c
 20029  010E02  D003               	goto	i2l1141
 20030                           
 20031                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 20032  010E04  0100               	movlb	0	; () banked
 20033  010E06  0EF7               	movlw	247
 20034  010E08  D002               	goto	L2
 20035  010E0A                     i2l1141:
 20036                           
 20037                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 20038                           
 20039                           ; BSR set to: 0
 20040  010E0A  0100               	movlb	0	; () banked
 20041  010E0C  0EF8               	movlw	248
 20042  010E0E                     L2:
 20043  010E0E  277A               	addwf	i2printf@exp& (0+255),f,b
 20044  010E10  0EFF               	movlw	255
 20045  010E12  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 20046                           
 20047                           ; BSR set to: 0
 20048                           ;doprnt.c: 1124: }
 20049                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 20050                           
 20051                           ; BSR set to: 0
 20052  010E14  517A               	movf	i2printf@exp& (0+255),w,b
 20053  010E16  EC9B  F093         	call	i2_scale
 20054  010E1A  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 20055  010E1E  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 20056  010E22  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 20057                           
 20058                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 20059  010E26  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 20060  010E2A  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 20061  010E2E  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 20062  010E32  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 20063  010E36  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 20064  010E3A  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 20065  010E3E  EC34  F0A1         	call	i2__tdiv_to_l_	;wreg free
 20066  010E42  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 20067  010E46  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 20068  010E4A  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 20069  010E4E  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 20070                           
 20071                           ;doprnt.c: 1129: fval = 0.0;
 20072  010E52  0E00               	movlw	0
 20073  010E54  0100               	movlb	0	; () banked
 20074  010E56  6F80               	movwf	i2printf@fval& (0+255),b
 20075  010E58  0E00               	movlw	0
 20076  010E5A  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 20077  010E5C  0E00               	movlw	0
 20078  010E5E  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 20079                           
 20080                           ;doprnt.c: 1130: } else {
 20081  010E60  D033               	goto	i2l1147
 20082  010E62                     i2l1138:
 20083                           
 20084                           ;doprnt.c: 1131: val = (unsigned long)fval;
 20085                           
 20086                           ; BSR set to: 0
 20087  010E62  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 20088  010E66  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 20089  010E6A  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 20090  010E6E  EC7B  F0A4         	call	i2___fttol	;wreg free
 20091  010E72  C03D  F083         	movff	?i2___fttol,i2printf@val
 20092  010E76  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 20093  010E7A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 20094  010E7E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 20095                           
 20096                           ;doprnt.c: 1132: fval -= (double)val;
 20097  010E82  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 20098  010E86  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 20099  010E8A  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 20100  010E8E  C083  F009         	movff	i2printf@val,i2___lltoft@c
 20101  010E92  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 20102  010E96  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 20103  010E9A  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 20104  010E9E  EC62  F0AE         	call	i2___lltoft	;wreg free
 20105  010EA2  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 20106  010EA6  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 20107  010EAA  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 20108  010EAE  EC0B  F0B0         	call	i2___ftsub	;wreg free
 20109  010EB2  C060  F080         	movff	?i2___ftsub,i2printf@fval
 20110  010EB6  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 20111  010EBA  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 20112                           
 20113                           ;doprnt.c: 1133: exp = 0;
 20114  010EBE  0E00               	movlw	0
 20115  010EC0  0100               	movlb	0	; () banked
 20116  010EC2  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 20117  010EC4  0E00               	movlw	0
 20118  010EC6  6F7A               	movwf	i2printf@exp& (0+255),b
 20119  010EC8                     i2l1147:
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;doprnt.c: 1134: }
 20123                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 20124                           
 20125                           ; BSR set to: 0
 20126  010EC8  0E01               	movlw	1
 20127  010ECA  6F89               	movwf	i2printf@c& (0+255),b
 20128  010ECC                     i2l12570:
 20129                           
 20130                           ; BSR set to: 0
 20131  010ECC  0E0A               	movlw	10
 20132  010ECE  1989               	xorwf	i2printf@c& (0+255),w,b
 20133  010ED0  B4D8               	btfsc	status,2,c
 20134  010ED2  D01B               	goto	i2u1587_40
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;doprnt.c: 1137: if(val < dpowers[c])
 20138                           
 20139                           ; BSR set to: 0
 20140                           
 20141                           ; BSR set to: 0
 20142  010ED4  5189               	movf	i2printf@c& (0+255),w,b
 20143  010ED6  0D04               	mullw	4
 20144  010ED8  0E79               	movlw	low _dpowers
 20145  010EDA  24F3               	addwf	prodl,w,c
 20146  010EDC  6EF6               	movwf	tblptrl,c
 20147  010EDE  0EF1               	movlw	high _dpowers
 20148  010EE0  20F4               	addwfc	prodh,w,c
 20149  010EE2  6EF7               	movwf	tblptrh,c
 20150  010EE4                     	if	1	;There are 3 active tblptr bytes
 20151  010EE4  6AF8               	clrf	tblptru,c
 20152  010EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 20153  010EE8  22F8               	addwfc	tblptru,f,c
 20154  010EEA                     	endif
 20155  010EEA  0009               	tblrd		*+
 20156  010EEC  50F5               	movf	tablat,w,c
 20157  010EEE  5D83               	subwf	i2printf@val& (0+255),w,b
 20158  010EF0  0009               	tblrd		*+
 20159  010EF2  50F5               	movf	tablat,w,c
 20160  010EF4  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20161  010EF6  0009               	tblrd		*+
 20162  010EF8  50F5               	movf	tablat,w,c
 20163  010EFA  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20164  010EFC  0009               	tblrd		*+
 20165  010EFE  50F5               	movf	tablat,w,c
 20166  010F00  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20167  010F02  A0D8               	btfss	status,0,c
 20168  010F04  D002               	goto	i2u1587_40
 20169                           
 20170                           ; BSR set to: 0
 20171                           
 20172                           ; BSR set to: 0
 20173                           
 20174                           ; BSR set to: 0
 20175                           ;doprnt.c: 1138: break;
 20176  010F06  2B89               	incf	i2printf@c& (0+255),f,b
 20177  010F08  D7E1               	goto	i2l12570
 20178  010F0A                     i2u1587_40:
 20179                           
 20180                           ; BSR set to: 0
 20181                           ;doprnt.c: 1175: {
 20182                           ;doprnt.c: 1188: if(flag & 0x03)
 20183                           
 20184                           ; BSR set to: 0
 20185  010F0A  0E03               	movlw	3
 20186  010F0C  1578               	andwf	i2printf@flag& (0+255),w,b
 20187  010F0E  6F68               	movwf	??i2_printf& (0+255),b
 20188  010F10  0E00               	movlw	0
 20189  010F12  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20190  010F14  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20191  010F16  5168               	movf	??i2_printf& (0+255),w,b
 20192  010F18  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 20193  010F1A  B4D8               	btfsc	status,2,c
 20194  010F1C  D04D               	goto	i2l1152
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;doprnt.c: 1190: (putch('-') );
 20198  010F1E  0E2D               	movlw	45
 20199  010F20  EC75  F0B2         	call	i2_putch
 20200                           
 20201                           ;doprnt.c: 1195: }
 20202                           ;doprnt.c: 1196: while(c--) {
 20203  010F24  D049               	goto	i2l1152
 20204  010F26                     
 20205                           ;doprnt.c: 1200: {
 20206                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 20207  010F26  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20208  010F2A  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20209  010F2E  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20210  010F32  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20211  010F36  0100               	movlb	0	; () banked
 20212  010F38  5189               	movf	i2printf@c& (0+255),w,b
 20213  010F3A  0D04               	mullw	4
 20214  010F3C  0E79               	movlw	low _dpowers
 20215  010F3E  24F3               	addwf	prodl,w,c
 20216  010F40  6EF6               	movwf	tblptrl,c
 20217  010F42  0EF1               	movlw	high _dpowers
 20218  010F44  20F4               	addwfc	prodh,w,c
 20219  010F46  6EF7               	movwf	tblptrh,c
 20220  010F48                     	if	1	;There are 3 active tblptr bytes
 20221  010F48  6AF8               	clrf	tblptru,c
 20222  010F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 20223  010F4C  22F8               	addwfc	tblptru,f,c
 20224  010F4E                     	endif
 20225  010F4E  0009               	tblrd		*+
 20226  010F50  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20227  010F54  0009               	tblrd		*+
 20228  010F56  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20229  010F5A  0009               	tblrd		*+
 20230  010F5C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20231  010F60  000A               	tblrd		*-
 20232  010F62  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20233  010F66  EC3F  F0AB         	call	i2___lldiv	;wreg free
 20234  010F6A  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 20235  010F6E  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 20236  010F72  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 20237  010F76  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 20238                           
 20239                           ;doprnt.c: 1202: tmpval.vd %= 10;
 20240  010F7A  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 20241  010F7E  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 20242  010F82  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 20243  010F86  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 20244  010F8A  0E0A               	movlw	10
 20245  010F8C  6E12               	movwf	i2___llmod@divisor,c
 20246  010F8E  0E00               	movlw	0
 20247  010F90  6E13               	movwf	i2___llmod@divisor+1,c
 20248  010F92  0E00               	movlw	0
 20249  010F94  6E14               	movwf	i2___llmod@divisor+2,c
 20250  010F96  0E00               	movlw	0
 20251  010F98  6E15               	movwf	i2___llmod@divisor+3,c
 20252  010F9A  EC3F  F0AD         	call	i2___llmod	;wreg free
 20253  010F9E  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 20254  010FA2  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 20255  010FA6  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 20256  010FAA  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 20257                           
 20258                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 20259  010FAE  0100               	movlb	0	; () banked
 20260  010FB0  517C               	movf	i2printf@tmpval& (0+255),w,b
 20261  010FB2  0F30               	addlw	48
 20262  010FB4  EC75  F0B2         	call	i2_putch
 20263  010FB8                     i2l1152:
 20264  010FB8  0100               	movlb	0	; () banked
 20265  010FBA  0789               	decf	i2printf@c& (0+255),f,b
 20266  010FBC  2989               	incf	i2printf@c& (0+255),w,b
 20267  010FBE  B4D8               	btfsc	status,2,c
 20268  010FC0  D008               	goto	i2l1155
 20269  010FC2  D7B1               	goto	i2l1153
 20270  010FC4                     i2l12594:
 20271                           
 20272                           ; BSR set to: 0
 20273                           ;doprnt.c: 1208: (putch('0') );
 20274  010FC4  0E30               	movlw	48
 20275  010FC6  EC75  F0B2         	call	i2_putch
 20276                           
 20277                           ;doprnt.c: 1209: exp--;
 20278  010FCA  0100               	movlb	0	; () banked
 20279  010FCC  077A               	decf	i2printf@exp& (0+255),f,b
 20280  010FCE  A0D8               	btfss	status,0,c
 20281  010FD0  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 20282  010FD2                     i2l1155:
 20283                           
 20284                           ; BSR set to: 0
 20285                           
 20286                           ; BSR set to: 0
 20287  010FD2  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 20288  010FD4  D005               	goto	i2u1590_40
 20289  010FD6  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 20290  010FD8  E1F5               	bnz	i2l12594
 20291  010FDA  057A               	decf	i2printf@exp& (0+255),w,b
 20292  010FDC  B0D8               	btfsc	status,0,c
 20293  010FDE  D7F2               	goto	i2l1156
 20294  010FE0                     i2u1590_40:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;doprnt.c: 1210: }
 20298                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 20299                           
 20300                           ; BSR set to: 0
 20301  010FE0  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 20302  010FE2  D009               	goto	i2l1158
 20303  010FE4  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20304  010FE6  E104               	bnz	i2u1591_40
 20305  010FE8  0E09               	movlw	9
 20306  010FEA  5D87               	subwf	i2printf@prec& (0+255),w,b
 20307  010FEC  A0D8               	btfss	status,0,c
 20308  010FEE  D003               	goto	i2l1158
 20309  010FF0                     i2u1591_40:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 20313  010FF0  0E08               	movlw	8
 20314  010FF2  6F89               	movwf	i2printf@c& (0+255),b
 20315  010FF4  D002               	goto	i2l1159
 20316  010FF6                     i2l1158:
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;doprnt.c: 1213: else
 20320                           ;doprnt.c: 1214: c = prec;
 20321  010FF6  C087  F089         	movff	i2printf@prec,i2printf@c
 20322  010FFA                     i2l1159:
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;doprnt.c: 1215: prec -= c;
 20326                           
 20327                           ; BSR set to: 0
 20328  010FFA  5189               	movf	i2printf@c& (0+255),w,b
 20329  010FFC  5F87               	subwf	i2printf@prec& (0+255),f,b
 20330  010FFE  0E00               	movlw	0
 20331  011000  BF89               	btfsc	i2printf@c& (0+255),7,b
 20332  011002  0EFF               	movlw	255
 20333  011004  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;doprnt.c: 1219: if(c)
 20337  011006  5189               	movf	i2printf@c& (0+255),w,b
 20338  011008  B4D8               	btfsc	status,2,c
 20339  01100A  D003               	goto	i2l1160
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;doprnt.c: 1221: (putch('.') );
 20343  01100C  0E2E               	movlw	46
 20344  01100E  EC75  F0B2         	call	i2_putch
 20345  011012                     i2l1160:
 20346                           
 20347                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 20348  011012  0100               	movlb	0	; () banked
 20349  011014  5189               	movf	i2printf@c& (0+255),w,b
 20350  011016  EC9B  F093         	call	i2_scale
 20351  01101A  C036  F06E         	movff	?i2_scale,i2_printf$3348
 20352  01101E  C037  F06F         	movff	?i2_scale+1,i2_printf$3348+1
 20353  011022  C038  F070         	movff	?i2_scale+2,i2_printf$3348+2
 20354                           
 20355                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 20356  011026  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 20357  01102A  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 20358  01102E  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 20359  011032  C06E  F027         	movff	i2_printf$3348,i2___ftmul@f1
 20360  011036  C06F  F028         	movff	i2_printf$3348+1,i2___ftmul@f1+1
 20361  01103A  C070  F029         	movff	i2_printf$3348+2,i2___ftmul@f1+2
 20362  01103E  ECF5  F0A4         	call	i2___ftmul	;wreg free
 20363  011042  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 20364  011046  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 20365  01104A  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 20366  01104E  EC7B  F0A4         	call	i2___fttol	;wreg free
 20367  011052  C03D  F083         	movff	?i2___fttol,i2printf@val
 20368  011056  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 20369  01105A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 20370  01105E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 20371                           
 20372                           ;doprnt.c: 1228: while(c--) {
 20373  011062  D073               	goto	i2l1161
 20374  011064                     
 20375                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 20376  011064  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20377  011068  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20378  01106C  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20379  011070  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20380  011074  0100               	movlb	0	; () banked
 20381  011076  5189               	movf	i2printf@c& (0+255),w,b
 20382  011078  0D04               	mullw	4
 20383  01107A  0E79               	movlw	low _dpowers
 20384  01107C  24F3               	addwf	prodl,w,c
 20385  01107E  6EF6               	movwf	tblptrl,c
 20386  011080  0EF1               	movlw	high _dpowers
 20387  011082  20F4               	addwfc	prodh,w,c
 20388  011084  6EF7               	movwf	tblptrh,c
 20389  011086                     	if	1	;There are 3 active tblptr bytes
 20390  011086  6AF8               	clrf	tblptru,c
 20391  011088  0E00               	movlw	low (__mediumconst shr (0+16))
 20392  01108A  22F8               	addwfc	tblptru,f,c
 20393  01108C                     	endif
 20394  01108C  0009               	tblrd		*+
 20395  01108E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20396  011092  0009               	tblrd		*+
 20397  011094  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20398  011098  0009               	tblrd		*+
 20399  01109A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20400  01109E  000A               	tblrd		*-
 20401  0110A0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20402  0110A4  EC3F  F0AB         	call	i2___lldiv	;wreg free
 20403  0110A8  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 20404  0110AC  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 20405  0110B0  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 20406  0110B4  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 20407                           
 20408                           ;doprnt.c: 1230: tmpval.vd %= 10;
 20409  0110B8  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 20410  0110BC  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 20411  0110C0  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 20412  0110C4  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 20413  0110C8  0E0A               	movlw	10
 20414  0110CA  6E12               	movwf	i2___llmod@divisor,c
 20415  0110CC  0E00               	movlw	0
 20416  0110CE  6E13               	movwf	i2___llmod@divisor+1,c
 20417  0110D0  0E00               	movlw	0
 20418  0110D2  6E14               	movwf	i2___llmod@divisor+2,c
 20419  0110D4  0E00               	movlw	0
 20420  0110D6  6E15               	movwf	i2___llmod@divisor+3,c
 20421  0110D8  EC3F  F0AD         	call	i2___llmod	;wreg free
 20422  0110DC  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 20423  0110E0  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 20424  0110E4  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 20425  0110E8  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 20426                           
 20427                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 20428  0110EC  0100               	movlb	0	; () banked
 20429  0110EE  517C               	movf	i2printf@tmpval& (0+255),w,b
 20430  0110F0  0F30               	addlw	48
 20431  0110F2  EC75  F0B2         	call	i2_putch
 20432                           
 20433                           ;doprnt.c: 1232: val %= dpowers[c];
 20434  0110F6  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 20435  0110FA  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 20436  0110FE  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 20437  011102  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 20438  011106  0100               	movlb	0	; () banked
 20439  011108  5189               	movf	i2printf@c& (0+255),w,b
 20440  01110A  0D04               	mullw	4
 20441  01110C  0E79               	movlw	low _dpowers
 20442  01110E  24F3               	addwf	prodl,w,c
 20443  011110  6EF6               	movwf	tblptrl,c
 20444  011112  0EF1               	movlw	high _dpowers
 20445  011114  20F4               	addwfc	prodh,w,c
 20446  011116  6EF7               	movwf	tblptrh,c
 20447  011118                     	if	1	;There are 3 active tblptr bytes
 20448  011118  6AF8               	clrf	tblptru,c
 20449  01111A  0E00               	movlw	low (__mediumconst shr (0+16))
 20450  01111C  22F8               	addwfc	tblptru,f,c
 20451  01111E                     	endif
 20452  01111E  0009               	tblrd		*+
 20453  011120  CFF5 F012          	movff	tablat,i2___llmod@divisor
 20454  011124  0009               	tblrd		*+
 20455  011126  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 20456  01112A  0009               	tblrd		*+
 20457  01112C  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 20458  011130  000A               	tblrd		*-
 20459  011132  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 20460  011136  EC3F  F0AD         	call	i2___llmod	;wreg free
 20461  01113A  C00E  F083         	movff	?i2___llmod,i2printf@val
 20462  01113E  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 20463  011142  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 20464  011146  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 20465  01114A                     i2l1161:
 20466  01114A  0100               	movlb	0	; () banked
 20467  01114C  0789               	decf	i2printf@c& (0+255),f,b
 20468  01114E  2989               	incf	i2printf@c& (0+255),w,b
 20469  011150  B4D8               	btfsc	status,2,c
 20470  011152  D008               	goto	i2l1164
 20471  011154  D787               	goto	i2l1162
 20472  011156                     
 20473                           ; BSR set to: 0
 20474                           ;doprnt.c: 1236: (putch('0') );
 20475                           
 20476                           ; BSR set to: 0
 20477  011156  0E30               	movlw	48
 20478  011158  EC75  F0B2         	call	i2_putch
 20479                           
 20480                           ;doprnt.c: 1237: prec--;
 20481  01115C  0100               	movlb	0	; () banked
 20482  01115E  0787               	decf	i2printf@prec& (0+255),f,b
 20483  011160  A0D8               	btfss	status,0,c
 20484  011162  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20485  011164                     i2l1164:
 20486                           
 20487                           ; BSR set to: 0
 20488                           
 20489                           ; BSR set to: 0
 20490  011164  5187               	movf	i2printf@prec& (0+255),w,b
 20491  011166  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 20492  011168  B4D8               	btfsc	status,2,c
 20493  01116A  D156               	goto	i2u1608_40
 20494  01116C  D7F4               	goto	i2l1165
 20495  01116E                     i2l1129:
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;doprnt.c: 1246: }
 20499                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 20500                           
 20501                           ; BSR set to: 0
 20502  01116E  0EC0               	movlw	192
 20503  011170  1578               	andwf	i2printf@flag& (0+255),w,b
 20504  011172  6F68               	movwf	??i2_printf& (0+255),b
 20505  011174  0E00               	movlw	0
 20506  011176  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20507  011178  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20508  01117A  5168               	movf	??i2_printf& (0+255),w,b
 20509  01117C  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 20510  01117E  A4D8               	btfss	status,2,c
 20511  011180  D01E               	goto	i2l1167
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;doprnt.c: 1253: {
 20515                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 20516  011182  C076  FFD9         	movff	i2printf@ap,fsr2l
 20517  011186  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 20518  01118A  CFDE F083          	movff	postinc2,i2printf@val
 20519  01118E  CFDD F084          	movff	postdec2,i2printf@val+1
 20520  011192  0E00               	movlw	0
 20521  011194  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 20522  011196  0EFF               	movlw	-1
 20523  011198  6F85               	movwf	(i2printf@val+2)& (0+255),b
 20524  01119A  6F86               	movwf	(i2printf@val+3)& (0+255),b
 20525                           
 20526                           ; BSR set to: 0
 20527  01119C  0E02               	movlw	2
 20528  01119E  2776               	addwf	i2printf@ap& (0+255),f,b
 20529  0111A0  0E00               	movlw	0
 20530  0111A2  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;doprnt.c: 1261: if((long)val < 0) {
 20534  0111A4  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 20535  0111A6  D01D               	goto	i2l1169
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;doprnt.c: 1262: flag |= 0x03;
 20539  0111A8  0E03               	movlw	3
 20540  0111AA  1378               	iorwf	i2printf@flag& (0+255),f,b
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;doprnt.c: 1263: val = -val;
 20544  0111AC  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 20545  0111AE  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 20546  0111B0  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 20547  0111B2  6D83               	negf	i2printf@val& (0+255),b
 20548  0111B4  0E00               	movlw	0
 20549  0111B6  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 20550  0111B8  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 20551  0111BA  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;doprnt.c: 1264: }
 20555                           ;doprnt.c: 1266: }
 20556  0111BC  D012               	goto	i2l1169
 20557  0111BE                     i2l1167:
 20558                           
 20559                           ; BSR set to: 0
 20560                           ;doprnt.c: 1268: else
 20561                           ;doprnt.c: 1273: {
 20562                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 20563                           
 20564                           ; BSR set to: 0
 20565  0111BE  C076  FFD9         	movff	i2printf@ap,fsr2l
 20566  0111C2  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 20567  0111C6  CFDE F068          	movff	postinc2,??i2_printf
 20568  0111CA  CFDD F069          	movff	postdec2,??i2_printf+1
 20569  0111CE  C068  F083         	movff	??i2_printf,i2printf@val
 20570  0111D2  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 20571  0111D6  6B85               	clrf	(i2printf@val+2)& (0+255),b
 20572  0111D8  6B86               	clrf	(i2printf@val+3)& (0+255),b
 20573                           
 20574                           ; BSR set to: 0
 20575  0111DA  0E02               	movlw	2
 20576  0111DC  2776               	addwf	i2printf@ap& (0+255),f,b
 20577  0111DE  0E00               	movlw	0
 20578  0111E0  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 20579  0111E2                     i2l1169:
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;doprnt.c: 1287: }
 20583                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 20584                           
 20585                           ; BSR set to: 0
 20586  0111E2  5187               	movf	i2printf@prec& (0+255),w,b
 20587  0111E4  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 20588  0111E6  A4D8               	btfss	status,2,c
 20589  0111E8  D04B               	goto	i2l1171
 20590                           
 20591                           ; BSR set to: 0
 20592  0111EA  5183               	movf	i2printf@val& (0+255),w,b
 20593  0111EC  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 20594  0111EE  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 20595  0111F0  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 20596  0111F2  A4D8               	btfss	status,2,c
 20597  0111F4  D045               	goto	i2l1171
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;doprnt.c: 1291: prec++;
 20601  0111F6  4B87               	infsnz	i2printf@prec& (0+255),f,b
 20602  0111F8  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 20603                           
 20604                           ; BSR set to: 0
 20605                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 20606  0111FA  D042               	goto	i2l1171
 20607  0111FC                     
 20608                           ; BSR set to: 0
 20609                           ;doprnt.c: 1302: case 0xC0:
 20610                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20611                           
 20612                           ; BSR set to: 0
 20613                           
 20614                           ; BSR set to: 0
 20615  0111FC  0E01               	movlw	1
 20616  0111FE  6F89               	movwf	i2printf@c& (0+255),b
 20617  011200                     i2l12654:
 20618                           
 20619                           ; BSR set to: 0
 20620  011200  0E0A               	movlw	10
 20621  011202  1989               	xorwf	i2printf@c& (0+255),w,b
 20622  011204  B4D8               	btfsc	status,2,c
 20623  011206  D047               	goto	i2l1177
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;doprnt.c: 1306: if(val < dpowers[c])
 20627                           
 20628                           ; BSR set to: 0
 20629                           
 20630                           ; BSR set to: 0
 20631  011208  5189               	movf	i2printf@c& (0+255),w,b
 20632  01120A  0D04               	mullw	4
 20633  01120C  0E79               	movlw	low _dpowers
 20634  01120E  24F3               	addwf	prodl,w,c
 20635  011210  6EF6               	movwf	tblptrl,c
 20636  011212  0EF1               	movlw	high _dpowers
 20637  011214  20F4               	addwfc	prodh,w,c
 20638  011216  6EF7               	movwf	tblptrh,c
 20639  011218                     	if	1	;There are 3 active tblptr bytes
 20640  011218  6AF8               	clrf	tblptru,c
 20641  01121A  0E00               	movlw	low (__mediumconst shr (0+16))
 20642  01121C  22F8               	addwfc	tblptru,f,c
 20643  01121E                     	endif
 20644  01121E  0009               	tblrd		*+
 20645  011220  50F5               	movf	tablat,w,c
 20646  011222  5D83               	subwf	i2printf@val& (0+255),w,b
 20647  011224  0009               	tblrd		*+
 20648  011226  50F5               	movf	tablat,w,c
 20649  011228  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20650  01122A  0009               	tblrd		*+
 20651  01122C  50F5               	movf	tablat,w,c
 20652  01122E  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20653  011230  0009               	tblrd		*+
 20654  011232  50F5               	movf	tablat,w,c
 20655  011234  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20656  011236  A0D8               	btfss	status,0,c
 20657  011238  D02E               	goto	i2l1177
 20658                           
 20659                           ; BSR set to: 0
 20660                           
 20661                           ; BSR set to: 0
 20662                           
 20663                           ; BSR set to: 0
 20664                           ;doprnt.c: 1307: break;
 20665  01123A  2B89               	incf	i2printf@c& (0+255),f,b
 20666  01123C  D7E1               	goto	i2l12654
 20667  01123E                     
 20668                           ; BSR set to: 0
 20669                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 20670                           
 20671                           ; BSR set to: 0
 20672  01123E  0E01               	movlw	1
 20673  011240  6F89               	movwf	i2printf@c& (0+255),b
 20674  011242                     i2l12668:
 20675                           
 20676                           ; BSR set to: 0
 20677  011242  0E08               	movlw	8
 20678  011244  1989               	xorwf	i2printf@c& (0+255),w,b
 20679  011246  B4D8               	btfsc	status,2,c
 20680  011248  D026               	goto	i2l1177
 20681                           
 20682                           ; BSR set to: 0
 20683                           ;doprnt.c: 1317: if(val < hexpowers[c])
 20684                           
 20685                           ; BSR set to: 0
 20686                           
 20687                           ; BSR set to: 0
 20688  01124A  5189               	movf	i2printf@c& (0+255),w,b
 20689  01124C  0D04               	mullw	4
 20690  01124E  0EEF               	movlw	low _hexpowers
 20691  011250  24F3               	addwf	prodl,w,c
 20692  011252  6EF6               	movwf	tblptrl,c
 20693  011254  0EF1               	movlw	high _hexpowers
 20694  011256  20F4               	addwfc	prodh,w,c
 20695  011258  6EF7               	movwf	tblptrh,c
 20696  01125A                     	if	1	;There are 3 active tblptr bytes
 20697  01125A  6AF8               	clrf	tblptru,c
 20698  01125C  0E00               	movlw	low (__mediumconst shr (0+16))
 20699  01125E  22F8               	addwfc	tblptru,f,c
 20700  011260                     	endif
 20701  011260  0009               	tblrd		*+
 20702  011262  50F5               	movf	tablat,w,c
 20703  011264  5D83               	subwf	i2printf@val& (0+255),w,b
 20704  011266  0009               	tblrd		*+
 20705  011268  50F5               	movf	tablat,w,c
 20706  01126A  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20707  01126C  0009               	tblrd		*+
 20708  01126E  50F5               	movf	tablat,w,c
 20709  011270  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20710  011272  0009               	tblrd		*+
 20711  011274  50F5               	movf	tablat,w,c
 20712  011276  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20713  011278  A0D8               	btfss	status,0,c
 20714  01127A  D00D               	goto	i2l1177
 20715                           
 20716                           ; BSR set to: 0
 20717                           
 20718                           ; BSR set to: 0
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;doprnt.c: 1318: break;
 20722  01127C  2B89               	incf	i2printf@c& (0+255),f,b
 20723  01127E  D7E1               	goto	i2l12668
 20724  011280                     i2l1171:
 20725                           
 20726                           ; BSR set to: 0
 20727                           
 20728                           ; BSR set to: 0
 20729  011280  5178               	movf	i2printf@flag& (0+255),w,b
 20730  011282  0BC0               	andlw	192
 20731                           
 20732                           ; Switch size 1, requested type "space"
 20733                           ; Number of cases is 3, Range of values is 0 to 192
 20734                           ; switch strategies available:
 20735                           ; Name         Instructions Cycles
 20736                           ; simple_byte           10     6 (average)
 20737                           ;	Chosen strategy is simple_byte
 20738  011284  0A00               	xorlw	0	; case 0
 20739  011286  B4D8               	btfsc	status,2,c
 20740  011288  D7B9               	goto	i2l1172
 20741  01128A  0A80               	xorlw	128	; case 128
 20742  01128C  B4D8               	btfsc	status,2,c
 20743  01128E  D7D7               	goto	i2l1178
 20744  011290  0A40               	xorlw	64	; case 192
 20745  011292  B4D8               	btfsc	status,2,c
 20746  011294  D7B3               	goto	i2l1172
 20747  011296                     i2l1177:
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;doprnt.c: 1339: if(c < prec)
 20751                           
 20752                           ; BSR set to: 0
 20753  011296  0E80               	movlw	128
 20754  011298  BF89               	btfsc	i2printf@c& (0+255),7,b
 20755  01129A  0E7F               	movlw	127
 20756  01129C  6F68               	movwf	??i2_printf& (0+255),b
 20757  01129E  5187               	movf	i2printf@prec& (0+255),w,b
 20758  0112A0  5D89               	subwf	i2printf@c& (0+255),w,b
 20759  0112A2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20760  0112A4  0A80               	xorlw	128
 20761  0112A6  5968               	subwfb	??i2_printf& (0+255),w,b
 20762  0112A8  B0D8               	btfsc	status,0,c
 20763  0112AA  D003               	goto	i2l1182
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;doprnt.c: 1340: c = prec;
 20767  0112AC  C087  F089         	movff	i2printf@prec,i2printf@c
 20768  0112B0  D010               	goto	i2l1184
 20769  0112B2                     i2l1182:
 20770                           
 20771                           ; BSR set to: 0
 20772                           ;doprnt.c: 1341: else if(prec < c)
 20773                           
 20774                           ; BSR set to: 0
 20775  0112B2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20776  0112B4  0A80               	xorlw	128
 20777  0112B6  6F68               	movwf	??i2_printf& (0+255),b
 20778  0112B8  5189               	movf	i2printf@c& (0+255),w,b
 20779  0112BA  5D87               	subwf	i2printf@prec& (0+255),w,b
 20780  0112BC  0E80               	movlw	128
 20781  0112BE  BF89               	btfsc	i2printf@c& (0+255),7,b
 20782  0112C0  0E7F               	movlw	127
 20783  0112C2  5968               	subwfb	??i2_printf& (0+255),w,b
 20784  0112C4  B0D8               	btfsc	status,0,c
 20785  0112C6  D005               	goto	i2l1184
 20786                           
 20787                           ; BSR set to: 0
 20788                           ;doprnt.c: 1342: prec = c;
 20789  0112C8  5189               	movf	i2printf@c& (0+255),w,b
 20790  0112CA  6F87               	movwf	i2printf@prec& (0+255),b
 20791  0112CC  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 20792  0112CE  BF87               	btfsc	i2printf@prec& (0+255),7,b
 20793  0112D0  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20794  0112D2                     i2l1184:
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;doprnt.c: 1422: {
 20798                           ;doprnt.c: 1438: if(flag & 0x03)
 20799                           
 20800                           ; BSR set to: 0
 20801                           
 20802                           ; BSR set to: 0
 20803  0112D2  0E03               	movlw	3
 20804  0112D4  1578               	andwf	i2printf@flag& (0+255),w,b
 20805  0112D6  6F68               	movwf	??i2_printf& (0+255),b
 20806  0112D8  0E00               	movlw	0
 20807  0112DA  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20808  0112DC  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20809  0112DE  5168               	movf	??i2_printf& (0+255),w,b
 20810  0112E0  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 20811  0112E2  B4D8               	btfsc	status,2,c
 20812  0112E4  D090               	goto	i2l1186
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;doprnt.c: 1439: (putch('-') );
 20816  0112E6  0E2D               	movlw	45
 20817  0112E8  EC75  F0B2         	call	i2_putch
 20818                           
 20819                           ;doprnt.c: 1469: }
 20820                           ;doprnt.c: 1474: while(prec--) {
 20821  0112EC  D08C               	goto	i2l1186
 20822  0112EE                     
 20823                           ;doprnt.c: 1486: case 0xC0:
 20824                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20825  0112EE  C087  F068         	movff	i2printf@prec,??i2_printf
 20826  0112F2  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 20827  0112F6  0100               	movlb	0	; () banked
 20828  0112F8  90D8               	bcf	status,0,c
 20829  0112FA  3768               	rlcf	??i2_printf& (0+255),f,b
 20830  0112FC  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20831  0112FE  90D8               	bcf	status,0,c
 20832  011300  3768               	rlcf	??i2_printf& (0+255),f,b
 20833  011302  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20834  011304  0E79               	movlw	low _dpowers
 20835  011306  2568               	addwf	??i2_printf& (0+255),w,b
 20836  011308  6EF6               	movwf	tblptrl,c
 20837  01130A  0EF1               	movlw	high _dpowers
 20838  01130C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20839  01130E  6EF7               	movwf	tblptrh,c
 20840  011310                     	if	1	;There are 3 active tblptr bytes
 20841  011310  6AF8               	clrf	tblptru,c
 20842  011312  0E00               	movlw	low (__mediumconst shr (0+16))
 20843  011314  22F8               	addwfc	tblptru,f,c
 20844  011316                     	endif
 20845  011316  0009               	tblrd		*+
 20846  011318  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20847  01131C  0009               	tblrd		*+
 20848  01131E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20849  011322  0009               	tblrd		*+
 20850  011324  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20851  011328  000A               	tblrd		*-
 20852  01132A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20853  01132E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20854  011332  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20855  011336  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20856  01133A  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20857  01133E  EC3F  F0AB         	call	i2___lldiv	;wreg free
 20858  011342  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 20859  011346  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 20860  01134A  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 20861  01134E  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 20862  011352  0E0A               	movlw	10
 20863  011354  6E12               	movwf	i2___llmod@divisor,c
 20864  011356  0E00               	movlw	0
 20865  011358  6E13               	movwf	i2___llmod@divisor+1,c
 20866  01135A  0E00               	movlw	0
 20867  01135C  6E14               	movwf	i2___llmod@divisor+2,c
 20868  01135E  0E00               	movlw	0
 20869  011360  6E15               	movwf	i2___llmod@divisor+3,c
 20870  011362  EC3F  F0AD         	call	i2___llmod	;wreg free
 20871  011366  500E               	movf	?i2___llmod,w,c
 20872  011368  0F30               	addlw	48
 20873  01136A  0100               	movlb	0	; () banked
 20874  01136C  6F89               	movwf	i2printf@c& (0+255),b
 20875                           
 20876                           ;doprnt.c: 1491: break;
 20877  01136E  D048               	goto	i2l1191
 20878  011370                     
 20879                           ; BSR set to: 0
 20880                           ;doprnt.c: 1499: {
 20881                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 20882                           
 20883                           ; BSR set to: 0
 20884  011370  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20885  011374  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20886  011378  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20887  01137C  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20888  011380  C087  F068         	movff	i2printf@prec,??i2_printf
 20889  011384  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 20890  011388  90D8               	bcf	status,0,c
 20891  01138A  3768               	rlcf	??i2_printf& (0+255),f,b
 20892  01138C  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20893  01138E  90D8               	bcf	status,0,c
 20894  011390  3768               	rlcf	??i2_printf& (0+255),f,b
 20895  011392  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20896  011394  0EEF               	movlw	low _hexpowers
 20897  011396  2568               	addwf	??i2_printf& (0+255),w,b
 20898  011398  6EF6               	movwf	tblptrl,c
 20899  01139A  0EF1               	movlw	high _hexpowers
 20900  01139C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20901  01139E  6EF7               	movwf	tblptrh,c
 20902  0113A0                     	if	1	;There are 3 active tblptr bytes
 20903  0113A0  6AF8               	clrf	tblptru,c
 20904  0113A2  0E00               	movlw	low (__mediumconst shr (0+16))
 20905  0113A4  22F8               	addwfc	tblptru,f,c
 20906  0113A6                     	endif
 20907  0113A6  0009               	tblrd		*+
 20908  0113A8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20909  0113AC  0009               	tblrd		*+
 20910  0113AE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20911  0113B2  0009               	tblrd		*+
 20912  0113B4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20913  0113B8  000A               	tblrd		*-
 20914  0113BA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20915  0113BE  EC3F  F0AB         	call	i2___lldiv	;wreg free
 20916  0113C2  5001               	movf	?i2___lldiv,w,c
 20917  0113C4  0B0F               	andlw	15
 20918  0113C6  0100               	movlb	0	; () banked
 20919  0113C8  6F71               	movwf	i2printf@idx& (0+255),b
 20920                           
 20921                           ; BSR set to: 0
 20922                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 20923  0113CA  5171               	movf	i2printf@idx& (0+255),w,b
 20924  0113CC  0D01               	mullw	1
 20925  0113CE  0ED5               	movlw	low STR_95
 20926  0113D0  24F3               	addwf	prodl,w,c
 20927  0113D2  6EF6               	movwf	tblptrl,c
 20928  0113D4  0EFE               	movlw	high STR_95
 20929  0113D6  20F4               	addwfc	prodh,w,c
 20930  0113D8  6EF7               	movwf	tblptrh,c
 20931  0113DA                     	if	1	;There are 3 active tblptr bytes
 20932  0113DA  6AF8               	clrf	tblptru,c
 20933  0113DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20934  0113DE  22F8               	addwfc	tblptru,f,c
 20935  0113E0                     	endif
 20936  0113E0  0008               	tblrd		*
 20937  0113E2  CFF5 F089          	movff	tablat,i2printf@c
 20938                           
 20939                           ; BSR set to: 0
 20940                           ;doprnt.c: 1523: }
 20941                           
 20942                           ;doprnt.c: 1508: }
 20943                           ;doprnt.c: 1510: break;
 20944  0113E6  D00C               	goto	i2l1191
 20945  0113E8                     i2l12704:
 20946  0113E8  0100               	movlb	0	; () banked
 20947  0113EA  5178               	movf	i2printf@flag& (0+255),w,b
 20948  0113EC  0BC0               	andlw	192
 20949                           
 20950                           ; Switch size 1, requested type "space"
 20951                           ; Number of cases is 3, Range of values is 0 to 192
 20952                           ; switch strategies available:
 20953                           ; Name         Instructions Cycles
 20954                           ; simple_byte           10     6 (average)
 20955                           ;	Chosen strategy is simple_byte
 20956  0113EE  0A00               	xorlw	0	; case 0
 20957  0113F0  B4D8               	btfsc	status,2,c
 20958  0113F2  D77D               	goto	i2l1189
 20959  0113F4  0A80               	xorlw	128	; case 128
 20960  0113F6  B4D8               	btfsc	status,2,c
 20961  0113F8  D7BB               	goto	i2l1192
 20962  0113FA  0A40               	xorlw	64	; case 192
 20963  0113FC  B4D8               	btfsc	status,2,c
 20964  0113FE  D777               	goto	i2l1189
 20965  011400                     i2l1191:
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;doprnt.c: 1524: (putch(c) );
 20969                           
 20970                           ; BSR set to: 0
 20971  011400  5189               	movf	i2printf@c& (0+255),w,b
 20972  011402  EC75  F0B2         	call	i2_putch
 20973  011406                     i2l1186:
 20974  011406  0100               	movlb	0	; () banked
 20975  011408  0787               	decf	i2printf@prec& (0+255),f,b
 20976  01140A  A0D8               	btfss	status,0,c
 20977  01140C  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20978  01140E  2987               	incf	i2printf@prec& (0+255),w,b
 20979  011410  E1EB               	bnz	i2l12704
 20980  011412  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 20981  011414  A4D8               	btfss	status,2,c
 20982  011416  D7E8               	goto	i2l1188
 20983  011418                     i2u1608_40:
 20984                           
 20985                           ; BSR set to: 0
 20986                           
 20987                           ; BSR set to: 0
 20988  011418  0100               	movlb	0	; () banked
 20989  01141A  5166               	movf	i2printf@f& (0+255),w,b
 20990  01141C  6F68               	movwf	??i2_printf& (0+255),b
 20991  01141E  5167               	movf	(i2printf@f+1)& (0+255),w,b
 20992  011420  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20993  011422  4B66               	infsnz	i2printf@f& (0+255),f,b
 20994  011424  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20995  011426  C068  FFF6         	movff	??i2_printf,tblptrl
 20996  01142A  C069  FFF7         	movff	??i2_printf+1,tblptrh
 20997  01142E  0E00               	movlw	low (__mediumconst shr (0+16))
 20998  011430  6EF8               	movwf	tblptru,c
 20999  011432  0E0D               	movlw	(high __ramtop+-1)
 21000  011434  64F7               	cpfsgt	tblptrh,c
 21001  011436  D003               	bra	i2u1609_47
 21002  011438  0008               	tblrd		*
 21003  01143A  50F5               	movf	tablat,w,c
 21004  01143C  D005               	bra	i2u1609_40
 21005  01143E                     i2u1609_47:
 21006  01143E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21007  011442  CFF7 FFE2          	movff	tblptrh,fsr1h
 21008  011446  50E7               	movf	indf1,w,c
 21009  011448                     i2u1609_40:
 21010  011448  0100               	movlb	0	; () banked
 21011  01144A  6F89               	movwf	i2printf@c& (0+255),b
 21012  01144C  5189               	movf	i2printf@c& (0+255),w,b
 21013  01144E  B4D8               	btfsc	status,2,c
 21014  011450  0012               	return	
 21015  011452  EF1E  F085         	goto	i2l1106
 21016  011456                     __end_ofi2_printf:
 21017                           	opt stack 0
 21018                           tosu	equ	0xFFF
 21019                           tosh	equ	0xFFE
 21020                           tosl	equ	0xFFD
 21021                           pclatu	equ	0xFFB
 21022                           pclath	equ	0xFFA
 21023                           tblptru	equ	0xFF8
 21024                           tblptrh	equ	0xFF7
 21025                           tblptrl	equ	0xFF6
 21026                           tablat	equ	0xFF5
 21027                           prodh	equ	0xFF4
 21028                           prodl	equ	0xFF3
 21029                           intcon	equ	0xFF2
 21030                           postinc0	equ	0xFEE
 21031                           fsr0h	equ	0xFEA
 21032                           fsr0l	equ	0xFE9
 21033                           wreg	equ	0xFE8
 21034                           indf1	equ	0xFE7
 21035                           postdec1	equ	0xFE5
 21036                           fsr1h	equ	0xFE2
 21037                           fsr1l	equ	0xFE1
 21038                           bsr	equ	0xFE0
 21039                           indf2	equ	0xFDF
 21040                           postinc2	equ	0xFDE
 21041                           postdec2	equ	0xFDD
 21042                           fsr2h	equ	0xFDA
 21043                           fsr2l	equ	0xFD9
 21044                           status	equ	0xFD8
 21045                           
 21046 ;; *************** function i2_scale *****************
 21047 ;; Defined at:
 21048 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 21049 ;; Parameters:    Size  Location     Type
 21050 ;;  scl             1    wreg     char 
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;  scl             1   59[COMRAM] char 
 21053 ;; Return value:  Size  Location     Type
 21054 ;;                  3   53[COMRAM] char 
 21055 ;; Registers used:
 21056 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21057 ;; Tracked objects:
 21058 ;;		On entry : 0/0
 21059 ;;		On exit  : 0/0
 21060 ;;		Unchanged: 0/0
 21061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21062 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21063 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21065 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21066 ;;Total ram usage:        7 bytes
 21067 ;; Hardware stack levels used:    1
 21068 ;; Hardware stack levels required when called:    2
 21069 ;; This function calls:
 21070 ;;		i2___awdiv
 21071 ;;		i2___awmod
 21072 ;;		i2___ftmul
 21073 ;;		i2___wmul
 21074 ;; This function is called by:
 21075 ;;		i2_printf
 21076 ;; This function uses a non-reentrant model
 21077 ;;
 21078                           
 21079                           	psect	text74
 21080  012736                     __ptext74:
 21081                           	opt stack 0
 21082  012736                     i2_scale:
 21083                           	opt stack 13
 21084                           
 21085                           ; BSR set to: 0
 21086                           ;incstack = 0
 21087                           ;i2scale@scl stored from wreg
 21088  012736  6E3C               	movwf	i2scale@scl,c
 21089                           
 21090                           ;doprnt.c: 428: if(scl < 0) {
 21091  012738  AE3C               	btfss	i2scale@scl,7,c
 21092  01273A  D113               	goto	i2l1095
 21093                           
 21094                           ;doprnt.c: 429: scl = -scl;
 21095  01273C  6C3C               	negf	i2scale@scl,c
 21096                           
 21097                           ;doprnt.c: 430: if(scl>=110)
 21098  01273E  503C               	movf	i2scale@scl,w,c
 21099  012740  0A80               	xorlw	128
 21100  012742  0F12               	addlw	-238
 21101  012744  A0D8               	btfss	status,0,c
 21102  012746  D09A               	goto	i2l1096
 21103                           
 21104                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 21105  012748  0E00               	movlw	0
 21106  01274A  6E12               	movwf	i2___wmul@multiplicand+1,c
 21107  01274C  0E03               	movlw	3
 21108  01274E  6E11               	movwf	i2___wmul@multiplicand,c
 21109  012750  0E00               	movlw	0
 21110  012752  6E0A               	movwf	i2___awdiv@divisor+1,c
 21111  012754  0E0A               	movlw	10
 21112  012756  6E09               	movwf	i2___awdiv@divisor,c
 21113  012758  0E00               	movlw	0
 21114  01275A  6E04               	movwf	i2___awmod@divisor+1,c
 21115  01275C  0E64               	movlw	100
 21116  01275E  6E03               	movwf	i2___awmod@divisor,c
 21117  012760  503C               	movf	i2scale@scl,w,c
 21118  012762  6E01               	movwf	i2___awmod@dividend,c
 21119  012764  6A02               	clrf	i2___awmod@dividend+1,c
 21120  012766  BE01               	btfsc	i2___awmod@dividend,7,c
 21121  012768  0602               	decf	i2___awmod@dividend+1,f,c
 21122  01276A  EC6C  F0AC         	call	i2___awmod	;wreg free
 21123  01276E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21124  012772  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 21125  012776  ECFD  F0AA         	call	i2___awdiv	;wreg free
 21126  01277A  0E09               	movlw	9
 21127  01277C  2407               	addwf	?i2___awdiv,w,c
 21128  01277E  6E0F               	movwf	i2___wmul@multiplier,c
 21129  012780  0E00               	movlw	0
 21130  012782  2008               	addwfc	?i2___awdiv+1,w,c
 21131  012784  6E10               	movwf	i2___wmul@multiplier+1,c
 21132  012786  EC7B  F0B1         	call	i2___wmul	;wreg free
 21133  01278A  0EC8               	movlw	low __npowers_
 21134  01278C  240F               	addwf	?i2___wmul,w,c
 21135  01278E  6EF6               	movwf	tblptrl,c
 21136  012790  0EF1               	movlw	high __npowers_
 21137  012792  2010               	addwfc	?i2___wmul+1,w,c
 21138  012794  6EF7               	movwf	tblptrh,c
 21139  012796                     	if	1	;There are 3 active tblptr bytes
 21140  012796  6AF8               	clrf	tblptru,c
 21141  012798  0E00               	movlw	low (__mediumconst shr (0+16))
 21142  01279A  22F8               	addwfc	tblptru,f,c
 21143  01279C                     	endif
 21144  01279C  0009               	tblrd		*+
 21145  01279E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21146  0127A2  0009               	tblrd		*+
 21147  0127A4  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21148  0127A8  000A               	tblrd		*-
 21149  0127AA  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21150  0127AE  0E00               	movlw	0
 21151  0127B0  6E0A               	movwf	i2___awdiv@divisor+1,c
 21152  0127B2  0E64               	movlw	100
 21153  0127B4  6E09               	movwf	i2___awdiv@divisor,c
 21154  0127B6  503C               	movf	i2scale@scl,w,c
 21155  0127B8  6E07               	movwf	i2___awdiv@dividend,c
 21156  0127BA  6A08               	clrf	i2___awdiv@dividend+1,c
 21157  0127BC  BE07               	btfsc	i2___awdiv@dividend,7,c
 21158  0127BE  0608               	decf	i2___awdiv@dividend+1,f,c
 21159  0127C0  ECFD  F0AA         	call	i2___awdiv	;wreg free
 21160  0127C4  0E12               	movlw	18
 21161  0127C6  2407               	addwf	?i2___awdiv,w,c
 21162  0127C8  6E0F               	movwf	i2___wmul@multiplier,c
 21163  0127CA  0E00               	movlw	0
 21164  0127CC  2008               	addwfc	?i2___awdiv+1,w,c
 21165  0127CE  6E10               	movwf	i2___wmul@multiplier+1,c
 21166  0127D0  0E00               	movlw	0
 21167  0127D2  6E12               	movwf	i2___wmul@multiplicand+1,c
 21168  0127D4  0E03               	movlw	3
 21169  0127D6  6E11               	movwf	i2___wmul@multiplicand,c
 21170  0127D8  EC7B  F0B1         	call	i2___wmul	;wreg free
 21171  0127DC  0EC8               	movlw	low __npowers_
 21172  0127DE  240F               	addwf	?i2___wmul,w,c
 21173  0127E0  6EF6               	movwf	tblptrl,c
 21174  0127E2  0EF1               	movlw	high __npowers_
 21175  0127E4  2010               	addwfc	?i2___wmul+1,w,c
 21176  0127E6  6EF7               	movwf	tblptrh,c
 21177  0127E8                     	if	1	;There are 3 active tblptr bytes
 21178  0127E8  6AF8               	clrf	tblptru,c
 21179  0127EA  0E00               	movlw	low (__mediumconst shr (0+16))
 21180  0127EC  22F8               	addwfc	tblptru,f,c
 21181  0127EE                     	endif
 21182  0127EE  0009               	tblrd		*+
 21183  0127F0  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21184  0127F4  0009               	tblrd		*+
 21185  0127F6  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21186  0127FA  000A               	tblrd		*-
 21187  0127FC  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21188  012800  ECF5  F0A4         	call	i2___ftmul	;wreg free
 21189  012804  C027  F039         	movff	?i2___ftmul,i2_scale$3347
 21190  012808  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3347+1
 21191  01280C  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3347+2
 21192                           
 21193                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 21194  012810  C039  F027         	movff	i2_scale$3347,i2___ftmul@f1
 21195  012814  C03A  F028         	movff	i2_scale$3347+1,i2___ftmul@f1+1
 21196  012818  C03B  F029         	movff	i2_scale$3347+2,i2___ftmul@f1+2
 21197  01281C  0E00               	movlw	0
 21198  01281E  6E12               	movwf	i2___wmul@multiplicand+1,c
 21199  012820  0E03               	movlw	3
 21200  012822  6E11               	movwf	i2___wmul@multiplicand,c
 21201  012824  0E00               	movlw	0
 21202  012826  6E04               	movwf	i2___awmod@divisor+1,c
 21203  012828  0E0A               	movlw	10
 21204  01282A  6E03               	movwf	i2___awmod@divisor,c
 21205  01282C  503C               	movf	i2scale@scl,w,c
 21206  01282E  6E01               	movwf	i2___awmod@dividend,c
 21207  012830  6A02               	clrf	i2___awmod@dividend+1,c
 21208  012832  BE01               	btfsc	i2___awmod@dividend,7,c
 21209  012834  0602               	decf	i2___awmod@dividend+1,f,c
 21210  012836  EC6C  F0AC         	call	i2___awmod	;wreg free
 21211  01283A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21212  01283E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21213  012842  EC7B  F0B1         	call	i2___wmul	;wreg free
 21214  012846  0EC8               	movlw	low __npowers_
 21215  012848  240F               	addwf	?i2___wmul,w,c
 21216  01284A  6EF6               	movwf	tblptrl,c
 21217  01284C  0EF1               	movlw	high __npowers_
 21218  01284E  2010               	addwfc	?i2___wmul+1,w,c
 21219  012850  6EF7               	movwf	tblptrh,c
 21220  012852                     	if	1	;There are 3 active tblptr bytes
 21221  012852  6AF8               	clrf	tblptru,c
 21222  012854  0E00               	movlw	low (__mediumconst shr (0+16))
 21223  012856  22F8               	addwfc	tblptru,f,c
 21224  012858                     	endif
 21225  012858  0009               	tblrd		*+
 21226  01285A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21227  01285E  0009               	tblrd		*+
 21228  012860  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21229  012864  000A               	tblrd		*-
 21230  012866  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21231  01286A  ECF5  F0A4         	call	i2___ftmul	;wreg free
 21232  01286E  C027  F036         	movff	?i2___ftmul,?i2_scale
 21233  012872  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21234  012876  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21235  01287A  0012               	return	
 21236  01287C                     i2l1096:
 21237                           
 21238                           ;doprnt.c: 432: else if(scl > 10)
 21239  01287C  503C               	movf	i2scale@scl,w,c
 21240  01287E  0A80               	xorlw	128
 21241  012880  0F75               	addlw	-139
 21242  012882  A0D8               	btfss	status,0,c
 21243  012884  D059               	goto	i2l1099
 21244                           
 21245                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 21246  012886  0E00               	movlw	0
 21247  012888  6E0A               	movwf	i2___awdiv@divisor+1,c
 21248  01288A  0E0A               	movlw	10
 21249  01288C  6E09               	movwf	i2___awdiv@divisor,c
 21250  01288E  503C               	movf	i2scale@scl,w,c
 21251  012890  6E07               	movwf	i2___awdiv@dividend,c
 21252  012892  6A08               	clrf	i2___awdiv@dividend+1,c
 21253  012894  BE07               	btfsc	i2___awdiv@dividend,7,c
 21254  012896  0608               	decf	i2___awdiv@dividend+1,f,c
 21255  012898  ECFD  F0AA         	call	i2___awdiv	;wreg free
 21256  01289C  0E09               	movlw	9
 21257  01289E  2407               	addwf	?i2___awdiv,w,c
 21258  0128A0  6E0F               	movwf	i2___wmul@multiplier,c
 21259  0128A2  0E00               	movlw	0
 21260  0128A4  2008               	addwfc	?i2___awdiv+1,w,c
 21261  0128A6  6E10               	movwf	i2___wmul@multiplier+1,c
 21262  0128A8  0E00               	movlw	0
 21263  0128AA  6E12               	movwf	i2___wmul@multiplicand+1,c
 21264  0128AC  0E03               	movlw	3
 21265  0128AE  6E11               	movwf	i2___wmul@multiplicand,c
 21266  0128B0  EC7B  F0B1         	call	i2___wmul	;wreg free
 21267  0128B4  0EC8               	movlw	low __npowers_
 21268  0128B6  240F               	addwf	?i2___wmul,w,c
 21269  0128B8  6EF6               	movwf	tblptrl,c
 21270  0128BA  0EF1               	movlw	high __npowers_
 21271  0128BC  2010               	addwfc	?i2___wmul+1,w,c
 21272  0128BE  6EF7               	movwf	tblptrh,c
 21273  0128C0                     	if	1	;There are 3 active tblptr bytes
 21274  0128C0  6AF8               	clrf	tblptru,c
 21275  0128C2  0E00               	movlw	low (__mediumconst shr (0+16))
 21276  0128C4  22F8               	addwfc	tblptru,f,c
 21277  0128C6                     	endif
 21278  0128C6  0009               	tblrd		*+
 21279  0128C8  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21280  0128CC  0009               	tblrd		*+
 21281  0128CE  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21282  0128D2  000A               	tblrd		*-
 21283  0128D4  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21284  0128D8  0E00               	movlw	0
 21285  0128DA  6E12               	movwf	i2___wmul@multiplicand+1,c
 21286  0128DC  0E03               	movlw	3
 21287  0128DE  6E11               	movwf	i2___wmul@multiplicand,c
 21288  0128E0  0E00               	movlw	0
 21289  0128E2  6E04               	movwf	i2___awmod@divisor+1,c
 21290  0128E4  0E0A               	movlw	10
 21291  0128E6  6E03               	movwf	i2___awmod@divisor,c
 21292  0128E8  503C               	movf	i2scale@scl,w,c
 21293  0128EA  6E01               	movwf	i2___awmod@dividend,c
 21294  0128EC  6A02               	clrf	i2___awmod@dividend+1,c
 21295  0128EE  BE01               	btfsc	i2___awmod@dividend,7,c
 21296  0128F0  0602               	decf	i2___awmod@dividend+1,f,c
 21297  0128F2  EC6C  F0AC         	call	i2___awmod	;wreg free
 21298  0128F6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21299  0128FA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21300  0128FE  EC7B  F0B1         	call	i2___wmul	;wreg free
 21301  012902  0EC8               	movlw	low __npowers_
 21302  012904  240F               	addwf	?i2___wmul,w,c
 21303  012906  6EF6               	movwf	tblptrl,c
 21304  012908  0EF1               	movlw	high __npowers_
 21305  01290A  2010               	addwfc	?i2___wmul+1,w,c
 21306  01290C  6EF7               	movwf	tblptrh,c
 21307  01290E                     	if	1	;There are 3 active tblptr bytes
 21308  01290E  6AF8               	clrf	tblptru,c
 21309  012910  0E00               	movlw	low (__mediumconst shr (0+16))
 21310  012912  22F8               	addwfc	tblptru,f,c
 21311  012914                     	endif
 21312  012914  0009               	tblrd		*+
 21313  012916  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21314  01291A  0009               	tblrd		*+
 21315  01291C  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21316  012920  000A               	tblrd		*-
 21317  012922  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21318  012926  ECF5  F0A4         	call	i2___ftmul	;wreg free
 21319  01292A  C027  F036         	movff	?i2___ftmul,?i2_scale
 21320  01292E  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21321  012932  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21322  012936  0012               	return	
 21323  012938                     i2l1099:
 21324                           
 21325                           ;doprnt.c: 434: return _npowers_[scl];
 21326  012938  503C               	movf	i2scale@scl,w,c
 21327  01293A  0D03               	mullw	3
 21328  01293C  0EC8               	movlw	low __npowers_
 21329  01293E  24F3               	addwf	prodl,w,c
 21330  012940  6EF6               	movwf	tblptrl,c
 21331  012942  0EF1               	movlw	high __npowers_
 21332  012944  20F4               	addwfc	prodh,w,c
 21333  012946  6EF7               	movwf	tblptrh,c
 21334  012948                     	if	1	;There are 3 active tblptr bytes
 21335  012948  6AF8               	clrf	tblptru,c
 21336  01294A  0E00               	movlw	low (__mediumconst shr (0+16))
 21337  01294C  22F8               	addwfc	tblptru,f,c
 21338  01294E                     	endif
 21339  01294E  0009               	tblrd		*+
 21340  012950  CFF5 F036          	movff	tablat,?i2_scale
 21341  012954  0009               	tblrd		*+
 21342  012956  CFF5 F037          	movff	tablat,?i2_scale+1
 21343  01295A  000A               	tblrd		*-
 21344  01295C  CFF5 F038          	movff	tablat,?i2_scale+2
 21345  012960  0012               	return	
 21346  012962                     i2l1095:
 21347                           
 21348                           ;doprnt.c: 435: }
 21349                           ;doprnt.c: 436: if(scl>=110)
 21350  012962  503C               	movf	i2scale@scl,w,c
 21351  012964  0A80               	xorlw	128
 21352  012966  0F12               	addlw	-238
 21353  012968  A0D8               	btfss	status,0,c
 21354  01296A  D09A               	goto	i2l1100
 21355                           
 21356                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 21357  01296C  0E00               	movlw	0
 21358  01296E  6E12               	movwf	i2___wmul@multiplicand+1,c
 21359  012970  0E03               	movlw	3
 21360  012972  6E11               	movwf	i2___wmul@multiplicand,c
 21361  012974  0E00               	movlw	0
 21362  012976  6E0A               	movwf	i2___awdiv@divisor+1,c
 21363  012978  0E0A               	movlw	10
 21364  01297A  6E09               	movwf	i2___awdiv@divisor,c
 21365  01297C  0E00               	movlw	0
 21366  01297E  6E04               	movwf	i2___awmod@divisor+1,c
 21367  012980  0E64               	movlw	100
 21368  012982  6E03               	movwf	i2___awmod@divisor,c
 21369  012984  503C               	movf	i2scale@scl,w,c
 21370  012986  6E01               	movwf	i2___awmod@dividend,c
 21371  012988  6A02               	clrf	i2___awmod@dividend+1,c
 21372  01298A  BE01               	btfsc	i2___awmod@dividend,7,c
 21373  01298C  0602               	decf	i2___awmod@dividend+1,f,c
 21374  01298E  EC6C  F0AC         	call	i2___awmod	;wreg free
 21375  012992  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21376  012996  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 21377  01299A  ECFD  F0AA         	call	i2___awdiv	;wreg free
 21378  01299E  0E09               	movlw	9
 21379  0129A0  2407               	addwf	?i2___awdiv,w,c
 21380  0129A2  6E0F               	movwf	i2___wmul@multiplier,c
 21381  0129A4  0E00               	movlw	0
 21382  0129A6  2008               	addwfc	?i2___awdiv+1,w,c
 21383  0129A8  6E10               	movwf	i2___wmul@multiplier+1,c
 21384  0129AA  EC7B  F0B1         	call	i2___wmul	;wreg free
 21385  0129AE  0EA1               	movlw	low __powers_
 21386  0129B0  240F               	addwf	?i2___wmul,w,c
 21387  0129B2  6EF6               	movwf	tblptrl,c
 21388  0129B4  0EF1               	movlw	high __powers_
 21389  0129B6  2010               	addwfc	?i2___wmul+1,w,c
 21390  0129B8  6EF7               	movwf	tblptrh,c
 21391  0129BA                     	if	1	;There are 3 active tblptr bytes
 21392  0129BA  6AF8               	clrf	tblptru,c
 21393  0129BC  0E00               	movlw	low (__mediumconst shr (0+16))
 21394  0129BE  22F8               	addwfc	tblptru,f,c
 21395  0129C0                     	endif
 21396  0129C0  0009               	tblrd		*+
 21397  0129C2  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21398  0129C6  0009               	tblrd		*+
 21399  0129C8  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21400  0129CC  000A               	tblrd		*-
 21401  0129CE  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21402  0129D2  0E00               	movlw	0
 21403  0129D4  6E0A               	movwf	i2___awdiv@divisor+1,c
 21404  0129D6  0E64               	movlw	100
 21405  0129D8  6E09               	movwf	i2___awdiv@divisor,c
 21406  0129DA  503C               	movf	i2scale@scl,w,c
 21407  0129DC  6E07               	movwf	i2___awdiv@dividend,c
 21408  0129DE  6A08               	clrf	i2___awdiv@dividend+1,c
 21409  0129E0  BE07               	btfsc	i2___awdiv@dividend,7,c
 21410  0129E2  0608               	decf	i2___awdiv@dividend+1,f,c
 21411  0129E4  ECFD  F0AA         	call	i2___awdiv	;wreg free
 21412  0129E8  0E12               	movlw	18
 21413  0129EA  2407               	addwf	?i2___awdiv,w,c
 21414  0129EC  6E0F               	movwf	i2___wmul@multiplier,c
 21415  0129EE  0E00               	movlw	0
 21416  0129F0  2008               	addwfc	?i2___awdiv+1,w,c
 21417  0129F2  6E10               	movwf	i2___wmul@multiplier+1,c
 21418  0129F4  0E00               	movlw	0
 21419  0129F6  6E12               	movwf	i2___wmul@multiplicand+1,c
 21420  0129F8  0E03               	movlw	3
 21421  0129FA  6E11               	movwf	i2___wmul@multiplicand,c
 21422  0129FC  EC7B  F0B1         	call	i2___wmul	;wreg free
 21423  012A00  0EA1               	movlw	low __powers_
 21424  012A02  240F               	addwf	?i2___wmul,w,c
 21425  012A04  6EF6               	movwf	tblptrl,c
 21426  012A06  0EF1               	movlw	high __powers_
 21427  012A08  2010               	addwfc	?i2___wmul+1,w,c
 21428  012A0A  6EF7               	movwf	tblptrh,c
 21429  012A0C                     	if	1	;There are 3 active tblptr bytes
 21430  012A0C  6AF8               	clrf	tblptru,c
 21431  012A0E  0E00               	movlw	low (__mediumconst shr (0+16))
 21432  012A10  22F8               	addwfc	tblptru,f,c
 21433  012A12                     	endif
 21434  012A12  0009               	tblrd		*+
 21435  012A14  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21436  012A18  0009               	tblrd		*+
 21437  012A1A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21438  012A1E  000A               	tblrd		*-
 21439  012A20  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21440  012A24  ECF5  F0A4         	call	i2___ftmul	;wreg free
 21441  012A28  C027  F039         	movff	?i2___ftmul,i2_scale$3347
 21442  012A2C  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3347+1
 21443  012A30  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3347+2
 21444                           
 21445                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 21446  012A34  C039  F027         	movff	i2_scale$3347,i2___ftmul@f1
 21447  012A38  C03A  F028         	movff	i2_scale$3347+1,i2___ftmul@f1+1
 21448  012A3C  C03B  F029         	movff	i2_scale$3347+2,i2___ftmul@f1+2
 21449  012A40  0E00               	movlw	0
 21450  012A42  6E12               	movwf	i2___wmul@multiplicand+1,c
 21451  012A44  0E03               	movlw	3
 21452  012A46  6E11               	movwf	i2___wmul@multiplicand,c
 21453  012A48  0E00               	movlw	0
 21454  012A4A  6E04               	movwf	i2___awmod@divisor+1,c
 21455  012A4C  0E0A               	movlw	10
 21456  012A4E  6E03               	movwf	i2___awmod@divisor,c
 21457  012A50  503C               	movf	i2scale@scl,w,c
 21458  012A52  6E01               	movwf	i2___awmod@dividend,c
 21459  012A54  6A02               	clrf	i2___awmod@dividend+1,c
 21460  012A56  BE01               	btfsc	i2___awmod@dividend,7,c
 21461  012A58  0602               	decf	i2___awmod@dividend+1,f,c
 21462  012A5A  EC6C  F0AC         	call	i2___awmod	;wreg free
 21463  012A5E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21464  012A62  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21465  012A66  EC7B  F0B1         	call	i2___wmul	;wreg free
 21466  012A6A  0EA1               	movlw	low __powers_
 21467  012A6C  240F               	addwf	?i2___wmul,w,c
 21468  012A6E  6EF6               	movwf	tblptrl,c
 21469  012A70  0EF1               	movlw	high __powers_
 21470  012A72  2010               	addwfc	?i2___wmul+1,w,c
 21471  012A74  6EF7               	movwf	tblptrh,c
 21472  012A76                     	if	1	;There are 3 active tblptr bytes
 21473  012A76  6AF8               	clrf	tblptru,c
 21474  012A78  0E00               	movlw	low (__mediumconst shr (0+16))
 21475  012A7A  22F8               	addwfc	tblptru,f,c
 21476  012A7C                     	endif
 21477  012A7C  0009               	tblrd		*+
 21478  012A7E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21479  012A82  0009               	tblrd		*+
 21480  012A84  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21481  012A88  000A               	tblrd		*-
 21482  012A8A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21483  012A8E  ECF5  F0A4         	call	i2___ftmul	;wreg free
 21484  012A92  C027  F036         	movff	?i2___ftmul,?i2_scale
 21485  012A96  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21486  012A9A  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21487  012A9E  0012               	return	
 21488  012AA0                     i2l1100:
 21489                           
 21490                           ;doprnt.c: 438: else if(scl > 10)
 21491  012AA0  503C               	movf	i2scale@scl,w,c
 21492  012AA2  0A80               	xorlw	128
 21493  012AA4  0F75               	addlw	-139
 21494  012AA6  A0D8               	btfss	status,0,c
 21495  012AA8  D059               	goto	i2l1102
 21496                           
 21497                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 21498  012AAA  0E00               	movlw	0
 21499  012AAC  6E0A               	movwf	i2___awdiv@divisor+1,c
 21500  012AAE  0E0A               	movlw	10
 21501  012AB0  6E09               	movwf	i2___awdiv@divisor,c
 21502  012AB2  503C               	movf	i2scale@scl,w,c
 21503  012AB4  6E07               	movwf	i2___awdiv@dividend,c
 21504  012AB6  6A08               	clrf	i2___awdiv@dividend+1,c
 21505  012AB8  BE07               	btfsc	i2___awdiv@dividend,7,c
 21506  012ABA  0608               	decf	i2___awdiv@dividend+1,f,c
 21507  012ABC  ECFD  F0AA         	call	i2___awdiv	;wreg free
 21508  012AC0  0E09               	movlw	9
 21509  012AC2  2407               	addwf	?i2___awdiv,w,c
 21510  012AC4  6E0F               	movwf	i2___wmul@multiplier,c
 21511  012AC6  0E00               	movlw	0
 21512  012AC8  2008               	addwfc	?i2___awdiv+1,w,c
 21513  012ACA  6E10               	movwf	i2___wmul@multiplier+1,c
 21514  012ACC  0E00               	movlw	0
 21515  012ACE  6E12               	movwf	i2___wmul@multiplicand+1,c
 21516  012AD0  0E03               	movlw	3
 21517  012AD2  6E11               	movwf	i2___wmul@multiplicand,c
 21518  012AD4  EC7B  F0B1         	call	i2___wmul	;wreg free
 21519  012AD8  0EA1               	movlw	low __powers_
 21520  012ADA  240F               	addwf	?i2___wmul,w,c
 21521  012ADC  6EF6               	movwf	tblptrl,c
 21522  012ADE  0EF1               	movlw	high __powers_
 21523  012AE0  2010               	addwfc	?i2___wmul+1,w,c
 21524  012AE2  6EF7               	movwf	tblptrh,c
 21525  012AE4                     	if	1	;There are 3 active tblptr bytes
 21526  012AE4  6AF8               	clrf	tblptru,c
 21527  012AE6  0E00               	movlw	low (__mediumconst shr (0+16))
 21528  012AE8  22F8               	addwfc	tblptru,f,c
 21529  012AEA                     	endif
 21530  012AEA  0009               	tblrd		*+
 21531  012AEC  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21532  012AF0  0009               	tblrd		*+
 21533  012AF2  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21534  012AF6  000A               	tblrd		*-
 21535  012AF8  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21536  012AFC  0E00               	movlw	0
 21537  012AFE  6E12               	movwf	i2___wmul@multiplicand+1,c
 21538  012B00  0E03               	movlw	3
 21539  012B02  6E11               	movwf	i2___wmul@multiplicand,c
 21540  012B04  0E00               	movlw	0
 21541  012B06  6E04               	movwf	i2___awmod@divisor+1,c
 21542  012B08  0E0A               	movlw	10
 21543  012B0A  6E03               	movwf	i2___awmod@divisor,c
 21544  012B0C  503C               	movf	i2scale@scl,w,c
 21545  012B0E  6E01               	movwf	i2___awmod@dividend,c
 21546  012B10  6A02               	clrf	i2___awmod@dividend+1,c
 21547  012B12  BE01               	btfsc	i2___awmod@dividend,7,c
 21548  012B14  0602               	decf	i2___awmod@dividend+1,f,c
 21549  012B16  EC6C  F0AC         	call	i2___awmod	;wreg free
 21550  012B1A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21551  012B1E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21552  012B22  EC7B  F0B1         	call	i2___wmul	;wreg free
 21553  012B26  0EA1               	movlw	low __powers_
 21554  012B28  240F               	addwf	?i2___wmul,w,c
 21555  012B2A  6EF6               	movwf	tblptrl,c
 21556  012B2C  0EF1               	movlw	high __powers_
 21557  012B2E  2010               	addwfc	?i2___wmul+1,w,c
 21558  012B30  6EF7               	movwf	tblptrh,c
 21559  012B32                     	if	1	;There are 3 active tblptr bytes
 21560  012B32  6AF8               	clrf	tblptru,c
 21561  012B34  0E00               	movlw	low (__mediumconst shr (0+16))
 21562  012B36  22F8               	addwfc	tblptru,f,c
 21563  012B38                     	endif
 21564  012B38  0009               	tblrd		*+
 21565  012B3A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21566  012B3E  0009               	tblrd		*+
 21567  012B40  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21568  012B44  000A               	tblrd		*-
 21569  012B46  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21570  012B4A  ECF5  F0A4         	call	i2___ftmul	;wreg free
 21571  012B4E  C027  F036         	movff	?i2___ftmul,?i2_scale
 21572  012B52  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 21573  012B56  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 21574  012B5A  0012               	return	
 21575  012B5C                     i2l1102:
 21576                           
 21577                           ;doprnt.c: 440: return _powers_[scl];
 21578  012B5C  503C               	movf	i2scale@scl,w,c
 21579  012B5E  0D03               	mullw	3
 21580  012B60  0EA1               	movlw	low __powers_
 21581  012B62  24F3               	addwf	prodl,w,c
 21582  012B64  6EF6               	movwf	tblptrl,c
 21583  012B66  0EF1               	movlw	high __powers_
 21584  012B68  20F4               	addwfc	prodh,w,c
 21585  012B6A  6EF7               	movwf	tblptrh,c
 21586  012B6C                     	if	1	;There are 3 active tblptr bytes
 21587  012B6C  6AF8               	clrf	tblptru,c
 21588  012B6E  0E00               	movlw	low (__mediumconst shr (0+16))
 21589  012B70  22F8               	addwfc	tblptru,f,c
 21590  012B72                     	endif
 21591  012B72  0009               	tblrd		*+
 21592  012B74  CFF5 F036          	movff	tablat,?i2_scale
 21593  012B78  0009               	tblrd		*+
 21594  012B7A  CFF5 F037          	movff	tablat,?i2_scale+1
 21595  012B7E  000A               	tblrd		*-
 21596  012B80  CFF5 F038          	movff	tablat,?i2_scale+2
 21597  012B84  0012               	return	
 21598  012B86                     __end_ofi2_scale:
 21599                           	opt stack 0
 21600                           tosu	equ	0xFFF
 21601                           tosh	equ	0xFFE
 21602                           tosl	equ	0xFFD
 21603                           pclatu	equ	0xFFB
 21604                           pclath	equ	0xFFA
 21605                           tblptru	equ	0xFF8
 21606                           tblptrh	equ	0xFF7
 21607                           tblptrl	equ	0xFF6
 21608                           tablat	equ	0xFF5
 21609                           prodh	equ	0xFF4
 21610                           prodl	equ	0xFF3
 21611                           intcon	equ	0xFF2
 21612                           postinc0	equ	0xFEE
 21613                           fsr0h	equ	0xFEA
 21614                           fsr0l	equ	0xFE9
 21615                           wreg	equ	0xFE8
 21616                           indf1	equ	0xFE7
 21617                           postdec1	equ	0xFE5
 21618                           fsr1h	equ	0xFE2
 21619                           fsr1l	equ	0xFE1
 21620                           bsr	equ	0xFE0
 21621                           indf2	equ	0xFDF
 21622                           postinc2	equ	0xFDE
 21623                           postdec2	equ	0xFDD
 21624                           fsr2h	equ	0xFDA
 21625                           fsr2l	equ	0xFD9
 21626                           status	equ	0xFD8
 21627                           
 21628 ;; *************** function i2_putch *****************
 21629 ;; Defined at:
 21630 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 21631 ;; Parameters:    Size  Location     Type
 21632 ;;  txData          1    wreg     unsigned char 
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;  txData          1    1[COMRAM] unsigned char 
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  1    wreg      void 
 21637 ;; Registers used:
 21638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/0
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21648 ;;Total ram usage:        1 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; Hardware stack levels required when called:    1
 21651 ;; This function calls:
 21652 ;;		i2_EUSART2_Write
 21653 ;; This function is called by:
 21654 ;;		i2_printf
 21655 ;; This function uses a non-reentrant model
 21656 ;;
 21657                           
 21658                           	psect	text75
 21659  0164EA                     __ptext75:
 21660                           	opt stack 0
 21661  0164EA                     i2_putch:
 21662                           	opt stack 14
 21663                           
 21664                           ;incstack = 0
 21665                           ;i2putch@txData stored from wreg
 21666  0164EA  6E02               	movwf	i2putch@txData,c
 21667                           
 21668                           ;eusart2.c: 182: EUSART2_Write(txData);
 21669  0164EC  5002               	movf	i2putch@txData,w,c
 21670  0164EE  ECA5  F0AF         	call	i2_EUSART2_Write
 21671  0164F2  0012               	return		;funcret
 21672  0164F4                     __end_ofi2_putch:
 21673                           	opt stack 0
 21674                           tosu	equ	0xFFF
 21675                           tosh	equ	0xFFE
 21676                           tosl	equ	0xFFD
 21677                           pclatu	equ	0xFFB
 21678                           pclath	equ	0xFFA
 21679                           tblptru	equ	0xFF8
 21680                           tblptrh	equ	0xFF7
 21681                           tblptrl	equ	0xFF6
 21682                           tablat	equ	0xFF5
 21683                           prodh	equ	0xFF4
 21684                           prodl	equ	0xFF3
 21685                           intcon	equ	0xFF2
 21686                           postinc0	equ	0xFEE
 21687                           fsr0h	equ	0xFEA
 21688                           fsr0l	equ	0xFE9
 21689                           wreg	equ	0xFE8
 21690                           indf1	equ	0xFE7
 21691                           postdec1	equ	0xFE5
 21692                           fsr1h	equ	0xFE2
 21693                           fsr1l	equ	0xFE1
 21694                           bsr	equ	0xFE0
 21695                           indf2	equ	0xFDF
 21696                           postinc2	equ	0xFDE
 21697                           postdec2	equ	0xFDD
 21698                           fsr2h	equ	0xFDA
 21699                           fsr2l	equ	0xFD9
 21700                           status	equ	0xFD8
 21701                           
 21702 ;; *************** function i2_EUSART2_Write *****************
 21703 ;; Defined at:
 21704 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 21705 ;; Parameters:    Size  Location     Type
 21706 ;;  txData          1    wreg     unsigned char 
 21707 ;; Auto vars:     Size  Location     Type
 21708 ;;  txData          1    0[COMRAM] unsigned char 
 21709 ;; Return value:  Size  Location     Type
 21710 ;;                  1    wreg      void 
 21711 ;; Registers used:
 21712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21713 ;; Tracked objects:
 21714 ;;		On entry : 0/0
 21715 ;;		On exit  : 0/0
 21716 ;;		Unchanged: 0/0
 21717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21722 ;;Total ram usage:        1 bytes
 21723 ;; Hardware stack levels used:    1
 21724 ;; This function calls:
 21725 ;;		Nothing
 21726 ;; This function is called by:
 21727 ;;		i2_putch
 21728 ;; This function uses a non-reentrant model
 21729 ;;
 21730                           
 21731                           	psect	text76
 21732  015F4A                     __ptext76:
 21733                           	opt stack 0
 21734  015F4A                     i2_EUSART2_Write:
 21735                           	opt stack 14
 21736                           
 21737                           ;incstack = 0
 21738                           ;i2EUSART2_Write@txData stored from wreg
 21739  015F4A  6E01               	movwf	i2EUSART2_Write@txData,c
 21740                           
 21741                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 21742  015F4C  D001               	goto	i2l374
 21743  015F4E                     i2l375:
 21744                           
 21745                           ; BSR set to: 1
 21746  015F4E  0004               	clrwdt		;# 
 21747  015F50                     i2l374:
 21748  015F50  0101               	movlb	1	; () banked
 21749  015F52  51DC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 21750  015F54  B4D8               	btfsc	status,2,c
 21751  015F56  D7FB               	goto	i2l375
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;eusart2.c: 156: }
 21755                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 21756  015F58  010E               	movlb	14	; () banked
 21757  015F5A  BD2C               	btfsc	44,6,b	;volatile
 21758  015F5C  D003               	goto	i2l377
 21759                           
 21760                           ; BSR set to: 14
 21761                           ;eusart2.c: 159: {
 21762                           ;eusart2.c: 160: TX2REG = txData;
 21763  015F5E  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 21764                           
 21765                           ;eusart2.c: 161: }
 21766  015F62  D013               	goto	i2l378
 21767  015F64                     i2l377:
 21768                           
 21769                           ; BSR set to: 14
 21770                           ;eusart2.c: 162: else
 21771                           ;eusart2.c: 163: {
 21772                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 21773  015F64  9D2C               	bcf	44,6,b	;volatile
 21774                           
 21775                           ; BSR set to: 14
 21776                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 21777  015F66  0101               	movlb	1	; () banked
 21778  015F68  51DE               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 21779  015F6A  0D01               	mullw	1
 21780  015F6C  0E00               	movlw	low _eusart2TxBuffer
 21781  015F6E  24F3               	addwf	prodl,w,c
 21782  015F70  6ED9               	movwf	fsr2l,c
 21783  015F72  0E02               	movlw	high _eusart2TxBuffer
 21784  015F74  20F4               	addwfc	prodh,w,c
 21785  015F76  6EDA               	movwf	fsr2h,c
 21786  015F78  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 21787                           
 21788                           ; BSR set to: 1
 21789  015F7C  2BDE               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 21790                           
 21791                           ; BSR set to: 1
 21792                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 21793  015F7E  0E7F               	movlw	127
 21794  015F80  65DE               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 21795  015F82  D002               	goto	i2l379
 21796                           
 21797                           ; BSR set to: 1
 21798                           ;eusart2.c: 167: {
 21799                           ;eusart2.c: 168: eusart2TxHead = 0;
 21800  015F84  0E00               	movlw	0
 21801  015F86  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21802  015F88                     i2l379:
 21803                           
 21804                           ; BSR set to: 1
 21805                           ;eusart2.c: 169: }
 21806                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 21807                           
 21808                           ; BSR set to: 1
 21809  015F88  07DC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 21810  015F8A                     i2l378:
 21811                           
 21812                           ;eusart2.c: 171: }
 21813                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 21814                           
 21815                           ; BSR set to: 1
 21816  015F8A  010E               	movlb	14	; () banked
 21817  015F8C  8D2C               	bsf	44,6,b	;volatile
 21818                           
 21819                           ; BSR set to: 14
 21820  015F8E  0012               	return		;funcret
 21821  015F90                     __end_ofi2_EUSART2_Write:
 21822                           	opt stack 0
 21823                           tosu	equ	0xFFF
 21824                           tosh	equ	0xFFE
 21825                           tosl	equ	0xFFD
 21826                           pclatu	equ	0xFFB
 21827                           pclath	equ	0xFFA
 21828                           tblptru	equ	0xFF8
 21829                           tblptrh	equ	0xFF7
 21830                           tblptrl	equ	0xFF6
 21831                           tablat	equ	0xFF5
 21832                           prodh	equ	0xFF4
 21833                           prodl	equ	0xFF3
 21834                           intcon	equ	0xFF2
 21835                           postinc0	equ	0xFEE
 21836                           fsr0h	equ	0xFEA
 21837                           fsr0l	equ	0xFE9
 21838                           wreg	equ	0xFE8
 21839                           indf1	equ	0xFE7
 21840                           postdec1	equ	0xFE5
 21841                           fsr1h	equ	0xFE2
 21842                           fsr1l	equ	0xFE1
 21843                           bsr	equ	0xFE0
 21844                           indf2	equ	0xFDF
 21845                           postinc2	equ	0xFDE
 21846                           postdec2	equ	0xFDD
 21847                           fsr2h	equ	0xFDA
 21848                           fsr2l	equ	0xFD9
 21849                           status	equ	0xFD8
 21850                           
 21851 ;; *************** function i2_isdigit *****************
 21852 ;; Defined at:
 21853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 21854 ;; Parameters:    Size  Location     Type
 21855 ;;  c               1    wreg     unsigned char 
 21856 ;; Auto vars:     Size  Location     Type
 21857 ;;  c               1    2[COMRAM] unsigned char 
 21858 ;; Return value:  Size  Location     Type
 21859 ;;		None               void
 21860 ;; Registers used:
 21861 ;;		wreg, status,2, status,0
 21862 ;; Tracked objects:
 21863 ;;		On entry : 0/0
 21864 ;;		On exit  : 0/0
 21865 ;;		Unchanged: 0/0
 21866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21870 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21871 ;;Total ram usage:        3 bytes
 21872 ;; Hardware stack levels used:    1
 21873 ;; This function calls:
 21874 ;;		Nothing
 21875 ;; This function is called by:
 21876 ;;		i2_printf
 21877 ;; This function uses a non-reentrant model
 21878 ;;
 21879                           
 21880                           	psect	text77
 21881  016386                     __ptext77:
 21882                           	opt stack 0
 21883  016386                     i2_isdigit:
 21884                           	opt stack 15
 21885                           
 21886                           ; BSR set to: 14
 21887                           ;incstack = 0
 21888                           ;i2isdigit@c stored from wreg
 21889  016386  6E03               	movwf	i2isdigit@c,c
 21890  016388  0E00               	movlw	0
 21891  01638A  6E02               	movwf	i2_isdigit$2506,c
 21892  01638C  0E3A               	movlw	58
 21893  01638E  6003               	cpfslt	i2isdigit@c,c
 21894  016390  D005               	goto	i2l1623
 21895  016392  0E2F               	movlw	47
 21896  016394  6403               	cpfsgt	i2isdigit@c,c
 21897  016396  D002               	goto	i2l1623
 21898  016398  0E01               	movlw	1
 21899  01639A  6E02               	movwf	i2_isdigit$2506,c
 21900  01639C                     i2l1623:
 21901  01639C  C002  F001         	movff	i2_isdigit$2506,??i2_isdigit
 21902  0163A0  3001               	rrcf	??i2_isdigit,w,c
 21903  0163A2  0012               	return	
 21904  0163A4                     __end_ofi2_isdigit:
 21905                           	opt stack 0
 21906                           tosu	equ	0xFFF
 21907                           tosh	equ	0xFFE
 21908                           tosl	equ	0xFFD
 21909                           pclatu	equ	0xFFB
 21910                           pclath	equ	0xFFA
 21911                           tblptru	equ	0xFF8
 21912                           tblptrh	equ	0xFF7
 21913                           tblptrl	equ	0xFF6
 21914                           tablat	equ	0xFF5
 21915                           prodh	equ	0xFF4
 21916                           prodl	equ	0xFF3
 21917                           intcon	equ	0xFF2
 21918                           postinc0	equ	0xFEE
 21919                           fsr0h	equ	0xFEA
 21920                           fsr0l	equ	0xFE9
 21921                           wreg	equ	0xFE8
 21922                           indf1	equ	0xFE7
 21923                           postdec1	equ	0xFE5
 21924                           fsr1h	equ	0xFE2
 21925                           fsr1l	equ	0xFE1
 21926                           bsr	equ	0xFE0
 21927                           indf2	equ	0xFDF
 21928                           postinc2	equ	0xFDE
 21929                           postdec2	equ	0xFDD
 21930                           fsr2h	equ	0xFDA
 21931                           fsr2l	equ	0xFD9
 21932                           status	equ	0xFD8
 21933                           
 21934 ;; *************** function i2_fround *****************
 21935 ;; Defined at:
 21936 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 21937 ;; Parameters:    Size  Location     Type
 21938 ;;  prec            1    wreg     unsigned char 
 21939 ;; Auto vars:     Size  Location     Type
 21940 ;;  prec            1   62[COMRAM] unsigned char 
 21941 ;; Return value:  Size  Location     Type
 21942 ;;                  3   53[COMRAM] unsigned char 
 21943 ;; Registers used:
 21944 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21945 ;; Tracked objects:
 21946 ;;		On entry : 0/0
 21947 ;;		On exit  : 0/0
 21948 ;;		Unchanged: 0/0
 21949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21950 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21951 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21953 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21954 ;;Total ram usage:       10 bytes
 21955 ;; Hardware stack levels used:    1
 21956 ;; Hardware stack levels required when called:    2
 21957 ;; This function calls:
 21958 ;;		i2___awdiv
 21959 ;;		i2___awmod
 21960 ;;		i2___ftmul
 21961 ;;		i2___wmul
 21962 ;; This function is called by:
 21963 ;;		i2_printf
 21964 ;; This function uses a non-reentrant model
 21965 ;;
 21966                           
 21967                           	psect	text78
 21968  013182                     __ptext78:
 21969                           	opt stack 0
 21970  013182                     i2_fround:
 21971                           	opt stack 13
 21972                           
 21973                           ;incstack = 0
 21974                           ;i2fround@prec stored from wreg
 21975  013182  6E3F               	movwf	i2fround@prec,c
 21976                           
 21977                           ;doprnt.c: 413: if(prec>=110)
 21978  013184  0E6D               	movlw	109
 21979  013186  643F               	cpfsgt	i2fround@prec,c
 21980  013188  D0A8               	goto	i2l1089
 21981                           
 21982                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21983  01318A  0E00               	movlw	0
 21984  01318C  6E12               	movwf	i2___wmul@multiplicand+1,c
 21985  01318E  0E03               	movlw	3
 21986  013190  6E11               	movwf	i2___wmul@multiplicand,c
 21987  013192  0E00               	movlw	0
 21988  013194  6E0A               	movwf	i2___awdiv@divisor+1,c
 21989  013196  0E0A               	movlw	10
 21990  013198  6E09               	movwf	i2___awdiv@divisor,c
 21991  01319A  0E00               	movlw	0
 21992  01319C  6E04               	movwf	i2___awmod@divisor+1,c
 21993  01319E  0E64               	movlw	100
 21994  0131A0  6E03               	movwf	i2___awmod@divisor,c
 21995  0131A2  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21996  0131A6  6A02               	clrf	i2___awmod@dividend+1,c
 21997  0131A8  EC6C  F0AC         	call	i2___awmod	;wreg free
 21998  0131AC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21999  0131B0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 22000  0131B4  ECFD  F0AA         	call	i2___awdiv	;wreg free
 22001  0131B8  0E09               	movlw	9
 22002  0131BA  2407               	addwf	?i2___awdiv,w,c
 22003  0131BC  6E0F               	movwf	i2___wmul@multiplier,c
 22004  0131BE  0E00               	movlw	0
 22005  0131C0  2008               	addwfc	?i2___awdiv+1,w,c
 22006  0131C2  6E10               	movwf	i2___wmul@multiplier+1,c
 22007  0131C4  EC7B  F0B1         	call	i2___wmul	;wreg free
 22008  0131C8  0EC8               	movlw	low __npowers_
 22009  0131CA  240F               	addwf	?i2___wmul,w,c
 22010  0131CC  6EF6               	movwf	tblptrl,c
 22011  0131CE  0EF1               	movlw	high __npowers_
 22012  0131D0  2010               	addwfc	?i2___wmul+1,w,c
 22013  0131D2  6EF7               	movwf	tblptrh,c
 22014  0131D4                     	if	1	;There are 3 active tblptr bytes
 22015  0131D4  6AF8               	clrf	tblptru,c
 22016  0131D6  0E00               	movlw	low (__mediumconst shr (0+16))
 22017  0131D8  22F8               	addwfc	tblptru,f,c
 22018  0131DA                     	endif
 22019  0131DA  0009               	tblrd		*+
 22020  0131DC  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22021  0131E0  0009               	tblrd		*+
 22022  0131E2  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22023  0131E6  000A               	tblrd		*-
 22024  0131E8  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22025  0131EC  0E00               	movlw	0
 22026  0131EE  6E0A               	movwf	i2___awdiv@divisor+1,c
 22027  0131F0  0E64               	movlw	100
 22028  0131F2  6E09               	movwf	i2___awdiv@divisor,c
 22029  0131F4  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 22030  0131F8  6A08               	clrf	i2___awdiv@dividend+1,c
 22031  0131FA  ECFD  F0AA         	call	i2___awdiv	;wreg free
 22032  0131FE  0E12               	movlw	18
 22033  013200  2407               	addwf	?i2___awdiv,w,c
 22034  013202  6E0F               	movwf	i2___wmul@multiplier,c
 22035  013204  0E00               	movlw	0
 22036  013206  2008               	addwfc	?i2___awdiv+1,w,c
 22037  013208  6E10               	movwf	i2___wmul@multiplier+1,c
 22038  01320A  0E00               	movlw	0
 22039  01320C  6E12               	movwf	i2___wmul@multiplicand+1,c
 22040  01320E  0E03               	movlw	3
 22041  013210  6E11               	movwf	i2___wmul@multiplicand,c
 22042  013212  EC7B  F0B1         	call	i2___wmul	;wreg free
 22043  013216  0EC8               	movlw	low __npowers_
 22044  013218  240F               	addwf	?i2___wmul,w,c
 22045  01321A  6EF6               	movwf	tblptrl,c
 22046  01321C  0EF1               	movlw	high __npowers_
 22047  01321E  2010               	addwfc	?i2___wmul+1,w,c
 22048  013220  6EF7               	movwf	tblptrh,c
 22049  013222                     	if	1	;There are 3 active tblptr bytes
 22050  013222  6AF8               	clrf	tblptru,c
 22051  013224  0E00               	movlw	low (__mediumconst shr (0+16))
 22052  013226  22F8               	addwfc	tblptru,f,c
 22053  013228                     	endif
 22054  013228  0009               	tblrd		*+
 22055  01322A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22056  01322E  0009               	tblrd		*+
 22057  013230  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22058  013234  000A               	tblrd		*-
 22059  013236  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22060  01323A  ECF5  F0A4         	call	i2___ftmul	;wreg free
 22061  01323E  C027  F03C         	movff	?i2___ftmul,i2_fround$3345
 22062  013242  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3345+1
 22063  013246  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3345+2
 22064                           
 22065                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 22066  01324A  0E00               	movlw	0
 22067  01324C  6E12               	movwf	i2___wmul@multiplicand+1,c
 22068  01324E  0E03               	movlw	3
 22069  013250  6E11               	movwf	i2___wmul@multiplicand,c
 22070  013252  0E00               	movlw	0
 22071  013254  6E04               	movwf	i2___awmod@divisor+1,c
 22072  013256  0E0A               	movlw	10
 22073  013258  6E03               	movwf	i2___awmod@divisor,c
 22074  01325A  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 22075  01325E  6A02               	clrf	i2___awmod@dividend+1,c
 22076  013260  EC6C  F0AC         	call	i2___awmod	;wreg free
 22077  013264  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 22078  013268  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 22079  01326C  EC7B  F0B1         	call	i2___wmul	;wreg free
 22080  013270  0EC8               	movlw	low __npowers_
 22081  013272  240F               	addwf	?i2___wmul,w,c
 22082  013274  6EF6               	movwf	tblptrl,c
 22083  013276  0EF1               	movlw	high __npowers_
 22084  013278  2010               	addwfc	?i2___wmul+1,w,c
 22085  01327A  6EF7               	movwf	tblptrh,c
 22086  01327C                     	if	1	;There are 3 active tblptr bytes
 22087  01327C  6AF8               	clrf	tblptru,c
 22088  01327E  0E00               	movlw	low (__mediumconst shr (0+16))
 22089  013280  22F8               	addwfc	tblptru,f,c
 22090  013282                     	endif
 22091  013282  0009               	tblrd		*+
 22092  013284  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22093  013288  0009               	tblrd		*+
 22094  01328A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22095  01328E  000A               	tblrd		*-
 22096  013290  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22097  013294  C03C  F027         	movff	i2_fround$3345,i2___ftmul@f1
 22098  013298  C03D  F028         	movff	i2_fround$3345+1,i2___ftmul@f1+1
 22099  01329C  C03E  F029         	movff	i2_fround$3345+2,i2___ftmul@f1+2
 22100  0132A0  ECF5  F0A4         	call	i2___ftmul	;wreg free
 22101  0132A4  C027  F039         	movff	?i2___ftmul,i2_fround$3346
 22102  0132A8  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3346+1
 22103  0132AC  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3346+2
 22104                           
 22105                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 22106  0132B0  C039  F027         	movff	i2_fround$3346,i2___ftmul@f1
 22107  0132B4  C03A  F028         	movff	i2_fround$3346+1,i2___ftmul@f1+1
 22108  0132B8  C03B  F029         	movff	i2_fround$3346+2,i2___ftmul@f1+2
 22109  0132BC  0E00               	movlw	0
 22110  0132BE  6E2A               	movwf	i2___ftmul@f2,c
 22111  0132C0  0E00               	movlw	0
 22112  0132C2  6E2B               	movwf	i2___ftmul@f2+1,c
 22113  0132C4  0E3F               	movlw	63
 22114  0132C6  6E2C               	movwf	i2___ftmul@f2+2,c
 22115  0132C8  ECF5  F0A4         	call	i2___ftmul	;wreg free
 22116  0132CC  C027  F036         	movff	?i2___ftmul,?i2_fround
 22117  0132D0  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 22118  0132D4  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 22119  0132D8  0012               	return	
 22120  0132DA                     i2l1089:
 22121                           
 22122                           ;doprnt.c: 415: else if(prec > 10)
 22123  0132DA  0E0A               	movlw	10
 22124  0132DC  643F               	cpfsgt	i2fround@prec,c
 22125  0132DE  D069               	goto	i2l1092
 22126                           
 22127                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 22128  0132E0  0E00               	movlw	0
 22129  0132E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 22130  0132E4  0E03               	movlw	3
 22131  0132E6  6E11               	movwf	i2___wmul@multiplicand,c
 22132  0132E8  0E00               	movlw	0
 22133  0132EA  6E04               	movwf	i2___awmod@divisor+1,c
 22134  0132EC  0E0A               	movlw	10
 22135  0132EE  6E03               	movwf	i2___awmod@divisor,c
 22136  0132F0  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 22137  0132F4  6A02               	clrf	i2___awmod@dividend+1,c
 22138  0132F6  EC6C  F0AC         	call	i2___awmod	;wreg free
 22139  0132FA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 22140  0132FE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 22141  013302  EC7B  F0B1         	call	i2___wmul	;wreg free
 22142  013306  0EC8               	movlw	low __npowers_
 22143  013308  240F               	addwf	?i2___wmul,w,c
 22144  01330A  6EF6               	movwf	tblptrl,c
 22145  01330C  0EF1               	movlw	high __npowers_
 22146  01330E  2010               	addwfc	?i2___wmul+1,w,c
 22147  013310  6EF7               	movwf	tblptrh,c
 22148  013312                     	if	1	;There are 3 active tblptr bytes
 22149  013312  6AF8               	clrf	tblptru,c
 22150  013314  0E00               	movlw	low (__mediumconst shr (0+16))
 22151  013316  22F8               	addwfc	tblptru,f,c
 22152  013318                     	endif
 22153  013318  0009               	tblrd		*+
 22154  01331A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22155  01331E  0009               	tblrd		*+
 22156  013320  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22157  013324  000A               	tblrd		*-
 22158  013326  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22159  01332A  0E00               	movlw	0
 22160  01332C  6E0A               	movwf	i2___awdiv@divisor+1,c
 22161  01332E  0E0A               	movlw	10
 22162  013330  6E09               	movwf	i2___awdiv@divisor,c
 22163  013332  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 22164  013336  6A08               	clrf	i2___awdiv@dividend+1,c
 22165  013338  ECFD  F0AA         	call	i2___awdiv	;wreg free
 22166  01333C  0E09               	movlw	9
 22167  01333E  2407               	addwf	?i2___awdiv,w,c
 22168  013340  6E0F               	movwf	i2___wmul@multiplier,c
 22169  013342  0E00               	movlw	0
 22170  013344  2008               	addwfc	?i2___awdiv+1,w,c
 22171  013346  6E10               	movwf	i2___wmul@multiplier+1,c
 22172  013348  0E00               	movlw	0
 22173  01334A  6E12               	movwf	i2___wmul@multiplicand+1,c
 22174  01334C  0E03               	movlw	3
 22175  01334E  6E11               	movwf	i2___wmul@multiplicand,c
 22176  013350  EC7B  F0B1         	call	i2___wmul	;wreg free
 22177  013354  0EC8               	movlw	low __npowers_
 22178  013356  240F               	addwf	?i2___wmul,w,c
 22179  013358  6EF6               	movwf	tblptrl,c
 22180  01335A  0EF1               	movlw	high __npowers_
 22181  01335C  2010               	addwfc	?i2___wmul+1,w,c
 22182  01335E  6EF7               	movwf	tblptrh,c
 22183  013360                     	if	1	;There are 3 active tblptr bytes
 22184  013360  6AF8               	clrf	tblptru,c
 22185  013362  0E00               	movlw	low (__mediumconst shr (0+16))
 22186  013364  22F8               	addwfc	tblptru,f,c
 22187  013366                     	endif
 22188  013366  0009               	tblrd		*+
 22189  013368  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22190  01336C  0009               	tblrd		*+
 22191  01336E  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22192  013372  000A               	tblrd		*-
 22193  013374  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22194  013378  ECF5  F0A4         	call	i2___ftmul	;wreg free
 22195  01337C  C027  F03C         	movff	?i2___ftmul,i2_fround$3345
 22196  013380  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3345+1
 22197  013384  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3345+2
 22198                           
 22199                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 22200  013388  C03C  F027         	movff	i2_fround$3345,i2___ftmul@f1
 22201  01338C  C03D  F028         	movff	i2_fround$3345+1,i2___ftmul@f1+1
 22202  013390  C03E  F029         	movff	i2_fround$3345+2,i2___ftmul@f1+2
 22203  013394  0E00               	movlw	0
 22204  013396  6E2A               	movwf	i2___ftmul@f2,c
 22205  013398  0E00               	movlw	0
 22206  01339A  6E2B               	movwf	i2___ftmul@f2+1,c
 22207  01339C  0E3F               	movlw	63
 22208  01339E  6E2C               	movwf	i2___ftmul@f2+2,c
 22209  0133A0  ECF5  F0A4         	call	i2___ftmul	;wreg free
 22210  0133A4  C027  F036         	movff	?i2___ftmul,?i2_fround
 22211  0133A8  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 22212  0133AC  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 22213  0133B0  0012               	return	
 22214  0133B2                     i2l1092:
 22215                           
 22216                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 22217  0133B2  503F               	movf	i2fround@prec,w,c
 22218  0133B4  0D03               	mullw	3
 22219  0133B6  0EC8               	movlw	low __npowers_
 22220  0133B8  24F3               	addwf	prodl,w,c
 22221  0133BA  6EF6               	movwf	tblptrl,c
 22222  0133BC  0EF1               	movlw	high __npowers_
 22223  0133BE  20F4               	addwfc	prodh,w,c
 22224  0133C0  6EF7               	movwf	tblptrh,c
 22225  0133C2                     	if	1	;There are 3 active tblptr bytes
 22226  0133C2  6AF8               	clrf	tblptru,c
 22227  0133C4  0E00               	movlw	low (__mediumconst shr (0+16))
 22228  0133C6  22F8               	addwfc	tblptru,f,c
 22229  0133C8                     	endif
 22230  0133C8  0009               	tblrd		*+
 22231  0133CA  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22232  0133CE  0009               	tblrd		*+
 22233  0133D0  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22234  0133D4  000A               	tblrd		*-
 22235  0133D6  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22236  0133DA  0E00               	movlw	0
 22237  0133DC  6E2A               	movwf	i2___ftmul@f2,c
 22238  0133DE  0E00               	movlw	0
 22239  0133E0  6E2B               	movwf	i2___ftmul@f2+1,c
 22240  0133E2  0E3F               	movlw	63
 22241  0133E4  6E2C               	movwf	i2___ftmul@f2+2,c
 22242  0133E6  ECF5  F0A4         	call	i2___ftmul	;wreg free
 22243  0133EA  C027  F036         	movff	?i2___ftmul,?i2_fround
 22244  0133EE  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 22245  0133F2  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 22246  0133F6  0012               	return	
 22247  0133F8                     __end_ofi2_fround:
 22248                           	opt stack 0
 22249                           tosu	equ	0xFFF
 22250                           tosh	equ	0xFFE
 22251                           tosl	equ	0xFFD
 22252                           pclatu	equ	0xFFB
 22253                           pclath	equ	0xFFA
 22254                           tblptru	equ	0xFF8
 22255                           tblptrh	equ	0xFF7
 22256                           tblptrl	equ	0xFF6
 22257                           tablat	equ	0xFF5
 22258                           prodh	equ	0xFF4
 22259                           prodl	equ	0xFF3
 22260                           intcon	equ	0xFF2
 22261                           postinc0	equ	0xFEE
 22262                           fsr0h	equ	0xFEA
 22263                           fsr0l	equ	0xFE9
 22264                           wreg	equ	0xFE8
 22265                           indf1	equ	0xFE7
 22266                           postdec1	equ	0xFE5
 22267                           fsr1h	equ	0xFE2
 22268                           fsr1l	equ	0xFE1
 22269                           bsr	equ	0xFE0
 22270                           indf2	equ	0xFDF
 22271                           postinc2	equ	0xFDE
 22272                           postdec2	equ	0xFDD
 22273                           fsr2h	equ	0xFDA
 22274                           fsr2l	equ	0xFD9
 22275                           status	equ	0xFD8
 22276                           
 22277 ;; *************** function i2___awmod *****************
 22278 ;; Defined at:
 22279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 22280 ;; Parameters:    Size  Location     Type
 22281 ;;  dividend        2    0[COMRAM] int 
 22282 ;;  divisor         2    2[COMRAM] int 
 22283 ;; Auto vars:     Size  Location     Type
 22284 ;;  __awmod         1    5[COMRAM] unsigned char 
 22285 ;;  __awmod         1    4[COMRAM] unsigned char 
 22286 ;; Return value:  Size  Location     Type
 22287 ;;                  2    0[COMRAM] int 
 22288 ;; Registers used:
 22289 ;;		wreg, status,2, status,0
 22290 ;; Tracked objects:
 22291 ;;		On entry : 0/0
 22292 ;;		On exit  : 0/0
 22293 ;;		Unchanged: 0/0
 22294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22299 ;;Total ram usage:        6 bytes
 22300 ;; Hardware stack levels used:    1
 22301 ;; This function calls:
 22302 ;;		Nothing
 22303 ;; This function is called by:
 22304 ;;		i2_fround
 22305 ;;		i2_scale
 22306 ;; This function uses a non-reentrant model
 22307 ;;
 22308                           
 22309                           	psect	text79
 22310  0158D8                     __ptext79:
 22311                           	opt stack 0
 22312  0158D8                     i2___awmod:
 22313                           	opt stack 14
 22314                           
 22315                           ;incstack = 0
 22316  0158D8  0E00               	movlw	0
 22317  0158DA  6E06               	movwf	i2___awmod@sign,c
 22318  0158DC  AE02               	btfss	i2___awmod@dividend+1,7,c
 22319  0158DE  D006               	goto	i2l1428
 22320  0158E0  6C01               	negf	i2___awmod@dividend,c
 22321  0158E2  1E02               	comf	i2___awmod@dividend+1,f,c
 22322  0158E4  B0D8               	btfsc	status,0,c
 22323  0158E6  2A02               	incf	i2___awmod@dividend+1,f,c
 22324  0158E8  0E01               	movlw	1
 22325  0158EA  6E06               	movwf	i2___awmod@sign,c
 22326  0158EC                     i2l1428:
 22327  0158EC  AE04               	btfss	i2___awmod@divisor+1,7,c
 22328  0158EE  D004               	goto	i2l1429
 22329  0158F0  6C03               	negf	i2___awmod@divisor,c
 22330  0158F2  1E04               	comf	i2___awmod@divisor+1,f,c
 22331  0158F4  B0D8               	btfsc	status,0,c
 22332  0158F6  2A04               	incf	i2___awmod@divisor+1,f,c
 22333  0158F8                     i2l1429:
 22334  0158F8  5003               	movf	i2___awmod@divisor,w,c
 22335  0158FA  1004               	iorwf	i2___awmod@divisor+1,w,c
 22336  0158FC  B4D8               	btfsc	status,2,c
 22337  0158FE  D018               	goto	i2l1436
 22338  015900  0E01               	movlw	1
 22339  015902  6E05               	movwf	i2___awmod@counter,c
 22340  015904  D004               	goto	i2l1431
 22341  015906  90D8               	bcf	status,0,c
 22342  015908  3603               	rlcf	i2___awmod@divisor,f,c
 22343  01590A  3604               	rlcf	i2___awmod@divisor+1,f,c
 22344  01590C  2A05               	incf	i2___awmod@counter,f,c
 22345  01590E                     i2l1431:
 22346  01590E  AE04               	btfss	i2___awmod@divisor+1,7,c
 22347  015910  D7FA               	goto	i2l1432
 22348  015912                     i2u1111_40:
 22349  015912  5003               	movf	i2___awmod@divisor,w,c
 22350  015914  5C01               	subwf	i2___awmod@dividend,w,c
 22351  015916  5004               	movf	i2___awmod@divisor+1,w,c
 22352  015918  5802               	subwfb	i2___awmod@dividend+1,w,c
 22353  01591A  A0D8               	btfss	status,0,c
 22354  01591C  D004               	goto	i2l1435
 22355  01591E  5003               	movf	i2___awmod@divisor,w,c
 22356  015920  5E01               	subwf	i2___awmod@dividend,f,c
 22357  015922  5004               	movf	i2___awmod@divisor+1,w,c
 22358  015924  5A02               	subwfb	i2___awmod@dividend+1,f,c
 22359  015926                     i2l1435:
 22360  015926  90D8               	bcf	status,0,c
 22361  015928  3204               	rrcf	i2___awmod@divisor+1,f,c
 22362  01592A  3203               	rrcf	i2___awmod@divisor,f,c
 22363  01592C  2E05               	decfsz	i2___awmod@counter,f,c
 22364  01592E  D7F1               	goto	i2u1111_40
 22365  015930                     i2l1436:
 22366  015930  5006               	movf	i2___awmod@sign,w,c
 22367  015932  B4D8               	btfsc	status,2,c
 22368  015934  D004               	goto	i2l1437
 22369  015936  6C01               	negf	i2___awmod@dividend,c
 22370  015938  1E02               	comf	i2___awmod@dividend+1,f,c
 22371  01593A  B0D8               	btfsc	status,0,c
 22372  01593C  2A02               	incf	i2___awmod@dividend+1,f,c
 22373  01593E                     i2l1437:
 22374  01593E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 22375  015942  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 22376  015946  0012               	return	
 22377  015948                     __end_ofi2___awmod:
 22378                           	opt stack 0
 22379                           tosu	equ	0xFFF
 22380                           tosh	equ	0xFFE
 22381                           tosl	equ	0xFFD
 22382                           pclatu	equ	0xFFB
 22383                           pclath	equ	0xFFA
 22384                           tblptru	equ	0xFF8
 22385                           tblptrh	equ	0xFF7
 22386                           tblptrl	equ	0xFF6
 22387                           tablat	equ	0xFF5
 22388                           prodh	equ	0xFF4
 22389                           prodl	equ	0xFF3
 22390                           intcon	equ	0xFF2
 22391                           postinc0	equ	0xFEE
 22392                           fsr0h	equ	0xFEA
 22393                           fsr0l	equ	0xFE9
 22394                           wreg	equ	0xFE8
 22395                           indf1	equ	0xFE7
 22396                           postdec1	equ	0xFE5
 22397                           fsr1h	equ	0xFE2
 22398                           fsr1l	equ	0xFE1
 22399                           bsr	equ	0xFE0
 22400                           indf2	equ	0xFDF
 22401                           postinc2	equ	0xFDE
 22402                           postdec2	equ	0xFDD
 22403                           fsr2h	equ	0xFDA
 22404                           fsr2l	equ	0xFD9
 22405                           status	equ	0xFD8
 22406                           
 22407 ;; *************** function i2___awdiv *****************
 22408 ;; Defined at:
 22409 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 22410 ;; Parameters:    Size  Location     Type
 22411 ;;  dividend        2    6[COMRAM] int 
 22412 ;;  divisor         2    8[COMRAM] int 
 22413 ;; Auto vars:     Size  Location     Type
 22414 ;;  __awdiv         2   12[COMRAM] int 
 22415 ;;  __awdiv         1   11[COMRAM] unsigned char 
 22416 ;;  __awdiv         1   10[COMRAM] unsigned char 
 22417 ;; Return value:  Size  Location     Type
 22418 ;;                  2    6[COMRAM] int 
 22419 ;; Registers used:
 22420 ;;		wreg, status,2, status,0
 22421 ;; Tracked objects:
 22422 ;;		On entry : 0/0
 22423 ;;		On exit  : 0/0
 22424 ;;		Unchanged: 0/0
 22425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22427 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22430 ;;Total ram usage:        8 bytes
 22431 ;; Hardware stack levels used:    1
 22432 ;; This function calls:
 22433 ;;		Nothing
 22434 ;; This function is called by:
 22435 ;;		i2_fround
 22436 ;;		i2_scale
 22437 ;;		i2_printf
 22438 ;; This function uses a non-reentrant model
 22439 ;;
 22440                           
 22441                           	psect	text80
 22442  0155FA                     __ptext80:
 22443                           	opt stack 0
 22444  0155FA                     i2___awdiv:
 22445                           	opt stack 14
 22446                           
 22447                           ;incstack = 0
 22448  0155FA  0E00               	movlw	0
 22449  0155FC  6E0C               	movwf	i2___awdiv@sign,c
 22450  0155FE  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 22451  015600  D006               	goto	i2l1415
 22452  015602  6C09               	negf	i2___awdiv@divisor,c
 22453  015604  1E0A               	comf	i2___awdiv@divisor+1,f,c
 22454  015606  B0D8               	btfsc	status,0,c
 22455  015608  2A0A               	incf	i2___awdiv@divisor+1,f,c
 22456  01560A  0E01               	movlw	1
 22457  01560C  6E0C               	movwf	i2___awdiv@sign,c
 22458  01560E                     i2l1415:
 22459  01560E  AE08               	btfss	i2___awdiv@dividend+1,7,c
 22460  015610  D006               	goto	i2l1416
 22461  015612  6C07               	negf	i2___awdiv@dividend,c
 22462  015614  1E08               	comf	i2___awdiv@dividend+1,f,c
 22463  015616  B0D8               	btfsc	status,0,c
 22464  015618  2A08               	incf	i2___awdiv@dividend+1,f,c
 22465  01561A  0E01               	movlw	1
 22466  01561C  1A0C               	xorwf	i2___awdiv@sign,f,c
 22467  01561E                     i2l1416:
 22468  01561E  0E00               	movlw	0
 22469  015620  6E0E               	movwf	i2___awdiv@quotient+1,c
 22470  015622  0E00               	movlw	0
 22471  015624  6E0D               	movwf	i2___awdiv@quotient,c
 22472  015626  5009               	movf	i2___awdiv@divisor,w,c
 22473  015628  100A               	iorwf	i2___awdiv@divisor+1,w,c
 22474  01562A  B4D8               	btfsc	status,2,c
 22475  01562C  D01C               	goto	i2l1423
 22476  01562E  0E01               	movlw	1
 22477  015630  6E0B               	movwf	i2___awdiv@counter,c
 22478  015632  D004               	goto	i2l1418
 22479  015634  90D8               	bcf	status,0,c
 22480  015636  3609               	rlcf	i2___awdiv@divisor,f,c
 22481  015638  360A               	rlcf	i2___awdiv@divisor+1,f,c
 22482  01563A  2A0B               	incf	i2___awdiv@counter,f,c
 22483  01563C                     i2l1418:
 22484  01563C  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 22485  01563E  D7FA               	goto	i2l1419
 22486  015640                     i2u1105_40:
 22487  015640  90D8               	bcf	status,0,c
 22488  015642  360D               	rlcf	i2___awdiv@quotient,f,c
 22489  015644  360E               	rlcf	i2___awdiv@quotient+1,f,c
 22490  015646  5009               	movf	i2___awdiv@divisor,w,c
 22491  015648  5C07               	subwf	i2___awdiv@dividend,w,c
 22492  01564A  500A               	movf	i2___awdiv@divisor+1,w,c
 22493  01564C  5808               	subwfb	i2___awdiv@dividend+1,w,c
 22494  01564E  A0D8               	btfss	status,0,c
 22495  015650  D005               	goto	i2l1422
 22496  015652  5009               	movf	i2___awdiv@divisor,w,c
 22497  015654  5E07               	subwf	i2___awdiv@dividend,f,c
 22498  015656  500A               	movf	i2___awdiv@divisor+1,w,c
 22499  015658  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 22500  01565A  800D               	bsf	i2___awdiv@quotient,0,c
 22501  01565C                     i2l1422:
 22502  01565C  90D8               	bcf	status,0,c
 22503  01565E  320A               	rrcf	i2___awdiv@divisor+1,f,c
 22504  015660  3209               	rrcf	i2___awdiv@divisor,f,c
 22505  015662  2E0B               	decfsz	i2___awdiv@counter,f,c
 22506  015664  D7ED               	goto	i2u1105_40
 22507  015666                     i2l1423:
 22508  015666  500C               	movf	i2___awdiv@sign,w,c
 22509  015668  B4D8               	btfsc	status,2,c
 22510  01566A  D004               	goto	i2l1424
 22511  01566C  6C0D               	negf	i2___awdiv@quotient,c
 22512  01566E  1E0E               	comf	i2___awdiv@quotient+1,f,c
 22513  015670  B0D8               	btfsc	status,0,c
 22514  015672  2A0E               	incf	i2___awdiv@quotient+1,f,c
 22515  015674                     i2l1424:
 22516  015674  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 22517  015678  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 22518  01567C  0012               	return	
 22519  01567E                     __end_ofi2___awdiv:
 22520                           	opt stack 0
 22521                           tosu	equ	0xFFF
 22522                           tosh	equ	0xFFE
 22523                           tosl	equ	0xFFD
 22524                           pclatu	equ	0xFFB
 22525                           pclath	equ	0xFFA
 22526                           tblptru	equ	0xFF8
 22527                           tblptrh	equ	0xFF7
 22528                           tblptrl	equ	0xFF6
 22529                           tablat	equ	0xFF5
 22530                           prodh	equ	0xFF4
 22531                           prodl	equ	0xFF3
 22532                           intcon	equ	0xFF2
 22533                           postinc0	equ	0xFEE
 22534                           fsr0h	equ	0xFEA
 22535                           fsr0l	equ	0xFE9
 22536                           wreg	equ	0xFE8
 22537                           indf1	equ	0xFE7
 22538                           postdec1	equ	0xFE5
 22539                           fsr1h	equ	0xFE2
 22540                           fsr1l	equ	0xFE1
 22541                           bsr	equ	0xFE0
 22542                           indf2	equ	0xFDF
 22543                           postinc2	equ	0xFDE
 22544                           postdec2	equ	0xFDD
 22545                           fsr2h	equ	0xFDA
 22546                           fsr2l	equ	0xFD9
 22547                           status	equ	0xFD8
 22548                           
 22549 ;; *************** function i2__tdiv_to_l_ *****************
 22550 ;; Defined at:
 22551 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 22552 ;; Parameters:    Size  Location     Type
 22553 ;;  f1              3    0[COMRAM] float 
 22554 ;;  f2              3    3[COMRAM] float 
 22555 ;; Auto vars:     Size  Location     Type
 22556 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 22557 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 22558 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 22559 ;; Return value:  Size  Location     Type
 22560 ;;                  4    0[COMRAM] unsigned long 
 22561 ;; Registers used:
 22562 ;;		wreg, status,2, status,0
 22563 ;; Tracked objects:
 22564 ;;		On entry : 0/0
 22565 ;;		On exit  : 0/0
 22566 ;;		Unchanged: 0/0
 22567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22568 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22569 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22570 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22571 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22572 ;;Total ram usage:       15 bytes
 22573 ;; Hardware stack levels used:    1
 22574 ;; This function calls:
 22575 ;;		Nothing
 22576 ;; This function is called by:
 22577 ;;		i2_printf
 22578 ;; This function uses a non-reentrant model
 22579 ;;
 22580                           
 22581                           	psect	text81
 22582  014268                     __ptext81:
 22583                           	opt stack 0
 22584  014268                     i2__tdiv_to_l_:
 22585                           	opt stack 15
 22586                           
 22587                           ;incstack = 0
 22588  014268  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 22589  01426C  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 22590  01426E  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 22591  014270  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 22592  014272  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 22593  014274  E301               	bnc	u1145_41
 22594  014276  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 22595  014278                     u1145_41:
 22596  014278  5007               	movf	??i2__tdiv_to_l_,w,c
 22597  01427A  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 22598  01427C  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22599  01427E  A4D8               	btfss	status,2,c
 22600  014280  D009               	goto	i2l1563
 22601  014282  0E00               	movlw	0
 22602  014284  6E01               	movwf	?i2__tdiv_to_l_,c
 22603  014286  0E00               	movlw	0
 22604  014288  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22605  01428A  0E00               	movlw	0
 22606  01428C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22607  01428E  0E00               	movlw	0
 22608  014290  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22609  014292  0012               	return	
 22610  014294                     i2l1563:
 22611  014294  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 22612  014298  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 22613  01429A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 22614  01429C  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 22615  01429E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 22616  0142A0  E301               	bnc	u1147_41
 22617  0142A2  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 22618  0142A4                     u1147_41:
 22619  0142A4  5007               	movf	??i2__tdiv_to_l_,w,c
 22620  0142A6  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 22621  0142A8  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 22622  0142AA  A4D8               	btfss	status,2,c
 22623  0142AC  D009               	goto	i2l1565
 22624  0142AE  0E00               	movlw	0
 22625  0142B0  6E01               	movwf	?i2__tdiv_to_l_,c
 22626  0142B2  0E00               	movlw	0
 22627  0142B4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22628  0142B6  0E00               	movlw	0
 22629  0142B8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22630  0142BA  0E00               	movlw	0
 22631  0142BC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22632  0142BE  0012               	return	
 22633  0142C0                     i2l1565:
 22634  0142C0  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 22635  0142C2  0EFF               	movlw	255
 22636  0142C4  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 22637  0142C6  0EFF               	movlw	255
 22638  0142C8  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 22639  0142CA  0E00               	movlw	0
 22640  0142CC  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 22641  0142CE  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 22642  0142D0  0EFF               	movlw	255
 22643  0142D2  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 22644  0142D4  0EFF               	movlw	255
 22645  0142D6  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 22646  0142D8  0E00               	movlw	0
 22647  0142DA  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 22648  0142DC  0E00               	movlw	0
 22649  0142DE  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 22650  0142E0  0E00               	movlw	0
 22651  0142E2  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 22652  0142E4  0E00               	movlw	0
 22653  0142E6  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 22654  0142E8  0E00               	movlw	0
 22655  0142EA  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 22656  0142EC  0E7F               	movlw	127
 22657  0142EE  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 22658  0142F0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 22659  0142F2  0F98               	addlw	152
 22660  0142F4  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 22661  0142F6  0E18               	movlw	24
 22662  0142F8  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 22663  0142FA                     i2l1566:
 22664  0142FA  90D8               	bcf	status,0,c
 22665  0142FC  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 22666  0142FE  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 22667  014300  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 22668  014302  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 22669  014304  5004               	movf	i2__tdiv_to_l_@f2,w,c
 22670  014306  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 22671  014308  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 22672  01430A  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 22673  01430C  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 22674  01430E  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 22675  014310  A0D8               	btfss	status,0,c
 22676  014312  D007               	goto	i2l1567
 22677  014314  5004               	movf	i2__tdiv_to_l_@f2,w,c
 22678  014316  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 22679  014318  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 22680  01431A  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 22681  01431C  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 22682  01431E  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 22683  014320  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 22684  014322                     i2l1567:
 22685  014322  90D8               	bcf	status,0,c
 22686  014324  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 22687  014326  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 22688  014328  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 22689  01432A  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 22690  01432C  D7E6               	goto	i2l1566
 22691  01432E  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 22692  014330  D016               	goto	i2l1569
 22693  014332  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22694  014334  0A80               	xorlw	128
 22695  014336  0F97               	addlw	151
 22696  014338  B0D8               	btfsc	status,0,c
 22697  01433A  D009               	goto	i2l1570
 22698  01433C  0E00               	movlw	0
 22699  01433E  6E01               	movwf	?i2__tdiv_to_l_,c
 22700  014340  0E00               	movlw	0
 22701  014342  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22702  014344  0E00               	movlw	0
 22703  014346  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22704  014348  0E00               	movlw	0
 22705  01434A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22706  01434C  0012               	return	
 22707  01434E                     i2l1570:
 22708  01434E  90D8               	bcf	status,0,c
 22709  014350  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 22710  014352  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 22711  014354  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 22712  014356  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 22713  014358  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 22714  01435A  D7F9               	goto	i2l1570
 22715  01435C  D015               	goto	i2u1153_40
 22716  01435E                     i2l1569:
 22717  01435E  0E17               	movlw	23
 22718  014360  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 22719  014362  D00F               	goto	i2l1575
 22720  014364  0E00               	movlw	0
 22721  014366  6E01               	movwf	?i2__tdiv_to_l_,c
 22722  014368  0E00               	movlw	0
 22723  01436A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22724  01436C  0E00               	movlw	0
 22725  01436E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22726  014370  0E00               	movlw	0
 22727  014372  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22728  014374  0012               	return	
 22729  014376  90D8               	bcf	status,0,c
 22730  014378  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 22731  01437A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 22732  01437C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 22733  01437E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 22734  014380  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 22735  014382                     i2l1575:
 22736  014382  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22737  014384  A4D8               	btfss	status,2,c
 22738  014386  D7F7               	goto	i2l1576
 22739  014388                     i2u1153_40:
 22740  014388  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 22741  01438C  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 22742  014390  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 22743  014394  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 22744  014398  0012               	return		;funcret
 22745  01439A                     __end_ofi2__tdiv_to_l_:
 22746                           	opt stack 0
 22747                           tosu	equ	0xFFF
 22748                           tosh	equ	0xFFE
 22749                           tosl	equ	0xFFD
 22750                           pclatu	equ	0xFFB
 22751                           pclath	equ	0xFFA
 22752                           tblptru	equ	0xFF8
 22753                           tblptrh	equ	0xFF7
 22754                           tblptrl	equ	0xFF6
 22755                           tablat	equ	0xFF5
 22756                           prodh	equ	0xFF4
 22757                           prodl	equ	0xFF3
 22758                           intcon	equ	0xFF2
 22759                           postinc0	equ	0xFEE
 22760                           fsr0h	equ	0xFEA
 22761                           fsr0l	equ	0xFE9
 22762                           wreg	equ	0xFE8
 22763                           indf1	equ	0xFE7
 22764                           postdec1	equ	0xFE5
 22765                           fsr1h	equ	0xFE2
 22766                           fsr1l	equ	0xFE1
 22767                           bsr	equ	0xFE0
 22768                           indf2	equ	0xFDF
 22769                           postinc2	equ	0xFDE
 22770                           postdec2	equ	0xFDD
 22771                           fsr2h	equ	0xFDA
 22772                           fsr2l	equ	0xFD9
 22773                           status	equ	0xFD8
 22774                           
 22775 ;; *************** function i2__div_to_l_ *****************
 22776 ;; Defined at:
 22777 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 22778 ;; Parameters:    Size  Location     Type
 22779 ;;  f1              3    0[COMRAM] unsigned long 
 22780 ;;  f2              3    3[COMRAM] unsigned long 
 22781 ;; Auto vars:     Size  Location     Type
 22782 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 22783 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 22784 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 22785 ;; Return value:  Size  Location     Type
 22786 ;;                  4    0[COMRAM] unsigned long 
 22787 ;; Registers used:
 22788 ;;		wreg, status,2, status,0
 22789 ;; Tracked objects:
 22790 ;;		On entry : 0/0
 22791 ;;		On exit  : 0/0
 22792 ;;		Unchanged: 0/0
 22793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22794 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22795 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22797 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22798 ;;Total ram usage:       12 bytes
 22799 ;; Hardware stack levels used:    1
 22800 ;; This function calls:
 22801 ;;		Nothing
 22802 ;; This function is called by:
 22803 ;;		i2_printf
 22804 ;; This function uses a non-reentrant model
 22805 ;;
 22806                           
 22807                           	psect	text82
 22808  0144C4                     __ptext82:
 22809                           	opt stack 0
 22810  0144C4                     i2__div_to_l_:
 22811                           	opt stack 15
 22812                           
 22813                           ;incstack = 0
 22814  0144C4  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 22815  0144C6  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 22816  0144C8  6E0C               	movwf	i2__div_to_l_@exp1,c
 22817  0144CA  500C               	movf	i2__div_to_l_@exp1,w,c
 22818  0144CC  A4D8               	btfss	status,2,c
 22819  0144CE  D009               	goto	i2l1459
 22820  0144D0  0E00               	movlw	0
 22821  0144D2  6E01               	movwf	?i2__div_to_l_,c
 22822  0144D4  0E00               	movlw	0
 22823  0144D6  6E02               	movwf	?i2__div_to_l_+1,c
 22824  0144D8  0E00               	movlw	0
 22825  0144DA  6E03               	movwf	?i2__div_to_l_+2,c
 22826  0144DC  0E00               	movlw	0
 22827  0144DE  6E04               	movwf	?i2__div_to_l_+3,c
 22828  0144E0  0012               	return	
 22829  0144E2                     i2l1459:
 22830  0144E2  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 22831  0144E4  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 22832  0144E6  6E0B               	movwf	i2__div_to_l_@cntr,c
 22833  0144E8  500B               	movf	i2__div_to_l_@cntr,w,c
 22834  0144EA  A4D8               	btfss	status,2,c
 22835  0144EC  D009               	goto	i2l1461
 22836  0144EE  0E00               	movlw	0
 22837  0144F0  6E01               	movwf	?i2__div_to_l_,c
 22838  0144F2  0E00               	movlw	0
 22839  0144F4  6E02               	movwf	?i2__div_to_l_+1,c
 22840  0144F6  0E00               	movlw	0
 22841  0144F8  6E03               	movwf	?i2__div_to_l_+2,c
 22842  0144FA  0E00               	movlw	0
 22843  0144FC  6E04               	movwf	?i2__div_to_l_+3,c
 22844  0144FE  0012               	return	
 22845  014500                     i2l1461:
 22846  014500  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 22847  014502  0EFF               	movlw	255
 22848  014504  1601               	andwf	i2__div_to_l_@f1,f,c
 22849  014506  0EFF               	movlw	255
 22850  014508  1602               	andwf	i2__div_to_l_@f1+1,f,c
 22851  01450A  0EFF               	movlw	255
 22852  01450C  1603               	andwf	i2__div_to_l_@f1+2,f,c
 22853  01450E  0E00               	movlw	0
 22854  014510  1604               	andwf	i2__div_to_l_@f1+3,f,c
 22855  014512  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 22856  014514  0EFF               	movlw	255
 22857  014516  1604               	andwf	i2__div_to_l_@f2,f,c
 22858  014518  0EFF               	movlw	255
 22859  01451A  1605               	andwf	i2__div_to_l_@f2+1,f,c
 22860  01451C  0EFF               	movlw	255
 22861  01451E  1606               	andwf	i2__div_to_l_@f2+2,f,c
 22862  014520  0E00               	movlw	0
 22863  014522  1607               	andwf	i2__div_to_l_@f2+3,f,c
 22864  014524  0E00               	movlw	0
 22865  014526  6E07               	movwf	i2__div_to_l_@quot,c
 22866  014528  0E00               	movlw	0
 22867  01452A  6E08               	movwf	i2__div_to_l_@quot+1,c
 22868  01452C  0E00               	movlw	0
 22869  01452E  6E09               	movwf	i2__div_to_l_@quot+2,c
 22870  014530  0E00               	movlw	0
 22871  014532  6E0A               	movwf	i2__div_to_l_@quot+3,c
 22872  014534  0E7F               	movlw	127
 22873  014536  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 22874  014538  500B               	movf	i2__div_to_l_@cntr,w,c
 22875  01453A  0FA0               	addlw	160
 22876  01453C  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 22877  01453E  0E20               	movlw	32
 22878  014540  6E0B               	movwf	i2__div_to_l_@cntr,c
 22879  014542  90D8               	bcf	status,0,c
 22880  014544  3607               	rlcf	i2__div_to_l_@quot,f,c
 22881  014546  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22882  014548  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22883  01454A  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22884  01454C  5004               	movf	i2__div_to_l_@f2,w,c
 22885  01454E  5C01               	subwf	i2__div_to_l_@f1,w,c
 22886  014550  5005               	movf	i2__div_to_l_@f2+1,w,c
 22887  014552  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 22888  014554  5006               	movf	i2__div_to_l_@f2+2,w,c
 22889  014556  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 22890  014558  5007               	movf	i2__div_to_l_@f2+3,w,c
 22891  01455A  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 22892  01455C  A0D8               	btfss	status,0,c
 22893  01455E  D009               	goto	i2l1463
 22894  014560  5004               	movf	i2__div_to_l_@f2,w,c
 22895  014562  5E01               	subwf	i2__div_to_l_@f1,f,c
 22896  014564  5005               	movf	i2__div_to_l_@f2+1,w,c
 22897  014566  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 22898  014568  5006               	movf	i2__div_to_l_@f2+2,w,c
 22899  01456A  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 22900  01456C  5007               	movf	i2__div_to_l_@f2+3,w,c
 22901  01456E  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 22902  014570  8007               	bsf	i2__div_to_l_@quot,0,c
 22903  014572                     i2l1463:
 22904  014572  90D8               	bcf	status,0,c
 22905  014574  3601               	rlcf	i2__div_to_l_@f1,f,c
 22906  014576  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 22907  014578  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 22908  01457A  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 22909  01457C  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 22910  01457E  D7E1               	goto	i2l1462
 22911  014580  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 22912  014582  D016               	goto	i2l1465
 22913  014584  500C               	movf	i2__div_to_l_@exp1,w,c
 22914  014586  0A80               	xorlw	128
 22915  014588  0F9F               	addlw	159
 22916  01458A  B0D8               	btfsc	status,0,c
 22917  01458C  D009               	goto	i2l1466
 22918  01458E  0E00               	movlw	0
 22919  014590  6E01               	movwf	?i2__div_to_l_,c
 22920  014592  0E00               	movlw	0
 22921  014594  6E02               	movwf	?i2__div_to_l_+1,c
 22922  014596  0E00               	movlw	0
 22923  014598  6E03               	movwf	?i2__div_to_l_+2,c
 22924  01459A  0E00               	movlw	0
 22925  01459C  6E04               	movwf	?i2__div_to_l_+3,c
 22926  01459E  0012               	return	
 22927  0145A0                     i2l1466:
 22928  0145A0  90D8               	bcf	status,0,c
 22929  0145A2  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 22930  0145A4  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 22931  0145A6  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 22932  0145A8  3207               	rrcf	i2__div_to_l_@quot,f,c
 22933  0145AA  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 22934  0145AC  D7F9               	goto	i2l1466
 22935  0145AE  D015               	goto	i2u1144_40
 22936  0145B0                     i2l1465:
 22937  0145B0  0E1F               	movlw	31
 22938  0145B2  640C               	cpfsgt	i2__div_to_l_@exp1,c
 22939  0145B4  D00F               	goto	i2l1471
 22940  0145B6  0E00               	movlw	0
 22941  0145B8  6E01               	movwf	?i2__div_to_l_,c
 22942  0145BA  0E00               	movlw	0
 22943  0145BC  6E02               	movwf	?i2__div_to_l_+1,c
 22944  0145BE  0E00               	movlw	0
 22945  0145C0  6E03               	movwf	?i2__div_to_l_+2,c
 22946  0145C2  0E00               	movlw	0
 22947  0145C4  6E04               	movwf	?i2__div_to_l_+3,c
 22948  0145C6  0012               	return	
 22949  0145C8  90D8               	bcf	status,0,c
 22950  0145CA  3607               	rlcf	i2__div_to_l_@quot,f,c
 22951  0145CC  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22952  0145CE  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22953  0145D0  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22954  0145D2  060C               	decf	i2__div_to_l_@exp1,f,c
 22955  0145D4                     i2l1471:
 22956  0145D4  500C               	movf	i2__div_to_l_@exp1,w,c
 22957  0145D6  A4D8               	btfss	status,2,c
 22958  0145D8  D7F7               	goto	i2l1472
 22959  0145DA                     i2u1144_40:
 22960  0145DA  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 22961  0145DE  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 22962  0145E2  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 22963  0145E6  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 22964  0145EA  0012               	return		;funcret
 22965  0145EC                     __end_ofi2__div_to_l_:
 22966                           	opt stack 0
 22967                           tosu	equ	0xFFF
 22968                           tosh	equ	0xFFE
 22969                           tosl	equ	0xFFD
 22970                           pclatu	equ	0xFFB
 22971                           pclath	equ	0xFFA
 22972                           tblptru	equ	0xFF8
 22973                           tblptrh	equ	0xFF7
 22974                           tblptrl	equ	0xFF6
 22975                           tablat	equ	0xFF5
 22976                           prodh	equ	0xFF4
 22977                           prodl	equ	0xFF3
 22978                           intcon	equ	0xFF2
 22979                           postinc0	equ	0xFEE
 22980                           fsr0h	equ	0xFEA
 22981                           fsr0l	equ	0xFE9
 22982                           wreg	equ	0xFE8
 22983                           indf1	equ	0xFE7
 22984                           postdec1	equ	0xFE5
 22985                           fsr1h	equ	0xFE2
 22986                           fsr1l	equ	0xFE1
 22987                           bsr	equ	0xFE0
 22988                           indf2	equ	0xFDF
 22989                           postinc2	equ	0xFDE
 22990                           postdec2	equ	0xFDD
 22991                           fsr2h	equ	0xFDA
 22992                           fsr2l	equ	0xFD9
 22993                           status	equ	0xFD8
 22994                           
 22995 ;; *************** function i2___lltoft *****************
 22996 ;; Defined at:
 22997 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 22998 ;; Parameters:    Size  Location     Type
 22999 ;;  c               4    8[COMRAM] unsigned long 
 23000 ;; Auto vars:     Size  Location     Type
 23001 ;;  __lltoft        1   16[COMRAM] unsigned char 
 23002 ;; Return value:  Size  Location     Type
 23003 ;;                  3    8[COMRAM] float 
 23004 ;; Registers used:
 23005 ;;		wreg, status,2, status,0, cstack
 23006 ;; Tracked objects:
 23007 ;;		On entry : 0/0
 23008 ;;		On exit  : 0/0
 23009 ;;		Unchanged: 0/0
 23010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23014 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23015 ;;Total ram usage:        9 bytes
 23016 ;; Hardware stack levels used:    1
 23017 ;; Hardware stack levels required when called:    1
 23018 ;; This function calls:
 23019 ;;		i2___ftpack
 23020 ;; This function is called by:
 23021 ;;		i2_printf
 23022 ;; This function uses a non-reentrant model
 23023 ;;
 23024                           
 23025                           	psect	text83
 23026  015CC4                     __ptext83:
 23027                           	opt stack 0
 23028  015CC4                     i2___lltoft:
 23029                           	opt stack 14
 23030                           
 23031                           ;incstack = 0
 23032  015CC4  0E8E               	movlw	142
 23033  015CC6  6E11               	movwf	i2___lltoft@exp,c
 23034  015CC8  D006               	goto	i2l1670
 23035  015CCA  90D8               	bcf	status,0,c
 23036  015CCC  320C               	rrcf	i2___lltoft@c+3,f,c
 23037  015CCE  320B               	rrcf	i2___lltoft@c+2,f,c
 23038  015CD0  320A               	rrcf	i2___lltoft@c+1,f,c
 23039  015CD2  3209               	rrcf	i2___lltoft@c,f,c
 23040  015CD4  2A11               	incf	i2___lltoft@exp,f,c
 23041  015CD6                     i2l1670:
 23042  015CD6  0E00               	movlw	0
 23043  015CD8  1409               	andwf	i2___lltoft@c,w,c
 23044  015CDA  6E0D               	movwf	??i2___lltoft& (0+255),c
 23045  015CDC  0E00               	movlw	0
 23046  015CDE  140A               	andwf	i2___lltoft@c+1,w,c
 23047  015CE0  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 23048  015CE2  0E00               	movlw	0
 23049  015CE4  140B               	andwf	i2___lltoft@c+2,w,c
 23050  015CE6  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 23051  015CE8  0EFF               	movlw	255
 23052  015CEA  140C               	andwf	i2___lltoft@c+3,w,c
 23053  015CEC  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 23054  015CEE  500D               	movf	??i2___lltoft,w,c
 23055  015CF0  100E               	iorwf	??i2___lltoft+1,w,c
 23056  015CF2  100F               	iorwf	??i2___lltoft+2,w,c
 23057  015CF4  1010               	iorwf	??i2___lltoft+3,w,c
 23058  015CF6  A4D8               	btfss	status,2,c
 23059  015CF8  D7E8               	goto	i2l1671
 23060  015CFA  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 23061  015CFE  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 23062  015D02  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 23063  015D06  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 23064  015D0A  0E00               	movlw	0
 23065  015D0C  6E05               	movwf	i2___ftpack@sign,c
 23066  015D0E  EC5C  F0A8         	call	i2___ftpack	;wreg free
 23067  015D12  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 23068  015D16  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 23069  015D1A  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 23070  015D1E  0012               	return	
 23071  015D20                     __end_ofi2___lltoft:
 23072                           	opt stack 0
 23073                           tosu	equ	0xFFF
 23074                           tosh	equ	0xFFE
 23075                           tosl	equ	0xFFD
 23076                           pclatu	equ	0xFFB
 23077                           pclath	equ	0xFFA
 23078                           tblptru	equ	0xFF8
 23079                           tblptrh	equ	0xFF7
 23080                           tblptrl	equ	0xFF6
 23081                           tablat	equ	0xFF5
 23082                           prodh	equ	0xFF4
 23083                           prodl	equ	0xFF3
 23084                           intcon	equ	0xFF2
 23085                           postinc0	equ	0xFEE
 23086                           fsr0h	equ	0xFEA
 23087                           fsr0l	equ	0xFE9
 23088                           wreg	equ	0xFE8
 23089                           indf1	equ	0xFE7
 23090                           postdec1	equ	0xFE5
 23091                           fsr1h	equ	0xFE2
 23092                           fsr1l	equ	0xFE1
 23093                           bsr	equ	0xFE0
 23094                           indf2	equ	0xFDF
 23095                           postinc2	equ	0xFDE
 23096                           postdec2	equ	0xFDD
 23097                           fsr2h	equ	0xFDA
 23098                           fsr2l	equ	0xFD9
 23099                           status	equ	0xFD8
 23100                           
 23101 ;; *************** function i2___llmod *****************
 23102 ;; Defined at:
 23103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 23104 ;; Parameters:    Size  Location     Type
 23105 ;;  dividend        4   13[COMRAM] unsigned long 
 23106 ;;  divisor         4   17[COMRAM] unsigned long 
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;  __llmod         1   21[COMRAM] unsigned char 
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  4   13[COMRAM] unsigned long 
 23111 ;; Registers used:
 23112 ;;		wreg, status,2, status,0
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/0
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23118 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23121 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23122 ;;Total ram usage:        9 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; This function calls:
 23125 ;;		Nothing
 23126 ;; This function is called by:
 23127 ;;		i2_printf
 23128 ;; This function uses a non-reentrant model
 23129 ;;
 23130                           
 23131                           	psect	text84
 23132  015A7E                     __ptext84:
 23133                           	opt stack 0
 23134  015A7E                     i2___llmod:
 23135                           	opt stack 15
 23136                           
 23137                           ;incstack = 0
 23138  015A7E  5012               	movf	i2___llmod@divisor,w,c
 23139  015A80  1013               	iorwf	i2___llmod@divisor+1,w,c
 23140  015A82  1014               	iorwf	i2___llmod@divisor+2,w,c
 23141  015A84  1015               	iorwf	i2___llmod@divisor+3,w,c
 23142  015A86  B4D8               	btfsc	status,2,c
 23143  015A88  D024               	goto	i2l1664
 23144  015A8A  0E01               	movlw	1
 23145  015A8C  6E16               	movwf	i2___llmod@counter,c
 23146  015A8E  D006               	goto	i2l1659
 23147  015A90  90D8               	bcf	status,0,c
 23148  015A92  3612               	rlcf	i2___llmod@divisor,f,c
 23149  015A94  3613               	rlcf	i2___llmod@divisor+1,f,c
 23150  015A96  3614               	rlcf	i2___llmod@divisor+2,f,c
 23151  015A98  3615               	rlcf	i2___llmod@divisor+3,f,c
 23152  015A9A  2A16               	incf	i2___llmod@counter,f,c
 23153  015A9C                     i2l1659:
 23154  015A9C  AE15               	btfss	i2___llmod@divisor+3,7,c
 23155  015A9E  D7F8               	goto	i2l1660
 23156  015AA0                     i2u1160_40:
 23157  015AA0  5012               	movf	i2___llmod@divisor,w,c
 23158  015AA2  5C0E               	subwf	i2___llmod@dividend,w,c
 23159  015AA4  5013               	movf	i2___llmod@divisor+1,w,c
 23160  015AA6  580F               	subwfb	i2___llmod@dividend+1,w,c
 23161  015AA8  5014               	movf	i2___llmod@divisor+2,w,c
 23162  015AAA  5810               	subwfb	i2___llmod@dividend+2,w,c
 23163  015AAC  5015               	movf	i2___llmod@divisor+3,w,c
 23164  015AAE  5811               	subwfb	i2___llmod@dividend+3,w,c
 23165  015AB0  A0D8               	btfss	status,0,c
 23166  015AB2  D008               	goto	i2l1663
 23167  015AB4  5012               	movf	i2___llmod@divisor,w,c
 23168  015AB6  5E0E               	subwf	i2___llmod@dividend,f,c
 23169  015AB8  5013               	movf	i2___llmod@divisor+1,w,c
 23170  015ABA  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 23171  015ABC  5014               	movf	i2___llmod@divisor+2,w,c
 23172  015ABE  5A10               	subwfb	i2___llmod@dividend+2,f,c
 23173  015AC0  5015               	movf	i2___llmod@divisor+3,w,c
 23174  015AC2  5A11               	subwfb	i2___llmod@dividend+3,f,c
 23175  015AC4                     i2l1663:
 23176  015AC4  90D8               	bcf	status,0,c
 23177  015AC6  3215               	rrcf	i2___llmod@divisor+3,f,c
 23178  015AC8  3214               	rrcf	i2___llmod@divisor+2,f,c
 23179  015ACA  3213               	rrcf	i2___llmod@divisor+1,f,c
 23180  015ACC  3212               	rrcf	i2___llmod@divisor,f,c
 23181  015ACE  2E16               	decfsz	i2___llmod@counter,f,c
 23182  015AD0  D7E7               	goto	i2u1160_40
 23183  015AD2                     i2l1664:
 23184  015AD2  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 23185  015AD6  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 23186  015ADA  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 23187  015ADE  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 23188  015AE2  0012               	return		;funcret
 23189  015AE4                     __end_ofi2___llmod:
 23190                           	opt stack 0
 23191                           tosu	equ	0xFFF
 23192                           tosh	equ	0xFFE
 23193                           tosl	equ	0xFFD
 23194                           pclatu	equ	0xFFB
 23195                           pclath	equ	0xFFA
 23196                           tblptru	equ	0xFF8
 23197                           tblptrh	equ	0xFF7
 23198                           tblptrl	equ	0xFF6
 23199                           tablat	equ	0xFF5
 23200                           prodh	equ	0xFF4
 23201                           prodl	equ	0xFF3
 23202                           intcon	equ	0xFF2
 23203                           postinc0	equ	0xFEE
 23204                           fsr0h	equ	0xFEA
 23205                           fsr0l	equ	0xFE9
 23206                           wreg	equ	0xFE8
 23207                           indf1	equ	0xFE7
 23208                           postdec1	equ	0xFE5
 23209                           fsr1h	equ	0xFE2
 23210                           fsr1l	equ	0xFE1
 23211                           bsr	equ	0xFE0
 23212                           indf2	equ	0xFDF
 23213                           postinc2	equ	0xFDE
 23214                           postdec2	equ	0xFDD
 23215                           fsr2h	equ	0xFDA
 23216                           fsr2l	equ	0xFD9
 23217                           status	equ	0xFD8
 23218                           
 23219 ;; *************** function i2___lldiv *****************
 23220 ;; Defined at:
 23221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 23222 ;; Parameters:    Size  Location     Type
 23223 ;;  dividend        4    0[COMRAM] unsigned long 
 23224 ;;  divisor         4    4[COMRAM] unsigned long 
 23225 ;; Auto vars:     Size  Location     Type
 23226 ;;  __lldiv         4    8[COMRAM] unsigned long 
 23227 ;;  __lldiv         1   12[COMRAM] unsigned char 
 23228 ;; Return value:  Size  Location     Type
 23229 ;;                  4    0[COMRAM] unsigned long 
 23230 ;; Registers used:
 23231 ;;		wreg, status,2, status,0
 23232 ;; Tracked objects:
 23233 ;;		On entry : 0/0
 23234 ;;		On exit  : 0/0
 23235 ;;		Unchanged: 0/0
 23236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23237 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23238 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23240 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23241 ;;Total ram usage:       13 bytes
 23242 ;; Hardware stack levels used:    1
 23243 ;; This function calls:
 23244 ;;		Nothing
 23245 ;; This function is called by:
 23246 ;;		i2_printf
 23247 ;; This function uses a non-reentrant model
 23248 ;;
 23249                           
 23250                           	psect	text85
 23251  01567E                     __ptext85:
 23252                           	opt stack 0
 23253  01567E                     i2___lldiv:
 23254                           	opt stack 15
 23255                           
 23256                           ;incstack = 0
 23257  01567E  0E00               	movlw	0
 23258  015680  6E09               	movwf	i2___lldiv@quotient,c
 23259  015682  0E00               	movlw	0
 23260  015684  6E0A               	movwf	i2___lldiv@quotient+1,c
 23261  015686  0E00               	movlw	0
 23262  015688  6E0B               	movwf	i2___lldiv@quotient+2,c
 23263  01568A  0E00               	movlw	0
 23264  01568C  6E0C               	movwf	i2___lldiv@quotient+3,c
 23265  01568E  5005               	movf	i2___lldiv@divisor,w,c
 23266  015690  1006               	iorwf	i2___lldiv@divisor+1,w,c
 23267  015692  1007               	iorwf	i2___lldiv@divisor+2,w,c
 23268  015694  1008               	iorwf	i2___lldiv@divisor+3,w,c
 23269  015696  B4D8               	btfsc	status,2,c
 23270  015698  D02A               	goto	i2l1654
 23271  01569A  0E01               	movlw	1
 23272  01569C  6E0D               	movwf	i2___lldiv@counter,c
 23273  01569E  D006               	goto	i2l1649
 23274  0156A0  90D8               	bcf	status,0,c
 23275  0156A2  3605               	rlcf	i2___lldiv@divisor,f,c
 23276  0156A4  3606               	rlcf	i2___lldiv@divisor+1,f,c
 23277  0156A6  3607               	rlcf	i2___lldiv@divisor+2,f,c
 23278  0156A8  3608               	rlcf	i2___lldiv@divisor+3,f,c
 23279  0156AA  2A0D               	incf	i2___lldiv@counter,f,c
 23280  0156AC                     i2l1649:
 23281  0156AC  AE08               	btfss	i2___lldiv@divisor+3,7,c
 23282  0156AE  D7F8               	goto	i2l1650
 23283  0156B0                     i2u1157_40:
 23284  0156B0  90D8               	bcf	status,0,c
 23285  0156B2  3609               	rlcf	i2___lldiv@quotient,f,c
 23286  0156B4  360A               	rlcf	i2___lldiv@quotient+1,f,c
 23287  0156B6  360B               	rlcf	i2___lldiv@quotient+2,f,c
 23288  0156B8  360C               	rlcf	i2___lldiv@quotient+3,f,c
 23289  0156BA  5005               	movf	i2___lldiv@divisor,w,c
 23290  0156BC  5C01               	subwf	i2___lldiv@dividend,w,c
 23291  0156BE  5006               	movf	i2___lldiv@divisor+1,w,c
 23292  0156C0  5802               	subwfb	i2___lldiv@dividend+1,w,c
 23293  0156C2  5007               	movf	i2___lldiv@divisor+2,w,c
 23294  0156C4  5803               	subwfb	i2___lldiv@dividend+2,w,c
 23295  0156C6  5008               	movf	i2___lldiv@divisor+3,w,c
 23296  0156C8  5804               	subwfb	i2___lldiv@dividend+3,w,c
 23297  0156CA  A0D8               	btfss	status,0,c
 23298  0156CC  D009               	goto	i2l1653
 23299  0156CE  5005               	movf	i2___lldiv@divisor,w,c
 23300  0156D0  5E01               	subwf	i2___lldiv@dividend,f,c
 23301  0156D2  5006               	movf	i2___lldiv@divisor+1,w,c
 23302  0156D4  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 23303  0156D6  5007               	movf	i2___lldiv@divisor+2,w,c
 23304  0156D8  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 23305  0156DA  5008               	movf	i2___lldiv@divisor+3,w,c
 23306  0156DC  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 23307  0156DE  8009               	bsf	i2___lldiv@quotient,0,c
 23308  0156E0                     i2l1653:
 23309  0156E0  90D8               	bcf	status,0,c
 23310  0156E2  3208               	rrcf	i2___lldiv@divisor+3,f,c
 23311  0156E4  3207               	rrcf	i2___lldiv@divisor+2,f,c
 23312  0156E6  3206               	rrcf	i2___lldiv@divisor+1,f,c
 23313  0156E8  3205               	rrcf	i2___lldiv@divisor,f,c
 23314  0156EA  2E0D               	decfsz	i2___lldiv@counter,f,c
 23315  0156EC  D7E1               	goto	i2u1157_40
 23316  0156EE                     i2l1654:
 23317  0156EE  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 23318  0156F2  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 23319  0156F6  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 23320  0156FA  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 23321  0156FE  0012               	return		;funcret
 23322  015700                     __end_ofi2___lldiv:
 23323                           	opt stack 0
 23324                           tosu	equ	0xFFF
 23325                           tosh	equ	0xFFE
 23326                           tosl	equ	0xFFD
 23327                           pclatu	equ	0xFFB
 23328                           pclath	equ	0xFFA
 23329                           tblptru	equ	0xFF8
 23330                           tblptrh	equ	0xFF7
 23331                           tblptrl	equ	0xFF6
 23332                           tablat	equ	0xFF5
 23333                           prodh	equ	0xFF4
 23334                           prodl	equ	0xFF3
 23335                           intcon	equ	0xFF2
 23336                           postinc0	equ	0xFEE
 23337                           fsr0h	equ	0xFEA
 23338                           fsr0l	equ	0xFE9
 23339                           wreg	equ	0xFE8
 23340                           indf1	equ	0xFE7
 23341                           postdec1	equ	0xFE5
 23342                           fsr1h	equ	0xFE2
 23343                           fsr1l	equ	0xFE1
 23344                           bsr	equ	0xFE0
 23345                           indf2	equ	0xFDF
 23346                           postinc2	equ	0xFDE
 23347                           postdec2	equ	0xFDD
 23348                           fsr2h	equ	0xFDA
 23349                           fsr2l	equ	0xFD9
 23350                           status	equ	0xFD8
 23351                           
 23352 ;; *************** function _ADCC_ISR *****************
 23353 ;; Defined at:
 23354 ;;		line 297 in file "mcc_generated_files/adcc.c"
 23355 ;; Parameters:    Size  Location     Type
 23356 ;;		None
 23357 ;; Auto vars:     Size  Location     Type
 23358 ;;		None
 23359 ;; Return value:  Size  Location     Type
 23360 ;;                  1    wreg      void 
 23361 ;; Registers used:
 23362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23363 ;; Tracked objects:
 23364 ;;		On entry : 0/0
 23365 ;;		On exit  : 0/0
 23366 ;;		Unchanged: 0/0
 23367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23372 ;;Total ram usage:        0 bytes
 23373 ;; Hardware stack levels used:    1
 23374 ;; Hardware stack levels required when called:    8
 23375 ;; This function calls:
 23376 ;;		Absolute function
 23377 ;;		_ADCC_DefaultInterruptHandler
 23378 ;;		_ADC_postProcessingCallback
 23379 ;; This function is called by:
 23380 ;;		_INTERRUPT_InterruptManagerHigh
 23381 ;; This function uses a non-reentrant model
 23382 ;;
 23383                           
 23384                           	psect	text86
 23385  016282                     __ptext86:
 23386                           	opt stack 0
 23387  016282                     _ADCC_ISR:
 23388                           	opt stack 9
 23389                           
 23390                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 23391                           
 23392                           ;incstack = 0
 23393  016282  010E               	movlb	14	; () banked
 23394  016284  9134               	bcf	52,0,b	;volatile
 23395                           
 23396                           ; BSR set to: 14
 23397                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 23398  016286  0100               	movlb	0	; () banked
 23399  016288  51E0               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 23400  01628A  11E1               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 23401  01628C  11E2               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 23402  01628E  B4D8               	btfsc	status,2,c
 23403  016290  0012               	return	
 23404                           
 23405                           ; BSR set to: 0
 23406                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 23407  016292  D801               	call	i2u1614_48
 23408  016294  0012               	return	
 23409  016296                     i2u1614_48:
 23410  016296  0005               	push	
 23411  016298  6EFA               	movwf	pclath,c
 23412  01629A  51E0               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 23413  01629C  6EFD               	movwf	tosl,c
 23414  01629E  51E1               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 23415  0162A0  6EFE               	movwf	tosh,c
 23416  0162A2  51E2               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 23417  0162A4  6EFF               	movwf	tosu,c
 23418  0162A6  50FA               	movf	pclath,w,c
 23419  0162A8  0012               	return		;indir
 23420  0162AA                     __end_of_ADCC_ISR:
 23421                           	opt stack 0
 23422                           tosu	equ	0xFFF
 23423                           tosh	equ	0xFFE
 23424                           tosl	equ	0xFFD
 23425                           pclatu	equ	0xFFB
 23426                           pclath	equ	0xFFA
 23427                           tblptru	equ	0xFF8
 23428                           tblptrh	equ	0xFF7
 23429                           tblptrl	equ	0xFF6
 23430                           tablat	equ	0xFF5
 23431                           prodh	equ	0xFF4
 23432                           prodl	equ	0xFF3
 23433                           intcon	equ	0xFF2
 23434                           postinc0	equ	0xFEE
 23435                           fsr0h	equ	0xFEA
 23436                           fsr0l	equ	0xFE9
 23437                           wreg	equ	0xFE8
 23438                           indf1	equ	0xFE7
 23439                           postdec1	equ	0xFE5
 23440                           fsr1h	equ	0xFE2
 23441                           fsr1l	equ	0xFE1
 23442                           bsr	equ	0xFE0
 23443                           indf2	equ	0xFDF
 23444                           postinc2	equ	0xFDE
 23445                           postdec2	equ	0xFDD
 23446                           fsr2h	equ	0xFDA
 23447                           fsr2l	equ	0xFD9
 23448                           status	equ	0xFD8
 23449                           
 23450 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 23451 ;; Defined at:
 23452 ;;		line 310 in file "mcc_generated_files/adcc.c"
 23453 ;; Parameters:    Size  Location     Type
 23454 ;;		None
 23455 ;; Auto vars:     Size  Location     Type
 23456 ;;		None
 23457 ;; Return value:  Size  Location     Type
 23458 ;;                  1    wreg      void 
 23459 ;; Registers used:
 23460 ;;		None
 23461 ;; Tracked objects:
 23462 ;;		On entry : 0/0
 23463 ;;		On exit  : 0/0
 23464 ;;		Unchanged: 0/0
 23465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23470 ;;Total ram usage:        0 bytes
 23471 ;; Hardware stack levels used:    1
 23472 ;; This function calls:
 23473 ;;		Nothing
 23474 ;; This function is called by:
 23475 ;;		_ADCC_Initialize
 23476 ;;		_ADCC_ISR
 23477 ;; This function uses a non-reentrant model
 23478 ;;
 23479                           
 23480                           	psect	text87
 23481  016502                     __ptext87:
 23482                           	opt stack 0
 23483  016502                     _ADCC_DefaultInterruptHandler:
 23484                           	opt stack 16
 23485                           
 23486                           ;incstack = 0
 23487  016502  0012               	return		;funcret
 23488  016504                     __end_of_ADCC_DefaultInterruptHandler:
 23489                           	opt stack 0
 23490                           tosu	equ	0xFFF
 23491                           tosh	equ	0xFFE
 23492                           tosl	equ	0xFFD
 23493                           pclatu	equ	0xFFB
 23494                           pclath	equ	0xFFA
 23495                           tblptru	equ	0xFF8
 23496                           tblptrh	equ	0xFF7
 23497                           tblptrl	equ	0xFF6
 23498                           tablat	equ	0xFF5
 23499                           prodh	equ	0xFF4
 23500                           prodl	equ	0xFF3
 23501                           intcon	equ	0xFF2
 23502                           postinc0	equ	0xFEE
 23503                           fsr0h	equ	0xFEA
 23504                           fsr0l	equ	0xFE9
 23505                           wreg	equ	0xFE8
 23506                           indf1	equ	0xFE7
 23507                           postdec1	equ	0xFE5
 23508                           fsr1h	equ	0xFE2
 23509                           fsr1l	equ	0xFE1
 23510                           bsr	equ	0xFE0
 23511                           indf2	equ	0xFDF
 23512                           postinc2	equ	0xFDE
 23513                           postdec2	equ	0xFDD
 23514                           fsr2h	equ	0xFDA
 23515                           fsr2l	equ	0xFD9
 23516                           status	equ	0xFD8
 23517                           
 23518 ;; *************** function _ADC_postProcessingCallback *****************
 23519 ;; Defined at:
 23520 ;;		line 147 in file "main.c"
 23521 ;; Parameters:    Size  Location     Type
 23522 ;;		None
 23523 ;; Auto vars:     Size  Location     Type
 23524 ;;  currentADCCh    1   79[BANK0 ] enum E17343
 23525 ;; Return value:  Size  Location     Type
 23526 ;;                  1    wreg      void 
 23527 ;; Registers used:
 23528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23529 ;; Tracked objects:
 23530 ;;		On entry : 0/0
 23531 ;;		On exit  : 0/0
 23532 ;;		Unchanged: 0/0
 23533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23535 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23537 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23538 ;;Total ram usage:       16 bytes
 23539 ;; Hardware stack levels used:    1
 23540 ;; Hardware stack levels required when called:    7
 23541 ;; This function calls:
 23542 ;;		_ADCC_GetConversionResult
 23543 ;;		___lwtoft
 23544 ;;		_currentMeasuredToPeak
 23545 ;;		_peakToRMS
 23546 ;;		i2___ftadd
 23547 ;;		i2___ftdiv
 23548 ;;		i2___ftmul
 23549 ;;		i2___ftneg
 23550 ;; This function is called by:
 23551 ;;		_main
 23552 ;;		_ADCC_ISR
 23553 ;; This function uses a non-reentrant model
 23554 ;;
 23555                           
 23556                           	psect	text88
 23557  011D64                     __ptext88:
 23558                           	opt stack 0
 23559  011D64                     _ADC_postProcessingCallback:
 23560                           	opt stack 9
 23561                           
 23562                           ;main.c: 149: adcc_channel_t currentADCChannel = ADPCH;
 23563                           
 23564                           ;incstack = 0
 23565  011D64  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 23566                           
 23567                           ;main.c: 151: switch (currentADCChannel) {
 23568  011D68  D291               	goto	i2l820
 23569  011D6A                     
 23570                           ;main.c: 154: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 23571  011D6A  ECFC  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23572  011D6E  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23573  011D72  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23574  011D76  ECA0  F0B1         	call	___lwtoft	;wreg free
 23575  011D7A  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23576  011D7E  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23577  011D82  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23578  011D86  0E68               	movlw	104
 23579  011D88  6E2A               	movwf	i2___ftmul@f2,c
 23580  011D8A  0E53               	movlw	83
 23581  011D8C  6E2B               	movwf	i2___ftmul@f2+1,c
 23582  011D8E  0E3B               	movlw	59
 23583  011D90  6E2C               	movwf	i2___ftmul@f2+2,c
 23584  011D92  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23585  011D96  C027  F0DD         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 23586  011D9A  C028  F0DE         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 23587  011D9E  C029  F0DF         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 23588                           
 23589                           ;main.c: 155: break;
 23590  011DA2  0012               	return	
 23591  011DA4                     
 23592                           ;main.c: 159: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 23593  011DA4  0E68               	movlw	104
 23594  011DA6  6E2A               	movwf	i2___ftmul@f2,c
 23595  011DA8  0E53               	movlw	83
 23596  011DAA  6E2B               	movwf	i2___ftmul@f2+1,c
 23597  011DAC  0E3B               	movlw	59
 23598  011DAE  6E2C               	movwf	i2___ftmul@f2+2,c
 23599  011DB0  ECFC  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23600  011DB4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23601  011DB8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23602  011DBC  ECA0  F0B1         	call	___lwtoft	;wreg free
 23603  011DC0  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23604  011DC4  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23605  011DC8  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23606  011DCC  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23607  011DD0  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 23608  011DD4  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 23609  011DD8  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 23610  011DDC  C0DD  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 23611  011DE0  C0DE  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 23612  011DE4  C0DF  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 23613  011DE8  ECFB  F09E         	call	i2___ftadd	;wreg free
 23614  011DEC  C040  F0EC         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 23615  011DF0  C041  F0ED         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 23616  011DF4  C042  F0EE         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 23617                           
 23618                           ;main.c: 160: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 23619  011DF8  0E12               	movlw	18
 23620  011DFA  6E15               	movwf	i2___ftdiv@f1,c
 23621  011DFC  0E03               	movlw	3
 23622  011DFE  6E16               	movwf	i2___ftdiv@f1+1,c
 23623  011E00  0E40               	movlw	64
 23624  011E02  6E17               	movwf	i2___ftdiv@f1+2,c
 23625  011E04  C0EC  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 23626  011E08  C0ED  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 23627  011E0C  C0EE  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 23628  011E10  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 23629  011E14  C015  F0DA         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 23630  011E18  C016  F0DB         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 23631  011E1C  C017  F0DC         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 23632                           
 23633                           ;main.c: 161: break;
 23634  011E20  0012               	return	
 23635  011E22                     
 23636                           ;main.c: 165: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 23637  011E22  C0DA  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 23638  011E26  C0DB  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 23639  011E2A  C0DC  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 23640  011E2E  ECFC  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23641  011E32  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23642  011E36  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23643  011E3A  ECA0  F0B1         	call	___lwtoft	;wreg free
 23644  011E3E  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23645  011E42  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23646  011E46  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23647  011E4A  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23648  011E4E  C027  F0B3         	movff	?i2___ftmul,_ADC_postProcessingCallback$3334
 23649  011E52  C028  F0B4         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3334+1
 23650  011E56  C029  F0B5         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3334+2
 23651                           
 23652                           ;main.c: 165: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 23653  011E5A  C0B3  F027         	movff	_ADC_postProcessingCallback$3334,i2___ftmul@f1
 23654  011E5E  C0B4  F028         	movff	_ADC_postProcessingCallback$3334+1,i2___ftmul@f1+1
 23655  011E62  C0B5  F029         	movff	_ADC_postProcessingCallback$3334+2,i2___ftmul@f1+2
 23656  011E66  0E68               	movlw	104
 23657  011E68  6E2A               	movwf	i2___ftmul@f2,c
 23658  011E6A  0ED3               	movlw	211
 23659  011E6C  6E2B               	movwf	i2___ftmul@f2+1,c
 23660  011E6E  0E3B               	movlw	59
 23661  011E70  6E2C               	movwf	i2___ftmul@f2+2,c
 23662  011E72  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23663  011E76  C027  F0D7         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 23664  011E7A  C028  F0D8         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 23665  011E7E  C029  F0D9         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 23666                           
 23667                           ;main.c: 166: break;
 23668  011E82  0012               	return	
 23669  011E84                     
 23670                           ;main.c: 169: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 23671  011E84  0EC0               	movlw	192
 23672  011E86  6E18               	movwf	i2___ftdiv@f2,c
 23673  011E88  0E7F               	movlw	127
 23674  011E8A  6E19               	movwf	i2___ftdiv@f2+1,c
 23675  011E8C  0E44               	movlw	68
 23676  011E8E  6E1A               	movwf	i2___ftdiv@f2+2,c
 23677  011E90  C0D7  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23678  011E94  C0D8  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23679  011E98  C0D9  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23680  011E9C  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 23681  011EA0  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23682  011EA4  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23683  011EA8  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23684  011EAC  ECFC  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23685  011EB0  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23686  011EB4  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23687  011EB8  ECA0  F0B1         	call	___lwtoft	;wreg free
 23688  011EBC  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23689  011EC0  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23690  011EC4  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23691  011EC8  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23692  011ECC  C027  F0B3         	movff	?i2___ftmul,_ADC_postProcessingCallback$3334
 23693  011ED0  C028  F0B4         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3334+1
 23694  011ED4  C029  F0B5         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3334+2
 23695                           
 23696                           ;main.c: 169: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 23697  011ED8  C0B3  F027         	movff	_ADC_postProcessingCallback$3334,i2___ftmul@f1
 23698  011EDC  C0B4  F028         	movff	_ADC_postProcessingCallback$3334+1,i2___ftmul@f1+1
 23699  011EE0  C0B5  F029         	movff	_ADC_postProcessingCallback$3334+2,i2___ftmul@f1+2
 23700  011EE4  0E5E               	movlw	94
 23701  011EE6  6E2A               	movwf	i2___ftmul@f2,c
 23702  011EE8  0EF2               	movlw	242
 23703  011EEA  6E2B               	movwf	i2___ftmul@f2+1,c
 23704  011EEC  0E3F               	movlw	63
 23705  011EEE  6E2C               	movwf	i2___ftmul@f2+2,c
 23706  011EF0  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23707  011EF4  C027  F0CE         	movff	?i2___ftmul,_Imeas	;volatile
 23708  011EF8  C028  F0CF         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 23709  011EFC  C029  F0D0         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 23710                           
 23711                           ;main.c: 173: if (LATGbits.LATG0 != 1) {
 23712  011F00  B07F               	btfsc	3967,0,c	;volatile
 23713  011F02  D089               	goto	i2l826
 23714                           
 23715                           ;main.c: 178: if (load_enable) {
 23716  011F04  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23717  011F06  D029               	goto	i2l827
 23718                           
 23719                           ;main.c: 181: if (dimming_period < 0x7FEE) {
 23720  011F08  0EEE               	movlw	238
 23721  011F0A  0100               	movlb	0	; () banked
 23722  011F0C  5DF8               	subwf	_dimming_period& (0+255),w,b	;volatile
 23723  011F0E  0E7F               	movlw	127
 23724  011F10  59F9               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 23725  011F12  B0D8               	btfsc	status,0,c
 23726  011F14  D007               	goto	i2l828
 23727                           
 23728                           ; BSR set to: 0
 23729                           ;main.c: 183: Ipk = Imeas;
 23730  011F16  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 23731  011F1A  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 23732  011F1E  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 23733                           
 23734                           ;main.c: 185: }
 23735  011F22  D014               	goto	i2l829
 23736  011F24                     i2l828:
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;main.c: 188: else {
 23740                           ;main.c: 190: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 23741                           
 23742                           ; BSR set to: 0
 23743  011F24  C0CE  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 23744  011F28  C0CF  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 23745  011F2C  C0D0  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 23746  011F30  C0FA  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 23747  011F34  C0FB  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 23748  011F38  C0FC  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 23749  011F3C  ECD5  F0AD         	call	_currentMeasuredToPeak	;wreg free
 23750  011F40  C073  F0D1         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 23751  011F44  C074  F0D2         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 23752  011F48  C075  F0D3         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 23753  011F4C                     i2l829:
 23754                           
 23755                           ;main.c: 192: }
 23756                           ;main.c: 194: Vpk = Vpk_const;
 23757  011F4C  C0F2  F0D4         	movff	_Vpk_const,_Vpk	;volatile
 23758  011F50  C0F3  F0D5         	movff	_Vpk_const+1,_Vpk+1	;volatile
 23759  011F54  C0F4  F0D6         	movff	_Vpk_const+2,_Vpk+2	;volatile
 23760                           
 23761                           ;main.c: 196: }
 23762  011F58  D00D               	goto	i2l830
 23763  011F5A                     i2l827:
 23764                           
 23765                           ;main.c: 198: else {
 23766                           ;main.c: 200: Ipk = 0.0;
 23767  011F5A  0E00               	movlw	0
 23768  011F5C  0100               	movlb	0	; () banked
 23769  011F5E  6FD1               	movwf	_Ipk& (0+255),b	;volatile
 23770  011F60  0E00               	movlw	0
 23771  011F62  6FD2               	movwf	(_Ipk+1)& (0+255),b	;volatile
 23772  011F64  0E00               	movlw	0
 23773  011F66  6FD3               	movwf	(_Ipk+2)& (0+255),b	;volatile
 23774                           
 23775                           ;main.c: 201: Vpk = 0.0;
 23776  011F68  0E00               	movlw	0
 23777  011F6A  6FD4               	movwf	_Vpk& (0+255),b	;volatile
 23778  011F6C  0E00               	movlw	0
 23779  011F6E  6FD5               	movwf	(_Vpk+1)& (0+255),b	;volatile
 23780  011F70  0E00               	movlw	0
 23781  011F72  6FD6               	movwf	(_Vpk+2)& (0+255),b	;volatile
 23782  011F74                     i2l830:
 23783                           
 23784                           ;main.c: 203: }
 23785                           ;main.c: 205: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 23786                           
 23787                           ; BSR set to: 0
 23788  011F74  C0FA  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 23789  011F78  C0FB  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 23790  011F7C  C0FC  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 23791  011F80  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 23792  011F84  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 23793  011F88  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 23794  011F8C  EC60  F09C         	call	_peakToRMS	;wreg free
 23795  011F90  C094  F0B0         	movff	?_peakToRMS,_ADC_postProcessingCallback$3335
 23796  011F94  C095  F0B1         	movff	?_peakToRMS+1,_ADC_postProcessingCallback$3335+1
 23797  011F98  C096  F0B2         	movff	?_peakToRMS+2,_ADC_postProcessingCallback$3335+2
 23798                           
 23799                           ;main.c: 203: }
 23800                           ;main.c: 205: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 23801  011F9C  C0B0  F040         	movff	_ADC_postProcessingCallback$3335,i2___ftadd@f1
 23802  011FA0  C0B1  F041         	movff	_ADC_postProcessingCallback$3335+1,i2___ftadd@f1+1
 23803  011FA4  C0B2  F042         	movff	_ADC_postProcessingCallback$3335+2,i2___ftadd@f1+2
 23804  011FA8  C0EF  F043         	movff	_Irms_offset,i2___ftadd@f2
 23805  011FAC  C0F0  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 23806  011FB0  C0F1  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 23807  011FB4  ECFB  F09E         	call	i2___ftadd	;wreg free
 23808  011FB8  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 23809  011FBC  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 23810  011FC0  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 23811                           
 23812                           ;main.c: 206: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 23813  011FC4  C0D4  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 23814  011FC8  C0D5  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 23815  011FCC  C0D6  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 23816  011FD0  C0FA  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 23817  011FD4  C0FB  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 23818  011FD8  C0FC  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 23819  011FDC  EC60  F09C         	call	_peakToRMS	;wreg free
 23820  011FE0  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 23821  011FE4  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 23822  011FE8  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 23823                           
 23824                           ;main.c: 207: Avg_Power = Vrms * Irms;
 23825  011FEC  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 23826  011FF0  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 23827  011FF4  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 23828  011FF8  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 23829  011FFC  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 23830  012000  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 23831  012004  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23832  012008  C027  F1C1         	movff	?i2___ftmul,_Avg_Power	;volatile
 23833  01200C  C028  F1C2         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 23834  012010  C029  F1C3         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 23835                           
 23836                           ;main.c: 209: }
 23837  012014  0012               	return	
 23838  012016                     i2l826:
 23839                           
 23840                           ;main.c: 212: else {
 23841                           ;main.c: 214: Ipk = Imeas;
 23842  012016  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 23843  01201A  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 23844  01201E  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 23845                           
 23846                           ;main.c: 215: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 23847  012022  0E00               	movlw	0
 23848  012024  0100               	movlb	0	; () banked
 23849  012026  6F97               	movwf	peakToRMS@Angle& (0+255),b
 23850  012028  0E00               	movlw	0
 23851  01202A  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 23852  01202C  0E00               	movlw	0
 23853  01202E  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 23854  012030  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 23855  012034  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 23856  012038  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 23857  01203C  EC60  F09C         	call	_peakToRMS	;wreg free
 23858  012040  C094  F0B0         	movff	?_peakToRMS,_ADC_postProcessingCallback$3335
 23859  012044  C095  F0B1         	movff	?_peakToRMS+1,_ADC_postProcessingCallback$3335+1
 23860  012048  C096  F0B2         	movff	?_peakToRMS+2,_ADC_postProcessingCallback$3335+2
 23861                           
 23862                           ;main.c: 215: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 23863  01204C  C0B0  F040         	movff	_ADC_postProcessingCallback$3335,i2___ftadd@f1
 23864  012050  C0B1  F041         	movff	_ADC_postProcessingCallback$3335+1,i2___ftadd@f1+1
 23865  012054  C0B2  F042         	movff	_ADC_postProcessingCallback$3335+2,i2___ftadd@f1+2
 23866  012058  C0EF  F043         	movff	_Irms_offset,i2___ftadd@f2
 23867  01205C  C0F0  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 23868  012060  C0F1  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 23869  012064  ECFB  F09E         	call	i2___ftadd	;wreg free
 23870  012068  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 23871  01206C  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 23872  012070  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 23873                           
 23874                           ;main.c: 216: Vrms = peakToRMS(Vpk_const, 0.0);
 23875  012074  C0F2  F094         	movff	_Vpk_const,peakToRMS@Peak
 23876  012078  C0F3  F095         	movff	_Vpk_const+1,peakToRMS@Peak+1
 23877  01207C  C0F4  F096         	movff	_Vpk_const+2,peakToRMS@Peak+2
 23878  012080  0E00               	movlw	0
 23879  012082  0100               	movlb	0	; () banked
 23880  012084  6F97               	movwf	peakToRMS@Angle& (0+255),b
 23881  012086  0E00               	movlw	0
 23882  012088  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 23883  01208A  0E00               	movlw	0
 23884  01208C  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 23885  01208E  EC60  F09C         	call	_peakToRMS	;wreg free
 23886  012092  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 23887  012096  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 23888  01209A  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 23889                           
 23890                           ;main.c: 217: Avg_Power = Vrms * Irms;
 23891  01209E  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 23892  0120A2  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 23893  0120A6  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 23894  0120AA  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 23895  0120AE  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 23896  0120B2  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 23897  0120B6  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23898  0120BA  C027  F1C1         	movff	?i2___ftmul,_Avg_Power	;volatile
 23899  0120BE  C028  F1C2         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 23900  0120C2  C029  F1C3         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 23901                           
 23902                           ;main.c: 219: }
 23903                           ;main.c: 220: break;
 23904  0120C6  0012               	return	
 23905  0120C8                     
 23906                           ;main.c: 224: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 23907  0120C8  0EC0               	movlw	192
 23908  0120CA  6E18               	movwf	i2___ftdiv@f2,c
 23909  0120CC  0E7F               	movlw	127
 23910  0120CE  6E19               	movwf	i2___ftdiv@f2+1,c
 23911  0120D0  0E44               	movlw	68
 23912  0120D2  6E1A               	movwf	i2___ftdiv@f2+2,c
 23913  0120D4  C0D7  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23914  0120D8  C0D8  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23915  0120DC  C0D9  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23916  0120E0  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 23917  0120E4  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23918  0120E8  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23919  0120EC  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23920  0120F0  ECFC  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23921  0120F4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23922  0120F8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23923  0120FC  ECA0  F0B1         	call	___lwtoft	;wreg free
 23924  012100  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23925  012104  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23926  012108  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23927  01210C  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23928  012110  C027  F0B3         	movff	?i2___ftmul,_ADC_postProcessingCallback$3334
 23929  012114  C028  F0B4         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3334+1
 23930  012118  C029  F0B5         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3334+2
 23931                           
 23932                           ;main.c: 224: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 23933  01211C  C0B3  F027         	movff	_ADC_postProcessingCallback$3334,i2___ftmul@f1
 23934  012120  C0B4  F028         	movff	_ADC_postProcessingCallback$3334+1,i2___ftmul@f1+1
 23935  012124  C0B5  F029         	movff	_ADC_postProcessingCallback$3334+2,i2___ftmul@f1+2
 23936  012128  0EF8               	movlw	248
 23937  01212A  6E2A               	movwf	i2___ftmul@f2,c
 23938  01212C  0E80               	movlw	128
 23939  01212E  6E2B               	movwf	i2___ftmul@f2+1,c
 23940  012130  0E40               	movlw	64
 23941  012132  6E2C               	movwf	i2___ftmul@f2+2,c
 23942  012134  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23943  012138  C027  F1C7         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 23944  01213C  C028  F1C8         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 23945  012140  C029  F1C9         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 23946                           
 23947                           ;main.c: 225: break;
 23948  012144  0012               	return	
 23949  012146                     
 23950                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23951  012146  0E00               	movlw	0
 23952  012148  6E18               	movwf	i2___ftdiv@f2,c
 23953  01214A  0E00               	movlw	0
 23954  01214C  6E19               	movwf	i2___ftdiv@f2+1,c
 23955  01214E  0E40               	movlw	64
 23956  012150  6E1A               	movwf	i2___ftdiv@f2+2,c
 23957  012152  C0D7  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23958  012156  C0D8  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23959  01215A  C0D9  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23960  01215E  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 23961  012162  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23962  012166  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23963  01216A  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23964  01216E  0E00               	movlw	0
 23965  012170  6E43               	movwf	i2___ftadd@f2,c
 23966  012172  0E80               	movlw	128
 23967  012174  6E44               	movwf	i2___ftadd@f2+1,c
 23968  012176  0E3F               	movlw	63
 23969  012178  6E45               	movwf	i2___ftadd@f2+2,c
 23970  01217A  0EC0               	movlw	192
 23971  01217C  6E18               	movwf	i2___ftdiv@f2,c
 23972  01217E  0E7F               	movlw	127
 23973  012180  6E19               	movwf	i2___ftdiv@f2+1,c
 23974  012182  0E44               	movlw	68
 23975  012184  6E1A               	movwf	i2___ftdiv@f2+2,c
 23976  012186  ECFC  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23977  01218A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23978  01218E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23979  012192  ECA0  F0B1         	call	___lwtoft	;wreg free
 23980  012196  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 23981  01219A  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 23982  01219E  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 23983  0121A2  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 23984  0121A6  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 23985  0121AA  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 23986  0121AE  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 23987  0121B2  EC8E  F0B1         	call	i2___ftneg	;wreg free
 23988  0121B6  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23989  0121BA  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23990  0121BE  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23991  0121C2  ECFB  F09E         	call	i2___ftadd	;wreg free
 23992  0121C6  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 23993  0121CA  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 23994  0121CE  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 23995  0121D2  ECF5  F0A4         	call	i2___ftmul	;wreg free
 23996  0121D6  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3336
 23997  0121DA  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3336+1
 23998  0121DE  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3336+2
 23999                           
 24000                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 24001  0121E2  0E04               	movlw	4
 24002  0121E4  6E18               	movwf	i2___ftdiv@f2,c
 24003  0121E6  0EAD               	movlw	173
 24004  0121E8  6E19               	movwf	i2___ftdiv@f2+1,c
 24005  0121EA  0E3A               	movlw	58
 24006  0121EC  6E1A               	movwf	i2___ftdiv@f2+2,c
 24007  0121EE  0EB4               	movlw	180
 24008  0121F0  6E43               	movwf	i2___ftadd@f2,c
 24009  0121F2  0E28               	movlw	40
 24010  0121F4  6E44               	movwf	i2___ftadd@f2+1,c
 24011  0121F6  0E3F               	movlw	63
 24012  0121F8  6E45               	movwf	i2___ftadd@f2+2,c
 24013  0121FA  C0A6  F024         	movff	_ADC_postProcessingCallback$3336,i2___ftneg@f1
 24014  0121FE  C0A7  F025         	movff	_ADC_postProcessingCallback$3336+1,i2___ftneg@f1+1
 24015  012202  C0A8  F026         	movff	_ADC_postProcessingCallback$3336+2,i2___ftneg@f1+2
 24016  012206  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24017  01220A  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24018  01220E  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24019  012212  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24020  012216  ECFB  F09E         	call	i2___ftadd	;wreg free
 24021  01221A  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 24022  01221E  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 24023  012222  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 24024  012226  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 24025  01222A  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3337
 24026  01222E  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3337+1
 24027  012232  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3337+2
 24028                           
 24029                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 24030  012236  C0F5  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 24031  01223A  C0F6  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 24032  01223E  C0F7  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 24033  012242  C0A9  F040         	movff	_ADC_postProcessingCallback$3337,i2___ftadd@f1
 24034  012246  C0AA  F041         	movff	_ADC_postProcessingCallback$3337+1,i2___ftadd@f1+1
 24035  01224A  C0AB  F042         	movff	_ADC_postProcessingCallback$3337+2,i2___ftadd@f1+2
 24036  01224E  ECFB  F09E         	call	i2___ftadd	;wreg free
 24037  012252  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3338
 24038  012256  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3338+1
 24039  01225A  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3338+2
 24040                           
 24041                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 24042  01225E  C0AC  F040         	movff	_ADC_postProcessingCallback$3338,i2___ftadd@f1
 24043  012262  C0AD  F041         	movff	_ADC_postProcessingCallback$3338+1,i2___ftadd@f1+1
 24044  012266  C0AE  F042         	movff	_ADC_postProcessingCallback$3338+2,i2___ftadd@f1+2
 24045  01226A  0E00               	movlw	0
 24046  01226C  6E43               	movwf	i2___ftadd@f2,c
 24047  01226E  0E20               	movlw	32
 24048  012270  6E44               	movwf	i2___ftadd@f2+1,c
 24049  012272  0EC2               	movlw	194
 24050  012274  6E45               	movwf	i2___ftadd@f2+2,c
 24051  012276  ECFB  F09E         	call	i2___ftadd	;wreg free
 24052  01227A  C040  F1C4         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 24053  01227E  C041  F1C5         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 24054  012282  C042  F1C6         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 24055                           
 24056                           ;main.c: 230: break;
 24057  012286  0012               	return	
 24058  012288                     i2l834:
 24059                           
 24060                           ; BSR set to: 0
 24061                           ;main.c: 234: LATFbits.LATF3 = 1;
 24062  012288  867E               	bsf	3966,3,c	;volatile
 24063                           
 24064                           ; BSR set to: 0
 24065                           ;main.c: 237: }
 24066                           
 24067                           ;main.c: 235: break;
 24068  01228A  0012               	return	
 24069  01228C                     i2l820:
 24070                           
 24071                           ; BSR set to: 0
 24072  01228C  0100               	movlb	0	; () banked
 24073  01228E  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 24074                           
 24075                           ; Switch size 1, requested type "space"
 24076                           ; Number of cases is 6, Range of values is 0 to 63
 24077                           ; switch strategies available:
 24078                           ; Name         Instructions Cycles
 24079                           ; simple_byte           19    10 (average)
 24080                           ;	Chosen strategy is simple_byte
 24081  012290  0A00               	xorlw	0	; case 0
 24082  012292  B4D8               	btfsc	status,2,c
 24083  012294  D5F7               	goto	i2l825
 24084  012296  0A04               	xorlw	4	; case 4
 24085  012298  B4D8               	btfsc	status,2,c
 24086  01229A  D716               	goto	i2l832
 24087  01229C  0A26               	xorlw	38	; case 34
 24088  01229E  B4D8               	btfsc	status,2,c
 24089  0122A0  D5C0               	goto	i2l824
 24090  0122A2  0A1E               	xorlw	30	; case 60
 24091  0122A4  B4D8               	btfsc	status,2,c
 24092  0122A6  D561               	goto	i2l821
 24093  0122A8  0A01               	xorlw	1	; case 61
 24094  0122AA  B4D8               	btfsc	status,2,c
 24095  0122AC  D74C               	goto	i2l833
 24096  0122AE  0A02               	xorlw	2	; case 63
 24097  0122B0  B4D8               	btfsc	status,2,c
 24098  0122B2  D578               	goto	i2l823
 24099  0122B4  D7E9               	goto	i2l834
 24100  0122B6                     __end_of_ADC_postProcessingCallback:
 24101                           	opt stack 0
 24102                           tosu	equ	0xFFF
 24103                           tosh	equ	0xFFE
 24104                           tosl	equ	0xFFD
 24105                           pclatu	equ	0xFFB
 24106                           pclath	equ	0xFFA
 24107                           tblptru	equ	0xFF8
 24108                           tblptrh	equ	0xFF7
 24109                           tblptrl	equ	0xFF6
 24110                           tablat	equ	0xFF5
 24111                           prodh	equ	0xFF4
 24112                           prodl	equ	0xFF3
 24113                           intcon	equ	0xFF2
 24114                           postinc0	equ	0xFEE
 24115                           fsr0h	equ	0xFEA
 24116                           fsr0l	equ	0xFE9
 24117                           wreg	equ	0xFE8
 24118                           indf1	equ	0xFE7
 24119                           postdec1	equ	0xFE5
 24120                           fsr1h	equ	0xFE2
 24121                           fsr1l	equ	0xFE1
 24122                           bsr	equ	0xFE0
 24123                           indf2	equ	0xFDF
 24124                           postinc2	equ	0xFDE
 24125                           postdec2	equ	0xFDD
 24126                           fsr2h	equ	0xFDA
 24127                           fsr2l	equ	0xFD9
 24128                           status	equ	0xFD8
 24129                           
 24130 ;; *************** function _peakToRMS *****************
 24131 ;; Defined at:
 24132 ;;		line 90 in file "main.c"
 24133 ;; Parameters:    Size  Location     Type
 24134 ;;  Peak            3   52[BANK0 ] void 
 24135 ;;  Angle           3   55[BANK0 ] void 
 24136 ;; Auto vars:     Size  Location     Type
 24137 ;;  RMS             3   67[BANK0 ] void 
 24138 ;; Return value:  Size  Location     Type
 24139 ;;                  3   52[BANK0 ] void 
 24140 ;; Registers used:
 24141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24142 ;; Tracked objects:
 24143 ;;		On entry : 0/0
 24144 ;;		On exit  : 0/0
 24145 ;;		Unchanged: 0/0
 24146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24147 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24148 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24150 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24151 ;;Total ram usage:       18 bytes
 24152 ;; Hardware stack levels used:    1
 24153 ;; Hardware stack levels required when called:    6
 24154 ;; This function calls:
 24155 ;;		_acos
 24156 ;;		_sin
 24157 ;;		_sqrt
 24158 ;;		i2___ftadd
 24159 ;;		i2___ftdiv
 24160 ;;		i2___ftmul
 24161 ;;		i2___ftneg
 24162 ;; This function is called by:
 24163 ;;		_ADC_postProcessingCallback
 24164 ;; This function uses a non-reentrant model
 24165 ;;
 24166                           
 24167                           	psect	text89
 24168  0138C0                     __ptext89:
 24169                           	opt stack 0
 24170  0138C0                     _peakToRMS:
 24171                           	opt stack 9
 24172                           
 24173                           ;main.c: 93: double RMS = 0.0;
 24174                           
 24175                           ;incstack = 0
 24176  0138C0  0E00               	movlw	0
 24177  0138C2  0100               	movlb	0	; () banked
 24178  0138C4  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 24179  0138C6  0E00               	movlw	0
 24180  0138C8  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 24181  0138CA  0E00               	movlw	0
 24182  0138CC  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;main.c: 96: RMS = 2.0 * acos(-1.0);
 24186  0138CE  0E00               	movlw	0
 24187  0138D0  6F8E               	movwf	acos@x& (0+255),b
 24188  0138D2  0E80               	movlw	128
 24189  0138D4  6F8F               	movwf	(acos@x+1)& (0+255),b
 24190  0138D6  0EBF               	movlw	191
 24191  0138D8  6F90               	movwf	(acos@x+2)& (0+255),b
 24192  0138DA  ECBC  F0AE         	call	_acos	;wreg free
 24193  0138DE  C08E  F0A0         	movff	?_acos,_peakToRMS$3331
 24194  0138E2  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3331+1
 24195  0138E6  C090  F0A2         	movff	?_acos+2,_peakToRMS$3331+2
 24196                           
 24197                           ;main.c: 96: RMS = 2.0 * acos(-1.0);
 24198  0138EA  C0A0  F027         	movff	_peakToRMS$3331,i2___ftmul@f1
 24199  0138EE  C0A1  F028         	movff	_peakToRMS$3331+1,i2___ftmul@f1+1
 24200  0138F2  C0A2  F029         	movff	_peakToRMS$3331+2,i2___ftmul@f1+2
 24201  0138F6  0E00               	movlw	0
 24202  0138F8  6E2A               	movwf	i2___ftmul@f2,c
 24203  0138FA  0E00               	movlw	0
 24204  0138FC  6E2B               	movwf	i2___ftmul@f2+1,c
 24205  0138FE  0E40               	movlw	64
 24206  013900  6E2C               	movwf	i2___ftmul@f2+2,c
 24207  013902  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24208  013906  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 24209  01390A  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 24210  01390E  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 24211                           
 24212                           ;main.c: 97: RMS = RMS - (2.0 * Angle);
 24213  013912  0E00               	movlw	0
 24214  013914  6E2A               	movwf	i2___ftmul@f2,c
 24215  013916  0E00               	movlw	0
 24216  013918  6E2B               	movwf	i2___ftmul@f2+1,c
 24217  01391A  0E40               	movlw	64
 24218  01391C  6E2C               	movwf	i2___ftmul@f2+2,c
 24219  01391E  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 24220  013922  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 24221  013926  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 24222  01392A  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24223  01392E  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 24224  013932  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 24225  013936  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 24226  01393A  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24227  01393E  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24228  013942  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24229  013946  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24230  01394A  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 24231  01394E  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 24232  013952  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 24233  013956  ECFB  F09E         	call	i2___ftadd	;wreg free
 24234  01395A  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 24235  01395E  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 24236  013962  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 24237                           
 24238                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 24239  013966  0E00               	movlw	0
 24240  013968  6E2A               	movwf	i2___ftmul@f2,c
 24241  01396A  0E00               	movlw	0
 24242  01396C  6E2B               	movwf	i2___ftmul@f2+1,c
 24243  01396E  0E40               	movlw	64
 24244  013970  6E2C               	movwf	i2___ftmul@f2+2,c
 24245  013972  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 24246  013976  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 24247  01397A  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 24248  01397E  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24249  013982  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3332
 24250  013986  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3332+1
 24251  01398A  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3332+2
 24252                           
 24253                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 24254  01398E  C09A  F066         	movff	_peakToRMS$3332,sin@f
 24255  013992  C09B  F067         	movff	_peakToRMS$3332+1,sin@f+1
 24256  013996  C09C  F068         	movff	_peakToRMS$3332+2,sin@f+2
 24257  01399A  EC31  F09B         	call	_sin	;wreg free
 24258  01399E  C066  F09D         	movff	?_sin,_peakToRMS$3333
 24259  0139A2  C067  F09E         	movff	?_sin+1,_peakToRMS$3333+1
 24260  0139A6  C068  F09F         	movff	?_sin+2,_peakToRMS$3333+2
 24261                           
 24262                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 24263  0139AA  C09D  F040         	movff	_peakToRMS$3333,i2___ftadd@f1
 24264  0139AE  C09E  F041         	movff	_peakToRMS$3333+1,i2___ftadd@f1+1
 24265  0139B2  C09F  F042         	movff	_peakToRMS$3333+2,i2___ftadd@f1+2
 24266  0139B6  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 24267  0139BA  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 24268  0139BE  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 24269  0139C2  ECFB  F09E         	call	i2___ftadd	;wreg free
 24270  0139C6  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 24271  0139CA  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 24272  0139CE  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 24273                           
 24274                           ;main.c: 99: RMS = RMS / (4.0 * acos(-1.0));
 24275  0139D2  0E00               	movlw	0
 24276  0139D4  0100               	movlb	0	; () banked
 24277  0139D6  6F8E               	movwf	acos@x& (0+255),b
 24278  0139D8  0E80               	movlw	128
 24279  0139DA  6F8F               	movwf	(acos@x+1)& (0+255),b
 24280  0139DC  0EBF               	movlw	191
 24281  0139DE  6F90               	movwf	(acos@x+2)& (0+255),b
 24282  0139E0  ECBC  F0AE         	call	_acos	;wreg free
 24283  0139E4  C08E  F0A0         	movff	?_acos,_peakToRMS$3331
 24284  0139E8  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3331+1
 24285  0139EC  C090  F0A2         	movff	?_acos+2,_peakToRMS$3331+2
 24286                           
 24287                           ;main.c: 99: RMS = RMS / (4.0 * acos(-1.0));
 24288  0139F0  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 24289  0139F4  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 24290  0139F8  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 24291  0139FC  0E00               	movlw	0
 24292  0139FE  6E2A               	movwf	i2___ftmul@f2,c
 24293  013A00  0E80               	movlw	128
 24294  013A02  6E2B               	movwf	i2___ftmul@f2+1,c
 24295  013A04  0E40               	movlw	64
 24296  013A06  6E2C               	movwf	i2___ftmul@f2+2,c
 24297  013A08  C0A0  F027         	movff	_peakToRMS$3331,i2___ftmul@f1
 24298  013A0C  C0A1  F028         	movff	_peakToRMS$3331+1,i2___ftmul@f1+1
 24299  013A10  C0A2  F029         	movff	_peakToRMS$3331+2,i2___ftmul@f1+2
 24300  013A14  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24301  013A18  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 24302  013A1C  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 24303  013A20  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 24304  013A24  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 24305  013A28  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 24306  013A2C  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 24307  013A30  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 24308                           
 24309                           ;main.c: 100: RMS = sqrt(RMS);
 24310  013A34  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 24311  013A38  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 24312  013A3C  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 24313  013A40  ECD1  F09F         	call	_sqrt	;wreg free
 24314  013A44  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 24315  013A48  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 24316  013A4C  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 24317                           
 24318                           ;main.c: 101: RMS = Peak * RMS;
 24319  013A50  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 24320  013A54  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 24321  013A58  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 24322  013A5C  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 24323  013A60  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 24324  013A64  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 24325  013A68  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24326  013A6C  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 24327  013A70  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 24328  013A74  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 24329                           
 24330                           ;main.c: 102: return RMS;
 24331  013A78  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 24332  013A7C  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 24333  013A80  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 24334  013A84  0012               	return	
 24335  013A86                     __end_of_peakToRMS:
 24336                           	opt stack 0
 24337                           tosu	equ	0xFFF
 24338                           tosh	equ	0xFFE
 24339                           tosl	equ	0xFFD
 24340                           pclatu	equ	0xFFB
 24341                           pclath	equ	0xFFA
 24342                           tblptru	equ	0xFF8
 24343                           tblptrh	equ	0xFF7
 24344                           tblptrl	equ	0xFF6
 24345                           tablat	equ	0xFF5
 24346                           prodh	equ	0xFF4
 24347                           prodl	equ	0xFF3
 24348                           intcon	equ	0xFF2
 24349                           postinc0	equ	0xFEE
 24350                           fsr0h	equ	0xFEA
 24351                           fsr0l	equ	0xFE9
 24352                           wreg	equ	0xFE8
 24353                           indf1	equ	0xFE7
 24354                           postdec1	equ	0xFE5
 24355                           fsr1h	equ	0xFE2
 24356                           fsr1l	equ	0xFE1
 24357                           bsr	equ	0xFE0
 24358                           indf2	equ	0xFDF
 24359                           postinc2	equ	0xFDE
 24360                           postdec2	equ	0xFDD
 24361                           fsr2h	equ	0xFDA
 24362                           fsr2l	equ	0xFD9
 24363                           status	equ	0xFD8
 24364                           
 24365 ;; *************** function _acos *****************
 24366 ;; Defined at:
 24367 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 24368 ;; Parameters:    Size  Location     Type
 24369 ;;  x               3   46[BANK0 ] void 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;		None
 24372 ;; Return value:  Size  Location     Type
 24373 ;;                  3   46[BANK0 ] void 
 24374 ;; Registers used:
 24375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24376 ;; Tracked objects:
 24377 ;;		On entry : 0/0
 24378 ;;		On exit  : 0/0
 24379 ;;		Unchanged: 0/0
 24380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24381 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24382 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24384 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24385 ;;Total ram usage:        6 bytes
 24386 ;; Hardware stack levels used:    1
 24387 ;; Hardware stack levels required when called:    5
 24388 ;; This function calls:
 24389 ;;		_asin
 24390 ;;		i2___ftadd
 24391 ;;		i2___ftneg
 24392 ;; This function is called by:
 24393 ;;		_peakToRMS
 24394 ;; This function uses a non-reentrant model
 24395 ;;
 24396                           
 24397                           	psect	text90
 24398  015D78                     __ptext90:
 24399                           	opt stack 0
 24400  015D78                     _acos:
 24401                           	opt stack 9
 24402                           
 24403                           ;incstack = 0
 24404  015D78  C08E  F079         	movff	acos@x,asin@x
 24405  015D7C  C08F  F07A         	movff	acos@x+1,asin@x+1
 24406  015D80  C090  F07B         	movff	acos@x+2,asin@x+2
 24407  015D84  ECFC  F099         	call	_asin	;wreg free
 24408  015D88  C079  F091         	movff	?_asin,_acos$3339
 24409  015D8C  C07A  F092         	movff	?_asin+1,_acos$3339+1
 24410  015D90  C07B  F093         	movff	?_asin+2,_acos$3339+2
 24411  015D94  C091  F024         	movff	_acos$3339,i2___ftneg@f1
 24412  015D98  C092  F025         	movff	_acos$3339+1,i2___ftneg@f1+1
 24413  015D9C  C093  F026         	movff	_acos$3339+2,i2___ftneg@f1+2
 24414  015DA0  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24415  015DA4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24416  015DA8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24417  015DAC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24418  015DB0  0E10               	movlw	16
 24419  015DB2  6E43               	movwf	i2___ftadd@f2,c
 24420  015DB4  0EC9               	movlw	201
 24421  015DB6  6E44               	movwf	i2___ftadd@f2+1,c
 24422  015DB8  0E3F               	movlw	63
 24423  015DBA  6E45               	movwf	i2___ftadd@f2+2,c
 24424  015DBC  ECFB  F09E         	call	i2___ftadd	;wreg free
 24425  015DC0  C040  F08E         	movff	?i2___ftadd,?_acos
 24426  015DC4  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 24427  015DC8  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 24428  015DCC  0012               	return	
 24429  015DCE                     __end_of_acos:
 24430                           	opt stack 0
 24431                           tosu	equ	0xFFF
 24432                           tosh	equ	0xFFE
 24433                           tosl	equ	0xFFD
 24434                           pclatu	equ	0xFFB
 24435                           pclath	equ	0xFFA
 24436                           tblptru	equ	0xFF8
 24437                           tblptrh	equ	0xFF7
 24438                           tblptrl	equ	0xFF6
 24439                           tablat	equ	0xFF5
 24440                           prodh	equ	0xFF4
 24441                           prodl	equ	0xFF3
 24442                           intcon	equ	0xFF2
 24443                           postinc0	equ	0xFEE
 24444                           fsr0h	equ	0xFEA
 24445                           fsr0l	equ	0xFE9
 24446                           wreg	equ	0xFE8
 24447                           indf1	equ	0xFE7
 24448                           postdec1	equ	0xFE5
 24449                           fsr1h	equ	0xFE2
 24450                           fsr1l	equ	0xFE1
 24451                           bsr	equ	0xFE0
 24452                           indf2	equ	0xFDF
 24453                           postinc2	equ	0xFDE
 24454                           postdec2	equ	0xFDD
 24455                           fsr2h	equ	0xFDA
 24456                           fsr2l	equ	0xFD9
 24457                           status	equ	0xFD8
 24458                           
 24459 ;; *************** function _asin *****************
 24460 ;; Defined at:
 24461 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;  x               3   25[BANK0 ] void 
 24464 ;; Auto vars:     Size  Location     Type
 24465 ;;  y               3   40[BANK0 ] void 
 24466 ;;  sgn             3   28[BANK0 ] void 
 24467 ;; Return value:  Size  Location     Type
 24468 ;;                  3   25[BANK0 ] void 
 24469 ;; Registers used:
 24470 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24471 ;; Tracked objects:
 24472 ;;		On entry : 0/0
 24473 ;;		On exit  : 0/0
 24474 ;;		Unchanged: 0/0
 24475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24476 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24477 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24479 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24480 ;;Total ram usage:       21 bytes
 24481 ;; Hardware stack levels used:    1
 24482 ;; Hardware stack levels required when called:    4
 24483 ;; This function calls:
 24484 ;;		_atan
 24485 ;;		_fabs
 24486 ;;		_sqrt
 24487 ;;		i2___ftadd
 24488 ;;		i2___ftdiv
 24489 ;;		i2___ftge
 24490 ;;		i2___ftmul
 24491 ;;		i2___ftneg
 24492 ;; This function is called by:
 24493 ;;		_acos
 24494 ;; This function uses a non-reentrant model
 24495 ;;
 24496                           
 24497                           	psect	text91
 24498  0133F8                     __ptext91:
 24499                           	opt stack 0
 24500  0133F8                     _asin:
 24501                           	opt stack 9
 24502                           
 24503                           ;incstack = 0
 24504  0133F8  0E00               	movlw	0
 24505  0133FA  6E2A               	movwf	i2___ftge@ff1,c
 24506  0133FC  0E80               	movlw	128
 24507  0133FE  6E2B               	movwf	i2___ftge@ff1+1,c
 24508  013400  0E3F               	movlw	63
 24509  013402  6E2C               	movwf	i2___ftge@ff1+2,c
 24510  013404  C079  F027         	movff	asin@x,fabs@d
 24511  013408  C07A  F028         	movff	asin@x+1,fabs@d+1
 24512  01340C  C07B  F029         	movff	asin@x+2,fabs@d+2
 24513  013410  ECEC  F0B0         	call	_fabs	;wreg free
 24514  013414  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 24515  013418  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 24516  01341C  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 24517  013420  ECEA  F0A9         	call	i2___ftge	;wreg free
 24518  013424  B0D8               	btfsc	status,0,c
 24519  013426  D00C               	goto	i2l1339
 24520  013428  0E00               	movlw	0
 24521  01342A  0100               	movlb	0	; () banked
 24522  01342C  6FE7               	movwf	(_errno+1)& (0+255),b
 24523  01342E  0E21               	movlw	33
 24524  013430  6FE6               	movwf	_errno& (0+255),b
 24525  013432  0E00               	movlw	0
 24526  013434  6F79               	movwf	?_asin& (0+255),b
 24527  013436  0E00               	movlw	0
 24528  013438  6F7A               	movwf	(?_asin+1)& (0+255),b
 24529  01343A  0E00               	movlw	0
 24530  01343C  6F7B               	movwf	(?_asin+2)& (0+255),b
 24531                           
 24532                           ; BSR set to: 0
 24533  01343E  0012               	return	
 24534  013440                     i2l1339:
 24535                           
 24536                           ; BSR set to: 0
 24537  013440  0E00               	movlw	0
 24538  013442  0100               	movlb	0	; () banked
 24539  013444  6F7C               	movwf	asin@sgn& (0+255),b
 24540  013446  0E80               	movlw	128
 24541  013448  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 24542  01344A  0E3F               	movlw	63
 24543  01344C  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 24544                           
 24545                           ; BSR set to: 0
 24546  01344E  C079  F02A         	movff	asin@x,i2___ftmul@f2
 24547  013452  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 24548  013456  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 24549  01345A  C079  F027         	movff	asin@x,i2___ftmul@f1
 24550  01345E  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 24551  013462  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 24552  013466  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24553  01346A  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 24554  01346E  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 24555  013472  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 24556  013476  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24557  01347A  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24558  01347E  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24559  013482  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24560  013486  0E00               	movlw	0
 24561  013488  6E43               	movwf	i2___ftadd@f2,c
 24562  01348A  0E80               	movlw	128
 24563  01348C  6E44               	movwf	i2___ftadd@f2+1,c
 24564  01348E  0E3F               	movlw	63
 24565  013490  6E45               	movwf	i2___ftadd@f2+2,c
 24566  013492  ECFB  F09E         	call	i2___ftadd	;wreg free
 24567  013496  C040  F07F         	movff	?i2___ftadd,_asin$3340
 24568  01349A  C041  F080         	movff	?i2___ftadd+1,_asin$3340+1
 24569  01349E  C042  F081         	movff	?i2___ftadd+2,_asin$3340+2
 24570  0134A2  C07F  F066         	movff	_asin$3340,sqrt@a
 24571  0134A6  C080  F067         	movff	_asin$3340+1,sqrt@a+1
 24572  0134AA  C081  F068         	movff	_asin$3340+2,sqrt@a+2
 24573  0134AE  ECD1  F09F         	call	_sqrt	;wreg free
 24574  0134B2  C066  F088         	movff	?_sqrt,asin@y
 24575  0134B6  C067  F089         	movff	?_sqrt+1,asin@y+1
 24576  0134BA  C068  F08A         	movff	?_sqrt+2,asin@y+2
 24577  0134BE  C079  F027         	movff	asin@x,fabs@d
 24578  0134C2  C07A  F028         	movff	asin@x+1,fabs@d+1
 24579  0134C6  C07B  F029         	movff	asin@x+2,fabs@d+2
 24580  0134CA  ECEC  F0B0         	call	_fabs	;wreg free
 24581  0134CE  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 24582  0134D2  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 24583  0134D6  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 24584  0134DA  0EC3               	movlw	195
 24585  0134DC  6E2D               	movwf	i2___ftge@ff2,c
 24586  0134DE  0E35               	movlw	53
 24587  0134E0  6E2E               	movwf	i2___ftge@ff2+1,c
 24588  0134E2  0E3F               	movlw	63
 24589  0134E4  6E2F               	movwf	i2___ftge@ff2+2,c
 24590  0134E6  ECEA  F0A9         	call	i2___ftge	;wreg free
 24591  0134EA  B0D8               	btfsc	status,0,c
 24592  0134EC  D023               	goto	i2l1341
 24593  0134EE  C079  F015         	movff	asin@x,i2___ftdiv@f1
 24594  0134F2  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 24595  0134F6  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 24596  0134FA  C088  F018         	movff	asin@y,i2___ftdiv@f2
 24597  0134FE  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 24598  013502  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 24599  013506  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 24600  01350A  C015  F08B         	movff	?i2___ftdiv,_asin$3341
 24601  01350E  C016  F08C         	movff	?i2___ftdiv+1,_asin$3341+1
 24602  013512  C017  F08D         	movff	?i2___ftdiv+2,_asin$3341+2
 24603  013516  C08B  F058         	movff	_asin$3341,atan@f
 24604  01351A  C08C  F059         	movff	_asin$3341+1,atan@f+1
 24605  01351E  C08D  F05A         	movff	_asin$3341+2,atan@f+2
 24606  013522  EC43  F09D         	call	_atan	;wreg free
 24607  013526  C058  F079         	movff	?_atan,?_asin
 24608  01352A  C059  F07A         	movff	?_atan+1,?_asin+1
 24609  01352E  C05A  F07B         	movff	?_atan+2,?_asin+2
 24610  013532  0012               	return	
 24611  013534                     i2l1341:
 24612  013534  0100               	movlb	0	; () banked
 24613  013536  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 24614  013538  D055               	goto	i2l1342
 24615                           
 24616                           ; BSR set to: 0
 24617  01353A  C079  F018         	movff	asin@x,i2___ftdiv@f2
 24618  01353E  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 24619  013542  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 24620  013546  C088  F024         	movff	asin@y,i2___ftneg@f1
 24621  01354A  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 24622  01354E  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 24623  013552  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24624  013556  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 24625  01355A  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 24626  01355E  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 24627  013562  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 24628  013566  C015  F08B         	movff	?i2___ftdiv,_asin$3341
 24629  01356A  C016  F08C         	movff	?i2___ftdiv+1,_asin$3341+1
 24630  01356E  C017  F08D         	movff	?i2___ftdiv+2,_asin$3341+2
 24631  013572  C08B  F058         	movff	_asin$3341,atan@f
 24632  013576  C08C  F059         	movff	_asin$3341+1,atan@f+1
 24633  01357A  C08D  F05A         	movff	_asin$3341+2,atan@f+2
 24634  01357E  EC43  F09D         	call	_atan	;wreg free
 24635  013582  C058  F085         	movff	?_atan,_asin$3342
 24636  013586  C059  F086         	movff	?_atan+1,_asin$3342+1
 24637  01358A  C05A  F087         	movff	?_atan+2,_asin$3342+2
 24638  01358E  0E10               	movlw	16
 24639  013590  6E43               	movwf	i2___ftadd@f2,c
 24640  013592  0EC9               	movlw	201
 24641  013594  6E44               	movwf	i2___ftadd@f2+1,c
 24642  013596  0E3F               	movlw	63
 24643  013598  6E45               	movwf	i2___ftadd@f2+2,c
 24644  01359A  C085  F024         	movff	_asin$3342,i2___ftneg@f1
 24645  01359E  C086  F025         	movff	_asin$3342+1,i2___ftneg@f1+1
 24646  0135A2  C087  F026         	movff	_asin$3342+2,i2___ftneg@f1+2
 24647  0135A6  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24648  0135AA  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24649  0135AE  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24650  0135B2  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24651  0135B6  ECFB  F09E         	call	i2___ftadd	;wreg free
 24652  0135BA  C040  F082         	movff	?i2___ftadd,_asin$3343
 24653  0135BE  C041  F083         	movff	?i2___ftadd+1,_asin$3343+1
 24654  0135C2  C042  F084         	movff	?i2___ftadd+2,_asin$3343+2
 24655  0135C6  C082  F024         	movff	_asin$3343,i2___ftneg@f1
 24656  0135CA  C083  F025         	movff	_asin$3343+1,i2___ftneg@f1+1
 24657  0135CE  C084  F026         	movff	_asin$3343+2,i2___ftneg@f1+2
 24658  0135D2  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24659  0135D6  C024  F079         	movff	?i2___ftneg,?_asin
 24660  0135DA  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 24661  0135DE  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 24662  0135E2  0012               	return	
 24663  0135E4                     i2l1342:
 24664  0135E4  C079  F018         	movff	asin@x,i2___ftdiv@f2
 24665  0135E8  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 24666  0135EC  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 24667  0135F0  C088  F015         	movff	asin@y,i2___ftdiv@f1
 24668  0135F4  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 24669  0135F8  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 24670  0135FC  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 24671  013600  C015  F08B         	movff	?i2___ftdiv,_asin$3341
 24672  013604  C016  F08C         	movff	?i2___ftdiv+1,_asin$3341+1
 24673  013608  C017  F08D         	movff	?i2___ftdiv+2,_asin$3341+2
 24674  01360C  C08B  F058         	movff	_asin$3341,atan@f
 24675  013610  C08C  F059         	movff	_asin$3341+1,atan@f+1
 24676  013614  C08D  F05A         	movff	_asin$3341+2,atan@f+2
 24677  013618  EC43  F09D         	call	_atan	;wreg free
 24678  01361C  C058  F085         	movff	?_atan,_asin$3342
 24679  013620  C059  F086         	movff	?_atan+1,_asin$3342+1
 24680  013624  C05A  F087         	movff	?_atan+2,_asin$3342+2
 24681  013628  C085  F024         	movff	_asin$3342,i2___ftneg@f1
 24682  01362C  C086  F025         	movff	_asin$3342+1,i2___ftneg@f1+1
 24683  013630  C087  F026         	movff	_asin$3342+2,i2___ftneg@f1+2
 24684  013634  EC8E  F0B1         	call	i2___ftneg	;wreg free
 24685  013638  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24686  01363C  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24687  013640  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24688  013644  0E10               	movlw	16
 24689  013646  6E43               	movwf	i2___ftadd@f2,c
 24690  013648  0EC9               	movlw	201
 24691  01364A  6E44               	movwf	i2___ftadd@f2+1,c
 24692  01364C  0E3F               	movlw	63
 24693  01364E  6E45               	movwf	i2___ftadd@f2+2,c
 24694  013650  ECFB  F09E         	call	i2___ftadd	;wreg free
 24695  013654  C040  F079         	movff	?i2___ftadd,?_asin
 24696  013658  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 24697  01365C  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 24698  013660  0012               	return	
 24699  013662                     __end_of_asin:
 24700                           	opt stack 0
 24701                           tosu	equ	0xFFF
 24702                           tosh	equ	0xFFE
 24703                           tosl	equ	0xFFD
 24704                           pclatu	equ	0xFFB
 24705                           pclath	equ	0xFFA
 24706                           tblptru	equ	0xFF8
 24707                           tblptrh	equ	0xFF7
 24708                           tblptrl	equ	0xFF6
 24709                           tablat	equ	0xFF5
 24710                           prodh	equ	0xFF4
 24711                           prodl	equ	0xFF3
 24712                           intcon	equ	0xFF2
 24713                           postinc0	equ	0xFEE
 24714                           fsr0h	equ	0xFEA
 24715                           fsr0l	equ	0xFE9
 24716                           wreg	equ	0xFE8
 24717                           indf1	equ	0xFE7
 24718                           postdec1	equ	0xFE5
 24719                           fsr1h	equ	0xFE2
 24720                           fsr1l	equ	0xFE1
 24721                           bsr	equ	0xFE0
 24722                           indf2	equ	0xFDF
 24723                           postinc2	equ	0xFDE
 24724                           postdec2	equ	0xFDD
 24725                           fsr2h	equ	0xFDA
 24726                           fsr2l	equ	0xFD9
 24727                           status	equ	0xFD8
 24728                           
 24729 ;; *************** function _sqrt *****************
 24730 ;; Defined at:
 24731 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 24732 ;; Parameters:    Size  Location     Type
 24733 ;;  a               3    6[BANK0 ] void 
 24734 ;; Auto vars:     Size  Location     Type
 24735 ;;  x               3   22[BANK0 ] void 
 24736 ;;  q               3   19[BANK0 ] void 
 24737 ;;  z               3   16[BANK0 ] void 
 24738 ;;  og              3   12[BANK0 ] void 
 24739 ;;  i               1   15[BANK0 ] unsigned char 
 24740 ;; Return value:  Size  Location     Type
 24741 ;;                  3    6[BANK0 ] unsigned char 
 24742 ;; Registers used:
 24743 ;;		wreg, status,2, status,0, cstack
 24744 ;; Tracked objects:
 24745 ;;		On entry : 0/0
 24746 ;;		On exit  : 0/0
 24747 ;;		Unchanged: 0/0
 24748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24750 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24751 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24752 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24753 ;;Total ram usage:       19 bytes
 24754 ;; Hardware stack levels used:    1
 24755 ;; Hardware stack levels required when called:    3
 24756 ;; This function calls:
 24757 ;;		i2___ftge
 24758 ;;		i2___ftmul
 24759 ;;		i2___ftsub
 24760 ;; This function is called by:
 24761 ;;		_peakToRMS
 24762 ;;		_asin
 24763 ;; This function uses a non-reentrant model
 24764 ;;
 24765                           
 24766                           	psect	text92
 24767  013FA2                     __ptext92:
 24768                           	opt stack 0
 24769  013FA2                     _sqrt:
 24770                           	opt stack 11
 24771                           
 24772                           ;incstack = 0
 24773  013FA2  0E00               	movlw	0
 24774  013FA4  6E2A               	movwf	i2___ftge@ff1,c
 24775  013FA6  0E00               	movlw	0
 24776  013FA8  6E2B               	movwf	i2___ftge@ff1+1,c
 24777  013FAA  0E00               	movlw	0
 24778  013FAC  6E2C               	movwf	i2___ftge@ff1+2,c
 24779  013FAE  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 24780  013FB2  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 24781  013FB6  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 24782  013FBA  ECEA  F0A9         	call	i2___ftge	;wreg free
 24783  013FBE  A0D8               	btfss	status,0,c
 24784  013FC0  D00E               	goto	i2l1867
 24785  013FC2  0100               	movlb	0	; () banked
 24786  013FC4  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 24787  013FC6  D004               	goto	i2l1868
 24788                           
 24789                           ; BSR set to: 0
 24790  013FC8  0E00               	movlw	0
 24791  013FCA  6FE7               	movwf	(_errno+1)& (0+255),b
 24792  013FCC  0E21               	movlw	33
 24793  013FCE  6FE6               	movwf	_errno& (0+255),b
 24794  013FD0                     i2l1868:
 24795                           
 24796                           ; BSR set to: 0
 24797  013FD0  0E00               	movlw	0
 24798  013FD2  6F66               	movwf	?_sqrt& (0+255),b
 24799  013FD4  0E00               	movlw	0
 24800  013FD6  6F67               	movwf	(?_sqrt+1)& (0+255),b
 24801  013FD8  0E00               	movlw	0
 24802  013FDA  6F68               	movwf	(?_sqrt+2)& (0+255),b
 24803                           
 24804                           ; BSR set to: 0
 24805  013FDC  0012               	return	
 24806  013FDE                     i2l1867:
 24807  013FDE  C066  F070         	movff	sqrt@a,sqrt@z
 24808  013FE2  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 24809  013FE6  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 24810  013FEA  C066  F069         	movff	sqrt@a,??_sqrt
 24811  013FEE  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 24812  013FF2  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 24813  013FF6  0100               	movlb	0	; () banked
 24814  013FF8  1F69               	comf	??_sqrt& (0+255),f,b
 24815  013FFA  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 24816  013FFC  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 24817  013FFE  2B69               	incf	??_sqrt& (0+255),f,b
 24818  014000  0E00               	movlw	0
 24819  014002  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 24820  014004  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 24821  014006  0EC8               	movlw	200
 24822  014008  2569               	addwf	??_sqrt& (0+255),w,b
 24823  01400A  6F76               	movwf	sqrt@x& (0+255),b
 24824  01400C  0E6E               	movlw	110
 24825  01400E  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 24826  014010  6F77               	movwf	(sqrt@x+1)& (0+255),b
 24827  014012  0EBE               	movlw	190
 24828  014014  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 24829  014016  6F78               	movwf	(sqrt@x+2)& (0+255),b
 24830                           
 24831                           ; BSR set to: 0
 24832  014018  90D8               	bcf	status,0,c
 24833  01401A  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 24834  01401C  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 24835  01401E  3376               	rrcf	sqrt@x& (0+255),f,b
 24836                           
 24837                           ; BSR set to: 0
 24838  014020  0E00               	movlw	0
 24839  014022  5F70               	subwf	sqrt@z& (0+255),f,b
 24840  014024  0E80               	movlw	128
 24841  014026  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 24842  014028  0E00               	movlw	0
 24843  01402A  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 24844                           
 24845                           ; BSR set to: 0
 24846  01402C  0E04               	movlw	4
 24847  01402E  6F6F               	movwf	sqrt@i& (0+255),b
 24848  014030                     
 24849                           ; BSR set to: 0
 24850                           
 24851                           ; BSR set to: 0
 24852  014030  C076  F06C         	movff	sqrt@x,sqrt@og
 24853  014034  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 24854  014038  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 24855                           
 24856                           ; BSR set to: 0
 24857  01403C  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24858  014040  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24859  014044  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24860  014048  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 24861  01404C  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 24862  014050  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 24863  014054  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24864  014058  C027  F073         	movff	?i2___ftmul,sqrt@q
 24865  01405C  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24866  014060  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24867  014064  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 24868  014068  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 24869  01406C  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 24870  014070  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 24871  014074  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 24872  014078  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 24873  01407C  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24874  014080  C027  F073         	movff	?i2___ftmul,sqrt@q
 24875  014084  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24876  014088  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24877  01408C  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 24878  014090  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 24879  014094  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 24880  014098  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 24881  01409C  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 24882  0140A0  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 24883  0140A4  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24884  0140A8  C027  F073         	movff	?i2___ftmul,sqrt@q
 24885  0140AC  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24886  0140B0  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24887  0140B4  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24888  0140B8  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24889  0140BC  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24890  0140C0  0E00               	movlw	0
 24891  0140C2  6E2A               	movwf	i2___ftmul@f2,c
 24892  0140C4  0EC0               	movlw	192
 24893  0140C6  6E2B               	movwf	i2___ftmul@f2+1,c
 24894  0140C8  0E3F               	movlw	63
 24895  0140CA  6E2C               	movwf	i2___ftmul@f2+2,c
 24896  0140CC  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24897  0140D0  C027  F076         	movff	?i2___ftmul,sqrt@x
 24898  0140D4  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 24899  0140D8  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 24900  0140DC  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 24901  0140E0  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 24902  0140E4  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 24903  0140E8  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 24904  0140EC  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 24905  0140F0  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 24906  0140F4  EC0B  F0B0         	call	i2___ftsub	;wreg free
 24907  0140F8  C060  F076         	movff	?i2___ftsub,sqrt@x
 24908  0140FC  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 24909  014100  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 24910  014104  0100               	movlb	0	; () banked
 24911  014106  2F6F               	decfsz	sqrt@i& (0+255),f,b
 24912  014108  D793               	goto	i2l1870
 24913                           
 24914                           ; BSR set to: 0
 24915                           
 24916                           ; BSR set to: 0
 24917  01410A  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24918  01410E  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24919  014112  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24920  014116  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 24921  01411A  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 24922  01411E  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 24923  014122  ECF5  F0A4         	call	i2___ftmul	;wreg free
 24924  014126  C027  F066         	movff	?i2___ftmul,?_sqrt
 24925  01412A  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 24926  01412E  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 24927  014132  0012               	return	
 24928  014134                     __end_of_sqrt:
 24929                           	opt stack 0
 24930                           tosu	equ	0xFFF
 24931                           tosh	equ	0xFFE
 24932                           tosl	equ	0xFFD
 24933                           pclatu	equ	0xFFB
 24934                           pclath	equ	0xFFA
 24935                           tblptru	equ	0xFF8
 24936                           tblptrh	equ	0xFF7
 24937                           tblptrl	equ	0xFF6
 24938                           tablat	equ	0xFF5
 24939                           prodh	equ	0xFF4
 24940                           prodl	equ	0xFF3
 24941                           intcon	equ	0xFF2
 24942                           postinc0	equ	0xFEE
 24943                           fsr0h	equ	0xFEA
 24944                           fsr0l	equ	0xFE9
 24945                           wreg	equ	0xFE8
 24946                           indf1	equ	0xFE7
 24947                           postdec1	equ	0xFE5
 24948                           fsr1h	equ	0xFE2
 24949                           fsr1l	equ	0xFE1
 24950                           bsr	equ	0xFE0
 24951                           indf2	equ	0xFDF
 24952                           postinc2	equ	0xFDE
 24953                           postdec2	equ	0xFDD
 24954                           fsr2h	equ	0xFDA
 24955                           fsr2l	equ	0xFD9
 24956                           status	equ	0xFD8
 24957                           
 24958 ;; *************** function _atan *****************
 24959 ;; Defined at:
 24960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 24961 ;; Parameters:    Size  Location     Type
 24962 ;;  f               3   87[COMRAM] unsigned char 
 24963 ;; Auto vars:     Size  Location     Type
 24964 ;;  val             3   10[BANK0 ] unsigned char 
 24965 ;;  val_squared     3    7[BANK0 ] unsigned char 
 24966 ;;  x               3    3[BANK0 ] unsigned char 
 24967 ;;  y               3    0[BANK0 ] unsigned char 
 24968 ;;  recip           1    6[BANK0 ] unsigned char 
 24969 ;; Return value:  Size  Location     Type
 24970 ;;                  3   87[COMRAM] unsigned char 
 24971 ;; Registers used:
 24972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24973 ;; Tracked objects:
 24974 ;;		On entry : 0/0
 24975 ;;		On exit  : 0/0
 24976 ;;		Unchanged: 0/0
 24977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24978 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24979 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24981 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24982 ;;Total ram usage:       16 bytes
 24983 ;; Hardware stack levels used:    1
 24984 ;; Hardware stack levels required when called:    3
 24985 ;; This function calls:
 24986 ;;		_eval_poly
 24987 ;;		_fabs
 24988 ;;		i2___ftadd
 24989 ;;		i2___ftdiv
 24990 ;;		i2___ftge
 24991 ;;		i2___ftmul
 24992 ;;		i2___ftneg
 24993 ;; This function is called by:
 24994 ;;		_asin
 24995 ;; This function uses a non-reentrant model
 24996 ;;
 24997                           
 24998                           	psect	text93
 24999  013A86                     __ptext93:
 25000                           	opt stack 0
 25001  013A86                     _atan:
 25002                           	opt stack 9
 25003                           
 25004                           ;incstack = 0
 25005  013A86  C058  F027         	movff	atan@f,fabs@d
 25006  013A8A  C059  F028         	movff	atan@f+1,fabs@d+1
 25007  013A8E  C05A  F029         	movff	atan@f+2,fabs@d+2
 25008  013A92  ECEC  F0B0         	call	_fabs	;wreg free
 25009  013A96  C027  F06A         	movff	?_fabs,atan@val
 25010  013A9A  C028  F06B         	movff	?_fabs+1,atan@val+1
 25011  013A9E  C029  F06C         	movff	?_fabs+2,atan@val+2
 25012  013AA2  0100               	movlb	0	; () banked
 25013  013AA4  516A               	movf	atan@val& (0+255),w,b
 25014  013AA6  116B               	iorwf	(atan@val+1)& (0+255),w,b
 25015  013AA8  116C               	iorwf	(atan@val+2)& (0+255),w,b
 25016  013AAA  A4D8               	btfss	status,2,c
 25017  013AAC  D007               	goto	i2l1358
 25018                           
 25019                           ; BSR set to: 0
 25020  013AAE  0E00               	movlw	0
 25021  013AB0  6E58               	movwf	?_atan,c
 25022  013AB2  0E00               	movlw	0
 25023  013AB4  6E59               	movwf	?_atan+1,c
 25024  013AB6  0E00               	movlw	0
 25025  013AB8  6E5A               	movwf	?_atan+2,c
 25026                           
 25027                           ; BSR set to: 0
 25028  013ABA  0012               	return	
 25029  013ABC                     i2l1358:
 25030                           
 25031                           ; BSR set to: 0
 25032                           
 25033                           ; BSR set to: 0
 25034  013ABC  0E00               	movlw	0
 25035  013ABE  6E2A               	movwf	i2___ftge@ff1,c
 25036  013AC0  0E80               	movlw	128
 25037  013AC2  6E2B               	movwf	i2___ftge@ff1+1,c
 25038  013AC4  0E3F               	movlw	63
 25039  013AC6  6E2C               	movwf	i2___ftge@ff1+2,c
 25040  013AC8  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 25041  013ACC  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 25042  013AD0  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 25043  013AD4  ECEA  F0A9         	call	i2___ftge	;wreg free
 25044  013AD8  B0D8               	btfsc	status,0,c
 25045  013ADA  D002               	goto	i2u1522_40
 25046  013ADC  0E01               	movlw	1
 25047  013ADE  D001               	goto	i2u1523_40
 25048  013AE0                     i2u1522_40:
 25049  013AE0  0E00               	movlw	0
 25050  013AE2                     i2u1523_40:
 25051  013AE2  0100               	movlb	0	; () banked
 25052  013AE4  6F66               	movwf	atan@recip& (0+255),b
 25053  013AE6  5166               	movf	atan@recip& (0+255),w,b
 25054  013AE8  B4D8               	btfsc	status,2,c
 25055  013AEA  D014               	goto	i2l1360
 25056                           
 25057                           ; BSR set to: 0
 25058  013AEC  0E00               	movlw	0
 25059  013AEE  6E15               	movwf	i2___ftdiv@f1,c
 25060  013AF0  0E80               	movlw	128
 25061  013AF2  6E16               	movwf	i2___ftdiv@f1+1,c
 25062  013AF4  0E3F               	movlw	63
 25063  013AF6  6E17               	movwf	i2___ftdiv@f1+2,c
 25064  013AF8  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 25065  013AFC  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 25066  013B00  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 25067  013B04  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 25068  013B08  C015  F06A         	movff	?i2___ftdiv,atan@val
 25069  013B0C  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 25070  013B10  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 25071  013B14                     i2l1360:
 25072  013B14  C06A  F027         	movff	atan@val,i2___ftmul@f1
 25073  013B18  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 25074  013B1C  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 25075  013B20  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 25076  013B24  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 25077  013B28  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 25078  013B2C  ECF5  F0A4         	call	i2___ftmul	;wreg free
 25079  013B30  C027  F067         	movff	?i2___ftmul,atan@val_squared
 25080  013B34  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 25081  013B38  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 25082  013B3C  C067  F04C         	movff	atan@val_squared,eval_poly@x
 25083  013B40  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 25084  013B44  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 25085  013B48  0E30               	movlw	low atan@coeff_b
 25086  013B4A  6E4F               	movwf	eval_poly@d,c
 25087  013B4C  0EF2               	movlw	high atan@coeff_b
 25088  013B4E  6E50               	movwf	eval_poly@d+1,c
 25089  013B50  0E00               	movlw	0
 25090  013B52  6E52               	movwf	eval_poly@n+1,c
 25091  013B54  0E04               	movlw	4
 25092  013B56  6E51               	movwf	eval_poly@n,c
 25093  013B58  ECC5  F0A6         	call	_eval_poly	;wreg free
 25094  013B5C  C04C  F060         	movff	?_eval_poly,atan@y
 25095  013B60  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 25096  013B64  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 25097  013B68  C067  F04C         	movff	atan@val_squared,eval_poly@x
 25098  013B6C  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 25099  013B70  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 25100  013B74  0E0F               	movlw	low atan@coeff_a
 25101  013B76  6E4F               	movwf	eval_poly@d,c
 25102  013B78  0EF2               	movlw	high atan@coeff_a
 25103  013B7A  6E50               	movwf	eval_poly@d+1,c
 25104  013B7C  0E00               	movlw	0
 25105  013B7E  6E52               	movwf	eval_poly@n+1,c
 25106  013B80  0E05               	movlw	5
 25107  013B82  6E51               	movwf	eval_poly@n,c
 25108  013B84  ECC5  F0A6         	call	_eval_poly	;wreg free
 25109  013B88  C04C  F063         	movff	?_eval_poly,atan@x
 25110  013B8C  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 25111  013B90  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 25112  013B94  C06A  F027         	movff	atan@val,i2___ftmul@f1
 25113  013B98  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 25114  013B9C  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 25115  013BA0  C060  F018         	movff	atan@y,i2___ftdiv@f2
 25116  013BA4  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 25117  013BA8  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 25118  013BAC  C063  F015         	movff	atan@x,i2___ftdiv@f1
 25119  013BB0  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 25120  013BB4  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 25121  013BB8  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 25122  013BBC  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 25123  013BC0  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 25124  013BC4  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 25125  013BC8  ECF5  F0A4         	call	i2___ftmul	;wreg free
 25126  013BCC  C027  F06A         	movff	?i2___ftmul,atan@val
 25127  013BD0  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 25128  013BD4  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 25129  013BD8  0100               	movlb	0	; () banked
 25130  013BDA  5166               	movf	atan@recip& (0+255),w,b
 25131  013BDC  B4D8               	btfsc	status,2,c
 25132  013BDE  D01C               	goto	i2l1361
 25133                           
 25134                           ; BSR set to: 0
 25135  013BE0  C06A  F024         	movff	atan@val,i2___ftneg@f1
 25136  013BE4  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 25137  013BE8  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 25138  013BEC  EC8E  F0B1         	call	i2___ftneg	;wreg free
 25139  013BF0  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25140  013BF4  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25141  013BF8  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25142  013BFC  0E10               	movlw	16
 25143  013BFE  6E43               	movwf	i2___ftadd@f2,c
 25144  013C00  0EC9               	movlw	201
 25145  013C02  6E44               	movwf	i2___ftadd@f2+1,c
 25146  013C04  0E3F               	movlw	63
 25147  013C06  6E45               	movwf	i2___ftadd@f2+2,c
 25148  013C08  ECFB  F09E         	call	i2___ftadd	;wreg free
 25149  013C0C  C040  F06A         	movff	?i2___ftadd,atan@val
 25150  013C10  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 25151  013C14  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 25152  013C18                     i2l1361:
 25153  013C18  BE5A               	btfsc	atan@f+2,7,c
 25154  013C1A  D007               	goto	i2l1363
 25155  013C1C  C06A  F058         	movff	atan@val,?_atan
 25156  013C20  C06B  F059         	movff	atan@val+1,?_atan+1
 25157  013C24  C06C  F05A         	movff	atan@val+2,?_atan+2
 25158  013C28  0012               	return	
 25159  013C2A                     i2l1363:
 25160  013C2A  C06A  F024         	movff	atan@val,i2___ftneg@f1
 25161  013C2E  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 25162  013C32  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 25163  013C36  EC8E  F0B1         	call	i2___ftneg	;wreg free
 25164  013C3A  C024  F058         	movff	?i2___ftneg,?_atan
 25165  013C3E  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 25166  013C42  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 25167  013C46  0012               	return	
 25168  013C48                     __end_of_atan:
 25169                           	opt stack 0
 25170                           tosu	equ	0xFFF
 25171                           tosh	equ	0xFFE
 25172                           tosl	equ	0xFFD
 25173                           pclatu	equ	0xFFB
 25174                           pclath	equ	0xFFA
 25175                           tblptru	equ	0xFF8
 25176                           tblptrh	equ	0xFF7
 25177                           tblptrl	equ	0xFF6
 25178                           tablat	equ	0xFF5
 25179                           prodh	equ	0xFF4
 25180                           prodl	equ	0xFF3
 25181                           intcon	equ	0xFF2
 25182                           postinc0	equ	0xFEE
 25183                           fsr0h	equ	0xFEA
 25184                           fsr0l	equ	0xFE9
 25185                           wreg	equ	0xFE8
 25186                           indf1	equ	0xFE7
 25187                           postdec1	equ	0xFE5
 25188                           fsr1h	equ	0xFE2
 25189                           fsr1l	equ	0xFE1
 25190                           bsr	equ	0xFE0
 25191                           indf2	equ	0xFDF
 25192                           postinc2	equ	0xFDE
 25193                           postdec2	equ	0xFDD
 25194                           fsr2h	equ	0xFDA
 25195                           fsr2l	equ	0xFD9
 25196                           status	equ	0xFD8
 25197                           
 25198 ;; *************** function _fabs *****************
 25199 ;; Defined at:
 25200 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;  d               3   38[COMRAM] unsigned char 
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;		None
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  3   38[COMRAM] unsigned char 
 25207 ;; Registers used:
 25208 ;;		wreg, status,2, status,0, cstack
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/0
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25218 ;;Total ram usage:        3 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; Hardware stack levels required when called:    1
 25221 ;; This function calls:
 25222 ;;		i2___ftneg
 25223 ;; This function is called by:
 25224 ;;		_asin
 25225 ;;		_atan
 25226 ;; This function uses a non-reentrant model
 25227 ;;
 25228                           
 25229                           	psect	text94
 25230  0161D8                     __ptext94:
 25231                           	opt stack 0
 25232  0161D8                     _fabs:
 25233                           	opt stack 11
 25234                           
 25235                           ;incstack = 0
 25236  0161D8  AE29               	btfss	fabs@d+2,7,c
 25237  0161DA  D00F               	goto	i2l1455
 25238  0161DC  C027  F024         	movff	fabs@d,i2___ftneg@f1
 25239  0161E0  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 25240  0161E4  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 25241  0161E8  EC8E  F0B1         	call	i2___ftneg	;wreg free
 25242  0161EC  C024  F027         	movff	?i2___ftneg,?_fabs
 25243  0161F0  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 25244  0161F4  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 25245  0161F8  0012               	return	
 25246  0161FA                     i2l1455:
 25247  0161FA  C027  F027         	movff	fabs@d,?_fabs
 25248  0161FE  C028  F028         	movff	fabs@d+1,?_fabs+1
 25249  016202  C029  F029         	movff	fabs@d+2,?_fabs+2
 25250  016206  0012               	return		;funcret
 25251  016208                     __end_of_fabs:
 25252                           	opt stack 0
 25253                           tosu	equ	0xFFF
 25254                           tosh	equ	0xFFE
 25255                           tosl	equ	0xFFD
 25256                           pclatu	equ	0xFFB
 25257                           pclath	equ	0xFFA
 25258                           tblptru	equ	0xFF8
 25259                           tblptrh	equ	0xFF7
 25260                           tblptrl	equ	0xFF6
 25261                           tablat	equ	0xFF5
 25262                           prodh	equ	0xFF4
 25263                           prodl	equ	0xFF3
 25264                           intcon	equ	0xFF2
 25265                           postinc0	equ	0xFEE
 25266                           fsr0h	equ	0xFEA
 25267                           fsr0l	equ	0xFE9
 25268                           wreg	equ	0xFE8
 25269                           indf1	equ	0xFE7
 25270                           postdec1	equ	0xFE5
 25271                           fsr1h	equ	0xFE2
 25272                           fsr1l	equ	0xFE1
 25273                           bsr	equ	0xFE0
 25274                           indf2	equ	0xFDF
 25275                           postinc2	equ	0xFDE
 25276                           postdec2	equ	0xFDD
 25277                           fsr2h	equ	0xFDA
 25278                           fsr2l	equ	0xFD9
 25279                           status	equ	0xFD8
 25280                           
 25281 ;; *************** function _currentMeasuredToPeak *****************
 25282 ;; Defined at:
 25283 ;;		line 107 in file "main.c"
 25284 ;; Parameters:    Size  Location     Type
 25285 ;;  Measured        3   19[BANK0 ] unsigned char 
 25286 ;;  Angle           3   22[BANK0 ] unsigned char 
 25287 ;; Auto vars:     Size  Location     Type
 25288 ;;  Peak            3   25[BANK0 ] unsigned char 
 25289 ;; Return value:  Size  Location     Type
 25290 ;;                  3   19[BANK0 ] unsigned char 
 25291 ;; Registers used:
 25292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25293 ;; Tracked objects:
 25294 ;;		On entry : 0/0
 25295 ;;		On exit  : 0/0
 25296 ;;		Unchanged: 0/0
 25297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25298 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25299 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25301 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25302 ;;Total ram usage:        9 bytes
 25303 ;; Hardware stack levels used:    1
 25304 ;; Hardware stack levels required when called:    4
 25305 ;; This function calls:
 25306 ;;		_sin
 25307 ;;		i2___ftdiv
 25308 ;; This function is called by:
 25309 ;;		_ADC_postProcessingCallback
 25310 ;; This function uses a non-reentrant model
 25311 ;;
 25312                           
 25313                           	psect	text95
 25314  015BAA                     __ptext95:
 25315                           	opt stack 0
 25316  015BAA                     _currentMeasuredToPeak:
 25317                           	opt stack 11
 25318                           
 25319                           ;main.c: 110: double Peak = 0.0;
 25320                           
 25321                           ;incstack = 0
 25322  015BAA  0E00               	movlw	0
 25323  015BAC  0100               	movlb	0	; () banked
 25324  015BAE  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 25325  015BB0  0E00               	movlw	0
 25326  015BB2  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 25327  015BB4  0E00               	movlw	0
 25328  015BB6  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 25329                           
 25330                           ; BSR set to: 0
 25331                           ;main.c: 113: Peak = sin(Angle);
 25332  015BB8  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 25333  015BBC  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 25334  015BC0  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 25335  015BC4  EC31  F09B         	call	_sin	;wreg free
 25336  015BC8  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 25337  015BCC  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 25338  015BD0  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 25339                           
 25340                           ;main.c: 114: Peak = Measured / Peak;
 25341  015BD4  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 25342  015BD8  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 25343  015BDC  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 25344  015BE0  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 25345  015BE4  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 25346  015BE8  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 25347  015BEC  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 25348  015BF0  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 25349  015BF4  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 25350  015BF8  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 25351                           
 25352                           ;main.c: 115: return Peak;
 25353  015BFC  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 25354  015C00  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 25355  015C04  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 25356  015C08  0012               	return	
 25357  015C0A                     __end_of_currentMeasuredToPeak:
 25358                           	opt stack 0
 25359                           tosu	equ	0xFFF
 25360                           tosh	equ	0xFFE
 25361                           tosl	equ	0xFFD
 25362                           pclatu	equ	0xFFB
 25363                           pclath	equ	0xFFA
 25364                           tblptru	equ	0xFF8
 25365                           tblptrh	equ	0xFF7
 25366                           tblptrl	equ	0xFF6
 25367                           tablat	equ	0xFF5
 25368                           prodh	equ	0xFF4
 25369                           prodl	equ	0xFF3
 25370                           intcon	equ	0xFF2
 25371                           postinc0	equ	0xFEE
 25372                           fsr0h	equ	0xFEA
 25373                           fsr0l	equ	0xFE9
 25374                           wreg	equ	0xFE8
 25375                           indf1	equ	0xFE7
 25376                           postdec1	equ	0xFE5
 25377                           fsr1h	equ	0xFE2
 25378                           fsr1l	equ	0xFE1
 25379                           bsr	equ	0xFE0
 25380                           indf2	equ	0xFDF
 25381                           postinc2	equ	0xFDE
 25382                           postdec2	equ	0xFDD
 25383                           fsr2h	equ	0xFDA
 25384                           fsr2l	equ	0xFD9
 25385                           status	equ	0xFD8
 25386                           
 25387 ;; *************** function _sin *****************
 25388 ;; Defined at:
 25389 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 25390 ;; Parameters:    Size  Location     Type
 25391 ;;  f               3    6[BANK0 ] unsigned char 
 25392 ;; Auto vars:     Size  Location     Type
 25393 ;;  x2              3   15[BANK0 ] unsigned char 
 25394 ;;  y               3    9[BANK0 ] unsigned char 
 25395 ;;  sgn             1   18[BANK0 ] unsigned char 
 25396 ;; Return value:  Size  Location     Type
 25397 ;;                  3    6[BANK0 ] unsigned char 
 25398 ;; Registers used:
 25399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25400 ;; Tracked objects:
 25401 ;;		On entry : 0/0
 25402 ;;		On exit  : 0/0
 25403 ;;		Unchanged: 0/0
 25404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25405 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25406 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25408 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25409 ;;Total ram usage:       13 bytes
 25410 ;; Hardware stack levels used:    1
 25411 ;; Hardware stack levels required when called:    3
 25412 ;; This function calls:
 25413 ;;		_eval_poly
 25414 ;;		_floor
 25415 ;;		i2___ftadd
 25416 ;;		i2___ftdiv
 25417 ;;		i2___ftge
 25418 ;;		i2___ftmul
 25419 ;;		i2___ftneg
 25420 ;;		i2___ftsub
 25421 ;; This function is called by:
 25422 ;;		_peakToRMS
 25423 ;;		_currentMeasuredToPeak
 25424 ;; This function uses a non-reentrant model
 25425 ;;
 25426                           
 25427                           	psect	text96
 25428  013662                     __ptext96:
 25429                           	opt stack 0
 25430  013662                     _sin:
 25431                           	opt stack 11
 25432                           
 25433                           ;incstack = 0
 25434  013662  0E00               	movlw	0
 25435  013664  0100               	movlb	0	; () banked
 25436  013666  6F72               	movwf	sin@sgn& (0+255),b
 25437                           
 25438                           ; BSR set to: 0
 25439  013668  AF68               	btfss	(sin@f+2)& (0+255),7,b
 25440  01366A  D011               	goto	i2l1738
 25441                           
 25442                           ; BSR set to: 0
 25443  01366C  C066  F024         	movff	sin@f,i2___ftneg@f1
 25444  013670  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 25445  013674  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 25446  013678  EC8E  F0B1         	call	i2___ftneg	;wreg free
 25447  01367C  C024  F066         	movff	?i2___ftneg,sin@f
 25448  013680  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 25449  013684  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 25450  013688  0E01               	movlw	1
 25451  01368A  0100               	movlb	0	; () banked
 25452  01368C  6F72               	movwf	sin@sgn& (0+255),b
 25453  01368E                     i2l1738:
 25454                           
 25455                           ; BSR set to: 0
 25456                           
 25457                           ; BSR set to: 0
 25458  01368E  C066  F027         	movff	sin@f,i2___ftmul@f1
 25459  013692  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25460  013696  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25461  01369A  0EFA               	movlw	250
 25462  01369C  6E2A               	movwf	i2___ftmul@f2,c
 25463  01369E  0E22               	movlw	34
 25464  0136A0  6E2B               	movwf	i2___ftmul@f2+1,c
 25465  0136A2  0E3E               	movlw	62
 25466  0136A4  6E2C               	movwf	i2___ftmul@f2+2,c
 25467  0136A6  ECF5  F0A4         	call	i2___ftmul	;wreg free
 25468  0136AA  C027  F066         	movff	?i2___ftmul,sin@f
 25469  0136AE  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 25470  0136B2  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 25471  0136B6  C066  F060         	movff	sin@f,i2___ftsub@f1
 25472  0136BA  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 25473  0136BE  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 25474  0136C2  C066  F056         	movff	sin@f,floor@x
 25475  0136C6  C067  F057         	movff	sin@f+1,floor@x+1
 25476  0136CA  C068  F058         	movff	sin@f+2,floor@x+2
 25477  0136CE  EC56  F0A6         	call	_floor	;wreg free
 25478  0136D2  C056  F063         	movff	?_floor,i2___ftsub@f2
 25479  0136D6  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 25480  0136DA  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 25481  0136DE  EC0B  F0B0         	call	i2___ftsub	;wreg free
 25482  0136E2  C060  F066         	movff	?i2___ftsub,sin@f
 25483  0136E6  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 25484  0136EA  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 25485  0136EE  C066  F027         	movff	sin@f,i2___ftmul@f1
 25486  0136F2  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25487  0136F6  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25488  0136FA  0E00               	movlw	0
 25489  0136FC  6E2A               	movwf	i2___ftmul@f2,c
 25490  0136FE  0E80               	movlw	128
 25491  013700  6E2B               	movwf	i2___ftmul@f2+1,c
 25492  013702  0E40               	movlw	64
 25493  013704  6E2C               	movwf	i2___ftmul@f2+2,c
 25494  013706  ECF5  F0A4         	call	i2___ftmul	;wreg free
 25495  01370A  C027  F066         	movff	?i2___ftmul,sin@f
 25496  01370E  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 25497  013712  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 25498  013716  0E00               	movlw	0
 25499  013718  6E2A               	movwf	i2___ftge@ff1,c
 25500  01371A  0E00               	movlw	0
 25501  01371C  6E2B               	movwf	i2___ftge@ff1+1,c
 25502  01371E  0E40               	movlw	64
 25503  013720  6E2C               	movwf	i2___ftge@ff1+2,c
 25504  013722  C066  F02D         	movff	sin@f,i2___ftge@ff2
 25505  013726  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 25506  01372A  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 25507  01372E  ECEA  F0A9         	call	i2___ftge	;wreg free
 25508  013732  B0D8               	btfsc	status,0,c
 25509  013734  D01D               	goto	i2l1739
 25510  013736  C066  F060         	movff	sin@f,i2___ftsub@f1
 25511  01373A  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 25512  01373E  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 25513  013742  0E00               	movlw	0
 25514  013744  0100               	movlb	0	; () banked
 25515  013746  6F63               	movwf	i2___ftsub@f2& (0+255),b
 25516  013748  0E00               	movlw	0
 25517  01374A  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 25518  01374C  0E40               	movlw	64
 25519  01374E  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 25520  013750  EC0B  F0B0         	call	i2___ftsub	;wreg free
 25521  013754  C060  F066         	movff	?i2___ftsub,sin@f
 25522  013758  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 25523  01375C  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 25524  013760  0100               	movlb	0	; () banked
 25525  013762  5172               	movf	sin@sgn& (0+255),w,b
 25526  013764  A4D8               	btfss	status,2,c
 25527  013766  D002               	goto	i2u1546_40
 25528  013768  0E01               	movlw	1
 25529  01376A  D001               	goto	i2u1547_40
 25530  01376C                     i2u1546_40:
 25531  01376C  0E00               	movlw	0
 25532  01376E                     i2u1547_40:
 25533  01376E  6F72               	movwf	sin@sgn& (0+255),b
 25534  013770                     i2l1739:
 25535                           
 25536                           ; BSR set to: 0
 25537  013770  0E00               	movlw	0
 25538  013772  6E2A               	movwf	i2___ftge@ff1,c
 25539  013774  0E80               	movlw	128
 25540  013776  6E2B               	movwf	i2___ftge@ff1+1,c
 25541  013778  0E3F               	movlw	63
 25542  01377A  6E2C               	movwf	i2___ftge@ff1+2,c
 25543  01377C  C066  F02D         	movff	sin@f,i2___ftge@ff2
 25544  013780  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 25545  013784  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 25546  013788  ECEA  F0A9         	call	i2___ftge	;wreg free
 25547  01378C  B0D8               	btfsc	status,0,c
 25548  01378E  D01C               	goto	i2l1740
 25549  013790  C066  F024         	movff	sin@f,i2___ftneg@f1
 25550  013794  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 25551  013798  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 25552  01379C  EC8E  F0B1         	call	i2___ftneg	;wreg free
 25553  0137A0  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25554  0137A4  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25555  0137A8  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25556  0137AC  0E00               	movlw	0
 25557  0137AE  6E43               	movwf	i2___ftadd@f2,c
 25558  0137B0  0E00               	movlw	0
 25559  0137B2  6E44               	movwf	i2___ftadd@f2+1,c
 25560  0137B4  0E40               	movlw	64
 25561  0137B6  6E45               	movwf	i2___ftadd@f2+2,c
 25562  0137B8  ECFB  F09E         	call	i2___ftadd	;wreg free
 25563  0137BC  C040  F066         	movff	?i2___ftadd,sin@f
 25564  0137C0  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 25565  0137C4  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 25566  0137C8                     i2l1740:
 25567  0137C8  C066  F027         	movff	sin@f,i2___ftmul@f1
 25568  0137CC  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25569  0137D0  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25570  0137D4  C066  F02A         	movff	sin@f,i2___ftmul@f2
 25571  0137D8  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 25572  0137DC  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 25573  0137E0  ECF5  F0A4         	call	i2___ftmul	;wreg free
 25574  0137E4  C027  F06F         	movff	?i2___ftmul,sin@x2
 25575  0137E8  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 25576  0137EC  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 25577  0137F0  C06F  F04C         	movff	sin@x2,eval_poly@x
 25578  0137F4  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 25579  0137F8  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 25580  0137FC  0E3F               	movlw	low sin@coeff_b
 25581  0137FE  6E4F               	movwf	eval_poly@d,c
 25582  013800  0EF2               	movlw	high sin@coeff_b
 25583  013802  6E50               	movwf	eval_poly@d+1,c
 25584  013804  0E00               	movlw	0
 25585  013806  6E52               	movwf	eval_poly@n+1,c
 25586  013808  0E03               	movlw	3
 25587  01380A  6E51               	movwf	eval_poly@n,c
 25588  01380C  ECC5  F0A6         	call	_eval_poly	;wreg free
 25589  013810  C04C  F069         	movff	?_eval_poly,sin@y
 25590  013814  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 25591  013818  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 25592  01381C  C069  F018         	movff	sin@y,i2___ftdiv@f2
 25593  013820  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 25594  013824  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 25595  013828  0E00               	movlw	0
 25596  01382A  6E52               	movwf	eval_poly@n+1,c
 25597  01382C  0E04               	movlw	4
 25598  01382E  6E51               	movwf	eval_poly@n,c
 25599  013830  0E21               	movlw	low sin@coeff_a
 25600  013832  6E4F               	movwf	eval_poly@d,c
 25601  013834  0EF2               	movlw	high sin@coeff_a
 25602  013836  6E50               	movwf	eval_poly@d+1,c
 25603  013838  C06F  F04C         	movff	sin@x2,eval_poly@x
 25604  01383C  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 25605  013840  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 25606  013844  ECC5  F0A6         	call	_eval_poly	;wreg free
 25607  013848  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 25608  01384C  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 25609  013850  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 25610  013854  ECE3  F0A5         	call	i2___ftdiv	;wreg free
 25611  013858  C015  F06C         	movff	?i2___ftdiv,_sin$3344
 25612  01385C  C016  F06D         	movff	?i2___ftdiv+1,_sin$3344+1
 25613  013860  C017  F06E         	movff	?i2___ftdiv+2,_sin$3344+2
 25614  013864  C066  F027         	movff	sin@f,i2___ftmul@f1
 25615  013868  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 25616  01386C  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 25617  013870  C06C  F02A         	movff	_sin$3344,i2___ftmul@f2
 25618  013874  C06D  F02B         	movff	_sin$3344+1,i2___ftmul@f2+1
 25619  013878  C06E  F02C         	movff	_sin$3344+2,i2___ftmul@f2+2
 25620  01387C  ECF5  F0A4         	call	i2___ftmul	;wreg free
 25621  013880  C027  F066         	movff	?i2___ftmul,sin@f
 25622  013884  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 25623  013888  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 25624  01388C  0100               	movlb	0	; () banked
 25625  01388E  5172               	movf	sin@sgn& (0+255),w,b
 25626  013890  B4D8               	btfsc	status,2,c
 25627  013892  D00F               	goto	i2l1741
 25628                           
 25629                           ; BSR set to: 0
 25630  013894  C066  F024         	movff	sin@f,i2___ftneg@f1
 25631  013898  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 25632  01389C  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 25633  0138A0  EC8E  F0B1         	call	i2___ftneg	;wreg free
 25634  0138A4  C024  F066         	movff	?i2___ftneg,?_sin
 25635  0138A8  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 25636  0138AC  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 25637  0138B0  0012               	return	
 25638  0138B2                     i2l1741:
 25639                           
 25640                           ; BSR set to: 0
 25641  0138B2  C066  F066         	movff	sin@f,?_sin
 25642  0138B6  C067  F067         	movff	sin@f+1,?_sin+1
 25643  0138BA  C068  F068         	movff	sin@f+2,?_sin+2
 25644  0138BE  0012               	return		;funcret
 25645  0138C0                     __end_of_sin:
 25646                           	opt stack 0
 25647                           tosu	equ	0xFFF
 25648                           tosh	equ	0xFFE
 25649                           tosl	equ	0xFFD
 25650                           pclatu	equ	0xFFB
 25651                           pclath	equ	0xFFA
 25652                           tblptru	equ	0xFF8
 25653                           tblptrh	equ	0xFF7
 25654                           tblptrl	equ	0xFF6
 25655                           tablat	equ	0xFF5
 25656                           prodh	equ	0xFF4
 25657                           prodl	equ	0xFF3
 25658                           intcon	equ	0xFF2
 25659                           postinc0	equ	0xFEE
 25660                           fsr0h	equ	0xFEA
 25661                           fsr0l	equ	0xFE9
 25662                           wreg	equ	0xFE8
 25663                           indf1	equ	0xFE7
 25664                           postdec1	equ	0xFE5
 25665                           fsr1h	equ	0xFE2
 25666                           fsr1l	equ	0xFE1
 25667                           bsr	equ	0xFE0
 25668                           indf2	equ	0xFDF
 25669                           postinc2	equ	0xFDE
 25670                           postdec2	equ	0xFDD
 25671                           fsr2h	equ	0xFDA
 25672                           fsr2l	equ	0xFD9
 25673                           status	equ	0xFD8
 25674                           
 25675 ;; *************** function i2___ftsub *****************
 25676 ;; Defined at:
 25677 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 25678 ;; Parameters:    Size  Location     Type
 25679 ;;  f1              3    0[BANK0 ] float 
 25680 ;;  f2              3    3[BANK0 ] float 
 25681 ;; Auto vars:     Size  Location     Type
 25682 ;;		None
 25683 ;; Return value:  Size  Location     Type
 25684 ;;                  3    0[BANK0 ] float 
 25685 ;; Registers used:
 25686 ;;		wreg, status,2, status,0, cstack
 25687 ;; Tracked objects:
 25688 ;;		On entry : 0/0
 25689 ;;		On exit  : 0/0
 25690 ;;		Unchanged: 0/0
 25691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25692 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25695 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25696 ;;Total ram usage:        6 bytes
 25697 ;; Hardware stack levels used:    1
 25698 ;; Hardware stack levels required when called:    2
 25699 ;; This function calls:
 25700 ;;		i2___ftadd
 25701 ;; This function is called by:
 25702 ;;		_sin
 25703 ;;		_sqrt
 25704 ;;		i2_printf
 25705 ;; This function uses a non-reentrant model
 25706 ;;
 25707                           
 25708                           	psect	text97
 25709  016016                     __ptext97:
 25710                           	opt stack 0
 25711  016016                     i2___ftsub:
 25712                           	opt stack 13
 25713                           
 25714                           ;incstack = 0
 25715  016016  0100               	movlb	0	; () banked
 25716  016018  5163               	movf	i2___ftsub@f2& (0+255),w,b
 25717  01601A  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 25718  01601C  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 25719  01601E  B4D8               	btfsc	status,2,c
 25720  016020  D006               	goto	i2l1604
 25721                           
 25722                           ; BSR set to: 0
 25723  016022  0E00               	movlw	0
 25724  016024  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 25725  016026  0E00               	movlw	0
 25726  016028  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 25727  01602A  0E80               	movlw	128
 25728  01602C  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 25729  01602E                     i2l1604:
 25730                           
 25731                           ; BSR set to: 0
 25732                           
 25733                           ; BSR set to: 0
 25734  01602E  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 25735  016032  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 25736  016036  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 25737  01603A  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 25738  01603E  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 25739  016042  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 25740  016046  ECFB  F09E         	call	i2___ftadd	;wreg free
 25741  01604A  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 25742  01604E  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 25743  016052  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 25744  016056  0012               	return	
 25745  016058                     __end_ofi2___ftsub:
 25746                           	opt stack 0
 25747                           tosu	equ	0xFFF
 25748                           tosh	equ	0xFFE
 25749                           tosl	equ	0xFFD
 25750                           pclatu	equ	0xFFB
 25751                           pclath	equ	0xFFA
 25752                           tblptru	equ	0xFF8
 25753                           tblptrh	equ	0xFF7
 25754                           tblptrl	equ	0xFF6
 25755                           tablat	equ	0xFF5
 25756                           prodh	equ	0xFF4
 25757                           prodl	equ	0xFF3
 25758                           intcon	equ	0xFF2
 25759                           postinc0	equ	0xFEE
 25760                           fsr0h	equ	0xFEA
 25761                           fsr0l	equ	0xFE9
 25762                           wreg	equ	0xFE8
 25763                           indf1	equ	0xFE7
 25764                           postdec1	equ	0xFE5
 25765                           fsr1h	equ	0xFE2
 25766                           fsr1l	equ	0xFE1
 25767                           bsr	equ	0xFE0
 25768                           indf2	equ	0xFDF
 25769                           postinc2	equ	0xFDE
 25770                           postdec2	equ	0xFDD
 25771                           fsr2h	equ	0xFDA
 25772                           fsr2l	equ	0xFD9
 25773                           status	equ	0xFD8
 25774                           
 25775 ;; *************** function i2___ftneg *****************
 25776 ;; Defined at:
 25777 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 25778 ;; Parameters:    Size  Location     Type
 25779 ;;  f1              3   35[COMRAM] float 
 25780 ;; Auto vars:     Size  Location     Type
 25781 ;;		None
 25782 ;; Return value:  Size  Location     Type
 25783 ;;                  3   35[COMRAM] float 
 25784 ;; Registers used:
 25785 ;;		wreg, status,2, status,0
 25786 ;; Tracked objects:
 25787 ;;		On entry : 0/0
 25788 ;;		On exit  : 0/0
 25789 ;;		Unchanged: 0/0
 25790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25791 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25795 ;;Total ram usage:        3 bytes
 25796 ;; Hardware stack levels used:    1
 25797 ;; This function calls:
 25798 ;;		Nothing
 25799 ;; This function is called by:
 25800 ;;		_peakToRMS
 25801 ;;		_ADC_postProcessingCallback
 25802 ;;		_acos
 25803 ;;		_asin
 25804 ;;		_atan
 25805 ;;		_fabs
 25806 ;;		_sin
 25807 ;;		i2_printf
 25808 ;; This function uses a non-reentrant model
 25809 ;;
 25810                           
 25811                           	psect	text98
 25812  01631C                     __ptext98:
 25813                           	opt stack 0
 25814  01631C                     i2___ftneg:
 25815                           	opt stack 15
 25816                           
 25817                           ;incstack = 0
 25818  01631C  5024               	movf	i2___ftneg@f1,w,c
 25819  01631E  1025               	iorwf	i2___ftneg@f1+1,w,c
 25820  016320  1026               	iorwf	i2___ftneg@f1+2,w,c
 25821  016322  B4D8               	btfsc	status,2,c
 25822  016324  D006               	goto	i2l1598
 25823  016326  0E00               	movlw	0
 25824  016328  1A24               	xorwf	i2___ftneg@f1,f,c
 25825  01632A  0E00               	movlw	0
 25826  01632C  1A25               	xorwf	i2___ftneg@f1+1,f,c
 25827  01632E  0E80               	movlw	128
 25828  016330  1A26               	xorwf	i2___ftneg@f1+2,f,c
 25829  016332                     i2l1598:
 25830  016332  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 25831  016336  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 25832  01633A  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 25833  01633E  0012               	return		;funcret
 25834  016340                     __end_ofi2___ftneg:
 25835                           	opt stack 0
 25836                           tosu	equ	0xFFF
 25837                           tosh	equ	0xFFE
 25838                           tosl	equ	0xFFD
 25839                           pclatu	equ	0xFFB
 25840                           pclath	equ	0xFFA
 25841                           tblptru	equ	0xFF8
 25842                           tblptrh	equ	0xFF7
 25843                           tblptrl	equ	0xFF6
 25844                           tablat	equ	0xFF5
 25845                           prodh	equ	0xFF4
 25846                           prodl	equ	0xFF3
 25847                           intcon	equ	0xFF2
 25848                           postinc0	equ	0xFEE
 25849                           fsr0h	equ	0xFEA
 25850                           fsr0l	equ	0xFE9
 25851                           wreg	equ	0xFE8
 25852                           indf1	equ	0xFE7
 25853                           postdec1	equ	0xFE5
 25854                           fsr1h	equ	0xFE2
 25855                           fsr1l	equ	0xFE1
 25856                           bsr	equ	0xFE0
 25857                           indf2	equ	0xFDF
 25858                           postinc2	equ	0xFDE
 25859                           postdec2	equ	0xFDD
 25860                           fsr2h	equ	0xFDA
 25861                           fsr2l	equ	0xFD9
 25862                           status	equ	0xFD8
 25863                           
 25864 ;; *************** function i2___ftdiv *****************
 25865 ;; Defined at:
 25866 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 25867 ;; Parameters:    Size  Location     Type
 25868 ;;  f1              3   20[COMRAM] float 
 25869 ;;  f2              3   23[COMRAM] float 
 25870 ;; Auto vars:     Size  Location     Type
 25871 ;;  __ftdiv         3   31[COMRAM] float 
 25872 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 25873 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 25874 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 25875 ;; Return value:  Size  Location     Type
 25876 ;;                  3   20[COMRAM] float 
 25877 ;; Registers used:
 25878 ;;		wreg, status,2, status,0, cstack
 25879 ;; Tracked objects:
 25880 ;;		On entry : 0/0
 25881 ;;		On exit  : 0/0
 25882 ;;		Unchanged: 0/0
 25883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25884 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25885 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25886 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25887 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25888 ;;Total ram usage:       15 bytes
 25889 ;; Hardware stack levels used:    1
 25890 ;; Hardware stack levels required when called:    1
 25891 ;; This function calls:
 25892 ;;		i2___ftpack
 25893 ;; This function is called by:
 25894 ;;		_peakToRMS
 25895 ;;		_currentMeasuredToPeak
 25896 ;;		_ADC_postProcessingCallback
 25897 ;;		_asin
 25898 ;;		_atan
 25899 ;;		_sin
 25900 ;; This function uses a non-reentrant model
 25901 ;;
 25902                           
 25903                           	psect	text99
 25904  014BC6                     __ptext99:
 25905                           	opt stack 0
 25906  014BC6                     i2___ftdiv:
 25907                           	opt stack 14
 25908                           
 25909                           ;incstack = 0
 25910  014BC6  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 25911  014BCA  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 25912  014BCC  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 25913  014BCE  3416               	rlcf	i2___ftdiv@f1+1,w,c
 25914  014BD0  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 25915  014BD2  E301               	bnc	u1508_41
 25916  014BD4  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 25917  014BD6                     u1508_41:
 25918  014BD6  501B               	movf	??i2___ftdiv,w,c
 25919  014BD8  6E1F               	movwf	i2___ftdiv@exp,c
 25920  014BDA  501F               	movf	i2___ftdiv@exp,w,c
 25921  014BDC  A4D8               	btfss	status,2,c
 25922  014BDE  D007               	goto	i2l1555
 25923  014BE0  0E00               	movlw	0
 25924  014BE2  6E15               	movwf	?i2___ftdiv,c
 25925  014BE4  0E00               	movlw	0
 25926  014BE6  6E16               	movwf	?i2___ftdiv+1,c
 25927  014BE8  0E00               	movlw	0
 25928  014BEA  6E17               	movwf	?i2___ftdiv+2,c
 25929  014BEC  0012               	return	
 25930  014BEE                     i2l1555:
 25931  014BEE  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 25932  014BF2  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 25933  014BF4  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 25934  014BF6  3419               	rlcf	i2___ftdiv@f2+1,w,c
 25935  014BF8  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 25936  014BFA  E301               	bnc	u1510_41
 25937  014BFC  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 25938  014BFE                     u1510_41:
 25939  014BFE  501B               	movf	??i2___ftdiv,w,c
 25940  014C00  6E23               	movwf	i2___ftdiv@sign,c
 25941  014C02  5023               	movf	i2___ftdiv@sign,w,c
 25942  014C04  A4D8               	btfss	status,2,c
 25943  014C06  D007               	goto	i2l1557
 25944  014C08  0E00               	movlw	0
 25945  014C0A  6E15               	movwf	?i2___ftdiv,c
 25946  014C0C  0E00               	movlw	0
 25947  014C0E  6E16               	movwf	?i2___ftdiv+1,c
 25948  014C10  0E00               	movlw	0
 25949  014C12  6E17               	movwf	?i2___ftdiv+2,c
 25950  014C14  0012               	return	
 25951  014C16                     i2l1557:
 25952  014C16  0E00               	movlw	0
 25953  014C18  6E20               	movwf	i2___ftdiv@f3,c
 25954  014C1A  0E00               	movlw	0
 25955  014C1C  6E21               	movwf	i2___ftdiv@f3+1,c
 25956  014C1E  0E00               	movlw	0
 25957  014C20  6E22               	movwf	i2___ftdiv@f3+2,c
 25958  014C22  5023               	movf	i2___ftdiv@sign,w,c
 25959  014C24  0F89               	addlw	137
 25960  014C26  5E1F               	subwf	i2___ftdiv@exp,f,c
 25961  014C28  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 25962  014C2C  501A               	movf	i2___ftdiv@f2+2,w,c
 25963  014C2E  1A23               	xorwf	i2___ftdiv@sign,f,c
 25964  014C30  0E80               	movlw	128
 25965  014C32  1623               	andwf	i2___ftdiv@sign,f,c
 25966  014C34  8E16               	bsf	i2___ftdiv@f1+1,7,c
 25967  014C36  0EFF               	movlw	255
 25968  014C38  1615               	andwf	i2___ftdiv@f1,f,c
 25969  014C3A  0EFF               	movlw	255
 25970  014C3C  1616               	andwf	i2___ftdiv@f1+1,f,c
 25971  014C3E  0E00               	movlw	0
 25972  014C40  1617               	andwf	i2___ftdiv@f1+2,f,c
 25973  014C42  8E19               	bsf	i2___ftdiv@f2+1,7,c
 25974  014C44  0EFF               	movlw	255
 25975  014C46  1618               	andwf	i2___ftdiv@f2,f,c
 25976  014C48  0EFF               	movlw	255
 25977  014C4A  1619               	andwf	i2___ftdiv@f2+1,f,c
 25978  014C4C  0E00               	movlw	0
 25979  014C4E  161A               	andwf	i2___ftdiv@f2+2,f,c
 25980  014C50  0E18               	movlw	24
 25981  014C52  6E1E               	movwf	i2___ftdiv@cntr,c
 25982  014C54  90D8               	bcf	status,0,c
 25983  014C56  3620               	rlcf	i2___ftdiv@f3,f,c
 25984  014C58  3621               	rlcf	i2___ftdiv@f3+1,f,c
 25985  014C5A  3622               	rlcf	i2___ftdiv@f3+2,f,c
 25986  014C5C  5018               	movf	i2___ftdiv@f2,w,c
 25987  014C5E  5C15               	subwf	i2___ftdiv@f1,w,c
 25988  014C60  5019               	movf	i2___ftdiv@f2+1,w,c
 25989  014C62  5816               	subwfb	i2___ftdiv@f1+1,w,c
 25990  014C64  501A               	movf	i2___ftdiv@f2+2,w,c
 25991  014C66  5817               	subwfb	i2___ftdiv@f1+2,w,c
 25992  014C68  A0D8               	btfss	status,0,c
 25993  014C6A  D007               	goto	i2l1559
 25994  014C6C  5018               	movf	i2___ftdiv@f2,w,c
 25995  014C6E  5E15               	subwf	i2___ftdiv@f1,f,c
 25996  014C70  5019               	movf	i2___ftdiv@f2+1,w,c
 25997  014C72  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 25998  014C74  501A               	movf	i2___ftdiv@f2+2,w,c
 25999  014C76  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 26000  014C78  8020               	bsf	i2___ftdiv@f3,0,c
 26001  014C7A                     i2l1559:
 26002  014C7A  90D8               	bcf	status,0,c
 26003  014C7C  3615               	rlcf	i2___ftdiv@f1,f,c
 26004  014C7E  3616               	rlcf	i2___ftdiv@f1+1,f,c
 26005  014C80  3617               	rlcf	i2___ftdiv@f1+2,f,c
 26006  014C82  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 26007  014C84  D7E7               	goto	i2l1558
 26008  014C86  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 26009  014C8A  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 26010  014C8E  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 26011  014C92  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 26012  014C96  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 26013  014C9A  EC5C  F0A8         	call	i2___ftpack	;wreg free
 26014  014C9E  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 26015  014CA2  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 26016  014CA6  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 26017  014CAA  0012               	return	
 26018  014CAC                     __end_ofi2___ftdiv:
 26019                           	opt stack 0
 26020                           tosu	equ	0xFFF
 26021                           tosh	equ	0xFFE
 26022                           tosl	equ	0xFFD
 26023                           pclatu	equ	0xFFB
 26024                           pclath	equ	0xFFA
 26025                           tblptru	equ	0xFF8
 26026                           tblptrh	equ	0xFF7
 26027                           tblptrl	equ	0xFF6
 26028                           tablat	equ	0xFF5
 26029                           prodh	equ	0xFF4
 26030                           prodl	equ	0xFF3
 26031                           intcon	equ	0xFF2
 26032                           postinc0	equ	0xFEE
 26033                           fsr0h	equ	0xFEA
 26034                           fsr0l	equ	0xFE9
 26035                           wreg	equ	0xFE8
 26036                           indf1	equ	0xFE7
 26037                           postdec1	equ	0xFE5
 26038                           fsr1h	equ	0xFE2
 26039                           fsr1l	equ	0xFE1
 26040                           bsr	equ	0xFE0
 26041                           indf2	equ	0xFDF
 26042                           postinc2	equ	0xFDE
 26043                           postdec2	equ	0xFDD
 26044                           fsr2h	equ	0xFDA
 26045                           fsr2l	equ	0xFD9
 26046                           status	equ	0xFD8
 26047                           
 26048 ;; *************** function _floor *****************
 26049 ;; Defined at:
 26050 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 26051 ;; Parameters:    Size  Location     Type
 26052 ;;  x               3   85[COMRAM] float 
 26053 ;; Auto vars:     Size  Location     Type
 26054 ;;  i               3   88[COMRAM] float 
 26055 ;;  expon           2   91[COMRAM] int 
 26056 ;; Return value:  Size  Location     Type
 26057 ;;                  3   85[COMRAM] int 
 26058 ;; Registers used:
 26059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26060 ;; Tracked objects:
 26061 ;;		On entry : 0/0
 26062 ;;		On exit  : 0/0
 26063 ;;		Unchanged: 0/0
 26064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26065 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26066 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26068 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26069 ;;Total ram usage:        8 bytes
 26070 ;; Hardware stack levels used:    1
 26071 ;; Hardware stack levels required when called:    2
 26072 ;; This function calls:
 26073 ;;		___altoft
 26074 ;;		_frexp
 26075 ;;		i2___ftadd
 26076 ;;		i2___ftge
 26077 ;;		i2___fttol
 26078 ;; This function is called by:
 26079 ;;		_sin
 26080 ;; This function uses a non-reentrant model
 26081 ;;
 26082                           
 26083                           	psect	text100
 26084  014CAC                     __ptext100:
 26085                           	opt stack 0
 26086  014CAC                     _floor:
 26087                           	opt stack 11
 26088                           
 26089                           ;incstack = 0
 26090  014CAC  C056  F001         	movff	floor@x,frexp@value
 26091  014CB0  C057  F002         	movff	floor@x+1,frexp@value+1
 26092  014CB4  C058  F003         	movff	floor@x+2,frexp@value+2
 26093  014CB8  0E5C               	movlw	low floor@expon
 26094  014CBA  6E04               	movwf	frexp@eptr,c
 26095  014CBC  0E00               	movlw	high floor@expon
 26096  014CBE  6E05               	movwf	frexp@eptr+1,c
 26097  014CC0  EC80  F0AB         	call	_frexp	;wreg free
 26098  014CC4  AE5D               	btfss	floor@expon+1,7,c
 26099  014CC6  D010               	goto	i2l1943
 26100  014CC8  AE58               	btfss	floor@x+2,7,c
 26101  014CCA  D007               	goto	i2l1944
 26102  014CCC  0E00               	movlw	0
 26103  014CCE  6E56               	movwf	?_floor,c
 26104  014CD0  0E80               	movlw	128
 26105  014CD2  6E57               	movwf	?_floor+1,c
 26106  014CD4  0EBF               	movlw	191
 26107  014CD6  6E58               	movwf	?_floor+2,c
 26108  014CD8  0012               	return	
 26109  014CDA                     i2l1944:
 26110  014CDA  0E00               	movlw	0
 26111  014CDC  6E56               	movwf	?_floor,c
 26112  014CDE  0E00               	movlw	0
 26113  014CE0  6E57               	movwf	?_floor+1,c
 26114  014CE2  0E00               	movlw	0
 26115  014CE4  6E58               	movwf	?_floor+2,c
 26116  014CE6  0012               	return	
 26117  014CE8                     i2l1943:
 26118  014CE8  505D               	movf	floor@expon+1,w,c
 26119  014CEA  E104               	bnz	i2u1542_40
 26120  014CEC  0E15               	movlw	21
 26121  014CEE  5C5C               	subwf	floor@expon,w,c
 26122  014CF0  A0D8               	btfss	status,0,c
 26123  014CF2  D007               	goto	i2l1946
 26124  014CF4                     i2u1542_40:
 26125  014CF4  C056  F056         	movff	floor@x,?_floor
 26126  014CF8  C057  F057         	movff	floor@x+1,?_floor+1
 26127  014CFC  C058  F058         	movff	floor@x+2,?_floor+2
 26128  014D00  0012               	return	
 26129  014D02                     i2l1946:
 26130  014D02  C056  F03D         	movff	floor@x,i2___fttol@f1
 26131  014D06  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 26132  014D0A  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 26133  014D0E  EC7B  F0A4         	call	i2___fttol	;wreg free
 26134  014D12  C03D  F04C         	movff	?i2___fttol,___altoft@c
 26135  014D16  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 26136  014D1A  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 26137  014D1E  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 26138  014D22  ECBC  F0AB         	call	___altoft	;wreg free
 26139  014D26  C04C  F059         	movff	?___altoft,floor@i
 26140  014D2A  C04D  F05A         	movff	?___altoft+1,floor@i+1
 26141  014D2E  C04E  F05B         	movff	?___altoft+2,floor@i+2
 26142  014D32  C056  F02A         	movff	floor@x,i2___ftge@ff1
 26143  014D36  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 26144  014D3A  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 26145  014D3E  C059  F02D         	movff	floor@i,i2___ftge@ff2
 26146  014D42  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 26147  014D46  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 26148  014D4A  ECEA  F0A9         	call	i2___ftge	;wreg free
 26149  014D4E  B0D8               	btfsc	status,0,c
 26150  014D50  D015               	goto	i2l1947
 26151  014D52  C059  F040         	movff	floor@i,i2___ftadd@f1
 26152  014D56  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 26153  014D5A  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 26154  014D5E  0E00               	movlw	0
 26155  014D60  6E43               	movwf	i2___ftadd@f2,c
 26156  014D62  0E80               	movlw	128
 26157  014D64  6E44               	movwf	i2___ftadd@f2+1,c
 26158  014D66  0EBF               	movlw	191
 26159  014D68  6E45               	movwf	i2___ftadd@f2+2,c
 26160  014D6A  ECFB  F09E         	call	i2___ftadd	;wreg free
 26161  014D6E  C040  F056         	movff	?i2___ftadd,?_floor
 26162  014D72  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 26163  014D76  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 26164  014D7A  0012               	return	
 26165  014D7C                     i2l1947:
 26166  014D7C  C059  F056         	movff	floor@i,?_floor
 26167  014D80  C05A  F057         	movff	floor@i+1,?_floor+1
 26168  014D84  C05B  F058         	movff	floor@i+2,?_floor+2
 26169  014D88  0012               	return		;funcret
 26170  014D8A                     __end_of_floor:
 26171                           	opt stack 0
 26172                           tosu	equ	0xFFF
 26173                           tosh	equ	0xFFE
 26174                           tosl	equ	0xFFD
 26175                           pclatu	equ	0xFFB
 26176                           pclath	equ	0xFFA
 26177                           tblptru	equ	0xFF8
 26178                           tblptrh	equ	0xFF7
 26179                           tblptrl	equ	0xFF6
 26180                           tablat	equ	0xFF5
 26181                           prodh	equ	0xFF4
 26182                           prodl	equ	0xFF3
 26183                           intcon	equ	0xFF2
 26184                           postinc0	equ	0xFEE
 26185                           fsr0h	equ	0xFEA
 26186                           fsr0l	equ	0xFE9
 26187                           wreg	equ	0xFE8
 26188                           indf1	equ	0xFE7
 26189                           postdec1	equ	0xFE5
 26190                           fsr1h	equ	0xFE2
 26191                           fsr1l	equ	0xFE1
 26192                           bsr	equ	0xFE0
 26193                           indf2	equ	0xFDF
 26194                           postinc2	equ	0xFDE
 26195                           postdec2	equ	0xFDD
 26196                           fsr2h	equ	0xFDA
 26197                           fsr2l	equ	0xFD9
 26198                           status	equ	0xFD8
 26199                           
 26200 ;; *************** function i2___fttol *****************
 26201 ;; Defined at:
 26202 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 26203 ;; Parameters:    Size  Location     Type
 26204 ;;  f1              3   60[COMRAM] float 
 26205 ;; Auto vars:     Size  Location     Type
 26206 ;;  __fttol         4   70[COMRAM] unsigned long 
 26207 ;;  __fttol         1   74[COMRAM] unsigned char 
 26208 ;;  __fttol         1   69[COMRAM] unsigned char 
 26209 ;; Return value:  Size  Location     Type
 26210 ;;                  4   60[COMRAM] long 
 26211 ;; Registers used:
 26212 ;;		wreg, status,2, status,0
 26213 ;; Tracked objects:
 26214 ;;		On entry : 0/0
 26215 ;;		On exit  : 0/0
 26216 ;;		Unchanged: 0/0
 26217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26219 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26220 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26221 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26222 ;;Total ram usage:       15 bytes
 26223 ;; Hardware stack levels used:    1
 26224 ;; This function calls:
 26225 ;;		Nothing
 26226 ;; This function is called by:
 26227 ;;		_floor
 26228 ;;		i2_printf
 26229 ;; This function uses a non-reentrant model
 26230 ;;
 26231                           
 26232                           	psect	text101
 26233  0148F6                     __ptext101:
 26234                           	opt stack 0
 26235  0148F6                     i2___fttol:
 26236                           	opt stack 15
 26237                           
 26238                           ;incstack = 0
 26239  0148F6  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 26240  0148FA  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 26241  0148FC  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 26242  0148FE  343E               	rlcf	i2___fttol@f1+1,w,c
 26243  014900  3641               	rlcf	??i2___fttol& (0+255),f,c
 26244  014902  E301               	bnc	u1529_41
 26245  014904  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 26246  014906                     u1529_41:
 26247  014906  5041               	movf	??i2___fttol,w,c
 26248  014908  6E4B               	movwf	i2___fttol@exp1,c
 26249  01490A  504B               	movf	i2___fttol@exp1,w,c
 26250  01490C  A4D8               	btfss	status,2,c
 26251  01490E  D009               	goto	i2l1608
 26252  014910  0E00               	movlw	0
 26253  014912  6E3D               	movwf	?i2___fttol,c
 26254  014914  0E00               	movlw	0
 26255  014916  6E3E               	movwf	?i2___fttol+1,c
 26256  014918  0E00               	movlw	0
 26257  01491A  6E3F               	movwf	?i2___fttol+2,c
 26258  01491C  0E00               	movlw	0
 26259  01491E  6E40               	movwf	?i2___fttol+3,c
 26260  014920  0012               	return	
 26261  014922                     i2l1608:
 26262  014922  0E17               	movlw	23
 26263  014924  6E41               	movwf	??i2___fttol& (0+255),c
 26264  014926  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 26265  01492A  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 26266  01492E  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 26267  014932  2841               	incf	??i2___fttol,w,c
 26268  014934  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 26269  014936  D004               	goto	i2u1531_40
 26270  014938                     i2u1531_45:
 26271  014938  90D8               	bcf	status,0,c
 26272  01493A  3244               	rrcf	??i2___fttol+3,f,c
 26273  01493C  3243               	rrcf	??i2___fttol+2,f,c
 26274  01493E  3242               	rrcf	??i2___fttol+1,f,c
 26275  014940                     i2u1531_40:
 26276  014940  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 26277  014942  D7FA               	goto	i2u1531_45
 26278  014944  5042               	movf	??i2___fttol+1,w,c
 26279  014946  6E46               	movwf	i2___fttol@sign1,c
 26280  014948  8E3E               	bsf	i2___fttol@f1+1,7,c
 26281  01494A  0EFF               	movlw	255
 26282  01494C  163D               	andwf	i2___fttol@f1,f,c
 26283  01494E  0EFF               	movlw	255
 26284  014950  163E               	andwf	i2___fttol@f1+1,f,c
 26285  014952  0E00               	movlw	0
 26286  014954  163F               	andwf	i2___fttol@f1+2,f,c
 26287  014956  503D               	movf	i2___fttol@f1,w,c
 26288  014958  6E47               	movwf	i2___fttol@lval,c
 26289  01495A  503E               	movf	i2___fttol@f1+1,w,c
 26290  01495C  6E48               	movwf	i2___fttol@lval+1,c
 26291  01495E  503F               	movf	i2___fttol@f1+2,w,c
 26292  014960  6E49               	movwf	i2___fttol@lval+2,c
 26293  014962  6A4A               	clrf	i2___fttol@lval+3,c
 26294  014964  0E8E               	movlw	142
 26295  014966  5E4B               	subwf	i2___fttol@exp1,f,c
 26296  014968  AE4B               	btfss	i2___fttol@exp1,7,c
 26297  01496A  D016               	goto	i2l1610
 26298  01496C  504B               	movf	i2___fttol@exp1,w,c
 26299  01496E  0A80               	xorlw	128
 26300  014970  0F8F               	addlw	143
 26301  014972  B0D8               	btfsc	status,0,c
 26302  014974  D009               	goto	i2l1611
 26303  014976  0E00               	movlw	0
 26304  014978  6E3D               	movwf	?i2___fttol,c
 26305  01497A  0E00               	movlw	0
 26306  01497C  6E3E               	movwf	?i2___fttol+1,c
 26307  01497E  0E00               	movlw	0
 26308  014980  6E3F               	movwf	?i2___fttol+2,c
 26309  014982  0E00               	movlw	0
 26310  014984  6E40               	movwf	?i2___fttol+3,c
 26311  014986  0012               	return	
 26312  014988                     i2l1611:
 26313  014988  90D8               	bcf	status,0,c
 26314  01498A  324A               	rrcf	i2___fttol@lval+3,f,c
 26315  01498C  3249               	rrcf	i2___fttol@lval+2,f,c
 26316  01498E  3248               	rrcf	i2___fttol@lval+1,f,c
 26317  014990  3247               	rrcf	i2___fttol@lval,f,c
 26318  014992  3E4B               	incfsz	i2___fttol@exp1,f,c
 26319  014994  D7F9               	goto	i2l1611
 26320  014996  D015               	goto	i2u1535_40
 26321  014998                     i2l1610:
 26322  014998  0E17               	movlw	23
 26323  01499A  644B               	cpfsgt	i2___fttol@exp1,c
 26324  01499C  D00F               	goto	i2l1616
 26325  01499E  0E00               	movlw	0
 26326  0149A0  6E3D               	movwf	?i2___fttol,c
 26327  0149A2  0E00               	movlw	0
 26328  0149A4  6E3E               	movwf	?i2___fttol+1,c
 26329  0149A6  0E00               	movlw	0
 26330  0149A8  6E3F               	movwf	?i2___fttol+2,c
 26331  0149AA  0E00               	movlw	0
 26332  0149AC  6E40               	movwf	?i2___fttol+3,c
 26333  0149AE  0012               	return	
 26334  0149B0  90D8               	bcf	status,0,c
 26335  0149B2  3647               	rlcf	i2___fttol@lval,f,c
 26336  0149B4  3648               	rlcf	i2___fttol@lval+1,f,c
 26337  0149B6  3649               	rlcf	i2___fttol@lval+2,f,c
 26338  0149B8  364A               	rlcf	i2___fttol@lval+3,f,c
 26339  0149BA  064B               	decf	i2___fttol@exp1,f,c
 26340  0149BC                     i2l1616:
 26341  0149BC  504B               	movf	i2___fttol@exp1,w,c
 26342  0149BE  A4D8               	btfss	status,2,c
 26343  0149C0  D7F7               	goto	i2l1617
 26344  0149C2                     i2u1535_40:
 26345  0149C2  5046               	movf	i2___fttol@sign1,w,c
 26346  0149C4  B4D8               	btfsc	status,2,c
 26347  0149C6  D008               	goto	i2l1619
 26348  0149C8  1E4A               	comf	i2___fttol@lval+3,f,c
 26349  0149CA  1E49               	comf	i2___fttol@lval+2,f,c
 26350  0149CC  1E48               	comf	i2___fttol@lval+1,f,c
 26351  0149CE  6C47               	negf	i2___fttol@lval,c
 26352  0149D0  0E00               	movlw	0
 26353  0149D2  2248               	addwfc	i2___fttol@lval+1,f,c
 26354  0149D4  2249               	addwfc	i2___fttol@lval+2,f,c
 26355  0149D6  224A               	addwfc	i2___fttol@lval+3,f,c
 26356  0149D8                     i2l1619:
 26357  0149D8  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 26358  0149DC  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 26359  0149E0  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 26360  0149E4  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 26361  0149E8  0012               	return	
 26362  0149EA                     __end_ofi2___fttol:
 26363                           	opt stack 0
 26364                           tosu	equ	0xFFF
 26365                           tosh	equ	0xFFE
 26366                           tosl	equ	0xFFD
 26367                           pclatu	equ	0xFFB
 26368                           pclath	equ	0xFFA
 26369                           tblptru	equ	0xFF8
 26370                           tblptrh	equ	0xFF7
 26371                           tblptrl	equ	0xFF6
 26372                           tablat	equ	0xFF5
 26373                           prodh	equ	0xFF4
 26374                           prodl	equ	0xFF3
 26375                           intcon	equ	0xFF2
 26376                           postinc0	equ	0xFEE
 26377                           fsr0h	equ	0xFEA
 26378                           fsr0l	equ	0xFE9
 26379                           wreg	equ	0xFE8
 26380                           indf1	equ	0xFE7
 26381                           postdec1	equ	0xFE5
 26382                           fsr1h	equ	0xFE2
 26383                           fsr1l	equ	0xFE1
 26384                           bsr	equ	0xFE0
 26385                           indf2	equ	0xFDF
 26386                           postinc2	equ	0xFDE
 26387                           postdec2	equ	0xFDD
 26388                           fsr2h	equ	0xFDA
 26389                           fsr2l	equ	0xFD9
 26390                           status	equ	0xFD8
 26391                           
 26392 ;; *************** function i2___ftge *****************
 26393 ;; Defined at:
 26394 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 26395 ;; Parameters:    Size  Location     Type
 26396 ;;  ff1             3   41[COMRAM] float 
 26397 ;;  ff2             3   44[COMRAM] float 
 26398 ;; Auto vars:     Size  Location     Type
 26399 ;;		None
 26400 ;; Return value:  Size  Location     Type
 26401 ;;		None               void
 26402 ;; Registers used:
 26403 ;;		wreg, status,2, status,0
 26404 ;; Tracked objects:
 26405 ;;		On entry : 0/0
 26406 ;;		On exit  : 0/0
 26407 ;;		Unchanged: 0/0
 26408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26409 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26411 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26412 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26413 ;;Total ram usage:        9 bytes
 26414 ;; Hardware stack levels used:    1
 26415 ;; This function calls:
 26416 ;;		Nothing
 26417 ;; This function is called by:
 26418 ;;		_asin
 26419 ;;		_atan
 26420 ;;		_sin
 26421 ;;		_sqrt
 26422 ;;		_floor
 26423 ;;		i2_printf
 26424 ;; This function uses a non-reentrant model
 26425 ;;
 26426                           
 26427                           	psect	text102
 26428  0153D4                     __ptext102:
 26429                           	opt stack 0
 26430  0153D4                     i2___ftge:
 26431                           	opt stack 15
 26432                           
 26433                           ;incstack = 0
 26434  0153D4  AE2C               	btfss	i2___ftge@ff1+2,7,c
 26435  0153D6  D016               	goto	i2l1580
 26436  0153D8  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 26437  0153DC  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 26438  0153E0  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 26439  0153E4  1E30               	comf	??i2___ftge,f,c
 26440  0153E6  1E31               	comf	??i2___ftge+1,f,c
 26441  0153E8  1E32               	comf	??i2___ftge+2,f,c
 26442  0153EA  2A30               	incf	??i2___ftge,f,c
 26443  0153EC  0E00               	movlw	0
 26444  0153EE  2231               	addwfc	??i2___ftge+1,f,c
 26445  0153F0  2232               	addwfc	??i2___ftge+2,f,c
 26446  0153F2  0E00               	movlw	0
 26447  0153F4  2430               	addwf	??i2___ftge,w,c
 26448  0153F6  6E2A               	movwf	i2___ftge@ff1,c
 26449  0153F8  0E00               	movlw	0
 26450  0153FA  2031               	addwfc	??i2___ftge+1,w,c
 26451  0153FC  6E2B               	movwf	i2___ftge@ff1+1,c
 26452  0153FE  0E80               	movlw	128
 26453  015400  2032               	addwfc	??i2___ftge+2,w,c
 26454  015402  6E2C               	movwf	i2___ftge@ff1+2,c
 26455  015404                     i2l1580:
 26456  015404  AE2F               	btfss	i2___ftge@ff2+2,7,c
 26457  015406  D016               	goto	i2l1581
 26458  015408  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 26459  01540C  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 26460  015410  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 26461  015414  1E30               	comf	??i2___ftge,f,c
 26462  015416  1E31               	comf	??i2___ftge+1,f,c
 26463  015418  1E32               	comf	??i2___ftge+2,f,c
 26464  01541A  2A30               	incf	??i2___ftge,f,c
 26465  01541C  0E00               	movlw	0
 26466  01541E  2231               	addwfc	??i2___ftge+1,f,c
 26467  015420  2232               	addwfc	??i2___ftge+2,f,c
 26468  015422  0E00               	movlw	0
 26469  015424  2430               	addwf	??i2___ftge,w,c
 26470  015426  6E2D               	movwf	i2___ftge@ff2,c
 26471  015428  0E00               	movlw	0
 26472  01542A  2031               	addwfc	??i2___ftge+1,w,c
 26473  01542C  6E2E               	movwf	i2___ftge@ff2+1,c
 26474  01542E  0E80               	movlw	128
 26475  015430  2032               	addwfc	??i2___ftge+2,w,c
 26476  015432  6E2F               	movwf	i2___ftge@ff2+2,c
 26477  015434                     i2l1581:
 26478  015434  0E00               	movlw	0
 26479  015436  1A2A               	xorwf	i2___ftge@ff1,f,c
 26480  015438  0E00               	movlw	0
 26481  01543A  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 26482  01543C  0E80               	movlw	128
 26483  01543E  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 26484  015440  0E00               	movlw	0
 26485  015442  1A2D               	xorwf	i2___ftge@ff2,f,c
 26486  015444  0E00               	movlw	0
 26487  015446  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 26488  015448  0E80               	movlw	128
 26489  01544A  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 26490  01544C  502D               	movf	i2___ftge@ff2,w,c
 26491  01544E  5C2A               	subwf	i2___ftge@ff1,w,c
 26492  015450  502E               	movf	i2___ftge@ff2+1,w,c
 26493  015452  582B               	subwfb	i2___ftge@ff1+1,w,c
 26494  015454  502F               	movf	i2___ftge@ff2+2,w,c
 26495  015456  582C               	subwfb	i2___ftge@ff1+2,w,c
 26496  015458  B0D8               	btfsc	status,0,c
 26497  01545A  D002               	goto	i2l11764
 26498  01545C  90D8               	bcf	status,0,c
 26499  01545E  0012               	return	
 26500  015460                     i2l11764:
 26501  015460  80D8               	bsf	status,0,c
 26502  015462  0012               	return	
 26503  015464                     __end_ofi2___ftge:
 26504                           	opt stack 0
 26505                           tosu	equ	0xFFF
 26506                           tosh	equ	0xFFE
 26507                           tosl	equ	0xFFD
 26508                           pclatu	equ	0xFFB
 26509                           pclath	equ	0xFFA
 26510                           tblptru	equ	0xFF8
 26511                           tblptrh	equ	0xFF7
 26512                           tblptrl	equ	0xFF6
 26513                           tablat	equ	0xFF5
 26514                           prodh	equ	0xFF4
 26515                           prodl	equ	0xFF3
 26516                           intcon	equ	0xFF2
 26517                           postinc0	equ	0xFEE
 26518                           fsr0h	equ	0xFEA
 26519                           fsr0l	equ	0xFE9
 26520                           wreg	equ	0xFE8
 26521                           indf1	equ	0xFE7
 26522                           postdec1	equ	0xFE5
 26523                           fsr1h	equ	0xFE2
 26524                           fsr1l	equ	0xFE1
 26525                           bsr	equ	0xFE0
 26526                           indf2	equ	0xFDF
 26527                           postinc2	equ	0xFDE
 26528                           postdec2	equ	0xFDD
 26529                           fsr2h	equ	0xFDA
 26530                           fsr2l	equ	0xFD9
 26531                           status	equ	0xFD8
 26532                           
 26533 ;; *************** function _frexp *****************
 26534 ;; Defined at:
 26535 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 26536 ;; Parameters:    Size  Location     Type
 26537 ;;  value           3    0[COMRAM] float 
 26538 ;;  eptr            2    3[COMRAM] PTR int 
 26539 ;;		 -> floor@expon(2), 
 26540 ;; Auto vars:     Size  Location     Type
 26541 ;;		None
 26542 ;; Return value:  Size  Location     Type
 26543 ;;                  3    0[COMRAM] PTR int 
 26544 ;; Registers used:
 26545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26546 ;; Tracked objects:
 26547 ;;		On entry : 0/0
 26548 ;;		On exit  : 0/0
 26549 ;;		Unchanged: 0/0
 26550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26551 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26554 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26555 ;;Total ram usage:        7 bytes
 26556 ;; Hardware stack levels used:    1
 26557 ;; This function calls:
 26558 ;;		Nothing
 26559 ;; This function is called by:
 26560 ;;		_floor
 26561 ;; This function uses a non-reentrant model
 26562 ;;
 26563                           
 26564                           	psect	text103
 26565  015700                     __ptext103:
 26566                           	opt stack 0
 26567  015700                     _frexp:
 26568                           	opt stack 12
 26569                           
 26570                           ;incstack = 0
 26571  015700  5001               	movf	frexp@value,w,c
 26572  015702  1002               	iorwf	frexp@value+1,w,c
 26573  015704  1003               	iorwf	frexp@value+2,w,c
 26574  015706  A4D8               	btfss	status,2,c
 26575  015708  D009               	goto	i2l1952
 26576  01570A  C004  FFD9         	movff	frexp@eptr,fsr2l
 26577  01570E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26578  015712  0E00               	movlw	0
 26579  015714  6EDE               	movwf	postinc2,c
 26580  015716  0E00               	movlw	0
 26581  015718  6EDD               	movwf	postdec2,c
 26582                           
 26583                           ;	Return value of _frexp is never used
 26584  01571A  0012               	return	
 26585  01571C                     i2l1952:
 26586  01571C  5003               	movf	frexp@value+2,w,c
 26587  01571E  0B7F               	andlw	127
 26588  015720  6E06               	movwf	??_frexp& (0+255),c
 26589  015722  6A07               	clrf	(??_frexp+1)& (0+255),c
 26590  015724  90D8               	bcf	status,0,c
 26591  015726  3606               	rlcf	??_frexp,f,c
 26592  015728  3607               	rlcf	??_frexp+1,f,c
 26593  01572A  C004  FFD9         	movff	frexp@eptr,fsr2l
 26594  01572E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26595  015732  C006  FFDE         	movff	??_frexp,postinc2
 26596  015736  C007  FFDD         	movff	??_frexp+1,postdec2
 26597  01573A  AE02               	btfss	frexp@value+1,7,c
 26598  01573C  D003               	goto	i2u1528_40
 26599  01573E  6A06               	clrf	??_frexp& (0+255),c
 26600  015740  2A06               	incf	??_frexp& (0+255),f,c
 26601  015742  D001               	goto	i2u1528_48
 26602  015744                     i2u1528_40:
 26603  015744  6A06               	clrf	??_frexp& (0+255),c
 26604  015746                     i2u1528_48:
 26605  015746  5006               	movf	??_frexp,w,c
 26606  015748  C004  FFD9         	movff	frexp@eptr,fsr2l
 26607  01574C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26608  015750  12DE               	iorwf	postinc2,f,c
 26609  015752  0E00               	movlw	0
 26610  015754  12DD               	iorwf	postdec2,f,c
 26611  015756  C004  FFD9         	movff	frexp@eptr,fsr2l
 26612  01575A  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 26613  01575E  0E82               	movlw	130
 26614  015760  26DE               	addwf	postinc2,f,c
 26615  015762  0EFF               	movlw	255
 26616  015764  22DD               	addwfc	postdec2,f,c
 26617  015766  8003               	bsf	frexp@value+2,0,c
 26618  015768  8203               	bsf	frexp@value+2,1,c
 26619  01576A  8403               	bsf	frexp@value+2,2,c
 26620  01576C  8603               	bsf	frexp@value+2,3,c
 26621  01576E  8803               	bsf	frexp@value+2,4,c
 26622  015770  8A03               	bsf	frexp@value+2,5,c
 26623  015772  9C03               	bcf	frexp@value+2,6,c
 26624  015774  9E02               	bcf	frexp@value+1,7,c
 26625  015776  0012               	return	
 26626  015778                     __end_of_frexp:
 26627                           	opt stack 0
 26628                           tosu	equ	0xFFF
 26629                           tosh	equ	0xFFE
 26630                           tosl	equ	0xFFD
 26631                           pclatu	equ	0xFFB
 26632                           pclath	equ	0xFFA
 26633                           tblptru	equ	0xFF8
 26634                           tblptrh	equ	0xFF7
 26635                           tblptrl	equ	0xFF6
 26636                           tablat	equ	0xFF5
 26637                           prodh	equ	0xFF4
 26638                           prodl	equ	0xFF3
 26639                           intcon	equ	0xFF2
 26640                           postinc0	equ	0xFEE
 26641                           fsr0h	equ	0xFEA
 26642                           fsr0l	equ	0xFE9
 26643                           wreg	equ	0xFE8
 26644                           indf1	equ	0xFE7
 26645                           postdec1	equ	0xFE5
 26646                           fsr1h	equ	0xFE2
 26647                           fsr1l	equ	0xFE1
 26648                           bsr	equ	0xFE0
 26649                           indf2	equ	0xFDF
 26650                           postinc2	equ	0xFDE
 26651                           postdec2	equ	0xFDD
 26652                           fsr2h	equ	0xFDA
 26653                           fsr2l	equ	0xFD9
 26654                           status	equ	0xFD8
 26655                           
 26656 ;; *************** function ___altoft *****************
 26657 ;; Defined at:
 26658 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;  c               4   75[COMRAM] long 
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;  sign            1   84[COMRAM] unsigned char 
 26663 ;;  exp             1   83[COMRAM] unsigned char 
 26664 ;; Return value:  Size  Location     Type
 26665 ;;                  3   75[COMRAM] float 
 26666 ;; Registers used:
 26667 ;;		wreg, status,2, status,0, cstack
 26668 ;; Tracked objects:
 26669 ;;		On entry : 0/0
 26670 ;;		On exit  : 0/0
 26671 ;;		Unchanged: 0/0
 26672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26676 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26677 ;;Total ram usage:       10 bytes
 26678 ;; Hardware stack levels used:    1
 26679 ;; Hardware stack levels required when called:    1
 26680 ;; This function calls:
 26681 ;;		i2___ftpack
 26682 ;; This function is called by:
 26683 ;;		_floor
 26684 ;; This function uses a non-reentrant model
 26685 ;;
 26686                           
 26687                           	psect	text104
 26688  015778                     __ptext104:
 26689                           	opt stack 0
 26690  015778                     ___altoft:
 26691                           	opt stack 11
 26692                           
 26693                           ;incstack = 0
 26694  015778  0E00               	movlw	0
 26695  01577A  6E55               	movwf	___altoft@sign,c
 26696  01577C  0E8E               	movlw	142
 26697  01577E  6E54               	movwf	___altoft@exp,c
 26698  015780  AE4F               	btfss	___altoft@c+3,7,c
 26699  015782  D011               	goto	i2l1285
 26700  015784  1E4F               	comf	___altoft@c+3,f,c
 26701  015786  1E4E               	comf	___altoft@c+2,f,c
 26702  015788  1E4D               	comf	___altoft@c+1,f,c
 26703  01578A  6C4C               	negf	___altoft@c,c
 26704  01578C  0E00               	movlw	0
 26705  01578E  224D               	addwfc	___altoft@c+1,f,c
 26706  015790  224E               	addwfc	___altoft@c+2,f,c
 26707  015792  224F               	addwfc	___altoft@c+3,f,c
 26708  015794  0E01               	movlw	1
 26709  015796  6E55               	movwf	___altoft@sign,c
 26710  015798  D006               	goto	i2l1285
 26711  01579A  90D8               	bcf	status,0,c
 26712  01579C  324F               	rrcf	___altoft@c+3,f,c
 26713  01579E  324E               	rrcf	___altoft@c+2,f,c
 26714  0157A0  324D               	rrcf	___altoft@c+1,f,c
 26715  0157A2  324C               	rrcf	___altoft@c,f,c
 26716  0157A4  2A54               	incf	___altoft@exp,f,c
 26717  0157A6                     i2l1285:
 26718  0157A6  0E00               	movlw	0
 26719  0157A8  144C               	andwf	___altoft@c,w,c
 26720  0157AA  6E50               	movwf	??___altoft& (0+255),c
 26721  0157AC  0E00               	movlw	0
 26722  0157AE  144D               	andwf	___altoft@c+1,w,c
 26723  0157B0  6E51               	movwf	(??___altoft+1)& (0+255),c
 26724  0157B2  0E00               	movlw	0
 26725  0157B4  144E               	andwf	___altoft@c+2,w,c
 26726  0157B6  6E52               	movwf	(??___altoft+2)& (0+255),c
 26727  0157B8  0EFF               	movlw	255
 26728  0157BA  144F               	andwf	___altoft@c+3,w,c
 26729  0157BC  6E53               	movwf	(??___altoft+3)& (0+255),c
 26730  0157BE  5050               	movf	??___altoft,w,c
 26731  0157C0  1051               	iorwf	??___altoft+1,w,c
 26732  0157C2  1052               	iorwf	??___altoft+2,w,c
 26733  0157C4  1053               	iorwf	??___altoft+3,w,c
 26734  0157C6  A4D8               	btfss	status,2,c
 26735  0157C8  D7E8               	goto	i2l1286
 26736  0157CA  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 26737  0157CE  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 26738  0157D2  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 26739  0157D6  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 26740  0157DA  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 26741  0157DE  EC5C  F0A8         	call	i2___ftpack	;wreg free
 26742  0157E2  C001  F04C         	movff	?i2___ftpack,?___altoft
 26743  0157E6  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 26744  0157EA  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 26745  0157EE  0012               	return	
 26746  0157F0                     __end_of___altoft:
 26747                           	opt stack 0
 26748                           tosu	equ	0xFFF
 26749                           tosh	equ	0xFFE
 26750                           tosl	equ	0xFFD
 26751                           pclatu	equ	0xFFB
 26752                           pclath	equ	0xFFA
 26753                           tblptru	equ	0xFF8
 26754                           tblptrh	equ	0xFF7
 26755                           tblptrl	equ	0xFF6
 26756                           tablat	equ	0xFF5
 26757                           prodh	equ	0xFF4
 26758                           prodl	equ	0xFF3
 26759                           intcon	equ	0xFF2
 26760                           postinc0	equ	0xFEE
 26761                           fsr0h	equ	0xFEA
 26762                           fsr0l	equ	0xFE9
 26763                           wreg	equ	0xFE8
 26764                           indf1	equ	0xFE7
 26765                           postdec1	equ	0xFE5
 26766                           fsr1h	equ	0xFE2
 26767                           fsr1l	equ	0xFE1
 26768                           bsr	equ	0xFE0
 26769                           indf2	equ	0xFDF
 26770                           postinc2	equ	0xFDE
 26771                           postdec2	equ	0xFDD
 26772                           fsr2h	equ	0xFDA
 26773                           fsr2l	equ	0xFD9
 26774                           status	equ	0xFD8
 26775                           
 26776 ;; *************** function _eval_poly *****************
 26777 ;; Defined at:
 26778 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;  x               3   75[COMRAM] float 
 26781 ;;  d               2   78[COMRAM] PTR const 
 26782 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 26783 ;;  n               2   80[COMRAM] int 
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;  res             3   84[COMRAM] int 
 26786 ;; Return value:  Size  Location     Type
 26787 ;;                  3   75[COMRAM] int 
 26788 ;; Registers used:
 26789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26790 ;; Tracked objects:
 26791 ;;		On entry : 0/0
 26792 ;;		On exit  : 0/0
 26793 ;;		Unchanged: 0/0
 26794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26795 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26796 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26798 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26799 ;;Total ram usage:       12 bytes
 26800 ;; Hardware stack levels used:    1
 26801 ;; Hardware stack levels required when called:    2
 26802 ;; This function calls:
 26803 ;;		i2___ftadd
 26804 ;;		i2___ftmul
 26805 ;;		i2___wmul
 26806 ;; This function is called by:
 26807 ;;		_atan
 26808 ;;		_sin
 26809 ;; This function uses a non-reentrant model
 26810 ;;
 26811                           
 26812                           	psect	text105
 26813  014D8A                     __ptext105:
 26814                           	opt stack 0
 26815  014D8A                     _eval_poly:
 26816                           	opt stack 11
 26817                           
 26818                           ;incstack = 0
 26819  014D8A  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 26820  014D8E  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 26821  014D92  0E00               	movlw	0
 26822  014D94  6E12               	movwf	i2___wmul@multiplicand+1,c
 26823  014D96  0E03               	movlw	3
 26824  014D98  6E11               	movwf	i2___wmul@multiplicand,c
 26825  014D9A  EC7B  F0B1         	call	i2___wmul	;wreg free
 26826  014D9E  C04F  F053         	movff	eval_poly@d,??_eval_poly
 26827  014DA2  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 26828  014DA6  500F               	movf	?i2___wmul,w,c
 26829  014DA8  2653               	addwf	??_eval_poly,f,c
 26830  014DAA  5010               	movf	?i2___wmul+1,w,c
 26831  014DAC  2254               	addwfc	??_eval_poly+1,f,c
 26832  014DAE  C053  FFF6         	movff	??_eval_poly,tblptrl
 26833  014DB2  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 26834  014DB6                     	if	0	;tblptru may be non-zero
 26835  014DB6                     	endif
 26836  014DB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26837  014DB6  0E00               	movlw	low (__mediumconst shr (0+16))
 26838  014DB8  6EF8               	movwf	tblptru,c
 26839  014DBA                     	endif
 26840  014DBA  0009               	tblrd		*+
 26841  014DBC  CFF5 F055          	movff	tablat,eval_poly@res
 26842  014DC0  0009               	tblrd		*+
 26843  014DC2  CFF5 F056          	movff	tablat,eval_poly@res+1
 26844  014DC6  000A               	tblrd		*-
 26845  014DC8  CFF5 F057          	movff	tablat,eval_poly@res+2
 26846  014DCC  D040               	goto	i2l1449
 26847  014DCE  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 26848  014DD2  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 26849  014DD6  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 26850  014DDA  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 26851  014DDE  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 26852  014DE2  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 26853  014DE6  ECF5  F0A4         	call	i2___ftmul	;wreg free
 26854  014DEA  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 26855  014DEE  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 26856  014DF2  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 26857  014DF6  0E00               	movlw	0
 26858  014DF8  6E12               	movwf	i2___wmul@multiplicand+1,c
 26859  014DFA  0E03               	movlw	3
 26860  014DFC  6E11               	movwf	i2___wmul@multiplicand,c
 26861  014DFE  0651               	decf	eval_poly@n,f,c
 26862  014E00  A0D8               	btfss	status,0,c
 26863  014E02  0652               	decf	eval_poly@n+1,f,c
 26864  014E04  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 26865  014E08  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 26866  014E0C  EC7B  F0B1         	call	i2___wmul	;wreg free
 26867  014E10  C04F  F053         	movff	eval_poly@d,??_eval_poly
 26868  014E14  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 26869  014E18  500F               	movf	?i2___wmul,w,c
 26870  014E1A  2653               	addwf	??_eval_poly,f,c
 26871  014E1C  5010               	movf	?i2___wmul+1,w,c
 26872  014E1E  2254               	addwfc	??_eval_poly+1,f,c
 26873  014E20  C053  FFF6         	movff	??_eval_poly,tblptrl
 26874  014E24  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 26875  014E28                     	if	0	;tblptru may be non-zero
 26876  014E28                     	endif
 26877  014E28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26878  014E28  0E00               	movlw	low (__mediumconst shr (0+16))
 26879  014E2A  6EF8               	movwf	tblptru,c
 26880  014E2C                     	endif
 26881  014E2C  0009               	tblrd		*+
 26882  014E2E  CFF5 F043          	movff	tablat,i2___ftadd@f2
 26883  014E32  0009               	tblrd		*+
 26884  014E34  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 26885  014E38  000A               	tblrd		*-
 26886  014E3A  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 26887  014E3E  ECFB  F09E         	call	i2___ftadd	;wreg free
 26888  014E42  C040  F055         	movff	?i2___ftadd,eval_poly@res
 26889  014E46  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 26890  014E4A  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 26891  014E4E                     i2l1449:
 26892  014E4E  5051               	movf	eval_poly@n,w,c
 26893  014E50  1052               	iorwf	eval_poly@n+1,w,c
 26894  014E52  A4D8               	btfss	status,2,c
 26895  014E54  D7BC               	goto	i2l1450
 26896  014E56  C055  F04C         	movff	eval_poly@res,?_eval_poly
 26897  014E5A  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 26898  014E5E  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 26899  014E62  0012               	return		;funcret
 26900  014E64                     __end_of_eval_poly:
 26901                           	opt stack 0
 26902                           tosu	equ	0xFFF
 26903                           tosh	equ	0xFFE
 26904                           tosl	equ	0xFFD
 26905                           pclatu	equ	0xFFB
 26906                           pclath	equ	0xFFA
 26907                           tblptru	equ	0xFF8
 26908                           tblptrh	equ	0xFF7
 26909                           tblptrl	equ	0xFF6
 26910                           tablat	equ	0xFF5
 26911                           prodh	equ	0xFF4
 26912                           prodl	equ	0xFF3
 26913                           intcon	equ	0xFF2
 26914                           postinc0	equ	0xFEE
 26915                           fsr0h	equ	0xFEA
 26916                           fsr0l	equ	0xFE9
 26917                           wreg	equ	0xFE8
 26918                           indf1	equ	0xFE7
 26919                           postdec1	equ	0xFE5
 26920                           fsr1h	equ	0xFE2
 26921                           fsr1l	equ	0xFE1
 26922                           bsr	equ	0xFE0
 26923                           indf2	equ	0xFDF
 26924                           postinc2	equ	0xFDE
 26925                           postdec2	equ	0xFDD
 26926                           fsr2h	equ	0xFDA
 26927                           fsr2l	equ	0xFD9
 26928                           status	equ	0xFD8
 26929                           
 26930 ;; *************** function i2___wmul *****************
 26931 ;; Defined at:
 26932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 26933 ;; Parameters:    Size  Location     Type
 26934 ;;  multiplier      2   14[COMRAM] unsigned int 
 26935 ;;  multiplicand    2   16[COMRAM] unsigned int 
 26936 ;; Auto vars:     Size  Location     Type
 26937 ;;  __wmul          2   18[COMRAM] unsigned int 
 26938 ;; Return value:  Size  Location     Type
 26939 ;;                  2   14[COMRAM] unsigned int 
 26940 ;; Registers used:
 26941 ;;		wreg, status,2, status,0, prodl, prodh
 26942 ;; Tracked objects:
 26943 ;;		On entry : 0/0
 26944 ;;		On exit  : 0/0
 26945 ;;		Unchanged: 0/0
 26946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26950 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26951 ;;Total ram usage:        6 bytes
 26952 ;; Hardware stack levels used:    1
 26953 ;; This function calls:
 26954 ;;		Nothing
 26955 ;; This function is called by:
 26956 ;;		_eval_poly
 26957 ;;		i2_fround
 26958 ;;		i2_scale
 26959 ;;		i2_printf
 26960 ;; This function uses a non-reentrant model
 26961 ;;
 26962                           
 26963                           	psect	text106
 26964  0162F6                     __ptext106:
 26965                           	opt stack 0
 26966  0162F6                     i2___wmul:
 26967                           	opt stack 14
 26968                           
 26969                           ;incstack = 0
 26970  0162F6  500F               	movf	i2___wmul@multiplier,w,c
 26971  0162F8  0211               	mulwf	i2___wmul@multiplicand,c
 26972  0162FA  CFF3 F013          	movff	prodl,i2___wmul@product
 26973  0162FE  CFF4 F014          	movff	prodh,i2___wmul@product+1
 26974  016302  500F               	movf	i2___wmul@multiplier,w,c
 26975  016304  0212               	mulwf	i2___wmul@multiplicand+1,c
 26976  016306  50F3               	movf	prodl,w,c
 26977  016308  2614               	addwf	i2___wmul@product+1,f,c
 26978  01630A  5010               	movf	i2___wmul@multiplier+1,w,c
 26979  01630C  0211               	mulwf	i2___wmul@multiplicand,c
 26980  01630E  50F3               	movf	prodl,w,c
 26981  016310  2614               	addwf	i2___wmul@product+1,f,c
 26982  016312  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 26983  016316  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 26984  01631A  0012               	return	
 26985  01631C                     __end_ofi2___wmul:
 26986                           	opt stack 0
 26987                           tosu	equ	0xFFF
 26988                           tosh	equ	0xFFE
 26989                           tosl	equ	0xFFD
 26990                           pclatu	equ	0xFFB
 26991                           pclath	equ	0xFFA
 26992                           tblptru	equ	0xFF8
 26993                           tblptrh	equ	0xFF7
 26994                           tblptrl	equ	0xFF6
 26995                           tablat	equ	0xFF5
 26996                           prodh	equ	0xFF4
 26997                           prodl	equ	0xFF3
 26998                           intcon	equ	0xFF2
 26999                           postinc0	equ	0xFEE
 27000                           fsr0h	equ	0xFEA
 27001                           fsr0l	equ	0xFE9
 27002                           wreg	equ	0xFE8
 27003                           indf1	equ	0xFE7
 27004                           postdec1	equ	0xFE5
 27005                           fsr1h	equ	0xFE2
 27006                           fsr1l	equ	0xFE1
 27007                           bsr	equ	0xFE0
 27008                           indf2	equ	0xFDF
 27009                           postinc2	equ	0xFDE
 27010                           postdec2	equ	0xFDD
 27011                           fsr2h	equ	0xFDA
 27012                           fsr2l	equ	0xFD9
 27013                           status	equ	0xFD8
 27014                           
 27015 ;; *************** function i2___ftmul *****************
 27016 ;; Defined at:
 27017 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 27018 ;; Parameters:    Size  Location     Type
 27019 ;;  f1              3   38[COMRAM] float 
 27020 ;;  f2              3   41[COMRAM] float 
 27021 ;; Auto vars:     Size  Location     Type
 27022 ;;  __ftmul         3   48[COMRAM] unsigned um
 27023 ;;  __ftmul         1   52[COMRAM] unsigned char 
 27024 ;;  __ftmul         1   51[COMRAM] unsigned char 
 27025 ;;  __ftmul         1   47[COMRAM] unsigned char 
 27026 ;; Return value:  Size  Location     Type
 27027 ;;                  3   38[COMRAM] float 
 27028 ;; Registers used:
 27029 ;;		wreg, status,2, status,0, cstack
 27030 ;; Tracked objects:
 27031 ;;		On entry : 0/0
 27032 ;;		On exit  : 0/0
 27033 ;;		Unchanged: 0/0
 27034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27035 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27036 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27037 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27038 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27039 ;;Total ram usage:       15 bytes
 27040 ;; Hardware stack levels used:    1
 27041 ;; Hardware stack levels required when called:    1
 27042 ;; This function calls:
 27043 ;;		i2___ftpack
 27044 ;; This function is called by:
 27045 ;;		_peakToRMS
 27046 ;;		_ADC_postProcessingCallback
 27047 ;;		_asin
 27048 ;;		_atan
 27049 ;;		_eval_poly
 27050 ;;		_sin
 27051 ;;		_sqrt
 27052 ;;		i2_fround
 27053 ;;		i2_scale
 27054 ;;		i2_printf
 27055 ;; This function uses a non-reentrant model
 27056 ;;
 27057                           
 27058                           	psect	text107
 27059  0149EA                     __ptext107:
 27060                           	opt stack 0
 27061  0149EA                     i2___ftmul:
 27062                           	opt stack 13
 27063                           
 27064                           ;incstack = 0
 27065  0149EA  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 27066  0149EE  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 27067  0149F0  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 27068  0149F2  3428               	rlcf	i2___ftmul@f1+1,w,c
 27069  0149F4  362D               	rlcf	??i2___ftmul& (0+255),f,c
 27070  0149F6  E301               	bnc	u1499_41
 27071  0149F8  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 27072  0149FA                     u1499_41:
 27073  0149FA  502D               	movf	??i2___ftmul,w,c
 27074  0149FC  6E30               	movwf	i2___ftmul@exp,c
 27075  0149FE  5030               	movf	i2___ftmul@exp,w,c
 27076  014A00  A4D8               	btfss	status,2,c
 27077  014A02  D007               	goto	i2l1587
 27078  014A04  0E00               	movlw	0
 27079  014A06  6E27               	movwf	?i2___ftmul,c
 27080  014A08  0E00               	movlw	0
 27081  014A0A  6E28               	movwf	?i2___ftmul+1,c
 27082  014A0C  0E00               	movlw	0
 27083  014A0E  6E29               	movwf	?i2___ftmul+2,c
 27084  014A10  0012               	return	
 27085  014A12                     i2l1587:
 27086  014A12  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 27087  014A16  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 27088  014A18  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 27089  014A1A  342B               	rlcf	i2___ftmul@f2+1,w,c
 27090  014A1C  362D               	rlcf	??i2___ftmul& (0+255),f,c
 27091  014A1E  E301               	bnc	u1501_41
 27092  014A20  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 27093  014A22                     u1501_41:
 27094  014A22  502D               	movf	??i2___ftmul,w,c
 27095  014A24  6E35               	movwf	i2___ftmul@sign,c
 27096  014A26  5035               	movf	i2___ftmul@sign,w,c
 27097  014A28  A4D8               	btfss	status,2,c
 27098  014A2A  D007               	goto	i2l1589
 27099  014A2C  0E00               	movlw	0
 27100  014A2E  6E27               	movwf	?i2___ftmul,c
 27101  014A30  0E00               	movlw	0
 27102  014A32  6E28               	movwf	?i2___ftmul+1,c
 27103  014A34  0E00               	movlw	0
 27104  014A36  6E29               	movwf	?i2___ftmul+2,c
 27105  014A38  0012               	return	
 27106  014A3A                     i2l1589:
 27107  014A3A  5035               	movf	i2___ftmul@sign,w,c
 27108  014A3C  0F7B               	addlw	123
 27109  014A3E  2630               	addwf	i2___ftmul@exp,f,c
 27110  014A40  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 27111  014A44  502C               	movf	i2___ftmul@f2+2,w,c
 27112  014A46  1A35               	xorwf	i2___ftmul@sign,f,c
 27113  014A48  0E80               	movlw	128
 27114  014A4A  1635               	andwf	i2___ftmul@sign,f,c
 27115  014A4C  8E28               	bsf	i2___ftmul@f1+1,7,c
 27116  014A4E  8E2B               	bsf	i2___ftmul@f2+1,7,c
 27117  014A50  0EFF               	movlw	255
 27118  014A52  162A               	andwf	i2___ftmul@f2,f,c
 27119  014A54  0EFF               	movlw	255
 27120  014A56  162B               	andwf	i2___ftmul@f2+1,f,c
 27121  014A58  0E00               	movlw	0
 27122  014A5A  162C               	andwf	i2___ftmul@f2+2,f,c
 27123  014A5C  0E00               	movlw	0
 27124  014A5E  6E31               	movwf	i2___ftmul@f3_as_product,c
 27125  014A60  0E00               	movlw	0
 27126  014A62  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 27127  014A64  0E00               	movlw	0
 27128  014A66  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 27129  014A68  0E07               	movlw	7
 27130  014A6A  6E34               	movwf	i2___ftmul@cntr,c
 27131  014A6C  A027               	btfss	i2___ftmul@f1,0,c
 27132  014A6E  D006               	goto	i2l1591
 27133  014A70  502A               	movf	i2___ftmul@f2,w,c
 27134  014A72  2631               	addwf	i2___ftmul@f3_as_product,f,c
 27135  014A74  502B               	movf	i2___ftmul@f2+1,w,c
 27136  014A76  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 27137  014A78  502C               	movf	i2___ftmul@f2+2,w,c
 27138  014A7A  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 27139  014A7C                     i2l1591:
 27140  014A7C  90D8               	bcf	status,0,c
 27141  014A7E  3229               	rrcf	i2___ftmul@f1+2,f,c
 27142  014A80  3228               	rrcf	i2___ftmul@f1+1,f,c
 27143  014A82  3227               	rrcf	i2___ftmul@f1,f,c
 27144  014A84  90D8               	bcf	status,0,c
 27145  014A86  362A               	rlcf	i2___ftmul@f2,f,c
 27146  014A88  362B               	rlcf	i2___ftmul@f2+1,f,c
 27147  014A8A  362C               	rlcf	i2___ftmul@f2+2,f,c
 27148  014A8C  2E34               	decfsz	i2___ftmul@cntr,f,c
 27149  014A8E  D7EE               	goto	i2l1590
 27150  014A90  0E09               	movlw	9
 27151  014A92  6E34               	movwf	i2___ftmul@cntr,c
 27152  014A94  A027               	btfss	i2___ftmul@f1,0,c
 27153  014A96  D006               	goto	i2l1594
 27154  014A98  502A               	movf	i2___ftmul@f2,w,c
 27155  014A9A  2631               	addwf	i2___ftmul@f3_as_product,f,c
 27156  014A9C  502B               	movf	i2___ftmul@f2+1,w,c
 27157  014A9E  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 27158  014AA0  502C               	movf	i2___ftmul@f2+2,w,c
 27159  014AA2  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 27160  014AA4                     i2l1594:
 27161  014AA4  90D8               	bcf	status,0,c
 27162  014AA6  3229               	rrcf	i2___ftmul@f1+2,f,c
 27163  014AA8  3228               	rrcf	i2___ftmul@f1+1,f,c
 27164  014AAA  3227               	rrcf	i2___ftmul@f1,f,c
 27165  014AAC  90D8               	bcf	status,0,c
 27166  014AAE  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 27167  014AB0  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 27168  014AB2  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 27169  014AB4  2E34               	decfsz	i2___ftmul@cntr,f,c
 27170  014AB6  D7EE               	goto	i2l1593
 27171  014AB8  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 27172  014ABC  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 27173  014AC0  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 27174  014AC4  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 27175  014AC8  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 27176  014ACC  EC5C  F0A8         	call	i2___ftpack	;wreg free
 27177  014AD0  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 27178  014AD4  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 27179  014AD8  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 27180  014ADC  0012               	return	
 27181  014ADE                     __end_ofi2___ftmul:
 27182                           	opt stack 0
 27183                           tosu	equ	0xFFF
 27184                           tosh	equ	0xFFE
 27185                           tosl	equ	0xFFD
 27186                           pclatu	equ	0xFFB
 27187                           pclath	equ	0xFFA
 27188                           tblptru	equ	0xFF8
 27189                           tblptrh	equ	0xFF7
 27190                           tblptrl	equ	0xFF6
 27191                           tablat	equ	0xFF5
 27192                           prodh	equ	0xFF4
 27193                           prodl	equ	0xFF3
 27194                           intcon	equ	0xFF2
 27195                           postinc0	equ	0xFEE
 27196                           fsr0h	equ	0xFEA
 27197                           fsr0l	equ	0xFE9
 27198                           wreg	equ	0xFE8
 27199                           indf1	equ	0xFE7
 27200                           postdec1	equ	0xFE5
 27201                           fsr1h	equ	0xFE2
 27202                           fsr1l	equ	0xFE1
 27203                           bsr	equ	0xFE0
 27204                           indf2	equ	0xFDF
 27205                           postinc2	equ	0xFDE
 27206                           postdec2	equ	0xFDD
 27207                           fsr2h	equ	0xFDA
 27208                           fsr2l	equ	0xFD9
 27209                           status	equ	0xFD8
 27210                           
 27211 ;; *************** function i2___ftadd *****************
 27212 ;; Defined at:
 27213 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 27214 ;; Parameters:    Size  Location     Type
 27215 ;;  f1              3   63[COMRAM] float 
 27216 ;;  f2              3   66[COMRAM] float 
 27217 ;; Auto vars:     Size  Location     Type
 27218 ;;  __ftadd         1   74[COMRAM] unsigned char 
 27219 ;;  __ftadd         1   73[COMRAM] unsigned char 
 27220 ;;  __ftadd         1   72[COMRAM] unsigned char 
 27221 ;; Return value:  Size  Location     Type
 27222 ;;                  3   63[COMRAM] float 
 27223 ;; Registers used:
 27224 ;;		wreg, status,2, status,0, cstack
 27225 ;; Tracked objects:
 27226 ;;		On entry : 0/0
 27227 ;;		On exit  : 0/0
 27228 ;;		Unchanged: 0/0
 27229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27230 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27231 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27232 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27233 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27234 ;;Total ram usage:       12 bytes
 27235 ;; Hardware stack levels used:    1
 27236 ;; Hardware stack levels required when called:    1
 27237 ;; This function calls:
 27238 ;;		i2___ftpack
 27239 ;; This function is called by:
 27240 ;;		_peakToRMS
 27241 ;;		_ADC_postProcessingCallback
 27242 ;;		_acos
 27243 ;;		_asin
 27244 ;;		_atan
 27245 ;;		_eval_poly
 27246 ;;		_sin
 27247 ;;		_floor
 27248 ;;		i2_printf
 27249 ;;		i2___ftsub
 27250 ;; This function uses a non-reentrant model
 27251 ;;
 27252                           
 27253                           	psect	text108
 27254  013DF6                     __ptext108:
 27255                           	opt stack 0
 27256  013DF6                     i2___ftadd:
 27257                           	opt stack 13
 27258                           
 27259                           ;incstack = 0
 27260  013DF6  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 27261  013DFA  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 27262  013DFC  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 27263  013DFE  3441               	rlcf	i2___ftadd@f1+1,w,c
 27264  013E00  3646               	rlcf	??i2___ftadd& (0+255),f,c
 27265  013E02  E301               	bnc	u1478_41
 27266  013E04  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 27267  013E06                     u1478_41:
 27268  013E06  5046               	movf	??i2___ftadd,w,c
 27269  013E08  6E4B               	movwf	i2___ftadd@exp1,c
 27270  013E0A  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 27271  013E0E  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 27272  013E10  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 27273  013E12  3444               	rlcf	i2___ftadd@f2+1,w,c
 27274  013E14  3646               	rlcf	??i2___ftadd& (0+255),f,c
 27275  013E16  E301               	bnc	u1479_41
 27276  013E18  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 27277  013E1A                     u1479_41:
 27278  013E1A  5046               	movf	??i2___ftadd,w,c
 27279  013E1C  6E4A               	movwf	i2___ftadd@exp2,c
 27280  013E1E  504B               	movf	i2___ftadd@exp1,w,c
 27281  013E20  B4D8               	btfsc	status,2,c
 27282  013E22  D00B               	goto	i2u1482_40
 27283  013E24  504A               	movf	i2___ftadd@exp2,w,c
 27284  013E26  5C4B               	subwf	i2___ftadd@exp1,w,c
 27285  013E28  B0D8               	btfsc	status,0,c
 27286  013E2A  D00E               	goto	i2l1522
 27287  013E2C  504B               	movf	i2___ftadd@exp1,w,c
 27288  013E2E  0800               	sublw	0
 27289  013E30  244A               	addwf	i2___ftadd@exp2,w,c
 27290  013E32  6E46               	movwf	??i2___ftadd& (0+255),c
 27291  013E34  0E18               	movlw	24
 27292  013E36  6446               	cpfsgt	??i2___ftadd,c
 27293  013E38  D007               	goto	i2l1522
 27294  013E3A                     i2u1482_40:
 27295  013E3A  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 27296  013E3E  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 27297  013E42  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 27298  013E46  0012               	return	
 27299  013E48                     i2l1522:
 27300  013E48  504A               	movf	i2___ftadd@exp2,w,c
 27301  013E4A  B4D8               	btfsc	status,2,c
 27302  013E4C  D00B               	goto	i2u1485_40
 27303  013E4E  504B               	movf	i2___ftadd@exp1,w,c
 27304  013E50  5C4A               	subwf	i2___ftadd@exp2,w,c
 27305  013E52  B0D8               	btfsc	status,0,c
 27306  013E54  D00E               	goto	i2l1526
 27307  013E56  504A               	movf	i2___ftadd@exp2,w,c
 27308  013E58  0800               	sublw	0
 27309  013E5A  244B               	addwf	i2___ftadd@exp1,w,c
 27310  013E5C  6E46               	movwf	??i2___ftadd& (0+255),c
 27311  013E5E  0E18               	movlw	24
 27312  013E60  6446               	cpfsgt	??i2___ftadd,c
 27313  013E62  D007               	goto	i2l1526
 27314  013E64                     i2u1485_40:
 27315  013E64  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 27316  013E68  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 27317  013E6C  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 27318  013E70  0012               	return	
 27319  013E72                     i2l1526:
 27320  013E72  0E06               	movlw	6
 27321  013E74  6E49               	movwf	i2___ftadd@sign,c
 27322  013E76  BE42               	btfsc	i2___ftadd@f1+2,7,c
 27323  013E78  8E49               	bsf	i2___ftadd@sign,7,c
 27324  013E7A  BE45               	btfsc	i2___ftadd@f2+2,7,c
 27325  013E7C  8C49               	bsf	i2___ftadd@sign,6,c
 27326  013E7E  8E41               	bsf	i2___ftadd@f1+1,7,c
 27327  013E80  0EFF               	movlw	255
 27328  013E82  1640               	andwf	i2___ftadd@f1,f,c
 27329  013E84  0EFF               	movlw	255
 27330  013E86  1641               	andwf	i2___ftadd@f1+1,f,c
 27331  013E88  0E00               	movlw	0
 27332  013E8A  1642               	andwf	i2___ftadd@f1+2,f,c
 27333  013E8C  8E44               	bsf	i2___ftadd@f2+1,7,c
 27334  013E8E  0EFF               	movlw	255
 27335  013E90  1643               	andwf	i2___ftadd@f2,f,c
 27336  013E92  0EFF               	movlw	255
 27337  013E94  1644               	andwf	i2___ftadd@f2+1,f,c
 27338  013E96  0E00               	movlw	0
 27339  013E98  1645               	andwf	i2___ftadd@f2+2,f,c
 27340  013E9A  504A               	movf	i2___ftadd@exp2,w,c
 27341  013E9C  5C4B               	subwf	i2___ftadd@exp1,w,c
 27342  013E9E  B0D8               	btfsc	status,0,c
 27343  013EA0  D01B               	goto	i2l1531
 27344  013EA2                     i2u1488_40:
 27345  013EA2  90D8               	bcf	status,0,c
 27346  013EA4  3643               	rlcf	i2___ftadd@f2,f,c
 27347  013EA6  3644               	rlcf	i2___ftadd@f2+1,f,c
 27348  013EA8  3645               	rlcf	i2___ftadd@f2+2,f,c
 27349  013EAA  064A               	decf	i2___ftadd@exp2,f,c
 27350  013EAC  504B               	movf	i2___ftadd@exp1,w,c
 27351  013EAE  184A               	xorwf	i2___ftadd@exp2,w,c
 27352  013EB0  B4D8               	btfsc	status,2,c
 27353  013EB2  D00D               	goto	i2l1536
 27354  013EB4  0649               	decf	i2___ftadd@sign,f,c
 27355  013EB6  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 27356  013EBA  0E07               	movlw	7
 27357  013EBC  1646               	andwf	??i2___ftadd,f,c
 27358  013EBE  B4D8               	btfsc	status,2,c
 27359  013EC0  D006               	goto	i2l1536
 27360  013EC2  D7EF               	goto	i2u1488_40
 27361  013EC4  90D8               	bcf	status,0,c
 27362  013EC6  3242               	rrcf	i2___ftadd@f1+2,f,c
 27363  013EC8  3241               	rrcf	i2___ftadd@f1+1,f,c
 27364  013ECA  3240               	rrcf	i2___ftadd@f1,f,c
 27365  013ECC  2A4B               	incf	i2___ftadd@exp1,f,c
 27366  013ECE                     i2l1536:
 27367  013ECE  504A               	movf	i2___ftadd@exp2,w,c
 27368  013ED0  184B               	xorwf	i2___ftadd@exp1,w,c
 27369  013ED2  B4D8               	btfsc	status,2,c
 27370  013ED4  D01F               	goto	i2u1495_40
 27371  013ED6  D7F6               	goto	i2l1537
 27372  013ED8                     i2l1531:
 27373  013ED8  504B               	movf	i2___ftadd@exp1,w,c
 27374  013EDA  5C4A               	subwf	i2___ftadd@exp2,w,c
 27375  013EDC  B0D8               	btfsc	status,0,c
 27376  013EDE  D01A               	goto	i2u1495_40
 27377  013EE0                     i2u1492_40:
 27378  013EE0  90D8               	bcf	status,0,c
 27379  013EE2  3640               	rlcf	i2___ftadd@f1,f,c
 27380  013EE4  3641               	rlcf	i2___ftadd@f1+1,f,c
 27381  013EE6  3642               	rlcf	i2___ftadd@f1+2,f,c
 27382  013EE8  064B               	decf	i2___ftadd@exp1,f,c
 27383  013EEA  504B               	movf	i2___ftadd@exp1,w,c
 27384  013EEC  184A               	xorwf	i2___ftadd@exp2,w,c
 27385  013EEE  B4D8               	btfsc	status,2,c
 27386  013EF0  D00D               	goto	i2l1545
 27387  013EF2  0649               	decf	i2___ftadd@sign,f,c
 27388  013EF4  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 27389  013EF8  0E07               	movlw	7
 27390  013EFA  1646               	andwf	??i2___ftadd,f,c
 27391  013EFC  B4D8               	btfsc	status,2,c
 27392  013EFE  D006               	goto	i2l1545
 27393  013F00  D7EF               	goto	i2u1492_40
 27394  013F02  90D8               	bcf	status,0,c
 27395  013F04  3245               	rrcf	i2___ftadd@f2+2,f,c
 27396  013F06  3244               	rrcf	i2___ftadd@f2+1,f,c
 27397  013F08  3243               	rrcf	i2___ftadd@f2,f,c
 27398  013F0A  2A4A               	incf	i2___ftadd@exp2,f,c
 27399  013F0C                     i2l1545:
 27400  013F0C  504A               	movf	i2___ftadd@exp2,w,c
 27401  013F0E  184B               	xorwf	i2___ftadd@exp1,w,c
 27402  013F10  A4D8               	btfss	status,2,c
 27403  013F12  D7F7               	goto	i2l1546
 27404  013F14                     i2u1495_40:
 27405  013F14  AE49               	btfss	i2___ftadd@sign,7,c
 27406  013F16  D00C               	goto	i2l1548
 27407  013F18  0EFF               	movlw	255
 27408  013F1A  1A40               	xorwf	i2___ftadd@f1,f,c
 27409  013F1C  0EFF               	movlw	255
 27410  013F1E  1A41               	xorwf	i2___ftadd@f1+1,f,c
 27411  013F20  0EFF               	movlw	255
 27412  013F22  1A42               	xorwf	i2___ftadd@f1+2,f,c
 27413  013F24  0E01               	movlw	1
 27414  013F26  2640               	addwf	i2___ftadd@f1,f,c
 27415  013F28  0E00               	movlw	0
 27416  013F2A  2241               	addwfc	i2___ftadd@f1+1,f,c
 27417  013F2C  0E00               	movlw	0
 27418  013F2E  2242               	addwfc	i2___ftadd@f1+2,f,c
 27419  013F30                     i2l1548:
 27420  013F30  AC49               	btfss	i2___ftadd@sign,6,c
 27421  013F32  D00C               	goto	i2l1549
 27422  013F34  0EFF               	movlw	255
 27423  013F36  1A43               	xorwf	i2___ftadd@f2,f,c
 27424  013F38  0EFF               	movlw	255
 27425  013F3A  1A44               	xorwf	i2___ftadd@f2+1,f,c
 27426  013F3C  0EFF               	movlw	255
 27427  013F3E  1A45               	xorwf	i2___ftadd@f2+2,f,c
 27428  013F40  0E01               	movlw	1
 27429  013F42  2643               	addwf	i2___ftadd@f2,f,c
 27430  013F44  0E00               	movlw	0
 27431  013F46  2244               	addwfc	i2___ftadd@f2+1,f,c
 27432  013F48  0E00               	movlw	0
 27433  013F4A  2245               	addwfc	i2___ftadd@f2+2,f,c
 27434  013F4C                     i2l1549:
 27435  013F4C  0E00               	movlw	0
 27436  013F4E  6E49               	movwf	i2___ftadd@sign,c
 27437  013F50  5040               	movf	i2___ftadd@f1,w,c
 27438  013F52  2643               	addwf	i2___ftadd@f2,f,c
 27439  013F54  5041               	movf	i2___ftadd@f1+1,w,c
 27440  013F56  2244               	addwfc	i2___ftadd@f2+1,f,c
 27441  013F58  5042               	movf	i2___ftadd@f1+2,w,c
 27442  013F5A  2245               	addwfc	i2___ftadd@f2+2,f,c
 27443  013F5C  AE45               	btfss	i2___ftadd@f2+2,7,c
 27444  013F5E  D00E               	goto	i2l1550
 27445  013F60  0EFF               	movlw	255
 27446  013F62  1A43               	xorwf	i2___ftadd@f2,f,c
 27447  013F64  0EFF               	movlw	255
 27448  013F66  1A44               	xorwf	i2___ftadd@f2+1,f,c
 27449  013F68  0EFF               	movlw	255
 27450  013F6A  1A45               	xorwf	i2___ftadd@f2+2,f,c
 27451  013F6C  0E01               	movlw	1
 27452  013F6E  2643               	addwf	i2___ftadd@f2,f,c
 27453  013F70  0E00               	movlw	0
 27454  013F72  2244               	addwfc	i2___ftadd@f2+1,f,c
 27455  013F74  0E00               	movlw	0
 27456  013F76  2245               	addwfc	i2___ftadd@f2+2,f,c
 27457  013F78  0E01               	movlw	1
 27458  013F7A  6E49               	movwf	i2___ftadd@sign,c
 27459  013F7C                     i2l1550:
 27460  013F7C  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 27461  013F80  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 27462  013F84  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 27463  013F88  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 27464  013F8C  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 27465  013F90  EC5C  F0A8         	call	i2___ftpack	;wreg free
 27466  013F94  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 27467  013F98  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 27468  013F9C  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 27469  013FA0  0012               	return	
 27470  013FA2                     __end_ofi2___ftadd:
 27471                           	opt stack 0
 27472                           tosu	equ	0xFFF
 27473                           tosh	equ	0xFFE
 27474                           tosl	equ	0xFFD
 27475                           pclatu	equ	0xFFB
 27476                           pclath	equ	0xFFA
 27477                           tblptru	equ	0xFF8
 27478                           tblptrh	equ	0xFF7
 27479                           tblptrl	equ	0xFF6
 27480                           tablat	equ	0xFF5
 27481                           prodh	equ	0xFF4
 27482                           prodl	equ	0xFF3
 27483                           intcon	equ	0xFF2
 27484                           postinc0	equ	0xFEE
 27485                           fsr0h	equ	0xFEA
 27486                           fsr0l	equ	0xFE9
 27487                           wreg	equ	0xFE8
 27488                           indf1	equ	0xFE7
 27489                           postdec1	equ	0xFE5
 27490                           fsr1h	equ	0xFE2
 27491                           fsr1l	equ	0xFE1
 27492                           bsr	equ	0xFE0
 27493                           indf2	equ	0xFDF
 27494                           postinc2	equ	0xFDE
 27495                           postdec2	equ	0xFDD
 27496                           fsr2h	equ	0xFDA
 27497                           fsr2l	equ	0xFD9
 27498                           status	equ	0xFD8
 27499                           
 27500 ;; *************** function ___lwtoft *****************
 27501 ;; Defined at:
 27502 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 27503 ;; Parameters:    Size  Location     Type
 27504 ;;  c               2    8[COMRAM] unsigned int 
 27505 ;; Auto vars:     Size  Location     Type
 27506 ;;		None
 27507 ;; Return value:  Size  Location     Type
 27508 ;;                  3    8[COMRAM] float 
 27509 ;; Registers used:
 27510 ;;		wreg, status,2, status,0, cstack
 27511 ;; Tracked objects:
 27512 ;;		On entry : 0/0
 27513 ;;		On exit  : 0/0
 27514 ;;		Unchanged: 0/0
 27515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27516 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27520 ;;Total ram usage:        3 bytes
 27521 ;; Hardware stack levels used:    1
 27522 ;; Hardware stack levels required when called:    1
 27523 ;; This function calls:
 27524 ;;		i2___ftpack
 27525 ;; This function is called by:
 27526 ;;		_ADC_postProcessingCallback
 27527 ;; This function uses a non-reentrant model
 27528 ;;
 27529                           
 27530                           	psect	text109
 27531  016340                     __ptext109:
 27532                           	opt stack 0
 27533  016340                     ___lwtoft:
 27534                           	opt stack 14
 27535                           
 27536                           ;incstack = 0
 27537  016340  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 27538  016344  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 27539  016348  6A03               	clrf	i2___ftpack@arg+2,c
 27540  01634A  0E8E               	movlw	142
 27541  01634C  6E04               	movwf	i2___ftpack@exp,c
 27542  01634E  0E00               	movlw	0
 27543  016350  6E05               	movwf	i2___ftpack@sign,c
 27544  016352  EC5C  F0A8         	call	i2___ftpack	;wreg free
 27545  016356  C001  F009         	movff	?i2___ftpack,?___lwtoft
 27546  01635A  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 27547  01635E  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 27548  016362  0012               	return	
 27549  016364                     __end_of___lwtoft:
 27550                           	opt stack 0
 27551                           tosu	equ	0xFFF
 27552                           tosh	equ	0xFFE
 27553                           tosl	equ	0xFFD
 27554                           pclatu	equ	0xFFB
 27555                           pclath	equ	0xFFA
 27556                           tblptru	equ	0xFF8
 27557                           tblptrh	equ	0xFF7
 27558                           tblptrl	equ	0xFF6
 27559                           tablat	equ	0xFF5
 27560                           prodh	equ	0xFF4
 27561                           prodl	equ	0xFF3
 27562                           intcon	equ	0xFF2
 27563                           postinc0	equ	0xFEE
 27564                           fsr0h	equ	0xFEA
 27565                           fsr0l	equ	0xFE9
 27566                           wreg	equ	0xFE8
 27567                           indf1	equ	0xFE7
 27568                           postdec1	equ	0xFE5
 27569                           fsr1h	equ	0xFE2
 27570                           fsr1l	equ	0xFE1
 27571                           bsr	equ	0xFE0
 27572                           indf2	equ	0xFDF
 27573                           postinc2	equ	0xFDE
 27574                           postdec2	equ	0xFDD
 27575                           fsr2h	equ	0xFDA
 27576                           fsr2l	equ	0xFD9
 27577                           status	equ	0xFD8
 27578                           
 27579 ;; *************** function i2___ftpack *****************
 27580 ;; Defined at:
 27581 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 27582 ;; Parameters:    Size  Location     Type
 27583 ;;  arg             3    0[COMRAM] unsigned um
 27584 ;;  exp             1    3[COMRAM] unsigned char 
 27585 ;;  sign            1    4[COMRAM] unsigned char 
 27586 ;; Auto vars:     Size  Location     Type
 27587 ;;		None
 27588 ;; Return value:  Size  Location     Type
 27589 ;;                  3    0[COMRAM] float 
 27590 ;; Registers used:
 27591 ;;		wreg, status,2, status,0
 27592 ;; Tracked objects:
 27593 ;;		On entry : 0/0
 27594 ;;		On exit  : 0/0
 27595 ;;		Unchanged: 0/0
 27596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27597 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27599 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27600 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27601 ;;Total ram usage:        8 bytes
 27602 ;; Hardware stack levels used:    1
 27603 ;; This function calls:
 27604 ;;		Nothing
 27605 ;; This function is called by:
 27606 ;;		___altoft
 27607 ;;		___lwtoft
 27608 ;;		i2___ftadd
 27609 ;;		i2___ftdiv
 27610 ;;		i2___ftmul
 27611 ;;		i2___lltoft
 27612 ;; This function uses a non-reentrant model
 27613 ;;
 27614                           
 27615                           	psect	text110
 27616  0150B8                     __ptext110:
 27617                           	opt stack 0
 27618  0150B8                     i2___ftpack:
 27619                           	opt stack 13
 27620                           
 27621                           ;incstack = 0
 27622  0150B8  5004               	movf	i2___ftpack@exp,w,c
 27623  0150BA  B4D8               	btfsc	status,2,c
 27624  0150BC  D005               	goto	i2u1471_40
 27625  0150BE  5001               	movf	i2___ftpack@arg,w,c
 27626  0150C0  1002               	iorwf	i2___ftpack@arg+1,w,c
 27627  0150C2  1003               	iorwf	i2___ftpack@arg+2,w,c
 27628  0150C4  A4D8               	btfss	status,2,c
 27629  0150C6  D00C               	goto	i2l1491
 27630  0150C8                     i2u1471_40:
 27631  0150C8  0E00               	movlw	0
 27632  0150CA  6E01               	movwf	?i2___ftpack,c
 27633  0150CC  0E00               	movlw	0
 27634  0150CE  6E02               	movwf	?i2___ftpack+1,c
 27635  0150D0  0E00               	movlw	0
 27636  0150D2  6E03               	movwf	?i2___ftpack+2,c
 27637  0150D4  0012               	return	
 27638  0150D6  2A04               	incf	i2___ftpack@exp,f,c
 27639  0150D8  90D8               	bcf	status,0,c
 27640  0150DA  3203               	rrcf	i2___ftpack@arg+2,f,c
 27641  0150DC  3202               	rrcf	i2___ftpack@arg+1,f,c
 27642  0150DE  3201               	rrcf	i2___ftpack@arg,f,c
 27643  0150E0                     i2l1491:
 27644  0150E0  0E00               	movlw	0
 27645  0150E2  1401               	andwf	i2___ftpack@arg,w,c
 27646  0150E4  6E06               	movwf	??i2___ftpack& (0+255),c
 27647  0150E6  0E00               	movlw	0
 27648  0150E8  1402               	andwf	i2___ftpack@arg+1,w,c
 27649  0150EA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 27650  0150EC  0EFE               	movlw	254
 27651  0150EE  1403               	andwf	i2___ftpack@arg+2,w,c
 27652  0150F0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 27653  0150F2  5006               	movf	??i2___ftpack,w,c
 27654  0150F4  1007               	iorwf	??i2___ftpack+1,w,c
 27655  0150F6  1008               	iorwf	??i2___ftpack+2,w,c
 27656  0150F8  B4D8               	btfsc	status,2,c
 27657  0150FA  D00C               	goto	i2l1494
 27658  0150FC  D7EC               	goto	i2l1492
 27659  0150FE  2A04               	incf	i2___ftpack@exp,f,c
 27660  015100  0E01               	movlw	1
 27661  015102  2601               	addwf	i2___ftpack@arg,f,c
 27662  015104  0E00               	movlw	0
 27663  015106  2202               	addwfc	i2___ftpack@arg+1,f,c
 27664  015108  0E00               	movlw	0
 27665  01510A  2203               	addwfc	i2___ftpack@arg+2,f,c
 27666  01510C  90D8               	bcf	status,0,c
 27667  01510E  3203               	rrcf	i2___ftpack@arg+2,f,c
 27668  015110  3202               	rrcf	i2___ftpack@arg+1,f,c
 27669  015112  3201               	rrcf	i2___ftpack@arg,f,c
 27670  015114                     i2l1494:
 27671  015114  0E00               	movlw	0
 27672  015116  1401               	andwf	i2___ftpack@arg,w,c
 27673  015118  6E06               	movwf	??i2___ftpack& (0+255),c
 27674  01511A  0E00               	movlw	0
 27675  01511C  1402               	andwf	i2___ftpack@arg+1,w,c
 27676  01511E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 27677  015120  0EFF               	movlw	255
 27678  015122  1403               	andwf	i2___ftpack@arg+2,w,c
 27679  015124  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 27680  015126  5006               	movf	??i2___ftpack,w,c
 27681  015128  1007               	iorwf	??i2___ftpack+1,w,c
 27682  01512A  1008               	iorwf	??i2___ftpack+2,w,c
 27683  01512C  B4D8               	btfsc	status,2,c
 27684  01512E  D006               	goto	i2l1497
 27685  015130  D7E6               	goto	i2l1495
 27686  015132  0604               	decf	i2___ftpack@exp,f,c
 27687  015134  90D8               	bcf	status,0,c
 27688  015136  3601               	rlcf	i2___ftpack@arg,f,c
 27689  015138  3602               	rlcf	i2___ftpack@arg+1,f,c
 27690  01513A  3603               	rlcf	i2___ftpack@arg+2,f,c
 27691  01513C                     i2l1497:
 27692  01513C  BE02               	btfsc	i2___ftpack@arg+1,7,c
 27693  01513E  D003               	goto	i2u1475_40
 27694  015140  0E02               	movlw	2
 27695  015142  6004               	cpfslt	i2___ftpack@exp,c
 27696  015144  D7F6               	goto	i2l1498
 27697  015146                     i2u1475_40:
 27698  015146  A004               	btfss	i2___ftpack@exp,0,c
 27699  015148  9E02               	bcf	i2___ftpack@arg+1,7,c
 27700  01514A  90D8               	bcf	status,0,c
 27701  01514C  3204               	rrcf	i2___ftpack@exp,f,c
 27702  01514E  5004               	movf	i2___ftpack@exp,w,c
 27703  015150  1203               	iorwf	i2___ftpack@arg+2,f,c
 27704  015152  5005               	movf	i2___ftpack@sign,w,c
 27705  015154  A4D8               	btfss	status,2,c
 27706  015156  8E03               	bsf	i2___ftpack@arg+2,7,c
 27707  015158  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 27708  01515C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 27709  015160  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 27710  015164  0012               	return	
 27711  015166                     __end_ofi2___ftpack:
 27712                           	opt stack 0
 27713                           tosu	equ	0xFFF
 27714                           tosh	equ	0xFFE
 27715                           tosl	equ	0xFFD
 27716                           pclatu	equ	0xFFB
 27717                           pclath	equ	0xFFA
 27718                           tblptru	equ	0xFF8
 27719                           tblptrh	equ	0xFF7
 27720                           tblptrl	equ	0xFF6
 27721                           tablat	equ	0xFF5
 27722                           prodh	equ	0xFF4
 27723                           prodl	equ	0xFF3
 27724                           intcon	equ	0xFF2
 27725                           postinc0	equ	0xFEE
 27726                           fsr0h	equ	0xFEA
 27727                           fsr0l	equ	0xFE9
 27728                           wreg	equ	0xFE8
 27729                           indf1	equ	0xFE7
 27730                           postdec1	equ	0xFE5
 27731                           fsr1h	equ	0xFE2
 27732                           fsr1l	equ	0xFE1
 27733                           bsr	equ	0xFE0
 27734                           indf2	equ	0xFDF
 27735                           postinc2	equ	0xFDE
 27736                           postdec2	equ	0xFDD
 27737                           fsr2h	equ	0xFDA
 27738                           fsr2l	equ	0xFD9
 27739                           status	equ	0xFD8
 27740                           
 27741 ;; *************** function _ADCC_GetConversionResult *****************
 27742 ;; Defined at:
 27743 ;;		line 130 in file "mcc_generated_files/adcc.c"
 27744 ;; Parameters:    Size  Location     Type
 27745 ;;		None
 27746 ;; Auto vars:     Size  Location     Type
 27747 ;;		None
 27748 ;; Return value:  Size  Location     Type
 27749 ;;                  2    0[COMRAM] unsigned int 
 27750 ;; Registers used:
 27751 ;;		wreg, status,2, status,0
 27752 ;; Tracked objects:
 27753 ;;		On entry : 0/0
 27754 ;;		On exit  : 0/0
 27755 ;;		Unchanged: 0/0
 27756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27761 ;;Total ram usage:        4 bytes
 27762 ;; Hardware stack levels used:    1
 27763 ;; This function calls:
 27764 ;;		Nothing
 27765 ;; This function is called by:
 27766 ;;		_ADC_postProcessingCallback
 27767 ;; This function uses a non-reentrant model
 27768 ;;
 27769                           
 27770                           	psect	text111
 27771  0163F8                     __ptext111:
 27772                           	opt stack 0
 27773  0163F8                     _ADCC_GetConversionResult:
 27774                           	opt stack 15
 27775                           
 27776                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 27777                           
 27778                           ;incstack = 0
 27779  0163F8  5064               	movf	3940,w,c	;volatile
 27780  0163FA  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 27781  0163FC  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 27782  0163FE  5063               	movf	3939,w,c	;volatile
 27783  016400  2403               	addwf	??_ADCC_GetConversionResult,w,c
 27784  016402  6E01               	movwf	?_ADCC_GetConversionResult,c
 27785  016404  0E00               	movlw	0
 27786  016406  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 27787  016408  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 27788  01640A  0012               	return	
 27789  01640C                     __end_of_ADCC_GetConversionResult:
 27790                           	opt stack 0
 27791                           tosu	equ	0xFFF
 27792                           tosh	equ	0xFFE
 27793                           tosl	equ	0xFFD
 27794                           pclatu	equ	0xFFB
 27795                           pclath	equ	0xFFA
 27796                           tblptru	equ	0xFF8
 27797                           tblptrh	equ	0xFF7
 27798                           tblptrl	equ	0xFF6
 27799                           tablat	equ	0xFF5
 27800                           prodh	equ	0xFF4
 27801                           prodl	equ	0xFF3
 27802                           intcon	equ	0xFF2
 27803                           postinc0	equ	0xFEE
 27804                           fsr0h	equ	0xFEA
 27805                           fsr0l	equ	0xFE9
 27806                           wreg	equ	0xFE8
 27807                           indf1	equ	0xFE7
 27808                           postdec1	equ	0xFE5
 27809                           fsr1h	equ	0xFE2
 27810                           fsr1l	equ	0xFE1
 27811                           bsr	equ	0xFE0
 27812                           indf2	equ	0xFDF
 27813                           postinc2	equ	0xFDE
 27814                           postdec2	equ	0xFDD
 27815                           fsr2h	equ	0xFDA
 27816                           fsr2l	equ	0xFD9
 27817                           status	equ	0xFD8
 27818                           tosu	equ	0xFFF
 27819                           tosh	equ	0xFFE
 27820                           tosl	equ	0xFFD
 27821                           pclatu	equ	0xFFB
 27822                           pclath	equ	0xFFA
 27823                           tblptru	equ	0xFF8
 27824                           tblptrh	equ	0xFF7
 27825                           tblptrl	equ	0xFF6
 27826                           tablat	equ	0xFF5
 27827                           prodh	equ	0xFF4
 27828                           prodl	equ	0xFF3
 27829                           intcon	equ	0xFF2
 27830                           postinc0	equ	0xFEE
 27831                           fsr0h	equ	0xFEA
 27832                           fsr0l	equ	0xFE9
 27833                           wreg	equ	0xFE8
 27834                           indf1	equ	0xFE7
 27835                           postdec1	equ	0xFE5
 27836                           fsr1h	equ	0xFE2
 27837                           fsr1l	equ	0xFE1
 27838                           bsr	equ	0xFE0
 27839                           indf2	equ	0xFDF
 27840                           postinc2	equ	0xFDE
 27841                           postdec2	equ	0xFDD
 27842                           fsr2h	equ	0xFDA
 27843                           fsr2l	equ	0xFD9
 27844                           status	equ	0xFD8
 27845                           
 27846                           	psect	text112
 27847  000000                     __ptext112:
 27848                           	opt stack 0
 27849                           tosu	equ	0xFFF
 27850                           tosh	equ	0xFFE
 27851                           tosl	equ	0xFFD
 27852                           pclatu	equ	0xFFB
 27853                           pclath	equ	0xFFA
 27854                           tblptru	equ	0xFF8
 27855                           tblptrh	equ	0xFF7
 27856                           tblptrl	equ	0xFF6
 27857                           tablat	equ	0xFF5
 27858                           prodh	equ	0xFF4
 27859                           prodl	equ	0xFF3
 27860                           intcon	equ	0xFF2
 27861                           postinc0	equ	0xFEE
 27862                           fsr0h	equ	0xFEA
 27863                           fsr0l	equ	0xFE9
 27864                           wreg	equ	0xFE8
 27865                           indf1	equ	0xFE7
 27866                           postdec1	equ	0xFE5
 27867                           fsr1h	equ	0xFE2
 27868                           fsr1l	equ	0xFE1
 27869                           bsr	equ	0xFE0
 27870                           indf2	equ	0xFDF
 27871                           postinc2	equ	0xFDE
 27872                           postdec2	equ	0xFDD
 27873                           fsr2h	equ	0xFDA
 27874                           fsr2l	equ	0xFD9
 27875                           status	equ	0xFD8
 27876                           
 27877                           	psect	rparam
 27878  0000                     tosu	equ	0xFFF
 27879                           tosh	equ	0xFFE
 27880                           tosl	equ	0xFFD
 27881                           pclatu	equ	0xFFB
 27882                           pclath	equ	0xFFA
 27883                           tblptru	equ	0xFF8
 27884                           tblptrh	equ	0xFF7
 27885                           tblptrl	equ	0xFF6
 27886                           tablat	equ	0xFF5
 27887                           prodh	equ	0xFF4
 27888                           prodl	equ	0xFF3
 27889                           intcon	equ	0xFF2
 27890                           postinc0	equ	0xFEE
 27891                           fsr0h	equ	0xFEA
 27892                           fsr0l	equ	0xFE9
 27893                           wreg	equ	0xFE8
 27894                           indf1	equ	0xFE7
 27895                           postdec1	equ	0xFE5
 27896                           fsr1h	equ	0xFE2
 27897                           fsr1l	equ	0xFE1
 27898                           bsr	equ	0xFE0
 27899                           indf2	equ	0xFDF
 27900                           postinc2	equ	0xFDE
 27901                           postdec2	equ	0xFDD
 27902                           fsr2h	equ	0xFDA
 27903                           fsr2l	equ	0xFD9
 27904                           status	equ	0xFD8
 27905                           
 27906                           	psect	temp
 27907  00005F                     btemp:
 27908                           	opt stack 0
 27909  00005F                     	ds	1
 27910  0000                     int$flags	set	btemp
 27911  0000                     wtemp6	set	btemp+1
 27912                           tosu	equ	0xFFF
 27913                           tosh	equ	0xFFE
 27914                           tosl	equ	0xFFD
 27915                           pclatu	equ	0xFFB
 27916                           pclath	equ	0xFFA
 27917                           tblptru	equ	0xFF8
 27918                           tblptrh	equ	0xFF7
 27919                           tblptrl	equ	0xFF6
 27920                           tablat	equ	0xFF5
 27921                           prodh	equ	0xFF4
 27922                           prodl	equ	0xFF3
 27923                           intcon	equ	0xFF2
 27924                           postinc0	equ	0xFEE
 27925                           fsr0h	equ	0xFEA
 27926                           fsr0l	equ	0xFE9
 27927                           wreg	equ	0xFE8
 27928                           indf1	equ	0xFE7
 27929                           postdec1	equ	0xFE5
 27930                           fsr1h	equ	0xFE2
 27931                           fsr1l	equ	0xFE1
 27932                           bsr	equ	0xFE0
 27933                           indf2	equ	0xFDF
 27934                           postinc2	equ	0xFDE
 27935                           postdec2	equ	0xFDD
 27936                           fsr2h	equ	0xFDA
 27937                           fsr2l	equ	0xFD9
 27938                           status	equ	0xFD8


Data Sizes:
    Strings     3508
    Constant    210
    Data        14
    BSS         333
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    104     158
    BANK1           256    185     223
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_77(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_77(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_77(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_77(CODE[25]), line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_88(CODE[5]), STR_86(CODE[14]), STR_84(CODE[16]), STR_75(CODE[13]), 
		 -> STR_73(CODE[12]), STR_71(CODE[16]), STR_69(CODE[15]), STR_67(CODE[15]), 
		 -> STR_65(CODE[21]), STR_63(CODE[21]), STR_61(CODE[26]), STR_59(CODE[14]), 
		 -> STR_57(CODE[13]), STR_55(CODE[18]), STR_53(CODE[15]), STR_51(CODE[16]), 
		 -> STR_48(CODE[4]), STR_47(CODE[6]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1509
		 -> STR_94(CODE[30]), STR_93(CODE[23]), STR_92(CODE[39]), STR_91(CODE[30]), 
		 -> STR_90(CODE[33]), STR_89(CODE[1509]), STR_87(CODE[53]), STR_85(CODE[58]), 
		 -> STR_83(CODE[71]), STR_82(CODE[63]), STR_81(CODE[37]), STR_80(CODE[46]), 
		 -> STR_79(CODE[102]), STR_78(CODE[86]), STR_76(CODE[25]), STR_74(CODE[42]), 
		 -> STR_72(CODE[41]), STR_70(CODE[40]), STR_68(CODE[56]), STR_66(CODE[34]), 
		 -> STR_64(CODE[34]), STR_62(CODE[32]), STR_60(CODE[37]), STR_58(CODE[56]), 
		 -> STR_56(CODE[34]), STR_54(CODE[34]), STR_52(CODE[35]), STR_50(CODE[47]), 
		 -> STR_49(CODE[17]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  660871
                                            183 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   83570
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  397483
                                            174 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       14    12      2  396755
                                            160 BANK1     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   94619
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   94619
                                            142 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   83570
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3733
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4401
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   83570
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    37      8   83570
                                            100 BANK1     42    34      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18366
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   18087
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3878
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9561
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7384
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6638
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  343669
                                             86 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   66126
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   66126
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13741
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13246
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  277303
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         16    16      0  277303
                                             70 BANK0     16    16      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  189961
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   91105
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   83414
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   17495
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   42301
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   64973
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   60281
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6906
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12419
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18610
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7746
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6259
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      DF       7       87.1%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     68      9E       5       98.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2DB       8        0.0%
DATA                 0      0     2DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 01 22:42:56 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 64A6  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 63D6                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 64FC                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 50B8  
               __end_of_heartbeatTimerCallback 6096                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 5CC4  
                                 ___ftadd@sign 0134                                            l370 5FC2  
                                          l374 5F0A                                            l375 5F08  
                                          l367 5F9A                                            l368 5F98  
                                          l377 5F1E                                            l378 5F44  
                                          l379 5F42                                            l900 460C  
                                          l902 4648                                            l903 462C  
                                          l905 4690                                            l930 2BAA  
                                          l906 4662                                            l931 2C7C  
                                          l940 2DA2                                            l932 2BC2  
                                          l941 2CAC                                            l933 2BDA  
                                          l861 585A                                            l950 2DBA  
                                          l942 2CC4                                            l934 2BF2  
                                          l951 2EC8                                            l943 2CDC  
                                          l935 2C0A                                            l952 2DD2  
                                          l944 2CF4                                            l936 2C22  
                                          l953 2DEA                                            l945 2D0C  
                                          l929 2C52                                            l937 2C3A  
                                          l954 2E02                                            l938 2D6C  
                                          l946 2D24                                            l955 2E1A  
                                          l947 2D3C                                            l939 2C94  
                                          l956 2E32                                            l948 2D54  
                                          l949 2E92                                            l957 2E4A  
                                          l958 2E62                                            l959 2E7A  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00D1                                            _Vpk 00D4  
                                          _sin 3662                     currentMeasuredToPeak@Angle 0076  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000            __size_of_ADC_postProcessingCallback 0552  
                                 __CFG_ZCD$OFF 000000                                   ___ftdiv@cntr 0140  
                                 ___ftdiv@sign 0145                                           l1100 2646  
                                         l1021 14D0                                           l1102 270A  
                                         l1110 0064                                           l1031 1650  
                                         l1023 1548                                           l1120 00F6  
                                         l1113 0158                                           l1041 1808  
                                         l1033 16A8                                           l1130 01CE  
                                         l1122 00FA                                           l1106 000E  
                                         l1131 0210                                           l1107 0020  
                                         l1051 19A0                                           l1043 1860  
                                         l1035 1700                                           l1027 15A0  
                                         l1019 1494                                           l1124 012C  
                                         l1116 00F2                                           l1108 00E4  
                                         l1141 03DE                                           l1133 02A4  
                                         l1117 01BA                                           l1125 0118  
                                         l1109 00B8                                           l1061 1C42  
                                         l1053 1BE6                                           l1045 18AE  
                                         l1037 1758                                           l1029 15F8  
                                         l1134 030C                                           l1054 19D8  
                                         l1127 0140                                           l1063 1C9E  
                                         l1047 18FC                                           l1039 17B0  
                                         l1160 05E6                                           l1152 058C  
                                         l1136 0332                                           l1128 0152  
                                         l1056 1A92                                           l1129 0744  
                                         l1161 0720                                           l1153 04F8  
                                         l1137 0370                                           l1049 194E  
                                         l1162 0638                                           l1138 0434  
                                         l1402 4EFE                                           l1171 0856  
                                         l1155 05A6                                           l1147 049A  
                                         l1403 4EC0                                           l1092 313A  
                                         l1172 07D2                                           l1164 073A  
                                         l1156 0598                                           l1165 072C  
                                         l1405 4F32                                           l1422 5554  
                                         l1182 0888                                           l1158 05CA  
                                         l1423 555E                                           l1415 5506  
                                         l1431 589E                                           l1095 24FC  
                                         l1191 09D8                                           l1167 0794  
                                         l1159 05CE                                           l1424 556C  
                                         l1416 5516                                           l1432 5896  
                                         l1096 240C                                           l1192 0948  
                                         l1184 08A8                                           l1089 3058  
                                         l1177 086C                                           l1169 07B8  
                                         l1522 3C9C                                           l1610 47AE  
                                         l1418 5534                                           l1186 09DE  
                                         l1178 0814                                           l1531 3D2C  
                                         l1611 479E                                           l1419 552C  
                                         l1435 58B6                                           l1099 24D0  
                                         l1443 60AC                                           l1604 5FEC  
                                         l1436 58C0                                           l1428 587C  
                                         l1188 09C0                                           l1461 43D8  
                                         l1437 58CE                                           l1429 5888  
                                         l1189 08C4                                           l1550 3DD0  
                                         l1526 3CC6                                           l1462 441A  
                                         l1471 44AC                                           l1463 444A  
                                         l1623 637E                                           l1536 3D22  
                                         l1616 47D2                                           l1608 4736  
                                         l1472 44A0                                           l1545 3D60  
                                         l1537 3D18                                           l1617 47C6  
                                         l1465 4488                                           l1546 3D56  
                                         l1650 559A                                           l1466 4478  
                                         l1570 421C                                           l1491 5032  
                                         l1619 47EE                                           l1459 43BA  
                                         l1563 4162                                           l1555 4B08  
                                         l1580 52E4                                           l1492 5028  
                                         l1548 3D84                                           l1660 59C4  
                                         l1396 4E6C                                           l1581 5314  
                                         l1549 3DA0                                           l1653 55DA  
                                         l1565 418E                                           l1557 4B30  
                                         l1397 4E66                                           l1901 599E  
                                         l1494 5066                                           l1654 55E8  
                                         l1670 5C1E                                           l1566 41C8  
                                         l1590 4884                                           l1558 4B6E  
                                         l1902 598E                                           l1495 5050  
                                         l1663 59F8                                           l1671 5C12  
                                         l1575 4250                                           l1567 41F0  
                                         l1591 4894                                           l1559 4B94  
                                         l1399 4EAE                                           l1664 5A06  
                                         l1576 4244                                           l1497 508E  
                                         l1649 55A6                                           l1569 422C  
                                         l1593 48AC                                           l1913 54CE  
                                         l1498 5084                                           l1594 48BC  
                                         l1914 5466                                           l1659 59D0  
                                         l1587 482A                                           l1915 54A2  
                                         l1589 4852                                           l1598 62C2  
                         _ADCC_StartConversion 64D0                                           l1874 5E7C  
                                         l1883 5DDA                                           l1891 5D30  
                                         l1875 5E76                                           l1884 5DD0  
                                         l1892 5D2A                                           l1972 53B8  
                                         l1973 5346                                           l1877 5E96  
                                         l1974 53B0                                           l1878 5E8C  
                                         l1967 60EC                                           l1898 5952  
                                         l1899 5982                                           l9114 598E  
                                         l9060 0818                                           l9046 07D6  
                                         l9318 5346                                           l9096 09C0  
                                         ?_sin 0066                                           l9546 4EFA  
                                         l7886 5340                                           l8942 03B8  
                                         l8934 0370                                           l8870 0118  
                                         l8962 049E                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC2                                           STR_2 FFAD  
                                         STR_3 FFB6                                           l8986 0598  
                                         STR_4 F830                                           STR_6 FFAD  
                                         STR_7 FFB6                                           STR_9 FFBA  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 0180                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         u9111 3C5A                                           u9121 3C6E  
                                         u9210 3CF6                                           u9150 3C8E  
                                         u9321 4812                                           u9250 3D34  
                                         u9180 3CB8                                           u9341 483A  
                                         u9430 5538                                           u9280 3D68  
                                         u8730 501A                                           u9800 4256  
                                         u9721 4146                                           u8770 5098  
                                         u9490 58A2                                           _PLLR 007230  
                                         u9741 4172                                           u9870 44B2  
                                         _TMR6 000FAF                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                             __end_of_ADCC_ISR 62AA                                           _Irms 00CB  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 5F02  
                                         _Vrms 00C8                                           _acos 5D78  
                                         _fabs 61D8                                           _atan 3A86  
                                         _asin 33F8                                           _atoi 4E64  
                                         _main 57F0                                           _line 02C0  
                                 ___ftpack@arg 0117                                   ___ftpack@exp 011A  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                         _sqrt 3FA2                                   i2___ftadd@f1 0040  
                                 i2___ftadd@f2 0043                                           sin@f 0066  
                                 i2___ftge@ff1 002A                                           sin@y 0069  
                                 i2___ftge@ff2 002D                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              _timer5ReloadVal 01D6                                   i2___ftdiv@f1 0015  
                                 i2___ftdiv@f2 0018                                   i2___ftdiv@f3 0020  
                              __end_ofi2_scale 2B86                   __end_of_EUSART2_Transmit_ISR 613E  
                                 i2___ftneg@f1 0024                                __end_ofi2_putch 64F4  
                                __CFG_CSWEN$ON 000000                                   ___ftmul@cntr 0153  
                                 i2___ftmul@f1 0027                                   i2___ftmul@f2 002A  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                                 ___ftmul@sign 0154                                   i2___ftsub@f1 0060  
                                 i2___ftsub@f2 0063                                   i2___fttol@f1 003D  
                     __size_ofi2_EUSART2_Write 0046                                   ___fttol@exp1 0163  
                              _timer7ReloadVal 01D8                                   i2___lltoft@c 0009  
                                 ___fttol@lval 015F                                          ??_sin 005E  
                              ?_FVR_Initialize 0001                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 63DC                       ?_terminal_textAttributes 018E  
                            ??_TMR7_WriteTimer 0102                                          l10132 1A3A  
                                        l10116 19C8                                          l10134 1A92  
                                        l10126 1A06                                          l10524 45FC  
                                        l10534 4622                                          ?_acos 008E  
                                        ?_fabs 0027                                          ?_atan 0058  
                                        ?_asin 0079                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 012B                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                              __end_of___awdiv 5576                                          _ADPRE 000F5E  
                              __end_of___ftadd 3DF6                                          STR_10 FFBE  
                                        STR_11 FFF6                                          STR_12 FFC7  
                                        STR_20 FFC6                                          STR_13 FFCD  
                                        STR_21 FFCC                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_30 FFC9  
                                        STR_15 FFE5                                          STR_23 FFD8  
                                        STR_31 FFCF                                          STR_40 FAA4  
                                        STR_16 FFF1                                          STR_24 FFDE  
                                        STR_32 FFD5                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_41 FFA2                                          STR_18 FFC7  
                                        STR_42 FFAD                                          STR_26 FFEA  
                                        STR_34 FFE1                                          STR_50 FBC5  
                                        STR_43 FFB6                                          STR_19 FFFB  
                                        STR_27 FFF0                                          STR_35 FFE7  
                                        STR_51 FEF7                                          STR_28 FFF0  
                                        STR_36 FFED                                          STR_44 FF9C  
                                        STR_52 FD0E                                          STR_60 FCC4  
                              __end_of___awmod 58D8                                          STR_29 FFFB  
                                        STR_45 FFAD                                          STR_37 FFF3  
                                        STR_53 FF27                                          STR_61 FE36  
                                        STR_38 FFF3                                          STR_46 FFB6  
                                        STR_62 FDDA                                          STR_54 FD97  
                                        STR_70 FC75                                          STR_39 FFFD  
                                        STR_47 FF96                                          STR_71 FF17  
                                        STR_55 FEC3                                          STR_63 FEAE  
                                        STR_48 FFB2                                          STR_64 FD53  
                                        STR_56 FD31                                          STR_72 FC4C  
                                        STR_80 FBF4                                          _ADRPT 000F66  
                                        STR_73 FF8A                                          STR_57 FF70  
                                        STR_49 FEE6                                          STR_65 FE99  
                                        STR_81 FCE9                                          STR_90 FDB9  
                                        STR_66 FD75                                          STR_74 FC22  
                                        STR_58 FB58                                          STR_82 FAA7  
                                        STR_75 FF7D                                          STR_59 FF54  
                                        STR_67 FF36                                          STR_91 FE18  
                                        STR_83 FA60                                          STR_84 FF07  
                                        STR_76 FE50                                          STR_92 FC9D  
                                        STR_68 FB20                                          STR_69 FF45  
                                        STR_93 FE82                                          STR_77 FE69  
                                        STR_85 FAE6                                          STR_86 FF62  
                                        STR_94 FDFA                                          STR_78 FA0A  
                                        STR_95 FED5                                          STR_87 FB90  
                                        STR_79 F9A4                                          STR_88 FFA8  
                                        STR_89 F24B                                __end_of___ftdiv 4BC6  
                              __end_of___ftneg 62D0                                          u10011 471A  
                              __end_of___lldiv 55FA                                          u10100 55AA  
                                        ?_sqrt 0066                                          u10030 4754  
                                        u10130 59D4                                          u10035 474C  
                                        u10070 47D8                                          u10330 0188  
                                        u10250 004C                                          u10500 04DC  
                                        u10420 0342                                __end_of___ftmul 48F6  
                                        u10430 0382                                          u10270 009C  
                                        u11150 5E12                                          u10280 00DA  
                                        u10337 017E                                          u10257 0042  
                                        u10530 05B4                                          u11251 4AF0  
                                        u10540 05C4                                          u10460 03B8  
                                        u10380 0248                                          u11180 54E6  
                              ___awdiv@divisor 011F                                          u10277 0092  
                                        u10710 09F0                                          u10287 00D0  
                                        u11271 4B18                                          u10720 0A20  
                              __end_of___llmod 5A18                                          u10385 023E  
                              __end_of___ftsub 6016                                __end_of___fttol 4800  
                                        u10727 0A16                                          u10920 5D52  
                                        u11720 150E                                          u11900 1A3A  
                                        u10950 5378                                          u10927 5D48  
                                        u12590 4622                                          _T5CLK 000FC6  
                                        u11880 1A06                                          u11890 1A2C  
                                        _T5CON 000FC3                                          u16407 57FC  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        _T6HLT 000FB2                                          i1l213 007C  
                                        i1l215 009C                                          i1l217 00A6  
                                        i2l202 4FA6                                          i2l204 4FB2  
                                        i2l206 4FBC                                          i1l390 6134  
                                        i2l400 51B8                                          i2l402 5208  
                                        i1l626 62E8                                          i1l389 6138  
                                        i1l816 6092                                          i1l842 5B5E  
                                        i1l851 5B8E                                          i2l700 63EE  
                                        _T6TMR 000FAF                                          i1l845 5B6E  
                                        i2l374 5F50                                          i1l854 5B9E  
                                        i2l375 5F4E                                          i1l839 5B4E  
                                        i1l848 5B7E                                          i2l377 5F64  
                                        i2l378 5F8A                                          _T6RST 000FB4  
                                        i2l379 5F88                                          i2l395 5170  
                                        i2l820 228C                                          i2l396 5192  
                                        i2l821 1D6A                                          i2l397 51B4  
                                        i2l830 1F74                                          i2l823 1DA4  
                                        i2l832 20C8                                          i2l824 1E22  
                                        i2l833 2146                                          i2l825 1E84  
                                        i2l834 2288                                          i2l826 2016  
                                        i2l827 1F5A                                          i2l828 1F24  
                                        i2l829 1F4C                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 44C4  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a F230                             __end_ofsin@coeff_b F24B  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 00CE  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0127                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 61A6  
                             __end_of_TMR6_ISR 6282                               __end_of_TMR7_ISR 6172  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                                ___awtoft@sign 0122                      ??_terminal_ringBufferPull 01AE  
                              __end_of_dpowers F1A1                                          acos@x 008E  
                                        fabs@d 0027                                     i2scale@scl 003C  
                                        _floor 4CAC                                          _frexp 5700  
                                        _errno 00E6                          ?_ADCC_StartConversion 0001  
                                        _scale 22B6                                __end_of_isdigit 6386  
                                        atan@f 0058                                          atan@x 0063  
                                        atan@y 0060                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 011B                                          asin@x 0079  
                                        asin@y 0088                                          atoi@a 0130  
                                        atoi@s 012B                                          _putch 646E  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          sin@x2 006F  
                                        tablat 000FF5                               __end_ofi2___ftge 5464  
                             __end_ofi2___wmul 631C                                 ??_EUSART2_Read 0117  
                                        sqrt@a 0066                                          sqrt@i 006F  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          status 000FD8  
                                        wtemp6 0060                                __end_of_strncmp 53D4  
                              __end_of_strncpy 59B0                               __end_ofi2_fround 33F8  
               ?_INTERRUPT_InterruptManagerLow 0001                                  i2___ftdiv@exp 001F  
                           __size_ofi2___awdiv 0084                             __size_ofi2___ftadd 01AC  
                           __size_ofi2___awmod 0070                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0042                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 1456                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 64B4         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 64A6                                _TMR5_Initialize 5EB8  
                              __initialization 5C68                              i2___lldiv@divisor 0005  
                                 __end_of_acos 5DCE                                   __end_of_fabs 6208  
                                 __end_of_atan 3C48                                   __end_of_asin 3662  
                                 __end_of_atoi 4F3C                                   __end_of_main 5866  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 0030  
                                 __end_of_sqrt 4134                                     i2printf@ap 0076  
                                   i2printf@cp 0072                          __end_of_ringBufferLUT 1D64  
                               __CFG_SCANE$OFF 000000                             __size_ofi2_isdigit 001E  
                                  ?i2___ftpack 0001                                         ??_acos 005E  
                                       ??_fabs 002A                                         ??_atan 005B  
                                  ?i2___lltoft 0009                                         ??_asin 005E  
                                       ??_atoi 012D                                         ??_main 01B7  
                                ___fttol@sign1 015E                       _TMR5_SetInterruptHandler 6498  
                                       ??_sqrt 0069                                  __activetblptr 000003  
                         __size_of__tdiv_to_l_ 0134                                _TMR6_Initialize 61A6  
                           _TRIAC_Firing_Angle 00FA                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 5A7E  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01DC                                         ?_floor 0056  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               __end_of___altoft 57F0  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 0155                                         _ADLTHL 000F6A  
                                       _ADRESH 000F64                                         _ADRESL 000F63  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                             __end_of___awtoft 60D0                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                               __end_of___ftpack 50B8  
                                       _ANSELG 000EBC                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                             __end_of___lltoft 5C68                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1100 2AA0                                         i2l1102 2B5C  
                                       i2l1110 0A92                                         i2l1120 0B22  
                                       i2l1113 0B84                                         i2l1130 0BFA  
                                       i2l1122 0B26                                         i2l1106 0A3C  
                                       i2l1131 0C3C                                         i2l1107 0A4E  
                                       i2l1124 0B58                                         i2l1116 0B1E  
                                       i2l1108 0B10                                         i2l1141 0E0A  
                                       i2l1133 0CCE                                         i2l1117 0BE6  
                                       i2l1125 0B44                                         i2l1109 0AE4  
                                       i2l1134 0D34                                         i2l1127 0B6C  
                                       i2l1160 1012                                         i2l1152 0FB8  
                                       i2l1136 0D5A                                         i2l1128 0B7E  
                                       i2l1129 116E                                         i2l1161 114A  
                                       i2l1153 0F26                                         i2l1137 0D9A  
                                       i2l1162 1064                                         i2l1138 0E62  
                                       i2l1171 1280                                         i2l1155 0FD2  
                                       i2l1147 0EC8                                         i2l1092 33B2  
                                       i2l1172 11FC                                         i2l1164 1164  
                                       i2l1156 0FC4                                         i2l1341 3534  
                                       i2l1165 1156                                         i2l1342 35E4  
                                       i2l1422 565C                                         i2l1182 12B2  
                                       i2l1158 0FF6                                         i2l1423 5666  
                                       i2l1415 560E                                         i2l1431 590E  
                                       i2l1095 2962                                         i2l1191 1400  
                                       i2l1167 11BE                                         i2l1159 0FFA  
                                       i2l1360 3B14                                         i2l1424 5674  
                                       i2l1416 561E                                         i2l1432 5906  
                                       i2l1096 287C                                         i2l1192 1370  
                                       i2l1184 12D2                                         i2l1361 3C18  
                                       i2l1089 32DA                                         i2l1177 1296  
                                       i2l1169 11E2                                         i2l1522 3E48  
                                       i2l1450 4DCE                                         i2l1610 4998  
                                       i2l1418 563C                                         i2l1186 1406  
                                       i2l1178 123E                                         i2l1531 3ED8  
                                       i2l1611 4988                                         i2l1363 3C2A  
                                       i2l1339 3440                                         i2l1419 5634  
                                       i2l1435 5926                                         i2l1099 2938  
                                       i2l1604 602E                                         i2l1436 5930  
                                       i2l1428 58EC                                         i2l1188 13E8  
                                       i2l1285 57A6                                         i2l1461 4500  
                                       i2l1437 593E                                         i2l1429 58F8  
                                       i2l1189 12EE                                         i2l1550 3F7C  
                                       i2l1526 3E72                                         i2l1286 579A  
                                       i2l1358 3ABC                                         i2l1462 4542  
                                       i2l1455 61FA                                         i2l1471 45D4  
                                       i2l1463 4572                                         i2l1623 639C  
                                       i2l1536 3ECE                                         i2l1616 49BC  
                                       i2l1608 4922                                         i2l1472 45C8  
                                       i2l1545 3F0C                                         i2l1537 3EC4  
                                       i2l1449 4E4E                                         i2l1617 49B0  
                                       i2l1465 45B0                                         i2l1546 3F02  
                                       i2l1650 56A0                                         i2l1466 45A0  
                                       i2l1570 434E                                         i2l1491 50E0  
                                       i2l1619 49D8                                         i2l1555 4BEE  
                                       i2l1459 44E2                                         i2l1563 4294  
                                       i2l1492 50D6                                         i2l1548 3F30  
                                       i2l1580 5404                                         i2l1740 37C8  
                                       i2l1660 5A90                                         i2l1549 3F4C  
                                       i2l1581 5434                                         i2l1557 4C16  
                                       i2l1741 38B2                                         i2l1653 56E0  
                                       i2l1565 42C0                                         i2l1494 5114  
                                       i2l1590 4A6C                                         i2l1558 4C54  
                                       i2l1654 56EE                                         i2l1670 5CD6  
                                       i2l1566 42FA                                         i2l1495 50FE  
                                       i2l1591 4A7C                                         i2l1559 4C7A  
                                       i2l1663 5AC4                                         i2l1671 5CCA  
                                       i2l1575 4382                                         i2l1567 4322  
                                       i2l1664 5AD2                                         i2l1576 4376  
                                       i2l1497 513C                                         i2l1593 4A94  
                                       i2l1649 56AC                                         i2l1569 435E  
                                       i2l1498 5132                                         i2l1594 4AA4  
                                       i2l1738 368E                                         i2l1587 4A12  
                                       i2l1739 3770                                         i2l1659 5A9C  
                                       i2l1589 4A3A                                         i2l1598 6332  
                                       i2l1870 4030                                         i2l1943 4CE8  
                                       i2l1952 571C                                         i2l1944 4CDA  
                                       i2l1946 4D02                                         i2l1947 4D7C  
                                       i2l1867 3FDE                                         i2l1868 3FD0  
                                       _RG7PPS 000E89                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 0039  
                             __end_of___lwtoft 6364                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6             __end_of_ADC_postProcessingCallback 22B6  
                   _ADC_postProcessingCallback 1D64                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 5E1E                                   i2_scale$3347 0039  
                             __end_of__powers_ F1C8           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 4708                                         ___ftge 52B2  
                                       ___wmul 6232                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                     ??_terminal_setCursorHome 018E                                         _fround 2EEE  
                                       clear_0 5C90                                         clear_1 5CA2  
                                       clear_2 5CB2                           _eusart2RxStringReady 07E8  
                             ___awdiv@quotient 0123                                ___awmod@divisor 0119  
                              ___awmod@counter 011B                                         _printf 0000  
                                       _strcat 5E6C                                         _strchr 60D0  
                                       _strcmp 5DCE                                      ?_ADCC_ISR 0001  
                                       _strlen 5D20                                 i2___awdiv@sign 000C  
                                       _strstr 5464                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                             _background_color 00E8                                _ADCC_Initialize 5AE4  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 63A4  
                                    ??_isdigit 0117                              __end_ofi2___awdiv 567E  
                            __end_ofi2___ftadd 3FA2                              __end_ofi2___awmod 5948  
                            __end_ofi2___ftdiv 4CAC                                 i2___ftadd@exp1 004B  
                               i2___ftadd@exp2 004A                              __end_ofi2___ftneg 6340  
                            __end_ofi2___lldiv 5700                                         sin@sgn 0072  
                            __end_ofi2___ftmul 4ADE                              __end_ofi2___llmod 5AE4  
                            __end_ofi2___ftsub 6058                              __end_ofi2___fttol 49EA  
                               i2___ftadd@sign 0049                                   __mediumconst F178  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 6108  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                                       sqrt@og 006C                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
  ADCC_SetADIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 0097                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 018E  
                __size_of_INTERRUPT_Initialize 0012                                _eusart2RxBuffer 0280  
                      __end_of_TMR5_Initialize 5F02                              __end_ofi2_isdigit 63A4  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B6  
                            _SYSTEM_Initialize 6208           __end_of_TMR7_DefaultInterruptHandler 64FE  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 64FC  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0200  
                                   __accesstop 0060                        __end_of__initialization 5CBA  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 007C  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 63DC  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01B1  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                                   ___fttol@f1 0155                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 018E  
                                 __pidataBANK0 6460                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 4D8A                                  __end_of_frexp 5778  
                               i2___ftmul@cntr 0034                                  __end_of_scale 2736  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 647C                                    i2printf@idx 0071  
                     ??_terminal_clearTerminal 018E                                    i2printf@len 0074  
                                  i2printf@exp 007A                                    i2printf@val 0083  
                      __end_of_TMR6_Initialize 61D8                         __end_of_PMD_Initialize 63C0  
                               i2___fttol@exp1 004B                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 5FD4  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 4268  
                                   __div_to_l_ 439A                                      ?i2_fround 0036  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 6232                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00EB                                  _eusart2TxHead 01DE  
                                   __pbssBANK0 00C8                                     __pbssBANK1 01B9  
                                   __pbssBANK2 0200                                  _eusart2RxTail 01DB  
                                _eusart2TxTail 01DD                             __size_of_eval_poly 00DA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 5E6C                             __size_of_peakToRMS 01C6  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011A                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 62D0                               ??_FVR_Initialize 0117  
                               _peakToRMS$3331 00A0                                 _peakToRMS$3332 009A  
                               _peakToRMS$3333 009D                          ringBufferLUT@arg_buff 01A7  
                                  _Irms_offset 00EF                                        ?___ftge 0117  
            terminal_ringBufferPull@index_1978 01B3                                        ?___wmul 0125  
                        _currentMeasuredToPeak 5BAA                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 6498                        __end_of_ADCC_Initialize 5B48  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                      ?___altoft 004C  
                                      ?_fround 0155                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                      ?___awtoft 011F  
                                    ?___ftpack 0117                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0164                                ?_PMD_Initialize 0001  
                                    ?___lltoft 011F                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0030                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strlen 0117                                      ?___lwtoft 0009  
                                      ?_strstr 0126                                     ??i2___wmul 0013  
                                      u1145_41 4278                                        u1147_41 42A4  
                                      u1501_41 4A22                                        u1510_41 4BFE  
                                      u1508_41 4BD6                                        u1529_41 4906  
                                      u1478_41 3E06                                        u1479_41 3E1A  
                                      i2l12550 0DE4                                        i2l12542 0D9A  
                                      i2l12704 13E8                                        i2l12570 0ECC  
                                      i2l11764 5460                                        i2l12654 1200  
                                      i2l12478 0B44                                        i2l12594 0FC4  
                                      i2l12668 1242                                        u1499_41 49FA  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0039  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 5210  
                                   ??i2_printf 0068                                        _OSCTUNE 000E48  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 64EA  
                     _acquisitionTimerCallback 5B48                        __end_of_TMR5_WriteTimer 63F8  
             __size_of_terminal_textAttributes 0368                                        i2_scale 2736  
                             ?_TMR5_Initialize 0001                                        i2_putch 64EA  
         __end_of_terminal_textAttributesReset 641E          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 640C                              __end_of__npowers_ F1EF  
                                      __Hparam 0000                                     _scale$3151 0158  
                                      __Lparam 0000                     ??_TMR5_SetInterruptHandler 011A  
                              __size_of___ftge 0092                                        ___awdiv 54F0  
                                      ___ftadd 3C48                                        ___awmod 5866  
                                      ___ftdiv 4ADE                                        ___ftneg 62AA  
                                      ___lldiv 5576                                __size_of___wmul 0028  
                                      ___ftmul 4800                                        ___llmod 59B0  
                                      ___ftsub 5FD4                                        ___fttol 4708  
                                   ??___altoft 0050                                        __pcinit 5C68  
                                 ??i2___ftpack 0006                                     ??___awtoft 0122  
                                   ??___ftpack 011C                              __end_of_eval_poly 4E64  
                              __size_of_fround 0294                               ?_TMR6_Initialize 0001  
                      i2___ftmul@f3_as_product 0031                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                   ??i2___lltoft 000D  
                                   ??___lltoft 0123                                        __ptext0 57F0  
                                      __ptext1 6430                                        __ptext2 45EC  
                                      __ptext3 1456                                        __ptext4 640C  
                                      __ptext5 2B86                                        __ptext6 5948  
                                      __ptext7 5E6C                                        __ptext8 6440  
                                      __ptext9 5464                              __end_of_peakToRMS 3A86  
                              __size_of_printf 0A2E                  currentMeasuredToPeak@Measured 0073  
                                   ??___lwtoft 000C                     ringBufferLUT@angle_degrees 01A4  
                              __size_of_strcat 004C                                  i2_fround$3345 003C  
                                i2_fround$3346 0039                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strlen 0058  
                            __end_of_hexpowers F20F                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers F179  
                        _OSCILLATOR_Initialize 63C0                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 6364  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117    ADC_postProcessingCallback@currentADCChannel 00AF  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 006A  
                                    _T5CONbits 000FC3              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 007C                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 01AC                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002A                          i2EUSART2_Write@txData 0001  
                                      _strncmp 5344                                 __pintcode_body 4F3C  
                                      _strncpy 5948                           end_of_initialization 5CBA  
                      __end_of_TMR7_WriteTimer 62F6                         _terminal_setCursorHome 6430  
                             ?_TMR7_Initialize 0001                                        int_func 4F3C  
                          i2___wmul@multiplier 000F                                      _T6RSTbits 000FB4  
                                    i1u1616_28 626E                                      i1u1618_28 615E  
                                    i1u1636_28 0086                    ?_ADC_postProcessingCallback 0001  
                                    i2u1111_40 5912                                      i2u1105_40 5640  
                                    i2u1160_40 5AA0                                      i2u1144_40 45DA  
                                    i2u1153_40 4388                                      i2u1157_40 56B0  
                           __end_ofi2___ftpack 5166                                      i2u1522_40 3AE0  
                                    i2u1531_40 4940                                      i2u1523_40 3AE2  
                                    i2u1531_45 4938                                      i2u1612_48 6192  
                                    i2u1542_40 4CF4                                      i2u1622_40 51A8  
                                    i2u1471_40 50C8                                      i2u1535_40 49C2  
                                    i2u1614_48 6296                                      i2u1528_40 5744  
                                    i2u1608_40 1418                                      i2u1528_48 5746  
                                    i2u1609_40 1448                                      i2u1609_47 143E  
                                    i2u1482_40 3E3A                                      i2u1546_40 376C  
                                    i2u1570_40 0BB4                                      i2u1562_40 0A7A  
                                    i2u1570_47 0BAA                                      i2u1562_47 0A70  
                                    i2u1475_40 5146                                      i2u1547_40 376E  
                                    i2u1492_40 3EE0                                      i2u1580_40 0DAC  
                                    i2u1564_40 0AC8                                      i2u1627_48 4F90  
                                    i2u1564_47 0ABE                                      i2u1485_40 3E64  
                                    i2u1565_40 0B06                                      i2u1565_47 0AFC  
                                    i2u1590_40 0FE0                                      i2u1495_40 3F14  
                                    i2u1591_40 0FF0                                      i2u1583_40 0DE4  
                                    i2u1575_40 0C74                                      i2u1575_45 0C6A  
                                    i2u1488_40 3EA2                                      i2u1587_40 0F0A  
                                    i2u1579_40 0D6C                             __end_ofi2___lltoft 5D20  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 5A18                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                                i2_EUSART2_Write 5F4A  
                                      printf@c 018D                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01B5  
                                ??__tdiv_to_l_ 011D                       _TMR6_SetInterruptHandler 648A  
                        _TMR5_InterruptHandler 01CA                       ?_terminal_ringBufferPull 0001  
                         __CFG_WDTCCS$LFINTOSC 000000                              __size_of_ADCC_ISR 0028  
          __end_of_ADCC_SetADIInterruptHandler 64D0                    _ADCC_SetADIInterruptHandler 64C2  
                                    i2___awdiv 55FA                                      i2___ftadd 3DF6  
                                    i2___awmod 58D8                               __CFG_FEXTOSC$ECH 000000  
                                    i2___ftdiv 4BC6                                      i2___ftneg 631C  
                                    i2___lldiv 567E                                      i2___ftmul 49EA  
                                    i2___llmod 5A7E                                      i2___ftsub 6016  
                                    i2___fttol 48F6                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 6450  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 090E  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 5F90                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 6386                            __size_of__div_to_l_ 012A  
                                  ___ftmul@exp 014F                                      _Avg_Power 01C1  
                 __end_of_INTERRUPT_Initialize 6430                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___ftge 5344  
                __end_of_terminal_printNewline 6450                                 __end_of___wmul 625A  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07E8                                 __end_of_fround 3182  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 005C                               i2___wmul@product 0013  
                               __end_of_printf 0A2E                                  i2_printf$3348 006E  
                               __end_of_strcat 5EB8                                 __end_of_strchr 6108  
                               __end_of_strcmp 5E1E                                   i2printf@flag 0078  
                               __end_of_strlen 5D78                                   i2printf@fval 0080  
                               __end_of_strstr 54F0                                   i2printf@prec 0087  
                          start_initialization 5C68                              __size_ofi2___ftge 0090  
                                   eval_poly@d 004F                                     eval_poly@n 0051  
                                   eval_poly@x 004C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 6502  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 6500  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 4268  
                                  __end_of_sin 38C0                                      i2printf@c 0089  
                                    i2printf@f 0066                _ADC_postProcessingCallback$3334 00B3  
              _ADC_postProcessingCallback$3335 00B0                _ADC_postProcessingCallback$3336 00A6  
              _ADC_postProcessingCallback$3337 00A9                _ADC_postProcessingCallback$3338 00AC  
                              i2___fttol@sign1 0046                        _terminal_textAttributes 2B86  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                            __size_ofi2_fround 0276                                     ?i2___awdiv 0007  
                                   ?i2___ftadd 0040                                     ?i2___awmod 0001  
                                   ?i2___ftdiv 0015                                     ?i2___ftneg 0024  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 0027  
                                   ?i2___llmod 000E                                     ?i2___ftsub 0060  
                                   ?i2___fttol 003D                  __size_of_ADCC_StartConversion 000E  
                                  putch@txData 0118                              __size_ofi2_printf 0A28  
                        __end_of_EUSART2_Write 5F4A                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0191  
                      __end_ofi2_EUSART2_Write 5F90                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 00EC                               __CFG_LPBOREN$OFF 000000  
                             ??_PMD_Initialize 0117                                       ??___ftge 011D  
                                     ??___wmul 0129                __size_of_heartbeatTimerCallback 003E  
                                  __pdataBANK0 00EF                                       ??_fround 0158  
                                _ringBufferLUT 1456                 ??_terminal_textAttributesReset 01A0  
                                     ??_printf 016C                              _POS3P3_ADC_Result 00D7  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                                     ??_strstr 012A                              __size_of___altoft 0078  
                                    _Vpk_const 00F2                                     fround@prec 015E  
                               _eusart2RxCount 01DA                                  ?i2__div_to_l_ 0001  
                            __size_of___awtoft 003A                              __size_of___ftpack 00B0  
                                    _acos$3339 0091                              __size_of___lltoft 005E  
                            __size_of___lwtoft 0024                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                   _isdigit$2506 0118  
                ?_TMR5_DefaultInterruptHandler 0001                            EUSART2_Write@txData 0117  
                                 _load_on_time 01B9                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3340 007F  
                                    _asin$3341 008B                                      _asin$3342 0085  
                                    _asin$3343 0082                                       ?i2_putch 0001  
                                   sin@coeff_a F221                                     sin@coeff_b F23F  
                        _TMR6_InterruptHandler 01D0                         _PIN_MANAGER_Initialize 5210  
                                    __pintcode 0008                                  __pmediumconst F178  
                                     ?___awdiv 011D                                      __ptext100 4CAC  
                                    __ptext101 48F6                                      __ptext110 50B8  
                                    __ptext102 53D4                                      __ptext111 63F8  
                                    __ptext103 5700                                      __ptext112 0000  
                                    __ptext104 5778                                      __ptext105 4D8A  
                                    __ptext106 62F6                                      __ptext107 49EA  
                                    __ptext108 3DF6                                      __ptext109 6340  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 648A  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F1C8  
                                     ?___fttol 0155                                 ?_ringBufferLUT 01A0  
            _EUSART2_TxDefaultInterruptHandler 01D3                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 4134                                       _ADCC_ISR 6282  
                               ??i2__div_to_l_ 0007                                   ??__div_to_l_ 011D  
                             _POS12_ADC_Result 01C7                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                    _dev_on_time 01BD  
                                    _eval_poly 4D8A                      ??_terminal_textAttributes 0190  
                                    _attribute 00EA                                      _peakToRMS 38C0  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers F1EF                         _heartbeatTimerCallback 6058  
                               _dimming_period 00F8                                    ??i2___awdiv 000B  
                                  ??i2___ftadd 0046                                    ??i2___awmod 0005  
                               __size_of_floor 00DE                                    ??i2___ftdiv 001B  
                               __size_of_frexp 0078                                    ??i2___ftneg 0027  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 002D  
                               __size_of_scale 0480                                    ??i2___llmod 0016  
                                  ??i2___ftsub 005E                                    ??i2___fttol 0041  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 641E  
                                     _T6CLKCON 000FB3                          _ADCC_IsConversionDone 64DE  
       terminal_textAttributes@input_attribute 018F                   __size_of_EUSART2_Receive_ISR 00AA  
                               ___wmul@product 0129                      currentMeasuredToPeak@Peak 0079  
                             ?i2_EUSART2_Write 0001                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0066  
                                     _IPR1bits 000E20                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     i1u741_20 6064                                       i1u742_28 6068  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 44C4  
                                     i1u685_20 64E6                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 6172  
                                     _TMR6_ISR 625A                                       _TMR7_ISR 613E  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0125                                       i2___ftge 53D4  
                                     i2___wmul 62F6                        __size_of_FVR_Initialize 0008  
                                   printf@flag 017C                                     printf@fval 0188  
                                   printf@prec 018B                                     ?_eval_poly 004C  
               __end_of_terminal_setCursorHome 6440                              i2___awdiv@divisor 0009  
                                     i2_fround 3182              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 0094                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 0A2E                            __end_ofatan@coeff_a F221  
                          __end_ofatan@coeff_b F23F                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 5C7C  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0450  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0004                __end_of_terminal_textAttributes 2EEE  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 640C                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 64C2         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 64B4                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01A2  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 00E9  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___awmod 0072  
                             __size_of___ftdiv 00E8                               __size_of___ftneg 0026  
                        i2___wmul@multiplicand 0011                               __size_of___lldiv 0084  
                                     ___altoft 5778                               __size_of___ftmul 00F6  
                             __size_of___llmod 0068                               __size_of___ftsub 0042  
                             __size_of___fttol 00F8                                    _load_enable 02F0  
                                     ___awtoft 6096                                       ___ftpack 5008  
             __end_of_acquisitionTimerCallback 5BAA                                    _fround$3150 0158  
                                  _fround$3149 015B                                       ___lltoft 5C0A  
                        __end_ofi2__tdiv_to_l_ 439A                                       ___lwtoft 6340  
                     _TMR7_SetInterruptHandler 647C                          _TMR7_InterruptHandler 01CD  
                           _ADC_Result_Scaling 00DA        terminal_textAttributes@foreground_color 0190  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 6460  
                             __size_of_isdigit 0022                                       __ptext10 5344  
                                     __ptext11 5D20                                       __ptext20 22B6  
                                     __ptext12 60D0                                       __ptext21 646E  
                                     __ptext13 5DCE                                       __ptext30 439A  
                                     __ptext22 5F02                                       __ptext14 4E64  
                                     __ptext31 5C0A                                       __ptext23 6364  
                                     __ptext15 4ADE                                       __ptext40 6208  
                                     __ptext32 59B0                                       __ptext24 2EEE  
                                     __ptext16 6096                                       __ptext41 5E1E  
                                     __ptext33 5576                                       __ptext25 6232  
                                     __ptext17 5F90                                       __ptext50 641E  
                                     __ptext42 647C                                       __ptext34 4708  
                                     __ptext26 4800                                       __ptext18 6450  
                                     __ptext51 64F4                                       __ptext43 61A6  
                                     __ptext35 5FD4                                       __ptext27 5866  
                                     __ptext19 0000                                       __ptext60 5B48  
                                     __ptext52 5A18                                       __ptext44 648A  
                                     __ptext36 3C48                                       __ptext28 54F0  
                                     __ptext61 64D0                                       __ptext53 64A6  
                                     __ptext45 5EB8                                       __ptext37 5008  
                                     __ptext29 4134                                       __ptext70 63DC  
                                     __ptext62 64DE                                       __ptext54 64B4  
                                     __ptext46 6498                                       __ptext38 62AA  
                                     __ptext71 6500                                       __ptext63 62D0  
                                     __ptext55 5AE4                                       __ptext47 63A4  
                                     __ptext39 52B2                                       __ptext80 55FA  
                                     __ptext72 5166                                       __ptext64 625A  
                                     __ptext56 64C2                                       __ptext48 5210  
                                     __ptext81 4268                                       __ptext73 0A2E  
                                     __ptext65 64FE                                       __ptext49 63C0  
                                     __ptext90 5D78                                       __ptext82 44C4  
                                     __ptext74 2736                                       __ptext66 6058  
                                     __ptext58 613E                                       __ptext91 33F8  
                                     __ptext83 5CC4                                       __ptext75 64EA  
                                     __ptext67 6108                                       __ptext59 64FC  
                                     __ptext92 3FA2                                       __ptext84 5A7E  
                                     __ptext76 5F4A                                       __ptext93 3A86  
                                     __ptext85 567E                                       __ptext77 6386  
                                     __ptext69 6172                                       __ptext94 61D8  
                                     __ptext86 6282                                       __ptext78 3182  
                                     __ptext95 5BAA                                       __ptext87 6502  
                                     __ptext79 58D8                                       __ptext96 3662  
                                     __ptext88 1D64                                       __ptext97 6016  
                                     __ptext89 38C0                                       __ptext98 631C  
                                     __ptext99 4BC6                                       _sin$3344 006C  
                                     __powers_ F1A1                         ?_ADCC_IsConversionDone 0001  
                              _Temp_ADC_Offset 00F5                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0066  
                               i2_isdigit$2506 0002                                _Temp_ADC_Result 01C4  
                                __size_of_acos 0056                                  __size_of_fabs 0030  
                                __size_of_atan 01C2                                  __size_of_asin 026A  
                                __size_of_atoi 00D8                                  __size_of_main 0076  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 0192  
                         __end_ofi2__div_to_l_ 45EC                                     strncmp@len 0121  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    _ADCC_ADI_InterruptHandler 00E0                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 64DE                                       int$flags 005F  
                                     atoi@sign 012F                                      printf@idx 0175  
                                    printf@len 0178                                      printf@exp 017E  
                                    printf@val 0184                                    atan@coeff_a F20F  
                                  atan@coeff_b F230                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 6440                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0053                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 015B  
         __end_of_TMR6_DefaultInterruptHandler 6500          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 64FE           __end_of_ADCC_DefaultInterruptHandler 6504  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 6502  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 01AA  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                              _AVSS_ADC_Result 00DD                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                     printf@ap 017A                                       printf@cp 0176  
                     _ADCC_GetConversionResult 63F8                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                         __size_of_EUSART2_Write 0048  
                          _EUSART2_Receive_ISR 5166         __end_of_INTERRUPT_InterruptManagerHigh 5008  
      __size_of_INTERRUPT_InterruptManagerHigh 5000                 _INTERRUPT_InterruptManagerHigh 0008  
                            ??_TMR7_Initialize 011A                                    _printf$3152 0172  
                               _FVR_Initialize 64F4                                       strcat@cp 011B  
                                     strcat@to 0117                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                            ringBufferLUT@line 01A0                               ___lldiv@quotient 011F  
                                     strlen@cp 011B                                       strstr@s1 0126  
                                     strstr@s2 0128                                     _TX2STAbits 000EF6  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                 __end_of_PIN_MANAGER_Initialize 52B2  
                            ??_ADCC_Initialize 011A                              i2__div_to_l_@exp1 000C  
                            i2__div_to_l_@cntr 000B                        _terminal_ringBufferPull 45EC  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0007                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 0062                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                   ??_ADC_postProcessingCallback 005E  
            _EUSART2_RxDefaultInterruptHandler 00E3                 __size_of_currentMeasuredToPeak 0060  
                __end_of_currentMeasuredToPeak 5C0A  
