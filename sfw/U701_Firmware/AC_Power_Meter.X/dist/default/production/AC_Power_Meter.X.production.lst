

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 13 10:54:54 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   132                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 1.45 (B)
   205                           ; Generated 30/01/2018 GMT
   206                           ; 
   207                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18LF67K40 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239                           	psect	idataBANK0
   240  01B264                     __pidataBANK0:
   241                           	opt stack 0
   242                           
   243                           ;initializer for _dimming_period
   244  01B264  7FEE               	dw	32750
   245                           
   246                           ;initializer for _TRIAC_Firing_Angle
   247                           ;main.c: 74: volatile double FVR_ADC_Result;
   248                           ;main.c: 75: volatile double AVSS_ADC_Result;
   249                           ;main.c: 76: volatile double ADC_Result_Scaling;
   250                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   251                           ;main.c: 78: volatile double POS12_ADC_Result;
   252                           ;main.c: 79: volatile double Temp_ADC_Result;
   253                           ;main.c: 80: volatile double Temp_ADC_Offset = 612.085;
   254                           ;main.c: 81: double Vpk_const = 169.7056274847714;
   255                           ;main.c: 82: volatile double Vpk;
   256                           ;main.c: 83: volatile double Ipk;
   257                           ;main.c: 84: volatile double Imeas;
   258                           ;main.c: 85: double Irms_offset = -0.113;
   259  01B266  F5C3               	dw	62915
   260  01B268  3FC8               	dw	16328
   261                           
   262                           	psect	idataBANK2
   263  01AEC8                     __pidataBANK2:
   264                           	opt stack 0
   265                           
   266                           ;initializer for getCauseOfResetString@strings
   267  01AEC8  71                 	db	low STR_179
   268  01AEC9  FD                 	db	high STR_179
   269  01AECA  E1                 	db	low STR_180
   270  01AECB  FD                 	db	high STR_180
   271  01AECC  81                 	db	low STR_181
   272  01AECD  FD                 	db	high STR_181
   273  01AECE  9F                 	db	low STR_182
   274  01AECF  FC                 	db	high STR_182
   275  01AED0  13                 	db	low (STR_184+9)
   276  01AED1  F8                 	db	high (STR_184+9)
   277  01AED2  0A                 	db	low STR_184
   278  01AED3  F8                 	db	high STR_184
   279  01AED4  55                 	db	low STR_185
   280  01AED5  FB                 	db	high STR_185
   281  01AED6  4C                 	db	low STR_186
   282  01AED7  FC                 	db	high STR_186
   283  01AED8  36                 	db	low STR_187
   284  01AED9  FC                 	db	high STR_187
   285                           
   286                           ;initializer for getDeviceIDString@F17550
   287  01AEDA  F7                 	db	low STR_176
   288  01AEDB  FE                 	db	high STR_176
   289  01AEDC  8F                 	db	low STR_177
   290  01AEDD  FE                 	db	high STR_177
   291  01AEDE  69                 	db	low STR_178
   292  01AEDF  FF                 	db	high STR_178
   293                           
   294                           ;initializer for _Irms_offset
   295  01AEE0  6C8B               	dw	27787
   296  01AEE2  BDE7               	dw	48615
   297                           
   298                           ;initializer for _Vpk_const
   299                           ;main.c: 74: volatile double FVR_ADC_Result;
   300                           ;main.c: 75: volatile double AVSS_ADC_Result;
   301                           ;main.c: 76: volatile double ADC_Result_Scaling;
   302                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   303                           ;main.c: 78: volatile double POS12_ADC_Result;
   304                           ;main.c: 79: volatile double Temp_ADC_Result;
   305                           ;main.c: 80: volatile double Temp_ADC_Offset = 612.085;
   306  01AEE4  B4A4               	dw	46244
   307  01AEE6  4329               	dw	17193
   308                           
   309                           ;initializer for _Temp_ADC_Offset
   310                           ;main.c: 74: volatile double FVR_ADC_Result;
   311                           ;main.c: 75: volatile double AVSS_ADC_Result;
   312                           ;main.c: 76: volatile double ADC_Result_Scaling;
   313                           ;main.c: 77: volatile double POS3P3_ADC_Result;
   314                           ;main.c: 78: volatile double POS12_ADC_Result;
   315                           ;main.c: 79: volatile double Temp_ADC_Result;
   316  01AEE8  0571               	dw	1393
   317  01AEEA  4419               	dw	17433
   318                           
   319                           ;initializer for _next_channel
   320  01AEEC  3C                 	db	60
   321                           
   322                           	psect	mediumconst
   323  00CEA2                     __pmediumconst:
   324                           	opt stack 0
   325  00CEA2  00                 	db	0
   326  00CEA3                     __powers_:
   327                           	opt stack 0
   328  00CEA3  0000               	dw	0
   329  00CEA5  3F80               	dw	16256
   330  00CEA7  0000               	dw	0
   331  00CEA9  4120               	dw	16672
   332  00CEAB  0000               	dw	0
   333  00CEAD  42C8               	dw	17096
   334  00CEAF  0000               	dw	0
   335  00CEB1  447A               	dw	17530
   336  00CEB3  4000               	dw	16384
   337  00CEB5  461C               	dw	17948
   338  00CEB7  5000               	dw	20480
   339  00CEB9  47C3               	dw	18371
   340  00CEBB  2400               	dw	9216
   341  00CEBD  4974               	dw	18804
   342  00CEBF  9680               	dw	38528
   343  00CEC1  4B18               	dw	19224
   344  00CEC3  BC20               	dw	48160
   345  00CEC5  4CBE               	dw	19646
   346  00CEC7  6B28               	dw	27432
   347  00CEC9  4E6E               	dw	20078
   348  00CECB  02F9               	dw	761
   349  00CECD  5015               	dw	20501
   350  00CECF  78EC               	dw	30956
   351  00CED1  60AD               	dw	24749
   352  00CED3  F2CA               	dw	62154
   353  00CED5  7149               	dw	29001
   354  00CED7                     __end_of__powers_:
   355                           	opt stack 0
   356  00CED7                     __npowers_:
   357                           	opt stack 0
   358  00CED7  0000               	dw	0
   359  00CED9  3F80               	dw	16256
   360  00CEDB  CCCD               	dw	52429
   361  00CEDD  3DCC               	dw	15820
   362  00CEDF  D70A               	dw	55050
   363  00CEE1  3C23               	dw	15395
   364  00CEE3  126F               	dw	4719
   365  00CEE5  3A83               	dw	14979
   366  00CEE7  B717               	dw	46871
   367  00CEE9  38D1               	dw	14545
   368  00CEEB  C5AC               	dw	50604
   369  00CEED  3727               	dw	14119
   370  00CEEF  37BD               	dw	14269
   371  00CEF1  3586               	dw	13702
   372  00CEF3  BF95               	dw	49045
   373  00CEF5  33D6               	dw	13270
   374  00CEF7  CC77               	dw	52343
   375  00CEF9  322B               	dw	12843
   376  00CEFB  705F               	dw	28767
   377  00CEFD  3089               	dw	12425
   378  00CEFF  E6FF               	dw	59135
   379  00CF01  2EDB               	dw	11995
   380  00CF03  E508               	dw	58632
   381  00CF05  1E3C               	dw	7740
   382  00CF07  4260               	dw	16992
   383  00CF09  0DA2               	dw	3490
   384  00CF0B                     __end_of__npowers_:
   385                           	opt stack 0
   386  00CF0B                     _dpowers:
   387                           	opt stack 0
   388  00CF0B  0001               	dw	1
   389  00CF0D  0000               	dw	0
   390  00CF0F  000A               	dw	10
   391  00CF11  0000               	dw	0
   392  00CF13  0064               	dw	100
   393  00CF15  0000               	dw	0
   394  00CF17  03E8               	dw	1000
   395  00CF19  0000               	dw	0
   396  00CF1B  2710               	dw	10000
   397  00CF1D  0000               	dw	0
   398  00CF1F  86A0               	dw	34464
   399  00CF21  0001               	dw	1
   400  00CF23  4240               	dw	16960
   401  00CF25  000F               	dw	15
   402  00CF27  9680               	dw	38528
   403  00CF29  0098               	dw	152
   404  00CF2B  E100               	dw	57600
   405  00CF2D  05F5               	dw	1525
   406  00CF2F  CA00               	dw	51712
   407  00CF31  3B9A               	dw	15258
   408  00CF33                     __end_of_dpowers:
   409                           	opt stack 0
   410  00CF33                     _hexpowers:
   411                           	opt stack 0
   412  00CF33  0001               	dw	1
   413  00CF35  0000               	dw	0
   414  00CF37  0010               	dw	16
   415  00CF39  0000               	dw	0
   416  00CF3B  0100               	dw	256
   417  00CF3D  0000               	dw	0
   418  00CF3F  1000               	dw	4096
   419  00CF41  0000               	dw	0
   420  00CF43  0000               	dw	0
   421  00CF45  0001               	dw	1
   422  00CF47  0000               	dw	0
   423  00CF49  0010               	dw	16
   424  00CF4B  0000               	dw	0
   425  00CF4D  0100               	dw	256
   426  00CF4F  0000               	dw	0
   427  00CF51  1000               	dw	4096
   428  00CF53                     __end_of_hexpowers:
   429                           	opt stack 0
   430  00CF53                     _max_FVR_ADC_Result_address:
   431                           	opt stack 0
   432  00CF53  0014               	dw	20
   433  00CF55                     __end_of_max_FVR_ADC_Result_address:
   434                           	opt stack 0
   435  00CF55                     _max_Temp_ADC_Result_address:
   436                           	opt stack 0
   437  00CF55  0010               	dw	16
   438  00CF57                     __end_of_max_Temp_ADC_Result_address:
   439                           	opt stack 0
   440  00CF57                     _max_POS12_ADC_Result_address:
   441                           	opt stack 0
   442  00CF57  000C               	dw	12
   443  00CF59                     __end_of_max_POS12_ADC_Result_address:
   444                           	opt stack 0
   445  00CF59                     _max_POS3P3_ADC_Result_address:
   446                           	opt stack 0
   447  00CF59  0008               	dw	8
   448  00CF5B                     __end_of_max_POS3P3_ADC_Result_address:
   449                           	opt stack 0
   450  00CF5B                     _max_Power_address:
   451                           	opt stack 0
   452  00CF5B  0004               	dw	4
   453  00CF5D                     __end_of_max_Power_address:
   454                           	opt stack 0
   455  00CF5D                     _max_Irms_address:
   456                           	opt stack 0
   457  00CF5D  0000               	dw	0
   458  00CF5F                     __end_of_max_Irms_address:
   459                           	opt stack 0
   460  00CF5F                     _Total_Energy_address:
   461                           	opt stack 0
   462  00CF5F  0018               	dw	24
   463  00CF61                     __end_of_Total_Energy_address:
   464                           	opt stack 0
   465  00CF61                     _OledFont:
   466                           	opt stack 0
   467  00CF61  00                 	db	0
   468  00CF62  00                 	db	0
   469  00CF63  00                 	db	0
   470  00CF64  00                 	db	0
   471  00CF65  00                 	db	0
   472  00CF66  00                 	db	0
   473  00CF67  00                 	db	0
   474  00CF68  00                 	db	0
   475  00CF69  00                 	db	0
   476  00CF6A  00                 	db	0
   477  00CF6B  5F                 	db	95
   478  00CF6C  00                 	db	0
   479  00CF6D  00                 	db	0
   480  00CF6E  00                 	db	0
   481  00CF6F  00                 	db	0
   482  00CF70  00                 	db	0
   483  00CF71  00                 	db	0
   484  00CF72  00                 	db	0
   485  00CF73  07                 	db	7
   486  00CF74  00                 	db	0
   487  00CF75  07                 	db	7
   488  00CF76  00                 	db	0
   489  00CF77  00                 	db	0
   490  00CF78  00                 	db	0
   491  00CF79  00                 	db	0
   492  00CF7A  14                 	db	20
   493  00CF7B  7F                 	db	127
   494  00CF7C  14                 	db	20
   495  00CF7D  7F                 	db	127
   496  00CF7E  14                 	db	20
   497  00CF7F  00                 	db	0
   498  00CF80  00                 	db	0
   499  00CF81  00                 	db	0
   500  00CF82  24                 	db	36
   501  00CF83  2A                 	db	42
   502  00CF84  7F                 	db	127
   503  00CF85  2A                 	db	42
   504  00CF86  12                 	db	18
   505  00CF87  00                 	db	0
   506  00CF88  00                 	db	0
   507  00CF89  00                 	db	0
   508  00CF8A  23                 	db	35
   509  00CF8B  13                 	db	19
   510  00CF8C  08                 	db	8
   511  00CF8D  64                 	db	100
   512  00CF8E  62                 	db	98
   513  00CF8F  00                 	db	0
   514  00CF90  00                 	db	0
   515  00CF91  00                 	db	0
   516  00CF92  36                 	db	54
   517  00CF93  49                 	db	73
   518  00CF94  55                 	db	85
   519  00CF95  22                 	db	34
   520  00CF96  50                 	db	80
   521  00CF97  00                 	db	0
   522  00CF98  00                 	db	0
   523  00CF99  00                 	db	0
   524  00CF9A  00                 	db	0
   525  00CF9B  05                 	db	5
   526  00CF9C  03                 	db	3
   527  00CF9D  00                 	db	0
   528  00CF9E  00                 	db	0
   529  00CF9F  00                 	db	0
   530  00CFA0  00                 	db	0
   531  00CFA1  00                 	db	0
   532  00CFA2  1C                 	db	28
   533  00CFA3  22                 	db	34
   534  00CFA4  41                 	db	65
   535  00CFA5  00                 	db	0
   536  00CFA6  00                 	db	0
   537  00CFA7  00                 	db	0
   538  00CFA8  00                 	db	0
   539  00CFA9  00                 	db	0
   540  00CFAA  41                 	db	65
   541  00CFAB  22                 	db	34
   542  00CFAC  1C                 	db	28
   543  00CFAD  00                 	db	0
   544  00CFAE  00                 	db	0
   545  00CFAF  00                 	db	0
   546  00CFB0  00                 	db	0
   547  00CFB1  00                 	db	0
   548  00CFB2  08                 	db	8
   549  00CFB3  2A                 	db	42
   550  00CFB4  1C                 	db	28
   551  00CFB5  2A                 	db	42
   552  00CFB6  08                 	db	8
   553  00CFB7  00                 	db	0
   554  00CFB8  00                 	db	0
   555  00CFB9  00                 	db	0
   556  00CFBA  08                 	db	8
   557  00CFBB  08                 	db	8
   558  00CFBC  3E                 	db	62
   559  00CFBD  08                 	db	8
   560  00CFBE  08                 	db	8
   561  00CFBF  00                 	db	0
   562  00CFC0  00                 	db	0
   563  00CFC1  00                 	db	0
   564  00CFC2  A0                 	db	160
   565  00CFC3  60                 	db	96
   566  00CFC4  00                 	db	0
   567  00CFC5  00                 	db	0
   568  00CFC6  00                 	db	0
   569  00CFC7  00                 	db	0
   570  00CFC8  00                 	db	0
   571  00CFC9  00                 	db	0
   572  00CFCA  08                 	db	8
   573  00CFCB  08                 	db	8
   574  00CFCC  08                 	db	8
   575  00CFCD  08                 	db	8
   576  00CFCE  08                 	db	8
   577  00CFCF  00                 	db	0
   578  00CFD0  00                 	db	0
   579  00CFD1  00                 	db	0
   580  00CFD2  60                 	db	96
   581  00CFD3  60                 	db	96
   582  00CFD4  00                 	db	0
   583  00CFD5  00                 	db	0
   584  00CFD6  00                 	db	0
   585  00CFD7  00                 	db	0
   586  00CFD8  00                 	db	0
   587  00CFD9  00                 	db	0
   588  00CFDA  20                 	db	32
   589  00CFDB  10                 	db	16
   590  00CFDC  08                 	db	8
   591  00CFDD  04                 	db	4
   592  00CFDE  02                 	db	2
   593  00CFDF  00                 	db	0
   594  00CFE0  00                 	db	0
   595  00CFE1  00                 	db	0
   596  00CFE2  3E                 	db	62
   597  00CFE3  51                 	db	81
   598  00CFE4  49                 	db	73
   599  00CFE5  45                 	db	69
   600  00CFE6  3E                 	db	62
   601  00CFE7  00                 	db	0
   602  00CFE8  00                 	db	0
   603  00CFE9  00                 	db	0
   604  00CFEA  00                 	db	0
   605  00CFEB  42                 	db	66
   606  00CFEC  7F                 	db	127
   607  00CFED  40                 	db	64
   608  00CFEE  00                 	db	0
   609  00CFEF  00                 	db	0
   610  00CFF0  00                 	db	0
   611  00CFF1  00                 	db	0
   612  00CFF2  62                 	db	98
   613  00CFF3  51                 	db	81
   614  00CFF4  49                 	db	73
   615  00CFF5  49                 	db	73
   616  00CFF6  46                 	db	70
   617  00CFF7  00                 	db	0
   618  00CFF8  00                 	db	0
   619  00CFF9  00                 	db	0
   620  00CFFA  22                 	db	34
   621  00CFFB  41                 	db	65
   622  00CFFC  49                 	db	73
   623  00CFFD  49                 	db	73
   624  00CFFE  36                 	db	54
   625  00CFFF  00                 	db	0
   626  00D000  00                 	db	0
   627  00D001  00                 	db	0
   628  00D002  18                 	db	24
   629  00D003  14                 	db	20
   630  00D004  12                 	db	18
   631  00D005  7F                 	db	127
   632  00D006  10                 	db	16
   633  00D007  00                 	db	0
   634  00D008  00                 	db	0
   635  00D009  00                 	db	0
   636  00D00A  27                 	db	39
   637  00D00B  45                 	db	69
   638  00D00C  45                 	db	69
   639  00D00D  45                 	db	69
   640  00D00E  39                 	db	57
   641  00D00F  00                 	db	0
   642  00D010  00                 	db	0
   643  00D011  00                 	db	0
   644  00D012  3C                 	db	60
   645  00D013  4A                 	db	74
   646  00D014  49                 	db	73
   647  00D015  49                 	db	73
   648  00D016  30                 	db	48
   649  00D017  00                 	db	0
   650  00D018  00                 	db	0
   651  00D019  00                 	db	0
   652  00D01A  01                 	db	1
   653  00D01B  71                 	db	113
   654  00D01C  09                 	db	9
   655  00D01D  05                 	db	5
   656  00D01E  03                 	db	3
   657  00D01F  00                 	db	0
   658  00D020  00                 	db	0
   659  00D021  00                 	db	0
   660  00D022  36                 	db	54
   661  00D023  49                 	db	73
   662  00D024  49                 	db	73
   663  00D025  49                 	db	73
   664  00D026  36                 	db	54
   665  00D027  00                 	db	0
   666  00D028  00                 	db	0
   667  00D029  00                 	db	0
   668  00D02A  06                 	db	6
   669  00D02B  49                 	db	73
   670  00D02C  49                 	db	73
   671  00D02D  29                 	db	41
   672  00D02E  1E                 	db	30
   673  00D02F  00                 	db	0
   674  00D030  00                 	db	0
   675  00D031  00                 	db	0
   676  00D032  00                 	db	0
   677  00D033  36                 	db	54
   678  00D034  36                 	db	54
   679  00D035  00                 	db	0
   680  00D036  00                 	db	0
   681  00D037  00                 	db	0
   682  00D038  00                 	db	0
   683  00D039  00                 	db	0
   684  00D03A  00                 	db	0
   685  00D03B  AC                 	db	172
   686  00D03C  6C                 	db	108
   687  00D03D  00                 	db	0
   688  00D03E  00                 	db	0
   689  00D03F  00                 	db	0
   690  00D040  00                 	db	0
   691  00D041  00                 	db	0
   692  00D042  08                 	db	8
   693  00D043  14                 	db	20
   694  00D044  22                 	db	34
   695  00D045  41                 	db	65
   696  00D046  00                 	db	0
   697  00D047  00                 	db	0
   698  00D048  00                 	db	0
   699  00D049  00                 	db	0
   700  00D04A  14                 	db	20
   701  00D04B  14                 	db	20
   702  00D04C  14                 	db	20
   703  00D04D  14                 	db	20
   704  00D04E  14                 	db	20
   705  00D04F  00                 	db	0
   706  00D050  00                 	db	0
   707  00D051  00                 	db	0
   708  00D052  41                 	db	65
   709  00D053  22                 	db	34
   710  00D054  14                 	db	20
   711  00D055  08                 	db	8
   712  00D056  00                 	db	0
   713  00D057  00                 	db	0
   714  00D058  00                 	db	0
   715  00D059  00                 	db	0
   716  00D05A  02                 	db	2
   717  00D05B  01                 	db	1
   718  00D05C  51                 	db	81
   719  00D05D  09                 	db	9
   720  00D05E  06                 	db	6
   721  00D05F  00                 	db	0
   722  00D060  00                 	db	0
   723  00D061  00                 	db	0
   724  00D062  32                 	db	50
   725  00D063  49                 	db	73
   726  00D064  79                 	db	121
   727  00D065  41                 	db	65
   728  00D066  3E                 	db	62
   729  00D067  00                 	db	0
   730  00D068  00                 	db	0
   731  00D069  00                 	db	0
   732  00D06A  7E                 	db	126
   733  00D06B  09                 	db	9
   734  00D06C  09                 	db	9
   735  00D06D  09                 	db	9
   736  00D06E  7E                 	db	126
   737  00D06F  00                 	db	0
   738  00D070  00                 	db	0
   739  00D071  00                 	db	0
   740  00D072  7F                 	db	127
   741  00D073  49                 	db	73
   742  00D074  49                 	db	73
   743  00D075  49                 	db	73
   744  00D076  36                 	db	54
   745  00D077  00                 	db	0
   746  00D078  00                 	db	0
   747  00D079  00                 	db	0
   748  00D07A  3E                 	db	62
   749  00D07B  41                 	db	65
   750  00D07C  41                 	db	65
   751  00D07D  41                 	db	65
   752  00D07E  22                 	db	34
   753  00D07F  00                 	db	0
   754  00D080  00                 	db	0
   755  00D081  00                 	db	0
   756  00D082  7F                 	db	127
   757  00D083  41                 	db	65
   758  00D084  41                 	db	65
   759  00D085  22                 	db	34
   760  00D086  1C                 	db	28
   761  00D087  00                 	db	0
   762  00D088  00                 	db	0
   763  00D089  00                 	db	0
   764  00D08A  7F                 	db	127
   765  00D08B  49                 	db	73
   766  00D08C  49                 	db	73
   767  00D08D  49                 	db	73
   768  00D08E  41                 	db	65
   769  00D08F  00                 	db	0
   770  00D090  00                 	db	0
   771  00D091  00                 	db	0
   772  00D092  7F                 	db	127
   773  00D093  09                 	db	9
   774  00D094  09                 	db	9
   775  00D095  09                 	db	9
   776  00D096  01                 	db	1
   777  00D097  00                 	db	0
   778  00D098  00                 	db	0
   779  00D099  00                 	db	0
   780  00D09A  3E                 	db	62
   781  00D09B  41                 	db	65
   782  00D09C  41                 	db	65
   783  00D09D  51                 	db	81
   784  00D09E  72                 	db	114
   785  00D09F  00                 	db	0
   786  00D0A0  00                 	db	0
   787  00D0A1  00                 	db	0
   788  00D0A2  7F                 	db	127
   789  00D0A3  08                 	db	8
   790  00D0A4  08                 	db	8
   791  00D0A5  08                 	db	8
   792  00D0A6  7F                 	db	127
   793  00D0A7  00                 	db	0
   794  00D0A8  00                 	db	0
   795  00D0A9  00                 	db	0
   796  00D0AA  41                 	db	65
   797  00D0AB  7F                 	db	127
   798  00D0AC  41                 	db	65
   799  00D0AD  00                 	db	0
   800  00D0AE  00                 	db	0
   801  00D0AF  00                 	db	0
   802  00D0B0  00                 	db	0
   803  00D0B1  00                 	db	0
   804  00D0B2  20                 	db	32
   805  00D0B3  40                 	db	64
   806  00D0B4  41                 	db	65
   807  00D0B5  3F                 	db	63
   808  00D0B6  01                 	db	1
   809  00D0B7  00                 	db	0
   810  00D0B8  00                 	db	0
   811  00D0B9  00                 	db	0
   812  00D0BA  7F                 	db	127
   813  00D0BB  08                 	db	8
   814  00D0BC  14                 	db	20
   815  00D0BD  22                 	db	34
   816  00D0BE  41                 	db	65
   817  00D0BF  00                 	db	0
   818  00D0C0  00                 	db	0
   819  00D0C1  00                 	db	0
   820  00D0C2  7F                 	db	127
   821  00D0C3  40                 	db	64
   822  00D0C4  40                 	db	64
   823  00D0C5  40                 	db	64
   824  00D0C6  40                 	db	64
   825  00D0C7  00                 	db	0
   826  00D0C8  00                 	db	0
   827  00D0C9  00                 	db	0
   828  00D0CA  7F                 	db	127
   829  00D0CB  02                 	db	2
   830  00D0CC  0C                 	db	12
   831  00D0CD  02                 	db	2
   832  00D0CE  7F                 	db	127
   833  00D0CF  00                 	db	0
   834  00D0D0  00                 	db	0
   835  00D0D1  00                 	db	0
   836  00D0D2  7F                 	db	127
   837  00D0D3  04                 	db	4
   838  00D0D4  08                 	db	8
   839  00D0D5  10                 	db	16
   840  00D0D6  7F                 	db	127
   841  00D0D7  00                 	db	0
   842  00D0D8  00                 	db	0
   843  00D0D9  00                 	db	0
   844  00D0DA  3E                 	db	62
   845  00D0DB  41                 	db	65
   846  00D0DC  41                 	db	65
   847  00D0DD  41                 	db	65
   848  00D0DE  3E                 	db	62
   849  00D0DF  00                 	db	0
   850  00D0E0  00                 	db	0
   851  00D0E1  00                 	db	0
   852  00D0E2  7F                 	db	127
   853  00D0E3  09                 	db	9
   854  00D0E4  09                 	db	9
   855  00D0E5  09                 	db	9
   856  00D0E6  06                 	db	6
   857  00D0E7  00                 	db	0
   858  00D0E8  00                 	db	0
   859  00D0E9  00                 	db	0
   860  00D0EA  3E                 	db	62
   861  00D0EB  41                 	db	65
   862  00D0EC  51                 	db	81
   863  00D0ED  21                 	db	33
   864  00D0EE  5E                 	db	94
   865  00D0EF  00                 	db	0
   866  00D0F0  00                 	db	0
   867  00D0F1  00                 	db	0
   868  00D0F2  7F                 	db	127
   869  00D0F3  09                 	db	9
   870  00D0F4  19                 	db	25
   871  00D0F5  29                 	db	41
   872  00D0F6  46                 	db	70
   873  00D0F7  00                 	db	0
   874  00D0F8  00                 	db	0
   875  00D0F9  00                 	db	0
   876  00D0FA  26                 	db	38
   877  00D0FB  49                 	db	73
   878  00D0FC  49                 	db	73
   879  00D0FD  49                 	db	73
   880  00D0FE  46                 	db	70
   881  00D0FF  00                 	db	0
   882  00D100  00                 	db	0
   883  00D101  00                 	db	0
   884  00D102  01                 	db	1
   885  00D103  01                 	db	1
   886  00D104  7F                 	db	127
   887  00D105  01                 	db	1
   888  00D106  01                 	db	1
   889  00D107  00                 	db	0
   890  00D108  00                 	db	0
   891  00D109  00                 	db	0
   892  00D10A  3F                 	db	63
   893  00D10B  40                 	db	64
   894  00D10C  40                 	db	64
   895  00D10D  40                 	db	64
   896  00D10E  3F                 	db	63
   897  00D10F  00                 	db	0
   898  00D110  00                 	db	0
   899  00D111  00                 	db	0
   900  00D112  1F                 	db	31
   901  00D113  20                 	db	32
   902  00D114  40                 	db	64
   903  00D115  20                 	db	32
   904  00D116  1F                 	db	31
   905  00D117  00                 	db	0
   906  00D118  00                 	db	0
   907  00D119  00                 	db	0
   908  00D11A  3F                 	db	63
   909  00D11B  40                 	db	64
   910  00D11C  38                 	db	56
   911  00D11D  40                 	db	64
   912  00D11E  3F                 	db	63
   913  00D11F  00                 	db	0
   914  00D120  00                 	db	0
   915  00D121  00                 	db	0
   916  00D122  63                 	db	99
   917  00D123  14                 	db	20
   918  00D124  08                 	db	8
   919  00D125  14                 	db	20
   920  00D126  63                 	db	99
   921  00D127  00                 	db	0
   922  00D128  00                 	db	0
   923  00D129  00                 	db	0
   924  00D12A  03                 	db	3
   925  00D12B  04                 	db	4
   926  00D12C  78                 	db	120
   927  00D12D  04                 	db	4
   928  00D12E  03                 	db	3
   929  00D12F  00                 	db	0
   930  00D130  00                 	db	0
   931  00D131  00                 	db	0
   932  00D132  61                 	db	97
   933  00D133  51                 	db	81
   934  00D134  49                 	db	73
   935  00D135  45                 	db	69
   936  00D136  43                 	db	67
   937  00D137  00                 	db	0
   938  00D138  00                 	db	0
   939  00D139  00                 	db	0
   940  00D13A  7F                 	db	127
   941  00D13B  41                 	db	65
   942  00D13C  41                 	db	65
   943  00D13D  00                 	db	0
   944  00D13E  00                 	db	0
   945  00D13F  00                 	db	0
   946  00D140  00                 	db	0
   947  00D141  00                 	db	0
   948  00D142  02                 	db	2
   949  00D143  04                 	db	4
   950  00D144  08                 	db	8
   951  00D145  10                 	db	16
   952  00D146  20                 	db	32
   953  00D147  00                 	db	0
   954  00D148  00                 	db	0
   955  00D149  00                 	db	0
   956  00D14A  41                 	db	65
   957  00D14B  41                 	db	65
   958  00D14C  7F                 	db	127
   959  00D14D  00                 	db	0
   960  00D14E  00                 	db	0
   961  00D14F  00                 	db	0
   962  00D150  00                 	db	0
   963  00D151  00                 	db	0
   964  00D152  04                 	db	4
   965  00D153  02                 	db	2
   966  00D154  01                 	db	1
   967  00D155  02                 	db	2
   968  00D156  04                 	db	4
   969  00D157  00                 	db	0
   970  00D158  00                 	db	0
   971  00D159  00                 	db	0
   972  00D15A  80                 	db	128
   973  00D15B  80                 	db	128
   974  00D15C  80                 	db	128
   975  00D15D  80                 	db	128
   976  00D15E  80                 	db	128
   977  00D15F  00                 	db	0
   978  00D160  00                 	db	0
   979  00D161  00                 	db	0
   980  00D162  01                 	db	1
   981  00D163  02                 	db	2
   982  00D164  04                 	db	4
   983  00D165  00                 	db	0
   984  00D166  00                 	db	0
   985  00D167  00                 	db	0
   986  00D168  00                 	db	0
   987  00D169  00                 	db	0
   988  00D16A  20                 	db	32
   989  00D16B  54                 	db	84
   990  00D16C  54                 	db	84
   991  00D16D  54                 	db	84
   992  00D16E  78                 	db	120
   993  00D16F  00                 	db	0
   994  00D170  00                 	db	0
   995  00D171  00                 	db	0
   996  00D172  7F                 	db	127
   997  00D173  48                 	db	72
   998  00D174  44                 	db	68
   999  00D175  44                 	db	68
  1000  00D176  38                 	db	56
  1001  00D177  00                 	db	0
  1002  00D178  00                 	db	0
  1003  00D179  00                 	db	0
  1004  00D17A  38                 	db	56
  1005  00D17B  44                 	db	68
  1006  00D17C  44                 	db	68
  1007  00D17D  28                 	db	40
  1008  00D17E  00                 	db	0
  1009  00D17F  00                 	db	0
  1010  00D180  00                 	db	0
  1011  00D181  00                 	db	0
  1012  00D182  38                 	db	56
  1013  00D183  44                 	db	68
  1014  00D184  44                 	db	68
  1015  00D185  48                 	db	72
  1016  00D186  7F                 	db	127
  1017  00D187  00                 	db	0
  1018  00D188  00                 	db	0
  1019  00D189  00                 	db	0
  1020  00D18A  38                 	db	56
  1021  00D18B  54                 	db	84
  1022  00D18C  54                 	db	84
  1023  00D18D  54                 	db	84
  1024  00D18E  18                 	db	24
  1025  00D18F  00                 	db	0
  1026  00D190  00                 	db	0
  1027  00D191  00                 	db	0
  1028  00D192  08                 	db	8
  1029  00D193  7E                 	db	126
  1030  00D194  09                 	db	9
  1031  00D195  02                 	db	2
  1032  00D196  00                 	db	0
  1033  00D197  00                 	db	0
  1034  00D198  00                 	db	0
  1035  00D199  00                 	db	0
  1036  00D19A  18                 	db	24
  1037  00D19B  A4                 	db	164
  1038  00D19C  A4                 	db	164
  1039  00D19D  A4                 	db	164
  1040  00D19E  7C                 	db	124
  1041  00D19F  00                 	db	0
  1042  00D1A0  00                 	db	0
  1043  00D1A1  00                 	db	0
  1044  00D1A2  7F                 	db	127
  1045  00D1A3  08                 	db	8
  1046  00D1A4  04                 	db	4
  1047  00D1A5  04                 	db	4
  1048  00D1A6  78                 	db	120
  1049  00D1A7  00                 	db	0
  1050  00D1A8  00                 	db	0
  1051  00D1A9  00                 	db	0
  1052  00D1AA  00                 	db	0
  1053  00D1AB  7D                 	db	125
  1054  00D1AC  00                 	db	0
  1055  00D1AD  00                 	db	0
  1056  00D1AE  00                 	db	0
  1057  00D1AF  00                 	db	0
  1058  00D1B0  00                 	db	0
  1059  00D1B1  00                 	db	0
  1060  00D1B2  80                 	db	128
  1061  00D1B3  84                 	db	132
  1062  00D1B4  7D                 	db	125
  1063  00D1B5  00                 	db	0
  1064  00D1B6  00                 	db	0
  1065  00D1B7  00                 	db	0
  1066  00D1B8  00                 	db	0
  1067  00D1B9  00                 	db	0
  1068  00D1BA  7F                 	db	127
  1069  00D1BB  10                 	db	16
  1070  00D1BC  28                 	db	40
  1071  00D1BD  44                 	db	68
  1072  00D1BE  00                 	db	0
  1073  00D1BF  00                 	db	0
  1074  00D1C0  00                 	db	0
  1075  00D1C1  00                 	db	0
  1076  00D1C2  41                 	db	65
  1077  00D1C3  7F                 	db	127
  1078  00D1C4  40                 	db	64
  1079  00D1C5  00                 	db	0
  1080  00D1C6  00                 	db	0
  1081  00D1C7  00                 	db	0
  1082  00D1C8  00                 	db	0
  1083  00D1C9  00                 	db	0
  1084  00D1CA  7C                 	db	124
  1085  00D1CB  04                 	db	4
  1086  00D1CC  18                 	db	24
  1087  00D1CD  04                 	db	4
  1088  00D1CE  78                 	db	120
  1089  00D1CF  00                 	db	0
  1090  00D1D0  00                 	db	0
  1091  00D1D1  00                 	db	0
  1092  00D1D2  7C                 	db	124
  1093  00D1D3  08                 	db	8
  1094  00D1D4  04                 	db	4
  1095  00D1D5  7C                 	db	124
  1096  00D1D6  00                 	db	0
  1097  00D1D7  00                 	db	0
  1098  00D1D8  00                 	db	0
  1099  00D1D9  00                 	db	0
  1100  00D1DA  38                 	db	56
  1101  00D1DB  44                 	db	68
  1102  00D1DC  44                 	db	68
  1103  00D1DD  38                 	db	56
  1104  00D1DE  00                 	db	0
  1105  00D1DF  00                 	db	0
  1106  00D1E0  00                 	db	0
  1107  00D1E1  00                 	db	0
  1108  00D1E2  FC                 	db	252
  1109  00D1E3  24                 	db	36
  1110  00D1E4  24                 	db	36
  1111  00D1E5  18                 	db	24
  1112  00D1E6  00                 	db	0
  1113  00D1E7  00                 	db	0
  1114  00D1E8  00                 	db	0
  1115  00D1E9  00                 	db	0
  1116  00D1EA  18                 	db	24
  1117  00D1EB  24                 	db	36
  1118  00D1EC  24                 	db	36
  1119  00D1ED  FC                 	db	252
  1120  00D1EE  00                 	db	0
  1121  00D1EF  00                 	db	0
  1122  00D1F0  00                 	db	0
  1123  00D1F1  00                 	db	0
  1124  00D1F2  00                 	db	0
  1125  00D1F3  7C                 	db	124
  1126  00D1F4  08                 	db	8
  1127  00D1F5  04                 	db	4
  1128  00D1F6  00                 	db	0
  1129  00D1F7  00                 	db	0
  1130  00D1F8  00                 	db	0
  1131  00D1F9  00                 	db	0
  1132  00D1FA  48                 	db	72
  1133  00D1FB  54                 	db	84
  1134  00D1FC  54                 	db	84
  1135  00D1FD  24                 	db	36
  1136  00D1FE  00                 	db	0
  1137  00D1FF  00                 	db	0
  1138  00D200  00                 	db	0
  1139  00D201  00                 	db	0
  1140  00D202  04                 	db	4
  1141  00D203  7F                 	db	127
  1142  00D204  44                 	db	68
  1143  00D205  00                 	db	0
  1144  00D206  00                 	db	0
  1145  00D207  00                 	db	0
  1146  00D208  00                 	db	0
  1147  00D209  00                 	db	0
  1148  00D20A  3C                 	db	60
  1149  00D20B  40                 	db	64
  1150  00D20C  40                 	db	64
  1151  00D20D  7C                 	db	124
  1152  00D20E  00                 	db	0
  1153  00D20F  00                 	db	0
  1154  00D210  00                 	db	0
  1155  00D211  00                 	db	0
  1156  00D212  1C                 	db	28
  1157  00D213  20                 	db	32
  1158  00D214  40                 	db	64
  1159  00D215  20                 	db	32
  1160  00D216  1C                 	db	28
  1161  00D217  00                 	db	0
  1162  00D218  00                 	db	0
  1163  00D219  00                 	db	0
  1164  00D21A  3C                 	db	60
  1165  00D21B  40                 	db	64
  1166  00D21C  30                 	db	48
  1167  00D21D  40                 	db	64
  1168  00D21E  3C                 	db	60
  1169  00D21F  00                 	db	0
  1170  00D220  00                 	db	0
  1171  00D221  00                 	db	0
  1172  00D222  44                 	db	68
  1173  00D223  28                 	db	40
  1174  00D224  10                 	db	16
  1175  00D225  28                 	db	40
  1176  00D226  44                 	db	68
  1177  00D227  00                 	db	0
  1178  00D228  00                 	db	0
  1179  00D229  00                 	db	0
  1180  00D22A  1C                 	db	28
  1181  00D22B  A0                 	db	160
  1182  00D22C  A0                 	db	160
  1183  00D22D  7C                 	db	124
  1184  00D22E  00                 	db	0
  1185  00D22F  00                 	db	0
  1186  00D230  00                 	db	0
  1187  00D231  00                 	db	0
  1188  00D232  44                 	db	68
  1189  00D233  64                 	db	100
  1190  00D234  54                 	db	84
  1191  00D235  4C                 	db	76
  1192  00D236  44                 	db	68
  1193  00D237  00                 	db	0
  1194  00D238  00                 	db	0
  1195  00D239  00                 	db	0
  1196  00D23A  08                 	db	8
  1197  00D23B  36                 	db	54
  1198  00D23C  41                 	db	65
  1199  00D23D  00                 	db	0
  1200  00D23E  00                 	db	0
  1201  00D23F  00                 	db	0
  1202  00D240  00                 	db	0
  1203  00D241  00                 	db	0
  1204  00D242  00                 	db	0
  1205  00D243  7F                 	db	127
  1206  00D244  00                 	db	0
  1207  00D245  00                 	db	0
  1208  00D246  00                 	db	0
  1209  00D247  00                 	db	0
  1210  00D248  00                 	db	0
  1211  00D249  00                 	db	0
  1212  00D24A  41                 	db	65
  1213  00D24B  36                 	db	54
  1214  00D24C  08                 	db	8
  1215  00D24D  00                 	db	0
  1216  00D24E  00                 	db	0
  1217  00D24F  00                 	db	0
  1218  00D250  00                 	db	0
  1219  00D251  00                 	db	0
  1220  00D252  02                 	db	2
  1221  00D253  01                 	db	1
  1222  00D254  01                 	db	1
  1223  00D255  02                 	db	2
  1224  00D256  01                 	db	1
  1225  00D257  00                 	db	0
  1226  00D258  00                 	db	0
  1227  00D259  00                 	db	0
  1228  00D25A  02                 	db	2
  1229  00D25B  05                 	db	5
  1230  00D25C  05                 	db	5
  1231  00D25D  02                 	db	2
  1232  00D25E  00                 	db	0
  1233  00D25F  00                 	db	0
  1234  00D260  00                 	db	0
  1235  00D261                     __end_of_OledFont:
  1236                           	opt stack 0
  1237  00D261                     atan@coeff_a:
  1238                           	opt stack 0
  1239  00D261  3C06               	dw	15366
  1240  00D263  4204               	dw	16900
  1241  00D265  9F7D               	dw	40829
  1242  00D267  426A               	dw	17002
  1243  00D269  905C               	dw	36956
  1244  00D26B  4201               	dw	16897
  1245  00D26D  4D60               	dw	19808
  1246  00D26F  40BB               	dw	16571
  1247  00D271  EC51               	dw	60497
  1248  00D273  3E47               	dw	15943
  1249  00D275  8DDE               	dw	36318
  1250  00D277  BB1F               	dw	47903
  1251  00D279                     __end_ofatan@coeff_a:
  1252                           	opt stack 0
  1253  00D279                     sin@coeff_a:
  1254                           	opt stack 0
  1255  00D279  F3EC               	dw	62444
  1256  00D27B  484A               	dw	18506
  1257  00D27D  9535               	dw	38197
  1258  00D27F  C795               	dw	51093
  1259  00D281  C117               	dw	49431
  1260  00D283  45DC               	dw	17884
  1261  00D285  DBFD               	dw	56317
  1262  00D287  C36D               	dw	50029
  1263  00D289  B372               	dw	45938
  1264  00D28B  4033               	dw	16435
  1265  00D28D                     __end_ofsin@coeff_a:
  1266                           	opt stack 0
  1267  00D28D                     atan@coeff_b:
  1268                           	opt stack 0
  1269  00D28D  3C06               	dw	15366
  1270  00D28F  4204               	dw	16900
  1271  00D291  59C0               	dw	22976
  1272  00D293  428B               	dw	17035
  1273  00D295  0474               	dw	1140
  1274  00D297  4244               	dw	16964
  1275  00D299  9BF9               	dw	39929
  1276  00D29B  414F               	dw	16719
  1277  00D29D  0000               	dw	0
  1278  00D29F  3F80               	dw	16256
  1279  00D2A1                     __end_ofatan@coeff_b:
  1280                           	opt stack 0
  1281  00D2A1                     sin@coeff_b:
  1282                           	opt stack 0
  1283  00D2A1  342B               	dw	13355
  1284  00D2A3  4801               	dw	18433
  1285  00D2A5  9D7F               	dw	40319
  1286  00D2A7  45B0               	dw	17840
  1287  00D2A9  FFE7               	dw	65511
  1288  00D2AB  42D9               	dw	17113
  1289  00D2AD  0000               	dw	0
  1290  00D2AF  3F80               	dw	16256
  1291  00D2B1                     __end_ofsin@coeff_b:
  1292                           	opt stack 0
  1293  00D2B1                     STR_162:
  1294  00D2B1  4C                 	db	76	;'L'
  1295  00D2B2  69                 	db	105	;'i'
  1296  00D2B3  73                 	db	115	;'s'
  1297  00D2B4  74                 	db	116	;'t'
  1298  00D2B5  20                 	db	32
  1299  00D2B6  6F                 	db	111	;'o'
  1300  00D2B7  66                 	db	102	;'f'
  1301  00D2B8  20                 	db	32
  1302  00D2B9  61                 	db	97	;'a'
  1303  00D2BA  6C                 	db	108	;'l'
  1304  00D2BB  6C                 	db	108	;'l'
  1305  00D2BC  20                 	db	32
  1306  00D2BD  73                 	db	115	;'s'
  1307  00D2BE  75                 	db	117	;'u'
  1308  00D2BF  70                 	db	112	;'p'
  1309  00D2C0  70                 	db	112	;'p'
  1310  00D2C1  6F                 	db	111	;'o'
  1311  00D2C2  72                 	db	114	;'r'
  1312  00D2C3  74                 	db	116	;'t'
  1313  00D2C4  65                 	db	101	;'e'
  1314  00D2C5  64                 	db	100	;'d'
  1315  00D2C6  20                 	db	32
  1316  00D2C7  63                 	db	99	;'c'
  1317  00D2C8  6F                 	db	111	;'o'
  1318  00D2C9  6D                 	db	109	;'m'
  1319  00D2CA  6D                 	db	109	;'m'
  1320  00D2CB  61                 	db	97	;'a'
  1321  00D2CC  6E                 	db	110	;'n'
  1322  00D2CD  64                 	db	100	;'d'
  1323  00D2CE  73                 	db	115	;'s'
  1324  00D2CF  3A                 	db	58	;':'
  1325  00D2D0  0A                 	db	10
  1326  00D2D1  0D                 	db	13
  1327  00D2D2  44                 	db	68	;'D'
  1328  00D2D3  65                 	db	101	;'e'
  1329  00D2D4  76                 	db	118	;'v'
  1330  00D2D5  69                 	db	105	;'i'
  1331  00D2D6  63                 	db	99	;'c'
  1332  00D2D7  65                 	db	101	;'e'
  1333  00D2D8  20                 	db	32
  1334  00D2D9  43                 	db	67	;'C'
  1335  00D2DA  6F                 	db	111	;'o'
  1336  00D2DB  6E                 	db	110	;'n'
  1337  00D2DC  74                 	db	116	;'t'
  1338  00D2DD  72                 	db	114	;'r'
  1339  00D2DE  6F                 	db	111	;'o'
  1340  00D2DF  6C                 	db	108	;'l'
  1341  00D2E0  20                 	db	32
  1342  00D2E1  43                 	db	67	;'C'
  1343  00D2E2  6F                 	db	111	;'o'
  1344  00D2E3  6D                 	db	109	;'m'
  1345  00D2E4  6D                 	db	109	;'m'
  1346  00D2E5  61                 	db	97	;'a'
  1347  00D2E6  6E                 	db	110	;'n'
  1348  00D2E7  64                 	db	100	;'d'
  1349  00D2E8  73                 	db	115	;'s'
  1350  00D2E9  3A                 	db	58	;':'
  1351  00D2EA  20                 	db	32
  1352  00D2EB  43                 	db	67	;'C'
  1353  00D2EC  6F                 	db	111	;'o'
  1354  00D2ED  6D                 	db	109	;'m'
  1355  00D2EE  6D                 	db	109	;'m'
  1356  00D2EF  61                 	db	97	;'a'
  1357  00D2F0  6E                 	db	110	;'n'
  1358  00D2F1  64                 	db	100	;'d'
  1359  00D2F2  73                 	db	115	;'s'
  1360  00D2F3  20                 	db	32
  1361  00D2F4  74                 	db	116	;'t'
  1362  00D2F5  6F                 	db	111	;'o'
  1363  00D2F6  20                 	db	32
  1364  00D2F7  76                 	db	118	;'v'
  1365  00D2F8  69                 	db	105	;'i'
  1366  00D2F9  65                 	db	101	;'e'
  1367  00D2FA  77                 	db	119	;'w'
  1368  00D2FB  20                 	db	32
  1369  00D2FC  61                 	db	97	;'a'
  1370  00D2FD  6E                 	db	110	;'n'
  1371  00D2FE  64                 	db	100	;'d'
  1372  00D2FF  20                 	db	32
  1373  00D300  63                 	db	99	;'c'
  1374  00D301  6F                 	db	111	;'o'
  1375  00D302  6E                 	db	110	;'n'
  1376  00D303  74                 	db	116	;'t'
  1377  00D304  72                 	db	114	;'r'
  1378  00D305  6F                 	db	111	;'o'
  1379  00D306  6C                 	db	108	;'l'
  1380  00D307  20                 	db	32
  1381  00D308  6C                 	db	108	;'l'
  1382  00D309  6F                 	db	111	;'o'
  1383  00D30A  77                 	db	119	;'w'
  1384  00D30B  20                 	db	32
  1385  00D30C  6C                 	db	108	;'l'
  1386  00D30D  65                 	db	101	;'e'
  1387  00D30E  76                 	db	118	;'v'
  1388  00D30F  65                 	db	101	;'e'
  1389  00D310  6C                 	db	108	;'l'
  1390  00D311  20                 	db	32
  1391  00D312  73                 	db	115	;'s'
  1392  00D313  79                 	db	121	;'y'
  1393  00D314  73                 	db	115	;'s'
  1394  00D315  74                 	db	116	;'t'
  1395  00D316  65                 	db	101	;'e'
  1396  00D317  6D                 	db	109	;'m'
  1397  00D318  20                 	db	32
  1398  00D319  66                 	db	102	;'f'
  1399  00D31A  75                 	db	117	;'u'
  1400  00D31B  6E                 	db	110	;'n'
  1401  00D31C  63                 	db	99	;'c'
  1402  00D31D  74                 	db	116	;'t'
  1403  00D31E  69                 	db	105	;'i'
  1404  00D31F  6F                 	db	111	;'o'
  1405  00D320  6E                 	db	110	;'n'
  1406  00D321  61                 	db	97	;'a'
  1407  00D322  6C                 	db	108	;'l'
  1408  00D323  69                 	db	105	;'i'
  1409  00D324  74                 	db	116	;'t'
  1410  00D325  79                 	db	121	;'y'
  1411  00D326  0A                 	db	10
  1412  00D327  0D                 	db	13
  1413  00D328  20                 	db	32
  1414  00D329  20                 	db	32
  1415  00D32A  20                 	db	32
  1416  00D32B  52                 	db	82	;'R'
  1417  00D32C  65                 	db	101	;'e'
  1418  00D32D  73                 	db	115	;'s'
  1419  00D32E  65                 	db	101	;'e'
  1420  00D32F  74                 	db	116	;'t'
  1421  00D330  3A                 	db	58	;':'
  1422  00D331  20                 	db	32
  1423  00D332  43                 	db	67	;'C'
  1424  00D333  6C                 	db	108	;'l'
  1425  00D334  65                 	db	101	;'e'
  1426  00D335  61                 	db	97	;'a'
  1427  00D336  72                 	db	114	;'r'
  1428  00D337  73                 	db	115	;'s'
  1429  00D338  20                 	db	32
  1430  00D339  74                 	db	116	;'t'
  1431  00D33A  68                 	db	104	;'h'
  1432  00D33B  65                 	db	101	;'e'
  1433  00D33C  20                 	db	32
  1434  00D33D  74                 	db	116	;'t'
  1435  00D33E  65                 	db	101	;'e'
  1436  00D33F  72                 	db	114	;'r'
  1437  00D340  6D                 	db	109	;'m'
  1438  00D341  69                 	db	105	;'i'
  1439  00D342  6E                 	db	110	;'n'
  1440  00D343  61                 	db	97	;'a'
  1441  00D344  6C                 	db	108	;'l'
  1442  00D345  20                 	db	32
  1443  00D346  61                 	db	97	;'a'
  1444  00D347  6E                 	db	110	;'n'
  1445  00D348  64                 	db	100	;'d'
  1446  00D349  20                 	db	32
  1447  00D34A  72                 	db	114	;'r'
  1448  00D34B  65                 	db	101	;'e'
  1449  00D34C  73                 	db	115	;'s'
  1450  00D34D  65                 	db	101	;'e'
  1451  00D34E  74                 	db	116	;'t'
  1452  00D34F  73                 	db	115	;'s'
  1453  00D350  20                 	db	32
  1454  00D351  74                 	db	116	;'t'
  1455  00D352  68                 	db	104	;'h'
  1456  00D353  65                 	db	101	;'e'
  1457  00D354  20                 	db	32
  1458  00D355  6D                 	db	109	;'m'
  1459  00D356  69                 	db	105	;'i'
  1460  00D357  63                 	db	99	;'c'
  1461  00D358  72                 	db	114	;'r'
  1462  00D359  6F                 	db	111	;'o'
  1463  00D35A  63                 	db	99	;'c'
  1464  00D35B  6F                 	db	111	;'o'
  1465  00D35C  6E                 	db	110	;'n'
  1466  00D35D  74                 	db	116	;'t'
  1467  00D35E  72                 	db	114	;'r'
  1468  00D35F  6F                 	db	111	;'o'
  1469  00D360  6C                 	db	108	;'l'
  1470  00D361  6C                 	db	108	;'l'
  1471  00D362  65                 	db	101	;'e'
  1472  00D363  72                 	db	114	;'r'
  1473  00D364  0A                 	db	10
  1474  00D365  0D                 	db	13
  1475  00D366  20                 	db	32
  1476  00D367  20                 	db	32
  1477  00D368  20                 	db	32
  1478  00D369  43                 	db	67	;'C'
  1479  00D36A  6C                 	db	108	;'l'
  1480  00D36B  65                 	db	101	;'e'
  1481  00D36C  61                 	db	97	;'a'
  1482  00D36D  72                 	db	114	;'r'
  1483  00D36E  3A                 	db	58	;':'
  1484  00D36F  20                 	db	32
  1485  00D370  43                 	db	67	;'C'
  1486  00D371  6C                 	db	108	;'l'
  1487  00D372  65                 	db	101	;'e'
  1488  00D373  61                 	db	97	;'a'
  1489  00D374  72                 	db	114	;'r'
  1490  00D375  73                 	db	115	;'s'
  1491  00D376  20                 	db	32
  1492  00D377  74                 	db	116	;'t'
  1493  00D378  68                 	db	104	;'h'
  1494  00D379  65                 	db	101	;'e'
  1495  00D37A  20                 	db	32
  1496  00D37B  74                 	db	116	;'t'
  1497  00D37C  65                 	db	101	;'e'
  1498  00D37D  72                 	db	114	;'r'
  1499  00D37E  6D                 	db	109	;'m'
  1500  00D37F  69                 	db	105	;'i'
  1501  00D380  6E                 	db	110	;'n'
  1502  00D381  61                 	db	97	;'a'
  1503  00D382  6C                 	db	108	;'l'
  1504  00D383  20                 	db	32
  1505  00D384  62                 	db	98	;'b'
  1506  00D385  75                 	db	117	;'u'
  1507  00D386  74                 	db	116	;'t'
  1508  00D387  20                 	db	32
  1509  00D388  64                 	db	100	;'d'
  1510  00D389  6F                 	db	111	;'o'
  1511  00D38A  65                 	db	101	;'e'
  1512  00D38B  73                 	db	115	;'s'
  1513  00D38C  6E                 	db	110	;'n'
  1514  00D38D  27                 	db	39
  1515  00D38E  74                 	db	116	;'t'
  1516  00D38F  20                 	db	32
  1517  00D390  72                 	db	114	;'r'
  1518  00D391  65                 	db	101	;'e'
  1519  00D392  73                 	db	115	;'s'
  1520  00D393  65                 	db	101	;'e'
  1521  00D394  74                 	db	116	;'t'
  1522  00D395  20                 	db	32
  1523  00D396  74                 	db	116	;'t'
  1524  00D397  68                 	db	104	;'h'
  1525  00D398  65                 	db	101	;'e'
  1526  00D399  20                 	db	32
  1527  00D39A  6D                 	db	109	;'m'
  1528  00D39B  69                 	db	105	;'i'
  1529  00D39C  63                 	db	99	;'c'
  1530  00D39D  72                 	db	114	;'r'
  1531  00D39E  6F                 	db	111	;'o'
  1532  00D39F  0A                 	db	10
  1533  00D3A0  0D                 	db	13
  1534  00D3A1  20                 	db	32
  1535  00D3A2  20                 	db	32
  1536  00D3A3  20                 	db	32
  1537  00D3A4  43                 	db	67	;'C'
  1538  00D3A5  61                 	db	97	;'a'
  1539  00D3A6  75                 	db	117	;'u'
  1540  00D3A7  73                 	db	115	;'s'
  1541  00D3A8  65                 	db	101	;'e'
  1542  00D3A9  20                 	db	32
  1543  00D3AA  6F                 	db	111	;'o'
  1544  00D3AB  66                 	db	102	;'f'
  1545  00D3AC  20                 	db	32
  1546  00D3AD  52                 	db	82	;'R'
  1547  00D3AE  65                 	db	101	;'e'
  1548  00D3AF  73                 	db	115	;'s'
  1549  00D3B0  65                 	db	101	;'e'
  1550  00D3B1  74                 	db	116	;'t'
  1551  00D3B2  3F                 	db	63	;'?'
  1552  00D3B3  3A                 	db	58	;':'
  1553  00D3B4  20                 	db	32
  1554  00D3B5  52                 	db	82	;'R'
  1555  00D3B6  65                 	db	101	;'e'
  1556  00D3B7  74                 	db	116	;'t'
  1557  00D3B8  75                 	db	117	;'u'
  1558  00D3B9  72                 	db	114	;'r'
  1559  00D3BA  6E                 	db	110	;'n'
  1560  00D3BB  73                 	db	115	;'s'
  1561  00D3BC  20                 	db	32
  1562  00D3BD  74                 	db	116	;'t'
  1563  00D3BE  68                 	db	104	;'h'
  1564  00D3BF  65                 	db	101	;'e'
  1565  00D3C0  20                 	db	32
  1566  00D3C1  63                 	db	99	;'c'
  1567  00D3C2  61                 	db	97	;'a'
  1568  00D3C3  75                 	db	117	;'u'
  1569  00D3C4  73                 	db	115	;'s'
  1570  00D3C5  65                 	db	101	;'e'
  1571  00D3C6  20                 	db	32
  1572  00D3C7  6F                 	db	111	;'o'
  1573  00D3C8  66                 	db	102	;'f'
  1574  00D3C9  20                 	db	32
  1575  00D3CA  74                 	db	116	;'t'
  1576  00D3CB  68                 	db	104	;'h'
  1577  00D3CC  65                 	db	101	;'e'
  1578  00D3CD  20                 	db	32
  1579  00D3CE  6D                 	db	109	;'m'
  1580  00D3CF  6F                 	db	111	;'o'
  1581  00D3D0  73                 	db	115	;'s'
  1582  00D3D1  74                 	db	116	;'t'
  1583  00D3D2  20                 	db	32
  1584  00D3D3  72                 	db	114	;'r'
  1585  00D3D4  65                 	db	101	;'e'
  1586  00D3D5  63                 	db	99	;'c'
  1587  00D3D6  65                 	db	101	;'e'
  1588  00D3D7  6E                 	db	110	;'n'
  1589  00D3D8  74                 	db	116	;'t'
  1590  00D3D9  20                 	db	32
  1591  00D3DA  64                 	db	100	;'d'
  1592  00D3DB  65                 	db	101	;'e'
  1593  00D3DC  76                 	db	118	;'v'
  1594  00D3DD  69                 	db	105	;'i'
  1595  00D3DE  63                 	db	99	;'c'
  1596  00D3DF  65                 	db	101	;'e'
  1597  00D3E0  20                 	db	32
  1598  00D3E1  72                 	db	114	;'r'
  1599  00D3E2  65                 	db	101	;'e'
  1600  00D3E3  73                 	db	115	;'s'
  1601  00D3E4  65                 	db	101	;'e'
  1602  00D3E5  74                 	db	116	;'t'
  1603  00D3E6  0A                 	db	10
  1604  00D3E7  0D                 	db	13
  1605  00D3E8  20                 	db	32
  1606  00D3E9  20                 	db	32
  1607  00D3EA  20                 	db	32
  1608  00D3EB  2A                 	db	42
  1609  00D3EC  49                 	db	73	;'I'
  1610  00D3ED  44                 	db	68	;'D'
  1611  00D3EE  4E                 	db	78	;'N'
  1612  00D3EF  3F                 	db	63	;'?'
  1613  00D3F0  3A                 	db	58	;':'
  1614  00D3F1  20                 	db	32
  1615  00D3F2  52                 	db	82	;'R'
  1616  00D3F3  65                 	db	101	;'e'
  1617  00D3F4  74                 	db	116	;'t'
  1618  00D3F5  75                 	db	117	;'u'
  1619  00D3F6  72                 	db	114	;'r'
  1620  00D3F7  6E                 	db	110	;'n'
  1621  00D3F8  73                 	db	115	;'s'
  1622  00D3F9  20                 	db	32
  1623  00D3FA  64                 	db	100	;'d'
  1624  00D3FB  65                 	db	101	;'e'
  1625  00D3FC  76                 	db	118	;'v'
  1626  00D3FD  69                 	db	105	;'i'
  1627  00D3FE  63                 	db	99	;'c'
  1628  00D3FF  65                 	db	101	;'e'
  1629  00D400  20                 	db	32
  1630  00D401  69                 	db	105	;'i'
  1631  00D402  64                 	db	100	;'d'
  1632  00D403  65                 	db	101	;'e'
  1633  00D404  6E                 	db	110	;'n'
  1634  00D405  74                 	db	116	;'t'
  1635  00D406  69                 	db	105	;'i'
  1636  00D407  66                 	db	102	;'f'
  1637  00D408  69                 	db	105	;'i'
  1638  00D409  63                 	db	99	;'c'
  1639  00D40A  61                 	db	97	;'a'
  1640  00D40B  74                 	db	116	;'t'
  1641  00D40C  69                 	db	105	;'i'
  1642  00D40D  6F                 	db	111	;'o'
  1643  00D40E  6E                 	db	110	;'n'
  1644  00D40F  20                 	db	32
  1645  00D410  73                 	db	115	;'s'
  1646  00D411  74                 	db	116	;'t'
  1647  00D412  72                 	db	114	;'r'
  1648  00D413  69                 	db	105	;'i'
  1649  00D414  6E                 	db	110	;'n'
  1650  00D415  67                 	db	103	;'g'
  1651  00D416  0A                 	db	10
  1652  00D417  0D                 	db	13
  1653  00D418  20                 	db	32
  1654  00D419  20                 	db	32
  1655  00D41A  20                 	db	32
  1656  00D41B  44                 	db	68	;'D'
  1657  00D41C  65                 	db	101	;'e'
  1658  00D41D  76                 	db	118	;'v'
  1659  00D41E  69                 	db	105	;'i'
  1660  00D41F  63                 	db	99	;'c'
  1661  00D420  65                 	db	101	;'e'
  1662  00D421  20                 	db	32
  1663  00D422  4F                 	db	79	;'O'
  1664  00D423  6E                 	db	110	;'n'
  1665  00D424  20                 	db	32
  1666  00D425  54                 	db	84	;'T'
  1667  00D426  69                 	db	105	;'i'
  1668  00D427  6D                 	db	109	;'m'
  1669  00D428  65                 	db	101	;'e'
  1670  00D429  3F                 	db	63	;'?'
  1671  00D42A  3A                 	db	58	;':'
  1672  00D42B  20                 	db	32
  1673  00D42C  52                 	db	82	;'R'
  1674  00D42D  65                 	db	101	;'e'
  1675  00D42E  74                 	db	116	;'t'
  1676  00D42F  75                 	db	117	;'u'
  1677  00D430  72                 	db	114	;'r'
  1678  00D431  6E                 	db	110	;'n'
  1679  00D432  73                 	db	115	;'s'
  1680  00D433  20                 	db	32
  1681  00D434  64                 	db	100	;'d'
  1682  00D435  65                 	db	101	;'e'
  1683  00D436  76                 	db	118	;'v'
  1684  00D437  69                 	db	105	;'i'
  1685  00D438  63                 	db	99	;'c'
  1686  00D439  65                 	db	101	;'e'
  1687  00D43A  20                 	db	32
  1688  00D43B  6F                 	db	111	;'o'
  1689  00D43C  6E                 	db	110	;'n'
  1690  00D43D  20                 	db	32
  1691  00D43E  74                 	db	116	;'t'
  1692  00D43F  69                 	db	105	;'i'
  1693  00D440  6D                 	db	109	;'m'
  1694  00D441  65                 	db	101	;'e'
  1695  00D442  20                 	db	32
  1696  00D443  73                 	db	115	;'s'
  1697  00D444  69                 	db	105	;'i'
  1698  00D445  6E                 	db	110	;'n'
  1699  00D446  63                 	db	99	;'c'
  1700  00D447  65                 	db	101	;'e'
  1701  00D448  20                 	db	32
  1702  00D449  6C                 	db	108	;'l'
  1703  00D44A  61                 	db	97	;'a'
  1704  00D44B  73                 	db	115	;'s'
  1705  00D44C  74                 	db	116	;'t'
  1706  00D44D  20                 	db	32
  1707  00D44E  64                 	db	100	;'d'
  1708  00D44F  65                 	db	101	;'e'
  1709  00D450  76                 	db	118	;'v'
  1710  00D451  69                 	db	105	;'i'
  1711  00D452  63                 	db	99	;'c'
  1712  00D453  65                 	db	101	;'e'
  1713  00D454  20                 	db	32
  1714  00D455  72                 	db	114	;'r'
  1715  00D456  65                 	db	101	;'e'
  1716  00D457  73                 	db	115	;'s'
  1717  00D458  65                 	db	101	;'e'
  1718  00D459  74                 	db	116	;'t'
  1719  00D45A  0A                 	db	10
  1720  00D45B  0D                 	db	13
  1721  00D45C  20                 	db	32
  1722  00D45D  20                 	db	32
  1723  00D45E  20                 	db	32
  1724  00D45F  44                 	db	68	;'D'
  1725  00D460  65                 	db	101	;'e'
  1726  00D461  76                 	db	118	;'v'
  1727  00D462  69                 	db	105	;'i'
  1728  00D463  63                 	db	99	;'c'
  1729  00D464  65                 	db	101	;'e'
  1730  00D465  20                 	db	32
  1731  00D466  49                 	db	73	;'I'
  1732  00D467  44                 	db	68	;'D'
  1733  00D468  3F                 	db	63	;'?'
  1734  00D469  3A                 	db	58	;':'
  1735  00D46A  20                 	db	32
  1736  00D46B  52                 	db	82	;'R'
  1737  00D46C  65                 	db	101	;'e'
  1738  00D46D  74                 	db	116	;'t'
  1739  00D46E  75                 	db	117	;'u'
  1740  00D46F  72                 	db	114	;'r'
  1741  00D470  6E                 	db	110	;'n'
  1742  00D471  73                 	db	115	;'s'
  1743  00D472  20                 	db	32
  1744  00D473  64                 	db	100	;'d'
  1745  00D474  65                 	db	101	;'e'
  1746  00D475  76                 	db	118	;'v'
  1747  00D476  69                 	db	105	;'i'
  1748  00D477  63                 	db	99	;'c'
  1749  00D478  65                 	db	101	;'e'
  1750  00D479  20                 	db	32
  1751  00D47A  49                 	db	73	;'I'
  1752  00D47B  44                 	db	68	;'D'
  1753  00D47C  20                 	db	32
  1754  00D47D  61                 	db	97	;'a'
  1755  00D47E  73                 	db	115	;'s'
  1756  00D47F  20                 	db	32
  1757  00D480  70                 	db	112	;'p'
  1758  00D481  72                 	db	114	;'r'
  1759  00D482  65                 	db	101	;'e'
  1760  00D483  2D                 	db	45
  1761  00D484  70                 	db	112	;'p'
  1762  00D485  72                 	db	114	;'r'
  1763  00D486  6F                 	db	111	;'o'
  1764  00D487  67                 	db	103	;'g'
  1765  00D488  72                 	db	114	;'r'
  1766  00D489  61                 	db	97	;'a'
  1767  00D48A  6D                 	db	109	;'m'
  1768  00D48B  6D                 	db	109	;'m'
  1769  00D48C  65                 	db	101	;'e'
  1770  00D48D  64                 	db	100	;'d'
  1771  00D48E  20                 	db	32
  1772  00D48F  69                 	db	105	;'i'
  1773  00D490  6E                 	db	110	;'n'
  1774  00D491  20                 	db	32
  1775  00D492  66                 	db	102	;'f'
  1776  00D493  6C                 	db	108	;'l'
  1777  00D494  61                 	db	97	;'a'
  1778  00D495  73                 	db	115	;'s'
  1779  00D496  68                 	db	104	;'h'
  1780  00D497  20                 	db	32
  1781  00D498  6D                 	db	109	;'m'
  1782  00D499  65                 	db	101	;'e'
  1783  00D49A  6D                 	db	109	;'m'
  1784  00D49B  6F                 	db	111	;'o'
  1785  00D49C  72                 	db	114	;'r'
  1786  00D49D  79                 	db	121	;'y'
  1787  00D49E  0A                 	db	10
  1788  00D49F  0D                 	db	13
  1789  00D4A0  20                 	db	32
  1790  00D4A1  20                 	db	32
  1791  00D4A2  20                 	db	32
  1792  00D4A3  52                 	db	82	;'R'
  1793  00D4A4  65                 	db	101	;'e'
  1794  00D4A5  76                 	db	118	;'v'
  1795  00D4A6  69                 	db	105	;'i'
  1796  00D4A7  73                 	db	115	;'s'
  1797  00D4A8  69                 	db	105	;'i'
  1798  00D4A9  6F                 	db	111	;'o'
  1799  00D4AA  6E                 	db	110	;'n'
  1800  00D4AB  20                 	db	32
  1801  00D4AC  49                 	db	73	;'I'
  1802  00D4AD  44                 	db	68	;'D'
  1803  00D4AE  3F                 	db	63	;'?'
  1804  00D4AF  3A                 	db	58	;':'
  1805  00D4B0  20                 	db	32
  1806  00D4B1  52                 	db	82	;'R'
  1807  00D4B2  65                 	db	101	;'e'
  1808  00D4B3  74                 	db	116	;'t'
  1809  00D4B4  75                 	db	117	;'u'
  1810  00D4B5  72                 	db	114	;'r'
  1811  00D4B6  6E                 	db	110	;'n'
  1812  00D4B7  73                 	db	115	;'s'
  1813  00D4B8  20                 	db	32
  1814  00D4B9  64                 	db	100	;'d'
  1815  00D4BA  65                 	db	101	;'e'
  1816  00D4BB  76                 	db	118	;'v'
  1817  00D4BC  69                 	db	105	;'i'
  1818  00D4BD  63                 	db	99	;'c'
  1819  00D4BE  65                 	db	101	;'e'
  1820  00D4BF  20                 	db	32
  1821  00D4C0  73                 	db	115	;'s'
  1822  00D4C1  69                 	db	105	;'i'
  1823  00D4C2  6C                 	db	108	;'l'
  1824  00D4C3  69                 	db	105	;'i'
  1825  00D4C4  63                 	db	99	;'c'
  1826  00D4C5  6F                 	db	111	;'o'
  1827  00D4C6  6E                 	db	110	;'n'
  1828  00D4C7  20                 	db	32
  1829  00D4C8  72                 	db	114	;'r'
  1830  00D4C9  65                 	db	101	;'e'
  1831  00D4CA  76                 	db	118	;'v'
  1832  00D4CB  69                 	db	105	;'i'
  1833  00D4CC  73                 	db	115	;'s'
  1834  00D4CD  69                 	db	105	;'i'
  1835  00D4CE  6F                 	db	111	;'o'
  1836  00D4CF  6E                 	db	110	;'n'
  1837  00D4D0  20                 	db	32
  1838  00D4D1  49                 	db	73	;'I'
  1839  00D4D2  44                 	db	68	;'D'
  1840  00D4D3  20                 	db	32
  1841  00D4D4  61                 	db	97	;'a'
  1842  00D4D5  73                 	db	115	;'s'
  1843  00D4D6  20                 	db	32
  1844  00D4D7  70                 	db	112	;'p'
  1845  00D4D8  72                 	db	114	;'r'
  1846  00D4D9  65                 	db	101	;'e'
  1847  00D4DA  2D                 	db	45
  1848  00D4DB  70                 	db	112	;'p'
  1849  00D4DC  72                 	db	114	;'r'
  1850  00D4DD  6F                 	db	111	;'o'
  1851  00D4DE  67                 	db	103	;'g'
  1852  00D4DF  72                 	db	114	;'r'
  1853  00D4E0  61                 	db	97	;'a'
  1854  00D4E1  6D                 	db	109	;'m'
  1855  00D4E2  6D                 	db	109	;'m'
  1856  00D4E3  65                 	db	101	;'e'
  1857  00D4E4  64                 	db	100	;'d'
  1858  00D4E5  20                 	db	32
  1859  00D4E6  69                 	db	105	;'i'
  1860  00D4E7  6E                 	db	110	;'n'
  1861  00D4E8  20                 	db	32
  1862  00D4E9  66                 	db	102	;'f'
  1863  00D4EA  6C                 	db	108	;'l'
  1864  00D4EB  61                 	db	97	;'a'
  1865  00D4EC  73                 	db	115	;'s'
  1866  00D4ED  68                 	db	104	;'h'
  1867  00D4EE  20                 	db	32
  1868  00D4EF  6D                 	db	109	;'m'
  1869  00D4F0  65                 	db	101	;'e'
  1870  00D4F1  6D                 	db	109	;'m'
  1871  00D4F2  6F                 	db	111	;'o'
  1872  00D4F3  72                 	db	114	;'r'
  1873  00D4F4  79                 	db	121	;'y'
  1874  00D4F5  0A                 	db	10
  1875  00D4F6  0D                 	db	13
  1876  00D4F7  20                 	db	32
  1877  00D4F8  20                 	db	32
  1878  00D4F9  20                 	db	32
  1879  00D4FA  55                 	db	85	;'U'
  1880  00D4FB  73                 	db	115	;'s'
  1881  00D4FC  65                 	db	101	;'e'
  1882  00D4FD  72                 	db	114	;'r'
  1883  00D4FE  20                 	db	32
  1884  00D4FF  49                 	db	73	;'I'
  1885  00D500  44                 	db	68	;'D'
  1886  00D501  73                 	db	115	;'s'
  1887  00D502  3F                 	db	63	;'?'
  1888  00D503  3A                 	db	58	;':'
  1889  00D504  20                 	db	32
  1890  00D505  52                 	db	82	;'R'
  1891  00D506  65                 	db	101	;'e'
  1892  00D507  74                 	db	116	;'t'
  1893  00D508  75                 	db	117	;'u'
  1894  00D509  72                 	db	114	;'r'
  1895  00D50A  6E                 	db	110	;'n'
  1896  00D50B  73                 	db	115	;'s'
  1897  00D50C  20                 	db	32
  1898  00D50D  61                 	db	97	;'a'
  1899  00D50E  20                 	db	32
  1900  00D50F  6C                 	db	108	;'l'
  1901  00D510  69                 	db	105	;'i'
  1902  00D511  73                 	db	115	;'s'
  1903  00D512  74                 	db	116	;'t'
  1904  00D513  20                 	db	32
  1905  00D514  6F                 	db	111	;'o'
  1906  00D515  66                 	db	102	;'f'
  1907  00D516  20                 	db	32
  1908  00D517  75                 	db	117	;'u'
  1909  00D518  73                 	db	115	;'s'
  1910  00D519  65                 	db	101	;'e'
  1911  00D51A  72                 	db	114	;'r'
  1912  00D51B  20                 	db	32
  1913  00D51C  49                 	db	73	;'I'
  1914  00D51D  44                 	db	68	;'D'
  1915  00D51E  73                 	db	115	;'s'
  1916  00D51F  20                 	db	32
  1917  00D520  28                 	db	40
  1918  00D521  64                 	db	100	;'d'
  1919  00D522  69                 	db	105	;'i'
  1920  00D523  73                 	db	115	;'s'
  1921  00D524  70                 	db	112	;'p'
  1922  00D525  6C                 	db	108	;'l'
  1923  00D526  61                 	db	97	;'a'
  1924  00D527  79                 	db	121	;'y'
  1925  00D528  65                 	db	101	;'e'
  1926  00D529  64                 	db	100	;'d'
  1927  00D52A  20                 	db	32
  1928  00D52B  69                 	db	105	;'i'
  1929  00D52C  6E                 	db	110	;'n'
  1930  00D52D  20                 	db	32
  1931  00D52E  68                 	db	104	;'h'
  1932  00D52F  65                 	db	101	;'e'
  1933  00D530  78                 	db	120	;'x'
  1934  00D531  29                 	db	41
  1935  00D532  20                 	db	32
  1936  00D533  61                 	db	97	;'a'
  1937  00D534  73                 	db	115	;'s'
  1938  00D535  20                 	db	32
  1939  00D536  73                 	db	115	;'s'
  1940  00D537  74                 	db	116	;'t'
  1941  00D538  6F                 	db	111	;'o'
  1942  00D539  72                 	db	114	;'r'
  1943  00D53A  65                 	db	101	;'e'
  1944  00D53B  64                 	db	100	;'d'
  1945  00D53C  20                 	db	32
  1946  00D53D  69                 	db	105	;'i'
  1947  00D53E  6E                 	db	110	;'n'
  1948  00D53F  20                 	db	32
  1949  00D540  66                 	db	102	;'f'
  1950  00D541  6C                 	db	108	;'l'
  1951  00D542  61                 	db	97	;'a'
  1952  00D543  73                 	db	115	;'s'
  1953  00D544  68                 	db	104	;'h'
  1954  00D545  20                 	db	32
  1955  00D546  6D                 	db	109	;'m'
  1956  00D547  65                 	db	101	;'e'
  1957  00D548  6D                 	db	109	;'m'
  1958  00D549  6F                 	db	111	;'o'
  1959  00D54A  72                 	db	114	;'r'
  1960  00D54B  79                 	db	121	;'y'
  1961  00D54C  0A                 	db	10
  1962  00D54D  0D                 	db	13
  1963  00D54E  20                 	db	32
  1964  00D54F  20                 	db	32
  1965  00D550  20                 	db	32
  1966  00D551  41                 	db	65	;'A'
  1967  00D552  44                 	db	68	;'D'
  1968  00D553  43                 	db	67	;'C'
  1969  00D554  20                 	db	32
  1970  00D555  45                 	db	69	;'E'
  1971  00D556  72                 	db	114	;'r'
  1972  00D557  72                 	db	114	;'r'
  1973  00D558  6F                 	db	111	;'o'
  1974  00D559  72                 	db	114	;'r'
  1975  00D55A  73                 	db	115	;'s'
  1976  00D55B  3F                 	db	63	;'?'
  1977  00D55C  3A                 	db	58	;':'
  1978  00D55D  20                 	db	32
  1979  00D55E  52                 	db	82	;'R'
  1980  00D55F  65                 	db	101	;'e'
  1981  00D560  74                 	db	116	;'t'
  1982  00D561  75                 	db	117	;'u'
  1983  00D562  72                 	db	114	;'r'
  1984  00D563  6E                 	db	110	;'n'
  1985  00D564  73                 	db	115	;'s'
  1986  00D565  20                 	db	32
  1987  00D566  74                 	db	116	;'t'
  1988  00D567  68                 	db	104	;'h'
  1989  00D568  65                 	db	101	;'e'
  1990  00D569  20                 	db	32
  1991  00D56A  63                 	db	99	;'c'
  1992  00D56B  61                 	db	97	;'a'
  1993  00D56C  75                 	db	117	;'u'
  1994  00D56D  73                 	db	115	;'s'
  1995  00D56E  65                 	db	101	;'e'
  1996  00D56F  20                 	db	32
  1997  00D570  6F                 	db	111	;'o'
  1998  00D571  66                 	db	102	;'f'
  1999  00D572  20                 	db	32
  2000  00D573  61                 	db	97	;'a'
  2001  00D574  6E                 	db	110	;'n'
  2002  00D575  20                 	db	32
  2003  00D576  41                 	db	65	;'A'
  2004  00D577  44                 	db	68	;'D'
  2005  00D578  43                 	db	67	;'C'
  2006  00D579  20                 	db	32
  2007  00D57A  65                 	db	101	;'e'
  2008  00D57B  72                 	db	114	;'r'
  2009  00D57C  72                 	db	114	;'r'
  2010  00D57D  6F                 	db	111	;'o'
  2011  00D57E  72                 	db	114	;'r'
  2012  00D57F  20                 	db	32
  2013  00D580  69                 	db	105	;'i'
  2014  00D581  66                 	db	102	;'f'
  2015  00D582  20                 	db	32
  2016  00D583  61                 	db	97	;'a'
  2017  00D584  6E                 	db	110	;'n'
  2018  00D585  20                 	db	32
  2019  00D586  65                 	db	101	;'e'
  2020  00D587  72                 	db	114	;'r'
  2021  00D588  72                 	db	114	;'r'
  2022  00D589  6F                 	db	111	;'o'
  2023  00D58A  72                 	db	114	;'r'
  2024  00D58B  20                 	db	32
  2025  00D58C  6F                 	db	111	;'o'
  2026  00D58D  63                 	db	99	;'c'
  2027  00D58E  63                 	db	99	;'c'
  2028  00D58F  75                 	db	117	;'u'
  2029  00D590  72                 	db	114	;'r'
  2030  00D591  72                 	db	114	;'r'
  2031  00D592  65                 	db	101	;'e'
  2032  00D593  64                 	db	100	;'d'
  2033  00D594  0A                 	db	10
  2034  00D595  0D                 	db	13
  2035  00D596  20                 	db	32
  2036  00D597  20                 	db	32
  2037  00D598  20                 	db	32
  2038  00D599  43                 	db	67	;'C'
  2039  00D59A  6C                 	db	108	;'l'
  2040  00D59B  65                 	db	101	;'e'
  2041  00D59C  61                 	db	97	;'a'
  2042  00D59D  72                 	db	114	;'r'
  2043  00D59E  20                 	db	32
  2044  00D59F  41                 	db	65	;'A'
  2045  00D5A0  44                 	db	68	;'D'
  2046  00D5A1  43                 	db	67	;'C'
  2047  00D5A2  20                 	db	32
  2048  00D5A3  45                 	db	69	;'E'
  2049  00D5A4  72                 	db	114	;'r'
  2050  00D5A5  72                 	db	114	;'r'
  2051  00D5A6  6F                 	db	111	;'o'
  2052  00D5A7  72                 	db	114	;'r'
  2053  00D5A8  73                 	db	115	;'s'
  2054  00D5A9  3A                 	db	58	;':'
  2055  00D5AA  20                 	db	32
  2056  00D5AB  43                 	db	67	;'C'
  2057  00D5AC  6C                 	db	108	;'l'
  2058  00D5AD  65                 	db	101	;'e'
  2059  00D5AE  61                 	db	97	;'a'
  2060  00D5AF  72                 	db	114	;'r'
  2061  00D5B0  73                 	db	115	;'s'
  2062  00D5B1  20                 	db	32
  2063  00D5B2  74                 	db	116	;'t'
  2064  00D5B3  68                 	db	104	;'h'
  2065  00D5B4  65                 	db	101	;'e'
  2066  00D5B5  20                 	db	32
  2067  00D5B6  41                 	db	65	;'A'
  2068  00D5B7  44                 	db	68	;'D'
  2069  00D5B8  43                 	db	67	;'C'
  2070  00D5B9  20                 	db	32
  2071  00D5BA  65                 	db	101	;'e'
  2072  00D5BB  72                 	db	114	;'r'
  2073  00D5BC  72                 	db	114	;'r'
  2074  00D5BD  6F                 	db	111	;'o'
  2075  00D5BE  72                 	db	114	;'r'
  2076  00D5BF  20                 	db	32
  2077  00D5C0  61                 	db	97	;'a'
  2078  00D5C1  6E                 	db	110	;'n'
  2079  00D5C2  64                 	db	100	;'d'
  2080  00D5C3  20                 	db	32
  2081  00D5C4  72                 	db	114	;'r'
  2082  00D5C5  65                 	db	101	;'e'
  2083  00D5C6  73                 	db	115	;'s'
  2084  00D5C7  75                 	db	117	;'u'
  2085  00D5C8  6D                 	db	109	;'m'
  2086  00D5C9  65                 	db	101	;'e'
  2087  00D5CA  73                 	db	115	;'s'
  2088  00D5CB  20                 	db	32
  2089  00D5CC  41                 	db	65	;'A'
  2090  00D5CD  44                 	db	68	;'D'
  2091  00D5CE  43                 	db	67	;'C'
  2092  00D5CF  20                 	db	32
  2093  00D5D0  63                 	db	99	;'c'
  2094  00D5D1  6F                 	db	111	;'o'
  2095  00D5D2  6E                 	db	110	;'n'
  2096  00D5D3  76                 	db	118	;'v'
  2097  00D5D4  65                 	db	101	;'e'
  2098  00D5D5  72                 	db	114	;'r'
  2099  00D5D6  73                 	db	115	;'s'
  2100  00D5D7  69                 	db	105	;'i'
  2101  00D5D8  6F                 	db	111	;'o'
  2102  00D5D9  6E                 	db	110	;'n'
  2103  00D5DA  73                 	db	115	;'s'
  2104  00D5DB  0A                 	db	10
  2105  00D5DC  0D                 	db	13
  2106  00D5DD  20                 	db	32
  2107  00D5DE  20                 	db	32
  2108  00D5DF  20                 	db	32
  2109  00D5E0  43                 	db	67	;'C'
  2110  00D5E1  6F                 	db	111	;'o'
  2111  00D5E2  6D                 	db	109	;'m'
  2112  00D5E3  6D                 	db	109	;'m'
  2113  00D5E4  20                 	db	32
  2114  00D5E5  45                 	db	69	;'E'
  2115  00D5E6  72                 	db	114	;'r'
  2116  00D5E7  72                 	db	114	;'r'
  2117  00D5E8  6F                 	db	111	;'o'
  2118  00D5E9  72                 	db	114	;'r'
  2119  00D5EA  73                 	db	115	;'s'
  2120  00D5EB  3F                 	db	63	;'?'
  2121  00D5EC  3A                 	db	58	;':'
  2122  00D5ED  20                 	db	32
  2123  00D5EE  52                 	db	82	;'R'
  2124  00D5EF  65                 	db	101	;'e'
  2125  00D5F0  74                 	db	116	;'t'
  2126  00D5F1  75                 	db	117	;'u'
  2127  00D5F2  72                 	db	114	;'r'
  2128  00D5F3  6E                 	db	110	;'n'
  2129  00D5F4  73                 	db	115	;'s'
  2130  00D5F5  20                 	db	32
  2131  00D5F6  69                 	db	105	;'i'
  2132  00D5F7  66                 	db	102	;'f'
  2133  00D5F8  20                 	db	32
  2134  00D5F9  61                 	db	97	;'a'
  2135  00D5FA  20                 	db	32
  2136  00D5FB  63                 	db	99	;'c'
  2137  00D5FC  6F                 	db	111	;'o'
  2138  00D5FD  6D                 	db	109	;'m'
  2139  00D5FE  6D                 	db	109	;'m'
  2140  00D5FF  75                 	db	117	;'u'
  2141  00D600  6E                 	db	110	;'n'
  2142  00D601  69                 	db	105	;'i'
  2143  00D602  63                 	db	99	;'c'
  2144  00D603  61                 	db	97	;'a'
  2145  00D604  74                 	db	116	;'t'
  2146  00D605  69                 	db	105	;'i'
  2147  00D606  6F                 	db	111	;'o'
  2148  00D607  6E                 	db	110	;'n'
  2149  00D608  73                 	db	115	;'s'
  2150  00D609  20                 	db	32
  2151  00D60A  65                 	db	101	;'e'
  2152  00D60B  72                 	db	114	;'r'
  2153  00D60C  72                 	db	114	;'r'
  2154  00D60D  6F                 	db	111	;'o'
  2155  00D60E  72                 	db	114	;'r'
  2156  00D60F  20                 	db	32
  2157  00D610  68                 	db	104	;'h'
  2158  00D611  61                 	db	97	;'a'
  2159  00D612  73                 	db	115	;'s'
  2160  00D613  20                 	db	32
  2161  00D614  6F                 	db	111	;'o'
  2162  00D615  63                 	db	99	;'c'
  2163  00D616  63                 	db	99	;'c'
  2164  00D617  75                 	db	117	;'u'
  2165  00D618  72                 	db	114	;'r'
  2166  00D619  72                 	db	114	;'r'
  2167  00D61A  65                 	db	101	;'e'
  2168  00D61B  64                 	db	100	;'d'
  2169  00D61C  0A                 	db	10
  2170  00D61D  0D                 	db	13
  2171  00D61E  20                 	db	32
  2172  00D61F  20                 	db	32
  2173  00D620  20                 	db	32
  2174  00D621  43                 	db	67	;'C'
  2175  00D622  6C                 	db	108	;'l'
  2176  00D623  65                 	db	101	;'e'
  2177  00D624  61                 	db	97	;'a'
  2178  00D625  72                 	db	114	;'r'
  2179  00D626  20                 	db	32
  2180  00D627  43                 	db	67	;'C'
  2181  00D628  6F                 	db	111	;'o'
  2182  00D629  6D                 	db	109	;'m'
  2183  00D62A  6D                 	db	109	;'m'
  2184  00D62B  20                 	db	32
  2185  00D62C  45                 	db	69	;'E'
  2186  00D62D  72                 	db	114	;'r'
  2187  00D62E  72                 	db	114	;'r'
  2188  00D62F  6F                 	db	111	;'o'
  2189  00D630  72                 	db	114	;'r'
  2190  00D631  73                 	db	115	;'s'
  2191  00D632  3A                 	db	58	;':'
  2192  00D633  20                 	db	32
  2193  00D634  43                 	db	67	;'C'
  2194  00D635  6C                 	db	108	;'l'
  2195  00D636  65                 	db	101	;'e'
  2196  00D637  61                 	db	97	;'a'
  2197  00D638  72                 	db	114	;'r'
  2198  00D639  73                 	db	115	;'s'
  2199  00D63A  20                 	db	32
  2200  00D63B  74                 	db	116	;'t'
  2201  00D63C  68                 	db	104	;'h'
  2202  00D63D  65                 	db	101	;'e'
  2203  00D63E  20                 	db	32
  2204  00D63F  63                 	db	99	;'c'
  2205  00D640  6F                 	db	111	;'o'
  2206  00D641  6D                 	db	109	;'m'
  2207  00D642  6D                 	db	109	;'m'
  2208  00D643  75                 	db	117	;'u'
  2209  00D644  6E                 	db	110	;'n'
  2210  00D645  69                 	db	105	;'i'
  2211  00D646  63                 	db	99	;'c'
  2212  00D647  61                 	db	97	;'a'
  2213  00D648  74                 	db	116	;'t'
  2214  00D649  69                 	db	105	;'i'
  2215  00D64A  6F                 	db	111	;'o'
  2216  00D64B  6E                 	db	110	;'n'
  2217  00D64C  73                 	db	115	;'s'
  2218  00D64D  20                 	db	32
  2219  00D64E  65                 	db	101	;'e'
  2220  00D64F  72                 	db	114	;'r'
  2221  00D650  72                 	db	114	;'r'
  2222  00D651  6F                 	db	111	;'o'
  2223  00D652  72                 	db	114	;'r'
  2224  00D653  0A                 	db	10
  2225  00D654  0D                 	db	13
  2226  00D655  20                 	db	32
  2227  00D656  20                 	db	32
  2228  00D657  20                 	db	32
  2229  00D658  43                 	db	67	;'C'
  2230  00D659  6C                 	db	108	;'l'
  2231  00D65A  65                 	db	101	;'e'
  2232  00D65B  61                 	db	97	;'a'
  2233  00D65C  72                 	db	114	;'r'
  2234  00D65D  20                 	db	32
  2235  00D65E  4D                 	db	77	;'M'
  2236  00D65F  61                 	db	97	;'a'
  2237  00D660  78                 	db	120	;'x'
  2238  00D661  20                 	db	32
  2239  00D662  56                 	db	86	;'V'
  2240  00D663  61                 	db	97	;'a'
  2241  00D664  6C                 	db	108	;'l'
  2242  00D665  75                 	db	117	;'u'
  2243  00D666  65                 	db	101	;'e'
  2244  00D667  73                 	db	115	;'s'
  2245  00D668  3A                 	db	58	;':'
  2246  00D669  20                 	db	32
  2247  00D66A  45                 	db	69	;'E'
  2248  00D66B  72                 	db	114	;'r'
  2249  00D66C  61                 	db	97	;'a'
  2250  00D66D  73                 	db	115	;'s'
  2251  00D66E  65                 	db	101	;'e'
  2252  00D66F  73                 	db	115	;'s'
  2253  00D670  20                 	db	32
  2254  00D671  6D                 	db	109	;'m'
  2255  00D672  61                 	db	97	;'a'
  2256  00D673  78                 	db	120	;'x'
  2257  00D674  69                 	db	105	;'i'
  2258  00D675  6D                 	db	109	;'m'
  2259  00D676  75                 	db	117	;'u'
  2260  00D677  6D                 	db	109	;'m'
  2261  00D678  20                 	db	32
  2262  00D679  72                 	db	114	;'r'
  2263  00D67A  65                 	db	101	;'e'
  2264  00D67B  63                 	db	99	;'c'
  2265  00D67C  6F                 	db	111	;'o'
  2266  00D67D  72                 	db	114	;'r'
  2267  00D67E  64                 	db	100	;'d'
  2268  00D67F  65                 	db	101	;'e'
  2269  00D680  64                 	db	100	;'d'
  2270  00D681  20                 	db	32
  2271  00D682  76                 	db	118	;'v'
  2272  00D683  61                 	db	97	;'a'
  2273  00D684  6C                 	db	108	;'l'
  2274  00D685  75                 	db	117	;'u'
  2275  00D686  65                 	db	101	;'e'
  2276  00D687  73                 	db	115	;'s'
  2277  00D688  20                 	db	32
  2278  00D689  66                 	db	102	;'f'
  2279  00D68A  72                 	db	114	;'r'
  2280  00D68B  6F                 	db	111	;'o'
  2281  00D68C  6D                 	db	109	;'m'
  2282  00D68D  20                 	db	32
  2283  00D68E  45                 	db	69	;'E'
  2284  00D68F  45                 	db	69	;'E'
  2285  00D690  50                 	db	80	;'P'
  2286  00D691  52                 	db	82	;'R'
  2287  00D692  4F                 	db	79	;'O'
  2288  00D693  4D                 	db	77	;'M'
  2289  00D694  0A                 	db	10
  2290  00D695  0D                 	db	13
  2291  00D696  20                 	db	32
  2292  00D697  20                 	db	32
  2293  00D698  20                 	db	32
  2294  00D699  48                 	db	72	;'H'
  2295  00D69A  65                 	db	101	;'e'
  2296  00D69B  6C                 	db	108	;'l'
  2297  00D69C  70                 	db	112	;'p'
  2298  00D69D  3A                 	db	58	;':'
  2299  00D69E  20                 	db	32
  2300  00D69F  54                 	db	84	;'T'
  2301  00D6A0  68                 	db	104	;'h'
  2302  00D6A1  69                 	db	105	;'i'
  2303  00D6A2  73                 	db	115	;'s'
  2304  00D6A3  20                 	db	32
  2305  00D6A4  6D                 	db	109	;'m'
  2306  00D6A5  65                 	db	101	;'e'
  2307  00D6A6  73                 	db	115	;'s'
  2308  00D6A7  73                 	db	115	;'s'
  2309  00D6A8  61                 	db	97	;'a'
  2310  00D6A9  67                 	db	103	;'g'
  2311  00D6AA  65                 	db	101	;'e'
  2312  00D6AB  2C                 	db	44
  2313  00D6AC  20                 	db	32
  2314  00D6AD  6C                 	db	108	;'l'
  2315  00D6AE  69                 	db	105	;'i'
  2316  00D6AF  73                 	db	115	;'s'
  2317  00D6B0  74                 	db	116	;'t'
  2318  00D6B1  73                 	db	115	;'s'
  2319  00D6B2  20                 	db	32
  2320  00D6B3  73                 	db	115	;'s'
  2321  00D6B4  75                 	db	117	;'u'
  2322  00D6B5  70                 	db	112	;'p'
  2323  00D6B6  70                 	db	112	;'p'
  2324  00D6B7  6F                 	db	111	;'o'
  2325  00D6B8  72                 	db	114	;'r'
  2326  00D6B9  74                 	db	116	;'t'
  2327  00D6BA  65                 	db	101	;'e'
  2328  00D6BB  64                 	db	100	;'d'
  2329  00D6BC  20                 	db	32
  2330  00D6BD  63                 	db	99	;'c'
  2331  00D6BE  6F                 	db	111	;'o'
  2332  00D6BF  6D                 	db	109	;'m'
  2333  00D6C0  6D                 	db	109	;'m'
  2334  00D6C1  61                 	db	97	;'a'
  2335  00D6C2  6E                 	db	110	;'n'
  2336  00D6C3  64                 	db	100	;'d'
  2337  00D6C4  73                 	db	115	;'s'
  2338  00D6C5  0A                 	db	10
  2339  00D6C6  0D                 	db	13
  2340  00D6C7  0A                 	db	10
  2341  00D6C8  0D                 	db	13
  2342  00D6C9  44                 	db	68	;'D'
  2343  00D6CA  65                 	db	101	;'e'
  2344  00D6CB  76                 	db	118	;'v'
  2345  00D6CC  69                 	db	105	;'i'
  2346  00D6CD  63                 	db	99	;'c'
  2347  00D6CE  65                 	db	101	;'e'
  2348  00D6CF  20                 	db	32
  2349  00D6D0  4D                 	db	77	;'M'
  2350  00D6D1  65                 	db	101	;'e'
  2351  00D6D2  61                 	db	97	;'a'
  2352  00D6D3  73                 	db	115	;'s'
  2353  00D6D4  75                 	db	117	;'u'
  2354  00D6D5  72                 	db	114	;'r'
  2355  00D6D6  65                 	db	101	;'e'
  2356  00D6D7  6D                 	db	109	;'m'
  2357  00D6D8  65                 	db	101	;'e'
  2358  00D6D9  6E                 	db	110	;'n'
  2359  00D6DA  74                 	db	116	;'t'
  2360  00D6DB  20                 	db	32
  2361  00D6DC  43                 	db	67	;'C'
  2362  00D6DD  6F                 	db	111	;'o'
  2363  00D6DE  6D                 	db	109	;'m'
  2364  00D6DF  6D                 	db	109	;'m'
  2365  00D6E0  61                 	db	97	;'a'
  2366  00D6E1  6E                 	db	110	;'n'
  2367  00D6E2  64                 	db	100	;'d'
  2368  00D6E3  73                 	db	115	;'s'
  2369  00D6E4  3A                 	db	58	;':'
  2370  00D6E5  20                 	db	32
  2371  00D6E6  56                 	db	86	;'V'
  2372  00D6E7  69                 	db	105	;'i'
  2373  00D6E8  65                 	db	101	;'e'
  2374  00D6E9  77                 	db	119	;'w'
  2375  00D6EA  20                 	db	32
  2376  00D6EB  6C                 	db	108	;'l'
  2377  00D6EC  6F                 	db	111	;'o'
  2378  00D6ED  77                 	db	119	;'w'
  2379  00D6EE  20                 	db	32
  2380  00D6EF  6C                 	db	108	;'l'
  2381  00D6F0  65                 	db	101	;'e'
  2382  00D6F1  76                 	db	118	;'v'
  2383  00D6F2  65                 	db	101	;'e'
  2384  00D6F3  6C                 	db	108	;'l'
  2385  00D6F4  20                 	db	32
  2386  00D6F5  73                 	db	115	;'s'
  2387  00D6F6  79                 	db	121	;'y'
  2388  00D6F7  73                 	db	115	;'s'
  2389  00D6F8  74                 	db	116	;'t'
  2390  00D6F9  65                 	db	101	;'e'
  2391  00D6FA  6D                 	db	109	;'m'
  2392  00D6FB  20                 	db	32
  2393  00D6FC  6D                 	db	109	;'m'
  2394  00D6FD  65                 	db	101	;'e'
  2395  00D6FE  61                 	db	97	;'a'
  2396  00D6FF  73                 	db	115	;'s'
  2397  00D700  75                 	db	117	;'u'
  2398  00D701  72                 	db	114	;'r'
  2399  00D702  65                 	db	101	;'e'
  2400  00D703  6D                 	db	109	;'m'
  2401  00D704  65                 	db	101	;'e'
  2402  00D705  6E                 	db	110	;'n'
  2403  00D706  74                 	db	116	;'t'
  2404  00D707  73                 	db	115	;'s'
  2405  00D708  0A                 	db	10
  2406  00D709  0D                 	db	13
  2407  00D70A  20                 	db	32
  2408  00D70B  20                 	db	32
  2409  00D70C  20                 	db	32
  2410  00D70D  4D                 	db	77	;'M'
  2411  00D70E  65                 	db	101	;'e'
  2412  00D70F  61                 	db	97	;'a'
  2413  00D710  73                 	db	115	;'s'
  2414  00D711  75                 	db	117	;'u'
  2415  00D712  72                 	db	114	;'r'
  2416  00D713  65                 	db	101	;'e'
  2417  00D714  20                 	db	32
  2418  00D715  50                 	db	80	;'P'
  2419  00D716  4F                 	db	79	;'O'
  2420  00D717  53                 	db	83	;'S'
  2421  00D718  33                 	db	51	;'3'
  2422  00D719  50                 	db	80	;'P'
  2423  00D71A  33                 	db	51	;'3'
  2424  00D71B  3F                 	db	63	;'?'
  2425  00D71C  3A                 	db	58	;':'
  2426  00D71D  20                 	db	32
  2427  00D71E  52                 	db	82	;'R'
  2428  00D71F  65                 	db	101	;'e'
  2429  00D720  74                 	db	116	;'t'
  2430  00D721  75                 	db	117	;'u'
  2431  00D722  72                 	db	114	;'r'
  2432  00D723  6E                 	db	110	;'n'
  2433  00D724  73                 	db	115	;'s'
  2434  00D725  20                 	db	32
  2435  00D726  2B                 	db	43
  2436  00D727  33                 	db	51	;'3'
  2437  00D728  2E                 	db	46
  2438  00D729  33                 	db	51	;'3'
  2439  00D72A  56                 	db	86	;'V'
  2440  00D72B  20                 	db	32
  2441  00D72C  41                 	db	65	;'A'
  2442  00D72D  44                 	db	68	;'D'
  2443  00D72E  43                 	db	67	;'C'
  2444  00D72F  20                 	db	32
  2445  00D730  43                 	db	67	;'C'
  2446  00D731  6F                 	db	111	;'o'
  2447  00D732  6E                 	db	110	;'n'
  2448  00D733  76                 	db	118	;'v'
  2449  00D734  65                 	db	101	;'e'
  2450  00D735  72                 	db	114	;'r'
  2451  00D736  73                 	db	115	;'s'
  2452  00D737  69                 	db	105	;'i'
  2453  00D738  6F                 	db	111	;'o'
  2454  00D739  6E                 	db	110	;'n'
  2455  00D73A  20                 	db	32
  2456  00D73B  69                 	db	105	;'i'
  2457  00D73C  6E                 	db	110	;'n'
  2458  00D73D  20                 	db	32
  2459  00D73E  76                 	db	118	;'v'
  2460  00D73F  6F                 	db	111	;'o'
  2461  00D740  6C                 	db	108	;'l'
  2462  00D741  74                 	db	116	;'t'
  2463  00D742  73                 	db	115	;'s'
  2464  00D743  0A                 	db	10
  2465  00D744  0D                 	db	13
  2466  00D745  20                 	db	32
  2467  00D746  20                 	db	32
  2468  00D747  20                 	db	32
  2469  00D748  4D                 	db	77	;'M'
  2470  00D749  65                 	db	101	;'e'
  2471  00D74A  61                 	db	97	;'a'
  2472  00D74B  73                 	db	115	;'s'
  2473  00D74C  75                 	db	117	;'u'
  2474  00D74D  72                 	db	114	;'r'
  2475  00D74E  65                 	db	101	;'e'
  2476  00D74F  20                 	db	32
  2477  00D750  50                 	db	80	;'P'
  2478  00D751  4F                 	db	79	;'O'
  2479  00D752  53                 	db	83	;'S'
  2480  00D753  31                 	db	49	;'1'
  2481  00D754  32                 	db	50	;'2'
  2482  00D755  3F                 	db	63	;'?'
  2483  00D756  3A                 	db	58	;':'
  2484  00D757  20                 	db	32
  2485  00D758  52                 	db	82	;'R'
  2486  00D759  65                 	db	101	;'e'
  2487  00D75A  74                 	db	116	;'t'
  2488  00D75B  75                 	db	117	;'u'
  2489  00D75C  72                 	db	114	;'r'
  2490  00D75D  6E                 	db	110	;'n'
  2491  00D75E  73                 	db	115	;'s'
  2492  00D75F  20                 	db	32
  2493  00D760  2B                 	db	43
  2494  00D761  31                 	db	49	;'1'
  2495  00D762  32                 	db	50	;'2'
  2496  00D763  56                 	db	86	;'V'
  2497  00D764  20                 	db	32
  2498  00D765  41                 	db	65	;'A'
  2499  00D766  44                 	db	68	;'D'
  2500  00D767  43                 	db	67	;'C'
  2501  00D768  20                 	db	32
  2502  00D769  43                 	db	67	;'C'
  2503  00D76A  6F                 	db	111	;'o'
  2504  00D76B  6E                 	db	110	;'n'
  2505  00D76C  76                 	db	118	;'v'
  2506  00D76D  65                 	db	101	;'e'
  2507  00D76E  72                 	db	114	;'r'
  2508  00D76F  73                 	db	115	;'s'
  2509  00D770  69                 	db	105	;'i'
  2510  00D771  6F                 	db	111	;'o'
  2511  00D772  6E                 	db	110	;'n'
  2512  00D773  20                 	db	32
  2513  00D774  69                 	db	105	;'i'
  2514  00D775  6E                 	db	110	;'n'
  2515  00D776  20                 	db	32
  2516  00D777  76                 	db	118	;'v'
  2517  00D778  6F                 	db	111	;'o'
  2518  00D779  6C                 	db	108	;'l'
  2519  00D77A  74                 	db	116	;'t'
  2520  00D77B  73                 	db	115	;'s'
  2521  00D77C  0A                 	db	10
  2522  00D77D  0D                 	db	13
  2523  00D77E  20                 	db	32
  2524  00D77F  20                 	db	32
  2525  00D780  20                 	db	32
  2526  00D781  4D                 	db	77	;'M'
  2527  00D782  65                 	db	101	;'e'
  2528  00D783  61                 	db	97	;'a'
  2529  00D784  73                 	db	115	;'s'
  2530  00D785  75                 	db	117	;'u'
  2531  00D786  72                 	db	114	;'r'
  2532  00D787  65                 	db	101	;'e'
  2533  00D788  20                 	db	32
  2534  00D789  44                 	db	68	;'D'
  2535  00D78A  69                 	db	105	;'i'
  2536  00D78B  65                 	db	101	;'e'
  2537  00D78C  20                 	db	32
  2538  00D78D  54                 	db	84	;'T'
  2539  00D78E  65                 	db	101	;'e'
  2540  00D78F  6D                 	db	109	;'m'
  2541  00D790  70                 	db	112	;'p'
  2542  00D791  3F                 	db	63	;'?'
  2543  00D792  3A                 	db	58	;':'
  2544  00D793  20                 	db	32
  2545  00D794  52                 	db	82	;'R'
  2546  00D795  65                 	db	101	;'e'
  2547  00D796  74                 	db	116	;'t'
  2548  00D797  75                 	db	117	;'u'
  2549  00D798  72                 	db	114	;'r'
  2550  00D799  6E                 	db	110	;'n'
  2551  00D79A  73                 	db	115	;'s'
  2552  00D79B  20                 	db	32
  2553  00D79C  74                 	db	116	;'t'
  2554  00D79D  68                 	db	104	;'h'
  2555  00D79E  65                 	db	101	;'e'
  2556  00D79F  20                 	db	32
  2557  00D7A0  6D                 	db	109	;'m'
  2558  00D7A1  69                 	db	105	;'i'
  2559  00D7A2  63                 	db	99	;'c'
  2560  00D7A3  72                 	db	114	;'r'
  2561  00D7A4  6F                 	db	111	;'o'
  2562  00D7A5  63                 	db	99	;'c'
  2563  00D7A6  6F                 	db	111	;'o'
  2564  00D7A7  6E                 	db	110	;'n'
  2565  00D7A8  74                 	db	116	;'t'
  2566  00D7A9  72                 	db	114	;'r'
  2567  00D7AA  6F                 	db	111	;'o'
  2568  00D7AB  6C                 	db	108	;'l'
  2569  00D7AC  6C                 	db	108	;'l'
  2570  00D7AD  65                 	db	101	;'e'
  2571  00D7AE  72                 	db	114	;'r'
  2572  00D7AF  20                 	db	32
  2573  00D7B0  64                 	db	100	;'d'
  2574  00D7B1  69                 	db	105	;'i'
  2575  00D7B2  65                 	db	101	;'e'
  2576  00D7B3  20                 	db	32
  2577  00D7B4  74                 	db	116	;'t'
  2578  00D7B5  65                 	db	101	;'e'
  2579  00D7B6  6D                 	db	109	;'m'
  2580  00D7B7  70                 	db	112	;'p'
  2581  00D7B8  65                 	db	101	;'e'
  2582  00D7B9  72                 	db	114	;'r'
  2583  00D7BA  61                 	db	97	;'a'
  2584  00D7BB  74                 	db	116	;'t'
  2585  00D7BC  75                 	db	117	;'u'
  2586  00D7BD  72                 	db	114	;'r'
  2587  00D7BE  65                 	db	101	;'e'
  2588  00D7BF  20                 	db	32
  2589  00D7C0  69                 	db	105	;'i'
  2590  00D7C1  6E                 	db	110	;'n'
  2591  00D7C2  20                 	db	32
  2592  00D7C3  64                 	db	100	;'d'
  2593  00D7C4  65                 	db	101	;'e'
  2594  00D7C5  67                 	db	103	;'g'
  2595  00D7C6  72                 	db	114	;'r'
  2596  00D7C7  65                 	db	101	;'e'
  2597  00D7C8  65                 	db	101	;'e'
  2598  00D7C9  73                 	db	115	;'s'
  2599  00D7CA  20                 	db	32
  2600  00D7CB  43                 	db	67	;'C'
  2601  00D7CC  0A                 	db	10
  2602  00D7CD  0D                 	db	13
  2603  00D7CE  20                 	db	32
  2604  00D7CF  20                 	db	32
  2605  00D7D0  20                 	db	32
  2606  00D7D1  4D                 	db	77	;'M'
  2607  00D7D2  65                 	db	101	;'e'
  2608  00D7D3  61                 	db	97	;'a'
  2609  00D7D4  73                 	db	115	;'s'
  2610  00D7D5  75                 	db	117	;'u'
  2611  00D7D6  72                 	db	114	;'r'
  2612  00D7D7  65                 	db	101	;'e'
  2613  00D7D8  20                 	db	32
  2614  00D7D9  46                 	db	70	;'F'
  2615  00D7DA  56                 	db	86	;'V'
  2616  00D7DB  52                 	db	82	;'R'
  2617  00D7DC  3F                 	db	63	;'?'
  2618  00D7DD  3A                 	db	58	;':'
  2619  00D7DE  20                 	db	32
  2620  00D7DF  52                 	db	82	;'R'
  2621  00D7E0  65                 	db	101	;'e'
  2622  00D7E1  74                 	db	116	;'t'
  2623  00D7E2  75                 	db	117	;'u'
  2624  00D7E3  72                 	db	114	;'r'
  2625  00D7E4  6E                 	db	110	;'n'
  2626  00D7E5  73                 	db	115	;'s'
  2627  00D7E6  20                 	db	32
  2628  00D7E7  74                 	db	116	;'t'
  2629  00D7E8  68                 	db	104	;'h'
  2630  00D7E9  65                 	db	101	;'e'
  2631  00D7EA  20                 	db	32
  2632  00D7EB  69                 	db	105	;'i'
  2633  00D7EC  6E                 	db	110	;'n'
  2634  00D7ED  74                 	db	116	;'t'
  2635  00D7EE  65                 	db	101	;'e'
  2636  00D7EF  72                 	db	114	;'r'
  2637  00D7F0  6E                 	db	110	;'n'
  2638  00D7F1  61                 	db	97	;'a'
  2639  00D7F2  6C                 	db	108	;'l'
  2640  00D7F3  20                 	db	32
  2641  00D7F4  66                 	db	102	;'f'
  2642  00D7F5  69                 	db	105	;'i'
  2643  00D7F6  78                 	db	120	;'x'
  2644  00D7F7  65                 	db	101	;'e'
  2645  00D7F8  64                 	db	100	;'d'
  2646  00D7F9  20                 	db	32
  2647  00D7FA  76                 	db	118	;'v'
  2648  00D7FB  6F                 	db	111	;'o'
  2649  00D7FC  6C                 	db	108	;'l'
  2650  00D7FD  74                 	db	116	;'t'
  2651  00D7FE  61                 	db	97	;'a'
  2652  00D7FF  67                 	db	103	;'g'
  2653  00D800  65                 	db	101	;'e'
  2654  00D801  20                 	db	32
  2655  00D802  72                 	db	114	;'r'
  2656  00D803  65                 	db	101	;'e'
  2657  00D804  66                 	db	102	;'f'
  2658  00D805  65                 	db	101	;'e'
  2659  00D806  72                 	db	114	;'r'
  2660  00D807  65                 	db	101	;'e'
  2661  00D808  6E                 	db	110	;'n'
  2662  00D809  63                 	db	99	;'c'
  2663  00D80A  65                 	db	101	;'e'
  2664  00D80B  20                 	db	32
  2665  00D80C  62                 	db	98	;'b'
  2666  00D80D  75                 	db	117	;'u'
  2667  00D80E  66                 	db	102	;'f'
  2668  00D80F  66                 	db	102	;'f'
  2669  00D810  65                 	db	101	;'e'
  2670  00D811  72                 	db	114	;'r'
  2671  00D812  20                 	db	32
  2672  00D813  31                 	db	49	;'1'
  2673  00D814  20                 	db	32
  2674  00D815  6F                 	db	111	;'o'
  2675  00D816  75                 	db	117	;'u'
  2676  00D817  74                 	db	116	;'t'
  2677  00D818  70                 	db	112	;'p'
  2678  00D819  75                 	db	117	;'u'
  2679  00D81A  74                 	db	116	;'t'
  2680  00D81B  20                 	db	32
  2681  00D81C  69                 	db	105	;'i'
  2682  00D81D  6E                 	db	110	;'n'
  2683  00D81E  20                 	db	32
  2684  00D81F  76                 	db	118	;'v'
  2685  00D820  6F                 	db	111	;'o'
  2686  00D821  6C                 	db	108	;'l'
  2687  00D822  74                 	db	116	;'t'
  2688  00D823  73                 	db	115	;'s'
  2689  00D824  0A                 	db	10
  2690  00D825  0D                 	db	13
  2691  00D826  20                 	db	32
  2692  00D827  20                 	db	32
  2693  00D828  20                 	db	32
  2694  00D829  4D                 	db	77	;'M'
  2695  00D82A  65                 	db	101	;'e'
  2696  00D82B  61                 	db	97	;'a'
  2697  00D82C  73                 	db	115	;'s'
  2698  00D82D  75                 	db	117	;'u'
  2699  00D82E  72                 	db	114	;'r'
  2700  00D82F  65                 	db	101	;'e'
  2701  00D830  20                 	db	32
  2702  00D831  41                 	db	65	;'A'
  2703  00D832  56                 	db	86	;'V'
  2704  00D833  53                 	db	83	;'S'
  2705  00D834  53                 	db	83	;'S'
  2706  00D835  3F                 	db	63	;'?'
  2707  00D836  3A                 	db	58	;':'
  2708  00D837  20                 	db	32
  2709  00D838  52                 	db	82	;'R'
  2710  00D839  65                 	db	101	;'e'
  2711  00D83A  74                 	db	116	;'t'
  2712  00D83B  75                 	db	117	;'u'
  2713  00D83C  72                 	db	114	;'r'
  2714  00D83D  6E                 	db	110	;'n'
  2715  00D83E  73                 	db	115	;'s'
  2716  00D83F  20                 	db	32
  2717  00D840  74                 	db	116	;'t'
  2718  00D841  68                 	db	104	;'h'
  2719  00D842  65                 	db	101	;'e'
  2720  00D843  20                 	db	32
  2721  00D844  6D                 	db	109	;'m'
  2722  00D845  65                 	db	101	;'e'
  2723  00D846  61                 	db	97	;'a'
  2724  00D847  73                 	db	115	;'s'
  2725  00D848  75                 	db	117	;'u'
  2726  00D849  72                 	db	114	;'r'
  2727  00D84A  65                 	db	101	;'e'
  2728  00D84B  64                 	db	100	;'d'
  2729  00D84C  20                 	db	32
  2730  00D84D  76                 	db	118	;'v'
  2731  00D84E  61                 	db	97	;'a'
  2732  00D84F  6C                 	db	108	;'l'
  2733  00D850  75                 	db	117	;'u'
  2734  00D851  65                 	db	101	;'e'
  2735  00D852  20                 	db	32
  2736  00D853  6F                 	db	111	;'o'
  2737  00D854  66                 	db	102	;'f'
  2738  00D855  20                 	db	32
  2739  00D856  41                 	db	65	;'A'
  2740  00D857  6E                 	db	110	;'n'
  2741  00D858  61                 	db	97	;'a'
  2742  00D859  6C                 	db	108	;'l'
  2743  00D85A  6F                 	db	111	;'o'
  2744  00D85B  67                 	db	103	;'g'
  2745  00D85C  20                 	db	32
  2746  00D85D  56                 	db	86	;'V'
  2747  00D85E  53                 	db	83	;'S'
  2748  00D85F  53                 	db	83	;'S'
  2749  00D860  20                 	db	32
  2750  00D861  69                 	db	105	;'i'
  2751  00D862  6E                 	db	110	;'n'
  2752  00D863  20                 	db	32
  2753  00D864  76                 	db	118	;'v'
  2754  00D865  6F                 	db	111	;'o'
  2755  00D866  6C                 	db	108	;'l'
  2756  00D867  74                 	db	116	;'t'
  2757  00D868  73                 	db	115	;'s'
  2758  00D869  0A                 	db	10
  2759  00D86A  0D                 	db	13
  2760  00D86B  20                 	db	32
  2761  00D86C  20                 	db	32
  2762  00D86D  20                 	db	32
  2763  00D86E  4D                 	db	77	;'M'
  2764  00D86F  61                 	db	97	;'a'
  2765  00D870  78                 	db	120	;'x'
  2766  00D871  20                 	db	32
  2767  00D872  50                 	db	80	;'P'
  2768  00D873  4F                 	db	79	;'O'
  2769  00D874  53                 	db	83	;'S'
  2770  00D875  33                 	db	51	;'3'
  2771  00D876  50                 	db	80	;'P'
  2772  00D877  33                 	db	51	;'3'
  2773  00D878  20                 	db	32
  2774  00D879  56                 	db	86	;'V'
  2775  00D87A  6F                 	db	111	;'o'
  2776  00D87B  6C                 	db	108	;'l'
  2777  00D87C  74                 	db	116	;'t'
  2778  00D87D  61                 	db	97	;'a'
  2779  00D87E  67                 	db	103	;'g'
  2780  00D87F  65                 	db	101	;'e'
  2781  00D880  3F                 	db	63	;'?'
  2782  00D881  3A                 	db	58	;':'
  2783  00D882  20                 	db	32
  2784  00D883  52                 	db	82	;'R'
  2785  00D884  65                 	db	101	;'e'
  2786  00D885  74                 	db	116	;'t'
  2787  00D886  75                 	db	117	;'u'
  2788  00D887  72                 	db	114	;'r'
  2789  00D888  6E                 	db	110	;'n'
  2790  00D889  73                 	db	115	;'s'
  2791  00D88A  20                 	db	32
  2792  00D88B  74                 	db	116	;'t'
  2793  00D88C  68                 	db	104	;'h'
  2794  00D88D  65                 	db	101	;'e'
  2795  00D88E  20                 	db	32
  2796  00D88F  6D                 	db	109	;'m'
  2797  00D890  61                 	db	97	;'a'
  2798  00D891  78                 	db	120	;'x'
  2799  00D892  69                 	db	105	;'i'
  2800  00D893  6D                 	db	109	;'m'
  2801  00D894  75                 	db	117	;'u'
  2802  00D895  6D                 	db	109	;'m'
  2803  00D896  20                 	db	32
  2804  00D897  72                 	db	114	;'r'
  2805  00D898  65                 	db	101	;'e'
  2806  00D899  63                 	db	99	;'c'
  2807  00D89A  6F                 	db	111	;'o'
  2808  00D89B  72                 	db	114	;'r'
  2809  00D89C  64                 	db	100	;'d'
  2810  00D89D  65                 	db	101	;'e'
  2811  00D89E  64                 	db	100	;'d'
  2812  00D89F  20                 	db	32
  2813  00D8A0  2B                 	db	43
  2814  00D8A1  33                 	db	51	;'3'
  2815  00D8A2  2E                 	db	46
  2816  00D8A3  33                 	db	51	;'3'
  2817  00D8A4  56                 	db	86	;'V'
  2818  00D8A5  20                 	db	32
  2819  00D8A6  52                 	db	82	;'R'
  2820  00D8A7  61                 	db	97	;'a'
  2821  00D8A8  69                 	db	105	;'i'
  2822  00D8A9  6C                 	db	108	;'l'
  2823  00D8AA  20                 	db	32
  2824  00D8AB  56                 	db	86	;'V'
  2825  00D8AC  6F                 	db	111	;'o'
  2826  00D8AD  6C                 	db	108	;'l'
  2827  00D8AE  74                 	db	116	;'t'
  2828  00D8AF  61                 	db	97	;'a'
  2829  00D8B0  67                 	db	103	;'g'
  2830  00D8B1  65                 	db	101	;'e'
  2831  00D8B2  20                 	db	32
  2832  00D8B3  6D                 	db	109	;'m'
  2833  00D8B4  65                 	db	101	;'e'
  2834  00D8B5  61                 	db	97	;'a'
  2835  00D8B6  73                 	db	115	;'s'
  2836  00D8B7  75                 	db	117	;'u'
  2837  00D8B8  72                 	db	114	;'r'
  2838  00D8B9  65                 	db	101	;'e'
  2839  00D8BA  64                 	db	100	;'d'
  2840  00D8BB  0A                 	db	10
  2841  00D8BC  0D                 	db	13
  2842  00D8BD  20                 	db	32
  2843  00D8BE  20                 	db	32
  2844  00D8BF  20                 	db	32
  2845  00D8C0  4D                 	db	77	;'M'
  2846  00D8C1  61                 	db	97	;'a'
  2847  00D8C2  78                 	db	120	;'x'
  2848  00D8C3  20                 	db	32
  2849  00D8C4  50                 	db	80	;'P'
  2850  00D8C5  4F                 	db	79	;'O'
  2851  00D8C6  53                 	db	83	;'S'
  2852  00D8C7  31                 	db	49	;'1'
  2853  00D8C8  32                 	db	50	;'2'
  2854  00D8C9  20                 	db	32
  2855  00D8CA  56                 	db	86	;'V'
  2856  00D8CB  6F                 	db	111	;'o'
  2857  00D8CC  6C                 	db	108	;'l'
  2858  00D8CD  74                 	db	116	;'t'
  2859  00D8CE  61                 	db	97	;'a'
  2860  00D8CF  67                 	db	103	;'g'
  2861  00D8D0  65                 	db	101	;'e'
  2862  00D8D1  3F                 	db	63	;'?'
  2863  00D8D2  3A                 	db	58	;':'
  2864  00D8D3  20                 	db	32
  2865  00D8D4  52                 	db	82	;'R'
  2866  00D8D5  65                 	db	101	;'e'
  2867  00D8D6  74                 	db	116	;'t'
  2868  00D8D7  75                 	db	117	;'u'
  2869  00D8D8  72                 	db	114	;'r'
  2870  00D8D9  6E                 	db	110	;'n'
  2871  00D8DA  73                 	db	115	;'s'
  2872  00D8DB  20                 	db	32
  2873  00D8DC  74                 	db	116	;'t'
  2874  00D8DD  68                 	db	104	;'h'
  2875  00D8DE  65                 	db	101	;'e'
  2876  00D8DF  20                 	db	32
  2877  00D8E0  6D                 	db	109	;'m'
  2878  00D8E1  61                 	db	97	;'a'
  2879  00D8E2  78                 	db	120	;'x'
  2880  00D8E3  69                 	db	105	;'i'
  2881  00D8E4  6D                 	db	109	;'m'
  2882  00D8E5  75                 	db	117	;'u'
  2883  00D8E6  6D                 	db	109	;'m'
  2884  00D8E7  20                 	db	32
  2885  00D8E8  72                 	db	114	;'r'
  2886  00D8E9  65                 	db	101	;'e'
  2887  00D8EA  63                 	db	99	;'c'
  2888  00D8EB  6F                 	db	111	;'o'
  2889  00D8EC  72                 	db	114	;'r'
  2890  00D8ED  64                 	db	100	;'d'
  2891  00D8EE  65                 	db	101	;'e'
  2892  00D8EF  64                 	db	100	;'d'
  2893  00D8F0  20                 	db	32
  2894  00D8F1  2B                 	db	43
  2895  00D8F2  31                 	db	49	;'1'
  2896  00D8F3  32                 	db	50	;'2'
  2897  00D8F4  56                 	db	86	;'V'
  2898  00D8F5  20                 	db	32
  2899  00D8F6  52                 	db	82	;'R'
  2900  00D8F7  61                 	db	97	;'a'
  2901  00D8F8  69                 	db	105	;'i'
  2902  00D8F9  6C                 	db	108	;'l'
  2903  00D8FA  20                 	db	32
  2904  00D8FB  56                 	db	86	;'V'
  2905  00D8FC  6F                 	db	111	;'o'
  2906  00D8FD  6C                 	db	108	;'l'
  2907  00D8FE  74                 	db	116	;'t'
  2908  00D8FF  61                 	db	97	;'a'
  2909  00D900  67                 	db	103	;'g'
  2910  00D901  65                 	db	101	;'e'
  2911  00D902  20                 	db	32
  2912  00D903  6D                 	db	109	;'m'
  2913  00D904  65                 	db	101	;'e'
  2914  00D905  61                 	db	97	;'a'
  2915  00D906  73                 	db	115	;'s'
  2916  00D907  75                 	db	117	;'u'
  2917  00D908  72                 	db	114	;'r'
  2918  00D909  65                 	db	101	;'e'
  2919  00D90A  64                 	db	100	;'d'
  2920  00D90B  0A                 	db	10
  2921  00D90C  0D                 	db	13
  2922  00D90D  20                 	db	32
  2923  00D90E  20                 	db	32
  2924  00D90F  20                 	db	32
  2925  00D910  4D                 	db	77	;'M'
  2926  00D911  61                 	db	97	;'a'
  2927  00D912  78                 	db	120	;'x'
  2928  00D913  20                 	db	32
  2929  00D914  44                 	db	68	;'D'
  2930  00D915  69                 	db	105	;'i'
  2931  00D916  65                 	db	101	;'e'
  2932  00D917  20                 	db	32
  2933  00D918  54                 	db	84	;'T'
  2934  00D919  65                 	db	101	;'e'
  2935  00D91A  6D                 	db	109	;'m'
  2936  00D91B  70                 	db	112	;'p'
  2937  00D91C  3F                 	db	63	;'?'
  2938  00D91D  3A                 	db	58	;':'
  2939  00D91E  20                 	db	32
  2940  00D91F  52                 	db	82	;'R'
  2941  00D920  65                 	db	101	;'e'
  2942  00D921  74                 	db	116	;'t'
  2943  00D922  75                 	db	117	;'u'
  2944  00D923  72                 	db	114	;'r'
  2945  00D924  6E                 	db	110	;'n'
  2946  00D925  73                 	db	115	;'s'
  2947  00D926  20                 	db	32
  2948  00D927  74                 	db	116	;'t'
  2949  00D928  68                 	db	104	;'h'
  2950  00D929  65                 	db	101	;'e'
  2951  00D92A  20                 	db	32
  2952  00D92B  6D                 	db	109	;'m'
  2953  00D92C  61                 	db	97	;'a'
  2954  00D92D  78                 	db	120	;'x'
  2955  00D92E  69                 	db	105	;'i'
  2956  00D92F  6D                 	db	109	;'m'
  2957  00D930  75                 	db	117	;'u'
  2958  00D931  6D                 	db	109	;'m'
  2959  00D932  20                 	db	32
  2960  00D933  72                 	db	114	;'r'
  2961  00D934  65                 	db	101	;'e'
  2962  00D935  63                 	db	99	;'c'
  2963  00D936  6F                 	db	111	;'o'
  2964  00D937  72                 	db	114	;'r'
  2965  00D938  64                 	db	100	;'d'
  2966  00D939  65                 	db	101	;'e'
  2967  00D93A  64                 	db	100	;'d'
  2968  00D93B  20                 	db	32
  2969  00D93C  64                 	db	100	;'d'
  2970  00D93D  69                 	db	105	;'i'
  2971  00D93E  65                 	db	101	;'e'
  2972  00D93F  20                 	db	32
  2973  00D940  74                 	db	116	;'t'
  2974  00D941  65                 	db	101	;'e'
  2975  00D942  6D                 	db	109	;'m'
  2976  00D943  70                 	db	112	;'p'
  2977  00D944  65                 	db	101	;'e'
  2978  00D945  72                 	db	114	;'r'
  2979  00D946  61                 	db	97	;'a'
  2980  00D947  74                 	db	116	;'t'
  2981  00D948  75                 	db	117	;'u'
  2982  00D949  72                 	db	114	;'r'
  2983  00D94A  65                 	db	101	;'e'
  2984  00D94B  20                 	db	32
  2985  00D94C  6D                 	db	109	;'m'
  2986  00D94D  65                 	db	101	;'e'
  2987  00D94E  61                 	db	97	;'a'
  2988  00D94F  73                 	db	115	;'s'
  2989  00D950  75                 	db	117	;'u'
  2990  00D951  72                 	db	114	;'r'
  2991  00D952  65                 	db	101	;'e'
  2992  00D953  64                 	db	100	;'d'
  2993  00D954  0A                 	db	10
  2994  00D955  0D                 	db	13
  2995  00D956  20                 	db	32
  2996  00D957  20                 	db	32
  2997  00D958  20                 	db	32
  2998  00D959  4D                 	db	77	;'M'
  2999  00D95A  61                 	db	97	;'a'
  3000  00D95B  78                 	db	120	;'x'
  3001  00D95C  20                 	db	32
  3002  00D95D  46                 	db	70	;'F'
  3003  00D95E  56                 	db	86	;'V'
  3004  00D95F  52                 	db	82	;'R'
  3005  00D960  20                 	db	32
  3006  00D961  56                 	db	86	;'V'
  3007  00D962  6F                 	db	111	;'o'
  3008  00D963  6C                 	db	108	;'l'
  3009  00D964  74                 	db	116	;'t'
  3010  00D965  61                 	db	97	;'a'
  3011  00D966  67                 	db	103	;'g'
  3012  00D967  65                 	db	101	;'e'
  3013  00D968  3F                 	db	63	;'?'
  3014  00D969  3A                 	db	58	;':'
  3015  00D96A  20                 	db	32
  3016  00D96B  52                 	db	82	;'R'
  3017  00D96C  65                 	db	101	;'e'
  3018  00D96D  74                 	db	116	;'t'
  3019  00D96E  75                 	db	117	;'u'
  3020  00D96F  72                 	db	114	;'r'
  3021  00D970  6E                 	db	110	;'n'
  3022  00D971  73                 	db	115	;'s'
  3023  00D972  20                 	db	32
  3024  00D973  74                 	db	116	;'t'
  3025  00D974  68                 	db	104	;'h'
  3026  00D975  65                 	db	101	;'e'
  3027  00D976  20                 	db	32
  3028  00D977  6D                 	db	109	;'m'
  3029  00D978  61                 	db	97	;'a'
  3030  00D979  78                 	db	120	;'x'
  3031  00D97A  69                 	db	105	;'i'
  3032  00D97B  6D                 	db	109	;'m'
  3033  00D97C  75                 	db	117	;'u'
  3034  00D97D  6D                 	db	109	;'m'
  3035  00D97E  20                 	db	32
  3036  00D97F  72                 	db	114	;'r'
  3037  00D980  65                 	db	101	;'e'
  3038  00D981  63                 	db	99	;'c'
  3039  00D982  6F                 	db	111	;'o'
  3040  00D983  72                 	db	114	;'r'
  3041  00D984  64                 	db	100	;'d'
  3042  00D985  65                 	db	101	;'e'
  3043  00D986  64                 	db	100	;'d'
  3044  00D987  20                 	db	32
  3045  00D988  46                 	db	70	;'F'
  3046  00D989  56                 	db	86	;'V'
  3047  00D98A  52                 	db	82	;'R'
  3048  00D98B  20                 	db	32
  3049  00D98C  42                 	db	66	;'B'
  3050  00D98D  75                 	db	117	;'u'
  3051  00D98E  66                 	db	102	;'f'
  3052  00D98F  66                 	db	102	;'f'
  3053  00D990  65                 	db	101	;'e'
  3054  00D991  72                 	db	114	;'r'
  3055  00D992  20                 	db	32
  3056  00D993  31                 	db	49	;'1'
  3057  00D994  20                 	db	32
  3058  00D995  56                 	db	86	;'V'
  3059  00D996  6F                 	db	111	;'o'
  3060  00D997  6C                 	db	108	;'l'
  3061  00D998  74                 	db	116	;'t'
  3062  00D999  61                 	db	97	;'a'
  3063  00D99A  67                 	db	103	;'g'
  3064  00D99B  65                 	db	101	;'e'
  3065  00D99C  20                 	db	32
  3066  00D99D  6D                 	db	109	;'m'
  3067  00D99E  65                 	db	101	;'e'
  3068  00D99F  61                 	db	97	;'a'
  3069  00D9A0  73                 	db	115	;'s'
  3070  00D9A1  75                 	db	117	;'u'
  3071  00D9A2  72                 	db	114	;'r'
  3072  00D9A3  65                 	db	101	;'e'
  3073  00D9A4  64                 	db	100	;'d'
  3074  00D9A5  0A                 	db	10
  3075  00D9A6  0D                 	db	13
  3076  00D9A7  0A                 	db	10
  3077  00D9A8  0D                 	db	13
  3078  00D9A9  50                 	db	80	;'P'
  3079  00D9AA  72                 	db	114	;'r'
  3080  00D9AB  69                 	db	105	;'i'
  3081  00D9AC  6D                 	db	109	;'m'
  3082  00D9AD  61                 	db	97	;'a'
  3083  00D9AE  72                 	db	114	;'r'
  3084  00D9AF  79                 	db	121	;'y'
  3085  00D9B0  20                 	db	32
  3086  00D9B1  4D                 	db	77	;'M'
  3087  00D9B2  65                 	db	101	;'e'
  3088  00D9B3  61                 	db	97	;'a'
  3089  00D9B4  73                 	db	115	;'s'
  3090  00D9B5  75                 	db	117	;'u'
  3091  00D9B6  72                 	db	114	;'r'
  3092  00D9B7  65                 	db	101	;'e'
  3093  00D9B8  6D                 	db	109	;'m'
  3094  00D9B9  65                 	db	101	;'e'
  3095  00D9BA  6E                 	db	110	;'n'
  3096  00D9BB  74                 	db	116	;'t'
  3097  00D9BC  20                 	db	32
  3098  00D9BD  43                 	db	67	;'C'
  3099  00D9BE  6F                 	db	111	;'o'
  3100  00D9BF  6D                 	db	109	;'m'
  3101  00D9C0  6D                 	db	109	;'m'
  3102  00D9C1  61                 	db	97	;'a'
  3103  00D9C2  6E                 	db	110	;'n'
  3104  00D9C3  64                 	db	100	;'d'
  3105  00D9C4  73                 	db	115	;'s'
  3106  00D9C5  3A                 	db	58	;':'
  3107  00D9C6  20                 	db	32
  3108  00D9C7  56                 	db	86	;'V'
  3109  00D9C8  69                 	db	105	;'i'
  3110  00D9C9  65                 	db	101	;'e'
  3111  00D9CA  77                 	db	119	;'w'
  3112  00D9CB  20                 	db	32
  3113  00D9CC  68                 	db	104	;'h'
  3114  00D9CD  69                 	db	105	;'i'
  3115  00D9CE  67                 	db	103	;'g'
  3116  00D9CF  68                 	db	104	;'h'
  3117  00D9D0  20                 	db	32
  3118  00D9D1  6C                 	db	108	;'l'
  3119  00D9D2  65                 	db	101	;'e'
  3120  00D9D3  76                 	db	118	;'v'
  3121  00D9D4  65                 	db	101	;'e'
  3122  00D9D5  6C                 	db	108	;'l'
  3123  00D9D6  20                 	db	32
  3124  00D9D7  6F                 	db	111	;'o'
  3125  00D9D8  75                 	db	117	;'u'
  3126  00D9D9  74                 	db	116	;'t'
  3127  00D9DA  70                 	db	112	;'p'
  3128  00D9DB  75                 	db	117	;'u'
  3129  00D9DC  74                 	db	116	;'t'
  3130  00D9DD  20                 	db	32
  3131  00D9DE  6D                 	db	109	;'m'
  3132  00D9DF  65                 	db	101	;'e'
  3133  00D9E0  61                 	db	97	;'a'
  3134  00D9E1  73                 	db	115	;'s'
  3135  00D9E2  75                 	db	117	;'u'
  3136  00D9E3  72                 	db	114	;'r'
  3137  00D9E4  65                 	db	101	;'e'
  3138  00D9E5  6D                 	db	109	;'m'
  3139  00D9E6  65                 	db	101	;'e'
  3140  00D9E7  6E                 	db	110	;'n'
  3141  00D9E8  74                 	db	116	;'t'
  3142  00D9E9  73                 	db	115	;'s'
  3143  00D9EA  20                 	db	32
  3144  00D9EB  61                 	db	97	;'a'
  3145  00D9EC  6E                 	db	110	;'n'
  3146  00D9ED  64                 	db	100	;'d'
  3147  00D9EE  20                 	db	32
  3148  00D9EF  63                 	db	99	;'c'
  3149  00D9F0  61                 	db	97	;'a'
  3150  00D9F1  6C                 	db	108	;'l'
  3151  00D9F2  63                 	db	99	;'c'
  3152  00D9F3  75                 	db	117	;'u'
  3153  00D9F4  6C                 	db	108	;'l'
  3154  00D9F5  61                 	db	97	;'a'
  3155  00D9F6  74                 	db	116	;'t'
  3156  00D9F7  69                 	db	105	;'i'
  3157  00D9F8  6F                 	db	111	;'o'
  3158  00D9F9  6E                 	db	110	;'n'
  3159  00D9FA  73                 	db	115	;'s'
  3160  00D9FB  0A                 	db	10
  3161  00D9FC  0D                 	db	13
  3162  00D9FD  20                 	db	32
  3163  00D9FE  20                 	db	32
  3164  00D9FF  20                 	db	32
  3165  00DA00  4D                 	db	77	;'M'
  3166  00DA01  65                 	db	101	;'e'
  3167  00DA02  61                 	db	97	;'a'
  3168  00DA03  73                 	db	115	;'s'
  3169  00DA04  75                 	db	117	;'u'
  3170  00DA05  72                 	db	114	;'r'
  3171  00DA06  65                 	db	101	;'e'
  3172  00DA07  20                 	db	32
  3173  00DA08  44                 	db	68	;'D'
  3174  00DA09  65                 	db	101	;'e'
  3175  00DA0A  74                 	db	116	;'t'
  3176  00DA0B  65                 	db	101	;'e'
  3177  00DA0C  63                 	db	99	;'c'
  3178  00DA0D  74                 	db	116	;'t'
  3179  00DA0E  65                 	db	101	;'e'
  3180  00DA0F  64                 	db	100	;'d'
  3181  00DA10  20                 	db	32
  3182  00DA11  43                 	db	67	;'C'
  3183  00DA12  75                 	db	117	;'u'
  3184  00DA13  72                 	db	114	;'r'
  3185  00DA14  72                 	db	114	;'r'
  3186  00DA15  65                 	db	101	;'e'
  3187  00DA16  6E                 	db	110	;'n'
  3188  00DA17  74                 	db	116	;'t'
  3189  00DA18  3F                 	db	63	;'?'
  3190  00DA19  3A                 	db	58	;':'
  3191  00DA1A  20                 	db	32
  3192  00DA1B  52                 	db	82	;'R'
  3193  00DA1C  65                 	db	101	;'e'
  3194  00DA1D  74                 	db	116	;'t'
  3195  00DA1E  75                 	db	117	;'u'
  3196  00DA1F  72                 	db	114	;'r'
  3197  00DA20  6E                 	db	110	;'n'
  3198  00DA21  73                 	db	115	;'s'
  3199  00DA22  20                 	db	32
  3200  00DA23  6D                 	db	109	;'m'
  3201  00DA24  65                 	db	101	;'e'
  3202  00DA25  61                 	db	97	;'a'
  3203  00DA26  73                 	db	115	;'s'
  3204  00DA27  75                 	db	117	;'u'
  3205  00DA28  72                 	db	114	;'r'
  3206  00DA29  65                 	db	101	;'e'
  3207  00DA2A  64                 	db	100	;'d'
  3208  00DA2B  20                 	db	32
  3209  00DA2C  6F                 	db	111	;'o'
  3210  00DA2D  75                 	db	117	;'u'
  3211  00DA2E  74                 	db	116	;'t'
  3212  00DA2F  70                 	db	112	;'p'
  3213  00DA30  75                 	db	117	;'u'
  3214  00DA31  74                 	db	116	;'t'
  3215  00DA32  20                 	db	32
  3216  00DA33  63                 	db	99	;'c'
  3217  00DA34  75                 	db	117	;'u'
  3218  00DA35  72                 	db	114	;'r'
  3219  00DA36  72                 	db	114	;'r'
  3220  00DA37  65                 	db	101	;'e'
  3221  00DA38  6E                 	db	110	;'n'
  3222  00DA39  74                 	db	116	;'t'
  3223  00DA3A  20                 	db	32
  3224  00DA3B  69                 	db	105	;'i'
  3225  00DA3C  6E                 	db	110	;'n'
  3226  00DA3D  20                 	db	32
  3227  00DA3E  61                 	db	97	;'a'
  3228  00DA3F  6D                 	db	109	;'m'
  3229  00DA40  70                 	db	112	;'p'
  3230  00DA41  73                 	db	115	;'s'
  3231  00DA42  20                 	db	32
  3232  00DA43  61                 	db	97	;'a'
  3233  00DA44  73                 	db	115	;'s'
  3234  00DA45  20                 	db	32
  3235  00DA46  73                 	db	115	;'s'
  3236  00DA47  65                 	db	101	;'e'
  3237  00DA48  65                 	db	101	;'e'
  3238  00DA49  6E                 	db	110	;'n'
  3239  00DA4A  20                 	db	32
  3240  00DA4B  62                 	db	98	;'b'
  3241  00DA4C  79                 	db	121	;'y'
  3242  00DA4D  20                 	db	32
  3243  00DA4E  41                 	db	65	;'A'
  3244  00DA4F  44                 	db	68	;'D'
  3245  00DA50  43                 	db	67	;'C'
  3246  00DA51  0A                 	db	10
  3247  00DA52  0D                 	db	13
  3248  00DA53  20                 	db	32
  3249  00DA54  20                 	db	32
  3250  00DA55  20                 	db	32
  3251  00DA56  4D                 	db	77	;'M'
  3252  00DA57  65                 	db	101	;'e'
  3253  00DA58  61                 	db	97	;'a'
  3254  00DA59  73                 	db	115	;'s'
  3255  00DA5A  75                 	db	117	;'u'
  3256  00DA5B  72                 	db	114	;'r'
  3257  00DA5C  65                 	db	101	;'e'
  3258  00DA5D  20                 	db	32
  3259  00DA5E  52                 	db	82	;'R'
  3260  00DA5F  4D                 	db	77	;'M'
  3261  00DA60  53                 	db	83	;'S'
  3262  00DA61  20                 	db	32
  3263  00DA62  43                 	db	67	;'C'
  3264  00DA63  75                 	db	117	;'u'
  3265  00DA64  72                 	db	114	;'r'
  3266  00DA65  72                 	db	114	;'r'
  3267  00DA66  65                 	db	101	;'e'
  3268  00DA67  6E                 	db	110	;'n'
  3269  00DA68  74                 	db	116	;'t'
  3270  00DA69  3F                 	db	63	;'?'
  3271  00DA6A  3A                 	db	58	;':'
  3272  00DA6B  20                 	db	32
  3273  00DA6C  52                 	db	82	;'R'
  3274  00DA6D  65                 	db	101	;'e'
  3275  00DA6E  74                 	db	116	;'t'
  3276  00DA6F  75                 	db	117	;'u'
  3277  00DA70  72                 	db	114	;'r'
  3278  00DA71  6E                 	db	110	;'n'
  3279  00DA72  73                 	db	115	;'s'
  3280  00DA73  20                 	db	32
  3281  00DA74  74                 	db	116	;'t'
  3282  00DA75  68                 	db	104	;'h'
  3283  00DA76  65                 	db	101	;'e'
  3284  00DA77  20                 	db	32
  3285  00DA78  63                 	db	99	;'c'
  3286  00DA79  61                 	db	97	;'a'
  3287  00DA7A  6C                 	db	108	;'l'
  3288  00DA7B  63                 	db	99	;'c'
  3289  00DA7C  75                 	db	117	;'u'
  3290  00DA7D  6C                 	db	108	;'l'
  3291  00DA7E  61                 	db	97	;'a'
  3292  00DA7F  74                 	db	116	;'t'
  3293  00DA80  65                 	db	101	;'e'
  3294  00DA81  64                 	db	100	;'d'
  3295  00DA82  20                 	db	32
  3296  00DA83  52                 	db	82	;'R'
  3297  00DA84  4D                 	db	77	;'M'
  3298  00DA85  53                 	db	83	;'S'
  3299  00DA86  20                 	db	32
  3300  00DA87  6F                 	db	111	;'o'
  3301  00DA88  75                 	db	117	;'u'
  3302  00DA89  74                 	db	116	;'t'
  3303  00DA8A  70                 	db	112	;'p'
  3304  00DA8B  75                 	db	117	;'u'
  3305  00DA8C  74                 	db	116	;'t'
  3306  00DA8D  20                 	db	32
  3307  00DA8E  63                 	db	99	;'c'
  3308  00DA8F  75                 	db	117	;'u'
  3309  00DA90  72                 	db	114	;'r'
  3310  00DA91  72                 	db	114	;'r'
  3311  00DA92  65                 	db	101	;'e'
  3312  00DA93  6E                 	db	110	;'n'
  3313  00DA94  74                 	db	116	;'t'
  3314  00DA95  20                 	db	32
  3315  00DA96  66                 	db	102	;'f'
  3316  00DA97  72                 	db	114	;'r'
  3317  00DA98  6F                 	db	111	;'o'
  3318  00DA99  6D                 	db	109	;'m'
  3319  00DA9A  20                 	db	32
  3320  00DA9B  6D                 	db	109	;'m'
  3321  00DA9C  65                 	db	101	;'e'
  3322  00DA9D  61                 	db	97	;'a'
  3323  00DA9E  73                 	db	115	;'s'
  3324  00DA9F  75                 	db	117	;'u'
  3325  00DAA0  72                 	db	114	;'r'
  3326  00DAA1  65                 	db	101	;'e'
  3327  00DAA2  6D                 	db	109	;'m'
  3328  00DAA3  65                 	db	101	;'e'
  3329  00DAA4  6E                 	db	110	;'n'
  3330  00DAA5  74                 	db	116	;'t'
  3331  00DAA6  73                 	db	115	;'s'
  3332  00DAA7  20                 	db	32
  3333  00DAA8  61                 	db	97	;'a'
  3334  00DAA9  6E                 	db	110	;'n'
  3335  00DAAA  64                 	db	100	;'d'
  3336  00DAAB  20                 	db	32
  3337  00DAAC  54                 	db	84	;'T'
  3338  00DAAD  52                 	db	82	;'R'
  3339  00DAAE  49                 	db	73	;'I'
  3340  00DAAF  41                 	db	65	;'A'
  3341  00DAB0  43                 	db	67	;'C'
  3342  00DAB1  20                 	db	32
  3343  00DAB2  66                 	db	102	;'f'
  3344  00DAB3  69                 	db	105	;'i'
  3345  00DAB4  72                 	db	114	;'r'
  3346  00DAB5  69                 	db	105	;'i'
  3347  00DAB6  6E                 	db	110	;'n'
  3348  00DAB7  67                 	db	103	;'g'
  3349  00DAB8  20                 	db	32
  3350  00DAB9  61                 	db	97	;'a'
  3351  00DABA  6E                 	db	110	;'n'
  3352  00DABB  67                 	db	103	;'g'
  3353  00DABC  6C                 	db	108	;'l'
  3354  00DABD  65                 	db	101	;'e'
  3355  00DABE  0A                 	db	10
  3356  00DABF  0D                 	db	13
  3357  00DAC0  20                 	db	32
  3358  00DAC1  20                 	db	32
  3359  00DAC2  20                 	db	32
  3360  00DAC3  4D                 	db	77	;'M'
  3361  00DAC4  65                 	db	101	;'e'
  3362  00DAC5  61                 	db	97	;'a'
  3363  00DAC6  73                 	db	115	;'s'
  3364  00DAC7  75                 	db	117	;'u'
  3365  00DAC8  72                 	db	114	;'r'
  3366  00DAC9  65                 	db	101	;'e'
  3367  00DACA  20                 	db	32
  3368  00DACB  52                 	db	82	;'R'
  3369  00DACC  4D                 	db	77	;'M'
  3370  00DACD  53                 	db	83	;'S'
  3371  00DACE  20                 	db	32
  3372  00DACF  56                 	db	86	;'V'
  3373  00DAD0  6F                 	db	111	;'o'
  3374  00DAD1  6C                 	db	108	;'l'
  3375  00DAD2  74                 	db	116	;'t'
  3376  00DAD3  61                 	db	97	;'a'
  3377  00DAD4  67                 	db	103	;'g'
  3378  00DAD5  65                 	db	101	;'e'
  3379  00DAD6  3F                 	db	63	;'?'
  3380  00DAD7  3A                 	db	58	;':'
  3381  00DAD8  20                 	db	32
  3382  00DAD9  52                 	db	82	;'R'
  3383  00DADA  65                 	db	101	;'e'
  3384  00DADB  74                 	db	116	;'t'
  3385  00DADC  75                 	db	117	;'u'
  3386  00DADD  72                 	db	114	;'r'
  3387  00DADE  6E                 	db	110	;'n'
  3388  00DADF  73                 	db	115	;'s'
  3389  00DAE0  20                 	db	32
  3390  00DAE1  74                 	db	116	;'t'
  3391  00DAE2  68                 	db	104	;'h'
  3392  00DAE3  65                 	db	101	;'e'
  3393  00DAE4  20                 	db	32
  3394  00DAE5  63                 	db	99	;'c'
  3395  00DAE6  61                 	db	97	;'a'
  3396  00DAE7  6C                 	db	108	;'l'
  3397  00DAE8  63                 	db	99	;'c'
  3398  00DAE9  75                 	db	117	;'u'
  3399  00DAEA  6C                 	db	108	;'l'
  3400  00DAEB  61                 	db	97	;'a'
  3401  00DAEC  74                 	db	116	;'t'
  3402  00DAED  65                 	db	101	;'e'
  3403  00DAEE  64                 	db	100	;'d'
  3404  00DAEF  20                 	db	32
  3405  00DAF0  52                 	db	82	;'R'
  3406  00DAF1  4D                 	db	77	;'M'
  3407  00DAF2  53                 	db	83	;'S'
  3408  00DAF3  20                 	db	32
  3409  00DAF4  6F                 	db	111	;'o'
  3410  00DAF5  75                 	db	117	;'u'
  3411  00DAF6  74                 	db	116	;'t'
  3412  00DAF7  70                 	db	112	;'p'
  3413  00DAF8  75                 	db	117	;'u'
  3414  00DAF9  74                 	db	116	;'t'
  3415  00DAFA  20                 	db	32
  3416  00DAFB  76                 	db	118	;'v'
  3417  00DAFC  6F                 	db	111	;'o'
  3418  00DAFD  6C                 	db	108	;'l'
  3419  00DAFE  74                 	db	116	;'t'
  3420  00DAFF  61                 	db	97	;'a'
  3421  00DB00  67                 	db	103	;'g'
  3422  00DB01  65                 	db	101	;'e'
  3423  00DB02  20                 	db	32
  3424  00DB03  66                 	db	102	;'f'
  3425  00DB04  72                 	db	114	;'r'
  3426  00DB05  6F                 	db	111	;'o'
  3427  00DB06  6D                 	db	109	;'m'
  3428  00DB07  20                 	db	32
  3429  00DB08  54                 	db	84	;'T'
  3430  00DB09  52                 	db	82	;'R'
  3431  00DB0A  49                 	db	73	;'I'
  3432  00DB0B  41                 	db	65	;'A'
  3433  00DB0C  43                 	db	67	;'C'
  3434  00DB0D  20                 	db	32
  3435  00DB0E  66                 	db	102	;'f'
  3436  00DB0F  69                 	db	105	;'i'
  3437  00DB10  72                 	db	114	;'r'
  3438  00DB11  69                 	db	105	;'i'
  3439  00DB12  6E                 	db	110	;'n'
  3440  00DB13  67                 	db	103	;'g'
  3441  00DB14  20                 	db	32
  3442  00DB15  61                 	db	97	;'a'
  3443  00DB16  6E                 	db	110	;'n'
  3444  00DB17  67                 	db	103	;'g'
  3445  00DB18  6C                 	db	108	;'l'
  3446  00DB19  65                 	db	101	;'e'
  3447  00DB1A  0A                 	db	10
  3448  00DB1B  0D                 	db	13
  3449  00DB1C  20                 	db	32
  3450  00DB1D  20                 	db	32
  3451  00DB1E  20                 	db	32
  3452  00DB1F  4D                 	db	77	;'M'
  3453  00DB20  65                 	db	101	;'e'
  3454  00DB21  61                 	db	97	;'a'
  3455  00DB22  73                 	db	115	;'s'
  3456  00DB23  75                 	db	117	;'u'
  3457  00DB24  72                 	db	114	;'r'
  3458  00DB25  65                 	db	101	;'e'
  3459  00DB26  20                 	db	32
  3460  00DB27  50                 	db	80	;'P'
  3461  00DB28  6F                 	db	111	;'o'
  3462  00DB29  77                 	db	119	;'w'
  3463  00DB2A  65                 	db	101	;'e'
  3464  00DB2B  72                 	db	114	;'r'
  3465  00DB2C  3F                 	db	63	;'?'
  3466  00DB2D  3A                 	db	58	;':'
  3467  00DB2E  20                 	db	32
  3468  00DB2F  52                 	db	82	;'R'
  3469  00DB30  65                 	db	101	;'e'
  3470  00DB31  74                 	db	116	;'t'
  3471  00DB32  75                 	db	117	;'u'
  3472  00DB33  72                 	db	114	;'r'
  3473  00DB34  6E                 	db	110	;'n'
  3474  00DB35  73                 	db	115	;'s'
  3475  00DB36  20                 	db	32
  3476  00DB37  74                 	db	116	;'t'
  3477  00DB38  68                 	db	104	;'h'
  3478  00DB39  65                 	db	101	;'e'
  3479  00DB3A  20                 	db	32
  3480  00DB3B  63                 	db	99	;'c'
  3481  00DB3C  61                 	db	97	;'a'
  3482  00DB3D  6C                 	db	108	;'l'
  3483  00DB3E  63                 	db	99	;'c'
  3484  00DB3F  75                 	db	117	;'u'
  3485  00DB40  6C                 	db	108	;'l'
  3486  00DB41  61                 	db	97	;'a'
  3487  00DB42  74                 	db	116	;'t'
  3488  00DB43  65                 	db	101	;'e'
  3489  00DB44  64                 	db	100	;'d'
  3490  00DB45  20                 	db	32
  3491  00DB46  6F                 	db	111	;'o'
  3492  00DB47  75                 	db	117	;'u'
  3493  00DB48  74                 	db	116	;'t'
  3494  00DB49  70                 	db	112	;'p'
  3495  00DB4A  75                 	db	117	;'u'
  3496  00DB4B  74                 	db	116	;'t'
  3497  00DB4C  20                 	db	32
  3498  00DB4D  70                 	db	112	;'p'
  3499  00DB4E  6F                 	db	111	;'o'
  3500  00DB4F  77                 	db	119	;'w'
  3501  00DB50  65                 	db	101	;'e'
  3502  00DB51  72                 	db	114	;'r'
  3503  00DB52  20                 	db	32
  3504  00DB53  69                 	db	105	;'i'
  3505  00DB54  6E                 	db	110	;'n'
  3506  00DB55  20                 	db	32
  3507  00DB56  57                 	db	87	;'W'
  3508  00DB57  61                 	db	97	;'a'
  3509  00DB58  74                 	db	116	;'t'
  3510  00DB59  74                 	db	116	;'t'
  3511  00DB5A  73                 	db	115	;'s'
  3512  00DB5B  0A                 	db	10
  3513  00DB5C  0D                 	db	13
  3514  00DB5D  20                 	db	32
  3515  00DB5E  20                 	db	32
  3516  00DB5F  20                 	db	32
  3517  00DB60  4D                 	db	77	;'M'
  3518  00DB61  65                 	db	101	;'e'
  3519  00DB62  61                 	db	97	;'a'
  3520  00DB63  73                 	db	115	;'s'
  3521  00DB64  75                 	db	117	;'u'
  3522  00DB65  72                 	db	114	;'r'
  3523  00DB66  65                 	db	101	;'e'
  3524  00DB67  20                 	db	32
  3525  00DB68  45                 	db	69	;'E'
  3526  00DB69  6E                 	db	110	;'n'
  3527  00DB6A  65                 	db	101	;'e'
  3528  00DB6B  72                 	db	114	;'r'
  3529  00DB6C  67                 	db	103	;'g'
  3530  00DB6D  79                 	db	121	;'y'
  3531  00DB6E  3F                 	db	63	;'?'
  3532  00DB6F  3A                 	db	58	;':'
  3533  00DB70  20                 	db	32
  3534  00DB71  52                 	db	82	;'R'
  3535  00DB72  65                 	db	101	;'e'
  3536  00DB73  74                 	db	116	;'t'
  3537  00DB74  75                 	db	117	;'u'
  3538  00DB75  72                 	db	114	;'r'
  3539  00DB76  6E                 	db	110	;'n'
  3540  00DB77  73                 	db	115	;'s'
  3541  00DB78  20                 	db	32
  3542  00DB79  6D                 	db	109	;'m'
  3543  00DB7A  65                 	db	101	;'e'
  3544  00DB7B  61                 	db	97	;'a'
  3545  00DB7C  73                 	db	115	;'s'
  3546  00DB7D  75                 	db	117	;'u'
  3547  00DB7E  72                 	db	114	;'r'
  3548  00DB7F  65                 	db	101	;'e'
  3549  00DB80  64                 	db	100	;'d'
  3550  00DB81  20                 	db	32
  3551  00DB82  65                 	db	101	;'e'
  3552  00DB83  6E                 	db	110	;'n'
  3553  00DB84  65                 	db	101	;'e'
  3554  00DB85  72                 	db	114	;'r'
  3555  00DB86  67                 	db	103	;'g'
  3556  00DB87  79                 	db	121	;'y'
  3557  00DB88  20                 	db	32
  3558  00DB89  73                 	db	115	;'s'
  3559  00DB8A  69                 	db	105	;'i'
  3560  00DB8B  6E                 	db	110	;'n'
  3561  00DB8C  63                 	db	99	;'c'
  3562  00DB8D  65                 	db	101	;'e'
  3563  00DB8E  20                 	db	32
  3564  00DB8F  6D                 	db	109	;'m'
  3565  00DB90  65                 	db	101	;'e'
  3566  00DB91  61                 	db	97	;'a'
  3567  00DB92  73                 	db	115	;'s'
  3568  00DB93  75                 	db	117	;'u'
  3569  00DB94  72                 	db	114	;'r'
  3570  00DB95  65                 	db	101	;'e'
  3571  00DB96  6D                 	db	109	;'m'
  3572  00DB97  65                 	db	101	;'e'
  3573  00DB98  6E                 	db	110	;'n'
  3574  00DB99  74                 	db	116	;'t'
  3575  00DB9A  20                 	db	32
  3576  00DB9B  72                 	db	114	;'r'
  3577  00DB9C  65                 	db	101	;'e'
  3578  00DB9D  73                 	db	115	;'s'
  3579  00DB9E  65                 	db	101	;'e'
  3580  00DB9F  74                 	db	116	;'t'
  3581  00DBA0  20                 	db	32
  3582  00DBA1  69                 	db	105	;'i'
  3583  00DBA2  6E                 	db	110	;'n'
  3584  00DBA3  20                 	db	32
  3585  00DBA4  57                 	db	87	;'W'
  3586  00DBA5  61                 	db	97	;'a'
  3587  00DBA6  74                 	db	116	;'t'
  3588  00DBA7  74                 	db	116	;'t'
  3589  00DBA8  20                 	db	32
  3590  00DBA9  48                 	db	72	;'H'
  3591  00DBAA  6F                 	db	111	;'o'
  3592  00DBAB  75                 	db	117	;'u'
  3593  00DBAC  72                 	db	114	;'r'
  3594  00DBAD  73                 	db	115	;'s'
  3595  00DBAE  0A                 	db	10
  3596  00DBAF  0D                 	db	13
  3597  00DBB0  20                 	db	32
  3598  00DBB1  20                 	db	32
  3599  00DBB2  20                 	db	32
  3600  00DBB3  43                 	db	67	;'C'
  3601  00DBB4  6C                 	db	108	;'l'
  3602  00DBB5  65                 	db	101	;'e'
  3603  00DBB6  61                 	db	97	;'a'
  3604  00DBB7  72                 	db	114	;'r'
  3605  00DBB8  20                 	db	32
  3606  00DBB9  45                 	db	69	;'E'
  3607  00DBBA  6E                 	db	110	;'n'
  3608  00DBBB  65                 	db	101	;'e'
  3609  00DBBC  72                 	db	114	;'r'
  3610  00DBBD  67                 	db	103	;'g'
  3611  00DBBE  79                 	db	121	;'y'
  3612  00DBBF  3A                 	db	58	;':'
  3613  00DBC0  20                 	db	32
  3614  00DBC1  52                 	db	82	;'R'
  3615  00DBC2  65                 	db	101	;'e'
  3616  00DBC3  73                 	db	115	;'s'
  3617  00DBC4  65                 	db	101	;'e'
  3618  00DBC5  74                 	db	116	;'t'
  3619  00DBC6  73                 	db	115	;'s'
  3620  00DBC7  20                 	db	32
  3621  00DBC8  74                 	db	116	;'t'
  3622  00DBC9  68                 	db	104	;'h'
  3623  00DBCA  65                 	db	101	;'e'
  3624  00DBCB  20                 	db	32
  3625  00DBCC  6D                 	db	109	;'m'
  3626  00DBCD  65                 	db	101	;'e'
  3627  00DBCE  61                 	db	97	;'a'
  3628  00DBCF  73                 	db	115	;'s'
  3629  00DBD0  75                 	db	117	;'u'
  3630  00DBD1  72                 	db	114	;'r'
  3631  00DBD2  65                 	db	101	;'e'
  3632  00DBD3  64                 	db	100	;'d'
  3633  00DBD4  20                 	db	32
  3634  00DBD5  6F                 	db	111	;'o'
  3635  00DBD6  75                 	db	117	;'u'
  3636  00DBD7  74                 	db	116	;'t'
  3637  00DBD8  70                 	db	112	;'p'
  3638  00DBD9  75                 	db	117	;'u'
  3639  00DBDA  74                 	db	116	;'t'
  3640  00DBDB  20                 	db	32
  3641  00DBDC  65                 	db	101	;'e'
  3642  00DBDD  6E                 	db	110	;'n'
  3643  00DBDE  65                 	db	101	;'e'
  3644  00DBDF  72                 	db	114	;'r'
  3645  00DBE0  67                 	db	103	;'g'
  3646  00DBE1  79                 	db	121	;'y'
  3647  00DBE2  20                 	db	32
  3648  00DBE3  74                 	db	116	;'t'
  3649  00DBE4  6F                 	db	111	;'o'
  3650  00DBE5  20                 	db	32
  3651  00DBE6  7A                 	db	122	;'z'
  3652  00DBE7  65                 	db	101	;'e'
  3653  00DBE8  72                 	db	114	;'r'
  3654  00DBE9  6F                 	db	111	;'o'
  3655  00DBEA  0A                 	db	10
  3656  00DBEB  0D                 	db	13
  3657  00DBEC  20                 	db	32
  3658  00DBED  20                 	db	32
  3659  00DBEE  20                 	db	32
  3660  00DBEF  4C                 	db	76	;'L'
  3661  00DBF0  6F                 	db	111	;'o'
  3662  00DBF1  61                 	db	97	;'a'
  3663  00DBF2  64                 	db	100	;'d'
  3664  00DBF3  20                 	db	32
  3665  00DBF4  4F                 	db	79	;'O'
  3666  00DBF5  6E                 	db	110	;'n'
  3667  00DBF6  20                 	db	32
  3668  00DBF7  54                 	db	84	;'T'
  3669  00DBF8  69                 	db	105	;'i'
  3670  00DBF9  6D                 	db	109	;'m'
  3671  00DBFA  65                 	db	101	;'e'
  3672  00DBFB  3F                 	db	63	;'?'
  3673  00DBFC  3A                 	db	58	;':'
  3674  00DBFD  20                 	db	32
  3675  00DBFE  52                 	db	82	;'R'
  3676  00DBFF  65                 	db	101	;'e'
  3677  00DC00  74                 	db	116	;'t'
  3678  00DC01  75                 	db	117	;'u'
  3679  00DC02  72                 	db	114	;'r'
  3680  00DC03  6E                 	db	110	;'n'
  3681  00DC04  73                 	db	115	;'s'
  3682  00DC05  20                 	db	32
  3683  00DC06  6C                 	db	108	;'l'
  3684  00DC07  6F                 	db	111	;'o'
  3685  00DC08  61                 	db	97	;'a'
  3686  00DC09  64                 	db	100	;'d'
  3687  00DC0A  20                 	db	32
  3688  00DC0B  6F                 	db	111	;'o'
  3689  00DC0C  6E                 	db	110	;'n'
  3690  00DC0D  20                 	db	32
  3691  00DC0E  74                 	db	116	;'t'
  3692  00DC0F  69                 	db	105	;'i'
  3693  00DC10  6D                 	db	109	;'m'
  3694  00DC11  65                 	db	101	;'e'
  3695  00DC12  20                 	db	32
  3696  00DC13  73                 	db	115	;'s'
  3697  00DC14  69                 	db	105	;'i'
  3698  00DC15  6E                 	db	110	;'n'
  3699  00DC16  63                 	db	99	;'c'
  3700  00DC17  65                 	db	101	;'e'
  3701  00DC18  20                 	db	32
  3702  00DC19  6C                 	db	108	;'l'
  3703  00DC1A  61                 	db	97	;'a'
  3704  00DC1B  73                 	db	115	;'s'
  3705  00DC1C  74                 	db	116	;'t'
  3706  00DC1D  20                 	db	32
  3707  00DC1E  64                 	db	100	;'d'
  3708  00DC1F  65                 	db	101	;'e'
  3709  00DC20  76                 	db	118	;'v'
  3710  00DC21  69                 	db	105	;'i'
  3711  00DC22  63                 	db	99	;'c'
  3712  00DC23  65                 	db	101	;'e'
  3713  00DC24  20                 	db	32
  3714  00DC25  72                 	db	114	;'r'
  3715  00DC26  65                 	db	101	;'e'
  3716  00DC27  73                 	db	115	;'s'
  3717  00DC28  65                 	db	101	;'e'
  3718  00DC29  74                 	db	116	;'t'
  3719  00DC2A  20                 	db	32
  3720  00DC2B  69                 	db	105	;'i'
  3721  00DC2C  6E                 	db	110	;'n'
  3722  00DC2D  20                 	db	32
  3723  00DC2E  73                 	db	115	;'s'
  3724  00DC2F  65                 	db	101	;'e'
  3725  00DC30  63                 	db	99	;'c'
  3726  00DC31  6F                 	db	111	;'o'
  3727  00DC32  6E                 	db	110	;'n'
  3728  00DC33  64                 	db	100	;'d'
  3729  00DC34  73                 	db	115	;'s'
  3730  00DC35  0A                 	db	10
  3731  00DC36  0D                 	db	13
  3732  00DC37  20                 	db	32
  3733  00DC38  20                 	db	32
  3734  00DC39  20                 	db	32
  3735  00DC3A  4D                 	db	77	;'M'
  3736  00DC3B  61                 	db	97	;'a'
  3737  00DC3C  78                 	db	120	;'x'
  3738  00DC3D  20                 	db	32
  3739  00DC3E  52                 	db	82	;'R'
  3740  00DC3F  4D                 	db	77	;'M'
  3741  00DC40  53                 	db	83	;'S'
  3742  00DC41  20                 	db	32
  3743  00DC42  43                 	db	67	;'C'
  3744  00DC43  75                 	db	117	;'u'
  3745  00DC44  72                 	db	114	;'r'
  3746  00DC45  72                 	db	114	;'r'
  3747  00DC46  65                 	db	101	;'e'
  3748  00DC47  6E                 	db	110	;'n'
  3749  00DC48  74                 	db	116	;'t'
  3750  00DC49  3F                 	db	63	;'?'
  3751  00DC4A  3A                 	db	58	;':'
  3752  00DC4B  20                 	db	32
  3753  00DC4C  50                 	db	80	;'P'
  3754  00DC4D  72                 	db	114	;'r'
  3755  00DC4E  69                 	db	105	;'i'
  3756  00DC4F  6E                 	db	110	;'n'
  3757  00DC50  74                 	db	116	;'t'
  3758  00DC51  73                 	db	115	;'s'
  3759  00DC52  20                 	db	32
  3760  00DC53  74                 	db	116	;'t'
  3761  00DC54  68                 	db	104	;'h'
  3762  00DC55  65                 	db	101	;'e'
  3763  00DC56  20                 	db	32
  3764  00DC57  6D                 	db	109	;'m'
  3765  00DC58  61                 	db	97	;'a'
  3766  00DC59  78                 	db	120	;'x'
  3767  00DC5A  69                 	db	105	;'i'
  3768  00DC5B  6D                 	db	109	;'m'
  3769  00DC5C  75                 	db	117	;'u'
  3770  00DC5D  6D                 	db	109	;'m'
  3771  00DC5E  20                 	db	32
  3772  00DC5F  72                 	db	114	;'r'
  3773  00DC60  65                 	db	101	;'e'
  3774  00DC61  63                 	db	99	;'c'
  3775  00DC62  6F                 	db	111	;'o'
  3776  00DC63  72                 	db	114	;'r'
  3777  00DC64  64                 	db	100	;'d'
  3778  00DC65  65                 	db	101	;'e'
  3779  00DC66  64                 	db	100	;'d'
  3780  00DC67  20                 	db	32
  3781  00DC68  52                 	db	82	;'R'
  3782  00DC69  4D                 	db	77	;'M'
  3783  00DC6A  53                 	db	83	;'S'
  3784  00DC6B  20                 	db	32
  3785  00DC6C  6F                 	db	111	;'o'
  3786  00DC6D  75                 	db	117	;'u'
  3787  00DC6E  74                 	db	116	;'t'
  3788  00DC6F  70                 	db	112	;'p'
  3789  00DC70  75                 	db	117	;'u'
  3790  00DC71  74                 	db	116	;'t'
  3791  00DC72  20                 	db	32
  3792  00DC73  63                 	db	99	;'c'
  3793  00DC74  75                 	db	117	;'u'
  3794  00DC75  72                 	db	114	;'r'
  3795  00DC76  72                 	db	114	;'r'
  3796  00DC77  65                 	db	101	;'e'
  3797  00DC78  6E                 	db	110	;'n'
  3798  00DC79  74                 	db	116	;'t'
  3799  00DC7A  0A                 	db	10
  3800  00DC7B  0D                 	db	13
  3801  00DC7C  20                 	db	32
  3802  00DC7D  20                 	db	32
  3803  00DC7E  20                 	db	32
  3804  00DC7F  4D                 	db	77	;'M'
  3805  00DC80  61                 	db	97	;'a'
  3806  00DC81  78                 	db	120	;'x'
  3807  00DC82  20                 	db	32
  3808  00DC83  50                 	db	80	;'P'
  3809  00DC84  6F                 	db	111	;'o'
  3810  00DC85  77                 	db	119	;'w'
  3811  00DC86  65                 	db	101	;'e'
  3812  00DC87  72                 	db	114	;'r'
  3813  00DC88  3F                 	db	63	;'?'
  3814  00DC89  3A                 	db	58	;':'
  3815  00DC8A  20                 	db	32
  3816  00DC8B  50                 	db	80	;'P'
  3817  00DC8C  72                 	db	114	;'r'
  3818  00DC8D  69                 	db	105	;'i'
  3819  00DC8E  6E                 	db	110	;'n'
  3820  00DC8F  74                 	db	116	;'t'
  3821  00DC90  73                 	db	115	;'s'
  3822  00DC91  20                 	db	32
  3823  00DC92  74                 	db	116	;'t'
  3824  00DC93  68                 	db	104	;'h'
  3825  00DC94  65                 	db	101	;'e'
  3826  00DC95  20                 	db	32
  3827  00DC96  6D                 	db	109	;'m'
  3828  00DC97  61                 	db	97	;'a'
  3829  00DC98  78                 	db	120	;'x'
  3830  00DC99  69                 	db	105	;'i'
  3831  00DC9A  6D                 	db	109	;'m'
  3832  00DC9B  75                 	db	117	;'u'
  3833  00DC9C  6D                 	db	109	;'m'
  3834  00DC9D  20                 	db	32
  3835  00DC9E  72                 	db	114	;'r'
  3836  00DC9F  65                 	db	101	;'e'
  3837  00DCA0  63                 	db	99	;'c'
  3838  00DCA1  6F                 	db	111	;'o'
  3839  00DCA2  72                 	db	114	;'r'
  3840  00DCA3  64                 	db	100	;'d'
  3841  00DCA4  65                 	db	101	;'e'
  3842  00DCA5  64                 	db	100	;'d'
  3843  00DCA6  20                 	db	32
  3844  00DCA7  6F                 	db	111	;'o'
  3845  00DCA8  75                 	db	117	;'u'
  3846  00DCA9  74                 	db	116	;'t'
  3847  00DCAA  70                 	db	112	;'p'
  3848  00DCAB  75                 	db	117	;'u'
  3849  00DCAC  74                 	db	116	;'t'
  3850  00DCAD  20                 	db	32
  3851  00DCAE  70                 	db	112	;'p'
  3852  00DCAF  6F                 	db	111	;'o'
  3853  00DCB0  77                 	db	119	;'w'
  3854  00DCB1  65                 	db	101	;'e'
  3855  00DCB2  72                 	db	114	;'r'
  3856  00DCB3  0A                 	db	10
  3857  00DCB4  0D                 	db	13
  3858  00DCB5  0A                 	db	10
  3859  00DCB6  0D                 	db	13
  3860  00DCB7  4F                 	db	79	;'O'
  3861  00DCB8  75                 	db	117	;'u'
  3862  00DCB9  74                 	db	116	;'t'
  3863  00DCBA  70                 	db	112	;'p'
  3864  00DCBB  75                 	db	117	;'u'
  3865  00DCBC  74                 	db	116	;'t'
  3866  00DCBD  20                 	db	32
  3867  00DCBE  43                 	db	67	;'C'
  3868  00DCBF  6F                 	db	111	;'o'
  3869  00DCC0  6E                 	db	110	;'n'
  3870  00DCC1  74                 	db	116	;'t'
  3871  00DCC2  72                 	db	114	;'r'
  3872  00DCC3  6F                 	db	111	;'o'
  3873  00DCC4  6C                 	db	108	;'l'
  3874  00DCC5  20                 	db	32
  3875  00DCC6  43                 	db	67	;'C'
  3876  00DCC7  6F                 	db	111	;'o'
  3877  00DCC8  6D                 	db	109	;'m'
  3878  00DCC9  6D                 	db	109	;'m'
  3879  00DCCA  61                 	db	97	;'a'
  3880  00DCCB  6E                 	db	110	;'n'
  3881  00DCCC  64                 	db	100	;'d'
  3882  00DCCD  73                 	db	115	;'s'
  3883  00DCCE  3A                 	db	58	;':'
  3884  00DCCF  20                 	db	32
  3885  00DCD0  43                 	db	67	;'C'
  3886  00DCD1  6F                 	db	111	;'o'
  3887  00DCD2  6E                 	db	110	;'n'
  3888  00DCD3  74                 	db	116	;'t'
  3889  00DCD4  72                 	db	114	;'r'
  3890  00DCD5  6F                 	db	111	;'o'
  3891  00DCD6  6C                 	db	108	;'l'
  3892  00DCD7  20                 	db	32
  3893  00DCD8  74                 	db	116	;'t'
  3894  00DCD9  68                 	db	104	;'h'
  3895  00DCDA  65                 	db	101	;'e'
  3896  00DCDB  20                 	db	32
  3897  00DCDC  6F                 	db	111	;'o'
  3898  00DCDD  75                 	db	117	;'u'
  3899  00DCDE  74                 	db	116	;'t'
  3900  00DCDF  70                 	db	112	;'p'
  3901  00DCE0  75                 	db	117	;'u'
  3902  00DCE1  74                 	db	116	;'t'
  3903  00DCE2  20                 	db	32
  3904  00DCE3  73                 	db	115	;'s'
  3905  00DCE4  74                 	db	116	;'t'
  3906  00DCE5  61                 	db	97	;'a'
  3907  00DCE6  74                 	db	116	;'t'
  3908  00DCE7  65                 	db	101	;'e'
  3909  00DCE8  20                 	db	32
  3910  00DCE9  61                 	db	97	;'a'
  3911  00DCEA  6E                 	db	110	;'n'
  3912  00DCEB  64                 	db	100	;'d'
  3913  00DCEC  20                 	db	32
  3914  00DCED  64                 	db	100	;'d'
  3915  00DCEE  69                 	db	105	;'i'
  3916  00DCEF  6D                 	db	109	;'m'
  3917  00DCF0  6D                 	db	109	;'m'
  3918  00DCF1  69                 	db	105	;'i'
  3919  00DCF2  6E                 	db	110	;'n'
  3920  00DCF3  67                 	db	103	;'g'
  3921  00DCF4  20                 	db	32
  3922  00DCF5  66                 	db	102	;'f'
  3923  00DCF6  65                 	db	101	;'e'
  3924  00DCF7  61                 	db	97	;'a'
  3925  00DCF8  74                 	db	116	;'t'
  3926  00DCF9  75                 	db	117	;'u'
  3927  00DCFA  72                 	db	114	;'r'
  3928  00DCFB  65                 	db	101	;'e'
  3929  00DCFC  73                 	db	115	;'s'
  3930  00DCFD  0A                 	db	10
  3931  00DCFE  0D                 	db	13
  3932  00DCFF  20                 	db	32
  3933  00DD00  20                 	db	32
  3934  00DD01  20                 	db	32
  3935  00DD02  45                 	db	69	;'E'
  3936  00DD03  6E                 	db	110	;'n'
  3937  00DD04  61                 	db	97	;'a'
  3938  00DD05  62                 	db	98	;'b'
  3939  00DD06  6C                 	db	108	;'l'
  3940  00DD07  65                 	db	101	;'e'
  3941  00DD08  20                 	db	32
  3942  00DD09  44                 	db	68	;'D'
  3943  00DD0A  69                 	db	105	;'i'
  3944  00DD0B  6D                 	db	109	;'m'
  3945  00DD0C  6D                 	db	109	;'m'
  3946  00DD0D  69                 	db	105	;'i'
  3947  00DD0E  6E                 	db	110	;'n'
  3948  00DD0F  67                 	db	103	;'g'
  3949  00DD10  3A                 	db	58	;':'
  3950  00DD11  20                 	db	32
  3951  00DD12  45                 	db	69	;'E'
  3952  00DD13  6E                 	db	110	;'n'
  3953  00DD14  61                 	db	97	;'a'
  3954  00DD15  62                 	db	98	;'b'
  3955  00DD16  6C                 	db	108	;'l'
  3956  00DD17  65                 	db	101	;'e'
  3957  00DD18  20                 	db	32
  3958  00DD19  54                 	db	84	;'T'
  3959  00DD1A  52                 	db	82	;'R'
  3960  00DD1B  49                 	db	73	;'I'
  3961  00DD1C  41                 	db	65	;'A'
  3962  00DD1D  43                 	db	67	;'C'
  3963  00DD1E  20                 	db	32
  3964  00DD1F  6F                 	db	111	;'o'
  3965  00DD20  75                 	db	117	;'u'
  3966  00DD21  74                 	db	116	;'t'
  3967  00DD22  70                 	db	112	;'p'
  3968  00DD23  75                 	db	117	;'u'
  3969  00DD24  74                 	db	116	;'t'
  3970  00DD25  20                 	db	32
  3971  00DD26  64                 	db	100	;'d'
  3972  00DD27  69                 	db	105	;'i'
  3973  00DD28  6D                 	db	109	;'m'
  3974  00DD29  6D                 	db	109	;'m'
  3975  00DD2A  69                 	db	105	;'i'
  3976  00DD2B  6E                 	db	110	;'n'
  3977  00DD2C  67                 	db	103	;'g'
  3978  00DD2D  0A                 	db	10
  3979  00DD2E  0D                 	db	13
  3980  00DD2F  20                 	db	32
  3981  00DD30  20                 	db	32
  3982  00DD31  20                 	db	32
  3983  00DD32  44                 	db	68	;'D'
  3984  00DD33  69                 	db	105	;'i'
  3985  00DD34  73                 	db	115	;'s'
  3986  00DD35  61                 	db	97	;'a'
  3987  00DD36  62                 	db	98	;'b'
  3988  00DD37  6C                 	db	108	;'l'
  3989  00DD38  65                 	db	101	;'e'
  3990  00DD39  20                 	db	32
  3991  00DD3A  44                 	db	68	;'D'
  3992  00DD3B  69                 	db	105	;'i'
  3993  00DD3C  6D                 	db	109	;'m'
  3994  00DD3D  6D                 	db	109	;'m'
  3995  00DD3E  69                 	db	105	;'i'
  3996  00DD3F  6E                 	db	110	;'n'
  3997  00DD40  67                 	db	103	;'g'
  3998  00DD41  3A                 	db	58	;':'
  3999  00DD42  20                 	db	32
  4000  00DD43  44                 	db	68	;'D'
  4001  00DD44  69                 	db	105	;'i'
  4002  00DD45  73                 	db	115	;'s'
  4003  00DD46  61                 	db	97	;'a'
  4004  00DD47  62                 	db	98	;'b'
  4005  00DD48  6C                 	db	108	;'l'
  4006  00DD49  65                 	db	101	;'e'
  4007  00DD4A  20                 	db	32
  4008  00DD4B  54                 	db	84	;'T'
  4009  00DD4C  52                 	db	82	;'R'
  4010  00DD4D  49                 	db	73	;'I'
  4011  00DD4E  41                 	db	65	;'A'
  4012  00DD4F  43                 	db	67	;'C'
  4013  00DD50  20                 	db	32
  4014  00DD51  6F                 	db	111	;'o'
  4015  00DD52  75                 	db	117	;'u'
  4016  00DD53  74                 	db	116	;'t'
  4017  00DD54  70                 	db	112	;'p'
  4018  00DD55  75                 	db	117	;'u'
  4019  00DD56  74                 	db	116	;'t'
  4020  00DD57  20                 	db	32
  4021  00DD58  64                 	db	100	;'d'
  4022  00DD59  69                 	db	105	;'i'
  4023  00DD5A  6D                 	db	109	;'m'
  4024  00DD5B  6D                 	db	109	;'m'
  4025  00DD5C  69                 	db	105	;'i'
  4026  00DD5D  6E                 	db	110	;'n'
  4027  00DD5E  67                 	db	103	;'g'
  4028  00DD5F  0A                 	db	10
  4029  00DD60  0D                 	db	13
  4030  00DD61  20                 	db	32
  4031  00DD62  20                 	db	32
  4032  00DD63  20                 	db	32
  4033  00DD64  45                 	db	69	;'E'
  4034  00DD65  6E                 	db	110	;'n'
  4035  00DD66  61                 	db	97	;'a'
  4036  00DD67  62                 	db	98	;'b'
  4037  00DD68  6C                 	db	108	;'l'
  4038  00DD69  65                 	db	101	;'e'
  4039  00DD6A  20                 	db	32
  4040  00DD6B  4C                 	db	76	;'L'
  4041  00DD6C  6F                 	db	111	;'o'
  4042  00DD6D  61                 	db	97	;'a'
  4043  00DD6E  64                 	db	100	;'d'
  4044  00DD6F  3A                 	db	58	;':'
  4045  00DD70  20                 	db	32
  4046  00DD71  45                 	db	69	;'E'
  4047  00DD72  6E                 	db	110	;'n'
  4048  00DD73  61                 	db	97	;'a'
  4049  00DD74  62                 	db	98	;'b'
  4050  00DD75  6C                 	db	108	;'l'
  4051  00DD76  65                 	db	101	;'e'
  4052  00DD77  73                 	db	115	;'s'
  4053  00DD78  20                 	db	32
  4054  00DD79  74                 	db	116	;'t'
  4055  00DD7A  68                 	db	104	;'h'
  4056  00DD7B  65                 	db	101	;'e'
  4057  00DD7C  20                 	db	32
  4058  00DD7D  6F                 	db	111	;'o'
  4059  00DD7E  75                 	db	117	;'u'
  4060  00DD7F  74                 	db	116	;'t'
  4061  00DD80  70                 	db	112	;'p'
  4062  00DD81  75                 	db	117	;'u'
  4063  00DD82  74                 	db	116	;'t'
  4064  00DD83  20                 	db	32
  4065  00DD84  54                 	db	84	;'T'
  4066  00DD85  52                 	db	82	;'R'
  4067  00DD86  49                 	db	73	;'I'
  4068  00DD87  41                 	db	65	;'A'
  4069  00DD88  43                 	db	67	;'C'
  4070  00DD89  20                 	db	32
  4071  00DD8A  77                 	db	119	;'w'
  4072  00DD8B  69                 	db	105	;'i'
  4073  00DD8C  74                 	db	116	;'t'
  4074  00DD8D  68                 	db	104	;'h'
  4075  00DD8E  20                 	db	32
  4076  00DD8F  64                 	db	100	;'d'
  4077  00DD90  69                 	db	105	;'i'
  4078  00DD91  6D                 	db	109	;'m'
  4079  00DD92  6D                 	db	109	;'m'
  4080  00DD93  69                 	db	105	;'i'
  4081  00DD94  6E                 	db	110	;'n'
  4082  00DD95  67                 	db	103	;'g'
  4083  00DD96  20                 	db	32
  4084  00DD97  64                 	db	100	;'d'
  4085  00DD98  69                 	db	105	;'i'
  4086  00DD99  73                 	db	115	;'s'
  4087  00DD9A  61                 	db	97	;'a'
  4088  00DD9B  62                 	db	98	;'b'
  4089  00DD9C  6C                 	db	108	;'l'
  4090  00DD9D  65                 	db	101	;'e'
  4091  00DD9E  64                 	db	100	;'d'
  4092  00DD9F  0A                 	db	10
  4093  00DDA0  0D                 	db	13
  4094  00DDA1  20                 	db	32
  4095  00DDA2  20                 	db	32
  4096  00DDA3  20                 	db	32
  4097  00DDA4  44                 	db	68	;'D'
  4098  00DDA5  69                 	db	105	;'i'
  4099  00DDA6  73                 	db	115	;'s'
  4100  00DDA7  61                 	db	97	;'a'
  4101  00DDA8  62                 	db	98	;'b'
  4102  00DDA9  6C                 	db	108	;'l'
  4103  00DDAA  65                 	db	101	;'e'
  4104  00DDAB  20                 	db	32
  4105  00DDAC  4C                 	db	76	;'L'
  4106  00DDAD  6F                 	db	111	;'o'
  4107  00DDAE  61                 	db	97	;'a'
  4108  00DDAF  64                 	db	100	;'d'
  4109  00DDB0  3A                 	db	58	;':'
  4110  00DDB1  20                 	db	32
  4111  00DDB2  44                 	db	68	;'D'
  4112  00DDB3  69                 	db	105	;'i'
  4113  00DDB4  73                 	db	115	;'s'
  4114  00DDB5  61                 	db	97	;'a'
  4115  00DDB6  62                 	db	98	;'b'
  4116  00DDB7  6C                 	db	108	;'l'
  4117  00DDB8  65                 	db	101	;'e'
  4118  00DDB9  73                 	db	115	;'s'
  4119  00DDBA  20                 	db	32
  4120  00DDBB  74                 	db	116	;'t'
  4121  00DDBC  68                 	db	104	;'h'
  4122  00DDBD  65                 	db	101	;'e'
  4123  00DDBE  20                 	db	32
  4124  00DDBF  6F                 	db	111	;'o'
  4125  00DDC0  75                 	db	117	;'u'
  4126  00DDC1  74                 	db	116	;'t'
  4127  00DDC2  70                 	db	112	;'p'
  4128  00DDC3  75                 	db	117	;'u'
  4129  00DDC4  74                 	db	116	;'t'
  4130  00DDC5  20                 	db	32
  4131  00DDC6  54                 	db	84	;'T'
  4132  00DDC7  52                 	db	82	;'R'
  4133  00DDC8  49                 	db	73	;'I'
  4134  00DDC9  41                 	db	65	;'A'
  4135  00DDCA  43                 	db	67	;'C'
  4136  00DDCB  20                 	db	32
  4137  00DDCC  63                 	db	99	;'c'
  4138  00DDCD  6F                 	db	111	;'o'
  4139  00DDCE  6D                 	db	109	;'m'
  4140  00DDCF  70                 	db	112	;'p'
  4141  00DDD0  6C                 	db	108	;'l'
  4142  00DDD1  65                 	db	101	;'e'
  4143  00DDD2  74                 	db	116	;'t'
  4144  00DDD3  65                 	db	101	;'e'
  4145  00DDD4  6C                 	db	108	;'l'
  4146  00DDD5  79                 	db	121	;'y'
  4147  00DDD6  0A                 	db	10
  4148  00DDD7  0D                 	db	13
  4149  00DDD8  20                 	db	32
  4150  00DDD9  20                 	db	32
  4151  00DDDA  20                 	db	32
  4152  00DDDB  4C                 	db	76	;'L'
  4153  00DDDC  6F                 	db	111	;'o'
  4154  00DDDD  61                 	db	97	;'a'
  4155  00DDDE  64                 	db	100	;'d'
  4156  00DDDF  20                 	db	32
  4157  00DDE0  45                 	db	69	;'E'
  4158  00DDE1  6E                 	db	110	;'n'
  4159  00DDE2  61                 	db	97	;'a'
  4160  00DDE3  62                 	db	98	;'b'
  4161  00DDE4  6C                 	db	108	;'l'
  4162  00DDE5  65                 	db	101	;'e'
  4163  00DDE6  64                 	db	100	;'d'
  4164  00DDE7  3F                 	db	63	;'?'
  4165  00DDE8  3A                 	db	58	;':'
  4166  00DDE9  20                 	db	32
  4167  00DDEA  52                 	db	82	;'R'
  4168  00DDEB  65                 	db	101	;'e'
  4169  00DDEC  74                 	db	116	;'t'
  4170  00DDED  75                 	db	117	;'u'
  4171  00DDEE  72                 	db	114	;'r'
  4172  00DDEF  6E                 	db	110	;'n'
  4173  00DDF0  73                 	db	115	;'s'
  4174  00DDF1  20                 	db	32
  4175  00DDF2  69                 	db	105	;'i'
  4176  00DDF3  66                 	db	102	;'f'
  4177  00DDF4  20                 	db	32
  4178  00DDF5  74                 	db	116	;'t'
  4179  00DDF6  68                 	db	104	;'h'
  4180  00DDF7  65                 	db	101	;'e'
  4181  00DDF8  20                 	db	32
  4182  00DDF9  6F                 	db	111	;'o'
  4183  00DDFA  75                 	db	117	;'u'
  4184  00DDFB  74                 	db	116	;'t'
  4185  00DDFC  70                 	db	112	;'p'
  4186  00DDFD  75                 	db	117	;'u'
  4187  00DDFE  74                 	db	116	;'t'
  4188  00DDFF  20                 	db	32
  4189  00DE00  6C                 	db	108	;'l'
  4190  00DE01  6F                 	db	111	;'o'
  4191  00DE02  61                 	db	97	;'a'
  4192  00DE03  64                 	db	100	;'d'
  4193  00DE04  20                 	db	32
  4194  00DE05  69                 	db	105	;'i'
  4195  00DE06  73                 	db	115	;'s'
  4196  00DE07  20                 	db	32
  4197  00DE08  65                 	db	101	;'e'
  4198  00DE09  6E                 	db	110	;'n'
  4199  00DE0A  61                 	db	97	;'a'
  4200  00DE0B  62                 	db	98	;'b'
  4201  00DE0C  6C                 	db	108	;'l'
  4202  00DE0D  65                 	db	101	;'e'
  4203  00DE0E  64                 	db	100	;'d'
  4204  00DE0F  20                 	db	32
  4205  00DE10  6F                 	db	111	;'o'
  4206  00DE11  72                 	db	114	;'r'
  4207  00DE12  20                 	db	32
  4208  00DE13  64                 	db	100	;'d'
  4209  00DE14  69                 	db	105	;'i'
  4210  00DE15  73                 	db	115	;'s'
  4211  00DE16  61                 	db	97	;'a'
  4212  00DE17  62                 	db	98	;'b'
  4213  00DE18  6C                 	db	108	;'l'
  4214  00DE19  65                 	db	101	;'e'
  4215  00DE1A  64                 	db	100	;'d'
  4216  00DE1B  0A                 	db	10
  4217  00DE1C  0D                 	db	13
  4218  00DE1D  20                 	db	32
  4219  00DE1E  20                 	db	32
  4220  00DE1F  20                 	db	32
  4221  00DE20  44                 	db	68	;'D'
  4222  00DE21  69                 	db	105	;'i'
  4223  00DE22  6D                 	db	109	;'m'
  4224  00DE23  6D                 	db	109	;'m'
  4225  00DE24  69                 	db	105	;'i'
  4226  00DE25  6E                 	db	110	;'n'
  4227  00DE26  67                 	db	103	;'g'
  4228  00DE27  20                 	db	32
  4229  00DE28  45                 	db	69	;'E'
  4230  00DE29  6E                 	db	110	;'n'
  4231  00DE2A  61                 	db	97	;'a'
  4232  00DE2B  62                 	db	98	;'b'
  4233  00DE2C  6C                 	db	108	;'l'
  4234  00DE2D  65                 	db	101	;'e'
  4235  00DE2E  64                 	db	100	;'d'
  4236  00DE2F  3F                 	db	63	;'?'
  4237  00DE30  3A                 	db	58	;':'
  4238  00DE31  20                 	db	32
  4239  00DE32  52                 	db	82	;'R'
  4240  00DE33  65                 	db	101	;'e'
  4241  00DE34  74                 	db	116	;'t'
  4242  00DE35  75                 	db	117	;'u'
  4243  00DE36  72                 	db	114	;'r'
  4244  00DE37  6E                 	db	110	;'n'
  4245  00DE38  73                 	db	115	;'s'
  4246  00DE39  20                 	db	32
  4247  00DE3A  69                 	db	105	;'i'
  4248  00DE3B  66                 	db	102	;'f'
  4249  00DE3C  20                 	db	32
  4250  00DE3D  64                 	db	100	;'d'
  4251  00DE3E  69                 	db	105	;'i'
  4252  00DE3F  6D                 	db	109	;'m'
  4253  00DE40  6D                 	db	109	;'m'
  4254  00DE41  69                 	db	105	;'i'
  4255  00DE42  6E                 	db	110	;'n'
  4256  00DE43  67                 	db	103	;'g'
  4257  00DE44  20                 	db	32
  4258  00DE45  6F                 	db	111	;'o'
  4259  00DE46  66                 	db	102	;'f'
  4260  00DE47  20                 	db	32
  4261  00DE48  74                 	db	116	;'t'
  4262  00DE49  68                 	db	104	;'h'
  4263  00DE4A  65                 	db	101	;'e'
  4264  00DE4B  20                 	db	32
  4265  00DE4C  6F                 	db	111	;'o'
  4266  00DE4D  75                 	db	117	;'u'
  4267  00DE4E  74                 	db	116	;'t'
  4268  00DE4F  70                 	db	112	;'p'
  4269  00DE50  75                 	db	117	;'u'
  4270  00DE51  74                 	db	116	;'t'
  4271  00DE52  20                 	db	32
  4272  00DE53  6C                 	db	108	;'l'
  4273  00DE54  6F                 	db	111	;'o'
  4274  00DE55  61                 	db	97	;'a'
  4275  00DE56  64                 	db	100	;'d'
  4276  00DE57  20                 	db	32
  4277  00DE58  69                 	db	105	;'i'
  4278  00DE59  73                 	db	115	;'s'
  4279  00DE5A  20                 	db	32
  4280  00DE5B  65                 	db	101	;'e'
  4281  00DE5C  6E                 	db	110	;'n'
  4282  00DE5D  61                 	db	97	;'a'
  4283  00DE5E  62                 	db	98	;'b'
  4284  00DE5F  6C                 	db	108	;'l'
  4285  00DE60  65                 	db	101	;'e'
  4286  00DE61  64                 	db	100	;'d'
  4287  00DE62  20                 	db	32
  4288  00DE63  6F                 	db	111	;'o'
  4289  00DE64  72                 	db	114	;'r'
  4290  00DE65  20                 	db	32
  4291  00DE66  6E                 	db	110	;'n'
  4292  00DE67  6F                 	db	111	;'o'
  4293  00DE68  74                 	db	116	;'t'
  4294  00DE69  0A                 	db	10
  4295  00DE6A  0D                 	db	13
  4296  00DE6B  20                 	db	32
  4297  00DE6C  20                 	db	32
  4298  00DE6D  20                 	db	32
  4299  00DE6E  53                 	db	83	;'S'
  4300  00DE6F  65                 	db	101	;'e'
  4301  00DE70  74                 	db	116	;'t'
  4302  00DE71  20                 	db	32
  4303  00DE72  44                 	db	68	;'D'
  4304  00DE73  69                 	db	105	;'i'
  4305  00DE74  6D                 	db	109	;'m'
  4306  00DE75  6D                 	db	109	;'m'
  4307  00DE76  69                 	db	105	;'i'
  4308  00DE77  6E                 	db	110	;'n'
  4309  00DE78  67                 	db	103	;'g'
  4310  00DE79  20                 	db	32
  4311  00DE7A  50                 	db	80	;'P'
  4312  00DE7B  65                 	db	101	;'e'
  4313  00DE7C  72                 	db	114	;'r'
  4314  00DE7D  63                 	db	99	;'c'
  4315  00DE7E  65                 	db	101	;'e'
  4316  00DE7F  6E                 	db	110	;'n'
  4317  00DE80  74                 	db	116	;'t'
  4318  00DE81  61                 	db	97	;'a'
  4319  00DE82  67                 	db	103	;'g'
  4320  00DE83  65                 	db	101	;'e'
  4321  00DE84  3A                 	db	58	;':'
  4322  00DE85  20                 	db	32
  4323  00DE86  3C                 	db	60	;'<'
  4324  00DE87  78                 	db	120	;'x'
  4325  00DE88  3E                 	db	62	;'>'
  4326  00DE89  3A                 	db	58	;':'
  4327  00DE8A  20                 	db	32
  4328  00DE8B  53                 	db	83	;'S'
  4329  00DE8C  65                 	db	101	;'e'
  4330  00DE8D  74                 	db	116	;'t'
  4331  00DE8E  73                 	db	115	;'s'
  4332  00DE8F  20                 	db	32
  4333  00DE90  74                 	db	116	;'t'
  4334  00DE91  68                 	db	104	;'h'
  4335  00DE92  65                 	db	101	;'e'
  4336  00DE93  20                 	db	32
  4337  00DE94  6F                 	db	111	;'o'
  4338  00DE95  75                 	db	117	;'u'
  4339  00DE96  74                 	db	116	;'t'
  4340  00DE97  70                 	db	112	;'p'
  4341  00DE98  75                 	db	117	;'u'
  4342  00DE99  74                 	db	116	;'t'
  4343  00DE9A  20                 	db	32
  4344  00DE9B  64                 	db	100	;'d'
  4345  00DE9C  69                 	db	105	;'i'
  4346  00DE9D  6D                 	db	109	;'m'
  4347  00DE9E  6D                 	db	109	;'m'
  4348  00DE9F  69                 	db	105	;'i'
  4349  00DEA0  6E                 	db	110	;'n'
  4350  00DEA1  67                 	db	103	;'g'
  4351  00DEA2  20                 	db	32
  4352  00DEA3  70                 	db	112	;'p'
  4353  00DEA4  65                 	db	101	;'e'
  4354  00DEA5  72                 	db	114	;'r'
  4355  00DEA6  63                 	db	99	;'c'
  4356  00DEA7  65                 	db	101	;'e'
  4357  00DEA8  6E                 	db	110	;'n'
  4358  00DEA9  74                 	db	116	;'t'
  4359  00DEAA  61                 	db	97	;'a'
  4360  00DEAB  67                 	db	103	;'g'
  4361  00DEAC  65                 	db	101	;'e'
  4362  00DEAD  20                 	db	32
  4363  00DEAE  61                 	db	97	;'a'
  4364  00DEAF  73                 	db	115	;'s'
  4365  00DEB0  20                 	db	32
  4366  00DEB1  78                 	db	120	;'x'
  4367  00DEB2  20                 	db	32
  4368  00DEB3  70                 	db	112	;'p'
  4369  00DEB4  65                 	db	101	;'e'
  4370  00DEB5  72                 	db	114	;'r'
  4371  00DEB6  63                 	db	99	;'c'
  4372  00DEB7  65                 	db	101	;'e'
  4373  00DEB8  6E                 	db	110	;'n'
  4374  00DEB9  74                 	db	116	;'t'
  4375  00DEBA  0A                 	db	10
  4376  00DEBB  0D                 	db	13
  4377  00DEBC  0A                 	db	10
  4378  00DEBD  0D                 	db	13
  4379  00DEBE  00                 	db	0
  4380  00DEBF                     STR_154:
  4381  00DEBF  4C                 	db	76	;'L'
  4382  00DEC0  69                 	db	105	;'i'
  4383  00DEC1  73                 	db	115	;'s'
  4384  00DEC2  74                 	db	116	;'t'
  4385  00DEC3  20                 	db	32
  4386  00DEC4  6F                 	db	111	;'o'
  4387  00DEC5  66                 	db	102	;'f'
  4388  00DEC6  20                 	db	32
  4389  00DEC7  73                 	db	115	;'s'
  4390  00DEC8  75                 	db	117	;'u'
  4391  00DEC9  70                 	db	112	;'p'
  4392  00DECA  70                 	db	112	;'p'
  4393  00DECB  6F                 	db	111	;'o'
  4394  00DECC  72                 	db	114	;'r'
  4395  00DECD  74                 	db	116	;'t'
  4396  00DECE  65                 	db	101	;'e'
  4397  00DECF  64                 	db	100	;'d'
  4398  00DED0  20                 	db	32
  4399  00DED1  44                 	db	68	;'D'
  4400  00DED2  65                 	db	101	;'e'
  4401  00DED3  76                 	db	118	;'v'
  4402  00DED4  69                 	db	105	;'i'
  4403  00DED5  63                 	db	99	;'c'
  4404  00DED6  65                 	db	101	;'e'
  4405  00DED7  20                 	db	32
  4406  00DED8  43                 	db	67	;'C'
  4407  00DED9  6F                 	db	111	;'o'
  4408  00DEDA  6E                 	db	110	;'n'
  4409  00DEDB  74                 	db	116	;'t'
  4410  00DEDC  72                 	db	114	;'r'
  4411  00DEDD  6F                 	db	111	;'o'
  4412  00DEDE  6C                 	db	108	;'l'
  4413  00DEDF  20                 	db	32
  4414  00DEE0  43                 	db	67	;'C'
  4415  00DEE1  6F                 	db	111	;'o'
  4416  00DEE2  6D                 	db	109	;'m'
  4417  00DEE3  6D                 	db	109	;'m'
  4418  00DEE4  61                 	db	97	;'a'
  4419  00DEE5  6E                 	db	110	;'n'
  4420  00DEE6  64                 	db	100	;'d'
  4421  00DEE7  73                 	db	115	;'s'
  4422  00DEE8  3A                 	db	58	;':'
  4423  00DEE9  0A                 	db	10
  4424  00DEEA  0D                 	db	13
  4425  00DEEB  20                 	db	32
  4426  00DEEC  20                 	db	32
  4427  00DEED  20                 	db	32
  4428  00DEEE  52                 	db	82	;'R'
  4429  00DEEF  65                 	db	101	;'e'
  4430  00DEF0  73                 	db	115	;'s'
  4431  00DEF1  65                 	db	101	;'e'
  4432  00DEF2  74                 	db	116	;'t'
  4433  00DEF3  3A                 	db	58	;':'
  4434  00DEF4  20                 	db	32
  4435  00DEF5  43                 	db	67	;'C'
  4436  00DEF6  6C                 	db	108	;'l'
  4437  00DEF7  65                 	db	101	;'e'
  4438  00DEF8  61                 	db	97	;'a'
  4439  00DEF9  72                 	db	114	;'r'
  4440  00DEFA  73                 	db	115	;'s'
  4441  00DEFB  20                 	db	32
  4442  00DEFC  74                 	db	116	;'t'
  4443  00DEFD  68                 	db	104	;'h'
  4444  00DEFE  65                 	db	101	;'e'
  4445  00DEFF  20                 	db	32
  4446  00DF00  74                 	db	116	;'t'
  4447  00DF01  65                 	db	101	;'e'
  4448  00DF02  72                 	db	114	;'r'
  4449  00DF03  6D                 	db	109	;'m'
  4450  00DF04  69                 	db	105	;'i'
  4451  00DF05  6E                 	db	110	;'n'
  4452  00DF06  61                 	db	97	;'a'
  4453  00DF07  6C                 	db	108	;'l'
  4454  00DF08  20                 	db	32
  4455  00DF09  61                 	db	97	;'a'
  4456  00DF0A  6E                 	db	110	;'n'
  4457  00DF0B  64                 	db	100	;'d'
  4458  00DF0C  20                 	db	32
  4459  00DF0D  72                 	db	114	;'r'
  4460  00DF0E  65                 	db	101	;'e'
  4461  00DF0F  73                 	db	115	;'s'
  4462  00DF10  65                 	db	101	;'e'
  4463  00DF11  74                 	db	116	;'t'
  4464  00DF12  73                 	db	115	;'s'
  4465  00DF13  20                 	db	32
  4466  00DF14  74                 	db	116	;'t'
  4467  00DF15  68                 	db	104	;'h'
  4468  00DF16  65                 	db	101	;'e'
  4469  00DF17  20                 	db	32
  4470  00DF18  6D                 	db	109	;'m'
  4471  00DF19  69                 	db	105	;'i'
  4472  00DF1A  63                 	db	99	;'c'
  4473  00DF1B  72                 	db	114	;'r'
  4474  00DF1C  6F                 	db	111	;'o'
  4475  00DF1D  63                 	db	99	;'c'
  4476  00DF1E  6F                 	db	111	;'o'
  4477  00DF1F  6E                 	db	110	;'n'
  4478  00DF20  74                 	db	116	;'t'
  4479  00DF21  72                 	db	114	;'r'
  4480  00DF22  6F                 	db	111	;'o'
  4481  00DF23  6C                 	db	108	;'l'
  4482  00DF24  6C                 	db	108	;'l'
  4483  00DF25  65                 	db	101	;'e'
  4484  00DF26  72                 	db	114	;'r'
  4485  00DF27  0A                 	db	10
  4486  00DF28  0D                 	db	13
  4487  00DF29  20                 	db	32
  4488  00DF2A  20                 	db	32
  4489  00DF2B  20                 	db	32
  4490  00DF2C  43                 	db	67	;'C'
  4491  00DF2D  6C                 	db	108	;'l'
  4492  00DF2E  65                 	db	101	;'e'
  4493  00DF2F  61                 	db	97	;'a'
  4494  00DF30  72                 	db	114	;'r'
  4495  00DF31  3A                 	db	58	;':'
  4496  00DF32  20                 	db	32
  4497  00DF33  43                 	db	67	;'C'
  4498  00DF34  6C                 	db	108	;'l'
  4499  00DF35  65                 	db	101	;'e'
  4500  00DF36  61                 	db	97	;'a'
  4501  00DF37  72                 	db	114	;'r'
  4502  00DF38  73                 	db	115	;'s'
  4503  00DF39  20                 	db	32
  4504  00DF3A  74                 	db	116	;'t'
  4505  00DF3B  68                 	db	104	;'h'
  4506  00DF3C  65                 	db	101	;'e'
  4507  00DF3D  20                 	db	32
  4508  00DF3E  74                 	db	116	;'t'
  4509  00DF3F  65                 	db	101	;'e'
  4510  00DF40  72                 	db	114	;'r'
  4511  00DF41  6D                 	db	109	;'m'
  4512  00DF42  69                 	db	105	;'i'
  4513  00DF43  6E                 	db	110	;'n'
  4514  00DF44  61                 	db	97	;'a'
  4515  00DF45  6C                 	db	108	;'l'
  4516  00DF46  20                 	db	32
  4517  00DF47  62                 	db	98	;'b'
  4518  00DF48  75                 	db	117	;'u'
  4519  00DF49  74                 	db	116	;'t'
  4520  00DF4A  20                 	db	32
  4521  00DF4B  64                 	db	100	;'d'
  4522  00DF4C  6F                 	db	111	;'o'
  4523  00DF4D  65                 	db	101	;'e'
  4524  00DF4E  73                 	db	115	;'s'
  4525  00DF4F  6E                 	db	110	;'n'
  4526  00DF50  27                 	db	39
  4527  00DF51  74                 	db	116	;'t'
  4528  00DF52  20                 	db	32
  4529  00DF53  72                 	db	114	;'r'
  4530  00DF54  65                 	db	101	;'e'
  4531  00DF55  73                 	db	115	;'s'
  4532  00DF56  65                 	db	101	;'e'
  4533  00DF57  74                 	db	116	;'t'
  4534  00DF58  20                 	db	32
  4535  00DF59  74                 	db	116	;'t'
  4536  00DF5A  68                 	db	104	;'h'
  4537  00DF5B  65                 	db	101	;'e'
  4538  00DF5C  20                 	db	32
  4539  00DF5D  6D                 	db	109	;'m'
  4540  00DF5E  69                 	db	105	;'i'
  4541  00DF5F  63                 	db	99	;'c'
  4542  00DF60  72                 	db	114	;'r'
  4543  00DF61  6F                 	db	111	;'o'
  4544  00DF62  0A                 	db	10
  4545  00DF63  0D                 	db	13
  4546  00DF64  20                 	db	32
  4547  00DF65  20                 	db	32
  4548  00DF66  20                 	db	32
  4549  00DF67  43                 	db	67	;'C'
  4550  00DF68  61                 	db	97	;'a'
  4551  00DF69  75                 	db	117	;'u'
  4552  00DF6A  73                 	db	115	;'s'
  4553  00DF6B  65                 	db	101	;'e'
  4554  00DF6C  20                 	db	32
  4555  00DF6D  6F                 	db	111	;'o'
  4556  00DF6E  66                 	db	102	;'f'
  4557  00DF6F  20                 	db	32
  4558  00DF70  52                 	db	82	;'R'
  4559  00DF71  65                 	db	101	;'e'
  4560  00DF72  73                 	db	115	;'s'
  4561  00DF73  65                 	db	101	;'e'
  4562  00DF74  74                 	db	116	;'t'
  4563  00DF75  3F                 	db	63	;'?'
  4564  00DF76  3A                 	db	58	;':'
  4565  00DF77  20                 	db	32
  4566  00DF78  52                 	db	82	;'R'
  4567  00DF79  65                 	db	101	;'e'
  4568  00DF7A  74                 	db	116	;'t'
  4569  00DF7B  75                 	db	117	;'u'
  4570  00DF7C  72                 	db	114	;'r'
  4571  00DF7D  6E                 	db	110	;'n'
  4572  00DF7E  73                 	db	115	;'s'
  4573  00DF7F  20                 	db	32
  4574  00DF80  74                 	db	116	;'t'
  4575  00DF81  68                 	db	104	;'h'
  4576  00DF82  65                 	db	101	;'e'
  4577  00DF83  20                 	db	32
  4578  00DF84  63                 	db	99	;'c'
  4579  00DF85  61                 	db	97	;'a'
  4580  00DF86  75                 	db	117	;'u'
  4581  00DF87  73                 	db	115	;'s'
  4582  00DF88  65                 	db	101	;'e'
  4583  00DF89  20                 	db	32
  4584  00DF8A  6F                 	db	111	;'o'
  4585  00DF8B  66                 	db	102	;'f'
  4586  00DF8C  20                 	db	32
  4587  00DF8D  74                 	db	116	;'t'
  4588  00DF8E  68                 	db	104	;'h'
  4589  00DF8F  65                 	db	101	;'e'
  4590  00DF90  20                 	db	32
  4591  00DF91  6D                 	db	109	;'m'
  4592  00DF92  6F                 	db	111	;'o'
  4593  00DF93  73                 	db	115	;'s'
  4594  00DF94  74                 	db	116	;'t'
  4595  00DF95  20                 	db	32
  4596  00DF96  72                 	db	114	;'r'
  4597  00DF97  65                 	db	101	;'e'
  4598  00DF98  63                 	db	99	;'c'
  4599  00DF99  65                 	db	101	;'e'
  4600  00DF9A  6E                 	db	110	;'n'
  4601  00DF9B  74                 	db	116	;'t'
  4602  00DF9C  20                 	db	32
  4603  00DF9D  64                 	db	100	;'d'
  4604  00DF9E  65                 	db	101	;'e'
  4605  00DF9F  76                 	db	118	;'v'
  4606  00DFA0  69                 	db	105	;'i'
  4607  00DFA1  63                 	db	99	;'c'
  4608  00DFA2  65                 	db	101	;'e'
  4609  00DFA3  20                 	db	32
  4610  00DFA4  72                 	db	114	;'r'
  4611  00DFA5  65                 	db	101	;'e'
  4612  00DFA6  73                 	db	115	;'s'
  4613  00DFA7  65                 	db	101	;'e'
  4614  00DFA8  74                 	db	116	;'t'
  4615  00DFA9  0A                 	db	10
  4616  00DFAA  0D                 	db	13
  4617  00DFAB  20                 	db	32
  4618  00DFAC  20                 	db	32
  4619  00DFAD  20                 	db	32
  4620  00DFAE  2A                 	db	42
  4621  00DFAF  49                 	db	73	;'I'
  4622  00DFB0  44                 	db	68	;'D'
  4623  00DFB1  4E                 	db	78	;'N'
  4624  00DFB2  3F                 	db	63	;'?'
  4625  00DFB3  3A                 	db	58	;':'
  4626  00DFB4  20                 	db	32
  4627  00DFB5  52                 	db	82	;'R'
  4628  00DFB6  65                 	db	101	;'e'
  4629  00DFB7  74                 	db	116	;'t'
  4630  00DFB8  75                 	db	117	;'u'
  4631  00DFB9  72                 	db	114	;'r'
  4632  00DFBA  6E                 	db	110	;'n'
  4633  00DFBB  73                 	db	115	;'s'
  4634  00DFBC  20                 	db	32
  4635  00DFBD  64                 	db	100	;'d'
  4636  00DFBE  65                 	db	101	;'e'
  4637  00DFBF  76                 	db	118	;'v'
  4638  00DFC0  69                 	db	105	;'i'
  4639  00DFC1  63                 	db	99	;'c'
  4640  00DFC2  65                 	db	101	;'e'
  4641  00DFC3  20                 	db	32
  4642  00DFC4  69                 	db	105	;'i'
  4643  00DFC5  64                 	db	100	;'d'
  4644  00DFC6  65                 	db	101	;'e'
  4645  00DFC7  6E                 	db	110	;'n'
  4646  00DFC8  74                 	db	116	;'t'
  4647  00DFC9  69                 	db	105	;'i'
  4648  00DFCA  66                 	db	102	;'f'
  4649  00DFCB  69                 	db	105	;'i'
  4650  00DFCC  63                 	db	99	;'c'
  4651  00DFCD  61                 	db	97	;'a'
  4652  00DFCE  74                 	db	116	;'t'
  4653  00DFCF  69                 	db	105	;'i'
  4654  00DFD0  6F                 	db	111	;'o'
  4655  00DFD1  6E                 	db	110	;'n'
  4656  00DFD2  20                 	db	32
  4657  00DFD3  73                 	db	115	;'s'
  4658  00DFD4  74                 	db	116	;'t'
  4659  00DFD5  72                 	db	114	;'r'
  4660  00DFD6  69                 	db	105	;'i'
  4661  00DFD7  6E                 	db	110	;'n'
  4662  00DFD8  67                 	db	103	;'g'
  4663  00DFD9  0A                 	db	10
  4664  00DFDA  0D                 	db	13
  4665  00DFDB  20                 	db	32
  4666  00DFDC  20                 	db	32
  4667  00DFDD  20                 	db	32
  4668  00DFDE  44                 	db	68	;'D'
  4669  00DFDF  65                 	db	101	;'e'
  4670  00DFE0  76                 	db	118	;'v'
  4671  00DFE1  69                 	db	105	;'i'
  4672  00DFE2  63                 	db	99	;'c'
  4673  00DFE3  65                 	db	101	;'e'
  4674  00DFE4  20                 	db	32
  4675  00DFE5  4F                 	db	79	;'O'
  4676  00DFE6  6E                 	db	110	;'n'
  4677  00DFE7  20                 	db	32
  4678  00DFE8  54                 	db	84	;'T'
  4679  00DFE9  69                 	db	105	;'i'
  4680  00DFEA  6D                 	db	109	;'m'
  4681  00DFEB  65                 	db	101	;'e'
  4682  00DFEC  3F                 	db	63	;'?'
  4683  00DFED  3A                 	db	58	;':'
  4684  00DFEE  20                 	db	32
  4685  00DFEF  52                 	db	82	;'R'
  4686  00DFF0  65                 	db	101	;'e'
  4687  00DFF1  74                 	db	116	;'t'
  4688  00DFF2  75                 	db	117	;'u'
  4689  00DFF3  72                 	db	114	;'r'
  4690  00DFF4  6E                 	db	110	;'n'
  4691  00DFF5  73                 	db	115	;'s'
  4692  00DFF6  20                 	db	32
  4693  00DFF7  64                 	db	100	;'d'
  4694  00DFF8  65                 	db	101	;'e'
  4695  00DFF9  76                 	db	118	;'v'
  4696  00DFFA  69                 	db	105	;'i'
  4697  00DFFB  63                 	db	99	;'c'
  4698  00DFFC  65                 	db	101	;'e'
  4699  00DFFD  20                 	db	32
  4700  00DFFE  6F                 	db	111	;'o'
  4701  00DFFF  6E                 	db	110	;'n'
  4702  00E000  20                 	db	32
  4703  00E001  74                 	db	116	;'t'
  4704  00E002  69                 	db	105	;'i'
  4705  00E003  6D                 	db	109	;'m'
  4706  00E004  65                 	db	101	;'e'
  4707  00E005  20                 	db	32
  4708  00E006  73                 	db	115	;'s'
  4709  00E007  69                 	db	105	;'i'
  4710  00E008  6E                 	db	110	;'n'
  4711  00E009  63                 	db	99	;'c'
  4712  00E00A  65                 	db	101	;'e'
  4713  00E00B  20                 	db	32
  4714  00E00C  6C                 	db	108	;'l'
  4715  00E00D  61                 	db	97	;'a'
  4716  00E00E  73                 	db	115	;'s'
  4717  00E00F  74                 	db	116	;'t'
  4718  00E010  20                 	db	32
  4719  00E011  64                 	db	100	;'d'
  4720  00E012  65                 	db	101	;'e'
  4721  00E013  76                 	db	118	;'v'
  4722  00E014  69                 	db	105	;'i'
  4723  00E015  63                 	db	99	;'c'
  4724  00E016  65                 	db	101	;'e'
  4725  00E017  20                 	db	32
  4726  00E018  72                 	db	114	;'r'
  4727  00E019  65                 	db	101	;'e'
  4728  00E01A  73                 	db	115	;'s'
  4729  00E01B  65                 	db	101	;'e'
  4730  00E01C  74                 	db	116	;'t'
  4731  00E01D  0A                 	db	10
  4732  00E01E  0D                 	db	13
  4733  00E01F  20                 	db	32
  4734  00E020  20                 	db	32
  4735  00E021  20                 	db	32
  4736  00E022  44                 	db	68	;'D'
  4737  00E023  65                 	db	101	;'e'
  4738  00E024  76                 	db	118	;'v'
  4739  00E025  69                 	db	105	;'i'
  4740  00E026  63                 	db	99	;'c'
  4741  00E027  65                 	db	101	;'e'
  4742  00E028  20                 	db	32
  4743  00E029  49                 	db	73	;'I'
  4744  00E02A  44                 	db	68	;'D'
  4745  00E02B  3F                 	db	63	;'?'
  4746  00E02C  3A                 	db	58	;':'
  4747  00E02D  20                 	db	32
  4748  00E02E  52                 	db	82	;'R'
  4749  00E02F  65                 	db	101	;'e'
  4750  00E030  74                 	db	116	;'t'
  4751  00E031  75                 	db	117	;'u'
  4752  00E032  72                 	db	114	;'r'
  4753  00E033  6E                 	db	110	;'n'
  4754  00E034  73                 	db	115	;'s'
  4755  00E035  20                 	db	32
  4756  00E036  64                 	db	100	;'d'
  4757  00E037  65                 	db	101	;'e'
  4758  00E038  76                 	db	118	;'v'
  4759  00E039  69                 	db	105	;'i'
  4760  00E03A  63                 	db	99	;'c'
  4761  00E03B  65                 	db	101	;'e'
  4762  00E03C  20                 	db	32
  4763  00E03D  49                 	db	73	;'I'
  4764  00E03E  44                 	db	68	;'D'
  4765  00E03F  20                 	db	32
  4766  00E040  61                 	db	97	;'a'
  4767  00E041  73                 	db	115	;'s'
  4768  00E042  20                 	db	32
  4769  00E043  70                 	db	112	;'p'
  4770  00E044  72                 	db	114	;'r'
  4771  00E045  65                 	db	101	;'e'
  4772  00E046  2D                 	db	45
  4773  00E047  70                 	db	112	;'p'
  4774  00E048  72                 	db	114	;'r'
  4775  00E049  6F                 	db	111	;'o'
  4776  00E04A  67                 	db	103	;'g'
  4777  00E04B  72                 	db	114	;'r'
  4778  00E04C  61                 	db	97	;'a'
  4779  00E04D  6D                 	db	109	;'m'
  4780  00E04E  6D                 	db	109	;'m'
  4781  00E04F  65                 	db	101	;'e'
  4782  00E050  64                 	db	100	;'d'
  4783  00E051  20                 	db	32
  4784  00E052  69                 	db	105	;'i'
  4785  00E053  6E                 	db	110	;'n'
  4786  00E054  20                 	db	32
  4787  00E055  66                 	db	102	;'f'
  4788  00E056  6C                 	db	108	;'l'
  4789  00E057  61                 	db	97	;'a'
  4790  00E058  73                 	db	115	;'s'
  4791  00E059  68                 	db	104	;'h'
  4792  00E05A  20                 	db	32
  4793  00E05B  6D                 	db	109	;'m'
  4794  00E05C  65                 	db	101	;'e'
  4795  00E05D  6D                 	db	109	;'m'
  4796  00E05E  6F                 	db	111	;'o'
  4797  00E05F  72                 	db	114	;'r'
  4798  00E060  79                 	db	121	;'y'
  4799  00E061  0A                 	db	10
  4800  00E062  0D                 	db	13
  4801  00E063  20                 	db	32
  4802  00E064  20                 	db	32
  4803  00E065  20                 	db	32
  4804  00E066  52                 	db	82	;'R'
  4805  00E067  65                 	db	101	;'e'
  4806  00E068  76                 	db	118	;'v'
  4807  00E069  69                 	db	105	;'i'
  4808  00E06A  73                 	db	115	;'s'
  4809  00E06B  69                 	db	105	;'i'
  4810  00E06C  6F                 	db	111	;'o'
  4811  00E06D  6E                 	db	110	;'n'
  4812  00E06E  20                 	db	32
  4813  00E06F  49                 	db	73	;'I'
  4814  00E070  44                 	db	68	;'D'
  4815  00E071  3F                 	db	63	;'?'
  4816  00E072  3A                 	db	58	;':'
  4817  00E073  20                 	db	32
  4818  00E074  52                 	db	82	;'R'
  4819  00E075  65                 	db	101	;'e'
  4820  00E076  74                 	db	116	;'t'
  4821  00E077  75                 	db	117	;'u'
  4822  00E078  72                 	db	114	;'r'
  4823  00E079  6E                 	db	110	;'n'
  4824  00E07A  73                 	db	115	;'s'
  4825  00E07B  20                 	db	32
  4826  00E07C  64                 	db	100	;'d'
  4827  00E07D  65                 	db	101	;'e'
  4828  00E07E  76                 	db	118	;'v'
  4829  00E07F  69                 	db	105	;'i'
  4830  00E080  63                 	db	99	;'c'
  4831  00E081  65                 	db	101	;'e'
  4832  00E082  20                 	db	32
  4833  00E083  73                 	db	115	;'s'
  4834  00E084  69                 	db	105	;'i'
  4835  00E085  6C                 	db	108	;'l'
  4836  00E086  69                 	db	105	;'i'
  4837  00E087  63                 	db	99	;'c'
  4838  00E088  6F                 	db	111	;'o'
  4839  00E089  6E                 	db	110	;'n'
  4840  00E08A  20                 	db	32
  4841  00E08B  72                 	db	114	;'r'
  4842  00E08C  65                 	db	101	;'e'
  4843  00E08D  76                 	db	118	;'v'
  4844  00E08E  69                 	db	105	;'i'
  4845  00E08F  73                 	db	115	;'s'
  4846  00E090  69                 	db	105	;'i'
  4847  00E091  6F                 	db	111	;'o'
  4848  00E092  6E                 	db	110	;'n'
  4849  00E093  20                 	db	32
  4850  00E094  49                 	db	73	;'I'
  4851  00E095  44                 	db	68	;'D'
  4852  00E096  20                 	db	32
  4853  00E097  61                 	db	97	;'a'
  4854  00E098  73                 	db	115	;'s'
  4855  00E099  20                 	db	32
  4856  00E09A  70                 	db	112	;'p'
  4857  00E09B  72                 	db	114	;'r'
  4858  00E09C  65                 	db	101	;'e'
  4859  00E09D  2D                 	db	45
  4860  00E09E  70                 	db	112	;'p'
  4861  00E09F  72                 	db	114	;'r'
  4862  00E0A0  6F                 	db	111	;'o'
  4863  00E0A1  67                 	db	103	;'g'
  4864  00E0A2  72                 	db	114	;'r'
  4865  00E0A3  61                 	db	97	;'a'
  4866  00E0A4  6D                 	db	109	;'m'
  4867  00E0A5  6D                 	db	109	;'m'
  4868  00E0A6  65                 	db	101	;'e'
  4869  00E0A7  64                 	db	100	;'d'
  4870  00E0A8  20                 	db	32
  4871  00E0A9  69                 	db	105	;'i'
  4872  00E0AA  6E                 	db	110	;'n'
  4873  00E0AB  20                 	db	32
  4874  00E0AC  66                 	db	102	;'f'
  4875  00E0AD  6C                 	db	108	;'l'
  4876  00E0AE  61                 	db	97	;'a'
  4877  00E0AF  73                 	db	115	;'s'
  4878  00E0B0  68                 	db	104	;'h'
  4879  00E0B1  20                 	db	32
  4880  00E0B2  6D                 	db	109	;'m'
  4881  00E0B3  65                 	db	101	;'e'
  4882  00E0B4  6D                 	db	109	;'m'
  4883  00E0B5  6F                 	db	111	;'o'
  4884  00E0B6  72                 	db	114	;'r'
  4885  00E0B7  79                 	db	121	;'y'
  4886  00E0B8  0A                 	db	10
  4887  00E0B9  0D                 	db	13
  4888  00E0BA  20                 	db	32
  4889  00E0BB  20                 	db	32
  4890  00E0BC  20                 	db	32
  4891  00E0BD  55                 	db	85	;'U'
  4892  00E0BE  73                 	db	115	;'s'
  4893  00E0BF  65                 	db	101	;'e'
  4894  00E0C0  72                 	db	114	;'r'
  4895  00E0C1  20                 	db	32
  4896  00E0C2  49                 	db	73	;'I'
  4897  00E0C3  44                 	db	68	;'D'
  4898  00E0C4  73                 	db	115	;'s'
  4899  00E0C5  3F                 	db	63	;'?'
  4900  00E0C6  3A                 	db	58	;':'
  4901  00E0C7  20                 	db	32
  4902  00E0C8  52                 	db	82	;'R'
  4903  00E0C9  65                 	db	101	;'e'
  4904  00E0CA  74                 	db	116	;'t'
  4905  00E0CB  75                 	db	117	;'u'
  4906  00E0CC  72                 	db	114	;'r'
  4907  00E0CD  6E                 	db	110	;'n'
  4908  00E0CE  73                 	db	115	;'s'
  4909  00E0CF  20                 	db	32
  4910  00E0D0  61                 	db	97	;'a'
  4911  00E0D1  20                 	db	32
  4912  00E0D2  6C                 	db	108	;'l'
  4913  00E0D3  69                 	db	105	;'i'
  4914  00E0D4  73                 	db	115	;'s'
  4915  00E0D5  74                 	db	116	;'t'
  4916  00E0D6  20                 	db	32
  4917  00E0D7  6F                 	db	111	;'o'
  4918  00E0D8  66                 	db	102	;'f'
  4919  00E0D9  20                 	db	32
  4920  00E0DA  75                 	db	117	;'u'
  4921  00E0DB  73                 	db	115	;'s'
  4922  00E0DC  65                 	db	101	;'e'
  4923  00E0DD  72                 	db	114	;'r'
  4924  00E0DE  20                 	db	32
  4925  00E0DF  49                 	db	73	;'I'
  4926  00E0E0  44                 	db	68	;'D'
  4927  00E0E1  73                 	db	115	;'s'
  4928  00E0E2  20                 	db	32
  4929  00E0E3  28                 	db	40
  4930  00E0E4  64                 	db	100	;'d'
  4931  00E0E5  69                 	db	105	;'i'
  4932  00E0E6  73                 	db	115	;'s'
  4933  00E0E7  70                 	db	112	;'p'
  4934  00E0E8  6C                 	db	108	;'l'
  4935  00E0E9  61                 	db	97	;'a'
  4936  00E0EA  79                 	db	121	;'y'
  4937  00E0EB  65                 	db	101	;'e'
  4938  00E0EC  64                 	db	100	;'d'
  4939  00E0ED  20                 	db	32
  4940  00E0EE  69                 	db	105	;'i'
  4941  00E0EF  6E                 	db	110	;'n'
  4942  00E0F0  20                 	db	32
  4943  00E0F1  68                 	db	104	;'h'
  4944  00E0F2  65                 	db	101	;'e'
  4945  00E0F3  78                 	db	120	;'x'
  4946  00E0F4  29                 	db	41
  4947  00E0F5  20                 	db	32
  4948  00E0F6  61                 	db	97	;'a'
  4949  00E0F7  73                 	db	115	;'s'
  4950  00E0F8  20                 	db	32
  4951  00E0F9  73                 	db	115	;'s'
  4952  00E0FA  74                 	db	116	;'t'
  4953  00E0FB  6F                 	db	111	;'o'
  4954  00E0FC  72                 	db	114	;'r'
  4955  00E0FD  65                 	db	101	;'e'
  4956  00E0FE  64                 	db	100	;'d'
  4957  00E0FF  20                 	db	32
  4958  00E100  69                 	db	105	;'i'
  4959  00E101  6E                 	db	110	;'n'
  4960  00E102  20                 	db	32
  4961  00E103  66                 	db	102	;'f'
  4962  00E104  6C                 	db	108	;'l'
  4963  00E105  61                 	db	97	;'a'
  4964  00E106  73                 	db	115	;'s'
  4965  00E107  68                 	db	104	;'h'
  4966  00E108  20                 	db	32
  4967  00E109  6D                 	db	109	;'m'
  4968  00E10A  65                 	db	101	;'e'
  4969  00E10B  6D                 	db	109	;'m'
  4970  00E10C  6F                 	db	111	;'o'
  4971  00E10D  72                 	db	114	;'r'
  4972  00E10E  79                 	db	121	;'y'
  4973  00E10F  0A                 	db	10
  4974  00E110  0D                 	db	13
  4975  00E111  20                 	db	32
  4976  00E112  20                 	db	32
  4977  00E113  20                 	db	32
  4978  00E114  41                 	db	65	;'A'
  4979  00E115  44                 	db	68	;'D'
  4980  00E116  43                 	db	67	;'C'
  4981  00E117  20                 	db	32
  4982  00E118  45                 	db	69	;'E'
  4983  00E119  72                 	db	114	;'r'
  4984  00E11A  72                 	db	114	;'r'
  4985  00E11B  6F                 	db	111	;'o'
  4986  00E11C  72                 	db	114	;'r'
  4987  00E11D  73                 	db	115	;'s'
  4988  00E11E  3F                 	db	63	;'?'
  4989  00E11F  3A                 	db	58	;':'
  4990  00E120  20                 	db	32
  4991  00E121  52                 	db	82	;'R'
  4992  00E122  65                 	db	101	;'e'
  4993  00E123  74                 	db	116	;'t'
  4994  00E124  75                 	db	117	;'u'
  4995  00E125  72                 	db	114	;'r'
  4996  00E126  6E                 	db	110	;'n'
  4997  00E127  73                 	db	115	;'s'
  4998  00E128  20                 	db	32
  4999  00E129  74                 	db	116	;'t'
  5000  00E12A  68                 	db	104	;'h'
  5001  00E12B  65                 	db	101	;'e'
  5002  00E12C  20                 	db	32
  5003  00E12D  63                 	db	99	;'c'
  5004  00E12E  61                 	db	97	;'a'
  5005  00E12F  75                 	db	117	;'u'
  5006  00E130  73                 	db	115	;'s'
  5007  00E131  65                 	db	101	;'e'
  5008  00E132  20                 	db	32
  5009  00E133  6F                 	db	111	;'o'
  5010  00E134  66                 	db	102	;'f'
  5011  00E135  20                 	db	32
  5012  00E136  61                 	db	97	;'a'
  5013  00E137  6E                 	db	110	;'n'
  5014  00E138  20                 	db	32
  5015  00E139  41                 	db	65	;'A'
  5016  00E13A  44                 	db	68	;'D'
  5017  00E13B  43                 	db	67	;'C'
  5018  00E13C  20                 	db	32
  5019  00E13D  65                 	db	101	;'e'
  5020  00E13E  72                 	db	114	;'r'
  5021  00E13F  72                 	db	114	;'r'
  5022  00E140  6F                 	db	111	;'o'
  5023  00E141  72                 	db	114	;'r'
  5024  00E142  20                 	db	32
  5025  00E143  69                 	db	105	;'i'
  5026  00E144  66                 	db	102	;'f'
  5027  00E145  20                 	db	32
  5028  00E146  61                 	db	97	;'a'
  5029  00E147  6E                 	db	110	;'n'
  5030  00E148  20                 	db	32
  5031  00E149  65                 	db	101	;'e'
  5032  00E14A  72                 	db	114	;'r'
  5033  00E14B  72                 	db	114	;'r'
  5034  00E14C  6F                 	db	111	;'o'
  5035  00E14D  72                 	db	114	;'r'
  5036  00E14E  20                 	db	32
  5037  00E14F  6F                 	db	111	;'o'
  5038  00E150  63                 	db	99	;'c'
  5039  00E151  63                 	db	99	;'c'
  5040  00E152  75                 	db	117	;'u'
  5041  00E153  72                 	db	114	;'r'
  5042  00E154  72                 	db	114	;'r'
  5043  00E155  65                 	db	101	;'e'
  5044  00E156  64                 	db	100	;'d'
  5045  00E157  0A                 	db	10
  5046  00E158  0D                 	db	13
  5047  00E159  20                 	db	32
  5048  00E15A  20                 	db	32
  5049  00E15B  20                 	db	32
  5050  00E15C  43                 	db	67	;'C'
  5051  00E15D  6C                 	db	108	;'l'
  5052  00E15E  65                 	db	101	;'e'
  5053  00E15F  61                 	db	97	;'a'
  5054  00E160  72                 	db	114	;'r'
  5055  00E161  20                 	db	32
  5056  00E162  41                 	db	65	;'A'
  5057  00E163  44                 	db	68	;'D'
  5058  00E164  43                 	db	67	;'C'
  5059  00E165  20                 	db	32
  5060  00E166  45                 	db	69	;'E'
  5061  00E167  72                 	db	114	;'r'
  5062  00E168  72                 	db	114	;'r'
  5063  00E169  6F                 	db	111	;'o'
  5064  00E16A  72                 	db	114	;'r'
  5065  00E16B  73                 	db	115	;'s'
  5066  00E16C  3A                 	db	58	;':'
  5067  00E16D  20                 	db	32
  5068  00E16E  43                 	db	67	;'C'
  5069  00E16F  6C                 	db	108	;'l'
  5070  00E170  65                 	db	101	;'e'
  5071  00E171  61                 	db	97	;'a'
  5072  00E172  72                 	db	114	;'r'
  5073  00E173  73                 	db	115	;'s'
  5074  00E174  20                 	db	32
  5075  00E175  74                 	db	116	;'t'
  5076  00E176  68                 	db	104	;'h'
  5077  00E177  65                 	db	101	;'e'
  5078  00E178  20                 	db	32
  5079  00E179  41                 	db	65	;'A'
  5080  00E17A  44                 	db	68	;'D'
  5081  00E17B  43                 	db	67	;'C'
  5082  00E17C  20                 	db	32
  5083  00E17D  65                 	db	101	;'e'
  5084  00E17E  72                 	db	114	;'r'
  5085  00E17F  72                 	db	114	;'r'
  5086  00E180  6F                 	db	111	;'o'
  5087  00E181  72                 	db	114	;'r'
  5088  00E182  20                 	db	32
  5089  00E183  61                 	db	97	;'a'
  5090  00E184  6E                 	db	110	;'n'
  5091  00E185  64                 	db	100	;'d'
  5092  00E186  20                 	db	32
  5093  00E187  72                 	db	114	;'r'
  5094  00E188  65                 	db	101	;'e'
  5095  00E189  73                 	db	115	;'s'
  5096  00E18A  75                 	db	117	;'u'
  5097  00E18B  6D                 	db	109	;'m'
  5098  00E18C  65                 	db	101	;'e'
  5099  00E18D  73                 	db	115	;'s'
  5100  00E18E  20                 	db	32
  5101  00E18F  41                 	db	65	;'A'
  5102  00E190  44                 	db	68	;'D'
  5103  00E191  43                 	db	67	;'C'
  5104  00E192  20                 	db	32
  5105  00E193  63                 	db	99	;'c'
  5106  00E194  6F                 	db	111	;'o'
  5107  00E195  6E                 	db	110	;'n'
  5108  00E196  76                 	db	118	;'v'
  5109  00E197  65                 	db	101	;'e'
  5110  00E198  72                 	db	114	;'r'
  5111  00E199  73                 	db	115	;'s'
  5112  00E19A  69                 	db	105	;'i'
  5113  00E19B  6F                 	db	111	;'o'
  5114  00E19C  6E                 	db	110	;'n'
  5115  00E19D  73                 	db	115	;'s'
  5116  00E19E  0A                 	db	10
  5117  00E19F  0D                 	db	13
  5118  00E1A0  20                 	db	32
  5119  00E1A1  20                 	db	32
  5120  00E1A2  20                 	db	32
  5121  00E1A3  43                 	db	67	;'C'
  5122  00E1A4  6F                 	db	111	;'o'
  5123  00E1A5  6D                 	db	109	;'m'
  5124  00E1A6  6D                 	db	109	;'m'
  5125  00E1A7  20                 	db	32
  5126  00E1A8  45                 	db	69	;'E'
  5127  00E1A9  72                 	db	114	;'r'
  5128  00E1AA  72                 	db	114	;'r'
  5129  00E1AB  6F                 	db	111	;'o'
  5130  00E1AC  72                 	db	114	;'r'
  5131  00E1AD  73                 	db	115	;'s'
  5132  00E1AE  3F                 	db	63	;'?'
  5133  00E1AF  3A                 	db	58	;':'
  5134  00E1B0  20                 	db	32
  5135  00E1B1  52                 	db	82	;'R'
  5136  00E1B2  65                 	db	101	;'e'
  5137  00E1B3  74                 	db	116	;'t'
  5138  00E1B4  75                 	db	117	;'u'
  5139  00E1B5  72                 	db	114	;'r'
  5140  00E1B6  6E                 	db	110	;'n'
  5141  00E1B7  73                 	db	115	;'s'
  5142  00E1B8  20                 	db	32
  5143  00E1B9  69                 	db	105	;'i'
  5144  00E1BA  66                 	db	102	;'f'
  5145  00E1BB  20                 	db	32
  5146  00E1BC  61                 	db	97	;'a'
  5147  00E1BD  20                 	db	32
  5148  00E1BE  63                 	db	99	;'c'
  5149  00E1BF  6F                 	db	111	;'o'
  5150  00E1C0  6D                 	db	109	;'m'
  5151  00E1C1  6D                 	db	109	;'m'
  5152  00E1C2  75                 	db	117	;'u'
  5153  00E1C3  6E                 	db	110	;'n'
  5154  00E1C4  69                 	db	105	;'i'
  5155  00E1C5  63                 	db	99	;'c'
  5156  00E1C6  61                 	db	97	;'a'
  5157  00E1C7  74                 	db	116	;'t'
  5158  00E1C8  69                 	db	105	;'i'
  5159  00E1C9  6F                 	db	111	;'o'
  5160  00E1CA  6E                 	db	110	;'n'
  5161  00E1CB  73                 	db	115	;'s'
  5162  00E1CC  20                 	db	32
  5163  00E1CD  65                 	db	101	;'e'
  5164  00E1CE  72                 	db	114	;'r'
  5165  00E1CF  72                 	db	114	;'r'
  5166  00E1D0  6F                 	db	111	;'o'
  5167  00E1D1  72                 	db	114	;'r'
  5168  00E1D2  20                 	db	32
  5169  00E1D3  68                 	db	104	;'h'
  5170  00E1D4  61                 	db	97	;'a'
  5171  00E1D5  73                 	db	115	;'s'
  5172  00E1D6  20                 	db	32
  5173  00E1D7  6F                 	db	111	;'o'
  5174  00E1D8  63                 	db	99	;'c'
  5175  00E1D9  63                 	db	99	;'c'
  5176  00E1DA  75                 	db	117	;'u'
  5177  00E1DB  72                 	db	114	;'r'
  5178  00E1DC  72                 	db	114	;'r'
  5179  00E1DD  65                 	db	101	;'e'
  5180  00E1DE  64                 	db	100	;'d'
  5181  00E1DF  0A                 	db	10
  5182  00E1E0  0D                 	db	13
  5183  00E1E1  20                 	db	32
  5184  00E1E2  20                 	db	32
  5185  00E1E3  20                 	db	32
  5186  00E1E4  43                 	db	67	;'C'
  5187  00E1E5  6C                 	db	108	;'l'
  5188  00E1E6  65                 	db	101	;'e'
  5189  00E1E7  61                 	db	97	;'a'
  5190  00E1E8  72                 	db	114	;'r'
  5191  00E1E9  20                 	db	32
  5192  00E1EA  43                 	db	67	;'C'
  5193  00E1EB  6F                 	db	111	;'o'
  5194  00E1EC  6D                 	db	109	;'m'
  5195  00E1ED  6D                 	db	109	;'m'
  5196  00E1EE  20                 	db	32
  5197  00E1EF  45                 	db	69	;'E'
  5198  00E1F0  72                 	db	114	;'r'
  5199  00E1F1  72                 	db	114	;'r'
  5200  00E1F2  6F                 	db	111	;'o'
  5201  00E1F3  72                 	db	114	;'r'
  5202  00E1F4  73                 	db	115	;'s'
  5203  00E1F5  3A                 	db	58	;':'
  5204  00E1F6  20                 	db	32
  5205  00E1F7  43                 	db	67	;'C'
  5206  00E1F8  6C                 	db	108	;'l'
  5207  00E1F9  65                 	db	101	;'e'
  5208  00E1FA  61                 	db	97	;'a'
  5209  00E1FB  72                 	db	114	;'r'
  5210  00E1FC  73                 	db	115	;'s'
  5211  00E1FD  20                 	db	32
  5212  00E1FE  74                 	db	116	;'t'
  5213  00E1FF  68                 	db	104	;'h'
  5214  00E200  65                 	db	101	;'e'
  5215  00E201  20                 	db	32
  5216  00E202  63                 	db	99	;'c'
  5217  00E203  6F                 	db	111	;'o'
  5218  00E204  6D                 	db	109	;'m'
  5219  00E205  6D                 	db	109	;'m'
  5220  00E206  75                 	db	117	;'u'
  5221  00E207  6E                 	db	110	;'n'
  5222  00E208  69                 	db	105	;'i'
  5223  00E209  63                 	db	99	;'c'
  5224  00E20A  61                 	db	97	;'a'
  5225  00E20B  74                 	db	116	;'t'
  5226  00E20C  69                 	db	105	;'i'
  5227  00E20D  6F                 	db	111	;'o'
  5228  00E20E  6E                 	db	110	;'n'
  5229  00E20F  73                 	db	115	;'s'
  5230  00E210  20                 	db	32
  5231  00E211  65                 	db	101	;'e'
  5232  00E212  72                 	db	114	;'r'
  5233  00E213  72                 	db	114	;'r'
  5234  00E214  6F                 	db	111	;'o'
  5235  00E215  72                 	db	114	;'r'
  5236  00E216  0A                 	db	10
  5237  00E217  0D                 	db	13
  5238  00E218  20                 	db	32
  5239  00E219  20                 	db	32
  5240  00E21A  20                 	db	32
  5241  00E21B  43                 	db	67	;'C'
  5242  00E21C  6C                 	db	108	;'l'
  5243  00E21D  65                 	db	101	;'e'
  5244  00E21E  61                 	db	97	;'a'
  5245  00E21F  72                 	db	114	;'r'
  5246  00E220  20                 	db	32
  5247  00E221  4D                 	db	77	;'M'
  5248  00E222  61                 	db	97	;'a'
  5249  00E223  78                 	db	120	;'x'
  5250  00E224  20                 	db	32
  5251  00E225  56                 	db	86	;'V'
  5252  00E226  61                 	db	97	;'a'
  5253  00E227  6C                 	db	108	;'l'
  5254  00E228  75                 	db	117	;'u'
  5255  00E229  65                 	db	101	;'e'
  5256  00E22A  73                 	db	115	;'s'
  5257  00E22B  3A                 	db	58	;':'
  5258  00E22C  20                 	db	32
  5259  00E22D  45                 	db	69	;'E'
  5260  00E22E  72                 	db	114	;'r'
  5261  00E22F  61                 	db	97	;'a'
  5262  00E230  73                 	db	115	;'s'
  5263  00E231  65                 	db	101	;'e'
  5264  00E232  73                 	db	115	;'s'
  5265  00E233  20                 	db	32
  5266  00E234  6D                 	db	109	;'m'
  5267  00E235  61                 	db	97	;'a'
  5268  00E236  78                 	db	120	;'x'
  5269  00E237  69                 	db	105	;'i'
  5270  00E238  6D                 	db	109	;'m'
  5271  00E239  75                 	db	117	;'u'
  5272  00E23A  6D                 	db	109	;'m'
  5273  00E23B  20                 	db	32
  5274  00E23C  72                 	db	114	;'r'
  5275  00E23D  65                 	db	101	;'e'
  5276  00E23E  63                 	db	99	;'c'
  5277  00E23F  6F                 	db	111	;'o'
  5278  00E240  72                 	db	114	;'r'
  5279  00E241  64                 	db	100	;'d'
  5280  00E242  65                 	db	101	;'e'
  5281  00E243  64                 	db	100	;'d'
  5282  00E244  20                 	db	32
  5283  00E245  76                 	db	118	;'v'
  5284  00E246  61                 	db	97	;'a'
  5285  00E247  6C                 	db	108	;'l'
  5286  00E248  75                 	db	117	;'u'
  5287  00E249  65                 	db	101	;'e'
  5288  00E24A  73                 	db	115	;'s'
  5289  00E24B  20                 	db	32
  5290  00E24C  66                 	db	102	;'f'
  5291  00E24D  72                 	db	114	;'r'
  5292  00E24E  6F                 	db	111	;'o'
  5293  00E24F  6D                 	db	109	;'m'
  5294  00E250  20                 	db	32
  5295  00E251  45                 	db	69	;'E'
  5296  00E252  45                 	db	69	;'E'
  5297  00E253  50                 	db	80	;'P'
  5298  00E254  52                 	db	82	;'R'
  5299  00E255  4F                 	db	79	;'O'
  5300  00E256  4D                 	db	77	;'M'
  5301  00E257  0A                 	db	10
  5302  00E258  0D                 	db	13
  5303  00E259  20                 	db	32
  5304  00E25A  20                 	db	32
  5305  00E25B  20                 	db	32
  5306  00E25C  48                 	db	72	;'H'
  5307  00E25D  65                 	db	101	;'e'
  5308  00E25E  6C                 	db	108	;'l'
  5309  00E25F  70                 	db	112	;'p'
  5310  00E260  3A                 	db	58	;':'
  5311  00E261  20                 	db	32
  5312  00E262  54                 	db	84	;'T'
  5313  00E263  68                 	db	104	;'h'
  5314  00E264  69                 	db	105	;'i'
  5315  00E265  73                 	db	115	;'s'
  5316  00E266  20                 	db	32
  5317  00E267  6D                 	db	109	;'m'
  5318  00E268  65                 	db	101	;'e'
  5319  00E269  73                 	db	115	;'s'
  5320  00E26A  73                 	db	115	;'s'
  5321  00E26B  61                 	db	97	;'a'
  5322  00E26C  67                 	db	103	;'g'
  5323  00E26D  65                 	db	101	;'e'
  5324  00E26E  2C                 	db	44
  5325  00E26F  20                 	db	32
  5326  00E270  6C                 	db	108	;'l'
  5327  00E271  69                 	db	105	;'i'
  5328  00E272  73                 	db	115	;'s'
  5329  00E273  74                 	db	116	;'t'
  5330  00E274  73                 	db	115	;'s'
  5331  00E275  20                 	db	32
  5332  00E276  73                 	db	115	;'s'
  5333  00E277  75                 	db	117	;'u'
  5334  00E278  70                 	db	112	;'p'
  5335  00E279  70                 	db	112	;'p'
  5336  00E27A  6F                 	db	111	;'o'
  5337  00E27B  72                 	db	114	;'r'
  5338  00E27C  74                 	db	116	;'t'
  5339  00E27D  65                 	db	101	;'e'
  5340  00E27E  64                 	db	100	;'d'
  5341  00E27F  20                 	db	32
  5342  00E280  63                 	db	99	;'c'
  5343  00E281  6F                 	db	111	;'o'
  5344  00E282  6D                 	db	109	;'m'
  5345  00E283  6D                 	db	109	;'m'
  5346  00E284  61                 	db	97	;'a'
  5347  00E285  6E                 	db	110	;'n'
  5348  00E286  64                 	db	100	;'d'
  5349  00E287  73                 	db	115	;'s'
  5350  00E288  0A                 	db	10
  5351  00E289  0D                 	db	13
  5352  00E28A  0A                 	db	10
  5353  00E28B  0D                 	db	13
  5354  00E28C  00                 	db	0
  5355  00E28D                     STR_158:
  5356  00E28D  4C                 	db	76	;'L'
  5357  00E28E  69                 	db	105	;'i'
  5358  00E28F  73                 	db	115	;'s'
  5359  00E290  74                 	db	116	;'t'
  5360  00E291  20                 	db	32
  5361  00E292  6F                 	db	111	;'o'
  5362  00E293  66                 	db	102	;'f'
  5363  00E294  20                 	db	32
  5364  00E295  73                 	db	115	;'s'
  5365  00E296  75                 	db	117	;'u'
  5366  00E297  70                 	db	112	;'p'
  5367  00E298  70                 	db	112	;'p'
  5368  00E299  6F                 	db	111	;'o'
  5369  00E29A  72                 	db	114	;'r'
  5370  00E29B  74                 	db	116	;'t'
  5371  00E29C  65                 	db	101	;'e'
  5372  00E29D  64                 	db	100	;'d'
  5373  00E29E  20                 	db	32
  5374  00E29F  50                 	db	80	;'P'
  5375  00E2A0  72                 	db	114	;'r'
  5376  00E2A1  69                 	db	105	;'i'
  5377  00E2A2  6D                 	db	109	;'m'
  5378  00E2A3  61                 	db	97	;'a'
  5379  00E2A4  72                 	db	114	;'r'
  5380  00E2A5  79                 	db	121	;'y'
  5381  00E2A6  20                 	db	32
  5382  00E2A7  4D                 	db	77	;'M'
  5383  00E2A8  65                 	db	101	;'e'
  5384  00E2A9  61                 	db	97	;'a'
  5385  00E2AA  73                 	db	115	;'s'
  5386  00E2AB  75                 	db	117	;'u'
  5387  00E2AC  72                 	db	114	;'r'
  5388  00E2AD  65                 	db	101	;'e'
  5389  00E2AE  6D                 	db	109	;'m'
  5390  00E2AF  65                 	db	101	;'e'
  5391  00E2B0  6E                 	db	110	;'n'
  5392  00E2B1  74                 	db	116	;'t'
  5393  00E2B2  20                 	db	32
  5394  00E2B3  43                 	db	67	;'C'
  5395  00E2B4  6F                 	db	111	;'o'
  5396  00E2B5  6D                 	db	109	;'m'
  5397  00E2B6  6D                 	db	109	;'m'
  5398  00E2B7  61                 	db	97	;'a'
  5399  00E2B8  6E                 	db	110	;'n'
  5400  00E2B9  64                 	db	100	;'d'
  5401  00E2BA  73                 	db	115	;'s'
  5402  00E2BB  3A                 	db	58	;':'
  5403  00E2BC  0A                 	db	10
  5404  00E2BD  0D                 	db	13
  5405  00E2BE  20                 	db	32
  5406  00E2BF  20                 	db	32
  5407  00E2C0  20                 	db	32
  5408  00E2C1  4D                 	db	77	;'M'
  5409  00E2C2  65                 	db	101	;'e'
  5410  00E2C3  61                 	db	97	;'a'
  5411  00E2C4  73                 	db	115	;'s'
  5412  00E2C5  75                 	db	117	;'u'
  5413  00E2C6  72                 	db	114	;'r'
  5414  00E2C7  65                 	db	101	;'e'
  5415  00E2C8  20                 	db	32
  5416  00E2C9  44                 	db	68	;'D'
  5417  00E2CA  65                 	db	101	;'e'
  5418  00E2CB  74                 	db	116	;'t'
  5419  00E2CC  65                 	db	101	;'e'
  5420  00E2CD  63                 	db	99	;'c'
  5421  00E2CE  74                 	db	116	;'t'
  5422  00E2CF  65                 	db	101	;'e'
  5423  00E2D0  64                 	db	100	;'d'
  5424  00E2D1  20                 	db	32
  5425  00E2D2  43                 	db	67	;'C'
  5426  00E2D3  75                 	db	117	;'u'
  5427  00E2D4  72                 	db	114	;'r'
  5428  00E2D5  72                 	db	114	;'r'
  5429  00E2D6  65                 	db	101	;'e'
  5430  00E2D7  6E                 	db	110	;'n'
  5431  00E2D8  74                 	db	116	;'t'
  5432  00E2D9  3F                 	db	63	;'?'
  5433  00E2DA  3A                 	db	58	;':'
  5434  00E2DB  20                 	db	32
  5435  00E2DC  52                 	db	82	;'R'
  5436  00E2DD  65                 	db	101	;'e'
  5437  00E2DE  74                 	db	116	;'t'
  5438  00E2DF  75                 	db	117	;'u'
  5439  00E2E0  72                 	db	114	;'r'
  5440  00E2E1  6E                 	db	110	;'n'
  5441  00E2E2  73                 	db	115	;'s'
  5442  00E2E3  20                 	db	32
  5443  00E2E4  6D                 	db	109	;'m'
  5444  00E2E5  65                 	db	101	;'e'
  5445  00E2E6  61                 	db	97	;'a'
  5446  00E2E7  73                 	db	115	;'s'
  5447  00E2E8  75                 	db	117	;'u'
  5448  00E2E9  72                 	db	114	;'r'
  5449  00E2EA  65                 	db	101	;'e'
  5450  00E2EB  64                 	db	100	;'d'
  5451  00E2EC  20                 	db	32
  5452  00E2ED  6F                 	db	111	;'o'
  5453  00E2EE  75                 	db	117	;'u'
  5454  00E2EF  74                 	db	116	;'t'
  5455  00E2F0  70                 	db	112	;'p'
  5456  00E2F1  75                 	db	117	;'u'
  5457  00E2F2  74                 	db	116	;'t'
  5458  00E2F3  20                 	db	32
  5459  00E2F4  63                 	db	99	;'c'
  5460  00E2F5  75                 	db	117	;'u'
  5461  00E2F6  72                 	db	114	;'r'
  5462  00E2F7  72                 	db	114	;'r'
  5463  00E2F8  65                 	db	101	;'e'
  5464  00E2F9  6E                 	db	110	;'n'
  5465  00E2FA  74                 	db	116	;'t'
  5466  00E2FB  20                 	db	32
  5467  00E2FC  69                 	db	105	;'i'
  5468  00E2FD  6E                 	db	110	;'n'
  5469  00E2FE  20                 	db	32
  5470  00E2FF  61                 	db	97	;'a'
  5471  00E300  6D                 	db	109	;'m'
  5472  00E301  70                 	db	112	;'p'
  5473  00E302  73                 	db	115	;'s'
  5474  00E303  20                 	db	32
  5475  00E304  61                 	db	97	;'a'
  5476  00E305  73                 	db	115	;'s'
  5477  00E306  20                 	db	32
  5478  00E307  73                 	db	115	;'s'
  5479  00E308  65                 	db	101	;'e'
  5480  00E309  65                 	db	101	;'e'
  5481  00E30A  6E                 	db	110	;'n'
  5482  00E30B  20                 	db	32
  5483  00E30C  62                 	db	98	;'b'
  5484  00E30D  79                 	db	121	;'y'
  5485  00E30E  20                 	db	32
  5486  00E30F  41                 	db	65	;'A'
  5487  00E310  44                 	db	68	;'D'
  5488  00E311  43                 	db	67	;'C'
  5489  00E312  0A                 	db	10
  5490  00E313  0D                 	db	13
  5491  00E314  20                 	db	32
  5492  00E315  20                 	db	32
  5493  00E316  20                 	db	32
  5494  00E317  4D                 	db	77	;'M'
  5495  00E318  65                 	db	101	;'e'
  5496  00E319  61                 	db	97	;'a'
  5497  00E31A  73                 	db	115	;'s'
  5498  00E31B  75                 	db	117	;'u'
  5499  00E31C  72                 	db	114	;'r'
  5500  00E31D  65                 	db	101	;'e'
  5501  00E31E  20                 	db	32
  5502  00E31F  52                 	db	82	;'R'
  5503  00E320  4D                 	db	77	;'M'
  5504  00E321  53                 	db	83	;'S'
  5505  00E322  20                 	db	32
  5506  00E323  43                 	db	67	;'C'
  5507  00E324  75                 	db	117	;'u'
  5508  00E325  72                 	db	114	;'r'
  5509  00E326  72                 	db	114	;'r'
  5510  00E327  65                 	db	101	;'e'
  5511  00E328  6E                 	db	110	;'n'
  5512  00E329  74                 	db	116	;'t'
  5513  00E32A  3F                 	db	63	;'?'
  5514  00E32B  3A                 	db	58	;':'
  5515  00E32C  20                 	db	32
  5516  00E32D  52                 	db	82	;'R'
  5517  00E32E  65                 	db	101	;'e'
  5518  00E32F  74                 	db	116	;'t'
  5519  00E330  75                 	db	117	;'u'
  5520  00E331  72                 	db	114	;'r'
  5521  00E332  6E                 	db	110	;'n'
  5522  00E333  73                 	db	115	;'s'
  5523  00E334  20                 	db	32
  5524  00E335  74                 	db	116	;'t'
  5525  00E336  68                 	db	104	;'h'
  5526  00E337  65                 	db	101	;'e'
  5527  00E338  20                 	db	32
  5528  00E339  63                 	db	99	;'c'
  5529  00E33A  61                 	db	97	;'a'
  5530  00E33B  6C                 	db	108	;'l'
  5531  00E33C  63                 	db	99	;'c'
  5532  00E33D  75                 	db	117	;'u'
  5533  00E33E  6C                 	db	108	;'l'
  5534  00E33F  61                 	db	97	;'a'
  5535  00E340  74                 	db	116	;'t'
  5536  00E341  65                 	db	101	;'e'
  5537  00E342  64                 	db	100	;'d'
  5538  00E343  20                 	db	32
  5539  00E344  52                 	db	82	;'R'
  5540  00E345  4D                 	db	77	;'M'
  5541  00E346  53                 	db	83	;'S'
  5542  00E347  20                 	db	32
  5543  00E348  6F                 	db	111	;'o'
  5544  00E349  75                 	db	117	;'u'
  5545  00E34A  74                 	db	116	;'t'
  5546  00E34B  70                 	db	112	;'p'
  5547  00E34C  75                 	db	117	;'u'
  5548  00E34D  74                 	db	116	;'t'
  5549  00E34E  20                 	db	32
  5550  00E34F  63                 	db	99	;'c'
  5551  00E350  75                 	db	117	;'u'
  5552  00E351  72                 	db	114	;'r'
  5553  00E352  72                 	db	114	;'r'
  5554  00E353  65                 	db	101	;'e'
  5555  00E354  6E                 	db	110	;'n'
  5556  00E355  74                 	db	116	;'t'
  5557  00E356  20                 	db	32
  5558  00E357  66                 	db	102	;'f'
  5559  00E358  72                 	db	114	;'r'
  5560  00E359  6F                 	db	111	;'o'
  5561  00E35A  6D                 	db	109	;'m'
  5562  00E35B  20                 	db	32
  5563  00E35C  6D                 	db	109	;'m'
  5564  00E35D  65                 	db	101	;'e'
  5565  00E35E  61                 	db	97	;'a'
  5566  00E35F  73                 	db	115	;'s'
  5567  00E360  75                 	db	117	;'u'
  5568  00E361  72                 	db	114	;'r'
  5569  00E362  65                 	db	101	;'e'
  5570  00E363  6D                 	db	109	;'m'
  5571  00E364  65                 	db	101	;'e'
  5572  00E365  6E                 	db	110	;'n'
  5573  00E366  74                 	db	116	;'t'
  5574  00E367  73                 	db	115	;'s'
  5575  00E368  20                 	db	32
  5576  00E369  61                 	db	97	;'a'
  5577  00E36A  6E                 	db	110	;'n'
  5578  00E36B  64                 	db	100	;'d'
  5579  00E36C  20                 	db	32
  5580  00E36D  54                 	db	84	;'T'
  5581  00E36E  52                 	db	82	;'R'
  5582  00E36F  49                 	db	73	;'I'
  5583  00E370  41                 	db	65	;'A'
  5584  00E371  43                 	db	67	;'C'
  5585  00E372  20                 	db	32
  5586  00E373  66                 	db	102	;'f'
  5587  00E374  69                 	db	105	;'i'
  5588  00E375  72                 	db	114	;'r'
  5589  00E376  69                 	db	105	;'i'
  5590  00E377  6E                 	db	110	;'n'
  5591  00E378  67                 	db	103	;'g'
  5592  00E379  20                 	db	32
  5593  00E37A  61                 	db	97	;'a'
  5594  00E37B  6E                 	db	110	;'n'
  5595  00E37C  67                 	db	103	;'g'
  5596  00E37D  6C                 	db	108	;'l'
  5597  00E37E  65                 	db	101	;'e'
  5598  00E37F  0A                 	db	10
  5599  00E380  0D                 	db	13
  5600  00E381  20                 	db	32
  5601  00E382  20                 	db	32
  5602  00E383  20                 	db	32
  5603  00E384  4D                 	db	77	;'M'
  5604  00E385  65                 	db	101	;'e'
  5605  00E386  61                 	db	97	;'a'
  5606  00E387  73                 	db	115	;'s'
  5607  00E388  75                 	db	117	;'u'
  5608  00E389  72                 	db	114	;'r'
  5609  00E38A  65                 	db	101	;'e'
  5610  00E38B  20                 	db	32
  5611  00E38C  52                 	db	82	;'R'
  5612  00E38D  4D                 	db	77	;'M'
  5613  00E38E  53                 	db	83	;'S'
  5614  00E38F  20                 	db	32
  5615  00E390  56                 	db	86	;'V'
  5616  00E391  6F                 	db	111	;'o'
  5617  00E392  6C                 	db	108	;'l'
  5618  00E393  74                 	db	116	;'t'
  5619  00E394  61                 	db	97	;'a'
  5620  00E395  67                 	db	103	;'g'
  5621  00E396  65                 	db	101	;'e'
  5622  00E397  3F                 	db	63	;'?'
  5623  00E398  3A                 	db	58	;':'
  5624  00E399  20                 	db	32
  5625  00E39A  52                 	db	82	;'R'
  5626  00E39B  65                 	db	101	;'e'
  5627  00E39C  74                 	db	116	;'t'
  5628  00E39D  75                 	db	117	;'u'
  5629  00E39E  72                 	db	114	;'r'
  5630  00E39F  6E                 	db	110	;'n'
  5631  00E3A0  73                 	db	115	;'s'
  5632  00E3A1  20                 	db	32
  5633  00E3A2  74                 	db	116	;'t'
  5634  00E3A3  68                 	db	104	;'h'
  5635  00E3A4  65                 	db	101	;'e'
  5636  00E3A5  20                 	db	32
  5637  00E3A6  63                 	db	99	;'c'
  5638  00E3A7  61                 	db	97	;'a'
  5639  00E3A8  6C                 	db	108	;'l'
  5640  00E3A9  63                 	db	99	;'c'
  5641  00E3AA  75                 	db	117	;'u'
  5642  00E3AB  6C                 	db	108	;'l'
  5643  00E3AC  61                 	db	97	;'a'
  5644  00E3AD  74                 	db	116	;'t'
  5645  00E3AE  65                 	db	101	;'e'
  5646  00E3AF  64                 	db	100	;'d'
  5647  00E3B0  20                 	db	32
  5648  00E3B1  52                 	db	82	;'R'
  5649  00E3B2  4D                 	db	77	;'M'
  5650  00E3B3  53                 	db	83	;'S'
  5651  00E3B4  20                 	db	32
  5652  00E3B5  6F                 	db	111	;'o'
  5653  00E3B6  75                 	db	117	;'u'
  5654  00E3B7  74                 	db	116	;'t'
  5655  00E3B8  70                 	db	112	;'p'
  5656  00E3B9  75                 	db	117	;'u'
  5657  00E3BA  74                 	db	116	;'t'
  5658  00E3BB  20                 	db	32
  5659  00E3BC  76                 	db	118	;'v'
  5660  00E3BD  6F                 	db	111	;'o'
  5661  00E3BE  6C                 	db	108	;'l'
  5662  00E3BF  74                 	db	116	;'t'
  5663  00E3C0  61                 	db	97	;'a'
  5664  00E3C1  67                 	db	103	;'g'
  5665  00E3C2  65                 	db	101	;'e'
  5666  00E3C3  20                 	db	32
  5667  00E3C4  66                 	db	102	;'f'
  5668  00E3C5  72                 	db	114	;'r'
  5669  00E3C6  6F                 	db	111	;'o'
  5670  00E3C7  6D                 	db	109	;'m'
  5671  00E3C8  20                 	db	32
  5672  00E3C9  54                 	db	84	;'T'
  5673  00E3CA  52                 	db	82	;'R'
  5674  00E3CB  49                 	db	73	;'I'
  5675  00E3CC  41                 	db	65	;'A'
  5676  00E3CD  43                 	db	67	;'C'
  5677  00E3CE  20                 	db	32
  5678  00E3CF  66                 	db	102	;'f'
  5679  00E3D0  69                 	db	105	;'i'
  5680  00E3D1  72                 	db	114	;'r'
  5681  00E3D2  69                 	db	105	;'i'
  5682  00E3D3  6E                 	db	110	;'n'
  5683  00E3D4  67                 	db	103	;'g'
  5684  00E3D5  20                 	db	32
  5685  00E3D6  61                 	db	97	;'a'
  5686  00E3D7  6E                 	db	110	;'n'
  5687  00E3D8  67                 	db	103	;'g'
  5688  00E3D9  6C                 	db	108	;'l'
  5689  00E3DA  65                 	db	101	;'e'
  5690  00E3DB  0A                 	db	10
  5691  00E3DC  0D                 	db	13
  5692  00E3DD  20                 	db	32
  5693  00E3DE  20                 	db	32
  5694  00E3DF  20                 	db	32
  5695  00E3E0  4D                 	db	77	;'M'
  5696  00E3E1  65                 	db	101	;'e'
  5697  00E3E2  61                 	db	97	;'a'
  5698  00E3E3  73                 	db	115	;'s'
  5699  00E3E4  75                 	db	117	;'u'
  5700  00E3E5  72                 	db	114	;'r'
  5701  00E3E6  65                 	db	101	;'e'
  5702  00E3E7  20                 	db	32
  5703  00E3E8  50                 	db	80	;'P'
  5704  00E3E9  6F                 	db	111	;'o'
  5705  00E3EA  77                 	db	119	;'w'
  5706  00E3EB  65                 	db	101	;'e'
  5707  00E3EC  72                 	db	114	;'r'
  5708  00E3ED  3F                 	db	63	;'?'
  5709  00E3EE  3A                 	db	58	;':'
  5710  00E3EF  20                 	db	32
  5711  00E3F0  52                 	db	82	;'R'
  5712  00E3F1  65                 	db	101	;'e'
  5713  00E3F2  74                 	db	116	;'t'
  5714  00E3F3  75                 	db	117	;'u'
  5715  00E3F4  72                 	db	114	;'r'
  5716  00E3F5  6E                 	db	110	;'n'
  5717  00E3F6  73                 	db	115	;'s'
  5718  00E3F7  20                 	db	32
  5719  00E3F8  74                 	db	116	;'t'
  5720  00E3F9  68                 	db	104	;'h'
  5721  00E3FA  65                 	db	101	;'e'
  5722  00E3FB  20                 	db	32
  5723  00E3FC  63                 	db	99	;'c'
  5724  00E3FD  61                 	db	97	;'a'
  5725  00E3FE  6C                 	db	108	;'l'
  5726  00E3FF  63                 	db	99	;'c'
  5727  00E400  75                 	db	117	;'u'
  5728  00E401  6C                 	db	108	;'l'
  5729  00E402  61                 	db	97	;'a'
  5730  00E403  74                 	db	116	;'t'
  5731  00E404  65                 	db	101	;'e'
  5732  00E405  64                 	db	100	;'d'
  5733  00E406  20                 	db	32
  5734  00E407  6F                 	db	111	;'o'
  5735  00E408  75                 	db	117	;'u'
  5736  00E409  74                 	db	116	;'t'
  5737  00E40A  70                 	db	112	;'p'
  5738  00E40B  75                 	db	117	;'u'
  5739  00E40C  74                 	db	116	;'t'
  5740  00E40D  20                 	db	32
  5741  00E40E  70                 	db	112	;'p'
  5742  00E40F  6F                 	db	111	;'o'
  5743  00E410  77                 	db	119	;'w'
  5744  00E411  65                 	db	101	;'e'
  5745  00E412  72                 	db	114	;'r'
  5746  00E413  20                 	db	32
  5747  00E414  69                 	db	105	;'i'
  5748  00E415  6E                 	db	110	;'n'
  5749  00E416  20                 	db	32
  5750  00E417  57                 	db	87	;'W'
  5751  00E418  61                 	db	97	;'a'
  5752  00E419  74                 	db	116	;'t'
  5753  00E41A  74                 	db	116	;'t'
  5754  00E41B  73                 	db	115	;'s'
  5755  00E41C  0A                 	db	10
  5756  00E41D  0D                 	db	13
  5757  00E41E  20                 	db	32
  5758  00E41F  20                 	db	32
  5759  00E420  20                 	db	32
  5760  00E421  4D                 	db	77	;'M'
  5761  00E422  65                 	db	101	;'e'
  5762  00E423  61                 	db	97	;'a'
  5763  00E424  73                 	db	115	;'s'
  5764  00E425  75                 	db	117	;'u'
  5765  00E426  72                 	db	114	;'r'
  5766  00E427  65                 	db	101	;'e'
  5767  00E428  20                 	db	32
  5768  00E429  45                 	db	69	;'E'
  5769  00E42A  6E                 	db	110	;'n'
  5770  00E42B  65                 	db	101	;'e'
  5771  00E42C  72                 	db	114	;'r'
  5772  00E42D  67                 	db	103	;'g'
  5773  00E42E  79                 	db	121	;'y'
  5774  00E42F  3F                 	db	63	;'?'
  5775  00E430  3A                 	db	58	;':'
  5776  00E431  20                 	db	32
  5777  00E432  52                 	db	82	;'R'
  5778  00E433  65                 	db	101	;'e'
  5779  00E434  74                 	db	116	;'t'
  5780  00E435  75                 	db	117	;'u'
  5781  00E436  72                 	db	114	;'r'
  5782  00E437  6E                 	db	110	;'n'
  5783  00E438  73                 	db	115	;'s'
  5784  00E439  20                 	db	32
  5785  00E43A  6D                 	db	109	;'m'
  5786  00E43B  65                 	db	101	;'e'
  5787  00E43C  61                 	db	97	;'a'
  5788  00E43D  73                 	db	115	;'s'
  5789  00E43E  75                 	db	117	;'u'
  5790  00E43F  72                 	db	114	;'r'
  5791  00E440  65                 	db	101	;'e'
  5792  00E441  64                 	db	100	;'d'
  5793  00E442  20                 	db	32
  5794  00E443  65                 	db	101	;'e'
  5795  00E444  6E                 	db	110	;'n'
  5796  00E445  65                 	db	101	;'e'
  5797  00E446  72                 	db	114	;'r'
  5798  00E447  67                 	db	103	;'g'
  5799  00E448  79                 	db	121	;'y'
  5800  00E449  20                 	db	32
  5801  00E44A  73                 	db	115	;'s'
  5802  00E44B  69                 	db	105	;'i'
  5803  00E44C  6E                 	db	110	;'n'
  5804  00E44D  63                 	db	99	;'c'
  5805  00E44E  65                 	db	101	;'e'
  5806  00E44F  20                 	db	32
  5807  00E450  6D                 	db	109	;'m'
  5808  00E451  65                 	db	101	;'e'
  5809  00E452  61                 	db	97	;'a'
  5810  00E453  73                 	db	115	;'s'
  5811  00E454  75                 	db	117	;'u'
  5812  00E455  72                 	db	114	;'r'
  5813  00E456  65                 	db	101	;'e'
  5814  00E457  6D                 	db	109	;'m'
  5815  00E458  65                 	db	101	;'e'
  5816  00E459  6E                 	db	110	;'n'
  5817  00E45A  74                 	db	116	;'t'
  5818  00E45B  20                 	db	32
  5819  00E45C  72                 	db	114	;'r'
  5820  00E45D  65                 	db	101	;'e'
  5821  00E45E  73                 	db	115	;'s'
  5822  00E45F  65                 	db	101	;'e'
  5823  00E460  74                 	db	116	;'t'
  5824  00E461  20                 	db	32
  5825  00E462  69                 	db	105	;'i'
  5826  00E463  6E                 	db	110	;'n'
  5827  00E464  20                 	db	32
  5828  00E465  57                 	db	87	;'W'
  5829  00E466  61                 	db	97	;'a'
  5830  00E467  74                 	db	116	;'t'
  5831  00E468  74                 	db	116	;'t'
  5832  00E469  20                 	db	32
  5833  00E46A  48                 	db	72	;'H'
  5834  00E46B  6F                 	db	111	;'o'
  5835  00E46C  75                 	db	117	;'u'
  5836  00E46D  72                 	db	114	;'r'
  5837  00E46E  73                 	db	115	;'s'
  5838  00E46F  0A                 	db	10
  5839  00E470  0D                 	db	13
  5840  00E471  20                 	db	32
  5841  00E472  20                 	db	32
  5842  00E473  20                 	db	32
  5843  00E474  43                 	db	67	;'C'
  5844  00E475  6C                 	db	108	;'l'
  5845  00E476  65                 	db	101	;'e'
  5846  00E477  61                 	db	97	;'a'
  5847  00E478  72                 	db	114	;'r'
  5848  00E479  20                 	db	32
  5849  00E47A  45                 	db	69	;'E'
  5850  00E47B  6E                 	db	110	;'n'
  5851  00E47C  65                 	db	101	;'e'
  5852  00E47D  72                 	db	114	;'r'
  5853  00E47E  67                 	db	103	;'g'
  5854  00E47F  79                 	db	121	;'y'
  5855  00E480  3A                 	db	58	;':'
  5856  00E481  20                 	db	32
  5857  00E482  52                 	db	82	;'R'
  5858  00E483  65                 	db	101	;'e'
  5859  00E484  73                 	db	115	;'s'
  5860  00E485  65                 	db	101	;'e'
  5861  00E486  74                 	db	116	;'t'
  5862  00E487  73                 	db	115	;'s'
  5863  00E488  20                 	db	32
  5864  00E489  74                 	db	116	;'t'
  5865  00E48A  68                 	db	104	;'h'
  5866  00E48B  65                 	db	101	;'e'
  5867  00E48C  20                 	db	32
  5868  00E48D  6D                 	db	109	;'m'
  5869  00E48E  65                 	db	101	;'e'
  5870  00E48F  61                 	db	97	;'a'
  5871  00E490  73                 	db	115	;'s'
  5872  00E491  75                 	db	117	;'u'
  5873  00E492  72                 	db	114	;'r'
  5874  00E493  65                 	db	101	;'e'
  5875  00E494  64                 	db	100	;'d'
  5876  00E495  20                 	db	32
  5877  00E496  6F                 	db	111	;'o'
  5878  00E497  75                 	db	117	;'u'
  5879  00E498  74                 	db	116	;'t'
  5880  00E499  70                 	db	112	;'p'
  5881  00E49A  75                 	db	117	;'u'
  5882  00E49B  74                 	db	116	;'t'
  5883  00E49C  20                 	db	32
  5884  00E49D  65                 	db	101	;'e'
  5885  00E49E  6E                 	db	110	;'n'
  5886  00E49F  65                 	db	101	;'e'
  5887  00E4A0  72                 	db	114	;'r'
  5888  00E4A1  67                 	db	103	;'g'
  5889  00E4A2  79                 	db	121	;'y'
  5890  00E4A3  20                 	db	32
  5891  00E4A4  74                 	db	116	;'t'
  5892  00E4A5  6F                 	db	111	;'o'
  5893  00E4A6  20                 	db	32
  5894  00E4A7  7A                 	db	122	;'z'
  5895  00E4A8  65                 	db	101	;'e'
  5896  00E4A9  72                 	db	114	;'r'
  5897  00E4AA  6F                 	db	111	;'o'
  5898  00E4AB  0A                 	db	10
  5899  00E4AC  0D                 	db	13
  5900  00E4AD  20                 	db	32
  5901  00E4AE  20                 	db	32
  5902  00E4AF  20                 	db	32
  5903  00E4B0  4C                 	db	76	;'L'
  5904  00E4B1  6F                 	db	111	;'o'
  5905  00E4B2  61                 	db	97	;'a'
  5906  00E4B3  64                 	db	100	;'d'
  5907  00E4B4  20                 	db	32
  5908  00E4B5  4F                 	db	79	;'O'
  5909  00E4B6  6E                 	db	110	;'n'
  5910  00E4B7  20                 	db	32
  5911  00E4B8  54                 	db	84	;'T'
  5912  00E4B9  69                 	db	105	;'i'
  5913  00E4BA  6D                 	db	109	;'m'
  5914  00E4BB  65                 	db	101	;'e'
  5915  00E4BC  3F                 	db	63	;'?'
  5916  00E4BD  3A                 	db	58	;':'
  5917  00E4BE  20                 	db	32
  5918  00E4BF  52                 	db	82	;'R'
  5919  00E4C0  65                 	db	101	;'e'
  5920  00E4C1  74                 	db	116	;'t'
  5921  00E4C2  75                 	db	117	;'u'
  5922  00E4C3  72                 	db	114	;'r'
  5923  00E4C4  6E                 	db	110	;'n'
  5924  00E4C5  73                 	db	115	;'s'
  5925  00E4C6  20                 	db	32
  5926  00E4C7  6C                 	db	108	;'l'
  5927  00E4C8  6F                 	db	111	;'o'
  5928  00E4C9  61                 	db	97	;'a'
  5929  00E4CA  64                 	db	100	;'d'
  5930  00E4CB  20                 	db	32
  5931  00E4CC  6F                 	db	111	;'o'
  5932  00E4CD  6E                 	db	110	;'n'
  5933  00E4CE  20                 	db	32
  5934  00E4CF  74                 	db	116	;'t'
  5935  00E4D0  69                 	db	105	;'i'
  5936  00E4D1  6D                 	db	109	;'m'
  5937  00E4D2  65                 	db	101	;'e'
  5938  00E4D3  20                 	db	32
  5939  00E4D4  73                 	db	115	;'s'
  5940  00E4D5  69                 	db	105	;'i'
  5941  00E4D6  6E                 	db	110	;'n'
  5942  00E4D7  63                 	db	99	;'c'
  5943  00E4D8  65                 	db	101	;'e'
  5944  00E4D9  20                 	db	32
  5945  00E4DA  6C                 	db	108	;'l'
  5946  00E4DB  61                 	db	97	;'a'
  5947  00E4DC  73                 	db	115	;'s'
  5948  00E4DD  74                 	db	116	;'t'
  5949  00E4DE  20                 	db	32
  5950  00E4DF  64                 	db	100	;'d'
  5951  00E4E0  65                 	db	101	;'e'
  5952  00E4E1  76                 	db	118	;'v'
  5953  00E4E2  69                 	db	105	;'i'
  5954  00E4E3  63                 	db	99	;'c'
  5955  00E4E4  65                 	db	101	;'e'
  5956  00E4E5  20                 	db	32
  5957  00E4E6  72                 	db	114	;'r'
  5958  00E4E7  65                 	db	101	;'e'
  5959  00E4E8  73                 	db	115	;'s'
  5960  00E4E9  65                 	db	101	;'e'
  5961  00E4EA  74                 	db	116	;'t'
  5962  00E4EB  20                 	db	32
  5963  00E4EC  69                 	db	105	;'i'
  5964  00E4ED  6E                 	db	110	;'n'
  5965  00E4EE  20                 	db	32
  5966  00E4EF  73                 	db	115	;'s'
  5967  00E4F0  65                 	db	101	;'e'
  5968  00E4F1  63                 	db	99	;'c'
  5969  00E4F2  6F                 	db	111	;'o'
  5970  00E4F3  6E                 	db	110	;'n'
  5971  00E4F4  64                 	db	100	;'d'
  5972  00E4F5  73                 	db	115	;'s'
  5973  00E4F6  0A                 	db	10
  5974  00E4F7  0D                 	db	13
  5975  00E4F8  20                 	db	32
  5976  00E4F9  20                 	db	32
  5977  00E4FA  20                 	db	32
  5978  00E4FB  4D                 	db	77	;'M'
  5979  00E4FC  61                 	db	97	;'a'
  5980  00E4FD  78                 	db	120	;'x'
  5981  00E4FE  20                 	db	32
  5982  00E4FF  52                 	db	82	;'R'
  5983  00E500  4D                 	db	77	;'M'
  5984  00E501  53                 	db	83	;'S'
  5985  00E502  20                 	db	32
  5986  00E503  43                 	db	67	;'C'
  5987  00E504  75                 	db	117	;'u'
  5988  00E505  72                 	db	114	;'r'
  5989  00E506  72                 	db	114	;'r'
  5990  00E507  65                 	db	101	;'e'
  5991  00E508  6E                 	db	110	;'n'
  5992  00E509  74                 	db	116	;'t'
  5993  00E50A  3F                 	db	63	;'?'
  5994  00E50B  3A                 	db	58	;':'
  5995  00E50C  20                 	db	32
  5996  00E50D  50                 	db	80	;'P'
  5997  00E50E  72                 	db	114	;'r'
  5998  00E50F  69                 	db	105	;'i'
  5999  00E510  6E                 	db	110	;'n'
  6000  00E511  74                 	db	116	;'t'
  6001  00E512  73                 	db	115	;'s'
  6002  00E513  20                 	db	32
  6003  00E514  74                 	db	116	;'t'
  6004  00E515  68                 	db	104	;'h'
  6005  00E516  65                 	db	101	;'e'
  6006  00E517  20                 	db	32
  6007  00E518  6D                 	db	109	;'m'
  6008  00E519  61                 	db	97	;'a'
  6009  00E51A  78                 	db	120	;'x'
  6010  00E51B  69                 	db	105	;'i'
  6011  00E51C  6D                 	db	109	;'m'
  6012  00E51D  75                 	db	117	;'u'
  6013  00E51E  6D                 	db	109	;'m'
  6014  00E51F  20                 	db	32
  6015  00E520  72                 	db	114	;'r'
  6016  00E521  65                 	db	101	;'e'
  6017  00E522  63                 	db	99	;'c'
  6018  00E523  6F                 	db	111	;'o'
  6019  00E524  72                 	db	114	;'r'
  6020  00E525  64                 	db	100	;'d'
  6021  00E526  65                 	db	101	;'e'
  6022  00E527  64                 	db	100	;'d'
  6023  00E528  20                 	db	32
  6024  00E529  52                 	db	82	;'R'
  6025  00E52A  4D                 	db	77	;'M'
  6026  00E52B  53                 	db	83	;'S'
  6027  00E52C  20                 	db	32
  6028  00E52D  6F                 	db	111	;'o'
  6029  00E52E  75                 	db	117	;'u'
  6030  00E52F  74                 	db	116	;'t'
  6031  00E530  70                 	db	112	;'p'
  6032  00E531  75                 	db	117	;'u'
  6033  00E532  74                 	db	116	;'t'
  6034  00E533  20                 	db	32
  6035  00E534  63                 	db	99	;'c'
  6036  00E535  75                 	db	117	;'u'
  6037  00E536  72                 	db	114	;'r'
  6038  00E537  72                 	db	114	;'r'
  6039  00E538  65                 	db	101	;'e'
  6040  00E539  6E                 	db	110	;'n'
  6041  00E53A  74                 	db	116	;'t'
  6042  00E53B  0A                 	db	10
  6043  00E53C  0D                 	db	13
  6044  00E53D  20                 	db	32
  6045  00E53E  20                 	db	32
  6046  00E53F  20                 	db	32
  6047  00E540  4D                 	db	77	;'M'
  6048  00E541  61                 	db	97	;'a'
  6049  00E542  78                 	db	120	;'x'
  6050  00E543  20                 	db	32
  6051  00E544  50                 	db	80	;'P'
  6052  00E545  6F                 	db	111	;'o'
  6053  00E546  77                 	db	119	;'w'
  6054  00E547  65                 	db	101	;'e'
  6055  00E548  72                 	db	114	;'r'
  6056  00E549  3F                 	db	63	;'?'
  6057  00E54A  3A                 	db	58	;':'
  6058  00E54B  20                 	db	32
  6059  00E54C  50                 	db	80	;'P'
  6060  00E54D  72                 	db	114	;'r'
  6061  00E54E  69                 	db	105	;'i'
  6062  00E54F  6E                 	db	110	;'n'
  6063  00E550  74                 	db	116	;'t'
  6064  00E551  73                 	db	115	;'s'
  6065  00E552  20                 	db	32
  6066  00E553  74                 	db	116	;'t'
  6067  00E554  68                 	db	104	;'h'
  6068  00E555  65                 	db	101	;'e'
  6069  00E556  20                 	db	32
  6070  00E557  6D                 	db	109	;'m'
  6071  00E558  61                 	db	97	;'a'
  6072  00E559  78                 	db	120	;'x'
  6073  00E55A  69                 	db	105	;'i'
  6074  00E55B  6D                 	db	109	;'m'
  6075  00E55C  75                 	db	117	;'u'
  6076  00E55D  6D                 	db	109	;'m'
  6077  00E55E  20                 	db	32
  6078  00E55F  72                 	db	114	;'r'
  6079  00E560  65                 	db	101	;'e'
  6080  00E561  63                 	db	99	;'c'
  6081  00E562  6F                 	db	111	;'o'
  6082  00E563  72                 	db	114	;'r'
  6083  00E564  64                 	db	100	;'d'
  6084  00E565  65                 	db	101	;'e'
  6085  00E566  64                 	db	100	;'d'
  6086  00E567  20                 	db	32
  6087  00E568  6F                 	db	111	;'o'
  6088  00E569  75                 	db	117	;'u'
  6089  00E56A  74                 	db	116	;'t'
  6090  00E56B  70                 	db	112	;'p'
  6091  00E56C  75                 	db	117	;'u'
  6092  00E56D  74                 	db	116	;'t'
  6093  00E56E  20                 	db	32
  6094  00E56F  70                 	db	112	;'p'
  6095  00E570  6F                 	db	111	;'o'
  6096  00E571  77                 	db	119	;'w'
  6097  00E572  65                 	db	101	;'e'
  6098  00E573  72                 	db	114	;'r'
  6099  00E574  0A                 	db	10
  6100  00E575  0D                 	db	13
  6101  00E576  0A                 	db	10
  6102  00E577  0D                 	db	13
  6103  00E578  00                 	db	0
  6104  00E579                     STR_156:
  6105  00E579  4C                 	db	76	;'L'
  6106  00E57A  69                 	db	105	;'i'
  6107  00E57B  73                 	db	115	;'s'
  6108  00E57C  74                 	db	116	;'t'
  6109  00E57D  20                 	db	32
  6110  00E57E  6F                 	db	111	;'o'
  6111  00E57F  66                 	db	102	;'f'
  6112  00E580  20                 	db	32
  6113  00E581  73                 	db	115	;'s'
  6114  00E582  75                 	db	117	;'u'
  6115  00E583  70                 	db	112	;'p'
  6116  00E584  70                 	db	112	;'p'
  6117  00E585  6F                 	db	111	;'o'
  6118  00E586  72                 	db	114	;'r'
  6119  00E587  74                 	db	116	;'t'
  6120  00E588  65                 	db	101	;'e'
  6121  00E589  64                 	db	100	;'d'
  6122  00E58A  20                 	db	32
  6123  00E58B  44                 	db	68	;'D'
  6124  00E58C  65                 	db	101	;'e'
  6125  00E58D  76                 	db	118	;'v'
  6126  00E58E  69                 	db	105	;'i'
  6127  00E58F  63                 	db	99	;'c'
  6128  00E590  65                 	db	101	;'e'
  6129  00E591  20                 	db	32
  6130  00E592  4D                 	db	77	;'M'
  6131  00E593  65                 	db	101	;'e'
  6132  00E594  61                 	db	97	;'a'
  6133  00E595  73                 	db	115	;'s'
  6134  00E596  75                 	db	117	;'u'
  6135  00E597  72                 	db	114	;'r'
  6136  00E598  65                 	db	101	;'e'
  6137  00E599  6D                 	db	109	;'m'
  6138  00E59A  65                 	db	101	;'e'
  6139  00E59B  6E                 	db	110	;'n'
  6140  00E59C  74                 	db	116	;'t'
  6141  00E59D  20                 	db	32
  6142  00E59E  43                 	db	67	;'C'
  6143  00E59F  6F                 	db	111	;'o'
  6144  00E5A0  6D                 	db	109	;'m'
  6145  00E5A1  6D                 	db	109	;'m'
  6146  00E5A2  61                 	db	97	;'a'
  6147  00E5A3  6E                 	db	110	;'n'
  6148  00E5A4  64                 	db	100	;'d'
  6149  00E5A5  73                 	db	115	;'s'
  6150  00E5A6  3A                 	db	58	;':'
  6151  00E5A7  0A                 	db	10
  6152  00E5A8  0D                 	db	13
  6153  00E5A9  20                 	db	32
  6154  00E5AA  20                 	db	32
  6155  00E5AB  20                 	db	32
  6156  00E5AC  4D                 	db	77	;'M'
  6157  00E5AD  65                 	db	101	;'e'
  6158  00E5AE  61                 	db	97	;'a'
  6159  00E5AF  73                 	db	115	;'s'
  6160  00E5B0  75                 	db	117	;'u'
  6161  00E5B1  72                 	db	114	;'r'
  6162  00E5B2  65                 	db	101	;'e'
  6163  00E5B3  20                 	db	32
  6164  00E5B4  50                 	db	80	;'P'
  6165  00E5B5  4F                 	db	79	;'O'
  6166  00E5B6  53                 	db	83	;'S'
  6167  00E5B7  33                 	db	51	;'3'
  6168  00E5B8  50                 	db	80	;'P'
  6169  00E5B9  33                 	db	51	;'3'
  6170  00E5BA  3F                 	db	63	;'?'
  6171  00E5BB  3A                 	db	58	;':'
  6172  00E5BC  20                 	db	32
  6173  00E5BD  52                 	db	82	;'R'
  6174  00E5BE  65                 	db	101	;'e'
  6175  00E5BF  74                 	db	116	;'t'
  6176  00E5C0  75                 	db	117	;'u'
  6177  00E5C1  72                 	db	114	;'r'
  6178  00E5C2  6E                 	db	110	;'n'
  6179  00E5C3  73                 	db	115	;'s'
  6180  00E5C4  20                 	db	32
  6181  00E5C5  2B                 	db	43
  6182  00E5C6  33                 	db	51	;'3'
  6183  00E5C7  2E                 	db	46
  6184  00E5C8  33                 	db	51	;'3'
  6185  00E5C9  56                 	db	86	;'V'
  6186  00E5CA  20                 	db	32
  6187  00E5CB  41                 	db	65	;'A'
  6188  00E5CC  44                 	db	68	;'D'
  6189  00E5CD  43                 	db	67	;'C'
  6190  00E5CE  20                 	db	32
  6191  00E5CF  43                 	db	67	;'C'
  6192  00E5D0  6F                 	db	111	;'o'
  6193  00E5D1  6E                 	db	110	;'n'
  6194  00E5D2  76                 	db	118	;'v'
  6195  00E5D3  65                 	db	101	;'e'
  6196  00E5D4  72                 	db	114	;'r'
  6197  00E5D5  73                 	db	115	;'s'
  6198  00E5D6  69                 	db	105	;'i'
  6199  00E5D7  6F                 	db	111	;'o'
  6200  00E5D8  6E                 	db	110	;'n'
  6201  00E5D9  20                 	db	32
  6202  00E5DA  69                 	db	105	;'i'
  6203  00E5DB  6E                 	db	110	;'n'
  6204  00E5DC  20                 	db	32
  6205  00E5DD  76                 	db	118	;'v'
  6206  00E5DE  6F                 	db	111	;'o'
  6207  00E5DF  6C                 	db	108	;'l'
  6208  00E5E0  74                 	db	116	;'t'
  6209  00E5E1  73                 	db	115	;'s'
  6210  00E5E2  0A                 	db	10
  6211  00E5E3  0D                 	db	13
  6212  00E5E4  20                 	db	32
  6213  00E5E5  20                 	db	32
  6214  00E5E6  20                 	db	32
  6215  00E5E7  4D                 	db	77	;'M'
  6216  00E5E8  65                 	db	101	;'e'
  6217  00E5E9  61                 	db	97	;'a'
  6218  00E5EA  73                 	db	115	;'s'
  6219  00E5EB  75                 	db	117	;'u'
  6220  00E5EC  72                 	db	114	;'r'
  6221  00E5ED  65                 	db	101	;'e'
  6222  00E5EE  20                 	db	32
  6223  00E5EF  50                 	db	80	;'P'
  6224  00E5F0  4F                 	db	79	;'O'
  6225  00E5F1  53                 	db	83	;'S'
  6226  00E5F2  31                 	db	49	;'1'
  6227  00E5F3  32                 	db	50	;'2'
  6228  00E5F4  3F                 	db	63	;'?'
  6229  00E5F5  3A                 	db	58	;':'
  6230  00E5F6  20                 	db	32
  6231  00E5F7  52                 	db	82	;'R'
  6232  00E5F8  65                 	db	101	;'e'
  6233  00E5F9  74                 	db	116	;'t'
  6234  00E5FA  75                 	db	117	;'u'
  6235  00E5FB  72                 	db	114	;'r'
  6236  00E5FC  6E                 	db	110	;'n'
  6237  00E5FD  73                 	db	115	;'s'
  6238  00E5FE  20                 	db	32
  6239  00E5FF  2B                 	db	43
  6240  00E600  31                 	db	49	;'1'
  6241  00E601  32                 	db	50	;'2'
  6242  00E602  56                 	db	86	;'V'
  6243  00E603  20                 	db	32
  6244  00E604  41                 	db	65	;'A'
  6245  00E605  44                 	db	68	;'D'
  6246  00E606  43                 	db	67	;'C'
  6247  00E607  20                 	db	32
  6248  00E608  43                 	db	67	;'C'
  6249  00E609  6F                 	db	111	;'o'
  6250  00E60A  6E                 	db	110	;'n'
  6251  00E60B  76                 	db	118	;'v'
  6252  00E60C  65                 	db	101	;'e'
  6253  00E60D  72                 	db	114	;'r'
  6254  00E60E  73                 	db	115	;'s'
  6255  00E60F  69                 	db	105	;'i'
  6256  00E610  6F                 	db	111	;'o'
  6257  00E611  6E                 	db	110	;'n'
  6258  00E612  20                 	db	32
  6259  00E613  69                 	db	105	;'i'
  6260  00E614  6E                 	db	110	;'n'
  6261  00E615  20                 	db	32
  6262  00E616  76                 	db	118	;'v'
  6263  00E617  6F                 	db	111	;'o'
  6264  00E618  6C                 	db	108	;'l'
  6265  00E619  74                 	db	116	;'t'
  6266  00E61A  73                 	db	115	;'s'
  6267  00E61B  0A                 	db	10
  6268  00E61C  0D                 	db	13
  6269  00E61D  20                 	db	32
  6270  00E61E  20                 	db	32
  6271  00E61F  20                 	db	32
  6272  00E620  4D                 	db	77	;'M'
  6273  00E621  65                 	db	101	;'e'
  6274  00E622  61                 	db	97	;'a'
  6275  00E623  73                 	db	115	;'s'
  6276  00E624  75                 	db	117	;'u'
  6277  00E625  72                 	db	114	;'r'
  6278  00E626  65                 	db	101	;'e'
  6279  00E627  20                 	db	32
  6280  00E628  44                 	db	68	;'D'
  6281  00E629  69                 	db	105	;'i'
  6282  00E62A  65                 	db	101	;'e'
  6283  00E62B  20                 	db	32
  6284  00E62C  54                 	db	84	;'T'
  6285  00E62D  65                 	db	101	;'e'
  6286  00E62E  6D                 	db	109	;'m'
  6287  00E62F  70                 	db	112	;'p'
  6288  00E630  3F                 	db	63	;'?'
  6289  00E631  3A                 	db	58	;':'
  6290  00E632  20                 	db	32
  6291  00E633  52                 	db	82	;'R'
  6292  00E634  65                 	db	101	;'e'
  6293  00E635  74                 	db	116	;'t'
  6294  00E636  75                 	db	117	;'u'
  6295  00E637  72                 	db	114	;'r'
  6296  00E638  6E                 	db	110	;'n'
  6297  00E639  73                 	db	115	;'s'
  6298  00E63A  20                 	db	32
  6299  00E63B  74                 	db	116	;'t'
  6300  00E63C  68                 	db	104	;'h'
  6301  00E63D  65                 	db	101	;'e'
  6302  00E63E  20                 	db	32
  6303  00E63F  6D                 	db	109	;'m'
  6304  00E640  69                 	db	105	;'i'
  6305  00E641  63                 	db	99	;'c'
  6306  00E642  72                 	db	114	;'r'
  6307  00E643  6F                 	db	111	;'o'
  6308  00E644  63                 	db	99	;'c'
  6309  00E645  6F                 	db	111	;'o'
  6310  00E646  6E                 	db	110	;'n'
  6311  00E647  74                 	db	116	;'t'
  6312  00E648  72                 	db	114	;'r'
  6313  00E649  6F                 	db	111	;'o'
  6314  00E64A  6C                 	db	108	;'l'
  6315  00E64B  6C                 	db	108	;'l'
  6316  00E64C  65                 	db	101	;'e'
  6317  00E64D  72                 	db	114	;'r'
  6318  00E64E  20                 	db	32
  6319  00E64F  64                 	db	100	;'d'
  6320  00E650  69                 	db	105	;'i'
  6321  00E651  65                 	db	101	;'e'
  6322  00E652  20                 	db	32
  6323  00E653  74                 	db	116	;'t'
  6324  00E654  65                 	db	101	;'e'
  6325  00E655  6D                 	db	109	;'m'
  6326  00E656  70                 	db	112	;'p'
  6327  00E657  65                 	db	101	;'e'
  6328  00E658  72                 	db	114	;'r'
  6329  00E659  61                 	db	97	;'a'
  6330  00E65A  74                 	db	116	;'t'
  6331  00E65B  75                 	db	117	;'u'
  6332  00E65C  72                 	db	114	;'r'
  6333  00E65D  65                 	db	101	;'e'
  6334  00E65E  20                 	db	32
  6335  00E65F  69                 	db	105	;'i'
  6336  00E660  6E                 	db	110	;'n'
  6337  00E661  20                 	db	32
  6338  00E662  64                 	db	100	;'d'
  6339  00E663  65                 	db	101	;'e'
  6340  00E664  67                 	db	103	;'g'
  6341  00E665  72                 	db	114	;'r'
  6342  00E666  65                 	db	101	;'e'
  6343  00E667  65                 	db	101	;'e'
  6344  00E668  73                 	db	115	;'s'
  6345  00E669  20                 	db	32
  6346  00E66A  43                 	db	67	;'C'
  6347  00E66B  0A                 	db	10
  6348  00E66C  0D                 	db	13
  6349  00E66D  20                 	db	32
  6350  00E66E  20                 	db	32
  6351  00E66F  20                 	db	32
  6352  00E670  4D                 	db	77	;'M'
  6353  00E671  65                 	db	101	;'e'
  6354  00E672  61                 	db	97	;'a'
  6355  00E673  73                 	db	115	;'s'
  6356  00E674  75                 	db	117	;'u'
  6357  00E675  72                 	db	114	;'r'
  6358  00E676  65                 	db	101	;'e'
  6359  00E677  20                 	db	32
  6360  00E678  46                 	db	70	;'F'
  6361  00E679  56                 	db	86	;'V'
  6362  00E67A  52                 	db	82	;'R'
  6363  00E67B  3F                 	db	63	;'?'
  6364  00E67C  3A                 	db	58	;':'
  6365  00E67D  20                 	db	32
  6366  00E67E  52                 	db	82	;'R'
  6367  00E67F  65                 	db	101	;'e'
  6368  00E680  74                 	db	116	;'t'
  6369  00E681  75                 	db	117	;'u'
  6370  00E682  72                 	db	114	;'r'
  6371  00E683  6E                 	db	110	;'n'
  6372  00E684  73                 	db	115	;'s'
  6373  00E685  20                 	db	32
  6374  00E686  74                 	db	116	;'t'
  6375  00E687  68                 	db	104	;'h'
  6376  00E688  65                 	db	101	;'e'
  6377  00E689  20                 	db	32
  6378  00E68A  69                 	db	105	;'i'
  6379  00E68B  6E                 	db	110	;'n'
  6380  00E68C  74                 	db	116	;'t'
  6381  00E68D  65                 	db	101	;'e'
  6382  00E68E  72                 	db	114	;'r'
  6383  00E68F  6E                 	db	110	;'n'
  6384  00E690  61                 	db	97	;'a'
  6385  00E691  6C                 	db	108	;'l'
  6386  00E692  20                 	db	32
  6387  00E693  66                 	db	102	;'f'
  6388  00E694  69                 	db	105	;'i'
  6389  00E695  78                 	db	120	;'x'
  6390  00E696  65                 	db	101	;'e'
  6391  00E697  64                 	db	100	;'d'
  6392  00E698  20                 	db	32
  6393  00E699  76                 	db	118	;'v'
  6394  00E69A  6F                 	db	111	;'o'
  6395  00E69B  6C                 	db	108	;'l'
  6396  00E69C  74                 	db	116	;'t'
  6397  00E69D  61                 	db	97	;'a'
  6398  00E69E  67                 	db	103	;'g'
  6399  00E69F  65                 	db	101	;'e'
  6400  00E6A0  20                 	db	32
  6401  00E6A1  72                 	db	114	;'r'
  6402  00E6A2  65                 	db	101	;'e'
  6403  00E6A3  66                 	db	102	;'f'
  6404  00E6A4  65                 	db	101	;'e'
  6405  00E6A5  72                 	db	114	;'r'
  6406  00E6A6  65                 	db	101	;'e'
  6407  00E6A7  6E                 	db	110	;'n'
  6408  00E6A8  63                 	db	99	;'c'
  6409  00E6A9  65                 	db	101	;'e'
  6410  00E6AA  20                 	db	32
  6411  00E6AB  62                 	db	98	;'b'
  6412  00E6AC  75                 	db	117	;'u'
  6413  00E6AD  66                 	db	102	;'f'
  6414  00E6AE  66                 	db	102	;'f'
  6415  00E6AF  65                 	db	101	;'e'
  6416  00E6B0  72                 	db	114	;'r'
  6417  00E6B1  20                 	db	32
  6418  00E6B2  31                 	db	49	;'1'
  6419  00E6B3  20                 	db	32
  6420  00E6B4  6F                 	db	111	;'o'
  6421  00E6B5  75                 	db	117	;'u'
  6422  00E6B6  74                 	db	116	;'t'
  6423  00E6B7  70                 	db	112	;'p'
  6424  00E6B8  75                 	db	117	;'u'
  6425  00E6B9  74                 	db	116	;'t'
  6426  00E6BA  20                 	db	32
  6427  00E6BB  69                 	db	105	;'i'
  6428  00E6BC  6E                 	db	110	;'n'
  6429  00E6BD  20                 	db	32
  6430  00E6BE  76                 	db	118	;'v'
  6431  00E6BF  6F                 	db	111	;'o'
  6432  00E6C0  6C                 	db	108	;'l'
  6433  00E6C1  74                 	db	116	;'t'
  6434  00E6C2  73                 	db	115	;'s'
  6435  00E6C3  0A                 	db	10
  6436  00E6C4  0D                 	db	13
  6437  00E6C5  20                 	db	32
  6438  00E6C6  20                 	db	32
  6439  00E6C7  20                 	db	32
  6440  00E6C8  4D                 	db	77	;'M'
  6441  00E6C9  65                 	db	101	;'e'
  6442  00E6CA  61                 	db	97	;'a'
  6443  00E6CB  73                 	db	115	;'s'
  6444  00E6CC  75                 	db	117	;'u'
  6445  00E6CD  72                 	db	114	;'r'
  6446  00E6CE  65                 	db	101	;'e'
  6447  00E6CF  20                 	db	32
  6448  00E6D0  41                 	db	65	;'A'
  6449  00E6D1  56                 	db	86	;'V'
  6450  00E6D2  53                 	db	83	;'S'
  6451  00E6D3  53                 	db	83	;'S'
  6452  00E6D4  3F                 	db	63	;'?'
  6453  00E6D5  3A                 	db	58	;':'
  6454  00E6D6  20                 	db	32
  6455  00E6D7  52                 	db	82	;'R'
  6456  00E6D8  65                 	db	101	;'e'
  6457  00E6D9  74                 	db	116	;'t'
  6458  00E6DA  75                 	db	117	;'u'
  6459  00E6DB  72                 	db	114	;'r'
  6460  00E6DC  6E                 	db	110	;'n'
  6461  00E6DD  73                 	db	115	;'s'
  6462  00E6DE  20                 	db	32
  6463  00E6DF  74                 	db	116	;'t'
  6464  00E6E0  68                 	db	104	;'h'
  6465  00E6E1  65                 	db	101	;'e'
  6466  00E6E2  20                 	db	32
  6467  00E6E3  6D                 	db	109	;'m'
  6468  00E6E4  65                 	db	101	;'e'
  6469  00E6E5  61                 	db	97	;'a'
  6470  00E6E6  73                 	db	115	;'s'
  6471  00E6E7  75                 	db	117	;'u'
  6472  00E6E8  72                 	db	114	;'r'
  6473  00E6E9  65                 	db	101	;'e'
  6474  00E6EA  64                 	db	100	;'d'
  6475  00E6EB  20                 	db	32
  6476  00E6EC  76                 	db	118	;'v'
  6477  00E6ED  61                 	db	97	;'a'
  6478  00E6EE  6C                 	db	108	;'l'
  6479  00E6EF  75                 	db	117	;'u'
  6480  00E6F0  65                 	db	101	;'e'
  6481  00E6F1  20                 	db	32
  6482  00E6F2  6F                 	db	111	;'o'
  6483  00E6F3  66                 	db	102	;'f'
  6484  00E6F4  20                 	db	32
  6485  00E6F5  41                 	db	65	;'A'
  6486  00E6F6  6E                 	db	110	;'n'
  6487  00E6F7  61                 	db	97	;'a'
  6488  00E6F8  6C                 	db	108	;'l'
  6489  00E6F9  6F                 	db	111	;'o'
  6490  00E6FA  67                 	db	103	;'g'
  6491  00E6FB  20                 	db	32
  6492  00E6FC  56                 	db	86	;'V'
  6493  00E6FD  53                 	db	83	;'S'
  6494  00E6FE  53                 	db	83	;'S'
  6495  00E6FF  20                 	db	32
  6496  00E700  69                 	db	105	;'i'
  6497  00E701  6E                 	db	110	;'n'
  6498  00E702  20                 	db	32
  6499  00E703  76                 	db	118	;'v'
  6500  00E704  6F                 	db	111	;'o'
  6501  00E705  6C                 	db	108	;'l'
  6502  00E706  74                 	db	116	;'t'
  6503  00E707  73                 	db	115	;'s'
  6504  00E708  0A                 	db	10
  6505  00E709  0D                 	db	13
  6506  00E70A  20                 	db	32
  6507  00E70B  20                 	db	32
  6508  00E70C  20                 	db	32
  6509  00E70D  4D                 	db	77	;'M'
  6510  00E70E  61                 	db	97	;'a'
  6511  00E70F  78                 	db	120	;'x'
  6512  00E710  20                 	db	32
  6513  00E711  50                 	db	80	;'P'
  6514  00E712  4F                 	db	79	;'O'
  6515  00E713  53                 	db	83	;'S'
  6516  00E714  33                 	db	51	;'3'
  6517  00E715  50                 	db	80	;'P'
  6518  00E716  33                 	db	51	;'3'
  6519  00E717  20                 	db	32
  6520  00E718  56                 	db	86	;'V'
  6521  00E719  6F                 	db	111	;'o'
  6522  00E71A  6C                 	db	108	;'l'
  6523  00E71B  74                 	db	116	;'t'
  6524  00E71C  61                 	db	97	;'a'
  6525  00E71D  67                 	db	103	;'g'
  6526  00E71E  65                 	db	101	;'e'
  6527  00E71F  3F                 	db	63	;'?'
  6528  00E720  3A                 	db	58	;':'
  6529  00E721  20                 	db	32
  6530  00E722  52                 	db	82	;'R'
  6531  00E723  65                 	db	101	;'e'
  6532  00E724  74                 	db	116	;'t'
  6533  00E725  75                 	db	117	;'u'
  6534  00E726  72                 	db	114	;'r'
  6535  00E727  6E                 	db	110	;'n'
  6536  00E728  73                 	db	115	;'s'
  6537  00E729  20                 	db	32
  6538  00E72A  74                 	db	116	;'t'
  6539  00E72B  68                 	db	104	;'h'
  6540  00E72C  65                 	db	101	;'e'
  6541  00E72D  20                 	db	32
  6542  00E72E  6D                 	db	109	;'m'
  6543  00E72F  61                 	db	97	;'a'
  6544  00E730  78                 	db	120	;'x'
  6545  00E731  69                 	db	105	;'i'
  6546  00E732  6D                 	db	109	;'m'
  6547  00E733  75                 	db	117	;'u'
  6548  00E734  6D                 	db	109	;'m'
  6549  00E735  20                 	db	32
  6550  00E736  72                 	db	114	;'r'
  6551  00E737  65                 	db	101	;'e'
  6552  00E738  63                 	db	99	;'c'
  6553  00E739  6F                 	db	111	;'o'
  6554  00E73A  72                 	db	114	;'r'
  6555  00E73B  64                 	db	100	;'d'
  6556  00E73C  65                 	db	101	;'e'
  6557  00E73D  64                 	db	100	;'d'
  6558  00E73E  20                 	db	32
  6559  00E73F  2B                 	db	43
  6560  00E740  33                 	db	51	;'3'
  6561  00E741  2E                 	db	46
  6562  00E742  33                 	db	51	;'3'
  6563  00E743  56                 	db	86	;'V'
  6564  00E744  20                 	db	32
  6565  00E745  52                 	db	82	;'R'
  6566  00E746  61                 	db	97	;'a'
  6567  00E747  69                 	db	105	;'i'
  6568  00E748  6C                 	db	108	;'l'
  6569  00E749  20                 	db	32
  6570  00E74A  56                 	db	86	;'V'
  6571  00E74B  6F                 	db	111	;'o'
  6572  00E74C  6C                 	db	108	;'l'
  6573  00E74D  74                 	db	116	;'t'
  6574  00E74E  61                 	db	97	;'a'
  6575  00E74F  67                 	db	103	;'g'
  6576  00E750  65                 	db	101	;'e'
  6577  00E751  20                 	db	32
  6578  00E752  6D                 	db	109	;'m'
  6579  00E753  65                 	db	101	;'e'
  6580  00E754  61                 	db	97	;'a'
  6581  00E755  73                 	db	115	;'s'
  6582  00E756  75                 	db	117	;'u'
  6583  00E757  72                 	db	114	;'r'
  6584  00E758  65                 	db	101	;'e'
  6585  00E759  64                 	db	100	;'d'
  6586  00E75A  0A                 	db	10
  6587  00E75B  0D                 	db	13
  6588  00E75C  20                 	db	32
  6589  00E75D  20                 	db	32
  6590  00E75E  20                 	db	32
  6591  00E75F  4D                 	db	77	;'M'
  6592  00E760  61                 	db	97	;'a'
  6593  00E761  78                 	db	120	;'x'
  6594  00E762  20                 	db	32
  6595  00E763  50                 	db	80	;'P'
  6596  00E764  4F                 	db	79	;'O'
  6597  00E765  53                 	db	83	;'S'
  6598  00E766  31                 	db	49	;'1'
  6599  00E767  32                 	db	50	;'2'
  6600  00E768  20                 	db	32
  6601  00E769  56                 	db	86	;'V'
  6602  00E76A  6F                 	db	111	;'o'
  6603  00E76B  6C                 	db	108	;'l'
  6604  00E76C  74                 	db	116	;'t'
  6605  00E76D  61                 	db	97	;'a'
  6606  00E76E  67                 	db	103	;'g'
  6607  00E76F  65                 	db	101	;'e'
  6608  00E770  3F                 	db	63	;'?'
  6609  00E771  3A                 	db	58	;':'
  6610  00E772  20                 	db	32
  6611  00E773  52                 	db	82	;'R'
  6612  00E774  65                 	db	101	;'e'
  6613  00E775  74                 	db	116	;'t'
  6614  00E776  75                 	db	117	;'u'
  6615  00E777  72                 	db	114	;'r'
  6616  00E778  6E                 	db	110	;'n'
  6617  00E779  73                 	db	115	;'s'
  6618  00E77A  20                 	db	32
  6619  00E77B  74                 	db	116	;'t'
  6620  00E77C  68                 	db	104	;'h'
  6621  00E77D  65                 	db	101	;'e'
  6622  00E77E  20                 	db	32
  6623  00E77F  6D                 	db	109	;'m'
  6624  00E780  61                 	db	97	;'a'
  6625  00E781  78                 	db	120	;'x'
  6626  00E782  69                 	db	105	;'i'
  6627  00E783  6D                 	db	109	;'m'
  6628  00E784  75                 	db	117	;'u'
  6629  00E785  6D                 	db	109	;'m'
  6630  00E786  20                 	db	32
  6631  00E787  72                 	db	114	;'r'
  6632  00E788  65                 	db	101	;'e'
  6633  00E789  63                 	db	99	;'c'
  6634  00E78A  6F                 	db	111	;'o'
  6635  00E78B  72                 	db	114	;'r'
  6636  00E78C  64                 	db	100	;'d'
  6637  00E78D  65                 	db	101	;'e'
  6638  00E78E  64                 	db	100	;'d'
  6639  00E78F  20                 	db	32
  6640  00E790  2B                 	db	43
  6641  00E791  31                 	db	49	;'1'
  6642  00E792  32                 	db	50	;'2'
  6643  00E793  56                 	db	86	;'V'
  6644  00E794  20                 	db	32
  6645  00E795  52                 	db	82	;'R'
  6646  00E796  61                 	db	97	;'a'
  6647  00E797  69                 	db	105	;'i'
  6648  00E798  6C                 	db	108	;'l'
  6649  00E799  20                 	db	32
  6650  00E79A  56                 	db	86	;'V'
  6651  00E79B  6F                 	db	111	;'o'
  6652  00E79C  6C                 	db	108	;'l'
  6653  00E79D  74                 	db	116	;'t'
  6654  00E79E  61                 	db	97	;'a'
  6655  00E79F  67                 	db	103	;'g'
  6656  00E7A0  65                 	db	101	;'e'
  6657  00E7A1  20                 	db	32
  6658  00E7A2  6D                 	db	109	;'m'
  6659  00E7A3  65                 	db	101	;'e'
  6660  00E7A4  61                 	db	97	;'a'
  6661  00E7A5  73                 	db	115	;'s'
  6662  00E7A6  75                 	db	117	;'u'
  6663  00E7A7  72                 	db	114	;'r'
  6664  00E7A8  65                 	db	101	;'e'
  6665  00E7A9  64                 	db	100	;'d'
  6666  00E7AA  0A                 	db	10
  6667  00E7AB  0D                 	db	13
  6668  00E7AC  20                 	db	32
  6669  00E7AD  20                 	db	32
  6670  00E7AE  20                 	db	32
  6671  00E7AF  4D                 	db	77	;'M'
  6672  00E7B0  61                 	db	97	;'a'
  6673  00E7B1  78                 	db	120	;'x'
  6674  00E7B2  20                 	db	32
  6675  00E7B3  44                 	db	68	;'D'
  6676  00E7B4  69                 	db	105	;'i'
  6677  00E7B5  65                 	db	101	;'e'
  6678  00E7B6  20                 	db	32
  6679  00E7B7  54                 	db	84	;'T'
  6680  00E7B8  65                 	db	101	;'e'
  6681  00E7B9  6D                 	db	109	;'m'
  6682  00E7BA  70                 	db	112	;'p'
  6683  00E7BB  3F                 	db	63	;'?'
  6684  00E7BC  3A                 	db	58	;':'
  6685  00E7BD  20                 	db	32
  6686  00E7BE  52                 	db	82	;'R'
  6687  00E7BF  65                 	db	101	;'e'
  6688  00E7C0  74                 	db	116	;'t'
  6689  00E7C1  75                 	db	117	;'u'
  6690  00E7C2  72                 	db	114	;'r'
  6691  00E7C3  6E                 	db	110	;'n'
  6692  00E7C4  73                 	db	115	;'s'
  6693  00E7C5  20                 	db	32
  6694  00E7C6  74                 	db	116	;'t'
  6695  00E7C7  68                 	db	104	;'h'
  6696  00E7C8  65                 	db	101	;'e'
  6697  00E7C9  20                 	db	32
  6698  00E7CA  6D                 	db	109	;'m'
  6699  00E7CB  61                 	db	97	;'a'
  6700  00E7CC  78                 	db	120	;'x'
  6701  00E7CD  69                 	db	105	;'i'
  6702  00E7CE  6D                 	db	109	;'m'
  6703  00E7CF  75                 	db	117	;'u'
  6704  00E7D0  6D                 	db	109	;'m'
  6705  00E7D1  20                 	db	32
  6706  00E7D2  72                 	db	114	;'r'
  6707  00E7D3  65                 	db	101	;'e'
  6708  00E7D4  63                 	db	99	;'c'
  6709  00E7D5  6F                 	db	111	;'o'
  6710  00E7D6  72                 	db	114	;'r'
  6711  00E7D7  64                 	db	100	;'d'
  6712  00E7D8  65                 	db	101	;'e'
  6713  00E7D9  64                 	db	100	;'d'
  6714  00E7DA  20                 	db	32
  6715  00E7DB  64                 	db	100	;'d'
  6716  00E7DC  69                 	db	105	;'i'
  6717  00E7DD  65                 	db	101	;'e'
  6718  00E7DE  20                 	db	32
  6719  00E7DF  74                 	db	116	;'t'
  6720  00E7E0  65                 	db	101	;'e'
  6721  00E7E1  6D                 	db	109	;'m'
  6722  00E7E2  70                 	db	112	;'p'
  6723  00E7E3  65                 	db	101	;'e'
  6724  00E7E4  72                 	db	114	;'r'
  6725  00E7E5  61                 	db	97	;'a'
  6726  00E7E6  74                 	db	116	;'t'
  6727  00E7E7  75                 	db	117	;'u'
  6728  00E7E8  72                 	db	114	;'r'
  6729  00E7E9  65                 	db	101	;'e'
  6730  00E7EA  20                 	db	32
  6731  00E7EB  6D                 	db	109	;'m'
  6732  00E7EC  65                 	db	101	;'e'
  6733  00E7ED  61                 	db	97	;'a'
  6734  00E7EE  73                 	db	115	;'s'
  6735  00E7EF  75                 	db	117	;'u'
  6736  00E7F0  72                 	db	114	;'r'
  6737  00E7F1  65                 	db	101	;'e'
  6738  00E7F2  64                 	db	100	;'d'
  6739  00E7F3  0A                 	db	10
  6740  00E7F4  0D                 	db	13
  6741  00E7F5  20                 	db	32
  6742  00E7F6  20                 	db	32
  6743  00E7F7  20                 	db	32
  6744  00E7F8  4D                 	db	77	;'M'
  6745  00E7F9  61                 	db	97	;'a'
  6746  00E7FA  78                 	db	120	;'x'
  6747  00E7FB  20                 	db	32
  6748  00E7FC  46                 	db	70	;'F'
  6749  00E7FD  56                 	db	86	;'V'
  6750  00E7FE  52                 	db	82	;'R'
  6751  00E7FF  20                 	db	32
  6752  00E800  56                 	db	86	;'V'
  6753  00E801  6F                 	db	111	;'o'
  6754  00E802  6C                 	db	108	;'l'
  6755  00E803  74                 	db	116	;'t'
  6756  00E804  61                 	db	97	;'a'
  6757  00E805  67                 	db	103	;'g'
  6758  00E806  65                 	db	101	;'e'
  6759  00E807  3F                 	db	63	;'?'
  6760  00E808  3A                 	db	58	;':'
  6761  00E809  20                 	db	32
  6762  00E80A  52                 	db	82	;'R'
  6763  00E80B  65                 	db	101	;'e'
  6764  00E80C  74                 	db	116	;'t'
  6765  00E80D  75                 	db	117	;'u'
  6766  00E80E  72                 	db	114	;'r'
  6767  00E80F  6E                 	db	110	;'n'
  6768  00E810  73                 	db	115	;'s'
  6769  00E811  20                 	db	32
  6770  00E812  74                 	db	116	;'t'
  6771  00E813  68                 	db	104	;'h'
  6772  00E814  65                 	db	101	;'e'
  6773  00E815  20                 	db	32
  6774  00E816  6D                 	db	109	;'m'
  6775  00E817  61                 	db	97	;'a'
  6776  00E818  78                 	db	120	;'x'
  6777  00E819  69                 	db	105	;'i'
  6778  00E81A  6D                 	db	109	;'m'
  6779  00E81B  75                 	db	117	;'u'
  6780  00E81C  6D                 	db	109	;'m'
  6781  00E81D  20                 	db	32
  6782  00E81E  72                 	db	114	;'r'
  6783  00E81F  65                 	db	101	;'e'
  6784  00E820  63                 	db	99	;'c'
  6785  00E821  6F                 	db	111	;'o'
  6786  00E822  72                 	db	114	;'r'
  6787  00E823  64                 	db	100	;'d'
  6788  00E824  65                 	db	101	;'e'
  6789  00E825  64                 	db	100	;'d'
  6790  00E826  20                 	db	32
  6791  00E827  46                 	db	70	;'F'
  6792  00E828  56                 	db	86	;'V'
  6793  00E829  52                 	db	82	;'R'
  6794  00E82A  20                 	db	32
  6795  00E82B  42                 	db	66	;'B'
  6796  00E82C  75                 	db	117	;'u'
  6797  00E82D  66                 	db	102	;'f'
  6798  00E82E  66                 	db	102	;'f'
  6799  00E82F  65                 	db	101	;'e'
  6800  00E830  72                 	db	114	;'r'
  6801  00E831  20                 	db	32
  6802  00E832  31                 	db	49	;'1'
  6803  00E833  20                 	db	32
  6804  00E834  56                 	db	86	;'V'
  6805  00E835  6F                 	db	111	;'o'
  6806  00E836  6C                 	db	108	;'l'
  6807  00E837  74                 	db	116	;'t'
  6808  00E838  61                 	db	97	;'a'
  6809  00E839  67                 	db	103	;'g'
  6810  00E83A  65                 	db	101	;'e'
  6811  00E83B  20                 	db	32
  6812  00E83C  6D                 	db	109	;'m'
  6813  00E83D  65                 	db	101	;'e'
  6814  00E83E  61                 	db	97	;'a'
  6815  00E83F  73                 	db	115	;'s'
  6816  00E840  75                 	db	117	;'u'
  6817  00E841  72                 	db	114	;'r'
  6818  00E842  65                 	db	101	;'e'
  6819  00E843  64                 	db	100	;'d'
  6820  00E844  0A                 	db	10
  6821  00E845  0D                 	db	13
  6822  00E846  0A                 	db	10
  6823  00E847  0D                 	db	13
  6824  00E848  00                 	db	0
  6825  00E849                     STR_160:
  6826  00E849  4C                 	db	76	;'L'
  6827  00E84A  69                 	db	105	;'i'
  6828  00E84B  73                 	db	115	;'s'
  6829  00E84C  74                 	db	116	;'t'
  6830  00E84D  20                 	db	32
  6831  00E84E  6F                 	db	111	;'o'
  6832  00E84F  66                 	db	102	;'f'
  6833  00E850  20                 	db	32
  6834  00E851  73                 	db	115	;'s'
  6835  00E852  75                 	db	117	;'u'
  6836  00E853  70                 	db	112	;'p'
  6837  00E854  70                 	db	112	;'p'
  6838  00E855  6F                 	db	111	;'o'
  6839  00E856  72                 	db	114	;'r'
  6840  00E857  74                 	db	116	;'t'
  6841  00E858  65                 	db	101	;'e'
  6842  00E859  64                 	db	100	;'d'
  6843  00E85A  20                 	db	32
  6844  00E85B  4F                 	db	79	;'O'
  6845  00E85C  75                 	db	117	;'u'
  6846  00E85D  74                 	db	116	;'t'
  6847  00E85E  70                 	db	112	;'p'
  6848  00E85F  75                 	db	117	;'u'
  6849  00E860  74                 	db	116	;'t'
  6850  00E861  20                 	db	32
  6851  00E862  43                 	db	67	;'C'
  6852  00E863  6F                 	db	111	;'o'
  6853  00E864  6E                 	db	110	;'n'
  6854  00E865  74                 	db	116	;'t'
  6855  00E866  72                 	db	114	;'r'
  6856  00E867  6F                 	db	111	;'o'
  6857  00E868  6C                 	db	108	;'l'
  6858  00E869  20                 	db	32
  6859  00E86A  43                 	db	67	;'C'
  6860  00E86B  6F                 	db	111	;'o'
  6861  00E86C  6D                 	db	109	;'m'
  6862  00E86D  6D                 	db	109	;'m'
  6863  00E86E  61                 	db	97	;'a'
  6864  00E86F  6E                 	db	110	;'n'
  6865  00E870  64                 	db	100	;'d'
  6866  00E871  73                 	db	115	;'s'
  6867  00E872  3A                 	db	58	;':'
  6868  00E873  0A                 	db	10
  6869  00E874  0D                 	db	13
  6870  00E875  20                 	db	32
  6871  00E876  20                 	db	32
  6872  00E877  20                 	db	32
  6873  00E878  45                 	db	69	;'E'
  6874  00E879  6E                 	db	110	;'n'
  6875  00E87A  61                 	db	97	;'a'
  6876  00E87B  62                 	db	98	;'b'
  6877  00E87C  6C                 	db	108	;'l'
  6878  00E87D  65                 	db	101	;'e'
  6879  00E87E  20                 	db	32
  6880  00E87F  44                 	db	68	;'D'
  6881  00E880  69                 	db	105	;'i'
  6882  00E881  6D                 	db	109	;'m'
  6883  00E882  6D                 	db	109	;'m'
  6884  00E883  69                 	db	105	;'i'
  6885  00E884  6E                 	db	110	;'n'
  6886  00E885  67                 	db	103	;'g'
  6887  00E886  3A                 	db	58	;':'
  6888  00E887  20                 	db	32
  6889  00E888  45                 	db	69	;'E'
  6890  00E889  6E                 	db	110	;'n'
  6891  00E88A  61                 	db	97	;'a'
  6892  00E88B  62                 	db	98	;'b'
  6893  00E88C  6C                 	db	108	;'l'
  6894  00E88D  65                 	db	101	;'e'
  6895  00E88E  20                 	db	32
  6896  00E88F  54                 	db	84	;'T'
  6897  00E890  52                 	db	82	;'R'
  6898  00E891  49                 	db	73	;'I'
  6899  00E892  41                 	db	65	;'A'
  6900  00E893  43                 	db	67	;'C'
  6901  00E894  20                 	db	32
  6902  00E895  6F                 	db	111	;'o'
  6903  00E896  75                 	db	117	;'u'
  6904  00E897  74                 	db	116	;'t'
  6905  00E898  70                 	db	112	;'p'
  6906  00E899  75                 	db	117	;'u'
  6907  00E89A  74                 	db	116	;'t'
  6908  00E89B  20                 	db	32
  6909  00E89C  64                 	db	100	;'d'
  6910  00E89D  69                 	db	105	;'i'
  6911  00E89E  6D                 	db	109	;'m'
  6912  00E89F  6D                 	db	109	;'m'
  6913  00E8A0  69                 	db	105	;'i'
  6914  00E8A1  6E                 	db	110	;'n'
  6915  00E8A2  67                 	db	103	;'g'
  6916  00E8A3  0A                 	db	10
  6917  00E8A4  0D                 	db	13
  6918  00E8A5  20                 	db	32
  6919  00E8A6  20                 	db	32
  6920  00E8A7  20                 	db	32
  6921  00E8A8  44                 	db	68	;'D'
  6922  00E8A9  69                 	db	105	;'i'
  6923  00E8AA  73                 	db	115	;'s'
  6924  00E8AB  61                 	db	97	;'a'
  6925  00E8AC  62                 	db	98	;'b'
  6926  00E8AD  6C                 	db	108	;'l'
  6927  00E8AE  65                 	db	101	;'e'
  6928  00E8AF  20                 	db	32
  6929  00E8B0  44                 	db	68	;'D'
  6930  00E8B1  69                 	db	105	;'i'
  6931  00E8B2  6D                 	db	109	;'m'
  6932  00E8B3  6D                 	db	109	;'m'
  6933  00E8B4  69                 	db	105	;'i'
  6934  00E8B5  6E                 	db	110	;'n'
  6935  00E8B6  67                 	db	103	;'g'
  6936  00E8B7  3A                 	db	58	;':'
  6937  00E8B8  20                 	db	32
  6938  00E8B9  44                 	db	68	;'D'
  6939  00E8BA  69                 	db	105	;'i'
  6940  00E8BB  73                 	db	115	;'s'
  6941  00E8BC  61                 	db	97	;'a'
  6942  00E8BD  62                 	db	98	;'b'
  6943  00E8BE  6C                 	db	108	;'l'
  6944  00E8BF  65                 	db	101	;'e'
  6945  00E8C0  20                 	db	32
  6946  00E8C1  54                 	db	84	;'T'
  6947  00E8C2  52                 	db	82	;'R'
  6948  00E8C3  49                 	db	73	;'I'
  6949  00E8C4  41                 	db	65	;'A'
  6950  00E8C5  43                 	db	67	;'C'
  6951  00E8C6  20                 	db	32
  6952  00E8C7  6F                 	db	111	;'o'
  6953  00E8C8  75                 	db	117	;'u'
  6954  00E8C9  74                 	db	116	;'t'
  6955  00E8CA  70                 	db	112	;'p'
  6956  00E8CB  75                 	db	117	;'u'
  6957  00E8CC  74                 	db	116	;'t'
  6958  00E8CD  20                 	db	32
  6959  00E8CE  64                 	db	100	;'d'
  6960  00E8CF  69                 	db	105	;'i'
  6961  00E8D0  6D                 	db	109	;'m'
  6962  00E8D1  6D                 	db	109	;'m'
  6963  00E8D2  69                 	db	105	;'i'
  6964  00E8D3  6E                 	db	110	;'n'
  6965  00E8D4  67                 	db	103	;'g'
  6966  00E8D5  0A                 	db	10
  6967  00E8D6  0D                 	db	13
  6968  00E8D7  20                 	db	32
  6969  00E8D8  20                 	db	32
  6970  00E8D9  20                 	db	32
  6971  00E8DA  45                 	db	69	;'E'
  6972  00E8DB  6E                 	db	110	;'n'
  6973  00E8DC  61                 	db	97	;'a'
  6974  00E8DD  62                 	db	98	;'b'
  6975  00E8DE  6C                 	db	108	;'l'
  6976  00E8DF  65                 	db	101	;'e'
  6977  00E8E0  20                 	db	32
  6978  00E8E1  4C                 	db	76	;'L'
  6979  00E8E2  6F                 	db	111	;'o'
  6980  00E8E3  61                 	db	97	;'a'
  6981  00E8E4  64                 	db	100	;'d'
  6982  00E8E5  3A                 	db	58	;':'
  6983  00E8E6  20                 	db	32
  6984  00E8E7  45                 	db	69	;'E'
  6985  00E8E8  6E                 	db	110	;'n'
  6986  00E8E9  61                 	db	97	;'a'
  6987  00E8EA  62                 	db	98	;'b'
  6988  00E8EB  6C                 	db	108	;'l'
  6989  00E8EC  65                 	db	101	;'e'
  6990  00E8ED  73                 	db	115	;'s'
  6991  00E8EE  20                 	db	32
  6992  00E8EF  74                 	db	116	;'t'
  6993  00E8F0  68                 	db	104	;'h'
  6994  00E8F1  65                 	db	101	;'e'
  6995  00E8F2  20                 	db	32
  6996  00E8F3  6F                 	db	111	;'o'
  6997  00E8F4  75                 	db	117	;'u'
  6998  00E8F5  74                 	db	116	;'t'
  6999  00E8F6  70                 	db	112	;'p'
  7000  00E8F7  75                 	db	117	;'u'
  7001  00E8F8  74                 	db	116	;'t'
  7002  00E8F9  20                 	db	32
  7003  00E8FA  54                 	db	84	;'T'
  7004  00E8FB  52                 	db	82	;'R'
  7005  00E8FC  49                 	db	73	;'I'
  7006  00E8FD  41                 	db	65	;'A'
  7007  00E8FE  43                 	db	67	;'C'
  7008  00E8FF  20                 	db	32
  7009  00E900  77                 	db	119	;'w'
  7010  00E901  69                 	db	105	;'i'
  7011  00E902  74                 	db	116	;'t'
  7012  00E903  68                 	db	104	;'h'
  7013  00E904  20                 	db	32
  7014  00E905  64                 	db	100	;'d'
  7015  00E906  69                 	db	105	;'i'
  7016  00E907  6D                 	db	109	;'m'
  7017  00E908  6D                 	db	109	;'m'
  7018  00E909  69                 	db	105	;'i'
  7019  00E90A  6E                 	db	110	;'n'
  7020  00E90B  67                 	db	103	;'g'
  7021  00E90C  20                 	db	32
  7022  00E90D  64                 	db	100	;'d'
  7023  00E90E  69                 	db	105	;'i'
  7024  00E90F  73                 	db	115	;'s'
  7025  00E910  61                 	db	97	;'a'
  7026  00E911  62                 	db	98	;'b'
  7027  00E912  6C                 	db	108	;'l'
  7028  00E913  65                 	db	101	;'e'
  7029  00E914  64                 	db	100	;'d'
  7030  00E915  0A                 	db	10
  7031  00E916  0D                 	db	13
  7032  00E917  20                 	db	32
  7033  00E918  20                 	db	32
  7034  00E919  20                 	db	32
  7035  00E91A  44                 	db	68	;'D'
  7036  00E91B  69                 	db	105	;'i'
  7037  00E91C  73                 	db	115	;'s'
  7038  00E91D  61                 	db	97	;'a'
  7039  00E91E  62                 	db	98	;'b'
  7040  00E91F  6C                 	db	108	;'l'
  7041  00E920  65                 	db	101	;'e'
  7042  00E921  20                 	db	32
  7043  00E922  4C                 	db	76	;'L'
  7044  00E923  6F                 	db	111	;'o'
  7045  00E924  61                 	db	97	;'a'
  7046  00E925  64                 	db	100	;'d'
  7047  00E926  3A                 	db	58	;':'
  7048  00E927  20                 	db	32
  7049  00E928  44                 	db	68	;'D'
  7050  00E929  69                 	db	105	;'i'
  7051  00E92A  73                 	db	115	;'s'
  7052  00E92B  61                 	db	97	;'a'
  7053  00E92C  62                 	db	98	;'b'
  7054  00E92D  6C                 	db	108	;'l'
  7055  00E92E  65                 	db	101	;'e'
  7056  00E92F  73                 	db	115	;'s'
  7057  00E930  20                 	db	32
  7058  00E931  74                 	db	116	;'t'
  7059  00E932  68                 	db	104	;'h'
  7060  00E933  65                 	db	101	;'e'
  7061  00E934  20                 	db	32
  7062  00E935  6F                 	db	111	;'o'
  7063  00E936  75                 	db	117	;'u'
  7064  00E937  74                 	db	116	;'t'
  7065  00E938  70                 	db	112	;'p'
  7066  00E939  75                 	db	117	;'u'
  7067  00E93A  74                 	db	116	;'t'
  7068  00E93B  20                 	db	32
  7069  00E93C  54                 	db	84	;'T'
  7070  00E93D  52                 	db	82	;'R'
  7071  00E93E  49                 	db	73	;'I'
  7072  00E93F  41                 	db	65	;'A'
  7073  00E940  43                 	db	67	;'C'
  7074  00E941  20                 	db	32
  7075  00E942  63                 	db	99	;'c'
  7076  00E943  6F                 	db	111	;'o'
  7077  00E944  6D                 	db	109	;'m'
  7078  00E945  70                 	db	112	;'p'
  7079  00E946  6C                 	db	108	;'l'
  7080  00E947  65                 	db	101	;'e'
  7081  00E948  74                 	db	116	;'t'
  7082  00E949  65                 	db	101	;'e'
  7083  00E94A  6C                 	db	108	;'l'
  7084  00E94B  79                 	db	121	;'y'
  7085  00E94C  0A                 	db	10
  7086  00E94D  0D                 	db	13
  7087  00E94E  20                 	db	32
  7088  00E94F  20                 	db	32
  7089  00E950  20                 	db	32
  7090  00E951  4C                 	db	76	;'L'
  7091  00E952  6F                 	db	111	;'o'
  7092  00E953  61                 	db	97	;'a'
  7093  00E954  64                 	db	100	;'d'
  7094  00E955  20                 	db	32
  7095  00E956  45                 	db	69	;'E'
  7096  00E957  6E                 	db	110	;'n'
  7097  00E958  61                 	db	97	;'a'
  7098  00E959  62                 	db	98	;'b'
  7099  00E95A  6C                 	db	108	;'l'
  7100  00E95B  65                 	db	101	;'e'
  7101  00E95C  64                 	db	100	;'d'
  7102  00E95D  3F                 	db	63	;'?'
  7103  00E95E  3A                 	db	58	;':'
  7104  00E95F  20                 	db	32
  7105  00E960  52                 	db	82	;'R'
  7106  00E961  65                 	db	101	;'e'
  7107  00E962  74                 	db	116	;'t'
  7108  00E963  75                 	db	117	;'u'
  7109  00E964  72                 	db	114	;'r'
  7110  00E965  6E                 	db	110	;'n'
  7111  00E966  73                 	db	115	;'s'
  7112  00E967  20                 	db	32
  7113  00E968  69                 	db	105	;'i'
  7114  00E969  66                 	db	102	;'f'
  7115  00E96A  20                 	db	32
  7116  00E96B  74                 	db	116	;'t'
  7117  00E96C  68                 	db	104	;'h'
  7118  00E96D  65                 	db	101	;'e'
  7119  00E96E  20                 	db	32
  7120  00E96F  6F                 	db	111	;'o'
  7121  00E970  75                 	db	117	;'u'
  7122  00E971  74                 	db	116	;'t'
  7123  00E972  70                 	db	112	;'p'
  7124  00E973  75                 	db	117	;'u'
  7125  00E974  74                 	db	116	;'t'
  7126  00E975  20                 	db	32
  7127  00E976  6C                 	db	108	;'l'
  7128  00E977  6F                 	db	111	;'o'
  7129  00E978  61                 	db	97	;'a'
  7130  00E979  64                 	db	100	;'d'
  7131  00E97A  20                 	db	32
  7132  00E97B  69                 	db	105	;'i'
  7133  00E97C  73                 	db	115	;'s'
  7134  00E97D  20                 	db	32
  7135  00E97E  65                 	db	101	;'e'
  7136  00E97F  6E                 	db	110	;'n'
  7137  00E980  61                 	db	97	;'a'
  7138  00E981  62                 	db	98	;'b'
  7139  00E982  6C                 	db	108	;'l'
  7140  00E983  65                 	db	101	;'e'
  7141  00E984  64                 	db	100	;'d'
  7142  00E985  20                 	db	32
  7143  00E986  6F                 	db	111	;'o'
  7144  00E987  72                 	db	114	;'r'
  7145  00E988  20                 	db	32
  7146  00E989  64                 	db	100	;'d'
  7147  00E98A  69                 	db	105	;'i'
  7148  00E98B  73                 	db	115	;'s'
  7149  00E98C  61                 	db	97	;'a'
  7150  00E98D  62                 	db	98	;'b'
  7151  00E98E  6C                 	db	108	;'l'
  7152  00E98F  65                 	db	101	;'e'
  7153  00E990  64                 	db	100	;'d'
  7154  00E991  0A                 	db	10
  7155  00E992  0D                 	db	13
  7156  00E993  20                 	db	32
  7157  00E994  20                 	db	32
  7158  00E995  20                 	db	32
  7159  00E996  44                 	db	68	;'D'
  7160  00E997  69                 	db	105	;'i'
  7161  00E998  6D                 	db	109	;'m'
  7162  00E999  6D                 	db	109	;'m'
  7163  00E99A  69                 	db	105	;'i'
  7164  00E99B  6E                 	db	110	;'n'
  7165  00E99C  67                 	db	103	;'g'
  7166  00E99D  20                 	db	32
  7167  00E99E  45                 	db	69	;'E'
  7168  00E99F  6E                 	db	110	;'n'
  7169  00E9A0  61                 	db	97	;'a'
  7170  00E9A1  62                 	db	98	;'b'
  7171  00E9A2  6C                 	db	108	;'l'
  7172  00E9A3  65                 	db	101	;'e'
  7173  00E9A4  64                 	db	100	;'d'
  7174  00E9A5  3F                 	db	63	;'?'
  7175  00E9A6  3A                 	db	58	;':'
  7176  00E9A7  20                 	db	32
  7177  00E9A8  52                 	db	82	;'R'
  7178  00E9A9  65                 	db	101	;'e'
  7179  00E9AA  74                 	db	116	;'t'
  7180  00E9AB  75                 	db	117	;'u'
  7181  00E9AC  72                 	db	114	;'r'
  7182  00E9AD  6E                 	db	110	;'n'
  7183  00E9AE  73                 	db	115	;'s'
  7184  00E9AF  20                 	db	32
  7185  00E9B0  69                 	db	105	;'i'
  7186  00E9B1  66                 	db	102	;'f'
  7187  00E9B2  20                 	db	32
  7188  00E9B3  64                 	db	100	;'d'
  7189  00E9B4  69                 	db	105	;'i'
  7190  00E9B5  6D                 	db	109	;'m'
  7191  00E9B6  6D                 	db	109	;'m'
  7192  00E9B7  69                 	db	105	;'i'
  7193  00E9B8  6E                 	db	110	;'n'
  7194  00E9B9  67                 	db	103	;'g'
  7195  00E9BA  20                 	db	32
  7196  00E9BB  6F                 	db	111	;'o'
  7197  00E9BC  66                 	db	102	;'f'
  7198  00E9BD  20                 	db	32
  7199  00E9BE  74                 	db	116	;'t'
  7200  00E9BF  68                 	db	104	;'h'
  7201  00E9C0  65                 	db	101	;'e'
  7202  00E9C1  20                 	db	32
  7203  00E9C2  6F                 	db	111	;'o'
  7204  00E9C3  75                 	db	117	;'u'
  7205  00E9C4  74                 	db	116	;'t'
  7206  00E9C5  70                 	db	112	;'p'
  7207  00E9C6  75                 	db	117	;'u'
  7208  00E9C7  74                 	db	116	;'t'
  7209  00E9C8  20                 	db	32
  7210  00E9C9  6C                 	db	108	;'l'
  7211  00E9CA  6F                 	db	111	;'o'
  7212  00E9CB  61                 	db	97	;'a'
  7213  00E9CC  64                 	db	100	;'d'
  7214  00E9CD  20                 	db	32
  7215  00E9CE  69                 	db	105	;'i'
  7216  00E9CF  73                 	db	115	;'s'
  7217  00E9D0  20                 	db	32
  7218  00E9D1  65                 	db	101	;'e'
  7219  00E9D2  6E                 	db	110	;'n'
  7220  00E9D3  61                 	db	97	;'a'
  7221  00E9D4  62                 	db	98	;'b'
  7222  00E9D5  6C                 	db	108	;'l'
  7223  00E9D6  65                 	db	101	;'e'
  7224  00E9D7  64                 	db	100	;'d'
  7225  00E9D8  20                 	db	32
  7226  00E9D9  6F                 	db	111	;'o'
  7227  00E9DA  72                 	db	114	;'r'
  7228  00E9DB  20                 	db	32
  7229  00E9DC  6E                 	db	110	;'n'
  7230  00E9DD  6F                 	db	111	;'o'
  7231  00E9DE  74                 	db	116	;'t'
  7232  00E9DF  0A                 	db	10
  7233  00E9E0  0D                 	db	13
  7234  00E9E1  20                 	db	32
  7235  00E9E2  20                 	db	32
  7236  00E9E3  20                 	db	32
  7237  00E9E4  53                 	db	83	;'S'
  7238  00E9E5  65                 	db	101	;'e'
  7239  00E9E6  74                 	db	116	;'t'
  7240  00E9E7  20                 	db	32
  7241  00E9E8  44                 	db	68	;'D'
  7242  00E9E9  69                 	db	105	;'i'
  7243  00E9EA  6D                 	db	109	;'m'
  7244  00E9EB  6D                 	db	109	;'m'
  7245  00E9EC  69                 	db	105	;'i'
  7246  00E9ED  6E                 	db	110	;'n'
  7247  00E9EE  67                 	db	103	;'g'
  7248  00E9EF  20                 	db	32
  7249  00E9F0  50                 	db	80	;'P'
  7250  00E9F1  65                 	db	101	;'e'
  7251  00E9F2  72                 	db	114	;'r'
  7252  00E9F3  63                 	db	99	;'c'
  7253  00E9F4  65                 	db	101	;'e'
  7254  00E9F5  6E                 	db	110	;'n'
  7255  00E9F6  74                 	db	116	;'t'
  7256  00E9F7  61                 	db	97	;'a'
  7257  00E9F8  67                 	db	103	;'g'
  7258  00E9F9  65                 	db	101	;'e'
  7259  00E9FA  3A                 	db	58	;':'
  7260  00E9FB  20                 	db	32
  7261  00E9FC  3C                 	db	60	;'<'
  7262  00E9FD  78                 	db	120	;'x'
  7263  00E9FE  3E                 	db	62	;'>'
  7264  00E9FF  3A                 	db	58	;':'
  7265  00EA00  20                 	db	32
  7266  00EA01  53                 	db	83	;'S'
  7267  00EA02  65                 	db	101	;'e'
  7268  00EA03  74                 	db	116	;'t'
  7269  00EA04  73                 	db	115	;'s'
  7270  00EA05  20                 	db	32
  7271  00EA06  74                 	db	116	;'t'
  7272  00EA07  68                 	db	104	;'h'
  7273  00EA08  65                 	db	101	;'e'
  7274  00EA09  20                 	db	32
  7275  00EA0A  6F                 	db	111	;'o'
  7276  00EA0B  75                 	db	117	;'u'
  7277  00EA0C  74                 	db	116	;'t'
  7278  00EA0D  70                 	db	112	;'p'
  7279  00EA0E  75                 	db	117	;'u'
  7280  00EA0F  74                 	db	116	;'t'
  7281  00EA10  20                 	db	32
  7282  00EA11  64                 	db	100	;'d'
  7283  00EA12  69                 	db	105	;'i'
  7284  00EA13  6D                 	db	109	;'m'
  7285  00EA14  6D                 	db	109	;'m'
  7286  00EA15  69                 	db	105	;'i'
  7287  00EA16  6E                 	db	110	;'n'
  7288  00EA17  67                 	db	103	;'g'
  7289  00EA18  20                 	db	32
  7290  00EA19  70                 	db	112	;'p'
  7291  00EA1A  65                 	db	101	;'e'
  7292  00EA1B  72                 	db	114	;'r'
  7293  00EA1C  63                 	db	99	;'c'
  7294  00EA1D  65                 	db	101	;'e'
  7295  00EA1E  6E                 	db	110	;'n'
  7296  00EA1F  74                 	db	116	;'t'
  7297  00EA20  61                 	db	97	;'a'
  7298  00EA21  67                 	db	103	;'g'
  7299  00EA22  65                 	db	101	;'e'
  7300  00EA23  20                 	db	32
  7301  00EA24  61                 	db	97	;'a'
  7302  00EA25  73                 	db	115	;'s'
  7303  00EA26  20                 	db	32
  7304  00EA27  78                 	db	120	;'x'
  7305  00EA28  20                 	db	32
  7306  00EA29  70                 	db	112	;'p'
  7307  00EA2A  65                 	db	101	;'e'
  7308  00EA2B  72                 	db	114	;'r'
  7309  00EA2C  63                 	db	99	;'c'
  7310  00EA2D  65                 	db	101	;'e'
  7311  00EA2E  6E                 	db	110	;'n'
  7312  00EA2F  74                 	db	116	;'t'
  7313  00EA30  0A                 	db	10
  7314  00EA31  0D                 	db	13
  7315  00EA32  0A                 	db	10
  7316  00EA33  0D                 	db	13
  7317  00EA34  00                 	db	0
  7318  00EA35                     STR_164:
  7319  00EA35  50                 	db	80	;'P'
  7320  00EA36  6C                 	db	108	;'l'
  7321  00EA37  65                 	db	101	;'e'
  7322  00EA38  61                 	db	97	;'a'
  7323  00EA39  73                 	db	115	;'s'
  7324  00EA3A  65                 	db	101	;'e'
  7325  00EA3B  20                 	db	32
  7326  00EA3C  73                 	db	115	;'s'
  7327  00EA3D  70                 	db	112	;'p'
  7328  00EA3E  65                 	db	101	;'e'
  7329  00EA3F  63                 	db	99	;'c'
  7330  00EA40  69                 	db	105	;'i'
  7331  00EA41  66                 	db	102	;'f'
  7332  00EA42  79                 	db	121	;'y'
  7333  00EA43  20                 	db	32
  7334  00EA44  77                 	db	119	;'w'
  7335  00EA45  68                 	db	104	;'h'
  7336  00EA46  61                 	db	97	;'a'
  7337  00EA47  74                 	db	116	;'t'
  7338  00EA48  20                 	db	32
  7339  00EA49  74                 	db	116	;'t'
  7340  00EA4A  79                 	db	121	;'y'
  7341  00EA4B  70                 	db	112	;'p'
  7342  00EA4C  65                 	db	101	;'e'
  7343  00EA4D  20                 	db	32
  7344  00EA4E  6F                 	db	111	;'o'
  7345  00EA4F  66                 	db	102	;'f'
  7346  00EA50  20                 	db	32
  7347  00EA51  63                 	db	99	;'c'
  7348  00EA52  6F                 	db	111	;'o'
  7349  00EA53  6D                 	db	109	;'m'
  7350  00EA54  6D                 	db	109	;'m'
  7351  00EA55  61                 	db	97	;'a'
  7352  00EA56  6E                 	db	110	;'n'
  7353  00EA57  64                 	db	100	;'d'
  7354  00EA58  73                 	db	115	;'s'
  7355  00EA59  20                 	db	32
  7356  00EA5A  79                 	db	121	;'y'
  7357  00EA5B  6F                 	db	111	;'o'
  7358  00EA5C  75                 	db	117	;'u'
  7359  00EA5D  27                 	db	39
  7360  00EA5E  64                 	db	100	;'d'
  7361  00EA5F  20                 	db	32
  7362  00EA60  6C                 	db	108	;'l'
  7363  00EA61  69                 	db	105	;'i'
  7364  00EA62  6B                 	db	107	;'k'
  7365  00EA63  65                 	db	101	;'e'
  7366  00EA64  20                 	db	32
  7367  00EA65  68                 	db	104	;'h'
  7368  00EA66  65                 	db	101	;'e'
  7369  00EA67  6C                 	db	108	;'l'
  7370  00EA68  70                 	db	112	;'p'
  7371  00EA69  20                 	db	32
  7372  00EA6A  77                 	db	119	;'w'
  7373  00EA6B  69                 	db	105	;'i'
  7374  00EA6C  74                 	db	116	;'t'
  7375  00EA6D  68                 	db	104	;'h'
  7376  00EA6E  3A                 	db	58	;':'
  7377  00EA6F  0A                 	db	10
  7378  00EA70  0D                 	db	13
  7379  00EA71  54                 	db	84	;'T'
  7380  00EA72  72                 	db	114	;'r'
  7381  00EA73  79                 	db	121	;'y'
  7382  00EA74  20                 	db	32
  7383  00EA75  27                 	db	39
  7384  00EA76  48                 	db	72	;'H'
  7385  00EA77  65                 	db	101	;'e'
  7386  00EA78  6C                 	db	108	;'l'
  7387  00EA79  70                 	db	112	;'p'
  7388  00EA7A  20                 	db	32
  7389  00EA7B  3C                 	db	60	;'<'
  7390  00EA7C  63                 	db	99	;'c'
  7391  00EA7D  6F                 	db	111	;'o'
  7392  00EA7E  6D                 	db	109	;'m'
  7393  00EA7F  6D                 	db	109	;'m'
  7394  00EA80  61                 	db	97	;'a'
  7395  00EA81  6E                 	db	110	;'n'
  7396  00EA82  64                 	db	100	;'d'
  7397  00EA83  20                 	db	32
  7398  00EA84  73                 	db	115	;'s'
  7399  00EA85  65                 	db	101	;'e'
  7400  00EA86  74                 	db	116	;'t'
  7401  00EA87  3E                 	db	62	;'>'
  7402  00EA88  27                 	db	39
  7403  00EA89  0A                 	db	10
  7404  00EA8A  0D                 	db	13
  7405  00EA8B  0A                 	db	10
  7406  00EA8C  0D                 	db	13
  7407  00EA8D  53                 	db	83	;'S'
  7408  00EA8E  75                 	db	117	;'u'
  7409  00EA8F  70                 	db	112	;'p'
  7410  00EA90  70                 	db	112	;'p'
  7411  00EA91  6F                 	db	111	;'o'
  7412  00EA92  72                 	db	114	;'r'
  7413  00EA93  74                 	db	116	;'t'
  7414  00EA94  65                 	db	101	;'e'
  7415  00EA95  64                 	db	100	;'d'
  7416  00EA96  20                 	db	32
  7417  00EA97  43                 	db	67	;'C'
  7418  00EA98  6F                 	db	111	;'o'
  7419  00EA99  6D                 	db	109	;'m'
  7420  00EA9A  6D                 	db	109	;'m'
  7421  00EA9B  61                 	db	97	;'a'
  7422  00EA9C  6E                 	db	110	;'n'
  7423  00EA9D  64                 	db	100	;'d'
  7424  00EA9E  20                 	db	32
  7425  00EA9F  53                 	db	83	;'S'
  7426  00EAA0  65                 	db	101	;'e'
  7427  00EAA1  74                 	db	116	;'t'
  7428  00EAA2  73                 	db	115	;'s'
  7429  00EAA3  3A                 	db	58	;':'
  7430  00EAA4  0A                 	db	10
  7431  00EAA5  0D                 	db	13
  7432  00EAA6  20                 	db	32
  7433  00EAA7  20                 	db	32
  7434  00EAA8  20                 	db	32
  7435  00EAA9  44                 	db	68	;'D'
  7436  00EAAA  65                 	db	101	;'e'
  7437  00EAAB  76                 	db	118	;'v'
  7438  00EAAC  69                 	db	105	;'i'
  7439  00EAAD  63                 	db	99	;'c'
  7440  00EAAE  65                 	db	101	;'e'
  7441  00EAAF  20                 	db	32
  7442  00EAB0  43                 	db	67	;'C'
  7443  00EAB1  6F                 	db	111	;'o'
  7444  00EAB2  6E                 	db	110	;'n'
  7445  00EAB3  74                 	db	116	;'t'
  7446  00EAB4  72                 	db	114	;'r'
  7447  00EAB5  6F                 	db	111	;'o'
  7448  00EAB6  6C                 	db	108	;'l'
  7449  00EAB7  20                 	db	32
  7450  00EAB8  43                 	db	67	;'C'
  7451  00EAB9  6F                 	db	111	;'o'
  7452  00EABA  6D                 	db	109	;'m'
  7453  00EABB  6D                 	db	109	;'m'
  7454  00EABC  61                 	db	97	;'a'
  7455  00EABD  6E                 	db	110	;'n'
  7456  00EABE  64                 	db	100	;'d'
  7457  00EABF  73                 	db	115	;'s'
  7458  00EAC0  3A                 	db	58	;':'
  7459  00EAC1  20                 	db	32
  7460  00EAC2  43                 	db	67	;'C'
  7461  00EAC3  6F                 	db	111	;'o'
  7462  00EAC4  6D                 	db	109	;'m'
  7463  00EAC5  6D                 	db	109	;'m'
  7464  00EAC6  61                 	db	97	;'a'
  7465  00EAC7  6E                 	db	110	;'n'
  7466  00EAC8  64                 	db	100	;'d'
  7467  00EAC9  73                 	db	115	;'s'
  7468  00EACA  20                 	db	32
  7469  00EACB  74                 	db	116	;'t'
  7470  00EACC  6F                 	db	111	;'o'
  7471  00EACD  20                 	db	32
  7472  00EACE  76                 	db	118	;'v'
  7473  00EACF  69                 	db	105	;'i'
  7474  00EAD0  65                 	db	101	;'e'
  7475  00EAD1  77                 	db	119	;'w'
  7476  00EAD2  20                 	db	32
  7477  00EAD3  61                 	db	97	;'a'
  7478  00EAD4  6E                 	db	110	;'n'
  7479  00EAD5  64                 	db	100	;'d'
  7480  00EAD6  20                 	db	32
  7481  00EAD7  63                 	db	99	;'c'
  7482  00EAD8  6F                 	db	111	;'o'
  7483  00EAD9  6E                 	db	110	;'n'
  7484  00EADA  74                 	db	116	;'t'
  7485  00EADB  72                 	db	114	;'r'
  7486  00EADC  6F                 	db	111	;'o'
  7487  00EADD  6C                 	db	108	;'l'
  7488  00EADE  20                 	db	32
  7489  00EADF  6C                 	db	108	;'l'
  7490  00EAE0  6F                 	db	111	;'o'
  7491  00EAE1  77                 	db	119	;'w'
  7492  00EAE2  20                 	db	32
  7493  00EAE3  6C                 	db	108	;'l'
  7494  00EAE4  65                 	db	101	;'e'
  7495  00EAE5  76                 	db	118	;'v'
  7496  00EAE6  65                 	db	101	;'e'
  7497  00EAE7  6C                 	db	108	;'l'
  7498  00EAE8  20                 	db	32
  7499  00EAE9  73                 	db	115	;'s'
  7500  00EAEA  79                 	db	121	;'y'
  7501  00EAEB  73                 	db	115	;'s'
  7502  00EAEC  74                 	db	116	;'t'
  7503  00EAED  65                 	db	101	;'e'
  7504  00EAEE  6D                 	db	109	;'m'
  7505  00EAEF  20                 	db	32
  7506  00EAF0  66                 	db	102	;'f'
  7507  00EAF1  75                 	db	117	;'u'
  7508  00EAF2  6E                 	db	110	;'n'
  7509  00EAF3  63                 	db	99	;'c'
  7510  00EAF4  74                 	db	116	;'t'
  7511  00EAF5  69                 	db	105	;'i'
  7512  00EAF6  6F                 	db	111	;'o'
  7513  00EAF7  6E                 	db	110	;'n'
  7514  00EAF8  61                 	db	97	;'a'
  7515  00EAF9  6C                 	db	108	;'l'
  7516  00EAFA  69                 	db	105	;'i'
  7517  00EAFB  74                 	db	116	;'t'
  7518  00EAFC  79                 	db	121	;'y'
  7519  00EAFD  0A                 	db	10
  7520  00EAFE  0D                 	db	13
  7521  00EAFF  20                 	db	32
  7522  00EB00  20                 	db	32
  7523  00EB01  20                 	db	32
  7524  00EB02  44                 	db	68	;'D'
  7525  00EB03  65                 	db	101	;'e'
  7526  00EB04  76                 	db	118	;'v'
  7527  00EB05  69                 	db	105	;'i'
  7528  00EB06  63                 	db	99	;'c'
  7529  00EB07  65                 	db	101	;'e'
  7530  00EB08  20                 	db	32
  7531  00EB09  4D                 	db	77	;'M'
  7532  00EB0A  65                 	db	101	;'e'
  7533  00EB0B  61                 	db	97	;'a'
  7534  00EB0C  73                 	db	115	;'s'
  7535  00EB0D  75                 	db	117	;'u'
  7536  00EB0E  72                 	db	114	;'r'
  7537  00EB0F  65                 	db	101	;'e'
  7538  00EB10  6D                 	db	109	;'m'
  7539  00EB11  65                 	db	101	;'e'
  7540  00EB12  6E                 	db	110	;'n'
  7541  00EB13  74                 	db	116	;'t'
  7542  00EB14  20                 	db	32
  7543  00EB15  43                 	db	67	;'C'
  7544  00EB16  6F                 	db	111	;'o'
  7545  00EB17  6D                 	db	109	;'m'
  7546  00EB18  6D                 	db	109	;'m'
  7547  00EB19  61                 	db	97	;'a'
  7548  00EB1A  6E                 	db	110	;'n'
  7549  00EB1B  64                 	db	100	;'d'
  7550  00EB1C  73                 	db	115	;'s'
  7551  00EB1D  3A                 	db	58	;':'
  7552  00EB1E  20                 	db	32
  7553  00EB1F  56                 	db	86	;'V'
  7554  00EB20  69                 	db	105	;'i'
  7555  00EB21  65                 	db	101	;'e'
  7556  00EB22  77                 	db	119	;'w'
  7557  00EB23  20                 	db	32
  7558  00EB24  6C                 	db	108	;'l'
  7559  00EB25  6F                 	db	111	;'o'
  7560  00EB26  77                 	db	119	;'w'
  7561  00EB27  20                 	db	32
  7562  00EB28  6C                 	db	108	;'l'
  7563  00EB29  65                 	db	101	;'e'
  7564  00EB2A  76                 	db	118	;'v'
  7565  00EB2B  65                 	db	101	;'e'
  7566  00EB2C  6C                 	db	108	;'l'
  7567  00EB2D  20                 	db	32
  7568  00EB2E  73                 	db	115	;'s'
  7569  00EB2F  79                 	db	121	;'y'
  7570  00EB30  73                 	db	115	;'s'
  7571  00EB31  74                 	db	116	;'t'
  7572  00EB32  65                 	db	101	;'e'
  7573  00EB33  6D                 	db	109	;'m'
  7574  00EB34  20                 	db	32
  7575  00EB35  6D                 	db	109	;'m'
  7576  00EB36  65                 	db	101	;'e'
  7577  00EB37  61                 	db	97	;'a'
  7578  00EB38  73                 	db	115	;'s'
  7579  00EB39  75                 	db	117	;'u'
  7580  00EB3A  72                 	db	114	;'r'
  7581  00EB3B  65                 	db	101	;'e'
  7582  00EB3C  6D                 	db	109	;'m'
  7583  00EB3D  65                 	db	101	;'e'
  7584  00EB3E  6E                 	db	110	;'n'
  7585  00EB3F  74                 	db	116	;'t'
  7586  00EB40  73                 	db	115	;'s'
  7587  00EB41  0A                 	db	10
  7588  00EB42  0D                 	db	13
  7589  00EB43  20                 	db	32
  7590  00EB44  20                 	db	32
  7591  00EB45  20                 	db	32
  7592  00EB46  50                 	db	80	;'P'
  7593  00EB47  72                 	db	114	;'r'
  7594  00EB48  69                 	db	105	;'i'
  7595  00EB49  6D                 	db	109	;'m'
  7596  00EB4A  61                 	db	97	;'a'
  7597  00EB4B  72                 	db	114	;'r'
  7598  00EB4C  79                 	db	121	;'y'
  7599  00EB4D  20                 	db	32
  7600  00EB4E  4D                 	db	77	;'M'
  7601  00EB4F  65                 	db	101	;'e'
  7602  00EB50  61                 	db	97	;'a'
  7603  00EB51  73                 	db	115	;'s'
  7604  00EB52  75                 	db	117	;'u'
  7605  00EB53  72                 	db	114	;'r'
  7606  00EB54  65                 	db	101	;'e'
  7607  00EB55  6D                 	db	109	;'m'
  7608  00EB56  65                 	db	101	;'e'
  7609  00EB57  6E                 	db	110	;'n'
  7610  00EB58  74                 	db	116	;'t'
  7611  00EB59  20                 	db	32
  7612  00EB5A  43                 	db	67	;'C'
  7613  00EB5B  6F                 	db	111	;'o'
  7614  00EB5C  6D                 	db	109	;'m'
  7615  00EB5D  6D                 	db	109	;'m'
  7616  00EB5E  61                 	db	97	;'a'
  7617  00EB5F  6E                 	db	110	;'n'
  7618  00EB60  64                 	db	100	;'d'
  7619  00EB61  73                 	db	115	;'s'
  7620  00EB62  3A                 	db	58	;':'
  7621  00EB63  20                 	db	32
  7622  00EB64  56                 	db	86	;'V'
  7623  00EB65  69                 	db	105	;'i'
  7624  00EB66  65                 	db	101	;'e'
  7625  00EB67  77                 	db	119	;'w'
  7626  00EB68  20                 	db	32
  7627  00EB69  68                 	db	104	;'h'
  7628  00EB6A  69                 	db	105	;'i'
  7629  00EB6B  67                 	db	103	;'g'
  7630  00EB6C  68                 	db	104	;'h'
  7631  00EB6D  20                 	db	32
  7632  00EB6E  6C                 	db	108	;'l'
  7633  00EB6F  65                 	db	101	;'e'
  7634  00EB70  76                 	db	118	;'v'
  7635  00EB71  65                 	db	101	;'e'
  7636  00EB72  6C                 	db	108	;'l'
  7637  00EB73  20                 	db	32
  7638  00EB74  6F                 	db	111	;'o'
  7639  00EB75  75                 	db	117	;'u'
  7640  00EB76  74                 	db	116	;'t'
  7641  00EB77  70                 	db	112	;'p'
  7642  00EB78  75                 	db	117	;'u'
  7643  00EB79  74                 	db	116	;'t'
  7644  00EB7A  20                 	db	32
  7645  00EB7B  6D                 	db	109	;'m'
  7646  00EB7C  65                 	db	101	;'e'
  7647  00EB7D  61                 	db	97	;'a'
  7648  00EB7E  73                 	db	115	;'s'
  7649  00EB7F  75                 	db	117	;'u'
  7650  00EB80  72                 	db	114	;'r'
  7651  00EB81  65                 	db	101	;'e'
  7652  00EB82  6D                 	db	109	;'m'
  7653  00EB83  65                 	db	101	;'e'
  7654  00EB84  6E                 	db	110	;'n'
  7655  00EB85  74                 	db	116	;'t'
  7656  00EB86  73                 	db	115	;'s'
  7657  00EB87  20                 	db	32
  7658  00EB88  61                 	db	97	;'a'
  7659  00EB89  6E                 	db	110	;'n'
  7660  00EB8A  64                 	db	100	;'d'
  7661  00EB8B  20                 	db	32
  7662  00EB8C  63                 	db	99	;'c'
  7663  00EB8D  61                 	db	97	;'a'
  7664  00EB8E  6C                 	db	108	;'l'
  7665  00EB8F  63                 	db	99	;'c'
  7666  00EB90  75                 	db	117	;'u'
  7667  00EB91  6C                 	db	108	;'l'
  7668  00EB92  61                 	db	97	;'a'
  7669  00EB93  74                 	db	116	;'t'
  7670  00EB94  69                 	db	105	;'i'
  7671  00EB95  6F                 	db	111	;'o'
  7672  00EB96  6E                 	db	110	;'n'
  7673  00EB97  73                 	db	115	;'s'
  7674  00EB98  0A                 	db	10
  7675  00EB99  0D                 	db	13
  7676  00EB9A  20                 	db	32
  7677  00EB9B  20                 	db	32
  7678  00EB9C  20                 	db	32
  7679  00EB9D  4F                 	db	79	;'O'
  7680  00EB9E  75                 	db	117	;'u'
  7681  00EB9F  74                 	db	116	;'t'
  7682  00EBA0  70                 	db	112	;'p'
  7683  00EBA1  75                 	db	117	;'u'
  7684  00EBA2  74                 	db	116	;'t'
  7685  00EBA3  20                 	db	32
  7686  00EBA4  43                 	db	67	;'C'
  7687  00EBA5  6F                 	db	111	;'o'
  7688  00EBA6  6E                 	db	110	;'n'
  7689  00EBA7  74                 	db	116	;'t'
  7690  00EBA8  72                 	db	114	;'r'
  7691  00EBA9  6F                 	db	111	;'o'
  7692  00EBAA  6C                 	db	108	;'l'
  7693  00EBAB  20                 	db	32
  7694  00EBAC  43                 	db	67	;'C'
  7695  00EBAD  6F                 	db	111	;'o'
  7696  00EBAE  6D                 	db	109	;'m'
  7697  00EBAF  6D                 	db	109	;'m'
  7698  00EBB0  61                 	db	97	;'a'
  7699  00EBB1  6E                 	db	110	;'n'
  7700  00EBB2  64                 	db	100	;'d'
  7701  00EBB3  73                 	db	115	;'s'
  7702  00EBB4  3A                 	db	58	;':'
  7703  00EBB5  20                 	db	32
  7704  00EBB6  43                 	db	67	;'C'
  7705  00EBB7  6F                 	db	111	;'o'
  7706  00EBB8  6E                 	db	110	;'n'
  7707  00EBB9  74                 	db	116	;'t'
  7708  00EBBA  72                 	db	114	;'r'
  7709  00EBBB  6F                 	db	111	;'o'
  7710  00EBBC  6C                 	db	108	;'l'
  7711  00EBBD  20                 	db	32
  7712  00EBBE  74                 	db	116	;'t'
  7713  00EBBF  68                 	db	104	;'h'
  7714  00EBC0  65                 	db	101	;'e'
  7715  00EBC1  20                 	db	32
  7716  00EBC2  6F                 	db	111	;'o'
  7717  00EBC3  75                 	db	117	;'u'
  7718  00EBC4  74                 	db	116	;'t'
  7719  00EBC5  70                 	db	112	;'p'
  7720  00EBC6  75                 	db	117	;'u'
  7721  00EBC7  74                 	db	116	;'t'
  7722  00EBC8  20                 	db	32
  7723  00EBC9  73                 	db	115	;'s'
  7724  00EBCA  74                 	db	116	;'t'
  7725  00EBCB  61                 	db	97	;'a'
  7726  00EBCC  74                 	db	116	;'t'
  7727  00EBCD  65                 	db	101	;'e'
  7728  00EBCE  20                 	db	32
  7729  00EBCF  61                 	db	97	;'a'
  7730  00EBD0  6E                 	db	110	;'n'
  7731  00EBD1  64                 	db	100	;'d'
  7732  00EBD2  20                 	db	32
  7733  00EBD3  64                 	db	100	;'d'
  7734  00EBD4  69                 	db	105	;'i'
  7735  00EBD5  6D                 	db	109	;'m'
  7736  00EBD6  6D                 	db	109	;'m'
  7737  00EBD7  69                 	db	105	;'i'
  7738  00EBD8  6E                 	db	110	;'n'
  7739  00EBD9  67                 	db	103	;'g'
  7740  00EBDA  20                 	db	32
  7741  00EBDB  66                 	db	102	;'f'
  7742  00EBDC  65                 	db	101	;'e'
  7743  00EBDD  61                 	db	97	;'a'
  7744  00EBDE  74                 	db	116	;'t'
  7745  00EBDF  75                 	db	117	;'u'
  7746  00EBE0  72                 	db	114	;'r'
  7747  00EBE1  65                 	db	101	;'e'
  7748  00EBE2  73                 	db	115	;'s'
  7749  00EBE3  0A                 	db	10
  7750  00EBE4  0D                 	db	13
  7751  00EBE5  0A                 	db	10
  7752  00EBE6  0D                 	db	13
  7753  00EBE7  27                 	db	39
  7754  00EBE8  48                 	db	72	;'H'
  7755  00EBE9  65                 	db	101	;'e'
  7756  00EBEA  6C                 	db	108	;'l'
  7757  00EBEB  70                 	db	112	;'p'
  7758  00EBEC  20                 	db	32
  7759  00EBED  41                 	db	65	;'A'
  7760  00EBEE  6C                 	db	108	;'l'
  7761  00EBEF  6C                 	db	108	;'l'
  7762  00EBF0  27                 	db	39
  7763  00EBF1  20                 	db	32
  7764  00EBF2  77                 	db	119	;'w'
  7765  00EBF3  69                 	db	105	;'i'
  7766  00EBF4  6C                 	db	108	;'l'
  7767  00EBF5  6C                 	db	108	;'l'
  7768  00EBF6  20                 	db	32
  7769  00EBF7  6C                 	db	108	;'l'
  7770  00EBF8  69                 	db	105	;'i'
  7771  00EBF9  73                 	db	115	;'s'
  7772  00EBFA  74                 	db	116	;'t'
  7773  00EBFB  20                 	db	32
  7774  00EBFC  61                 	db	97	;'a'
  7775  00EBFD  6C                 	db	108	;'l'
  7776  00EBFE  6C                 	db	108	;'l'
  7777  00EBFF  20                 	db	32
  7778  00EC00  63                 	db	99	;'c'
  7779  00EC01  6F                 	db	111	;'o'
  7780  00EC02  6D                 	db	109	;'m'
  7781  00EC03  6D                 	db	109	;'m'
  7782  00EC04  61                 	db	97	;'a'
  7783  00EC05  6E                 	db	110	;'n'
  7784  00EC06  64                 	db	100	;'d'
  7785  00EC07  73                 	db	115	;'s'
  7786  00EC08  0A                 	db	10
  7787  00EC09  0D                 	db	13
  7788  00EC0A  00                 	db	0
  7789  00EC0B                     STR_171:
  7790  00EC0B  20                 	db	32
  7791  00EC0C  20                 	db	32
  7792  00EC0D  20                 	db	32
  7793  00EC0E  20                 	db	32
  7794  00EC0F  5F                 	db	95	;'_'
  7795  00EC10  20                 	db	32
  7796  00EC11  20                 	db	32
  7797  00EC12  20                 	db	32
  7798  00EC13  5F                 	db	95	;'_'
  7799  00EC14  5F                 	db	95	;'_'
  7800  00EC15  5F                 	db	95	;'_'
  7801  00EC16  20                 	db	32
  7802  00EC17  20                 	db	32
  7803  00EC18  20                 	db	32
  7804  00EC19  5F                 	db	95	;'_'
  7805  00EC1A  5F                 	db	95	;'_'
  7806  00EC1B  5F                 	db	95	;'_'
  7807  00EC1C  20                 	db	32
  7808  00EC1D  20                 	db	32
  7809  00EC1E  20                 	db	32
  7810  00EC1F  20                 	db	32
  7811  00EC20  20                 	db	32
  7812  00EC21  20                 	db	32
  7813  00EC22  20                 	db	32
  7814  00EC23  20                 	db	32
  7815  00EC24  20                 	db	32
  7816  00EC25  20                 	db	32
  7817  00EC26  20                 	db	32
  7818  00EC27  20                 	db	32
  7819  00EC28  20                 	db	32
  7820  00EC29  20                 	db	32
  7821  00EC2A  20                 	db	32
  7822  00EC2B  20                 	db	32
  7823  00EC2C  20                 	db	32
  7824  00EC2D  20                 	db	32
  7825  00EC2E  20                 	db	32
  7826  00EC2F  20                 	db	32
  7827  00EC30  20                 	db	32
  7828  00EC31  20                 	db	32
  7829  00EC32  5F                 	db	95	;'_'
  7830  00EC33  5F                 	db	95	;'_'
  7831  00EC34  20                 	db	32
  7832  00EC35  20                 	db	32
  7833  00EC36  5F                 	db	95	;'_'
  7834  00EC37  5F                 	db	95	;'_'
  7835  00EC38  20                 	db	32
  7836  00EC39  20                 	db	32
  7837  00EC3A  20                 	db	32
  7838  00EC3B  20                 	db	32
  7839  00EC3C  20                 	db	32
  7840  00EC3D  5F                 	db	95	;'_'
  7841  00EC3E  20                 	db	32
  7842  00EC3F  20                 	db	32
  7843  00EC40  20                 	db	32
  7844  00EC41  20                 	db	32
  7845  00EC42  20                 	db	32
  7846  00EC43  20                 	db	32
  7847  00EC44  20                 	db	32
  7848  00EC45  20                 	db	32
  7849  00EC46  20                 	db	32
  7850  00EC47  20                 	db	32
  7851  00EC48  20                 	db	32
  7852  00EC49  20                 	db	32
  7853  00EC4A  20                 	db	32
  7854  00EC4B  20                 	db	32
  7855  00EC4C  20                 	db	32
  7856  00EC4D  20                 	db	32
  7857  00EC4E  20                 	db	32
  7858  00EC4F  20                 	db	32
  7859  00EC50  20                 	db	32
  7860  00EC51  20                 	db	32
  7861  00EC52  20                 	db	32
  7862  00EC53  20                 	db	32
  7863  00EC54  20                 	db	32
  7864  00EC55  20                 	db	32
  7865  00EC56  20                 	db	32
  7866  00EC57  20                 	db	32
  7867  00EC58  5F                 	db	95	;'_'
  7868  00EC59  20                 	db	32
  7869  00EC5A  20                 	db	32
  7870  00EC5B  20                 	db	32
  7871  00EC5C  5F                 	db	95	;'_'
  7872  00EC5D  5F                 	db	95	;'_'
  7873  00EC5E  5F                 	db	95	;'_'
  7874  00EC5F  20                 	db	32
  7875  00EC60  20                 	db	32
  7876  00EC61  5F                 	db	95	;'_'
  7877  00EC62  20                 	db	32
  7878  00EC63  20                 	db	32
  7879  00EC64  20                 	db	32
  7880  00EC65  20                 	db	32
  7881  00EC66  20                 	db	32
  7882  00EC67  20                 	db	32
  7883  00EC68  0A                 	db	10
  7884  00EC69  0D                 	db	13
  7885  00EC6A  20                 	db	32
  7886  00EC6B  20                 	db	32
  7887  00EC6C  20                 	db	32
  7888  00EC6D  2F                 	db	47
  7889  00EC6E  5F                 	db	95	;'_'
  7890  00EC6F  5C                 	db	92	;'\'
  7891  00EC70  20                 	db	32
  7892  00EC71  2F                 	db	47
  7893  00EC72  20                 	db	32
  7894  00EC73  5F                 	db	95	;'_'
  7895  00EC74  5F                 	db	95	;'_'
  7896  00EC75  7C                 	db	124
  7897  00EC76  20                 	db	32
  7898  00EC77  7C                 	db	124
  7899  00EC78  20                 	db	32
  7900  00EC79  5F                 	db	95	;'_'
  7901  00EC7A  20                 	db	32
  7902  00EC7B  5C                 	db	92	;'\'
  7903  00EC7C  5F                 	db	95	;'_'
  7904  00EC7D  5F                 	db	95	;'_'
  7905  00EC7E  5F                 	db	95	;'_'
  7906  00EC7F  5F                 	db	95	;'_'
  7907  00EC80  5F                 	db	95	;'_'
  7908  00EC81  20                 	db	32
  7909  00EC82  5F                 	db	95	;'_'
  7910  00EC83  5F                 	db	95	;'_'
  7911  00EC84  20                 	db	32
  7912  00EC85  5F                 	db	95	;'_'
  7913  00EC86  5F                 	db	95	;'_'
  7914  00EC87  5F                 	db	95	;'_'
  7915  00EC88  5F                 	db	95	;'_'
  7916  00EC89  5F                 	db	95	;'_'
  7917  00EC8A  20                 	db	32
  7918  00EC8B  5F                 	db	95	;'_'
  7919  00EC8C  20                 	db	32
  7920  00EC8D  5F                 	db	95	;'_'
  7921  00EC8E  20                 	db	32
  7922  00EC8F  20                 	db	32
  7923  00EC90  7C                 	db	124
  7924  00EC91  20                 	db	32
  7925  00EC92  20                 	db	32
  7926  00EC93  5C                 	db	92	;'\'
  7927  00EC94  2F                 	db	47
  7928  00EC95  20                 	db	32
  7929  00EC96  20                 	db	32
  7930  00EC97  7C                 	db	124
  7931  00EC98  5F                 	db	95	;'_'
  7932  00EC99  5F                 	db	95	;'_'
  7933  00EC9A  5F                 	db	95	;'_'
  7934  00EC9B  7C                 	db	124
  7935  00EC9C  20                 	db	32
  7936  00EC9D  7C                 	db	124
  7937  00EC9E  5F                 	db	95	;'_'
  7938  00EC9F  20                 	db	32
  7939  00ECA0  5F                 	db	95	;'_'
  7940  00ECA1  5F                 	db	95	;'_'
  7941  00ECA2  5F                 	db	95	;'_'
  7942  00ECA3  20                 	db	32
  7943  00ECA4  5F                 	db	95	;'_'
  7944  00ECA5  20                 	db	32
  7945  00ECA6  5F                 	db	95	;'_'
  7946  00ECA7  20                 	db	32
  7947  00ECA8  20                 	db	32
  7948  00ECA9  20                 	db	32
  7949  00ECAA  5F                 	db	95	;'_'
  7950  00ECAB  5F                 	db	95	;'_'
  7951  00ECAC  20                 	db	32
  7952  00ECAD  5F                 	db	95	;'_'
  7953  00ECAE  20                 	db	32
  7954  00ECAF  5F                 	db	95	;'_'
  7955  00ECB0  20                 	db	32
  7956  00ECB1  5F                 	db	95	;'_'
  7957  00ECB2  20                 	db	32
  7958  00ECB3  20                 	db	32
  7959  00ECB4  5F                 	db	95	;'_'
  7960  00ECB5  5F                 	db	95	;'_'
  7961  00ECB6  7C                 	db	124
  7962  00ECB7  20                 	db	32
  7963  00ECB8  7C                 	db	124
  7964  00ECB9  20                 	db	32
  7965  00ECBA  7C                 	db	124
  7966  00ECBB  20                 	db	32
  7967  00ECBC  20                 	db	32
  7968  00ECBD  20                 	db	32
  7969  00ECBE  5C                 	db	92	;'\'
  7970  00ECBF  28                 	db	40
  7971  00ECC0  5F                 	db	95	;'_'
  7972  00ECC1  29                 	db	41
  7973  00ECC2  5F                 	db	95	;'_'
  7974  00ECC3  20                 	db	32
  7975  00ECC4  5F                 	db	95	;'_'
  7976  00ECC5  5F                 	db	95	;'_'
  7977  00ECC6  20                 	db	32
  7978  00ECC7  20                 	db	32
  7979  00ECC8  5F                 	db	95	;'_'
  7980  00ECC9  20                 	db	32
  7981  00ECCA  5F                 	db	95	;'_'
  7982  00ECCB  5F                 	db	95	;'_'
  7983  00ECCC  20                 	db	32
  7984  00ECCD  20                 	db	32
  7985  00ECCE  5F                 	db	95	;'_'
  7986  00ECCF  5F                 	db	95	;'_'
  7987  00ECD0  5F                 	db	95	;'_'
  7988  00ECD1  20                 	db	32
  7989  00ECD2  5F                 	db	95	;'_'
  7990  00ECD3  20                 	db	32
  7991  00ECD4  5F                 	db	95	;'_'
  7992  00ECD5  20                 	db	32
  7993  00ECD6  0A                 	db	10
  7994  00ECD7  0D                 	db	13
  7995  00ECD8  20                 	db	32
  7996  00ECD9  20                 	db	32
  7997  00ECDA  2F                 	db	47
  7998  00ECDB  20                 	db	32
  7999  00ECDC  5F                 	db	95	;'_'
  8000  00ECDD  20                 	db	32
  8001  00ECDE  5C                 	db	92	;'\'
  8002  00ECDF  20                 	db	32
  8003  00ECE0  28                 	db	40
  8004  00ECE1  5F                 	db	95	;'_'
  8005  00ECE2  5F                 	db	95	;'_'
  8006  00ECE3  20                 	db	32
  8007  00ECE4  20                 	db	32
  8008  00ECE5  7C                 	db	124
  8009  00ECE6  20                 	db	32
  8010  00ECE7  20                 	db	32
  8011  00ECE8  5F                 	db	95	;'_'
  8012  00ECE9  2F                 	db	47
  8013  00ECEA  20                 	db	32
  8014  00ECEB  5F                 	db	95	;'_'
  8015  00ECEC  20                 	db	32
  8016  00ECED  5C                 	db	92	;'\'
  8017  00ECEE  20                 	db	32
  8018  00ECEF  56                 	db	86	;'V'
  8019  00ECF0  20                 	db	32
  8020  00ECF1  20                 	db	32
  8021  00ECF2  56                 	db	86	;'V'
  8022  00ECF3  20                 	db	32
  8023  00ECF4  2F                 	db	47
  8024  00ECF5  20                 	db	32
  8025  00ECF6  2D                 	db	45
  8026  00ECF7  5F                 	db	95	;'_'
  8027  00ECF8  29                 	db	41
  8028  00ECF9  20                 	db	32
  8029  00ECFA  27                 	db	39
  8030  00ECFB  5F                 	db	95	;'_'
  8031  00ECFC  7C                 	db	124
  8032  00ECFD  20                 	db	32
  8033  00ECFE  7C                 	db	124
  8034  00ECFF  20                 	db	32
  8035  00ED00  7C                 	db	124
  8036  00ED01  5C                 	db	92	;'\'
  8037  00ED02  2F                 	db	47
  8038  00ED03  7C                 	db	124
  8039  00ED04  20                 	db	32
  8040  00ED05  2F                 	db	47
  8041  00ED06  20                 	db	32
  8042  00ED07  2D                 	db	45
  8043  00ED08  5F                 	db	95	;'_'
  8044  00ED09  29                 	db	41
  8045  00ED0A  20                 	db	32
  8046  00ED0B  20                 	db	32
  8047  00ED0C  5F                 	db	95	;'_'
  8048  00ED0D  2F                 	db	47
  8049  00ED0E  20                 	db	32
  8050  00ED0F  2D                 	db	45
  8051  00ED10  5F                 	db	95	;'_'
  8052  00ED11  29                 	db	41
  8053  00ED12  20                 	db	32
  8054  00ED13  27                 	db	39
  8055  00ED14  5F                 	db	95	;'_'
  8056  00ED15  7C                 	db	124
  8057  00ED16  20                 	db	32
  8058  00ED17  2F                 	db	47
  8059  00ED18  20                 	db	32
  8060  00ED19  5F                 	db	95	;'_'
  8061  00ED1A  60                 	db	96	;'`'
  8062  00ED1B  20                 	db	32
  8063  00ED1C  7C                 	db	124
  8064  00ED1D  20                 	db	32
  8065  00ED1E  27                 	db	39
  8066  00ED1F  20                 	db	32
  8067  00ED20  5C                 	db	92	;'\'
  8068  00ED21  2F                 	db	47
  8069  00ED22  20                 	db	32
  8070  00ED23  5F                 	db	95	;'_'
  8071  00ED24  60                 	db	96	;'`'
  8072  00ED25  20                 	db	32
  8073  00ED26  7C                 	db	124
  8074  00ED27  20                 	db	32
  8075  00ED28  7C                 	db	124
  8076  00ED29  20                 	db	32
  8077  00ED2A  7C                 	db	124
  8078  00ED2B  29                 	db	41
  8079  00ED2C  20                 	db	32
  8080  00ED2D  7C                 	db	124
  8081  00ED2E  20                 	db	32
  8082  00ED2F  7C                 	db	124
  8083  00ED30  20                 	db	32
  8084  00ED31  27                 	db	39
  8085  00ED32  20                 	db	32
  8086  00ED33  20                 	db	32
  8087  00ED34  5C                 	db	92	;'\'
  8088  00ED35  7C                 	db	124
  8089  00ED36  20                 	db	32
  8090  00ED37  27                 	db	39
  8091  00ED38  20                 	db	32
  8092  00ED39  20                 	db	32
  8093  00ED3A  5C                 	db	92	;'\'
  8094  00ED3B  2F                 	db	47
  8095  00ED3C  20                 	db	32
  8096  00ED3D  2D                 	db	45
  8097  00ED3E  5F                 	db	95	;'_'
  8098  00ED3F  29                 	db	41
  8099  00ED40  20                 	db	32
  8100  00ED41  27                 	db	39
  8101  00ED42  5F                 	db	95	;'_'
  8102  00ED43  7C                 	db	124
  8103  00ED44  0A                 	db	10
  8104  00ED45  0D                 	db	13
  8105  00ED46  20                 	db	32
  8106  00ED47  2F                 	db	47
  8107  00ED48  5F                 	db	95	;'_'
  8108  00ED49  2F                 	db	47
  8109  00ED4A  20                 	db	32
  8110  00ED4B  5C                 	db	92	;'\'
  8111  00ED4C  5F                 	db	95	;'_'
  8112  00ED4D  5C                 	db	92	;'\'
  8113  00ED4E  5F                 	db	95	;'_'
  8114  00ED4F  5F                 	db	95	;'_'
  8115  00ED50  5F                 	db	95	;'_'
  8116  00ED51  7C                 	db	124
  8117  00ED52  20                 	db	32
  8118  00ED53  7C                 	db	124
  8119  00ED54  5F                 	db	95	;'_'
  8120  00ED55  7C                 	db	124
  8121  00ED56  20                 	db	32
  8122  00ED57  5C                 	db	92	;'\'
  8123  00ED58  5F                 	db	95	;'_'
  8124  00ED59  5F                 	db	95	;'_'
  8125  00ED5A  5F                 	db	95	;'_'
  8126  00ED5B  2F                 	db	47
  8127  00ED5C  5C                 	db	92	;'\'
  8128  00ED5D  5F                 	db	95	;'_'
  8129  00ED5E  2F                 	db	47
  8130  00ED5F  5C                 	db	92	;'\'
  8131  00ED60  5F                 	db	95	;'_'
  8132  00ED61  2F                 	db	47
  8133  00ED62  5C                 	db	92	;'\'
  8134  00ED63  5F                 	db	95	;'_'
  8135  00ED64  5F                 	db	95	;'_'
  8136  00ED65  5F                 	db	95	;'_'
  8137  00ED66  7C                 	db	124
  8138  00ED67  5F                 	db	95	;'_'
  8139  00ED68  7C                 	db	124
  8140  00ED69  20                 	db	32
  8141  00ED6A  20                 	db	32
  8142  00ED6B  20                 	db	32
  8143  00ED6C  7C                 	db	124
  8144  00ED6D  5F                 	db	95	;'_'
  8145  00ED6E  7C                 	db	124
  8146  00ED6F  20                 	db	32
  8147  00ED70  20                 	db	32
  8148  00ED71  7C                 	db	124
  8149  00ED72  5F                 	db	95	;'_'
  8150  00ED73  5C                 	db	92	;'\'
  8151  00ED74  5F                 	db	95	;'_'
  8152  00ED75  5F                 	db	95	;'_'
  8153  00ED76  5F                 	db	95	;'_'
  8154  00ED77  7C                 	db	124
  8155  00ED78  5C                 	db	92	;'\'
  8156  00ED79  5F                 	db	95	;'_'
  8157  00ED7A  5F                 	db	95	;'_'
  8158  00ED7B  5C                 	db	92	;'\'
  8159  00ED7C  5F                 	db	95	;'_'
  8160  00ED7D  5F                 	db	95	;'_'
  8161  00ED7E  5F                 	db	95	;'_'
  8162  00ED7F  7C                 	db	124
  8163  00ED80  5F                 	db	95	;'_'
  8164  00ED81  7C                 	db	124
  8165  00ED82  20                 	db	32
  8166  00ED83  20                 	db	32
  8167  00ED84  20                 	db	32
  8168  00ED85  5C                 	db	92	;'\'
  8169  00ED86  5F                 	db	95	;'_'
  8170  00ED87  5F                 	db	95	;'_'
  8171  00ED88  2C                 	db	44
  8172  00ED89  5F                 	db	95	;'_'
  8173  00ED8A  7C                 	db	124
  8174  00ED8B  5F                 	db	95	;'_'
  8175  00ED8C  7C                 	db	124
  8176  00ED8D  7C                 	db	124
  8177  00ED8E  5F                 	db	95	;'_'
  8178  00ED8F  5C                 	db	92	;'\'
  8179  00ED90  5F                 	db	95	;'_'
  8180  00ED91  5F                 	db	95	;'_'
  8181  00ED92  2C                 	db	44
  8182  00ED93  5F                 	db	95	;'_'
  8183  00ED94  7C                 	db	124
  8184  00ED95  20                 	db	32
  8185  00ED96  7C                 	db	124
  8186  00ED97  5F                 	db	95	;'_'
  8187  00ED98  5F                 	db	95	;'_'
  8188  00ED99  5F                 	db	95	;'_'
  8189  00ED9A  2F                 	db	47
  8190  00ED9B  7C                 	db	124
  8191  00ED9C  5F                 	db	95	;'_'
  8192  00ED9D  7C                 	db	124
  8193  00ED9E  5F                 	db	95	;'_'
  8194  00ED9F  7C                 	db	124
  8195  00EDA0  5F                 	db	95	;'_'
  8196  00EDA1  7C                 	db	124
  8197  00EDA2  5F                 	db	95	;'_'
  8198  00EDA3  7C                 	db	124
  8199  00EDA4  5F                 	db	95	;'_'
  8200  00EDA5  7C                 	db	124
  8201  00EDA6  5F                 	db	95	;'_'
  8202  00EDA7  7C                 	db	124
  8203  00EDA8  5F                 	db	95	;'_'
  8204  00EDA9  5C                 	db	92	;'\'
  8205  00EDAA  5F                 	db	95	;'_'
  8206  00EDAB  5F                 	db	95	;'_'
  8207  00EDAC  5F                 	db	95	;'_'
  8208  00EDAD  7C                 	db	124
  8209  00EDAE  5F                 	db	95	;'_'
  8210  00EDAF  7C                 	db	124
  8211  00EDB0  20                 	db	32
  8212  00EDB1  20                 	db	32
  8213  00EDB2  0A                 	db	10
  8214  00EDB3  0D                 	db	13
  8215  00EDB4  00                 	db	0
  8216  00EDB5  20                 	db	32
  8217  00EDB6  20                 	db	32
  8218  00EDB7  20                 	db	32
  8219  00EDB8  20                 	db	32
  8220  00EDB9  42                 	db	66	;'B'
  8221  00EDBA  6F                 	db	111	;'o'
  8222  00EDBB  6F                 	db	111	;'o'
  8223  00EDBC  74                 	db	116	;'t'
  8224  00EDBD  20                 	db	32
  8225  00EDBE  63                 	db	99	;'c'
  8226  00EDBF  6F                 	db	111	;'o'
  8227  00EDC0  6D                 	db	109	;'m'
  8228  00EDC1  70                 	db	112	;'p'
  8229  00EDC2  6C                 	db	108	;'l'
  8230  00EDC3  65                 	db	101	;'e'
  8231  00EDC4  74                 	db	116	;'t'
  8232  00EDC5  65                 	db	101	;'e'
  8233  00EDC6  0A                 	db	10
  8234  00EDC7  0D                 	db	13
  8235  00EDC8  20                 	db	32
  8236  00EDC9  20                 	db	32
  8237  00EDCA  20                 	db	32
  8238  00EDCB  20                 	db	32
  8239  00EDCC  50                 	db	80	;'P'
  8240  00EDCD  49                 	db	73	;'I'
  8241  00EDCE  43                 	db	67	;'C'
  8242  00EDCF  31                 	db	49	;'1'
  8243  00EDD0  38                 	db	56	;'8'
  8244  00EDD1  46                 	db	70	;'F'
  8245  00EDD2  36                 	db	54	;'6'
  8246  00EDD3  37                 	db	55	;'7'
  8247  00EDD4  4B                 	db	75	;'K'
  8248  00EDD5  34                 	db	52	;'4'
  8249  00EDD6  30                 	db	48	;'0'
  8250  00EDD7  20                 	db	32
  8251  00EDD8  6D                 	db	109	;'m'
  8252  00EDD9  54                 	db	84	;'T'
  8253  00EDDA  6F                 	db	111	;'o'
  8254  00EDDB  75                 	db	117	;'u'
  8255  00EDDC  63                 	db	99	;'c'
  8256  00EDDD  68                 	db	104	;'h'
  8257  00EDDE  20                 	db	32
  8258  00EDDF  54                 	db	84	;'T'
  8259  00EDE0  65                 	db	101	;'e'
  8260  00EDE1  73                 	db	115	;'s'
  8261  00EDE2  74                 	db	116	;'t'
  8262  00EDE3  20                 	db	32
  8263  00EDE4  42                 	db	66	;'B'
  8264  00EDE5  6F                 	db	111	;'o'
  8265  00EDE6  61                 	db	97	;'a'
  8266  00EDE7  72                 	db	114	;'r'
  8267  00EDE8  64                 	db	100	;'d'
  8268  00EDE9  0A                 	db	10
  8269  00EDEA  0D                 	db	13
  8270  00EDEB  20                 	db	32
  8271  00EDEC  20                 	db	32
  8272  00EDED  20                 	db	32
  8273  00EDEE  20                 	db	32
  8274  00EDEF  45                 	db	69	;'E'
  8275  00EDF0  76                 	db	118	;'v'
  8276  00EDF1  61                 	db	97	;'a'
  8277  00EDF2  6C                 	db	108	;'l'
  8278  00EDF3  75                 	db	117	;'u'
  8279  00EDF4  61                 	db	97	;'a'
  8280  00EDF5  74                 	db	116	;'t'
  8281  00EDF6  65                 	db	101	;'e'
  8282  00EDF7  73                 	db	115	;'s'
  8283  00EDF8  20                 	db	32
  8284  00EDF9  74                 	db	116	;'t'
  8285  00EDFA  68                 	db	104	;'h'
  8286  00EDFB  65                 	db	101	;'e'
  8287  00EDFC  20                 	db	32
  8288  00EDFD  6D                 	db	109	;'m'
  8289  00EDFE  54                 	db	84	;'T'
  8290  00EDFF  6F                 	db	111	;'o'
  8291  00EE00  75                 	db	117	;'u'
  8292  00EE01  63                 	db	99	;'c'
  8293  00EE02  68                 	db	104	;'h'
  8294  00EE03  20                 	db	32
  8295  00EE04  63                 	db	99	;'c'
  8296  00EE05  61                 	db	97	;'a'
  8297  00EE06  70                 	db	112	;'p'
  8298  00EE07  61                 	db	97	;'a'
  8299  00EE08  63                 	db	99	;'c'
  8300  00EE09  69                 	db	105	;'i'
  8301  00EE0A  74                 	db	116	;'t'
  8302  00EE0B  69                 	db	105	;'i'
  8303  00EE0C  76                 	db	118	;'v'
  8304  00EE0D  65                 	db	101	;'e'
  8305  00EE0E  20                 	db	32
  8306  00EE0F  74                 	db	116	;'t'
  8307  00EE10  6F                 	db	111	;'o'
  8308  00EE11  75                 	db	117	;'u'
  8309  00EE12  63                 	db	99	;'c'
  8310  00EE13  68                 	db	104	;'h'
  8311  00EE14  20                 	db	32
  8312  00EE15  6C                 	db	108	;'l'
  8313  00EE16  69                 	db	105	;'i'
  8314  00EE17  62                 	db	98	;'b'
  8315  00EE18  72                 	db	114	;'r'
  8316  00EE19  61                 	db	97	;'a'
  8317  00EE1A  72                 	db	114	;'r'
  8318  00EE1B  79                 	db	121	;'y'
  8319  00EE1C  20                 	db	32
  8320  00EE1D  64                 	db	100	;'d'
  8321  00EE1E  69                 	db	105	;'i'
  8322  00EE1F  73                 	db	115	;'s'
  8323  00EE20  74                 	db	116	;'t'
  8324  00EE21  72                 	db	114	;'r'
  8325  00EE22  69                 	db	105	;'i'
  8326  00EE23  62                 	db	98	;'b'
  8327  00EE24  75                 	db	117	;'u'
  8328  00EE25  74                 	db	116	;'t'
  8329  00EE26  65                 	db	101	;'e'
  8330  00EE27  64                 	db	100	;'d'
  8331  00EE28  20                 	db	32
  8332  00EE29  62                 	db	98	;'b'
  8333  00EE2A  79                 	db	121	;'y'
  8334  00EE2B  20                 	db	32
  8335  00EE2C  4D                 	db	77	;'M'
  8336  00EE2D  69                 	db	105	;'i'
  8337  00EE2E  63                 	db	99	;'c'
  8338  00EE2F  72                 	db	114	;'r'
  8339  00EE30  6F                 	db	111	;'o'
  8340  00EE31  63                 	db	99	;'c'
  8341  00EE32  68                 	db	104	;'h'
  8342  00EE33  69                 	db	105	;'i'
  8343  00EE34  70                 	db	112	;'p'
  8344  00EE35  0A                 	db	10
  8345  00EE36  0D                 	db	13
  8346  00EE37  20                 	db	32
  8347  00EE38  20                 	db	32
  8348  00EE39  20                 	db	32
  8349  00EE3A  20                 	db	32
  8350  00EE3B  53                 	db	83	;'S'
  8351  00EE3C  65                 	db	101	;'e'
  8352  00EE3D  74                 	db	116	;'t'
  8353  00EE3E  73                 	db	115	;'s'
  8354  00EE3F  20                 	db	32
  8355  00EE40  74                 	db	116	;'t'
  8356  00EE41  68                 	db	104	;'h'
  8357  00EE42  65                 	db	101	;'e'
  8358  00EE43  20                 	db	32
  8359  00EE44  73                 	db	115	;'s'
  8360  00EE45  74                 	db	116	;'t'
  8361  00EE46  61                 	db	97	;'a'
  8362  00EE47  74                 	db	116	;'t'
  8363  00EE48  65                 	db	101	;'e'
  8364  00EE49  20                 	db	32
  8365  00EE4A  6F                 	db	111	;'o'
  8366  00EE4B  66                 	db	102	;'f'
  8367  00EE4C  20                 	db	32
  8368  00EE4D  66                 	db	102	;'f'
  8369  00EE4E  69                 	db	105	;'i'
  8370  00EE4F  76                 	db	118	;'v'
  8371  00EE50  65                 	db	101	;'e'
  8372  00EE51  20                 	db	32
  8373  00EE52  4C                 	db	76	;'L'
  8374  00EE53  45                 	db	69	;'E'
  8375  00EE54  44                 	db	68	;'D'
  8376  00EE55  73                 	db	115	;'s'
  8377  00EE56  20                 	db	32
  8378  00EE57  62                 	db	98	;'b'
  8379  00EE58  61                 	db	97	;'a'
  8380  00EE59  73                 	db	115	;'s'
  8381  00EE5A  65                 	db	101	;'e'
  8382  00EE5B  64                 	db	100	;'d'
  8383  00EE5C  20                 	db	32
  8384  00EE5D  6F                 	db	111	;'o'
  8385  00EE5E  6E                 	db	110	;'n'
  8386  00EE5F  20                 	db	32
  8387  00EE60  6D                 	db	109	;'m'
  8388  00EE61  54                 	db	84	;'T'
  8389  00EE62  6F                 	db	111	;'o'
  8390  00EE63  75                 	db	117	;'u'
  8391  00EE64  63                 	db	99	;'c'
  8392  00EE65  68                 	db	104	;'h'
  8393  00EE66  20                 	db	32
  8394  00EE67  63                 	db	99	;'c'
  8395  00EE68  61                 	db	97	;'a'
  8396  00EE69  70                 	db	112	;'p'
  8397  00EE6A  61                 	db	97	;'a'
  8398  00EE6B  63                 	db	99	;'c'
  8399  00EE6C  69                 	db	105	;'i'
  8400  00EE6D  74                 	db	116	;'t'
  8401  00EE6E  69                 	db	105	;'i'
  8402  00EE6F  76                 	db	118	;'v'
  8403  00EE70  65                 	db	101	;'e'
  8404  00EE71  20                 	db	32
  8405  00EE72  70                 	db	112	;'p'
  8406  00EE73  75                 	db	117	;'u'
  8407  00EE74  73                 	db	115	;'s'
  8408  00EE75  68                 	db	104	;'h'
  8409  00EE76  62                 	db	98	;'b'
  8410  00EE77  75                 	db	117	;'u'
  8411  00EE78  74                 	db	116	;'t'
  8412  00EE79  74                 	db	116	;'t'
  8413  00EE7A  6F                 	db	111	;'o'
  8414  00EE7B  6E                 	db	110	;'n'
  8415  00EE7C  73                 	db	115	;'s'
  8416  00EE7D  0A                 	db	10
  8417  00EE7E  0D                 	db	13
  8418  00EE7F  20                 	db	32
  8419  00EE80  20                 	db	32
  8420  00EE81  20                 	db	32
  8421  00EE82  20                 	db	32
  8422  00EE83  42                 	db	66	;'B'
  8423  00EE84  61                 	db	97	;'a'
  8424  00EE85  75                 	db	117	;'u'
  8425  00EE86  64                 	db	100	;'d'
  8426  00EE87  20                 	db	32
  8427  00EE88  72                 	db	114	;'r'
  8428  00EE89  61                 	db	97	;'a'
  8429  00EE8A  74                 	db	116	;'t'
  8430  00EE8B  65                 	db	101	;'e'
  8431  00EE8C  3A                 	db	58	;':'
  8432  00EE8D  20                 	db	32
  8433  00EE8E  31                 	db	49	;'1'
  8434  00EE8F  31                 	db	49	;'1'
  8435  00EE90  35                 	db	53	;'5'
  8436  00EE91  32                 	db	50	;'2'
  8437  00EE92  30                 	db	48	;'0'
  8438  00EE93  30                 	db	48	;'0'
  8439  00EE94  20                 	db	32
  8440  00EE95  62                 	db	98	;'b'
  8441  00EE96  70                 	db	112	;'p'
  8442  00EE97  73                 	db	115	;'s'
  8443  00EE98  0A                 	db	10
  8444  00EE99  0D                 	db	13
  8445  00EE9A  20                 	db	32
  8446  00EE9B  20                 	db	32
  8447  00EE9C  20                 	db	32
  8448  00EE9D  20                 	db	32
  8449  00EE9E  4E                 	db	78	;'N'
  8450  00EE9F  6F                 	db	111	;'o'
  8451  00EEA0  20                 	db	32
  8452  00EEA1  70                 	db	112	;'p'
  8453  00EEA2  61                 	db	97	;'a'
  8454  00EEA3  72                 	db	114	;'r'
  8455  00EEA4  69                 	db	105	;'i'
  8456  00EEA5  74                 	db	116	;'t'
  8457  00EEA6  79                 	db	121	;'y'
  8458  00EEA7  2C                 	db	44
  8459  00EEA8  20                 	db	32
  8460  00EEA9  38                 	db	56	;'8'
  8461  00EEAA  20                 	db	32
  8462  00EEAB  62                 	db	98	;'b'
  8463  00EEAC  69                 	db	105	;'i'
  8464  00EEAD  74                 	db	116	;'t'
  8465  00EEAE  73                 	db	115	;'s'
  8466  00EEAF  2C                 	db	44
  8467  00EEB0  20                 	db	32
  8468  00EEB1  6E                 	db	110	;'n'
  8469  00EEB2  6F                 	db	111	;'o'
  8470  00EEB3  20                 	db	32
  8471  00EEB4  66                 	db	102	;'f'
  8472  00EEB5  6C                 	db	108	;'l'
  8473  00EEB6  6F                 	db	111	;'o'
  8474  00EEB7  77                 	db	119	;'w'
  8475  00EEB8  20                 	db	32
  8476  00EEB9  63                 	db	99	;'c'
  8477  00EEBA  6F                 	db	111	;'o'
  8478  00EEBB  6E                 	db	110	;'n'
  8479  00EEBC  74                 	db	116	;'t'
  8480  00EEBD  72                 	db	114	;'r'
  8481  00EEBE  6F                 	db	111	;'o'
  8482  00EEBF  6C                 	db	108	;'l'
  8483  00EEC0  2C                 	db	44
  8484  00EEC1  20                 	db	32
  8485  00EEC2  31                 	db	49	;'1'
  8486  00EEC3  20                 	db	32
  8487  00EEC4  73                 	db	115	;'s'
  8488  00EEC5  74                 	db	116	;'t'
  8489  00EEC6  6F                 	db	111	;'o'
  8490  00EEC7  70                 	db	112	;'p'
  8491  00EEC8  20                 	db	32
  8492  00EEC9  62                 	db	98	;'b'
  8493  00EECA  69                 	db	105	;'i'
  8494  00EECB  74                 	db	116	;'t'
  8495  00EECC  0A                 	db	10
  8496  00EECD  0D                 	db	13
  8497  00EECE  20                 	db	32
  8498  00EECF  20                 	db	32
  8499  00EED0  20                 	db	32
  8500  00EED1  20                 	db	32
  8501  00EED2  43                 	db	67	;'C'
  8502  00EED3  6F                 	db	111	;'o'
  8503  00EED4  6D                 	db	109	;'m'
  8504  00EED5  6D                 	db	109	;'m'
  8505  00EED6  61                 	db	97	;'a'
  8506  00EED7  6E                 	db	110	;'n'
  8507  00EED8  64                 	db	100	;'d'
  8508  00EED9  73                 	db	115	;'s'
  8509  00EEDA  20                 	db	32
  8510  00EEDB  61                 	db	97	;'a'
  8511  00EEDC  72                 	db	114	;'r'
  8512  00EEDD  65                 	db	101	;'e'
  8513  00EEDE  20                 	db	32
  8514  00EEDF  63                 	db	99	;'c'
  8515  00EEE0  61                 	db	97	;'a'
  8516  00EEE1  73                 	db	115	;'s'
  8517  00EEE2  65                 	db	101	;'e'
  8518  00EEE3  20                 	db	32
  8519  00EEE4  73                 	db	115	;'s'
  8520  00EEE5  65                 	db	101	;'e'
  8521  00EEE6  6E                 	db	110	;'n'
  8522  00EEE7  73                 	db	115	;'s'
  8523  00EEE8  69                 	db	105	;'i'
  8524  00EEE9  74                 	db	116	;'t'
  8525  00EEEA  69                 	db	105	;'i'
  8526  00EEEB  76                 	db	118	;'v'
  8527  00EEEC  65                 	db	101	;'e'
  8528  00EEED  0A                 	db	10
  8529  00EEEE  0D                 	db	13
  8530  00EEEF  20                 	db	32
  8531  00EEF0  20                 	db	32
  8532  00EEF1  20                 	db	32
  8533  00EEF2  20                 	db	32
  8534  00EEF3  45                 	db	69	;'E'
  8535  00EEF4  6E                 	db	110	;'n'
  8536  00EEF5  74                 	db	116	;'t'
  8537  00EEF6  65                 	db	101	;'e'
  8538  00EEF7  72                 	db	114	;'r'
  8539  00EEF8  20                 	db	32
  8540  00EEF9  61                 	db	97	;'a'
  8541  00EEFA  20                 	db	32
  8542  00EEFB  63                 	db	99	;'c'
  8543  00EEFC  6F                 	db	111	;'o'
  8544  00EEFD  6D                 	db	109	;'m'
  8545  00EEFE  6D                 	db	109	;'m'
  8546  00EEFF  61                 	db	97	;'a'
  8547  00EF00  6E                 	db	110	;'n'
  8548  00EF01  64                 	db	100	;'d'
  8549  00EF02  2C                 	db	44
  8550  00EF03  20                 	db	32
  8551  00EF04  6F                 	db	111	;'o'
  8552  00EF05  72                 	db	114	;'r'
  8553  00EF06  20                 	db	32
  8554  00EF07  65                 	db	101	;'e'
  8555  00EF08  6E                 	db	110	;'n'
  8556  00EF09  74                 	db	116	;'t'
  8557  00EF0A  65                 	db	101	;'e'
  8558  00EF0B  72                 	db	114	;'r'
  8559  00EF0C  20                 	db	32
  8560  00EF0D  48                 	db	72	;'H'
  8561  00EF0E  65                 	db	101	;'e'
  8562  00EF0F  6C                 	db	108	;'l'
  8563  00EF10  70                 	db	112	;'p'
  8564  00EF11  20                 	db	32
  8565  00EF12  66                 	db	102	;'f'
  8566  00EF13  6F                 	db	111	;'o'
  8567  00EF14  72                 	db	114	;'r'
  8568  00EF15  20                 	db	32
  8569  00EF16  6C                 	db	108	;'l'
  8570  00EF17  69                 	db	105	;'i'
  8571  00EF18  73                 	db	115	;'s'
  8572  00EF19  74                 	db	116	;'t'
  8573  00EF1A  20                 	db	32
  8574  00EF1B  6F                 	db	111	;'o'
  8575  00EF1C  66                 	db	102	;'f'
  8576  00EF1D  20                 	db	32
  8577  00EF1E  63                 	db	99	;'c'
  8578  00EF1F  6F                 	db	111	;'o'
  8579  00EF20  6D                 	db	109	;'m'
  8580  00EF21  6D                 	db	109	;'m'
  8581  00EF22  61                 	db	97	;'a'
  8582  00EF23  6E                 	db	110	;'n'
  8583  00EF24  64                 	db	100	;'d'
  8584  00EF25  73                 	db	115	;'s'
  8585  00EF26  0A                 	db	10
  8586  00EF27  0D                 	db	13
  8587  00EF28  00                 	db	0
  8588  00EF29                     STR_109:
  8589  00EF29  57                 	db	87	;'W'
  8590  00EF2A  41                 	db	65	;'A'
  8591  00EF2B  52                 	db	82	;'R'
  8592  00EF2C  4E                 	db	78	;'N'
  8593  00EF2D  49                 	db	73	;'I'
  8594  00EF2E  4E                 	db	78	;'N'
  8595  00EF2F  47                 	db	71	;'G'
  8596  00EF30  3A                 	db	58	;':'
  8597  00EF31  20                 	db	32
  8598  00EF32  55                 	db	85	;'U'
  8599  00EF33  73                 	db	115	;'s'
  8600  00EF34  69                 	db	105	;'i'
  8601  00EF35  6E                 	db	110	;'n'
  8602  00EF36  67                 	db	103	;'g'
  8603  00EF37  20                 	db	32
  8604  00EF38  74                 	db	116	;'t'
  8605  00EF39  68                 	db	104	;'h'
  8606  00EF3A  65                 	db	101	;'e'
  8607  00EF3B  20                 	db	32
  8608  00EF3C  64                 	db	100	;'d'
  8609  00EF3D  69                 	db	105	;'i'
  8610  00EF3E  6D                 	db	109	;'m'
  8611  00EF3F  6D                 	db	109	;'m'
  8612  00EF40  69                 	db	105	;'i'
  8613  00EF41  6E                 	db	110	;'n'
  8614  00EF42  67                 	db	103	;'g'
  8615  00EF43  20                 	db	32
  8616  00EF44  66                 	db	102	;'f'
  8617  00EF45  65                 	db	101	;'e'
  8618  00EF46  61                 	db	97	;'a'
  8619  00EF47  74                 	db	116	;'t'
  8620  00EF48  75                 	db	117	;'u'
  8621  00EF49  72                 	db	114	;'r'
  8622  00EF4A  65                 	db	101	;'e'
  8623  00EF4B  20                 	db	32
  8624  00EF4C  77                 	db	119	;'w'
  8625  00EF4D  69                 	db	105	;'i'
  8626  00EF4E  74                 	db	116	;'t'
  8627  00EF4F  68                 	db	104	;'h'
  8628  00EF50  20                 	db	32
  8629  00EF51  6C                 	db	108	;'l'
  8630  00EF52  6F                 	db	111	;'o'
  8631  00EF53  61                 	db	97	;'a'
  8632  00EF54  64                 	db	100	;'d'
  8633  00EF55  20                 	db	32
  8634  00EF56  64                 	db	100	;'d'
  8635  00EF57  65                 	db	101	;'e'
  8636  00EF58  76                 	db	118	;'v'
  8637  00EF59  69                 	db	105	;'i'
  8638  00EF5A  63                 	db	99	;'c'
  8639  00EF5B  65                 	db	101	;'e'
  8640  00EF5C  73                 	db	115	;'s'
  8641  00EF5D  20                 	db	32
  8642  00EF5E  6F                 	db	111	;'o'
  8643  00EF5F  74                 	db	116	;'t'
  8644  00EF60  68                 	db	104	;'h'
  8645  00EF61  65                 	db	101	;'e'
  8646  00EF62  72                 	db	114	;'r'
  8647  00EF63  20                 	db	32
  8648  00EF64  74                 	db	116	;'t'
  8649  00EF65  68                 	db	104	;'h'
  8650  00EF66  61                 	db	97	;'a'
  8651  00EF67  6E                 	db	110	;'n'
  8652  00EF68  20                 	db	32
  8653  00EF69  61                 	db	97	;'a'
  8654  00EF6A  20                 	db	32
  8655  00EF6B  6C                 	db	108	;'l'
  8656  00EF6C  69                 	db	105	;'i'
  8657  00EF6D  67                 	db	103	;'g'
  8658  00EF6E  68                 	db	104	;'h'
  8659  00EF6F  74                 	db	116	;'t'
  8660  00EF70  20                 	db	32
  8661  00EF71  62                 	db	98	;'b'
  8662  00EF72  75                 	db	117	;'u'
  8663  00EF73  6C                 	db	108	;'l'
  8664  00EF74  62                 	db	98	;'b'
  8665  00EF75  20                 	db	32
  8666  00EF76  63                 	db	99	;'c'
  8667  00EF77  61                 	db	97	;'a'
  8668  00EF78  6E                 	db	110	;'n'
  8669  00EF79  20                 	db	32
  8670  00EF7A  72                 	db	114	;'r'
  8671  00EF7B  65                 	db	101	;'e'
  8672  00EF7C  73                 	db	115	;'s'
  8673  00EF7D  75                 	db	117	;'u'
  8674  00EF7E  6C                 	db	108	;'l'
  8675  00EF7F  74                 	db	116	;'t'
  8676  00EF80  20                 	db	32
  8677  00EF81  69                 	db	105	;'i'
  8678  00EF82  6E                 	db	110	;'n'
  8679  00EF83  20                 	db	32
  8680  00EF84  64                 	db	100	;'d'
  8681  00EF85  65                 	db	101	;'e'
  8682  00EF86  76                 	db	118	;'v'
  8683  00EF87  69                 	db	105	;'i'
  8684  00EF88  63                 	db	99	;'c'
  8685  00EF89  65                 	db	101	;'e'
  8686  00EF8A  20                 	db	32
  8687  00EF8B  64                 	db	100	;'d'
  8688  00EF8C  61                 	db	97	;'a'
  8689  00EF8D  6D                 	db	109	;'m'
  8690  00EF8E  61                 	db	97	;'a'
  8691  00EF8F  67                 	db	103	;'g'
  8692  00EF90  65                 	db	101	;'e'
  8693  00EF91  00                 	db	0
  8694  00EF92                     STR_110:
  8695  00EF92  4F                 	db	79	;'O'
  8696  00EF93  6E                 	db	110	;'n'
  8697  00EF94  6C                 	db	108	;'l'
  8698  00EF95  79                 	db	121	;'y'
  8699  00EF96  20                 	db	32
  8700  00EF97  65                 	db	101	;'e'
  8701  00EF98  6E                 	db	110	;'n'
  8702  00EF99  61                 	db	97	;'a'
  8703  00EF9A  62                 	db	98	;'b'
  8704  00EF9B  6C                 	db	108	;'l'
  8705  00EF9C  65                 	db	101	;'e'
  8706  00EF9D  20                 	db	32
  8707  00EF9E  64                 	db	100	;'d'
  8708  00EF9F  69                 	db	105	;'i'
  8709  00EFA0  6D                 	db	109	;'m'
  8710  00EFA1  6D                 	db	109	;'m'
  8711  00EFA2  69                 	db	105	;'i'
  8712  00EFA3  6E                 	db	110	;'n'
  8713  00EFA4  67                 	db	103	;'g'
  8714  00EFA5  20                 	db	32
  8715  00EFA6  69                 	db	105	;'i'
  8716  00EFA7  66                 	db	102	;'f'
  8717  00EFA8  20                 	db	32
  8718  00EFA9  79                 	db	121	;'y'
  8719  00EFAA  6F                 	db	111	;'o'
  8720  00EFAB  75                 	db	117	;'u'
  8721  00EFAC  20                 	db	32
  8722  00EFAD  61                 	db	97	;'a'
  8723  00EFAE  72                 	db	114	;'r'
  8724  00EFAF  65                 	db	101	;'e'
  8725  00EFB0  20                 	db	32
  8726  00EFB1  63                 	db	99	;'c'
  8727  00EFB2  6F                 	db	111	;'o'
  8728  00EFB3  6D                 	db	109	;'m'
  8729  00EFB4  70                 	db	112	;'p'
  8730  00EFB5  6C                 	db	108	;'l'
  8731  00EFB6  65                 	db	101	;'e'
  8732  00EFB7  74                 	db	116	;'t'
  8733  00EFB8  65                 	db	101	;'e'
  8734  00EFB9  6C                 	db	108	;'l'
  8735  00EFBA  79                 	db	121	;'y'
  8736  00EFBB  20                 	db	32
  8737  00EFBC  73                 	db	115	;'s'
  8738  00EFBD  75                 	db	117	;'u'
  8739  00EFBE  72                 	db	114	;'r'
  8740  00EFBF  65                 	db	101	;'e'
  8741  00EFC0  20                 	db	32
  8742  00EFC1  74                 	db	116	;'t'
  8743  00EFC2  68                 	db	104	;'h'
  8744  00EFC3  65                 	db	101	;'e'
  8745  00EFC4  20                 	db	32
  8746  00EFC5  6C                 	db	108	;'l'
  8747  00EFC6  6F                 	db	111	;'o'
  8748  00EFC7  61                 	db	97	;'a'
  8749  00EFC8  64                 	db	100	;'d'
  8750  00EFC9  20                 	db	32
  8751  00EFCA  69                 	db	105	;'i'
  8752  00EFCB  73                 	db	115	;'s'
  8753  00EFCC  20                 	db	32
  8754  00EFCD  63                 	db	99	;'c'
  8755  00EFCE  6F                 	db	111	;'o'
  8756  00EFCF  6D                 	db	109	;'m'
  8757  00EFD0  70                 	db	112	;'p'
  8758  00EFD1  61                 	db	97	;'a'
  8759  00EFD2  74                 	db	116	;'t'
  8760  00EFD3  69                 	db	105	;'i'
  8761  00EFD4  62                 	db	98	;'b'
  8762  00EFD5  6C                 	db	108	;'l'
  8763  00EFD6  65                 	db	101	;'e'
  8764  00EFD7  20                 	db	32
  8765  00EFD8  77                 	db	119	;'w'
  8766  00EFD9  69                 	db	105	;'i'
  8767  00EFDA  74                 	db	116	;'t'
  8768  00EFDB  68                 	db	104	;'h'
  8769  00EFDC  20                 	db	32
  8770  00EFDD  61                 	db	97	;'a'
  8771  00EFDE  20                 	db	32
  8772  00EFDF  73                 	db	115	;'s'
  8773  00EFE0  6F                 	db	111	;'o'
  8774  00EFE1  6C                 	db	108	;'l'
  8775  00EFE2  69                 	db	105	;'i'
  8776  00EFE3  64                 	db	100	;'d'
  8777  00EFE4  20                 	db	32
  8778  00EFE5  73                 	db	115	;'s'
  8779  00EFE6  74                 	db	116	;'t'
  8780  00EFE7  61                 	db	97	;'a'
  8781  00EFE8  74                 	db	116	;'t'
  8782  00EFE9  65                 	db	101	;'e'
  8783  00EFEA  20                 	db	32
  8784  00EFEB  64                 	db	100	;'d'
  8785  00EFEC  69                 	db	105	;'i'
  8786  00EFED  6D                 	db	109	;'m'
  8787  00EFEE  6D                 	db	109	;'m'
  8788  00EFEF  69                 	db	105	;'i'
  8789  00EFF0  6E                 	db	110	;'n'
  8790  00EFF1  67                 	db	103	;'g'
  8791  00EFF2  20                 	db	32
  8792  00EFF3  63                 	db	99	;'c'
  8793  00EFF4  69                 	db	105	;'i'
  8794  00EFF5  72                 	db	114	;'r'
  8795  00EFF6  63                 	db	99	;'c'
  8796  00EFF7  75                 	db	117	;'u'
  8797  00EFF8  69                 	db	105	;'i'
  8798  00EFF9  74                 	db	116	;'t'
  8799  00EFFA  00                 	db	0
  8800  00EFFB                     STR_130:
  8801  00EFFB  49                 	db	73	;'I'
  8802  00EFFC  66                 	db	102	;'f'
  8803  00EFFD  20                 	db	32
  8804  00EFFE  79                 	db	121	;'y'
  8805  00EFFF  6F                 	db	111	;'o'
  8806  00F000  75                 	db	117	;'u'
  8807  00F001  27                 	db	39
  8808  00F002  64                 	db	100	;'d'
  8809  00F003  20                 	db	32
  8810  00F004  6C                 	db	108	;'l'
  8811  00F005  69                 	db	105	;'i'
  8812  00F006  6B                 	db	107	;'k'
  8813  00F007  65                 	db	101	;'e'
  8814  00F008  20                 	db	32
  8815  00F009  74                 	db	116	;'t'
  8816  00F00A  6F                 	db	111	;'o'
  8817  00F00B  20                 	db	32
  8818  00F00C  63                 	db	99	;'c'
  8819  00F00D  6F                 	db	111	;'o'
  8820  00F00E  6D                 	db	109	;'m'
  8821  00F00F  70                 	db	112	;'p'
  8822  00F010  6C                 	db	108	;'l'
  8823  00F011  65                 	db	101	;'e'
  8824  00F012  74                 	db	116	;'t'
  8825  00F013  65                 	db	101	;'e'
  8826  00F014  6C                 	db	108	;'l'
  8827  00F015  79                 	db	121	;'y'
  8828  00F016  20                 	db	32
  8829  00F017  65                 	db	101	;'e'
  8830  00F018  6E                 	db	110	;'n'
  8831  00F019  61                 	db	97	;'a'
  8832  00F01A  62                 	db	98	;'b'
  8833  00F01B  6C                 	db	108	;'l'
  8834  00F01C  65                 	db	101	;'e'
  8835  00F01D  20                 	db	32
  8836  00F01E  6F                 	db	111	;'o'
  8837  00F01F  72                 	db	114	;'r'
  8838  00F020  20                 	db	32
  8839  00F021  64                 	db	100	;'d'
  8840  00F022  69                 	db	105	;'i'
  8841  00F023  73                 	db	115	;'s'
  8842  00F024  61                 	db	97	;'a'
  8843  00F025  62                 	db	98	;'b'
  8844  00F026  6C                 	db	108	;'l'
  8845  00F027  65                 	db	101	;'e'
  8846  00F028  20                 	db	32
  8847  00F029  74                 	db	116	;'t'
  8848  00F02A  68                 	db	104	;'h'
  8849  00F02B  65                 	db	101	;'e'
  8850  00F02C  20                 	db	32
  8851  00F02D  6C                 	db	108	;'l'
  8852  00F02E  6F                 	db	111	;'o'
  8853  00F02F  61                 	db	97	;'a'
  8854  00F030  64                 	db	100	;'d'
  8855  00F031  2C                 	db	44
  8856  00F032  20                 	db	32
  8857  00F033  64                 	db	100	;'d'
  8858  00F034  69                 	db	105	;'i'
  8859  00F035  73                 	db	115	;'s'
  8860  00F036  61                 	db	97	;'a'
  8861  00F037  62                 	db	98	;'b'
  8862  00F038  6C                 	db	108	;'l'
  8863  00F039  65                 	db	101	;'e'
  8864  00F03A  20                 	db	32
  8865  00F03B  64                 	db	100	;'d'
  8866  00F03C  69                 	db	105	;'i'
  8867  00F03D  6D                 	db	109	;'m'
  8868  00F03E  6D                 	db	109	;'m'
  8869  00F03F  69                 	db	105	;'i'
  8870  00F040  6E                 	db	110	;'n'
  8871  00F041  67                 	db	103	;'g'
  8872  00F042  20                 	db	32
  8873  00F043  61                 	db	97	;'a'
  8874  00F044  6E                 	db	110	;'n'
  8875  00F045  64                 	db	100	;'d'
  8876  00F046  20                 	db	32
  8877  00F047  75                 	db	117	;'u'
  8878  00F048  73                 	db	115	;'s'
  8879  00F049  65                 	db	101	;'e'
  8880  00F04A  20                 	db	32
  8881  00F04B  72                 	db	114	;'r'
  8882  00F04C  65                 	db	101	;'e'
  8883  00F04D  73                 	db	115	;'s'
  8884  00F04E  70                 	db	112	;'p'
  8885  00F04F  65                 	db	101	;'e'
  8886  00F050  63                 	db	99	;'c'
  8887  00F051  74                 	db	116	;'t'
  8888  00F052  69                 	db	105	;'i'
  8889  00F053  76                 	db	118	;'v'
  8890  00F054  65                 	db	101	;'e'
  8891  00F055  20                 	db	32
  8892  00F056  63                 	db	99	;'c'
  8893  00F057  6F                 	db	111	;'o'
  8894  00F058  6D                 	db	109	;'m'
  8895  00F059  6D                 	db	109	;'m'
  8896  00F05A  61                 	db	97	;'a'
  8897  00F05B  6E                 	db	110	;'n'
  8898  00F05C  64                 	db	100	;'d'
  8899  00F05D  73                 	db	115	;'s'
  8900  00F05E  0A                 	db	10
  8901  00F05F  0D                 	db	13
  8902  00F060  00                 	db	0
  8903  00F061                     STR_129:
  8904  00F061  45                 	db	69	;'E'
  8905  00F062  52                 	db	82	;'R'
  8906  00F063  52                 	db	82	;'R'
  8907  00F064  4F                 	db	79	;'O'
  8908  00F065  52                 	db	82	;'R'
  8909  00F066  3A                 	db	58	;':'
  8910  00F067  20                 	db	32
  8911  00F068  50                 	db	80	;'P'
  8912  00F069  6C                 	db	108	;'l'
  8913  00F06A  65                 	db	101	;'e'
  8914  00F06B  61                 	db	97	;'a'
  8915  00F06C  73                 	db	115	;'s'
  8916  00F06D  65                 	db	101	;'e'
  8917  00F06E  20                 	db	32
  8918  00F06F  73                 	db	115	;'s'
  8919  00F070  65                 	db	101	;'e'
  8920  00F071  74                 	db	116	;'t'
  8921  00F072  20                 	db	32
  8922  00F073  64                 	db	100	;'d'
  8923  00F074  69                 	db	105	;'i'
  8924  00F075  6D                 	db	109	;'m'
  8925  00F076  6D                 	db	109	;'m'
  8926  00F077  69                 	db	105	;'i'
  8927  00F078  6E                 	db	110	;'n'
  8928  00F079  67                 	db	103	;'g'
  8929  00F07A  20                 	db	32
  8930  00F07B  70                 	db	112	;'p'
  8931  00F07C  65                 	db	101	;'e'
  8932  00F07D  72                 	db	114	;'r'
  8933  00F07E  63                 	db	99	;'c'
  8934  00F07F  65                 	db	101	;'e'
  8935  00F080  6E                 	db	110	;'n'
  8936  00F081  74                 	db	116	;'t'
  8937  00F082  61                 	db	97	;'a'
  8938  00F083  67                 	db	103	;'g'
  8939  00F084  65                 	db	101	;'e'
  8940  00F085  20                 	db	32
  8941  00F086  74                 	db	116	;'t'
  8942  00F087  6F                 	db	111	;'o'
  8943  00F088  20                 	db	32
  8944  00F089  61                 	db	97	;'a'
  8945  00F08A  6E                 	db	110	;'n'
  8946  00F08B  20                 	db	32
  8947  00F08C  69                 	db	105	;'i'
  8948  00F08D  6E                 	db	110	;'n'
  8949  00F08E  74                 	db	116	;'t'
  8950  00F08F  65                 	db	101	;'e'
  8951  00F090  67                 	db	103	;'g'
  8952  00F091  65                 	db	101	;'e'
  8953  00F092  72                 	db	114	;'r'
  8954  00F093  20                 	db	32
  8955  00F094  67                 	db	103	;'g'
  8956  00F095  72                 	db	114	;'r'
  8957  00F096  65                 	db	101	;'e'
  8958  00F097  61                 	db	97	;'a'
  8959  00F098  74                 	db	116	;'t'
  8960  00F099  65                 	db	101	;'e'
  8961  00F09A  72                 	db	114	;'r'
  8962  00F09B  20                 	db	32
  8963  00F09C  74                 	db	116	;'t'
  8964  00F09D  68                 	db	104	;'h'
  8965  00F09E  61                 	db	97	;'a'
  8966  00F09F  6E                 	db	110	;'n'
  8967  00F0A0  20                 	db	32
  8968  00F0A1  30                 	db	48	;'0'
  8969  00F0A2  20                 	db	32
  8970  00F0A3  61                 	db	97	;'a'
  8971  00F0A4  6E                 	db	110	;'n'
  8972  00F0A5  64                 	db	100	;'d'
  8973  00F0A6  20                 	db	32
  8974  00F0A7  6C                 	db	108	;'l'
  8975  00F0A8  65                 	db	101	;'e'
  8976  00F0A9  73                 	db	115	;'s'
  8977  00F0AA  73                 	db	115	;'s'
  8978  00F0AB  20                 	db	32
  8979  00F0AC  74                 	db	116	;'t'
  8980  00F0AD  68                 	db	104	;'h'
  8981  00F0AE  61                 	db	97	;'a'
  8982  00F0AF  6E                 	db	110	;'n'
  8983  00F0B0  20                 	db	32
  8984  00F0B1  31                 	db	49	;'1'
  8985  00F0B2  30                 	db	48	;'0'
  8986  00F0B3  30                 	db	48	;'0'
  8987  00F0B4  0A                 	db	10
  8988  00F0B5  0D                 	db	13
  8989  00F0B6  00                 	db	0
  8990  00F0B7                     STR_58:
  8991  00F0B7  44                 	db	68	;'D'
  8992  00F0B8  65                 	db	101	;'e'
  8993  00F0B9  76                 	db	118	;'v'
  8994  00F0BA  69                 	db	105	;'i'
  8995  00F0BB  63                 	db	99	;'c'
  8996  00F0BC  65                 	db	101	;'e'
  8997  00F0BD  20                 	db	32
  8998  00F0BE  49                 	db	73	;'I'
  8999  00F0BF  44                 	db	68	;'D'
  9000  00F0C0  20                 	db	32
  9001  00F0C1  73                 	db	115	;'s'
  9002  00F0C2  74                 	db	116	;'t'
  9003  00F0C3  6F                 	db	111	;'o'
  9004  00F0C4  72                 	db	114	;'r'
  9005  00F0C5  65                 	db	101	;'e'
  9006  00F0C6  64                 	db	100	;'d'
  9007  00F0C7  20                 	db	32
  9008  00F0C8  69                 	db	105	;'i'
  9009  00F0C9  6E                 	db	110	;'n'
  9010  00F0CA  20                 	db	32
  9011  00F0CB  46                 	db	70	;'F'
  9012  00F0CC  6C                 	db	108	;'l'
  9013  00F0CD  61                 	db	97	;'a'
  9014  00F0CE  73                 	db	115	;'s'
  9015  00F0CF  68                 	db	104	;'h'
  9016  00F0D0  20                 	db	32
  9017  00F0D1  69                 	db	105	;'i'
  9018  00F0D2  73                 	db	115	;'s'
  9019  00F0D3  3A                 	db	58	;':'
  9020  00F0D4  20                 	db	32
  9021  00F0D5  30                 	db	48	;'0'
  9022  00F0D6  78                 	db	120	;'x'
  9023  00F0D7  25                 	db	37
  9024  00F0D8  58                 	db	88	;'X'
  9025  00F0D9  2E                 	db	46
  9026  00F0DA  20                 	db	32
  9027  00F0DB  54                 	db	84	;'T'
  9028  00F0DC  68                 	db	104	;'h'
  9029  00F0DD  69                 	db	105	;'i'
  9030  00F0DE  73                 	db	115	;'s'
  9031  00F0DF  20                 	db	32
  9032  00F0E0  63                 	db	99	;'c'
  9033  00F0E1  6F                 	db	111	;'o'
  9034  00F0E2  72                 	db	114	;'r'
  9035  00F0E3  72                 	db	114	;'r'
  9036  00F0E4  65                 	db	101	;'e'
  9037  00F0E5  73                 	db	115	;'s'
  9038  00F0E6  70                 	db	112	;'p'
  9039  00F0E7  6F                 	db	111	;'o'
  9040  00F0E8  6E                 	db	110	;'n'
  9041  00F0E9  64                 	db	100	;'d'
  9042  00F0EA  73                 	db	115	;'s'
  9043  00F0EB  20                 	db	32
  9044  00F0EC  74                 	db	116	;'t'
  9045  00F0ED  6F                 	db	111	;'o'
  9046  00F0EE  20                 	db	32
  9047  00F0EF  61                 	db	97	;'a'
  9048  00F0F0  20                 	db	32
  9049  00F0F1  64                 	db	100	;'d'
  9050  00F0F2  65                 	db	101	;'e'
  9051  00F0F3  76                 	db	118	;'v'
  9052  00F0F4  69                 	db	105	;'i'
  9053  00F0F5  63                 	db	99	;'c'
  9054  00F0F6  65                 	db	101	;'e'
  9055  00F0F7  20                 	db	32
  9056  00F0F8  70                 	db	112	;'p'
  9057  00F0F9  61                 	db	97	;'a'
  9058  00F0FA  72                 	db	114	;'r'
  9059  00F0FB  74                 	db	116	;'t'
  9060  00F0FC  20                 	db	32
  9061  00F0FD  6E                 	db	110	;'n'
  9062  00F0FE  75                 	db	117	;'u'
  9063  00F0FF  6D                 	db	109	;'m'
  9064  00F100  62                 	db	98	;'b'
  9065  00F101  65                 	db	101	;'e'
  9066  00F102  72                 	db	114	;'r'
  9067  00F103  20                 	db	32
  9068  00F104  6F                 	db	111	;'o'
  9069  00F105  66                 	db	102	;'f'
  9070  00F106  20                 	db	32
  9071  00F107  25                 	db	37
  9072  00F108  73                 	db	115	;'s'
  9073  00F109  0A                 	db	10
  9074  00F10A  0D                 	db	13
  9075  00F10B  00                 	db	0
  9076  00F10C                     STR_105:
  9077  00F10C  4D                 	db	77	;'M'
  9078  00F10D  65                 	db	101	;'e'
  9079  00F10E  61                 	db	97	;'a'
  9080  00F10F  73                 	db	115	;'s'
  9081  00F110  75                 	db	117	;'u'
  9082  00F111  72                 	db	114	;'r'
  9083  00F112  65                 	db	101	;'e'
  9084  00F113  64                 	db	100	;'d'
  9085  00F114  20                 	db	32
  9086  00F115  6F                 	db	111	;'o'
  9087  00F116  75                 	db	117	;'u'
  9088  00F117  74                 	db	116	;'t'
  9089  00F118  70                 	db	112	;'p'
  9090  00F119  75                 	db	117	;'u'
  9091  00F11A  74                 	db	116	;'t'
  9092  00F11B  20                 	db	32
  9093  00F11C  65                 	db	101	;'e'
  9094  00F11D  6E                 	db	110	;'n'
  9095  00F11E  65                 	db	101	;'e'
  9096  00F11F  72                 	db	114	;'r'
  9097  00F120  67                 	db	103	;'g'
  9098  00F121  79                 	db	121	;'y'
  9099  00F122  20                 	db	32
  9100  00F123  73                 	db	115	;'s'
  9101  00F124  69                 	db	105	;'i'
  9102  00F125  6E                 	db	110	;'n'
  9103  00F126  63                 	db	99	;'c'
  9104  00F127  65                 	db	101	;'e'
  9105  00F128  20                 	db	32
  9106  00F129  6C                 	db	108	;'l'
  9107  00F12A  61                 	db	97	;'a'
  9108  00F12B  73                 	db	115	;'s'
  9109  00F12C  74                 	db	116	;'t'
  9110  00F12D  20                 	db	32
  9111  00F12E  6D                 	db	109	;'m'
  9112  00F12F  65                 	db	101	;'e'
  9113  00F130  61                 	db	97	;'a'
  9114  00F131  73                 	db	115	;'s'
  9115  00F132  75                 	db	117	;'u'
  9116  00F133  72                 	db	114	;'r'
  9117  00F134  65                 	db	101	;'e'
  9118  00F135  6D                 	db	109	;'m'
  9119  00F136  65                 	db	101	;'e'
  9120  00F137  6E                 	db	110	;'n'
  9121  00F138  74                 	db	116	;'t'
  9122  00F139  20                 	db	32
  9123  00F13A  72                 	db	114	;'r'
  9124  00F13B  65                 	db	101	;'e'
  9125  00F13C  73                 	db	115	;'s'
  9126  00F13D  65                 	db	101	;'e'
  9127  00F13E  74                 	db	116	;'t'
  9128  00F13F  20                 	db	32
  9129  00F140  69                 	db	105	;'i'
  9130  00F141  73                 	db	115	;'s'
  9131  00F142  20                 	db	32
  9132  00F143  25                 	db	37
  9133  00F144  2E                 	db	46
  9134  00F145  33                 	db	51	;'3'
  9135  00F146  66                 	db	102	;'f'
  9136  00F147  20                 	db	32
  9137  00F148  57                 	db	87	;'W'
  9138  00F149  61                 	db	97	;'a'
  9139  00F14A  74                 	db	116	;'t'
  9140  00F14B  74                 	db	116	;'t'
  9141  00F14C  20                 	db	32
  9142  00F14D  48                 	db	72	;'H'
  9143  00F14E  6F                 	db	111	;'o'
  9144  00F14F  75                 	db	117	;'u'
  9145  00F150  72                 	db	114	;'r'
  9146  00F151  73                 	db	115	;'s'
  9147  00F152  0A                 	db	10
  9148  00F153  0D                 	db	13
  9149  00F154  00                 	db	0
  9150  00F155                     STR_134:
  9151  00F155  54                 	db	84	;'T'
  9152  00F156  68                 	db	104	;'h'
  9153  00F157  69                 	db	105	;'i'
  9154  00F158  73                 	db	115	;'s'
  9155  00F159  20                 	db	32
  9156  00F15A  63                 	db	99	;'c'
  9157  00F15B  6F                 	db	111	;'o'
  9158  00F15C  72                 	db	114	;'r'
  9159  00F15D  72                 	db	114	;'r'
  9160  00F15E  65                 	db	101	;'e'
  9161  00F15F  73                 	db	115	;'s'
  9162  00F160  70                 	db	112	;'p'
  9163  00F161  6F                 	db	111	;'o'
  9164  00F162  6E                 	db	110	;'n'
  9165  00F163  64                 	db	100	;'d'
  9166  00F164  73                 	db	115	;'s'
  9167  00F165  20                 	db	32
  9168  00F166  74                 	db	116	;'t'
  9169  00F167  6F                 	db	111	;'o'
  9170  00F168  20                 	db	32
  9171  00F169  61                 	db	97	;'a'
  9172  00F16A  20                 	db	32
  9173  00F16B  31                 	db	49	;'1'
  9174  00F16C  36                 	db	54	;'6'
  9175  00F16D  20                 	db	32
  9176  00F16E  62                 	db	98	;'b'
  9177  00F16F  69                 	db	105	;'i'
  9178  00F170  74                 	db	116	;'t'
  9179  00F171  20                 	db	32
  9180  00F172  74                 	db	116	;'t'
  9181  00F173  69                 	db	105	;'i'
  9182  00F174  6D                 	db	109	;'m'
  9183  00F175  65                 	db	101	;'e'
  9184  00F176  72                 	db	114	;'r'
  9185  00F177  20                 	db	32
  9186  00F178  70                 	db	112	;'p'
  9187  00F179  72                 	db	114	;'r'
  9188  00F17A  65                 	db	101	;'e'
  9189  00F17B  2D                 	db	45
  9190  00F17C  6C                 	db	108	;'l'
  9191  00F17D  6F                 	db	111	;'o'
  9192  00F17E  61                 	db	97	;'a'
  9193  00F17F  64                 	db	100	;'d'
  9194  00F180  20                 	db	32
  9195  00F181  76                 	db	118	;'v'
  9196  00F182  61                 	db	97	;'a'
  9197  00F183  6C                 	db	108	;'l'
  9198  00F184  75                 	db	117	;'u'
  9199  00F185  65                 	db	101	;'e'
  9200  00F186  20                 	db	32
  9201  00F187  6F                 	db	111	;'o'
  9202  00F188  66                 	db	102	;'f'
  9203  00F189  20                 	db	32
  9204  00F18A  30                 	db	48	;'0'
  9205  00F18B  78                 	db	120	;'x'
  9206  00F18C  25                 	db	37
  9207  00F18D  58                 	db	88	;'X'
  9208  00F18E  20                 	db	32
  9209  00F18F  28                 	db	40
  9210  00F190  25                 	db	37
  9211  00F191  75                 	db	117	;'u'
  9212  00F192  20                 	db	32
  9213  00F193  4C                 	db	76	;'L'
  9214  00F194  53                 	db	83	;'S'
  9215  00F195  42                 	db	66	;'B'
  9216  00F196  73                 	db	115	;'s'
  9217  00F197  29                 	db	41
  9218  00F198  20                 	db	32
  9219  00F199  0A                 	db	10
  9220  00F19A  0D                 	db	13
  9221  00F19B  00                 	db	0
  9222  00F19C                     STR_79:
  9223  00F19C  43                 	db	67	;'C'
  9224  00F19D  6F                 	db	111	;'o'
  9225  00F19E  6D                 	db	109	;'m'
  9226  00F19F  6D                 	db	109	;'m'
  9227  00F1A0  75                 	db	117	;'u'
  9228  00F1A1  6E                 	db	110	;'n'
  9229  00F1A2  69                 	db	105	;'i'
  9230  00F1A3  63                 	db	99	;'c'
  9231  00F1A4  61                 	db	97	;'a'
  9232  00F1A5  74                 	db	116	;'t'
  9233  00F1A6  69                 	db	105	;'i'
  9234  00F1A7  6F                 	db	111	;'o'
  9235  00F1A8  6E                 	db	110	;'n'
  9236  00F1A9  73                 	db	115	;'s'
  9237  00F1AA  20                 	db	32
  9238  00F1AB  65                 	db	101	;'e'
  9239  00F1AC  72                 	db	114	;'r'
  9240  00F1AD  72                 	db	114	;'r'
  9241  00F1AE  6F                 	db	111	;'o'
  9242  00F1AF  72                 	db	114	;'r'
  9243  00F1B0  28                 	db	40
  9244  00F1B1  73                 	db	115	;'s'
  9245  00F1B2  29                 	db	41
  9246  00F1B3  20                 	db	32
  9247  00F1B4  64                 	db	100	;'d'
  9248  00F1B5  65                 	db	101	;'e'
  9249  00F1B6  74                 	db	116	;'t'
  9250  00F1B7  65                 	db	101	;'e'
  9251  00F1B8  63                 	db	99	;'c'
  9252  00F1B9  74                 	db	116	;'t'
  9253  00F1BA  65                 	db	101	;'e'
  9254  00F1BB  64                 	db	100	;'d'
  9255  00F1BC  21                 	db	33
  9256  00F1BD  20                 	db	32
  9257  00F1BE  49                 	db	73	;'I'
  9258  00F1BF  6E                 	db	110	;'n'
  9259  00F1C0  74                 	db	116	;'t'
  9260  00F1C1  65                 	db	101	;'e'
  9261  00F1C2  72                 	db	114	;'r'
  9262  00F1C3  66                 	db	102	;'f'
  9263  00F1C4  61                 	db	97	;'a'
  9264  00F1C5  63                 	db	99	;'c'
  9265  00F1C6  65                 	db	101	;'e'
  9266  00F1C7  73                 	db	115	;'s'
  9267  00F1C8  20                 	db	32
  9268  00F1C9  63                 	db	99	;'c'
  9269  00F1CA  61                 	db	97	;'a'
  9270  00F1CB  75                 	db	117	;'u'
  9271  00F1CC  73                 	db	115	;'s'
  9272  00F1CD  69                 	db	105	;'i'
  9273  00F1CE  6E                 	db	110	;'n'
  9274  00F1CF  67                 	db	103	;'g'
  9275  00F1D0  20                 	db	32
  9276  00F1D1  65                 	db	101	;'e'
  9277  00F1D2  72                 	db	114	;'r'
  9278  00F1D3  72                 	db	114	;'r'
  9279  00F1D4  6F                 	db	111	;'o'
  9280  00F1D5  72                 	db	114	;'r'
  9281  00F1D6  28                 	db	40
  9282  00F1D7  73                 	db	115	;'s'
  9283  00F1D8  29                 	db	41
  9284  00F1D9  3A                 	db	58	;':'
  9285  00F1DA  0A                 	db	10
  9286  00F1DB  0D                 	db	13
  9287  00F1DC  00                 	db	0
  9288  00F1DD                     STR_62:
  9289  00F1DD  54                 	db	84	;'T'
  9290  00F1DE  68                 	db	104	;'h'
  9291  00F1DF  65                 	db	101	;'e'
  9292  00F1E0  20                 	db	32
  9293  00F1E1  66                 	db	102	;'f'
  9294  00F1E2  6F                 	db	111	;'o'
  9295  00F1E3  6C                 	db	108	;'l'
  9296  00F1E4  6C                 	db	108	;'l'
  9297  00F1E5  6F                 	db	111	;'o'
  9298  00F1E6  77                 	db	119	;'w'
  9299  00F1E7  69                 	db	105	;'i'
  9300  00F1E8  6E                 	db	110	;'n'
  9301  00F1E9  67                 	db	103	;'g'
  9302  00F1EA  20                 	db	32
  9303  00F1EB  55                 	db	85	;'U'
  9304  00F1EC  73                 	db	115	;'s'
  9305  00F1ED  65                 	db	101	;'e'
  9306  00F1EE  72                 	db	114	;'r'
  9307  00F1EF  20                 	db	32
  9308  00F1F0  49                 	db	73	;'I'
  9309  00F1F1  44                 	db	68	;'D'
  9310  00F1F2  73                 	db	115	;'s'
  9311  00F1F3  20                 	db	32
  9312  00F1F4  68                 	db	104	;'h'
  9313  00F1F5  61                 	db	97	;'a'
  9314  00F1F6  76                 	db	118	;'v'
  9315  00F1F7  65                 	db	101	;'e'
  9316  00F1F8  20                 	db	32
  9317  00F1F9  62                 	db	98	;'b'
  9318  00F1FA  65                 	db	101	;'e'
  9319  00F1FB  65                 	db	101	;'e'
  9320  00F1FC  6E                 	db	110	;'n'
  9321  00F1FD  20                 	db	32
  9322  00F1FE  72                 	db	114	;'r'
  9323  00F1FF  65                 	db	101	;'e'
  9324  00F200  74                 	db	116	;'t'
  9325  00F201  72                 	db	114	;'r'
  9326  00F202  69                 	db	105	;'i'
  9327  00F203  65                 	db	101	;'e'
  9328  00F204  76                 	db	118	;'v'
  9329  00F205  65                 	db	101	;'e'
  9330  00F206  64                 	db	100	;'d'
  9331  00F207  20                 	db	32
  9332  00F208  66                 	db	102	;'f'
  9333  00F209  72                 	db	114	;'r'
  9334  00F20A  6F                 	db	111	;'o'
  9335  00F20B  6D                 	db	109	;'m'
  9336  00F20C  20                 	db	32
  9337  00F20D  66                 	db	102	;'f'
  9338  00F20E  6C                 	db	108	;'l'
  9339  00F20F  61                 	db	97	;'a'
  9340  00F210  73                 	db	115	;'s'
  9341  00F211  68                 	db	104	;'h'
  9342  00F212  20                 	db	32
  9343  00F213  6D                 	db	109	;'m'
  9344  00F214  65                 	db	101	;'e'
  9345  00F215  6D                 	db	109	;'m'
  9346  00F216  6F                 	db	111	;'o'
  9347  00F217  72                 	db	114	;'r'
  9348  00F218  79                 	db	121	;'y'
  9349  00F219  3A                 	db	58	;':'
  9350  00F21A  0A                 	db	10
  9351  00F21B  0D                 	db	13
  9352  00F21C  00                 	db	0
  9353  00F21D                     STR_133:
  9354  00F21D  43                 	db	67	;'C'
  9355  00F21E  61                 	db	97	;'a'
  9356  00F21F  6C                 	db	108	;'l'
  9357  00F220  63                 	db	99	;'c'
  9358  00F221  75                 	db	117	;'u'
  9359  00F222  6C                 	db	108	;'l'
  9360  00F223  61                 	db	97	;'a'
  9361  00F224  74                 	db	116	;'t'
  9362  00F225  65                 	db	101	;'e'
  9363  00F226  64                 	db	100	;'d'
  9364  00F227  20                 	db	32
  9365  00F228  54                 	db	84	;'T'
  9366  00F229  52                 	db	82	;'R'
  9367  00F22A  49                 	db	73	;'I'
  9368  00F22B  41                 	db	65	;'A'
  9369  00F22C  43                 	db	67	;'C'
  9370  00F22D  20                 	db	32
  9371  00F22E  66                 	db	102	;'f'
  9372  00F22F  69                 	db	105	;'i'
  9373  00F230  72                 	db	114	;'r'
  9374  00F231  69                 	db	105	;'i'
  9375  00F232  6E                 	db	110	;'n'
  9376  00F233  67                 	db	103	;'g'
  9377  00F234  20                 	db	32
  9378  00F235  61                 	db	97	;'a'
  9379  00F236  6E                 	db	110	;'n'
  9380  00F237  67                 	db	103	;'g'
  9381  00F238  6C                 	db	108	;'l'
  9382  00F239  65                 	db	101	;'e'
  9383  00F23A  20                 	db	32
  9384  00F23B  69                 	db	105	;'i'
  9385  00F23C  73                 	db	115	;'s'
  9386  00F23D  20                 	db	32
  9387  00F23E  25                 	db	37
  9388  00F23F  2E                 	db	46
  9389  00F240  33                 	db	51	;'3'
  9390  00F241  66                 	db	102	;'f'
  9391  00F242  20                 	db	32
  9392  00F243  72                 	db	114	;'r'
  9393  00F244  61                 	db	97	;'a'
  9394  00F245  64                 	db	100	;'d'
  9395  00F246  69                 	db	105	;'i'
  9396  00F247  61                 	db	97	;'a'
  9397  00F248  6E                 	db	110	;'n'
  9398  00F249  73                 	db	115	;'s'
  9399  00F24A  20                 	db	32
  9400  00F24B  28                 	db	40
  9401  00F24C  25                 	db	37
  9402  00F24D  2E                 	db	46
  9403  00F24E  33                 	db	51	;'3'
  9404  00F24F  66                 	db	102	;'f'
  9405  00F250  20                 	db	32
  9406  00F251  64                 	db	100	;'d'
  9407  00F252  65                 	db	101	;'e'
  9408  00F253  67                 	db	103	;'g'
  9409  00F254  72                 	db	114	;'r'
  9410  00F255  65                 	db	101	;'e'
  9411  00F256  65                 	db	101	;'e'
  9412  00F257  73                 	db	115	;'s'
  9413  00F258  29                 	db	41
  9414  00F259  0A                 	db	10
  9415  00F25A  0D                 	db	13
  9416  00F25B  00                 	db	0
  9417  00F25C                     STR_166:
  9418  00F25C  53                 	db	83	;'S'
  9419  00F25D  79                 	db	121	;'y'
  9420  00F25E  73                 	db	115	;'s'
  9421  00F25F  74                 	db	116	;'t'
  9422  00F260  65                 	db	101	;'e'
  9423  00F261  6D                 	db	109	;'m'
  9424  00F262  20                 	db	32
  9425  00F263  70                 	db	112	;'p'
  9426  00F264  61                 	db	97	;'a'
  9427  00F265  72                 	db	114	;'r'
  9428  00F266  61                 	db	97	;'a'
  9429  00F267  6D                 	db	109	;'m'
  9430  00F268  65                 	db	101	;'e'
  9431  00F269  74                 	db	116	;'t'
  9432  00F26A  65                 	db	101	;'e'
  9433  00F26B  72                 	db	114	;'r'
  9434  00F26C  73                 	db	115	;'s'
  9435  00F26D  20                 	db	32
  9436  00F26E  61                 	db	97	;'a'
  9437  00F26F  6E                 	db	110	;'n'
  9438  00F270  64                 	db	100	;'d'
  9439  00F271  20                 	db	32
  9440  00F272  61                 	db	97	;'a'
  9441  00F273  66                 	db	102	;'f'
  9442  00F274  66                 	db	102	;'f'
  9443  00F275  69                 	db	105	;'i'
  9444  00F276  72                 	db	114	;'r'
  9445  00F277  6D                 	db	109	;'m'
  9446  00F278  61                 	db	97	;'a'
  9447  00F279  74                 	db	116	;'t'
  9448  00F27A  69                 	db	105	;'i'
  9449  00F27B  76                 	db	118	;'v'
  9450  00F27C  65                 	db	101	;'e'
  9451  00F27D  20                 	db	32
  9452  00F27E  72                 	db	114	;'r'
  9453  00F27F  65                 	db	101	;'e'
  9454  00F280  73                 	db	115	;'s'
  9455  00F281  70                 	db	112	;'p'
  9456  00F282  6F                 	db	111	;'o'
  9457  00F283  6E                 	db	110	;'n'
  9458  00F284  73                 	db	115	;'s'
  9459  00F285  65                 	db	101	;'e'
  9460  00F286  73                 	db	115	;'s'
  9461  00F287  20                 	db	32
  9462  00F288  61                 	db	97	;'a'
  9463  00F289  70                 	db	112	;'p'
  9464  00F28A  70                 	db	112	;'p'
  9465  00F28B  65                 	db	101	;'e'
  9466  00F28C  61                 	db	97	;'a'
  9467  00F28D  72                 	db	114	;'r'
  9468  00F28E  20                 	db	32
  9469  00F28F  69                 	db	105	;'i'
  9470  00F290  6E                 	db	110	;'n'
  9471  00F291  20                 	db	32
  9472  00F292  67                 	db	103	;'g'
  9473  00F293  72                 	db	114	;'r'
  9474  00F294  65                 	db	101	;'e'
  9475  00F295  65                 	db	101	;'e'
  9476  00F296  6E                 	db	110	;'n'
  9477  00F297  0A                 	db	10
  9478  00F298  0D                 	db	13
  9479  00F299  00                 	db	0
  9480  00F29A                     STR_82:
  9481  00F29A  43                 	db	67	;'C'
  9482  00F29B  61                 	db	97	;'a'
  9483  00F29C  6C                 	db	108	;'l'
  9484  00F29D  6C                 	db	108	;'l'
  9485  00F29E  20                 	db	32
  9486  00F29F  27                 	db	39
  9487  00F2A0  43                 	db	67	;'C'
  9488  00F2A1  6C                 	db	108	;'l'
  9489  00F2A2  65                 	db	101	;'e'
  9490  00F2A3  61                 	db	97	;'a'
  9491  00F2A4  72                 	db	114	;'r'
  9492  00F2A5  20                 	db	32
  9493  00F2A6  43                 	db	67	;'C'
  9494  00F2A7  4F                 	db	79	;'O'
  9495  00F2A8  4D                 	db	77	;'M'
  9496  00F2A9  4D                 	db	77	;'M'
  9497  00F2AA  20                 	db	32
  9498  00F2AB  45                 	db	69	;'E'
  9499  00F2AC  72                 	db	114	;'r'
  9500  00F2AD  72                 	db	114	;'r'
  9501  00F2AE  6F                 	db	111	;'o'
  9502  00F2AF  72                 	db	114	;'r'
  9503  00F2B0  73                 	db	115	;'s'
  9504  00F2B1  27                 	db	39
  9505  00F2B2  20                 	db	32
  9506  00F2B3  74                 	db	116	;'t'
  9507  00F2B4  6F                 	db	111	;'o'
  9508  00F2B5  20                 	db	32
  9509  00F2B6  63                 	db	99	;'c'
  9510  00F2B7  6C                 	db	108	;'l'
  9511  00F2B8  65                 	db	101	;'e'
  9512  00F2B9  61                 	db	97	;'a'
  9513  00F2BA  72                 	db	114	;'r'
  9514  00F2BB  20                 	db	32
  9515  00F2BC  63                 	db	99	;'c'
  9516  00F2BD  6F                 	db	111	;'o'
  9517  00F2BE  6D                 	db	109	;'m'
  9518  00F2BF  6D                 	db	109	;'m'
  9519  00F2C0  75                 	db	117	;'u'
  9520  00F2C1  6E                 	db	110	;'n'
  9521  00F2C2  69                 	db	105	;'i'
  9522  00F2C3  63                 	db	99	;'c'
  9523  00F2C4  61                 	db	97	;'a'
  9524  00F2C5  74                 	db	116	;'t'
  9525  00F2C6  69                 	db	105	;'i'
  9526  00F2C7  6F                 	db	111	;'o'
  9527  00F2C8  6E                 	db	110	;'n'
  9528  00F2C9  73                 	db	115	;'s'
  9529  00F2CA  20                 	db	32
  9530  00F2CB  65                 	db	101	;'e'
  9531  00F2CC  72                 	db	114	;'r'
  9532  00F2CD  72                 	db	114	;'r'
  9533  00F2CE  6F                 	db	111	;'o'
  9534  00F2CF  72                 	db	114	;'r'
  9535  00F2D0  28                 	db	40
  9536  00F2D1  73                 	db	115	;'s'
  9537  00F2D2  29                 	db	41
  9538  00F2D3  0A                 	db	10
  9539  00F2D4  0D                 	db	13
  9540  00F2D5  00                 	db	0
  9541  00F2D6                     STR_60:
  9542  00F2D6  44                 	db	68	;'D'
  9543  00F2D7  65                 	db	101	;'e'
  9544  00F2D8  76                 	db	118	;'v'
  9545  00F2D9  69                 	db	105	;'i'
  9546  00F2DA  63                 	db	99	;'c'
  9547  00F2DB  65                 	db	101	;'e'
  9548  00F2DC  20                 	db	32
  9549  00F2DD  73                 	db	115	;'s'
  9550  00F2DE  69                 	db	105	;'i'
  9551  00F2DF  6C                 	db	108	;'l'
  9552  00F2E0  69                 	db	105	;'i'
  9553  00F2E1  63                 	db	99	;'c'
  9554  00F2E2  6F                 	db	111	;'o'
  9555  00F2E3  6E                 	db	110	;'n'
  9556  00F2E4  20                 	db	32
  9557  00F2E5  72                 	db	114	;'r'
  9558  00F2E6  65                 	db	101	;'e'
  9559  00F2E7  76                 	db	118	;'v'
  9560  00F2E8  69                 	db	105	;'i'
  9561  00F2E9  73                 	db	115	;'s'
  9562  00F2EA  69                 	db	105	;'i'
  9563  00F2EB  6F                 	db	111	;'o'
  9564  00F2EC  6E                 	db	110	;'n'
  9565  00F2ED  20                 	db	32
  9566  00F2EE  49                 	db	73	;'I'
  9567  00F2EF  44                 	db	68	;'D'
  9568  00F2F0  20                 	db	32
  9569  00F2F1  61                 	db	97	;'a'
  9570  00F2F2  73                 	db	115	;'s'
  9571  00F2F3  20                 	db	32
  9572  00F2F4  73                 	db	115	;'s'
  9573  00F2F5  74                 	db	116	;'t'
  9574  00F2F6  6F                 	db	111	;'o'
  9575  00F2F7  72                 	db	114	;'r'
  9576  00F2F8  65                 	db	101	;'e'
  9577  00F2F9  64                 	db	100	;'d'
  9578  00F2FA  20                 	db	32
  9579  00F2FB  69                 	db	105	;'i'
  9580  00F2FC  6E                 	db	110	;'n'
  9581  00F2FD  20                 	db	32
  9582  00F2FE  46                 	db	70	;'F'
  9583  00F2FF  6C                 	db	108	;'l'
  9584  00F300  61                 	db	97	;'a'
  9585  00F301  73                 	db	115	;'s'
  9586  00F302  68                 	db	104	;'h'
  9587  00F303  20                 	db	32
  9588  00F304  69                 	db	105	;'i'
  9589  00F305  73                 	db	115	;'s'
  9590  00F306  3A                 	db	58	;':'
  9591  00F307  20                 	db	32
  9592  00F308  25                 	db	37
  9593  00F309  63                 	db	99	;'c'
  9594  00F30A  25                 	db	37
  9595  00F30B  30                 	db	48	;'0'
  9596  00F30C  33                 	db	51	;'3'
  9597  00F30D  64                 	db	100	;'d'
  9598  00F30E  0A                 	db	10
  9599  00F30F  0D                 	db	13
  9600  00F310  00                 	db	0
  9601  00F311                     STR_107:
  9602  00F311  4D                 	db	77	;'M'
  9603  00F312  65                 	db	101	;'e'
  9604  00F313  61                 	db	97	;'a'
  9605  00F314  73                 	db	115	;'s'
  9606  00F315  75                 	db	117	;'u'
  9607  00F316  72                 	db	114	;'r'
  9608  00F317  65                 	db	101	;'e'
  9609  00F318  64                 	db	100	;'d'
  9610  00F319  20                 	db	32
  9611  00F31A  6F                 	db	111	;'o'
  9612  00F31B  75                 	db	117	;'u'
  9613  00F31C  74                 	db	116	;'t'
  9614  00F31D  70                 	db	112	;'p'
  9615  00F31E  75                 	db	117	;'u'
  9616  00F31F  74                 	db	116	;'t'
  9617  00F320  20                 	db	32
  9618  00F321  65                 	db	101	;'e'
  9619  00F322  6E                 	db	110	;'n'
  9620  00F323  65                 	db	101	;'e'
  9621  00F324  72                 	db	114	;'r'
  9622  00F325  67                 	db	103	;'g'
  9623  00F326  79                 	db	121	;'y'
  9624  00F327  20                 	db	32
  9625  00F328  68                 	db	104	;'h'
  9626  00F329  61                 	db	97	;'a'
  9627  00F32A  73                 	db	115	;'s'
  9628  00F32B  20                 	db	32
  9629  00F32C  62                 	db	98	;'b'
  9630  00F32D  65                 	db	101	;'e'
  9631  00F32E  65                 	db	101	;'e'
  9632  00F32F  6E                 	db	110	;'n'
  9633  00F330  20                 	db	32
  9634  00F331  72                 	db	114	;'r'
  9635  00F332  65                 	db	101	;'e'
  9636  00F333  73                 	db	115	;'s'
  9637  00F334  65                 	db	101	;'e'
  9638  00F335  74                 	db	116	;'t'
  9639  00F336  20                 	db	32
  9640  00F337  74                 	db	116	;'t'
  9641  00F338  6F                 	db	111	;'o'
  9642  00F339  20                 	db	32
  9643  00F33A  7A                 	db	122	;'z'
  9644  00F33B  65                 	db	101	;'e'
  9645  00F33C  72                 	db	114	;'r'
  9646  00F33D  6F                 	db	111	;'o'
  9647  00F33E  20                 	db	32
  9648  00F33F  57                 	db	87	;'W'
  9649  00F340  61                 	db	97	;'a'
  9650  00F341  74                 	db	116	;'t'
  9651  00F342  74                 	db	116	;'t'
  9652  00F343  20                 	db	32
  9653  00F344  48                 	db	72	;'H'
  9654  00F345  6F                 	db	111	;'o'
  9655  00F346  75                 	db	117	;'u'
  9656  00F347  72                 	db	114	;'r'
  9657  00F348  73                 	db	115	;'s'
  9658  00F349  0A                 	db	10
  9659  00F34A  0D                 	db	13
  9660  00F34B  00                 	db	0
  9661  00F34C                     STR_136:
  9662  00F34C  44                 	db	68	;'D'
  9663  00F34D  65                 	db	101	;'e'
  9664  00F34E  76                 	db	118	;'v'
  9665  00F34F  69                 	db	105	;'i'
  9666  00F350  63                 	db	99	;'c'
  9667  00F351  65                 	db	101	;'e'
  9668  00F352  20                 	db	32
  9669  00F353  6F                 	db	111	;'o'
  9670  00F354  6E                 	db	110	;'n'
  9671  00F355  20                 	db	32
  9672  00F356  74                 	db	116	;'t'
  9673  00F357  69                 	db	105	;'i'
  9674  00F358  6D                 	db	109	;'m'
  9675  00F359  65                 	db	101	;'e'
  9676  00F35A  20                 	db	32
  9677  00F35B  73                 	db	115	;'s'
  9678  00F35C  69                 	db	105	;'i'
  9679  00F35D  6E                 	db	110	;'n'
  9680  00F35E  63                 	db	99	;'c'
  9681  00F35F  65                 	db	101	;'e'
  9682  00F360  20                 	db	32
  9683  00F361  6C                 	db	108	;'l'
  9684  00F362  61                 	db	97	;'a'
  9685  00F363  73                 	db	115	;'s'
  9686  00F364  74                 	db	116	;'t'
  9687  00F365  20                 	db	32
  9688  00F366  72                 	db	114	;'r'
  9689  00F367  65                 	db	101	;'e'
  9690  00F368  73                 	db	115	;'s'
  9691  00F369  65                 	db	101	;'e'
  9692  00F36A  74                 	db	116	;'t'
  9693  00F36B  20                 	db	32
  9694  00F36C  63                 	db	99	;'c'
  9695  00F36D  6F                 	db	111	;'o'
  9696  00F36E  6E                 	db	110	;'n'
  9697  00F36F  64                 	db	100	;'d'
  9698  00F370  69                 	db	105	;'i'
  9699  00F371  74                 	db	116	;'t'
  9700  00F372  69                 	db	105	;'i'
  9701  00F373  6F                 	db	111	;'o'
  9702  00F374  6E                 	db	110	;'n'
  9703  00F375  20                 	db	32
  9704  00F376  69                 	db	105	;'i'
  9705  00F377  73                 	db	115	;'s'
  9706  00F378  20                 	db	32
  9707  00F379  25                 	db	37
  9708  00F37A  64                 	db	100	;'d'
  9709  00F37B  20                 	db	32
  9710  00F37C  73                 	db	115	;'s'
  9711  00F37D  65                 	db	101	;'e'
  9712  00F37E  63                 	db	99	;'c'
  9713  00F37F  6F                 	db	111	;'o'
  9714  00F380  6E                 	db	110	;'n'
  9715  00F381  64                 	db	100	;'d'
  9716  00F382  73                 	db	115	;'s'
  9717  00F383  0A                 	db	10
  9718  00F384  0D                 	db	13
  9719  00F385  00                 	db	0
  9720  00F386                     STR_93:
  9721  00F386  46                 	db	70	;'F'
  9722  00F387  69                 	db	105	;'i'
  9723  00F388  78                 	db	120	;'x'
  9724  00F389  65                 	db	101	;'e'
  9725  00F38A  64                 	db	100	;'d'
  9726  00F38B  20                 	db	32
  9727  00F38C  56                 	db	86	;'V'
  9728  00F38D  6F                 	db	111	;'o'
  9729  00F38E  6C                 	db	108	;'l'
  9730  00F38F  74                 	db	116	;'t'
  9731  00F390  61                 	db	97	;'a'
  9732  00F391  67                 	db	103	;'g'
  9733  00F392  65                 	db	101	;'e'
  9734  00F393  20                 	db	32
  9735  00F394  52                 	db	82	;'R'
  9736  00F395  65                 	db	101	;'e'
  9737  00F396  66                 	db	102	;'f'
  9738  00F397  65                 	db	101	;'e'
  9739  00F398  72                 	db	114	;'r'
  9740  00F399  65                 	db	101	;'e'
  9741  00F39A  6E                 	db	110	;'n'
  9742  00F39B  63                 	db	99	;'c'
  9743  00F39C  65                 	db	101	;'e'
  9744  00F39D  20                 	db	32
  9745  00F39E  42                 	db	66	;'B'
  9746  00F39F  75                 	db	117	;'u'
  9747  00F3A0  66                 	db	102	;'f'
  9748  00F3A1  66                 	db	102	;'f'
  9749  00F3A2  65                 	db	101	;'e'
  9750  00F3A3  72                 	db	114	;'r'
  9751  00F3A4  20                 	db	32
  9752  00F3A5  31                 	db	49	;'1'
  9753  00F3A6  20                 	db	32
  9754  00F3A7  6D                 	db	109	;'m'
  9755  00F3A8  65                 	db	101	;'e'
  9756  00F3A9  61                 	db	97	;'a'
  9757  00F3AA  73                 	db	115	;'s'
  9758  00F3AB  75                 	db	117	;'u'
  9759  00F3AC  72                 	db	114	;'r'
  9760  00F3AD  65                 	db	101	;'e'
  9761  00F3AE  64                 	db	100	;'d'
  9762  00F3AF  20                 	db	32
  9763  00F3B0  61                 	db	97	;'a'
  9764  00F3B1  73                 	db	115	;'s'
  9765  00F3B2  20                 	db	32
  9766  00F3B3  25                 	db	37
  9767  00F3B4  2E                 	db	46
  9768  00F3B5  33                 	db	51	;'3'
  9769  00F3B6  66                 	db	102	;'f'
  9770  00F3B7  20                 	db	32
  9771  00F3B8  56                 	db	86	;'V'
  9772  00F3B9  6F                 	db	111	;'o'
  9773  00F3BA  6C                 	db	108	;'l'
  9774  00F3BB  74                 	db	116	;'t'
  9775  00F3BC  73                 	db	115	;'s'
  9776  00F3BD  0A                 	db	10
  9777  00F3BE  0D                 	db	13
  9778  00F3BF  00                 	db	0
  9779  00F3C0                     STR_103:
  9780  00F3C0  4F                 	db	79	;'O'
  9781  00F3C1  75                 	db	117	;'u'
  9782  00F3C2  74                 	db	116	;'t'
  9783  00F3C3  70                 	db	112	;'p'
  9784  00F3C4  75                 	db	117	;'u'
  9785  00F3C5  74                 	db	116	;'t'
  9786  00F3C6  20                 	db	32
  9787  00F3C7  70                 	db	112	;'p'
  9788  00F3C8  6F                 	db	111	;'o'
  9789  00F3C9  77                 	db	119	;'w'
  9790  00F3CA  65                 	db	101	;'e'
  9791  00F3CB  72                 	db	114	;'r'
  9792  00F3CC  20                 	db	32
  9793  00F3CD  63                 	db	99	;'c'
  9794  00F3CE  61                 	db	97	;'a'
  9795  00F3CF  6C                 	db	108	;'l'
  9796  00F3D0  63                 	db	99	;'c'
  9797  00F3D1  75                 	db	117	;'u'
  9798  00F3D2  6C                 	db	108	;'l'
  9799  00F3D3  61                 	db	97	;'a'
  9800  00F3D4  74                 	db	116	;'t'
  9801  00F3D5  65                 	db	101	;'e'
  9802  00F3D6  64                 	db	100	;'d'
  9803  00F3D7  20                 	db	32
  9804  00F3D8  61                 	db	97	;'a'
  9805  00F3D9  73                 	db	115	;'s'
  9806  00F3DA  20                 	db	32
  9807  00F3DB  25                 	db	37
  9808  00F3DC  2E                 	db	46
  9809  00F3DD  33                 	db	51	;'3'
  9810  00F3DE  66                 	db	102	;'f'
  9811  00F3DF  20                 	db	32
  9812  00F3E0  57                 	db	87	;'W'
  9813  00F3E1  61                 	db	97	;'a'
  9814  00F3E2  74                 	db	116	;'t'
  9815  00F3E3  74                 	db	116	;'t'
  9816  00F3E4  73                 	db	115	;'s'
  9817  00F3E5  20                 	db	32
  9818  00F3E6  66                 	db	102	;'f'
  9819  00F3E7  72                 	db	114	;'r'
  9820  00F3E8  6F                 	db	111	;'o'
  9821  00F3E9  6D                 	db	109	;'m'
  9822  00F3EA  20                 	db	32
  9823  00F3EB  52                 	db	82	;'R'
  9824  00F3EC  4D                 	db	77	;'M'
  9825  00F3ED  53                 	db	83	;'S'
  9826  00F3EE  20                 	db	32
  9827  00F3EF  76                 	db	118	;'v'
  9828  00F3F0  61                 	db	97	;'a'
  9829  00F3F1  6C                 	db	108	;'l'
  9830  00F3F2  75                 	db	117	;'u'
  9831  00F3F3  65                 	db	101	;'e'
  9832  00F3F4  73                 	db	115	;'s'
  9833  00F3F5  0A                 	db	10
  9834  00F3F6  0D                 	db	13
  9835  00F3F7  00                 	db	0
  9836  00F3F8                     STR_165:
  9837  00F3F8  48                 	db	72	;'H'
  9838  00F3F9  65                 	db	101	;'e'
  9839  00F3FA  6C                 	db	108	;'l'
  9840  00F3FB  70                 	db	112	;'p'
  9841  00F3FC  20                 	db	32
  9842  00F3FD  6D                 	db	109	;'m'
  9843  00F3FE  65                 	db	101	;'e'
  9844  00F3FF  73                 	db	115	;'s'
  9845  00F400  73                 	db	115	;'s'
  9846  00F401  61                 	db	97	;'a'
  9847  00F402  67                 	db	103	;'g'
  9848  00F403  65                 	db	101	;'e'
  9849  00F404  73                 	db	115	;'s'
  9850  00F405  20                 	db	32
  9851  00F406  61                 	db	97	;'a'
  9852  00F407  6E                 	db	110	;'n'
  9853  00F408  64                 	db	100	;'d'
  9854  00F409  20                 	db	32
  9855  00F40A  6E                 	db	110	;'n'
  9856  00F40B  65                 	db	101	;'e'
  9857  00F40C  75                 	db	117	;'u'
  9858  00F40D  74                 	db	116	;'t'
  9859  00F40E  72                 	db	114	;'r'
  9860  00F40F  61                 	db	97	;'a'
  9861  00F410  6C                 	db	108	;'l'
  9862  00F411  20                 	db	32
  9863  00F412  72                 	db	114	;'r'
  9864  00F413  65                 	db	101	;'e'
  9865  00F414  73                 	db	115	;'s'
  9866  00F415  70                 	db	112	;'p'
  9867  00F416  6F                 	db	111	;'o'
  9868  00F417  6E                 	db	110	;'n'
  9869  00F418  73                 	db	115	;'s'
  9870  00F419  65                 	db	101	;'e'
  9871  00F41A  73                 	db	115	;'s'
  9872  00F41B  20                 	db	32
  9873  00F41C  61                 	db	97	;'a'
  9874  00F41D  70                 	db	112	;'p'
  9875  00F41E  70                 	db	112	;'p'
  9876  00F41F  65                 	db	101	;'e'
  9877  00F420  61                 	db	97	;'a'
  9878  00F421  72                 	db	114	;'r'
  9879  00F422  20                 	db	32
  9880  00F423  69                 	db	105	;'i'
  9881  00F424  6E                 	db	110	;'n'
  9882  00F425  20                 	db	32
  9883  00F426  79                 	db	121	;'y'
  9884  00F427  65                 	db	101	;'e'
  9885  00F428  6C                 	db	108	;'l'
  9886  00F429  6C                 	db	108	;'l'
  9887  00F42A  6F                 	db	111	;'o'
  9888  00F42B  77                 	db	119	;'w'
  9889  00F42C  0A                 	db	10
  9890  00F42D  0D                 	db	13
  9891  00F42E  00                 	db	0
  9892  00F42F                     STR_152:
  9893  00F42F  4D                 	db	77	;'M'
  9894  00F430  61                 	db	97	;'a'
  9895  00F431  78                 	db	120	;'x'
  9896  00F432  69                 	db	105	;'i'
  9897  00F433  6D                 	db	109	;'m'
  9898  00F434  75                 	db	117	;'u'
  9899  00F435  6D                 	db	109	;'m'
  9900  00F436  20                 	db	32
  9901  00F437  72                 	db	114	;'r'
  9902  00F438  65                 	db	101	;'e'
  9903  00F439  63                 	db	99	;'c'
  9904  00F43A  6F                 	db	111	;'o'
  9905  00F43B  72                 	db	114	;'r'
  9906  00F43C  64                 	db	100	;'d'
  9907  00F43D  65                 	db	101	;'e'
  9908  00F43E  64                 	db	100	;'d'
  9909  00F43F  20                 	db	32
  9910  00F440  76                 	db	118	;'v'
  9911  00F441  61                 	db	97	;'a'
  9912  00F442  6C                 	db	108	;'l'
  9913  00F443  75                 	db	117	;'u'
  9914  00F444  65                 	db	101	;'e'
  9915  00F445  73                 	db	115	;'s'
  9916  00F446  20                 	db	32
  9917  00F447  65                 	db	101	;'e'
  9918  00F448  72                 	db	114	;'r'
  9919  00F449  61                 	db	97	;'a'
  9920  00F44A  73                 	db	115	;'s'
  9921  00F44B  65                 	db	101	;'e'
  9922  00F44C  64                 	db	100	;'d'
  9923  00F44D  20                 	db	32
  9924  00F44E  66                 	db	102	;'f'
  9925  00F44F  72                 	db	114	;'r'
  9926  00F450  6F                 	db	111	;'o'
  9927  00F451  6D                 	db	109	;'m'
  9928  00F452  20                 	db	32
  9929  00F453  53                 	db	83	;'S'
  9930  00F454  52                 	db	82	;'R'
  9931  00F455  41                 	db	65	;'A'
  9932  00F456  4D                 	db	77	;'M'
  9933  00F457  20                 	db	32
  9934  00F458  61                 	db	97	;'a'
  9935  00F459  6E                 	db	110	;'n'
  9936  00F45A  64                 	db	100	;'d'
  9937  00F45B  20                 	db	32
  9938  00F45C  45                 	db	69	;'E'
  9939  00F45D  45                 	db	69	;'E'
  9940  00F45E  50                 	db	80	;'P'
  9941  00F45F  52                 	db	82	;'R'
  9942  00F460  4F                 	db	79	;'O'
  9943  00F461  4D                 	db	77	;'M'
  9944  00F462  0A                 	db	10
  9945  00F463  0D                 	db	13
  9946  00F464  00                 	db	0
  9947  00F465                     STR_63:
  9948  00F465  20                 	db	32
  9949  00F466  20                 	db	32
  9950  00F467  20                 	db	32
  9951  00F468  20                 	db	32
  9952  00F469  55                 	db	85	;'U'
  9953  00F46A  73                 	db	115	;'s'
  9954  00F46B  65                 	db	101	;'e'
  9955  00F46C  72                 	db	114	;'r'
  9956  00F46D  20                 	db	32
  9957  00F46E  49                 	db	73	;'I'
  9958  00F46F  44                 	db	68	;'D'
  9959  00F470  20                 	db	32
  9960  00F471  57                 	db	87	;'W'
  9961  00F472  6F                 	db	111	;'o'
  9962  00F473  72                 	db	114	;'r'
  9963  00F474  64                 	db	100	;'d'
  9964  00F475  20                 	db	32
  9965  00F476  25                 	db	37
  9966  00F477  64                 	db	100	;'d'
  9967  00F478  20                 	db	32
  9968  00F479  28                 	db	40
  9969  00F47A  46                 	db	70	;'F'
  9970  00F47B  6C                 	db	108	;'l'
  9971  00F47C  61                 	db	97	;'a'
  9972  00F47D  73                 	db	115	;'s'
  9973  00F47E  68                 	db	104	;'h'
  9974  00F47F  20                 	db	32
  9975  00F480  61                 	db	97	;'a'
  9976  00F481  64                 	db	100	;'d'
  9977  00F482  64                 	db	100	;'d'
  9978  00F483  72                 	db	114	;'r'
  9979  00F484  65                 	db	101	;'e'
  9980  00F485  73                 	db	115	;'s'
  9981  00F486  73                 	db	115	;'s'
  9982  00F487  20                 	db	32
  9983  00F488  30                 	db	48	;'0'
  9984  00F489  78                 	db	120	;'x'
  9985  00F48A  32                 	db	50	;'2'
  9986  00F48B  30                 	db	48	;'0'
  9987  00F48C  30                 	db	48	;'0'
  9988  00F48D  30                 	db	48	;'0'
  9989  00F48E  30                 	db	48	;'0'
  9990  00F48F  25                 	db	37
  9991  00F490  58                 	db	88	;'X'
  9992  00F491  29                 	db	41
  9993  00F492  3A                 	db	58	;':'
  9994  00F493  20                 	db	32
  9995  00F494  30                 	db	48	;'0'
  9996  00F495  78                 	db	120	;'x'
  9997  00F496  25                 	db	37
  9998  00F497  58                 	db	88	;'X'
  9999  00F498  0A                 	db	10
 10000  00F499  0D                 	db	13
 10001  00F49A  00                 	db	0
 10002  00F49B                     STR_150:
 10003  00F49B  4D                 	db	77	;'M'
 10004  00F49C  61                 	db	97	;'a'
 10005  00F49D  78                 	db	120	;'x'
 10006  00F49E  69                 	db	105	;'i'
 10007  00F49F  6D                 	db	109	;'m'
 10008  00F4A0  75                 	db	117	;'u'
 10009  00F4A1  6D                 	db	109	;'m'
 10010  00F4A2  20                 	db	32
 10011  00F4A3  72                 	db	114	;'r'
 10012  00F4A4  65                 	db	101	;'e'
 10013  00F4A5  63                 	db	99	;'c'
 10014  00F4A6  6F                 	db	111	;'o'
 10015  00F4A7  72                 	db	114	;'r'
 10016  00F4A8  64                 	db	100	;'d'
 10017  00F4A9  65                 	db	101	;'e'
 10018  00F4AA  64                 	db	100	;'d'
 10019  00F4AB  20                 	db	32
 10020  00F4AC  46                 	db	70	;'F'
 10021  00F4AD  56                 	db	86	;'V'
 10022  00F4AE  52                 	db	82	;'R'
 10023  00F4AF  20                 	db	32
 10024  00F4B0  62                 	db	98	;'b'
 10025  00F4B1  75                 	db	117	;'u'
 10026  00F4B2  66                 	db	102	;'f'
 10027  00F4B3  66                 	db	102	;'f'
 10028  00F4B4  65                 	db	101	;'e'
 10029  00F4B5  72                 	db	114	;'r'
 10030  00F4B6  20                 	db	32
 10031  00F4B7  31                 	db	49	;'1'
 10032  00F4B8  20                 	db	32
 10033  00F4B9  76                 	db	118	;'v'
 10034  00F4BA  6F                 	db	111	;'o'
 10035  00F4BB  6C                 	db	108	;'l'
 10036  00F4BC  74                 	db	116	;'t'
 10037  00F4BD  61                 	db	97	;'a'
 10038  00F4BE  67                 	db	103	;'g'
 10039  00F4BF  65                 	db	101	;'e'
 10040  00F4C0  20                 	db	32
 10041  00F4C1  69                 	db	105	;'i'
 10042  00F4C2  73                 	db	115	;'s'
 10043  00F4C3  20                 	db	32
 10044  00F4C4  25                 	db	37
 10045  00F4C5  2E                 	db	46
 10046  00F4C6  33                 	db	51	;'3'
 10047  00F4C7  66                 	db	102	;'f'
 10048  00F4C8  20                 	db	32
 10049  00F4C9  56                 	db	86	;'V'
 10050  00F4CA  6F                 	db	111	;'o'
 10051  00F4CB  6C                 	db	108	;'l'
 10052  00F4CC  74                 	db	116	;'t'
 10053  00F4CD  73                 	db	115	;'s'
 10054  00F4CE  0A                 	db	10
 10055  00F4CF  0D                 	db	13
 10056  00F4D0  00                 	db	0
 10057  00F4D1                     STR_112:
 10058  00F4D1  49                 	db	73	;'I'
 10059  00F4D2  66                 	db	102	;'f'
 10060  00F4D3  20                 	db	32
 10061  00F4D4  79                 	db	121	;'y'
 10062  00F4D5  65                 	db	101	;'e'
 10063  00F4D6  73                 	db	115	;'s'
 10064  00F4D7  2C                 	db	44
 10065  00F4D8  20                 	db	32
 10066  00F4D9  72                 	db	114	;'r'
 10067  00F4DA  65                 	db	101	;'e'
 10068  00F4DB  70                 	db	112	;'p'
 10069  00F4DC  6C                 	db	108	;'l'
 10070  00F4DD  79                 	db	121	;'y'
 10071  00F4DE  20                 	db	32
 10072  00F4DF  27                 	db	39
 10073  00F4E0  45                 	db	69	;'E'
 10074  00F4E1  6E                 	db	110	;'n'
 10075  00F4E2  61                 	db	97	;'a'
 10076  00F4E3  62                 	db	98	;'b'
 10077  00F4E4  6C                 	db	108	;'l'
 10078  00F4E5  65                 	db	101	;'e'
 10079  00F4E6  20                 	db	32
 10080  00F4E7  44                 	db	68	;'D'
 10081  00F4E8  69                 	db	105	;'i'
 10082  00F4E9  6D                 	db	109	;'m'
 10083  00F4EA  6D                 	db	109	;'m'
 10084  00F4EB  69                 	db	105	;'i'
 10085  00F4EC  6E                 	db	110	;'n'
 10086  00F4ED  67                 	db	103	;'g'
 10087  00F4EE  20                 	db	32
 10088  00F4EF  59                 	db	89	;'Y'
 10089  00F4F0  27                 	db	39
 10090  00F4F1  20                 	db	32
 10091  00F4F2  6F                 	db	111	;'o'
 10092  00F4F3  6E                 	db	110	;'n'
 10093  00F4F4  20                 	db	32
 10094  00F4F5  74                 	db	116	;'t'
 10095  00F4F6  68                 	db	104	;'h'
 10096  00F4F7  65                 	db	101	;'e'
 10097  00F4F8  20                 	db	32
 10098  00F4F9  6E                 	db	110	;'n'
 10099  00F4FA  65                 	db	101	;'e'
 10100  00F4FB  78                 	db	120	;'x'
 10101  00F4FC  74                 	db	116	;'t'
 10102  00F4FD  20                 	db	32
 10103  00F4FE  6C                 	db	108	;'l'
 10104  00F4FF  69                 	db	105	;'i'
 10105  00F500  6E                 	db	110	;'n'
 10106  00F501  65                 	db	101	;'e'
 10107  00F502  3A                 	db	58	;':'
 10108  00F503  0A                 	db	10
 10109  00F504  0D                 	db	13
 10110  00F505  00                 	db	0
 10111  00F506                     STR_124:
 10112  00F506  4C                 	db	76	;'L'
 10113  00F507  6F                 	db	111	;'o'
 10114  00F508  61                 	db	97	;'a'
 10115  00F509  64                 	db	100	;'d'
 10116  00F50A  20                 	db	32
 10117  00F50B  69                 	db	105	;'i'
 10118  00F50C  73                 	db	115	;'s'
 10119  00F50D  20                 	db	32
 10120  00F50E  63                 	db	99	;'c'
 10121  00F50F  75                 	db	117	;'u'
 10122  00F510  72                 	db	114	;'r'
 10123  00F511  72                 	db	114	;'r'
 10124  00F512  65                 	db	101	;'e'
 10125  00F513  6E                 	db	110	;'n'
 10126  00F514  74                 	db	116	;'t'
 10127  00F515  6C                 	db	108	;'l'
 10128  00F516  79                 	db	121	;'y'
 10129  00F517  20                 	db	32
 10130  00F518  65                 	db	101	;'e'
 10131  00F519  6E                 	db	110	;'n'
 10132  00F51A  61                 	db	97	;'a'
 10133  00F51B  62                 	db	98	;'b'
 10134  00F51C  6C                 	db	108	;'l'
 10135  00F51D  65                 	db	101	;'e'
 10136  00F51E  64                 	db	100	;'d'
 10137  00F51F  2C                 	db	44
 10138  00F520  20                 	db	32
 10139  00F521  62                 	db	98	;'b'
 10140  00F522  75                 	db	117	;'u'
 10141  00F523  74                 	db	116	;'t'
 10142  00F524  20                 	db	32
 10143  00F525  64                 	db	100	;'d'
 10144  00F526  69                 	db	105	;'i'
 10145  00F527  6D                 	db	109	;'m'
 10146  00F528  6D                 	db	109	;'m'
 10147  00F529  69                 	db	105	;'i'
 10148  00F52A  6E                 	db	110	;'n'
 10149  00F52B  67                 	db	103	;'g'
 10150  00F52C  20                 	db	32
 10151  00F52D  69                 	db	105	;'i'
 10152  00F52E  73                 	db	115	;'s'
 10153  00F52F  20                 	db	32
 10154  00F530  64                 	db	100	;'d'
 10155  00F531  69                 	db	105	;'i'
 10156  00F532  73                 	db	115	;'s'
 10157  00F533  61                 	db	97	;'a'
 10158  00F534  62                 	db	98	;'b'
 10159  00F535  6C                 	db	108	;'l'
 10160  00F536  65                 	db	101	;'e'
 10161  00F537  64                 	db	100	;'d'
 10162  00F538  0A                 	db	10
 10163  00F539  0D                 	db	13
 10164  00F53A  00                 	db	0
 10165  00F53B                     STR_138:
 10166  00F53B  4C                 	db	76	;'L'
 10167  00F53C  6F                 	db	111	;'o'
 10168  00F53D  61                 	db	97	;'a'
 10169  00F53E  64                 	db	100	;'d'
 10170  00F53F  20                 	db	32
 10171  00F540  6F                 	db	111	;'o'
 10172  00F541  6E                 	db	110	;'n'
 10173  00F542  20                 	db	32
 10174  00F543  74                 	db	116	;'t'
 10175  00F544  69                 	db	105	;'i'
 10176  00F545  6D                 	db	109	;'m'
 10177  00F546  65                 	db	101	;'e'
 10178  00F547  20                 	db	32
 10179  00F548  73                 	db	115	;'s'
 10180  00F549  69                 	db	105	;'i'
 10181  00F54A  6E                 	db	110	;'n'
 10182  00F54B  63                 	db	99	;'c'
 10183  00F54C  65                 	db	101	;'e'
 10184  00F54D  20                 	db	32
 10185  00F54E  6C                 	db	108	;'l'
 10186  00F54F  61                 	db	97	;'a'
 10187  00F550  73                 	db	115	;'s'
 10188  00F551  74                 	db	116	;'t'
 10189  00F552  20                 	db	32
 10190  00F553  64                 	db	100	;'d'
 10191  00F554  65                 	db	101	;'e'
 10192  00F555  76                 	db	118	;'v'
 10193  00F556  69                 	db	105	;'i'
 10194  00F557  63                 	db	99	;'c'
 10195  00F558  65                 	db	101	;'e'
 10196  00F559  20                 	db	32
 10197  00F55A  72                 	db	114	;'r'
 10198  00F55B  65                 	db	101	;'e'
 10199  00F55C  73                 	db	115	;'s'
 10200  00F55D  65                 	db	101	;'e'
 10201  00F55E  74                 	db	116	;'t'
 10202  00F55F  20                 	db	32
 10203  00F560  69                 	db	105	;'i'
 10204  00F561  73                 	db	115	;'s'
 10205  00F562  20                 	db	32
 10206  00F563  25                 	db	37
 10207  00F564  64                 	db	100	;'d'
 10208  00F565  20                 	db	32
 10209  00F566  73                 	db	115	;'s'
 10210  00F567  65                 	db	101	;'e'
 10211  00F568  63                 	db	99	;'c'
 10212  00F569  6F                 	db	111	;'o'
 10213  00F56A  6E                 	db	110	;'n'
 10214  00F56B  64                 	db	100	;'d'
 10215  00F56C  73                 	db	115	;'s'
 10216  00F56D  0A                 	db	10
 10217  00F56E  0D                 	db	13
 10218  00F56F  00                 	db	0
 10219  00F570                     STR_111:
 10220  00F570  41                 	db	65	;'A'
 10221  00F571  72                 	db	114	;'r'
 10222  00F572  65                 	db	101	;'e'
 10223  00F573  20                 	db	32
 10224  00F574  79                 	db	121	;'y'
 10225  00F575  6F                 	db	111	;'o'
 10226  00F576  75                 	db	117	;'u'
 10227  00F577  20                 	db	32
 10228  00F578  73                 	db	115	;'s'
 10229  00F579  75                 	db	117	;'u'
 10230  00F57A  72                 	db	114	;'r'
 10231  00F57B  65                 	db	101	;'e'
 10232  00F57C  20                 	db	32
 10233  00F57D  79                 	db	121	;'y'
 10234  00F57E  6F                 	db	111	;'o'
 10235  00F57F  75                 	db	117	;'u'
 10236  00F580  27                 	db	39
 10237  00F581  64                 	db	100	;'d'
 10238  00F582  20                 	db	32
 10239  00F583  6C                 	db	108	;'l'
 10240  00F584  69                 	db	105	;'i'
 10241  00F585  6B                 	db	107	;'k'
 10242  00F586  65                 	db	101	;'e'
 10243  00F587  20                 	db	32
 10244  00F588  74                 	db	116	;'t'
 10245  00F589  6F                 	db	111	;'o'
 10246  00F58A  20                 	db	32
 10247  00F58B  65                 	db	101	;'e'
 10248  00F58C  6E                 	db	110	;'n'
 10249  00F58D  61                 	db	97	;'a'
 10250  00F58E  62                 	db	98	;'b'
 10251  00F58F  6C                 	db	108	;'l'
 10252  00F590  65                 	db	101	;'e'
 10253  00F591  20                 	db	32
 10254  00F592  6F                 	db	111	;'o'
 10255  00F593  75                 	db	117	;'u'
 10256  00F594  74                 	db	116	;'t'
 10257  00F595  70                 	db	112	;'p'
 10258  00F596  75                 	db	117	;'u'
 10259  00F597  74                 	db	116	;'t'
 10260  00F598  20                 	db	32
 10261  00F599  64                 	db	100	;'d'
 10262  00F59A  69                 	db	105	;'i'
 10263  00F59B  6D                 	db	109	;'m'
 10264  00F59C  6D                 	db	109	;'m'
 10265  00F59D  69                 	db	105	;'i'
 10266  00F59E  6E                 	db	110	;'n'
 10267  00F59F  67                 	db	103	;'g'
 10268  00F5A0  3F                 	db	63	;'?'
 10269  00F5A1  0A                 	db	10
 10270  00F5A2  0D                 	db	13
 10271  00F5A3  00                 	db	0
 10272  00F5A4                     STR_52:
 10273  00F5A4  54                 	db	84	;'T'
 10274  00F5A5  68                 	db	104	;'h'
 10275  00F5A6  65                 	db	101	;'e'
 10276  00F5A7  20                 	db	32
 10277  00F5A8  63                 	db	99	;'c'
 10278  00F5A9  61                 	db	97	;'a'
 10279  00F5AA  75                 	db	117	;'u'
 10280  00F5AB  73                 	db	115	;'s'
 10281  00F5AC  65                 	db	101	;'e'
 10282  00F5AD  20                 	db	32
 10283  00F5AE  6F                 	db	111	;'o'
 10284  00F5AF  66                 	db	102	;'f'
 10285  00F5B0  20                 	db	32
 10286  00F5B1  74                 	db	116	;'t'
 10287  00F5B2  68                 	db	104	;'h'
 10288  00F5B3  65                 	db	101	;'e'
 10289  00F5B4  20                 	db	32
 10290  00F5B5  6D                 	db	109	;'m'
 10291  00F5B6  6F                 	db	111	;'o'
 10292  00F5B7  73                 	db	115	;'s'
 10293  00F5B8  74                 	db	116	;'t'
 10294  00F5B9  20                 	db	32
 10295  00F5BA  72                 	db	114	;'r'
 10296  00F5BB  65                 	db	101	;'e'
 10297  00F5BC  63                 	db	99	;'c'
 10298  00F5BD  65                 	db	101	;'e'
 10299  00F5BE  6E                 	db	110	;'n'
 10300  00F5BF  74                 	db	116	;'t'
 10301  00F5C0  20                 	db	32
 10302  00F5C1  64                 	db	100	;'d'
 10303  00F5C2  65                 	db	101	;'e'
 10304  00F5C3  76                 	db	118	;'v'
 10305  00F5C4  69                 	db	105	;'i'
 10306  00F5C5  63                 	db	99	;'c'
 10307  00F5C6  65                 	db	101	;'e'
 10308  00F5C7  20                 	db	32
 10309  00F5C8  72                 	db	114	;'r'
 10310  00F5C9  65                 	db	101	;'e'
 10311  00F5CA  73                 	db	115	;'s'
 10312  00F5CB  65                 	db	101	;'e'
 10313  00F5CC  74                 	db	116	;'t'
 10314  00F5CD  20                 	db	32
 10315  00F5CE  77                 	db	119	;'w'
 10316  00F5CF  61                 	db	97	;'a'
 10317  00F5D0  73                 	db	115	;'s'
 10318  00F5D1  3A                 	db	58	;':'
 10319  00F5D2  20                 	db	32
 10320  00F5D3  25                 	db	37
 10321  00F5D4  73                 	db	115	;'s'
 10322  00F5D5  0A                 	db	10
 10323  00F5D6  0D                 	db	13
 10324  00F5D7  00                 	db	0
 10325  00F5D8                     STR_144:
 10326  00F5D8  4D                 	db	77	;'M'
 10327  00F5D9  61                 	db	97	;'a'
 10328  00F5DA  78                 	db	120	;'x'
 10329  00F5DB  69                 	db	105	;'i'
 10330  00F5DC  6D                 	db	109	;'m'
 10331  00F5DD  75                 	db	117	;'u'
 10332  00F5DE  6D                 	db	109	;'m'
 10333  00F5DF  20                 	db	32
 10334  00F5E0  72                 	db	114	;'r'
 10335  00F5E1  65                 	db	101	;'e'
 10336  00F5E2  63                 	db	99	;'c'
 10337  00F5E3  6F                 	db	111	;'o'
 10338  00F5E4  72                 	db	114	;'r'
 10339  00F5E5  64                 	db	100	;'d'
 10340  00F5E6  65                 	db	101	;'e'
 10341  00F5E7  64                 	db	100	;'d'
 10342  00F5E8  20                 	db	32
 10343  00F5E9  2B                 	db	43
 10344  00F5EA  33                 	db	51	;'3'
 10345  00F5EB  2E                 	db	46
 10346  00F5EC  33                 	db	51	;'3'
 10347  00F5ED  56                 	db	86	;'V'
 10348  00F5EE  20                 	db	32
 10349  00F5EF  72                 	db	114	;'r'
 10350  00F5F0  61                 	db	97	;'a'
 10351  00F5F1  69                 	db	105	;'i'
 10352  00F5F2  6C                 	db	108	;'l'
 10353  00F5F3  20                 	db	32
 10354  00F5F4  76                 	db	118	;'v'
 10355  00F5F5  6F                 	db	111	;'o'
 10356  00F5F6  6C                 	db	108	;'l'
 10357  00F5F7  74                 	db	116	;'t'
 10358  00F5F8  61                 	db	97	;'a'
 10359  00F5F9  67                 	db	103	;'g'
 10360  00F5FA  65                 	db	101	;'e'
 10361  00F5FB  20                 	db	32
 10362  00F5FC  69                 	db	105	;'i'
 10363  00F5FD  73                 	db	115	;'s'
 10364  00F5FE  20                 	db	32
 10365  00F5FF  25                 	db	37
 10366  00F600  2E                 	db	46
 10367  00F601  33                 	db	51	;'3'
 10368  00F602  66                 	db	102	;'f'
 10369  00F603  20                 	db	32
 10370  00F604  56                 	db	86	;'V'
 10371  00F605  6F                 	db	111	;'o'
 10372  00F606  6C                 	db	108	;'l'
 10373  00F607  74                 	db	116	;'t'
 10374  00F608  73                 	db	115	;'s'
 10375  00F609  0A                 	db	10
 10376  00F60A  0D                 	db	13
 10377  00F60B  00                 	db	0
 10378  00F60C                     STR_140:
 10379  00F60C  4D                 	db	77	;'M'
 10380  00F60D  61                 	db	97	;'a'
 10381  00F60E  78                 	db	120	;'x'
 10382  00F60F  69                 	db	105	;'i'
 10383  00F610  6D                 	db	109	;'m'
 10384  00F611  75                 	db	117	;'u'
 10385  00F612  6D                 	db	109	;'m'
 10386  00F613  20                 	db	32
 10387  00F614  72                 	db	114	;'r'
 10388  00F615  65                 	db	101	;'e'
 10389  00F616  63                 	db	99	;'c'
 10390  00F617  6F                 	db	111	;'o'
 10391  00F618  72                 	db	114	;'r'
 10392  00F619  64                 	db	100	;'d'
 10393  00F61A  65                 	db	101	;'e'
 10394  00F61B  64                 	db	100	;'d'
 10395  00F61C  20                 	db	32
 10396  00F61D  52                 	db	82	;'R'
 10397  00F61E  4D                 	db	77	;'M'
 10398  00F61F  53                 	db	83	;'S'
 10399  00F620  20                 	db	32
 10400  00F621  6F                 	db	111	;'o'
 10401  00F622  75                 	db	117	;'u'
 10402  00F623  74                 	db	116	;'t'
 10403  00F624  70                 	db	112	;'p'
 10404  00F625  75                 	db	117	;'u'
 10405  00F626  74                 	db	116	;'t'
 10406  00F627  20                 	db	32
 10407  00F628  63                 	db	99	;'c'
 10408  00F629  75                 	db	117	;'u'
 10409  00F62A  72                 	db	114	;'r'
 10410  00F62B  72                 	db	114	;'r'
 10411  00F62C  65                 	db	101	;'e'
 10412  00F62D  6E                 	db	110	;'n'
 10413  00F62E  74                 	db	116	;'t'
 10414  00F62F  20                 	db	32
 10415  00F630  69                 	db	105	;'i'
 10416  00F631  73                 	db	115	;'s'
 10417  00F632  20                 	db	32
 10418  00F633  25                 	db	37
 10419  00F634  2E                 	db	46
 10420  00F635  33                 	db	51	;'3'
 10421  00F636  66                 	db	102	;'f'
 10422  00F637  20                 	db	32
 10423  00F638  41                 	db	65	;'A'
 10424  00F639  72                 	db	114	;'r'
 10425  00F63A  6D                 	db	109	;'m'
 10426  00F63B  73                 	db	115	;'s'
 10427  00F63C  0A                 	db	10
 10428  00F63D  0D                 	db	13
 10429  00F63E  00                 	db	0
 10430  00F63F                     STR_146:
 10431  00F63F  4D                 	db	77	;'M'
 10432  00F640  61                 	db	97	;'a'
 10433  00F641  78                 	db	120	;'x'
 10434  00F642  69                 	db	105	;'i'
 10435  00F643  6D                 	db	109	;'m'
 10436  00F644  75                 	db	117	;'u'
 10437  00F645  6D                 	db	109	;'m'
 10438  00F646  20                 	db	32
 10439  00F647  72                 	db	114	;'r'
 10440  00F648  65                 	db	101	;'e'
 10441  00F649  63                 	db	99	;'c'
 10442  00F64A  6F                 	db	111	;'o'
 10443  00F64B  72                 	db	114	;'r'
 10444  00F64C  64                 	db	100	;'d'
 10445  00F64D  65                 	db	101	;'e'
 10446  00F64E  64                 	db	100	;'d'
 10447  00F64F  20                 	db	32
 10448  00F650  2B                 	db	43
 10449  00F651  31                 	db	49	;'1'
 10450  00F652  32                 	db	50	;'2'
 10451  00F653  56                 	db	86	;'V'
 10452  00F654  20                 	db	32
 10453  00F655  72                 	db	114	;'r'
 10454  00F656  61                 	db	97	;'a'
 10455  00F657  69                 	db	105	;'i'
 10456  00F658  6C                 	db	108	;'l'
 10457  00F659  20                 	db	32
 10458  00F65A  76                 	db	118	;'v'
 10459  00F65B  6F                 	db	111	;'o'
 10460  00F65C  6C                 	db	108	;'l'
 10461  00F65D  74                 	db	116	;'t'
 10462  00F65E  61                 	db	97	;'a'
 10463  00F65F  67                 	db	103	;'g'
 10464  00F660  65                 	db	101	;'e'
 10465  00F661  20                 	db	32
 10466  00F662  69                 	db	105	;'i'
 10467  00F663  73                 	db	115	;'s'
 10468  00F664  20                 	db	32
 10469  00F665  25                 	db	37
 10470  00F666  2E                 	db	46
 10471  00F667  33                 	db	51	;'3'
 10472  00F668  66                 	db	102	;'f'
 10473  00F669  20                 	db	32
 10474  00F66A  56                 	db	86	;'V'
 10475  00F66B  6F                 	db	111	;'o'
 10476  00F66C  6C                 	db	108	;'l'
 10477  00F66D  74                 	db	116	;'t'
 10478  00F66E  73                 	db	115	;'s'
 10479  00F66F  0A                 	db	10
 10480  00F670  0D                 	db	13
 10481  00F671  00                 	db	0
 10482  00F672                     STR_74:
 10483  00F672  43                 	db	67	;'C'
 10484  00F673  61                 	db	97	;'a'
 10485  00F674  6C                 	db	108	;'l'
 10486  00F675  6C                 	db	108	;'l'
 10487  00F676  20                 	db	32
 10488  00F677  27                 	db	39
 10489  00F678  43                 	db	67	;'C'
 10490  00F679  6C                 	db	108	;'l'
 10491  00F67A  65                 	db	101	;'e'
 10492  00F67B  61                 	db	97	;'a'
 10493  00F67C  72                 	db	114	;'r'
 10494  00F67D  20                 	db	32
 10495  00F67E  41                 	db	65	;'A'
 10496  00F67F  44                 	db	68	;'D'
 10497  00F680  43                 	db	67	;'C'
 10498  00F681  20                 	db	32
 10499  00F682  45                 	db	69	;'E'
 10500  00F683  72                 	db	114	;'r'
 10501  00F684  72                 	db	114	;'r'
 10502  00F685  6F                 	db	111	;'o'
 10503  00F686  72                 	db	114	;'r'
 10504  00F687  73                 	db	115	;'s'
 10505  00F688  27                 	db	39
 10506  00F689  20                 	db	32
 10507  00F68A  74                 	db	116	;'t'
 10508  00F68B  6F                 	db	111	;'o'
 10509  00F68C  20                 	db	32
 10510  00F68D  63                 	db	99	;'c'
 10511  00F68E  6C                 	db	108	;'l'
 10512  00F68F  65                 	db	101	;'e'
 10513  00F690  61                 	db	97	;'a'
 10514  00F691  72                 	db	114	;'r'
 10515  00F692  20                 	db	32
 10516  00F693  41                 	db	65	;'A'
 10517  00F694  44                 	db	68	;'D'
 10518  00F695  43                 	db	67	;'C'
 10519  00F696  20                 	db	32
 10520  00F697  65                 	db	101	;'e'
 10521  00F698  72                 	db	114	;'r'
 10522  00F699  72                 	db	114	;'r'
 10523  00F69A  6F                 	db	111	;'o'
 10524  00F69B  72                 	db	114	;'r'
 10525  00F69C  28                 	db	40
 10526  00F69D  73                 	db	115	;'s'
 10527  00F69E  29                 	db	41
 10528  00F69F  0A                 	db	10
 10529  00F6A0  0D                 	db	13
 10530  00F6A1  00                 	db	0
 10531  00F6A2                     STR_56:
 10532  00F6A2  4D                 	db	77	;'M'
 10533  00F6A3  61                 	db	97	;'a'
 10534  00F6A4  72                 	db	114	;'r'
 10535  00F6A5  71                 	db	113	;'q'
 10536  00F6A6  75                 	db	117	;'u'
 10537  00F6A7  65                 	db	101	;'e'
 10538  00F6A8  74                 	db	116	;'t'
 10539  00F6A9  74                 	db	116	;'t'
 10540  00F6AA  65                 	db	101	;'e'
 10541  00F6AB  20                 	db	32
 10542  00F6AC  55                 	db	85	;'U'
 10543  00F6AD  6E                 	db	110	;'n'
 10544  00F6AE  69                 	db	105	;'i'
 10545  00F6AF  76                 	db	118	;'v'
 10546  00F6B0  65                 	db	101	;'e'
 10547  00F6B1  72                 	db	114	;'r'
 10548  00F6B2  73                 	db	115	;'s'
 10549  00F6B3  69                 	db	105	;'i'
 10550  00F6B4  74                 	db	116	;'t'
 10551  00F6B5  79                 	db	121	;'y'
 10552  00F6B6  20                 	db	32
 10553  00F6B7  45                 	db	69	;'E'
 10554  00F6B8  4C                 	db	76	;'L'
 10555  00F6B9  45                 	db	69	;'E'
 10556  00F6BA  4E                 	db	78	;'N'
 10557  00F6BB  20                 	db	32
 10558  00F6BC  33                 	db	51	;'3'
 10559  00F6BD  30                 	db	48	;'0'
 10560  00F6BE  33                 	db	51	;'3'
 10561  00F6BF  35                 	db	53	;'5'
 10562  00F6C0  20                 	db	32
 10563  00F6C1  46                 	db	70	;'F'
 10564  00F6C2  69                 	db	105	;'i'
 10565  00F6C3  6E                 	db	110	;'n'
 10566  00F6C4  61                 	db	97	;'a'
 10567  00F6C5  6C                 	db	108	;'l'
 10568  00F6C6  20                 	db	32
 10569  00F6C7  50                 	db	80	;'P'
 10570  00F6C8  72                 	db	114	;'r'
 10571  00F6C9  6F                 	db	111	;'o'
 10572  00F6CA  6A                 	db	106	;'j'
 10573  00F6CB  65                 	db	101	;'e'
 10574  00F6CC  63                 	db	99	;'c'
 10575  00F6CD  74                 	db	116	;'t'
 10576  00F6CE  0A                 	db	10
 10577  00F6CF  0D                 	db	13
 10578  00F6D0  00                 	db	0
 10579  00F6D1                     STR_66:
 10580  00F6D1  54                 	db	84	;'T'
 10581  00F6D2  68                 	db	104	;'h'
 10582  00F6D3  65                 	db	101	;'e'
 10583  00F6D4  20                 	db	32
 10584  00F6D5  66                 	db	102	;'f'
 10585  00F6D6  6F                 	db	111	;'o'
 10586  00F6D7  6C                 	db	108	;'l'
 10587  00F6D8  6C                 	db	108	;'l'
 10588  00F6D9  6F                 	db	111	;'o'
 10589  00F6DA  77                 	db	119	;'w'
 10590  00F6DB  69                 	db	105	;'i'
 10591  00F6DC  6E                 	db	110	;'n'
 10592  00F6DD  67                 	db	103	;'g'
 10593  00F6DE  20                 	db	32
 10594  00F6DF  63                 	db	99	;'c'
 10595  00F6E0  68                 	db	104	;'h'
 10596  00F6E1  61                 	db	97	;'a'
 10597  00F6E2  6E                 	db	110	;'n'
 10598  00F6E3  6E                 	db	110	;'n'
 10599  00F6E4  65                 	db	101	;'e'
 10600  00F6E5  6C                 	db	108	;'l'
 10601  00F6E6  73                 	db	115	;'s'
 10602  00F6E7  20                 	db	32
 10603  00F6E8  63                 	db	99	;'c'
 10604  00F6E9  61                 	db	97	;'a'
 10605  00F6EA  75                 	db	117	;'u'
 10606  00F6EB  73                 	db	115	;'s'
 10607  00F6EC  65                 	db	101	;'e'
 10608  00F6ED  64                 	db	100	;'d'
 10609  00F6EE  20                 	db	32
 10610  00F6EF  61                 	db	97	;'a'
 10611  00F6F0  6E                 	db	110	;'n'
 10612  00F6F1  20                 	db	32
 10613  00F6F2  41                 	db	65	;'A'
 10614  00F6F3  44                 	db	68	;'D'
 10615  00F6F4  43                 	db	67	;'C'
 10616  00F6F5  20                 	db	32
 10617  00F6F6  65                 	db	101	;'e'
 10618  00F6F7  72                 	db	114	;'r'
 10619  00F6F8  72                 	db	114	;'r'
 10620  00F6F9  6F                 	db	111	;'o'
 10621  00F6FA  72                 	db	114	;'r'
 10622  00F6FB  3A                 	db	58	;':'
 10623  00F6FC  0A                 	db	10
 10624  00F6FD  0D                 	db	13
 10625  00F6FE  00                 	db	0
 10626  00F6FF                     STR_168:
 10627  00F6FF  45                 	db	69	;'E'
 10628  00F700  72                 	db	114	;'r'
 10629  00F701  72                 	db	114	;'r'
 10630  00F702  6F                 	db	111	;'o'
 10631  00F703  72                 	db	114	;'r'
 10632  00F704  73                 	db	115	;'s'
 10633  00F705  20                 	db	32
 10634  00F706  61                 	db	97	;'a'
 10635  00F707  6E                 	db	110	;'n'
 10636  00F708  64                 	db	100	;'d'
 10637  00F709  20                 	db	32
 10638  00F70A  6E                 	db	110	;'n'
 10639  00F70B  65                 	db	101	;'e'
 10640  00F70C  67                 	db	103	;'g'
 10641  00F70D  61                 	db	97	;'a'
 10642  00F70E  74                 	db	116	;'t'
 10643  00F70F  69                 	db	105	;'i'
 10644  00F710  76                 	db	118	;'v'
 10645  00F711  65                 	db	101	;'e'
 10646  00F712  20                 	db	32
 10647  00F713  72                 	db	114	;'r'
 10648  00F714  65                 	db	101	;'e'
 10649  00F715  73                 	db	115	;'s'
 10650  00F716  70                 	db	112	;'p'
 10651  00F717  6F                 	db	111	;'o'
 10652  00F718  6E                 	db	110	;'n'
 10653  00F719  73                 	db	115	;'s'
 10654  00F71A  65                 	db	101	;'e'
 10655  00F71B  73                 	db	115	;'s'
 10656  00F71C  20                 	db	32
 10657  00F71D  61                 	db	97	;'a'
 10658  00F71E  70                 	db	112	;'p'
 10659  00F71F  70                 	db	112	;'p'
 10660  00F720  65                 	db	101	;'e'
 10661  00F721  61                 	db	97	;'a'
 10662  00F722  72                 	db	114	;'r'
 10663  00F723  20                 	db	32
 10664  00F724  69                 	db	105	;'i'
 10665  00F725  6E                 	db	110	;'n'
 10666  00F726  20                 	db	32
 10667  00F727  72                 	db	114	;'r'
 10668  00F728  65                 	db	101	;'e'
 10669  00F729  64                 	db	100	;'d'
 10670  00F72A  0A                 	db	10
 10671  00F72B  0D                 	db	13
 10672  00F72C  00                 	db	0
 10673  00F72D                     STR_131:
 10674  00F72D  45                 	db	69	;'E'
 10675  00F72E  6E                 	db	110	;'n'
 10676  00F72F  74                 	db	116	;'t'
 10677  00F730  65                 	db	101	;'e'
 10678  00F731  72                 	db	114	;'r'
 10679  00F732  20                 	db	32
 10680  00F733  27                 	db	39
 10681  00F734  48                 	db	72	;'H'
 10682  00F735  65                 	db	101	;'e'
 10683  00F736  6C                 	db	108	;'l'
 10684  00F737  70                 	db	112	;'p'
 10685  00F738  27                 	db	39
 10686  00F739  20                 	db	32
 10687  00F73A  66                 	db	102	;'f'
 10688  00F73B  6F                 	db	111	;'o'
 10689  00F73C  72                 	db	114	;'r'
 10690  00F73D  20                 	db	32
 10691  00F73E  6C                 	db	108	;'l'
 10692  00F73F  69                 	db	105	;'i'
 10693  00F740  73                 	db	115	;'s'
 10694  00F741  74                 	db	116	;'t'
 10695  00F742  20                 	db	32
 10696  00F743  6F                 	db	111	;'o'
 10697  00F744  66                 	db	102	;'f'
 10698  00F745  20                 	db	32
 10699  00F746  61                 	db	97	;'a'
 10700  00F747  76                 	db	118	;'v'
 10701  00F748  61                 	db	97	;'a'
 10702  00F749  69                 	db	105	;'i'
 10703  00F74A  6C                 	db	108	;'l'
 10704  00F74B  61                 	db	97	;'a'
 10705  00F74C  62                 	db	98	;'b'
 10706  00F74D  6C                 	db	108	;'l'
 10707  00F74E  65                 	db	101	;'e'
 10708  00F74F  20                 	db	32
 10709  00F750  63                 	db	99	;'c'
 10710  00F751  6F                 	db	111	;'o'
 10711  00F752  6D                 	db	109	;'m'
 10712  00F753  6D                 	db	109	;'m'
 10713  00F754  61                 	db	97	;'a'
 10714  00F755  6E                 	db	110	;'n'
 10715  00F756  64                 	db	100	;'d'
 10716  00F757  73                 	db	115	;'s'
 10717  00F758  0A                 	db	10
 10718  00F759  0D                 	db	13
 10719  00F75A  00                 	db	0
 10720  00F75B                     STR_142:
 10721  00F75B  4D                 	db	77	;'M'
 10722  00F75C  61                 	db	97	;'a'
 10723  00F75D  78                 	db	120	;'x'
 10724  00F75E  69                 	db	105	;'i'
 10725  00F75F  6D                 	db	109	;'m'
 10726  00F760  75                 	db	117	;'u'
 10727  00F761  6D                 	db	109	;'m'
 10728  00F762  20                 	db	32
 10729  00F763  72                 	db	114	;'r'
 10730  00F764  65                 	db	101	;'e'
 10731  00F765  63                 	db	99	;'c'
 10732  00F766  6F                 	db	111	;'o'
 10733  00F767  72                 	db	114	;'r'
 10734  00F768  64                 	db	100	;'d'
 10735  00F769  65                 	db	101	;'e'
 10736  00F76A  64                 	db	100	;'d'
 10737  00F76B  20                 	db	32
 10738  00F76C  6F                 	db	111	;'o'
 10739  00F76D  75                 	db	117	;'u'
 10740  00F76E  74                 	db	116	;'t'
 10741  00F76F  70                 	db	112	;'p'
 10742  00F770  75                 	db	117	;'u'
 10743  00F771  74                 	db	116	;'t'
 10744  00F772  20                 	db	32
 10745  00F773  70                 	db	112	;'p'
 10746  00F774  6F                 	db	111	;'o'
 10747  00F775  77                 	db	119	;'w'
 10748  00F776  65                 	db	101	;'e'
 10749  00F777  72                 	db	114	;'r'
 10750  00F778  20                 	db	32
 10751  00F779  69                 	db	105	;'i'
 10752  00F77A  73                 	db	115	;'s'
 10753  00F77B  20                 	db	32
 10754  00F77C  25                 	db	37
 10755  00F77D  2E                 	db	46
 10756  00F77E  33                 	db	51	;'3'
 10757  00F77F  66                 	db	102	;'f'
 10758  00F780  20                 	db	32
 10759  00F781  57                 	db	87	;'W'
 10760  00F782  61                 	db	97	;'a'
 10761  00F783  74                 	db	116	;'t'
 10762  00F784  74                 	db	116	;'t'
 10763  00F785  73                 	db	115	;'s'
 10764  00F786  0A                 	db	10
 10765  00F787  0D                 	db	13
 10766  00F788  00                 	db	0
 10767  00F789                     STR_148:
 10768  00F789  4D                 	db	77	;'M'
 10769  00F78A  61                 	db	97	;'a'
 10770  00F78B  78                 	db	120	;'x'
 10771  00F78C  69                 	db	105	;'i'
 10772  00F78D  6D                 	db	109	;'m'
 10773  00F78E  75                 	db	117	;'u'
 10774  00F78F  6D                 	db	109	;'m'
 10775  00F790  20                 	db	32
 10776  00F791  72                 	db	114	;'r'
 10777  00F792  65                 	db	101	;'e'
 10778  00F793  63                 	db	99	;'c'
 10779  00F794  6F                 	db	111	;'o'
 10780  00F795  72                 	db	114	;'r'
 10781  00F796  64                 	db	100	;'d'
 10782  00F797  65                 	db	101	;'e'
 10783  00F798  64                 	db	100	;'d'
 10784  00F799  20                 	db	32
 10785  00F79A  64                 	db	100	;'d'
 10786  00F79B  69                 	db	105	;'i'
 10787  00F79C  65                 	db	101	;'e'
 10788  00F79D  20                 	db	32
 10789  00F79E  74                 	db	116	;'t'
 10790  00F79F  65                 	db	101	;'e'
 10791  00F7A0  6D                 	db	109	;'m'
 10792  00F7A1  70                 	db	112	;'p'
 10793  00F7A2  65                 	db	101	;'e'
 10794  00F7A3  72                 	db	114	;'r'
 10795  00F7A4  61                 	db	97	;'a'
 10796  00F7A5  74                 	db	116	;'t'
 10797  00F7A6  75                 	db	117	;'u'
 10798  00F7A7  72                 	db	114	;'r'
 10799  00F7A8  65                 	db	101	;'e'
 10800  00F7A9  20                 	db	32
 10801  00F7AA  69                 	db	105	;'i'
 10802  00F7AB  73                 	db	115	;'s'
 10803  00F7AC  20                 	db	32
 10804  00F7AD  25                 	db	37
 10805  00F7AE  2E                 	db	46
 10806  00F7AF  33                 	db	51	;'3'
 10807  00F7B0  66                 	db	102	;'f'
 10808  00F7B1  20                 	db	32
 10809  00F7B2  43                 	db	67	;'C'
 10810  00F7B3  0A                 	db	10
 10811  00F7B4  0D                 	db	13
 10812  00F7B5  00                 	db	0
 10813  00F7B6                     STR_118:
 10814  00F7B6  4C                 	db	76	;'L'
 10815  00F7B7  6F                 	db	111	;'o'
 10816  00F7B8  61                 	db	97	;'a'
 10817  00F7B9  64                 	db	100	;'d'
 10818  00F7BA  20                 	db	32
 10819  00F7BB  68                 	db	104	;'h'
 10820  00F7BC  61                 	db	97	;'a'
 10821  00F7BD  73                 	db	115	;'s'
 10822  00F7BE  20                 	db	32
 10823  00F7BF  62                 	db	98	;'b'
 10824  00F7C0  65                 	db	101	;'e'
 10825  00F7C1  65                 	db	101	;'e'
 10826  00F7C2  6E                 	db	110	;'n'
 10827  00F7C3  20                 	db	32
 10828  00F7C4  65                 	db	101	;'e'
 10829  00F7C5  6E                 	db	110	;'n'
 10830  00F7C6  61                 	db	97	;'a'
 10831  00F7C7  62                 	db	98	;'b'
 10832  00F7C8  6C                 	db	108	;'l'
 10833  00F7C9  65                 	db	101	;'e'
 10834  00F7CA  64                 	db	100	;'d'
 10835  00F7CB  2C                 	db	44
 10836  00F7CC  20                 	db	32
 10837  00F7CD  64                 	db	100	;'d'
 10838  00F7CE  69                 	db	105	;'i'
 10839  00F7CF  6D                 	db	109	;'m'
 10840  00F7D0  6D                 	db	109	;'m'
 10841  00F7D1  69                 	db	105	;'i'
 10842  00F7D2  6E                 	db	110	;'n'
 10843  00F7D3  67                 	db	103	;'g'
 10844  00F7D4  20                 	db	32
 10845  00F7D5  64                 	db	100	;'d'
 10846  00F7D6  69                 	db	105	;'i'
 10847  00F7D7  73                 	db	115	;'s'
 10848  00F7D8  61                 	db	97	;'a'
 10849  00F7D9  62                 	db	98	;'b'
 10850  00F7DA  6C                 	db	108	;'l'
 10851  00F7DB  65                 	db	101	;'e'
 10852  00F7DC  64                 	db	100	;'d'
 10853  00F7DD  0A                 	db	10
 10854  00F7DE  0D                 	db	13
 10855  00F7DF  00                 	db	0
 10856  00F7E0                     STR_125:
 10857  00F7E0  4C                 	db	76	;'L'
 10858  00F7E1  6F                 	db	111	;'o'
 10859  00F7E2  61                 	db	97	;'a'
 10860  00F7E3  64                 	db	100	;'d'
 10861  00F7E4  20                 	db	32
 10862  00F7E5  61                 	db	97	;'a'
 10863  00F7E6  6E                 	db	110	;'n'
 10864  00F7E7  64                 	db	100	;'d'
 10865  00F7E8  20                 	db	32
 10866  00F7E9  64                 	db	100	;'d'
 10867  00F7EA  69                 	db	105	;'i'
 10868  00F7EB  6D                 	db	109	;'m'
 10869  00F7EC  6D                 	db	109	;'m'
 10870  00F7ED  69                 	db	105	;'i'
 10871  00F7EE  6E                 	db	110	;'n'
 10872  00F7EF  67                 	db	103	;'g'
 10873  00F7F0  20                 	db	32
 10874  00F7F1  61                 	db	97	;'a'
 10875  00F7F2  72                 	db	114	;'r'
 10876  00F7F3  65                 	db	101	;'e'
 10877  00F7F4  20                 	db	32
 10878  00F7F5  63                 	db	99	;'c'
 10879  00F7F6  75                 	db	117	;'u'
 10880  00F7F7  72                 	db	114	;'r'
 10881  00F7F8  72                 	db	114	;'r'
 10882  00F7F9  65                 	db	101	;'e'
 10883  00F7FA  6E                 	db	110	;'n'
 10884  00F7FB  74                 	db	116	;'t'
 10885  00F7FC  6C                 	db	108	;'l'
 10886  00F7FD  79                 	db	121	;'y'
 10887  00F7FE  20                 	db	32
 10888  00F7FF  64                 	db	100	;'d'
 10889  00F800  69                 	db	105	;'i'
 10890  00F801  73                 	db	115	;'s'
 10891  00F802  61                 	db	97	;'a'
 10892  00F803  62                 	db	98	;'b'
 10893  00F804  6C                 	db	108	;'l'
 10894  00F805  65                 	db	101	;'e'
 10895  00F806  64                 	db	100	;'d'
 10896  00F807  0A                 	db	10
 10897  00F808  0D                 	db	13
 10898  00F809  00                 	db	0
 10899  00F80A                     STR_184:
 10900  00F80A  57                 	db	87	;'W'
 10901  00F80B  69                 	db	105	;'i'
 10902  00F80C  6E                 	db	110	;'n'
 10903  00F80D  64                 	db	100	;'d'
 10904  00F80E  6F                 	db	111	;'o'
 10905  00F80F  77                 	db	119	;'w'
 10906  00F810  65                 	db	101	;'e'
 10907  00F811  64                 	db	100	;'d'
 10908  00F812  20                 	db	32
 10909  00F813  57                 	db	87	;'W'
 10910  00F814  61                 	db	97	;'a'
 10911  00F815  74                 	db	116	;'t'
 10912  00F816  63                 	db	99	;'c'
 10913  00F817  68                 	db	104	;'h'
 10914  00F818  20                 	db	32
 10915  00F819  44                 	db	68	;'D'
 10916  00F81A  6F                 	db	111	;'o'
 10917  00F81B  67                 	db	103	;'g'
 10918  00F81C  20                 	db	32
 10919  00F81D  54                 	db	84	;'T'
 10920  00F81E  69                 	db	105	;'i'
 10921  00F81F  6D                 	db	109	;'m'
 10922  00F820  65                 	db	101	;'e'
 10923  00F821  72                 	db	114	;'r'
 10924  00F822  20                 	db	32
 10925  00F823  56                 	db	86	;'V'
 10926  00F824  69                 	db	105	;'i'
 10927  00F825  6F                 	db	111	;'o'
 10928  00F826  6C                 	db	108	;'l'
 10929  00F827  61                 	db	97	;'a'
 10930  00F828  74                 	db	116	;'t'
 10931  00F829  69                 	db	105	;'i'
 10932  00F82A  6F                 	db	111	;'o'
 10933  00F82B  6E                 	db	110	;'n'
 10934  00F82C  20                 	db	32
 10935  00F82D  52                 	db	82	;'R'
 10936  00F82E  65                 	db	101	;'e'
 10937  00F82F  73                 	db	115	;'s'
 10938  00F830  65                 	db	101	;'e'
 10939  00F831  74                 	db	116	;'t'
 10940  00F832  00                 	db	0
 10941  00F833                     STR_116:
 10942  00F833  54                 	db	84	;'T'
 10943  00F834  52                 	db	82	;'R'
 10944  00F835  49                 	db	73	;'I'
 10945  00F836  41                 	db	65	;'A'
 10946  00F837  43                 	db	67	;'C'
 10947  00F838  20                 	db	32
 10948  00F839  6F                 	db	111	;'o'
 10949  00F83A  75                 	db	117	;'u'
 10950  00F83B  74                 	db	116	;'t'
 10951  00F83C  70                 	db	112	;'p'
 10952  00F83D  75                 	db	117	;'u'
 10953  00F83E  74                 	db	116	;'t'
 10954  00F83F  20                 	db	32
 10955  00F840  64                 	db	100	;'d'
 10956  00F841  69                 	db	105	;'i'
 10957  00F842  6D                 	db	109	;'m'
 10958  00F843  6D                 	db	109	;'m'
 10959  00F844  69                 	db	105	;'i'
 10960  00F845  6E                 	db	110	;'n'
 10961  00F846  67                 	db	103	;'g'
 10962  00F847  20                 	db	32
 10963  00F848  68                 	db	104	;'h'
 10964  00F849  61                 	db	97	;'a'
 10965  00F84A  73                 	db	115	;'s'
 10966  00F84B  20                 	db	32
 10967  00F84C  62                 	db	98	;'b'
 10968  00F84D  65                 	db	101	;'e'
 10969  00F84E  65                 	db	101	;'e'
 10970  00F84F  6E                 	db	110	;'n'
 10971  00F850  20                 	db	32
 10972  00F851  64                 	db	100	;'d'
 10973  00F852  69                 	db	105	;'i'
 10974  00F853  73                 	db	115	;'s'
 10975  00F854  61                 	db	97	;'a'
 10976  00F855  62                 	db	98	;'b'
 10977  00F856  6C                 	db	108	;'l'
 10978  00F857  65                 	db	101	;'e'
 10979  00F858  64                 	db	100	;'d'
 10980  00F859  0A                 	db	10
 10981  00F85A  0D                 	db	13
 10982  00F85B  00                 	db	0
 10983  00F85C                     STR_167:
 10984  00F85C  4D                 	db	77	;'M'
 10985  00F85D  65                 	db	101	;'e'
 10986  00F85E  61                 	db	97	;'a'
 10987  00F85F  73                 	db	115	;'s'
 10988  00F860  75                 	db	117	;'u'
 10989  00F861  72                 	db	114	;'r'
 10990  00F862  65                 	db	101	;'e'
 10991  00F863  6D                 	db	109	;'m'
 10992  00F864  65                 	db	101	;'e'
 10993  00F865  6E                 	db	110	;'n'
 10994  00F866  74                 	db	116	;'t'
 10995  00F867  20                 	db	32
 10996  00F868  72                 	db	114	;'r'
 10997  00F869  65                 	db	101	;'e'
 10998  00F86A  73                 	db	115	;'s'
 10999  00F86B  70                 	db	112	;'p'
 11000  00F86C  6F                 	db	111	;'o'
 11001  00F86D  6E                 	db	110	;'n'
 11002  00F86E  73                 	db	115	;'s'
 11003  00F86F  65                 	db	101	;'e'
 11004  00F870  73                 	db	115	;'s'
 11005  00F871  20                 	db	32
 11006  00F872  61                 	db	97	;'a'
 11007  00F873  70                 	db	112	;'p'
 11008  00F874  70                 	db	112	;'p'
 11009  00F875  65                 	db	101	;'e'
 11010  00F876  61                 	db	97	;'a'
 11011  00F877  72                 	db	114	;'r'
 11012  00F878  20                 	db	32
 11013  00F879  69                 	db	105	;'i'
 11014  00F87A  6E                 	db	110	;'n'
 11015  00F87B  20                 	db	32
 11016  00F87C  63                 	db	99	;'c'
 11017  00F87D  79                 	db	121	;'y'
 11018  00F87E  61                 	db	97	;'a'
 11019  00F87F  6E                 	db	110	;'n'
 11020  00F880  0A                 	db	10
 11021  00F881  0D                 	db	13
 11022  00F882  00                 	db	0
 11023  00F883                     STR_83:
 11024  00F883  4E                 	db	78	;'N'
 11025  00F884  6F                 	db	111	;'o'
 11026  00F885  20                 	db	32
 11027  00F886  63                 	db	99	;'c'
 11028  00F887  6F                 	db	111	;'o'
 11029  00F888  6D                 	db	109	;'m'
 11030  00F889  6D                 	db	109	;'m'
 11031  00F88A  75                 	db	117	;'u'
 11032  00F88B  6E                 	db	110	;'n'
 11033  00F88C  69                 	db	105	;'i'
 11034  00F88D  63                 	db	99	;'c'
 11035  00F88E  61                 	db	97	;'a'
 11036  00F88F  74                 	db	116	;'t'
 11037  00F890  69                 	db	105	;'i'
 11038  00F891  6F                 	db	111	;'o'
 11039  00F892  6E                 	db	110	;'n'
 11040  00F893  73                 	db	115	;'s'
 11041  00F894  20                 	db	32
 11042  00F895  65                 	db	101	;'e'
 11043  00F896  72                 	db	114	;'r'
 11044  00F897  72                 	db	114	;'r'
 11045  00F898  6F                 	db	111	;'o'
 11046  00F899  72                 	db	114	;'r'
 11047  00F89A  28                 	db	40
 11048  00F89B  73                 	db	115	;'s'
 11049  00F89C  29                 	db	41
 11050  00F89D  20                 	db	32
 11051  00F89E  64                 	db	100	;'d'
 11052  00F89F  65                 	db	101	;'e'
 11053  00F8A0  74                 	db	116	;'t'
 11054  00F8A1  65                 	db	101	;'e'
 11055  00F8A2  63                 	db	99	;'c'
 11056  00F8A3  74                 	db	116	;'t'
 11057  00F8A4  65                 	db	101	;'e'
 11058  00F8A5  64                 	db	100	;'d'
 11059  00F8A6  0A                 	db	10
 11060  00F8A7  0D                 	db	13
 11061  00F8A8  00                 	db	0
 11062  00F8A9                     STR_95:
 11063  00F8A9  41                 	db	65	;'A'
 11064  00F8AA  56                 	db	86	;'V'
 11065  00F8AB  53                 	db	83	;'S'
 11066  00F8AC  53                 	db	83	;'S'
 11067  00F8AD  20                 	db	32
 11068  00F8AE  6D                 	db	109	;'m'
 11069  00F8AF  65                 	db	101	;'e'
 11070  00F8B0  61                 	db	97	;'a'
 11071  00F8B1  73                 	db	115	;'s'
 11072  00F8B2  75                 	db	117	;'u'
 11073  00F8B3  72                 	db	114	;'r'
 11074  00F8B4  65                 	db	101	;'e'
 11075  00F8B5  64                 	db	100	;'d'
 11076  00F8B6  20                 	db	32
 11077  00F8B7  61                 	db	97	;'a'
 11078  00F8B8  73                 	db	115	;'s'
 11079  00F8B9  20                 	db	32
 11080  00F8BA  25                 	db	37
 11081  00F8BB  2E                 	db	46
 11082  00F8BC  33                 	db	51	;'3'
 11083  00F8BD  66                 	db	102	;'f'
 11084  00F8BE  20                 	db	32
 11085  00F8BF  56                 	db	86	;'V'
 11086  00F8C0  6F                 	db	111	;'o'
 11087  00F8C1  6C                 	db	108	;'l'
 11088  00F8C2  74                 	db	116	;'t'
 11089  00F8C3  73                 	db	115	;'s'
 11090  00F8C4  20                 	db	32
 11091  00F8C5  62                 	db	98	;'b'
 11092  00F8C6  79                 	db	121	;'y'
 11093  00F8C7  20                 	db	32
 11094  00F8C8  41                 	db	65	;'A'
 11095  00F8C9  44                 	db	68	;'D'
 11096  00F8CA  43                 	db	67	;'C'
 11097  00F8CB  0A                 	db	10
 11098  00F8CC  0D                 	db	13
 11099  00F8CD  00                 	db	0
 11100  00F8CE                     STR_87:
 11101  00F8CE  2B                 	db	43
 11102  00F8CF  33                 	db	51	;'3'
 11103  00F8D0  2E                 	db	46
 11104  00F8D1  33                 	db	51	;'3'
 11105  00F8D2  56                 	db	86	;'V'
 11106  00F8D3  20                 	db	32
 11107  00F8D4  72                 	db	114	;'r'
 11108  00F8D5  61                 	db	97	;'a'
 11109  00F8D6  69                 	db	105	;'i'
 11110  00F8D7  6C                 	db	108	;'l'
 11111  00F8D8  20                 	db	32
 11112  00F8D9  6D                 	db	109	;'m'
 11113  00F8DA  65                 	db	101	;'e'
 11114  00F8DB  61                 	db	97	;'a'
 11115  00F8DC  73                 	db	115	;'s'
 11116  00F8DD  75                 	db	117	;'u'
 11117  00F8DE  72                 	db	114	;'r'
 11118  00F8DF  65                 	db	101	;'e'
 11119  00F8E0  64                 	db	100	;'d'
 11120  00F8E1  20                 	db	32
 11121  00F8E2  61                 	db	97	;'a'
 11122  00F8E3  73                 	db	115	;'s'
 11123  00F8E4  20                 	db	32
 11124  00F8E5  2B                 	db	43
 11125  00F8E6  25                 	db	37
 11126  00F8E7  2E                 	db	46
 11127  00F8E8  33                 	db	51	;'3'
 11128  00F8E9  66                 	db	102	;'f'
 11129  00F8EA  20                 	db	32
 11130  00F8EB  56                 	db	86	;'V'
 11131  00F8EC  6F                 	db	111	;'o'
 11132  00F8ED  6C                 	db	108	;'l'
 11133  00F8EE  74                 	db	116	;'t'
 11134  00F8EF  73                 	db	115	;'s'
 11135  00F8F0  0A                 	db	10
 11136  00F8F1  0D                 	db	13
 11137  00F8F2  00                 	db	0
 11138  00F8F3                     STR_132:
 11139  00F8F3  44                 	db	68	;'D'
 11140  00F8F4  69                 	db	105	;'i'
 11141  00F8F5  6D                 	db	109	;'m'
 11142  00F8F6  6D                 	db	109	;'m'
 11143  00F8F7  69                 	db	105	;'i'
 11144  00F8F8  6E                 	db	110	;'n'
 11145  00F8F9  67                 	db	103	;'g'
 11146  00F8FA  20                 	db	32
 11147  00F8FB  68                 	db	104	;'h'
 11148  00F8FC  61                 	db	97	;'a'
 11149  00F8FD  73                 	db	115	;'s'
 11150  00F8FE  20                 	db	32
 11151  00F8FF  62                 	db	98	;'b'
 11152  00F900  65                 	db	101	;'e'
 11153  00F901  65                 	db	101	;'e'
 11154  00F902  6E                 	db	110	;'n'
 11155  00F903  20                 	db	32
 11156  00F904  73                 	db	115	;'s'
 11157  00F905  65                 	db	101	;'e'
 11158  00F906  74                 	db	116	;'t'
 11159  00F907  20                 	db	32
 11160  00F908  74                 	db	116	;'t'
 11161  00F909  6F                 	db	111	;'o'
 11162  00F90A  20                 	db	32
 11163  00F90B  25                 	db	37
 11164  00F90C  64                 	db	100	;'d'
 11165  00F90D  20                 	db	32
 11166  00F90E  70                 	db	112	;'p'
 11167  00F90F  65                 	db	101	;'e'
 11168  00F910  72                 	db	114	;'r'
 11169  00F911  63                 	db	99	;'c'
 11170  00F912  65                 	db	101	;'e'
 11171  00F913  6E                 	db	110	;'n'
 11172  00F914  74                 	db	116	;'t'
 11173  00F915  0A                 	db	10
 11174  00F916  0D                 	db	13
 11175  00F917  00                 	db	0
 11176  00F918                     STR_91:
 11177  00F918  44                 	db	68	;'D'
 11178  00F919  69                 	db	105	;'i'
 11179  00F91A  65                 	db	101	;'e'
 11180  00F91B  20                 	db	32
 11181  00F91C  54                 	db	84	;'T'
 11182  00F91D  65                 	db	101	;'e'
 11183  00F91E  6D                 	db	109	;'m'
 11184  00F91F  70                 	db	112	;'p'
 11185  00F920  65                 	db	101	;'e'
 11186  00F921  72                 	db	114	;'r'
 11187  00F922  61                 	db	97	;'a'
 11188  00F923  74                 	db	116	;'t'
 11189  00F924  75                 	db	117	;'u'
 11190  00F925  72                 	db	114	;'r'
 11191  00F926  65                 	db	101	;'e'
 11192  00F927  20                 	db	32
 11193  00F928  6D                 	db	109	;'m'
 11194  00F929  65                 	db	101	;'e'
 11195  00F92A  61                 	db	97	;'a'
 11196  00F92B  73                 	db	115	;'s'
 11197  00F92C  75                 	db	117	;'u'
 11198  00F92D  72                 	db	114	;'r'
 11199  00F92E  65                 	db	101	;'e'
 11200  00F92F  64                 	db	100	;'d'
 11201  00F930  20                 	db	32
 11202  00F931  61                 	db	97	;'a'
 11203  00F932  73                 	db	115	;'s'
 11204  00F933  20                 	db	32
 11205  00F934  25                 	db	37
 11206  00F935  2E                 	db	46
 11207  00F936  33                 	db	51	;'3'
 11208  00F937  66                 	db	102	;'f'
 11209  00F938  43                 	db	67	;'C'
 11210  00F939  0A                 	db	10
 11211  00F93A  0D                 	db	13
 11212  00F93B  00                 	db	0
 11213  00F93C                     STR_89:
 11214  00F93C  2B                 	db	43
 11215  00F93D  31                 	db	49	;'1'
 11216  00F93E  32                 	db	50	;'2'
 11217  00F93F  56                 	db	86	;'V'
 11218  00F940  20                 	db	32
 11219  00F941  72                 	db	114	;'r'
 11220  00F942  61                 	db	97	;'a'
 11221  00F943  69                 	db	105	;'i'
 11222  00F944  6C                 	db	108	;'l'
 11223  00F945  20                 	db	32
 11224  00F946  6D                 	db	109	;'m'
 11225  00F947  65                 	db	101	;'e'
 11226  00F948  61                 	db	97	;'a'
 11227  00F949  73                 	db	115	;'s'
 11228  00F94A  75                 	db	117	;'u'
 11229  00F94B  72                 	db	114	;'r'
 11230  00F94C  65                 	db	101	;'e'
 11231  00F94D  64                 	db	100	;'d'
 11232  00F94E  20                 	db	32
 11233  00F94F  61                 	db	97	;'a'
 11234  00F950  73                 	db	115	;'s'
 11235  00F951  20                 	db	32
 11236  00F952  2B                 	db	43
 11237  00F953  25                 	db	37
 11238  00F954  2E                 	db	46
 11239  00F955  33                 	db	51	;'3'
 11240  00F956  66                 	db	102	;'f'
 11241  00F957  20                 	db	32
 11242  00F958  56                 	db	86	;'V'
 11243  00F959  6F                 	db	111	;'o'
 11244  00F95A  6C                 	db	108	;'l'
 11245  00F95B  74                 	db	116	;'t'
 11246  00F95C  73                 	db	115	;'s'
 11247  00F95D  0A                 	db	10
 11248  00F95E  0D                 	db	13
 11249  00F95F  00                 	db	0
 11250  00F960                     STR_114:
 11251  00F960  4F                 	db	79	;'O'
 11252  00F961  75                 	db	117	;'u'
 11253  00F962  74                 	db	116	;'t'
 11254  00F963  70                 	db	112	;'p'
 11255  00F964  75                 	db	117	;'u'
 11256  00F965  74                 	db	116	;'t'
 11257  00F966  20                 	db	32
 11258  00F967  64                 	db	100	;'d'
 11259  00F968  69                 	db	105	;'i'
 11260  00F969  6D                 	db	109	;'m'
 11261  00F96A  6D                 	db	109	;'m'
 11262  00F96B  69                 	db	105	;'i'
 11263  00F96C  6E                 	db	110	;'n'
 11264  00F96D  67                 	db	103	;'g'
 11265  00F96E  20                 	db	32
 11266  00F96F  68                 	db	104	;'h'
 11267  00F970  61                 	db	97	;'a'
 11268  00F971  73                 	db	115	;'s'
 11269  00F972  20                 	db	32
 11270  00F973  62                 	db	98	;'b'
 11271  00F974  65                 	db	101	;'e'
 11272  00F975  65                 	db	101	;'e'
 11273  00F976  6E                 	db	110	;'n'
 11274  00F977  20                 	db	32
 11275  00F978  65                 	db	101	;'e'
 11276  00F979  6E                 	db	110	;'n'
 11277  00F97A  61                 	db	97	;'a'
 11278  00F97B  62                 	db	98	;'b'
 11279  00F97C  6C                 	db	108	;'l'
 11280  00F97D  65                 	db	101	;'e'
 11281  00F97E  64                 	db	100	;'d'
 11282  00F97F  0A                 	db	10
 11283  00F980  0D                 	db	13
 11284  00F981  00                 	db	0
 11285  00F982                     STR_85:
 11286  00F982  43                 	db	67	;'C'
 11287  00F983  6F                 	db	111	;'o'
 11288  00F984  6D                 	db	109	;'m'
 11289  00F985  6D                 	db	109	;'m'
 11290  00F986  75                 	db	117	;'u'
 11291  00F987  6E                 	db	110	;'n'
 11292  00F988  69                 	db	105	;'i'
 11293  00F989  63                 	db	99	;'c'
 11294  00F98A  61                 	db	97	;'a'
 11295  00F98B  74                 	db	116	;'t'
 11296  00F98C  69                 	db	105	;'i'
 11297  00F98D  6F                 	db	111	;'o'
 11298  00F98E  6E                 	db	110	;'n'
 11299  00F98F  73                 	db	115	;'s'
 11300  00F990  20                 	db	32
 11301  00F991  65                 	db	101	;'e'
 11302  00F992  72                 	db	114	;'r'
 11303  00F993  72                 	db	114	;'r'
 11304  00F994  6F                 	db	111	;'o'
 11305  00F995  72                 	db	114	;'r'
 11306  00F996  28                 	db	40
 11307  00F997  73                 	db	115	;'s'
 11308  00F998  29                 	db	41
 11309  00F999  20                 	db	32
 11310  00F99A  63                 	db	99	;'c'
 11311  00F99B  6C                 	db	108	;'l'
 11312  00F99C  65                 	db	101	;'e'
 11313  00F99D  61                 	db	97	;'a'
 11314  00F99E  72                 	db	114	;'r'
 11315  00F99F  65                 	db	101	;'e'
 11316  00F9A0  64                 	db	100	;'d'
 11317  00F9A1  0A                 	db	10
 11318  00F9A2  0D                 	db	13
 11319  00F9A3  00                 	db	0
 11320  00F9A4                     STR_99:
 11321  00F9A4  52                 	db	82	;'R'
 11322  00F9A5  4D                 	db	77	;'M'
 11323  00F9A6  53                 	db	83	;'S'
 11324  00F9A7  20                 	db	32
 11325  00F9A8  4F                 	db	79	;'O'
 11326  00F9A9  75                 	db	117	;'u'
 11327  00F9AA  74                 	db	116	;'t'
 11328  00F9AB  70                 	db	112	;'p'
 11329  00F9AC  75                 	db	117	;'u'
 11330  00F9AD  74                 	db	116	;'t'
 11331  00F9AE  20                 	db	32
 11332  00F9AF  43                 	db	67	;'C'
 11333  00F9B0  75                 	db	117	;'u'
 11334  00F9B1  72                 	db	114	;'r'
 11335  00F9B2  72                 	db	114	;'r'
 11336  00F9B3  65                 	db	101	;'e'
 11337  00F9B4  6E                 	db	110	;'n'
 11338  00F9B5  74                 	db	116	;'t'
 11339  00F9B6  20                 	db	32
 11340  00F9B7  69                 	db	105	;'i'
 11341  00F9B8  73                 	db	115	;'s'
 11342  00F9B9  20                 	db	32
 11343  00F9BA  25                 	db	37
 11344  00F9BB  2E                 	db	46
 11345  00F9BC  33                 	db	51	;'3'
 11346  00F9BD  66                 	db	102	;'f'
 11347  00F9BE  20                 	db	32
 11348  00F9BF  41                 	db	65	;'A'
 11349  00F9C0  72                 	db	114	;'r'
 11350  00F9C1  6D                 	db	109	;'m'
 11351  00F9C2  73                 	db	115	;'s'
 11352  00F9C3  0A                 	db	10
 11353  00F9C4  0D                 	db	13
 11354  00F9C5  00                 	db	0
 11355  00F9C6                     STR_101:
 11356  00F9C6  52                 	db	82	;'R'
 11357  00F9C7  4D                 	db	77	;'M'
 11358  00F9C8  53                 	db	83	;'S'
 11359  00F9C9  20                 	db	32
 11360  00F9CA  4F                 	db	79	;'O'
 11361  00F9CB  75                 	db	117	;'u'
 11362  00F9CC  74                 	db	116	;'t'
 11363  00F9CD  70                 	db	112	;'p'
 11364  00F9CE  75                 	db	117	;'u'
 11365  00F9CF  74                 	db	116	;'t'
 11366  00F9D0  20                 	db	32
 11367  00F9D1  56                 	db	86	;'V'
 11368  00F9D2  6F                 	db	111	;'o'
 11369  00F9D3  6C                 	db	108	;'l'
 11370  00F9D4  74                 	db	116	;'t'
 11371  00F9D5  61                 	db	97	;'a'
 11372  00F9D6  67                 	db	103	;'g'
 11373  00F9D7  65                 	db	101	;'e'
 11374  00F9D8  20                 	db	32
 11375  00F9D9  69                 	db	105	;'i'
 11376  00F9DA  73                 	db	115	;'s'
 11377  00F9DB  20                 	db	32
 11378  00F9DC  25                 	db	37
 11379  00F9DD  2E                 	db	46
 11380  00F9DE  33                 	db	51	;'3'
 11381  00F9DF  66                 	db	102	;'f'
 11382  00F9E0  20                 	db	32
 11383  00F9E1  56                 	db	86	;'V'
 11384  00F9E2  72                 	db	114	;'r'
 11385  00F9E3  6D                 	db	109	;'m'
 11386  00F9E4  73                 	db	115	;'s'
 11387  00F9E5  0A                 	db	10
 11388  00F9E6  0D                 	db	13
 11389  00F9E7  00                 	db	0
 11390  00F9E8                     STR_157:
 11391  00F9E8  48                 	db	72	;'H'
 11392  00F9E9  65                 	db	101	;'e'
 11393  00F9EA  6C                 	db	108	;'l'
 11394  00F9EB  70                 	db	112	;'p'
 11395  00F9EC  20                 	db	32
 11396  00F9ED  50                 	db	80	;'P'
 11397  00F9EE  72                 	db	114	;'r'
 11398  00F9EF  69                 	db	105	;'i'
 11399  00F9F0  6D                 	db	109	;'m'
 11400  00F9F1  61                 	db	97	;'a'
 11401  00F9F2  72                 	db	114	;'r'
 11402  00F9F3  79                 	db	121	;'y'
 11403  00F9F4  20                 	db	32
 11404  00F9F5  4D                 	db	77	;'M'
 11405  00F9F6  65                 	db	101	;'e'
 11406  00F9F7  61                 	db	97	;'a'
 11407  00F9F8  73                 	db	115	;'s'
 11408  00F9F9  75                 	db	117	;'u'
 11409  00F9FA  72                 	db	114	;'r'
 11410  00F9FB  65                 	db	101	;'e'
 11411  00F9FC  6D                 	db	109	;'m'
 11412  00F9FD  65                 	db	101	;'e'
 11413  00F9FE  6E                 	db	110	;'n'
 11414  00F9FF  74                 	db	116	;'t'
 11415  00FA00  20                 	db	32
 11416  00FA01  43                 	db	67	;'C'
 11417  00FA02  6F                 	db	111	;'o'
 11418  00FA03  6D                 	db	109	;'m'
 11419  00FA04  6D                 	db	109	;'m'
 11420  00FA05  61                 	db	97	;'a'
 11421  00FA06  6E                 	db	110	;'n'
 11422  00FA07  64                 	db	100	;'d'
 11423  00FA08  73                 	db	115	;'s'
 11424  00FA09  00                 	db	0
 11425  00FA0A                     STR_155:
 11426  00FA0A  48                 	db	72	;'H'
 11427  00FA0B  65                 	db	101	;'e'
 11428  00FA0C  6C                 	db	108	;'l'
 11429  00FA0D  70                 	db	112	;'p'
 11430  00FA0E  20                 	db	32
 11431  00FA0F  44                 	db	68	;'D'
 11432  00FA10  65                 	db	101	;'e'
 11433  00FA11  76                 	db	118	;'v'
 11434  00FA12  69                 	db	105	;'i'
 11435  00FA13  63                 	db	99	;'c'
 11436  00FA14  65                 	db	101	;'e'
 11437  00FA15  20                 	db	32
 11438  00FA16  4D                 	db	77	;'M'
 11439  00FA17  65                 	db	101	;'e'
 11440  00FA18  61                 	db	97	;'a'
 11441  00FA19  73                 	db	115	;'s'
 11442  00FA1A  75                 	db	117	;'u'
 11443  00FA1B  72                 	db	114	;'r'
 11444  00FA1C  65                 	db	101	;'e'
 11445  00FA1D  6D                 	db	109	;'m'
 11446  00FA1E  65                 	db	101	;'e'
 11447  00FA1F  6E                 	db	110	;'n'
 11448  00FA20  74                 	db	116	;'t'
 11449  00FA21  20                 	db	32
 11450  00FA22  43                 	db	67	;'C'
 11451  00FA23  6F                 	db	111	;'o'
 11452  00FA24  6D                 	db	109	;'m'
 11453  00FA25  6D                 	db	109	;'m'
 11454  00FA26  61                 	db	97	;'a'
 11455  00FA27  6E                 	db	110	;'n'
 11456  00FA28  64                 	db	100	;'d'
 11457  00FA29  73                 	db	115	;'s'
 11458  00FA2A  00                 	db	0
 11459  00FA2B                     STR_97:
 11460  00FA2B  4D                 	db	77	;'M'
 11461  00FA2C  65                 	db	101	;'e'
 11462  00FA2D  61                 	db	97	;'a'
 11463  00FA2E  73                 	db	115	;'s'
 11464  00FA2F  75                 	db	117	;'u'
 11465  00FA30  72                 	db	114	;'r'
 11466  00FA31  65                 	db	101	;'e'
 11467  00FA32  64                 	db	100	;'d'
 11468  00FA33  20                 	db	32
 11469  00FA34  43                 	db	67	;'C'
 11470  00FA35  75                 	db	117	;'u'
 11471  00FA36  72                 	db	114	;'r'
 11472  00FA37  72                 	db	114	;'r'
 11473  00FA38  65                 	db	101	;'e'
 11474  00FA39  6E                 	db	110	;'n'
 11475  00FA3A  74                 	db	116	;'t'
 11476  00FA3B  20                 	db	32
 11477  00FA3C  69                 	db	105	;'i'
 11478  00FA3D  73                 	db	115	;'s'
 11479  00FA3E  20                 	db	32
 11480  00FA3F  25                 	db	37
 11481  00FA40  2E                 	db	46
 11482  00FA41  33                 	db	51	;'3'
 11483  00FA42  66                 	db	102	;'f'
 11484  00FA43  20                 	db	32
 11485  00FA44  41                 	db	65	;'A'
 11486  00FA45  6D                 	db	109	;'m'
 11487  00FA46  70                 	db	112	;'p'
 11488  00FA47  73                 	db	115	;'s'
 11489  00FA48  0A                 	db	10
 11490  00FA49  0D                 	db	13
 11491  00FA4A  00                 	db	0
 11492  00FA4B                     STR_123:
 11493  00FA4B  44                 	db	68	;'D'
 11494  00FA4C  69                 	db	105	;'i'
 11495  00FA4D  6D                 	db	109	;'m'
 11496  00FA4E  6D                 	db	109	;'m'
 11497  00FA4F  69                 	db	105	;'i'
 11498  00FA50  6E                 	db	110	;'n'
 11499  00FA51  67                 	db	103	;'g'
 11500  00FA52  20                 	db	32
 11501  00FA53  69                 	db	105	;'i'
 11502  00FA54  73                 	db	115	;'s'
 11503  00FA55  20                 	db	32
 11504  00FA56  63                 	db	99	;'c'
 11505  00FA57  75                 	db	117	;'u'
 11506  00FA58  72                 	db	114	;'r'
 11507  00FA59  72                 	db	114	;'r'
 11508  00FA5A  65                 	db	101	;'e'
 11509  00FA5B  6E                 	db	110	;'n'
 11510  00FA5C  74                 	db	116	;'t'
 11511  00FA5D  6C                 	db	108	;'l'
 11512  00FA5E  79                 	db	121	;'y'
 11513  00FA5F  20                 	db	32
 11514  00FA60  65                 	db	101	;'e'
 11515  00FA61  6E                 	db	110	;'n'
 11516  00FA62  61                 	db	97	;'a'
 11517  00FA63  62                 	db	98	;'b'
 11518  00FA64  6C                 	db	108	;'l'
 11519  00FA65  65                 	db	101	;'e'
 11520  00FA66  64                 	db	100	;'d'
 11521  00FA67  0A                 	db	10
 11522  00FA68  0D                 	db	13
 11523  00FA69  00                 	db	0
 11524  00FA6A                     STR_81:
 11525  00FA6A  20                 	db	32
 11526  00FA6B  20                 	db	32
 11527  00FA6C  20                 	db	32
 11528  00FA6D  20                 	db	32
 11529  00FA6E  55                 	db	85	;'U'
 11530  00FA6F  53                 	db	83	;'S'
 11531  00FA70  42                 	db	66	;'B'
 11532  00FA71  20                 	db	32
 11533  00FA72  55                 	db	85	;'U'
 11534  00FA73  41                 	db	65	;'A'
 11535  00FA74  52                 	db	82	;'R'
 11536  00FA75  54                 	db	84	;'T'
 11537  00FA76  20                 	db	32
 11538  00FA77  28                 	db	40
 11539  00FA78  74                 	db	116	;'t'
 11540  00FA79  68                 	db	104	;'h'
 11541  00FA7A  69                 	db	105	;'i'
 11542  00FA7B  73                 	db	115	;'s'
 11543  00FA7C  20                 	db	32
 11544  00FA7D  69                 	db	105	;'i'
 11545  00FA7E  6E                 	db	110	;'n'
 11546  00FA7F  74                 	db	116	;'t'
 11547  00FA80  65                 	db	101	;'e'
 11548  00FA81  72                 	db	114	;'r'
 11549  00FA82  66                 	db	102	;'f'
 11550  00FA83  61                 	db	97	;'a'
 11551  00FA84  63                 	db	99	;'c'
 11552  00FA85  65                 	db	101	;'e'
 11553  00FA86  0A                 	db	10
 11554  00FA87  0D                 	db	13
 11555  00FA88  00                 	db	0
 11556  00FA89                     STR_174:
 11557  00FA89  44                 	db	68	;'D'
 11558  00FA8A  72                 	db	114	;'r'
 11559  00FA8B  65                 	db	101	;'e'
 11560  00FA8C  77                 	db	119	;'w'
 11561  00FA8D  20                 	db	32
 11562  00FA8E  4D                 	db	77	;'M'
 11563  00FA8F  61                 	db	97	;'a'
 11564  00FA90  61                 	db	97	;'a'
 11565  00FA91  74                 	db	116	;'t'
 11566  00FA92  6D                 	db	109	;'m'
 11567  00FA93  61                 	db	97	;'a'
 11568  00FA94  6E                 	db	110	;'n'
 11569  00FA95  20                 	db	32
 11570  00FA96  61                 	db	97	;'a'
 11571  00FA97  6E                 	db	110	;'n'
 11572  00FA98  64                 	db	100	;'d'
 11573  00FA99  20                 	db	32
 11574  00FA9A  47                 	db	71	;'G'
 11575  00FA9B  61                 	db	97	;'a'
 11576  00FA9C  62                 	db	98	;'b'
 11577  00FA9D  65                 	db	101	;'e'
 11578  00FA9E  20                 	db	32
 11579  00FA9F  54                 	db	84	;'T'
 11580  00FAA0  68                 	db	104	;'h'
 11581  00FAA1  61                 	db	97	;'a'
 11582  00FAA2  6C                 	db	108	;'l'
 11583  00FAA3  6A                 	db	106	;'j'
 11584  00FAA4  69                 	db	105	;'i'
 11585  00FAA5  0A                 	db	10
 11586  00FAA6  0D                 	db	13
 11587  00FAA7  00                 	db	0
 11588  00FAA8                     STR_169:
 11589  00FAA8  55                 	db	85	;'U'
 11590  00FAA9  73                 	db	115	;'s'
 11591  00FAAA  65                 	db	101	;'e'
 11592  00FAAB  72                 	db	114	;'r'
 11593  00FAAC  20                 	db	32
 11594  00FAAD  69                 	db	105	;'i'
 11595  00FAAE  6E                 	db	110	;'n'
 11596  00FAAF  70                 	db	112	;'p'
 11597  00FAB0  75                 	db	117	;'u'
 11598  00FAB1  74                 	db	116	;'t'
 11599  00FAB2  20                 	db	32
 11600  00FAB3  61                 	db	97	;'a'
 11601  00FAB4  70                 	db	112	;'p'
 11602  00FAB5  70                 	db	112	;'p'
 11603  00FAB6  65                 	db	101	;'e'
 11604  00FAB7  61                 	db	97	;'a'
 11605  00FAB8  72                 	db	114	;'r'
 11606  00FAB9  73                 	db	115	;'s'
 11607  00FABA  20                 	db	32
 11608  00FABB  69                 	db	105	;'i'
 11609  00FABC  6E                 	db	110	;'n'
 11610  00FABD  20                 	db	32
 11611  00FABE  77                 	db	119	;'w'
 11612  00FABF  68                 	db	104	;'h'
 11613  00FAC0  69                 	db	105	;'i'
 11614  00FAC1  74                 	db	116	;'t'
 11615  00FAC2  65                 	db	101	;'e'
 11616  00FAC3  0A                 	db	10
 11617  00FAC4  0D                 	db	13
 11618  00FAC5  00                 	db	0
 11619  00FAC6                     STR_121:
 11620  00FAC6  4C                 	db	76	;'L'
 11621  00FAC7  6F                 	db	111	;'o'
 11622  00FAC8  61                 	db	97	;'a'
 11623  00FAC9  64                 	db	100	;'d'
 11624  00FACA  20                 	db	32
 11625  00FACB  69                 	db	105	;'i'
 11626  00FACC  73                 	db	115	;'s'
 11627  00FACD  20                 	db	32
 11628  00FACE  63                 	db	99	;'c'
 11629  00FACF  75                 	db	117	;'u'
 11630  00FAD0  72                 	db	114	;'r'
 11631  00FAD1  72                 	db	114	;'r'
 11632  00FAD2  65                 	db	101	;'e'
 11633  00FAD3  6E                 	db	110	;'n'
 11634  00FAD4  74                 	db	116	;'t'
 11635  00FAD5  6C                 	db	108	;'l'
 11636  00FAD6  79                 	db	121	;'y'
 11637  00FAD7  20                 	db	32
 11638  00FAD8  64                 	db	100	;'d'
 11639  00FAD9  69                 	db	105	;'i'
 11640  00FADA  73                 	db	115	;'s'
 11641  00FADB  61                 	db	97	;'a'
 11642  00FADC  62                 	db	98	;'b'
 11643  00FADD  6C                 	db	108	;'l'
 11644  00FADE  65                 	db	101	;'e'
 11645  00FADF  64                 	db	100	;'d'
 11646  00FAE0  0A                 	db	10
 11647  00FAE1  0D                 	db	13
 11648  00FAE2  00                 	db	0
 11649  00FAE3                     STR_153:
 11650  00FAE3  48                 	db	72	;'H'
 11651  00FAE4  65                 	db	101	;'e'
 11652  00FAE5  6C                 	db	108	;'l'
 11653  00FAE6  70                 	db	112	;'p'
 11654  00FAE7  20                 	db	32
 11655  00FAE8  44                 	db	68	;'D'
 11656  00FAE9  65                 	db	101	;'e'
 11657  00FAEA  76                 	db	118	;'v'
 11658  00FAEB  69                 	db	105	;'i'
 11659  00FAEC  63                 	db	99	;'c'
 11660  00FAED  65                 	db	101	;'e'
 11661  00FAEE  20                 	db	32
 11662  00FAEF  43                 	db	67	;'C'
 11663  00FAF0  6F                 	db	111	;'o'
 11664  00FAF1  6E                 	db	110	;'n'
 11665  00FAF2  74                 	db	116	;'t'
 11666  00FAF3  72                 	db	114	;'r'
 11667  00FAF4  6F                 	db	111	;'o'
 11668  00FAF5  6C                 	db	108	;'l'
 11669  00FAF6  20                 	db	32
 11670  00FAF7  43                 	db	67	;'C'
 11671  00FAF8  6F                 	db	111	;'o'
 11672  00FAF9  6D                 	db	109	;'m'
 11673  00FAFA  6D                 	db	109	;'m'
 11674  00FAFB  61                 	db	97	;'a'
 11675  00FAFC  6E                 	db	110	;'n'
 11676  00FAFD  64                 	db	100	;'d'
 11677  00FAFE  73                 	db	115	;'s'
 11678  00FAFF  00                 	db	0
 11679  00FB00                     STR_159:
 11680  00FB00  48                 	db	72	;'H'
 11681  00FB01  65                 	db	101	;'e'
 11682  00FB02  6C                 	db	108	;'l'
 11683  00FB03  70                 	db	112	;'p'
 11684  00FB04  20                 	db	32
 11685  00FB05  4F                 	db	79	;'O'
 11686  00FB06  75                 	db	117	;'u'
 11687  00FB07  74                 	db	116	;'t'
 11688  00FB08  70                 	db	112	;'p'
 11689  00FB09  75                 	db	117	;'u'
 11690  00FB0A  74                 	db	116	;'t'
 11691  00FB0B  20                 	db	32
 11692  00FB0C  43                 	db	67	;'C'
 11693  00FB0D  6F                 	db	111	;'o'
 11694  00FB0E  6E                 	db	110	;'n'
 11695  00FB0F  74                 	db	116	;'t'
 11696  00FB10  72                 	db	114	;'r'
 11697  00FB11  6F                 	db	111	;'o'
 11698  00FB12  6C                 	db	108	;'l'
 11699  00FB13  20                 	db	32
 11700  00FB14  43                 	db	67	;'C'
 11701  00FB15  6F                 	db	111	;'o'
 11702  00FB16  6D                 	db	109	;'m'
 11703  00FB17  6D                 	db	109	;'m'
 11704  00FB18  61                 	db	97	;'a'
 11705  00FB19  6E                 	db	110	;'n'
 11706  00FB1A  64                 	db	100	;'d'
 11707  00FB1B  73                 	db	115	;'s'
 11708  00FB1C  00                 	db	0
 11709  00FB1D                     STR_172:
 11710  00FB1D  4D                 	db	77	;'M'
 11711  00FB1E  61                 	db	97	;'a'
 11712  00FB1F  72                 	db	114	;'r'
 11713  00FB20  71                 	db	113	;'q'
 11714  00FB21  75                 	db	117	;'u'
 11715  00FB22  65                 	db	101	;'e'
 11716  00FB23  74                 	db	116	;'t'
 11717  00FB24  74                 	db	116	;'t'
 11718  00FB25  65                 	db	101	;'e'
 11719  00FB26  20                 	db	32
 11720  00FB27  55                 	db	85	;'U'
 11721  00FB28  6E                 	db	110	;'n'
 11722  00FB29  69                 	db	105	;'i'
 11723  00FB2A  76                 	db	118	;'v'
 11724  00FB2B  65                 	db	101	;'e'
 11725  00FB2C  72                 	db	114	;'r'
 11726  00FB2D  73                 	db	115	;'s'
 11727  00FB2E  69                 	db	105	;'i'
 11728  00FB2F  74                 	db	116	;'t'
 11729  00FB30  79                 	db	121	;'y'
 11730  00FB31  20                 	db	32
 11731  00FB32  45                 	db	69	;'E'
 11732  00FB33  45                 	db	69	;'E'
 11733  00FB34  43                 	db	67	;'C'
 11734  00FB35  45                 	db	69	;'E'
 11735  00FB36  0A                 	db	10
 11736  00FB37  0D                 	db	13
 11737  00FB38  00                 	db	0
 11738  00FB39                     STR_120:
 11739  00FB39  4C                 	db	76	;'L'
 11740  00FB3A  6F                 	db	111	;'o'
 11741  00FB3B  61                 	db	97	;'a'
 11742  00FB3C  64                 	db	100	;'d'
 11743  00FB3D  20                 	db	32
 11744  00FB3E  69                 	db	105	;'i'
 11745  00FB3F  73                 	db	115	;'s'
 11746  00FB40  20                 	db	32
 11747  00FB41  63                 	db	99	;'c'
 11748  00FB42  75                 	db	117	;'u'
 11749  00FB43  72                 	db	114	;'r'
 11750  00FB44  72                 	db	114	;'r'
 11751  00FB45  65                 	db	101	;'e'
 11752  00FB46  6E                 	db	110	;'n'
 11753  00FB47  74                 	db	116	;'t'
 11754  00FB48  6C                 	db	108	;'l'
 11755  00FB49  79                 	db	121	;'y'
 11756  00FB4A  20                 	db	32
 11757  00FB4B  65                 	db	101	;'e'
 11758  00FB4C  6E                 	db	110	;'n'
 11759  00FB4D  61                 	db	97	;'a'
 11760  00FB4E  62                 	db	98	;'b'
 11761  00FB4F  6C                 	db	108	;'l'
 11762  00FB50  65                 	db	101	;'e'
 11763  00FB51  64                 	db	100	;'d'
 11764  00FB52  0A                 	db	10
 11765  00FB53  0D                 	db	13
 11766  00FB54  00                 	db	0
 11767  00FB55                     STR_185:
 11768  00FB55  52                 	db	82	;'R'
 11769  00FB56  45                 	db	69	;'E'
 11770  00FB57  53                 	db	83	;'S'
 11771  00FB58  45                 	db	69	;'E'
 11772  00FB59  54                 	db	84	;'T'
 11773  00FB5A  20                 	db	32
 11774  00FB5B  49                 	db	73	;'I'
 11775  00FB5C  6E                 	db	110	;'n'
 11776  00FB5D  73                 	db	115	;'s'
 11777  00FB5E  74                 	db	116	;'t'
 11778  00FB5F  72                 	db	114	;'r'
 11779  00FB60  75                 	db	117	;'u'
 11780  00FB61  63                 	db	99	;'c'
 11781  00FB62  74                 	db	116	;'t'
 11782  00FB63  69                 	db	105	;'i'
 11783  00FB64  6F                 	db	111	;'o'
 11784  00FB65  6E                 	db	110	;'n'
 11785  00FB66  20                 	db	32
 11786  00FB67  45                 	db	69	;'E'
 11787  00FB68  78                 	db	120	;'x'
 11788  00FB69  65                 	db	101	;'e'
 11789  00FB6A  63                 	db	99	;'c'
 11790  00FB6B  75                 	db	117	;'u'
 11791  00FB6C  74                 	db	116	;'t'
 11792  00FB6D  65                 	db	101	;'e'
 11793  00FB6E  64                 	db	100	;'d'
 11794  00FB6F  00                 	db	0
 11795  00FB70                     STR_75:
 11796  00FB70  4E                 	db	78	;'N'
 11797  00FB71  6F                 	db	111	;'o'
 11798  00FB72  20                 	db	32
 11799  00FB73  41                 	db	65	;'A'
 11800  00FB74  44                 	db	68	;'D'
 11801  00FB75  43                 	db	67	;'C'
 11802  00FB76  20                 	db	32
 11803  00FB77  65                 	db	101	;'e'
 11804  00FB78  72                 	db	114	;'r'
 11805  00FB79  72                 	db	114	;'r'
 11806  00FB7A  6F                 	db	111	;'o'
 11807  00FB7B  72                 	db	114	;'r'
 11808  00FB7C  28                 	db	40
 11809  00FB7D  73                 	db	115	;'s'
 11810  00FB7E  29                 	db	41
 11811  00FB7F  20                 	db	32
 11812  00FB80  64                 	db	100	;'d'
 11813  00FB81  65                 	db	101	;'e'
 11814  00FB82  74                 	db	116	;'t'
 11815  00FB83  65                 	db	101	;'e'
 11816  00FB84  63                 	db	99	;'c'
 11817  00FB85  74                 	db	116	;'t'
 11818  00FB86  65                 	db	101	;'e'
 11819  00FB87  64                 	db	100	;'d'
 11820  00FB88  0A                 	db	10
 11821  00FB89  0D                 	db	13
 11822  00FB8A  00                 	db	0
 11823  00FB8B                     STR_96:
 11824  00FB8B  4D                 	db	77	;'M'
 11825  00FB8C  65                 	db	101	;'e'
 11826  00FB8D  61                 	db	97	;'a'
 11827  00FB8E  73                 	db	115	;'s'
 11828  00FB8F  75                 	db	117	;'u'
 11829  00FB90  72                 	db	114	;'r'
 11830  00FB91  65                 	db	101	;'e'
 11831  00FB92  20                 	db	32
 11832  00FB93  44                 	db	68	;'D'
 11833  00FB94  65                 	db	101	;'e'
 11834  00FB95  74                 	db	116	;'t'
 11835  00FB96  65                 	db	101	;'e'
 11836  00FB97  63                 	db	99	;'c'
 11837  00FB98  74                 	db	116	;'t'
 11838  00FB99  65                 	db	101	;'e'
 11839  00FB9A  64                 	db	100	;'d'
 11840  00FB9B  20                 	db	32
 11841  00FB9C  43                 	db	67	;'C'
 11842  00FB9D  75                 	db	117	;'u'
 11843  00FB9E  72                 	db	114	;'r'
 11844  00FB9F  72                 	db	114	;'r'
 11845  00FBA0  65                 	db	101	;'e'
 11846  00FBA1  6E                 	db	110	;'n'
 11847  00FBA2  74                 	db	116	;'t'
 11848  00FBA3  3F                 	db	63	;'?'
 11849  00FBA4  00                 	db	0
 11850  00FBA5                     STR_65:
 11851  00FBA5  41                 	db	65	;'A'
 11852  00FBA6  44                 	db	68	;'D'
 11853  00FBA7  43                 	db	67	;'C'
 11854  00FBA8  20                 	db	32
 11855  00FBA9  65                 	db	101	;'e'
 11856  00FBAA  72                 	db	114	;'r'
 11857  00FBAB  72                 	db	114	;'r'
 11858  00FBAC  6F                 	db	111	;'o'
 11859  00FBAD  72                 	db	114	;'r'
 11860  00FBAE  28                 	db	40
 11861  00FBAF  73                 	db	115	;'s'
 11862  00FBB0  29                 	db	41
 11863  00FBB1  20                 	db	32
 11864  00FBB2  64                 	db	100	;'d'
 11865  00FBB3  65                 	db	101	;'e'
 11866  00FBB4  74                 	db	116	;'t'
 11867  00FBB5  65                 	db	101	;'e'
 11868  00FBB6  63                 	db	99	;'c'
 11869  00FBB7  74                 	db	116	;'t'
 11870  00FBB8  65                 	db	101	;'e'
 11871  00FBB9  64                 	db	100	;'d'
 11872  00FBBA  21                 	db	33
 11873  00FBBB  0A                 	db	10
 11874  00FBBC  0D                 	db	13
 11875  00FBBD  00                 	db	0
 11876  00FBBE                     STR_127:
 11877  00FBBE  4C                 	db	76	;'L'
 11878  00FBBF  6F                 	db	111	;'o'
 11879  00FBC0  61                 	db	97	;'a'
 11880  00FBC1  64                 	db	100	;'d'
 11881  00FBC2  20                 	db	32
 11882  00FBC3  68                 	db	104	;'h'
 11883  00FBC4  61                 	db	97	;'a'
 11884  00FBC5  73                 	db	115	;'s'
 11885  00FBC6  20                 	db	32
 11886  00FBC7  62                 	db	98	;'b'
 11887  00FBC8  65                 	db	101	;'e'
 11888  00FBC9  65                 	db	101	;'e'
 11889  00FBCA  6E                 	db	110	;'n'
 11890  00FBCB  20                 	db	32
 11891  00FBCC  64                 	db	100	;'d'
 11892  00FBCD  69                 	db	105	;'i'
 11893  00FBCE  73                 	db	115	;'s'
 11894  00FBCF  61                 	db	97	;'a'
 11895  00FBD0  62                 	db	98	;'b'
 11896  00FBD1  6C                 	db	108	;'l'
 11897  00FBD2  65                 	db	101	;'e'
 11898  00FBD3  64                 	db	100	;'d'
 11899  00FBD4  0A                 	db	10
 11900  00FBD5  0D                 	db	13
 11901  00FBD6  00                 	db	0
 11902  00FBD7                     STR_128:
 11903  00FBD7  53                 	db	83	;'S'
 11904  00FBD8  65                 	db	101	;'e'
 11905  00FBD9  74                 	db	116	;'t'
 11906  00FBDA  20                 	db	32
 11907  00FBDB  44                 	db	68	;'D'
 11908  00FBDC  69                 	db	105	;'i'
 11909  00FBDD  6D                 	db	109	;'m'
 11910  00FBDE  6D                 	db	109	;'m'
 11911  00FBDF  69                 	db	105	;'i'
 11912  00FBE0  6E                 	db	110	;'n'
 11913  00FBE1  67                 	db	103	;'g'
 11914  00FBE2  20                 	db	32
 11915  00FBE3  50                 	db	80	;'P'
 11916  00FBE4  65                 	db	101	;'e'
 11917  00FBE5  72                 	db	114	;'r'
 11918  00FBE6  63                 	db	99	;'c'
 11919  00FBE7  65                 	db	101	;'e'
 11920  00FBE8  6E                 	db	110	;'n'
 11921  00FBE9  74                 	db	116	;'t'
 11922  00FBEA  61                 	db	97	;'a'
 11923  00FBEB  67                 	db	103	;'g'
 11924  00FBEC  65                 	db	101	;'e'
 11925  00FBED  3A                 	db	58	;':'
 11926  00FBEE  20                 	db	32
 11927  00FBEF  00                 	db	0
 11928  00FBF0                     STR_67:
 11929  00FBF0  20                 	db	32
 11930  00FBF1  20                 	db	32
 11931  00FBF2  20                 	db	32
 11932  00FBF3  20                 	db	32
 11933  00FBF4  47                 	db	71	;'G'
 11934  00FBF5  65                 	db	101	;'e'
 11935  00FBF6  6E                 	db	110	;'n'
 11936  00FBF7  65                 	db	101	;'e'
 11937  00FBF8  72                 	db	114	;'r'
 11938  00FBF9  61                 	db	97	;'a'
 11939  00FBFA  6C                 	db	108	;'l'
 11940  00FBFB  20                 	db	32
 11941  00FBFC  41                 	db	65	;'A'
 11942  00FBFD  44                 	db	68	;'D'
 11943  00FBFE  43                 	db	67	;'C'
 11944  00FBFF  20                 	db	32
 11945  00FC00  65                 	db	101	;'e'
 11946  00FC01  72                 	db	114	;'r'
 11947  00FC02  72                 	db	114	;'r'
 11948  00FC03  6F                 	db	111	;'o'
 11949  00FC04  72                 	db	114	;'r'
 11950  00FC05  0A                 	db	10
 11951  00FC06  0D                 	db	13
 11952  00FC07  00                 	db	0
 11953  00FC08                     STR_80:
 11954  00FC08  20                 	db	32
 11955  00FC09  20                 	db	32
 11956  00FC0A  20                 	db	32
 11957  00FC0B  20                 	db	32
 11958  00FC0C  4F                 	db	79	;'O'
 11959  00FC0D  4C                 	db	76	;'L'
 11960  00FC0E  45                 	db	69	;'E'
 11961  00FC0F  44                 	db	68	;'D'
 11962  00FC10  20                 	db	32
 11963  00FC11  44                 	db	68	;'D'
 11964  00FC12  69                 	db	105	;'i'
 11965  00FC13  73                 	db	115	;'s'
 11966  00FC14  70                 	db	112	;'p'
 11967  00FC15  6C                 	db	108	;'l'
 11968  00FC16  61                 	db	97	;'a'
 11969  00FC17  79                 	db	121	;'y'
 11970  00FC18  20                 	db	32
 11971  00FC19  49                 	db	73	;'I'
 11972  00FC1A  32                 	db	50	;'2'
 11973  00FC1B  43                 	db	67	;'C'
 11974  00FC1C  0A                 	db	10
 11975  00FC1D  0D                 	db	13
 11976  00FC1E  00                 	db	0
 11977  00FC1F                     STR_77:
 11978  00FC1F  41                 	db	65	;'A'
 11979  00FC20  44                 	db	68	;'D'
 11980  00FC21  43                 	db	67	;'C'
 11981  00FC22  20                 	db	32
 11982  00FC23  45                 	db	69	;'E'
 11983  00FC24  72                 	db	114	;'r'
 11984  00FC25  72                 	db	114	;'r'
 11985  00FC26  6F                 	db	111	;'o'
 11986  00FC27  72                 	db	114	;'r'
 11987  00FC28  28                 	db	40
 11988  00FC29  73                 	db	115	;'s'
 11989  00FC2A  29                 	db	41
 11990  00FC2B  20                 	db	32
 11991  00FC2C  63                 	db	99	;'c'
 11992  00FC2D  6C                 	db	108	;'l'
 11993  00FC2E  65                 	db	101	;'e'
 11994  00FC2F  61                 	db	97	;'a'
 11995  00FC30  72                 	db	114	;'r'
 11996  00FC31  65                 	db	101	;'e'
 11997  00FC32  64                 	db	100	;'d'
 11998  00FC33  0A                 	db	10
 11999  00FC34  0D                 	db	13
 12000  00FC35  00                 	db	0
 12001  00FC36                     STR_187:
 12002  00FC36  53                 	db	83	;'S'
 12003  00FC37  74                 	db	116	;'t'
 12004  00FC38  61                 	db	97	;'a'
 12005  00FC39  63                 	db	99	;'c'
 12006  00FC3A  6B                 	db	107	;'k'
 12007  00FC3B  20                 	db	32
 12008  00FC3C  55                 	db	85	;'U'
 12009  00FC3D  6E                 	db	110	;'n'
 12010  00FC3E  64                 	db	100	;'d'
 12011  00FC3F  65                 	db	101	;'e'
 12012  00FC40  72                 	db	114	;'r'
 12013  00FC41  66                 	db	102	;'f'
 12014  00FC42  6C                 	db	108	;'l'
 12015  00FC43  6F                 	db	111	;'o'
 12016  00FC44  77                 	db	119	;'w'
 12017  00FC45  20                 	db	32
 12018  00FC46  52                 	db	82	;'R'
 12019  00FC47  65                 	db	101	;'e'
 12020  00FC48  73                 	db	115	;'s'
 12021  00FC49  65                 	db	101	;'e'
 12022  00FC4A  74                 	db	116	;'t'
 12023  00FC4B  00                 	db	0
 12024  00FC4C                     STR_186:
 12025  00FC4C  53                 	db	83	;'S'
 12026  00FC4D  74                 	db	116	;'t'
 12027  00FC4E  61                 	db	97	;'a'
 12028  00FC4F  63                 	db	99	;'c'
 12029  00FC50  6B                 	db	107	;'k'
 12030  00FC51  20                 	db	32
 12031  00FC52  4F                 	db	79	;'O'
 12032  00FC53  76                 	db	118	;'v'
 12033  00FC54  65                 	db	101	;'e'
 12034  00FC55  72                 	db	114	;'r'
 12035  00FC56  66                 	db	102	;'f'
 12036  00FC57  6C                 	db	108	;'l'
 12037  00FC58  6F                 	db	111	;'o'
 12038  00FC59  77                 	db	119	;'w'
 12039  00FC5A  20                 	db	32
 12040  00FC5B  52                 	db	82	;'R'
 12041  00FC5C  65                 	db	101	;'e'
 12042  00FC5D  73                 	db	115	;'s'
 12043  00FC5E  65                 	db	101	;'e'
 12044  00FC5F  74                 	db	116	;'t'
 12045  00FC60  00                 	db	0
 12046  00FC61                     STR_100:
 12047  00FC61  4D                 	db	77	;'M'
 12048  00FC62  65                 	db	101	;'e'
 12049  00FC63  61                 	db	97	;'a'
 12050  00FC64  73                 	db	115	;'s'
 12051  00FC65  75                 	db	117	;'u'
 12052  00FC66  72                 	db	114	;'r'
 12053  00FC67  65                 	db	101	;'e'
 12054  00FC68  20                 	db	32
 12055  00FC69  52                 	db	82	;'R'
 12056  00FC6A  4D                 	db	77	;'M'
 12057  00FC6B  53                 	db	83	;'S'
 12058  00FC6C  20                 	db	32
 12059  00FC6D  56                 	db	86	;'V'
 12060  00FC6E  6F                 	db	111	;'o'
 12061  00FC6F  6C                 	db	108	;'l'
 12062  00FC70  74                 	db	116	;'t'
 12063  00FC71  61                 	db	97	;'a'
 12064  00FC72  67                 	db	103	;'g'
 12065  00FC73  65                 	db	101	;'e'
 12066  00FC74  3F                 	db	63	;'?'
 12067  00FC75  00                 	db	0
 12068  00FC76                     STR_98:
 12069  00FC76  4D                 	db	77	;'M'
 12070  00FC77  65                 	db	101	;'e'
 12071  00FC78  61                 	db	97	;'a'
 12072  00FC79  73                 	db	115	;'s'
 12073  00FC7A  75                 	db	117	;'u'
 12074  00FC7B  72                 	db	114	;'r'
 12075  00FC7C  65                 	db	101	;'e'
 12076  00FC7D  20                 	db	32
 12077  00FC7E  52                 	db	82	;'R'
 12078  00FC7F  4D                 	db	77	;'M'
 12079  00FC80  53                 	db	83	;'S'
 12080  00FC81  20                 	db	32
 12081  00FC82  43                 	db	67	;'C'
 12082  00FC83  75                 	db	117	;'u'
 12083  00FC84  72                 	db	114	;'r'
 12084  00FC85  72                 	db	114	;'r'
 12085  00FC86  65                 	db	101	;'e'
 12086  00FC87  6E                 	db	110	;'n'
 12087  00FC88  74                 	db	116	;'t'
 12088  00FC89  3F                 	db	63	;'?'
 12089  00FC8A  00                 	db	0
 12090  00FC8B                     STR_143:
 12091  00FC8B  4D                 	db	77	;'M'
 12092  00FC8C  61                 	db	97	;'a'
 12093  00FC8D  78                 	db	120	;'x'
 12094  00FC8E  20                 	db	32
 12095  00FC8F  50                 	db	80	;'P'
 12096  00FC90  4F                 	db	79	;'O'
 12097  00FC91  53                 	db	83	;'S'
 12098  00FC92  33                 	db	51	;'3'
 12099  00FC93  50                 	db	80	;'P'
 12100  00FC94  33                 	db	51	;'3'
 12101  00FC95  20                 	db	32
 12102  00FC96  56                 	db	86	;'V'
 12103  00FC97  6F                 	db	111	;'o'
 12104  00FC98  6C                 	db	108	;'l'
 12105  00FC99  74                 	db	116	;'t'
 12106  00FC9A  61                 	db	97	;'a'
 12107  00FC9B  67                 	db	103	;'g'
 12108  00FC9C  65                 	db	101	;'e'
 12109  00FC9D  3F                 	db	63	;'?'
 12110  00FC9E  00                 	db	0
 12111  00FC9F                     STR_182:
 12112  00FC9F  4D                 	db	77	;'M'
 12113  00FCA0  61                 	db	97	;'a'
 12114  00FCA1  73                 	db	115	;'s'
 12115  00FCA2  74                 	db	116	;'t'
 12116  00FCA3  65                 	db	101	;'e'
 12117  00FCA4  72                 	db	114	;'r'
 12118  00FCA5  20                 	db	32
 12119  00FCA6  43                 	db	67	;'C'
 12120  00FCA7  6C                 	db	108	;'l'
 12121  00FCA8  65                 	db	101	;'e'
 12122  00FCA9  61                 	db	97	;'a'
 12123  00FCAA  72                 	db	114	;'r'
 12124  00FCAB  20                 	db	32
 12125  00FCAC  52                 	db	82	;'R'
 12126  00FCAD  65                 	db	101	;'e'
 12127  00FCAE  73                 	db	115	;'s'
 12128  00FCAF  65                 	db	101	;'e'
 12129  00FCB0  74                 	db	116	;'t'
 12130  00FCB1  00                 	db	0
 12131  00FCB2                     STR_145:
 12132  00FCB2  4D                 	db	77	;'M'
 12133  00FCB3  61                 	db	97	;'a'
 12134  00FCB4  78                 	db	120	;'x'
 12135  00FCB5  20                 	db	32
 12136  00FCB6  50                 	db	80	;'P'
 12137  00FCB7  4F                 	db	79	;'O'
 12138  00FCB8  53                 	db	83	;'S'
 12139  00FCB9  31                 	db	49	;'1'
 12140  00FCBA  32                 	db	50	;'2'
 12141  00FCBB  20                 	db	32
 12142  00FCBC  56                 	db	86	;'V'
 12143  00FCBD  6F                 	db	111	;'o'
 12144  00FCBE  6C                 	db	108	;'l'
 12145  00FCBF  74                 	db	116	;'t'
 12146  00FCC0  61                 	db	97	;'a'
 12147  00FCC1  67                 	db	103	;'g'
 12148  00FCC2  65                 	db	101	;'e'
 12149  00FCC3  3F                 	db	63	;'?'
 12150  00FCC4  00                 	db	0
 12151  00FCC5                     STR_90:
 12152  00FCC5  4D                 	db	77	;'M'
 12153  00FCC6  65                 	db	101	;'e'
 12154  00FCC7  61                 	db	97	;'a'
 12155  00FCC8  73                 	db	115	;'s'
 12156  00FCC9  75                 	db	117	;'u'
 12157  00FCCA  72                 	db	114	;'r'
 12158  00FCCB  65                 	db	101	;'e'
 12159  00FCCC  20                 	db	32
 12160  00FCCD  44                 	db	68	;'D'
 12161  00FCCE  69                 	db	105	;'i'
 12162  00FCCF  65                 	db	101	;'e'
 12163  00FCD0  20                 	db	32
 12164  00FCD1  54                 	db	84	;'T'
 12165  00FCD2  65                 	db	101	;'e'
 12166  00FCD3  6D                 	db	109	;'m'
 12167  00FCD4  70                 	db	112	;'p'
 12168  00FCD5  3F                 	db	63	;'?'
 12169  00FCD6  00                 	db	0
 12170  00FCD7                     STR_84:
 12171  00FCD7  43                 	db	67	;'C'
 12172  00FCD8  6C                 	db	108	;'l'
 12173  00FCD9  65                 	db	101	;'e'
 12174  00FCDA  61                 	db	97	;'a'
 12175  00FCDB  72                 	db	114	;'r'
 12176  00FCDC  20                 	db	32
 12177  00FCDD  43                 	db	67	;'C'
 12178  00FCDE  6F                 	db	111	;'o'
 12179  00FCDF  6D                 	db	109	;'m'
 12180  00FCE0  6D                 	db	109	;'m'
 12181  00FCE1  20                 	db	32
 12182  00FCE2  45                 	db	69	;'E'
 12183  00FCE3  72                 	db	114	;'r'
 12184  00FCE4  72                 	db	114	;'r'
 12185  00FCE5  6F                 	db	111	;'o'
 12186  00FCE6  72                 	db	114	;'r'
 12187  00FCE7  73                 	db	115	;'s'
 12188  00FCE8  00                 	db	0
 12189  00FCE9                     STR_192:
 12190  00FCE9  30                 	db	48	;'0'
 12191  00FCEA  31                 	db	49	;'1'
 12192  00FCEB  32                 	db	50	;'2'
 12193  00FCEC  33                 	db	51	;'3'
 12194  00FCED  34                 	db	52	;'4'
 12195  00FCEE  35                 	db	53	;'5'
 12196  00FCEF  36                 	db	54	;'6'
 12197  00FCF0  37                 	db	55	;'7'
 12198  00FCF1  38                 	db	56	;'8'
 12199  00FCF2  39                 	db	57	;'9'
 12200  00FCF3  41                 	db	65	;'A'
 12201  00FCF4  42                 	db	66	;'B'
 12202  00FCF5  43                 	db	67	;'C'
 12203  00FCF6  44                 	db	68	;'D'
 12204  00FCF7  45                 	db	69	;'E'
 12205  00FCF8  46                 	db	70	;'F'
 12206  00FCF9  00                 	db	0
 12207  00FCFA                     STR_55:
 12208  00FCFA  41                 	db	65	;'A'
 12209  00FCFB  43                 	db	67	;'C'
 12210  00FCFC  20                 	db	32
 12211  00FCFD  50                 	db	80	;'P'
 12212  00FCFE  6F                 	db	111	;'o'
 12213  00FCFF  77                 	db	119	;'w'
 12214  00FD00  65                 	db	101	;'e'
 12215  00FD01  72                 	db	114	;'r'
 12216  00FD02  20                 	db	32
 12217  00FD03  4D                 	db	77	;'M'
 12218  00FD04  65                 	db	101	;'e'
 12219  00FD05  74                 	db	116	;'t'
 12220  00FD06  65                 	db	101	;'e'
 12221  00FD07  72                 	db	114	;'r'
 12222  00FD08  0A                 	db	10
 12223  00FD09  0D                 	db	13
 12224  00FD0A  00                 	db	0
 12225  00FD0B                     STR_122:
 12226  00FD0B  44                 	db	68	;'D'
 12227  00FD0C  69                 	db	105	;'i'
 12228  00FD0D  6D                 	db	109	;'m'
 12229  00FD0E  6D                 	db	109	;'m'
 12230  00FD0F  69                 	db	105	;'i'
 12231  00FD10  6E                 	db	110	;'n'
 12232  00FD11  67                 	db	103	;'g'
 12233  00FD12  20                 	db	32
 12234  00FD13  45                 	db	69	;'E'
 12235  00FD14  6E                 	db	110	;'n'
 12236  00FD15  61                 	db	97	;'a'
 12237  00FD16  62                 	db	98	;'b'
 12238  00FD17  6C                 	db	108	;'l'
 12239  00FD18  65                 	db	101	;'e'
 12240  00FD19  64                 	db	100	;'d'
 12241  00FD1A  3F                 	db	63	;'?'
 12242  00FD1B  00                 	db	0
 12243  00FD1C                     STR_149:
 12244  00FD1C  4D                 	db	77	;'M'
 12245  00FD1D  61                 	db	97	;'a'
 12246  00FD1E  78                 	db	120	;'x'
 12247  00FD1F  20                 	db	32
 12248  00FD20  46                 	db	70	;'F'
 12249  00FD21  56                 	db	86	;'V'
 12250  00FD22  52                 	db	82	;'R'
 12251  00FD23  20                 	db	32
 12252  00FD24  56                 	db	86	;'V'
 12253  00FD25  6F                 	db	111	;'o'
 12254  00FD26  6C                 	db	108	;'l'
 12255  00FD27  74                 	db	116	;'t'
 12256  00FD28  61                 	db	97	;'a'
 12257  00FD29  67                 	db	103	;'g'
 12258  00FD2A  65                 	db	101	;'e'
 12259  00FD2B  3F                 	db	63	;'?'
 12260  00FD2C  00                 	db	0
 12261  00FD2D                     STR_139:
 12262  00FD2D  4D                 	db	77	;'M'
 12263  00FD2E  61                 	db	97	;'a'
 12264  00FD2F  78                 	db	120	;'x'
 12265  00FD30  20                 	db	32
 12266  00FD31  52                 	db	82	;'R'
 12267  00FD32  4D                 	db	77	;'M'
 12268  00FD33  53                 	db	83	;'S'
 12269  00FD34  20                 	db	32
 12270  00FD35  43                 	db	67	;'C'
 12271  00FD36  75                 	db	117	;'u'
 12272  00FD37  72                 	db	114	;'r'
 12273  00FD38  72                 	db	114	;'r'
 12274  00FD39  65                 	db	101	;'e'
 12275  00FD3A  6E                 	db	110	;'n'
 12276  00FD3B  74                 	db	116	;'t'
 12277  00FD3C  3F                 	db	63	;'?'
 12278  00FD3D  00                 	db	0
 12279  00FD3E                     STR_113:
 12280  00FD3E  45                 	db	69	;'E'
 12281  00FD3F  6E                 	db	110	;'n'
 12282  00FD40  61                 	db	97	;'a'
 12283  00FD41  62                 	db	98	;'b'
 12284  00FD42  6C                 	db	108	;'l'
 12285  00FD43  65                 	db	101	;'e'
 12286  00FD44  20                 	db	32
 12287  00FD45  44                 	db	68	;'D'
 12288  00FD46  69                 	db	105	;'i'
 12289  00FD47  6D                 	db	109	;'m'
 12290  00FD48  6D                 	db	109	;'m'
 12291  00FD49  69                 	db	105	;'i'
 12292  00FD4A  6E                 	db	110	;'n'
 12293  00FD4B  67                 	db	103	;'g'
 12294  00FD4C  20                 	db	32
 12295  00FD4D  59                 	db	89	;'Y'
 12296  00FD4E  00                 	db	0
 12297  00FD4F                     STR_151:
 12298  00FD4F  43                 	db	67	;'C'
 12299  00FD50  6C                 	db	108	;'l'
 12300  00FD51  65                 	db	101	;'e'
 12301  00FD52  61                 	db	97	;'a'
 12302  00FD53  72                 	db	114	;'r'
 12303  00FD54  20                 	db	32
 12304  00FD55  4D                 	db	77	;'M'
 12305  00FD56  61                 	db	97	;'a'
 12306  00FD57  78                 	db	120	;'x'
 12307  00FD58  20                 	db	32
 12308  00FD59  56                 	db	86	;'V'
 12309  00FD5A  61                 	db	97	;'a'
 12310  00FD5B  6C                 	db	108	;'l'
 12311  00FD5C  75                 	db	117	;'u'
 12312  00FD5D  65                 	db	101	;'e'
 12313  00FD5E  73                 	db	115	;'s'
 12314  00FD5F  00                 	db	0
 12315  00FD60                     STR_76:
 12316  00FD60  43                 	db	67	;'C'
 12317  00FD61  6C                 	db	108	;'l'
 12318  00FD62  65                 	db	101	;'e'
 12319  00FD63  61                 	db	97	;'a'
 12320  00FD64  72                 	db	114	;'r'
 12321  00FD65  20                 	db	32
 12322  00FD66  41                 	db	65	;'A'
 12323  00FD67  44                 	db	68	;'D'
 12324  00FD68  43                 	db	67	;'C'
 12325  00FD69  20                 	db	32
 12326  00FD6A  45                 	db	69	;'E'
 12327  00FD6B  72                 	db	114	;'r'
 12328  00FD6C  72                 	db	114	;'r'
 12329  00FD6D  6F                 	db	111	;'o'
 12330  00FD6E  72                 	db	114	;'r'
 12331  00FD6F  73                 	db	115	;'s'
 12332  00FD70  00                 	db	0
 12333  00FD71                     STR_179:
 12334  00FD71  55                 	db	85	;'U'
 12335  00FD72  6E                 	db	110	;'n'
 12336  00FD73  64                 	db	100	;'d'
 12337  00FD74  65                 	db	101	;'e'
 12338  00FD75  66                 	db	102	;'f'
 12339  00FD76  69                 	db	105	;'i'
 12340  00FD77  6E                 	db	110	;'n'
 12341  00FD78  65                 	db	101	;'e'
 12342  00FD79  64                 	db	100	;'d'
 12343  00FD7A  20                 	db	32
 12344  00FD7B  52                 	db	82	;'R'
 12345  00FD7C  65                 	db	101	;'e'
 12346  00FD7D  73                 	db	115	;'s'
 12347  00FD7E  65                 	db	101	;'e'
 12348  00FD7F  74                 	db	116	;'t'
 12349  00FD80  00                 	db	0
 12350  00FD81                     STR_181:
 12351  00FD81  42                 	db	66	;'B'
 12352  00FD82  72                 	db	114	;'r'
 12353  00FD83  6F                 	db	111	;'o'
 12354  00FD84  77                 	db	119	;'w'
 12355  00FD85  6E                 	db	110	;'n'
 12356  00FD86  20                 	db	32
 12357  00FD87  4F                 	db	79	;'O'
 12358  00FD88  75                 	db	117	;'u'
 12359  00FD89  74                 	db	116	;'t'
 12360  00FD8A  20                 	db	32
 12361  00FD8B  52                 	db	82	;'R'
 12362  00FD8C  65                 	db	101	;'e'
 12363  00FD8D  73                 	db	115	;'s'
 12364  00FD8E  65                 	db	101	;'e'
 12365  00FD8F  74                 	db	116	;'t'
 12366  00FD90  00                 	db	0
 12367  00FD91                     STR_86:
 12368  00FD91  4D                 	db	77	;'M'
 12369  00FD92  65                 	db	101	;'e'
 12370  00FD93  61                 	db	97	;'a'
 12371  00FD94  73                 	db	115	;'s'
 12372  00FD95  75                 	db	117	;'u'
 12373  00FD96  72                 	db	114	;'r'
 12374  00FD97  65                 	db	101	;'e'
 12375  00FD98  20                 	db	32
 12376  00FD99  50                 	db	80	;'P'
 12377  00FD9A  4F                 	db	79	;'O'
 12378  00FD9B  53                 	db	83	;'S'
 12379  00FD9C  33                 	db	51	;'3'
 12380  00FD9D  50                 	db	80	;'P'
 12381  00FD9E  33                 	db	51	;'3'
 12382  00FD9F  3F                 	db	63	;'?'
 12383  00FDA0  00                 	db	0
 12384  00FDA1                     STR_135:
 12385  00FDA1  44                 	db	68	;'D'
 12386  00FDA2  65                 	db	101	;'e'
 12387  00FDA3  76                 	db	118	;'v'
 12388  00FDA4  69                 	db	105	;'i'
 12389  00FDA5  63                 	db	99	;'c'
 12390  00FDA6  65                 	db	101	;'e'
 12391  00FDA7  20                 	db	32
 12392  00FDA8  4F                 	db	79	;'O'
 12393  00FDA9  6E                 	db	110	;'n'
 12394  00FDAA  20                 	db	32
 12395  00FDAB  54                 	db	84	;'T'
 12396  00FDAC  69                 	db	105	;'i'
 12397  00FDAD  6D                 	db	109	;'m'
 12398  00FDAE  65                 	db	101	;'e'
 12399  00FDAF  3F                 	db	63	;'?'
 12400  00FDB0  00                 	db	0
 12401  00FDB1                     STR_51:
 12402  00FDB1  43                 	db	67	;'C'
 12403  00FDB2  61                 	db	97	;'a'
 12404  00FDB3  75                 	db	117	;'u'
 12405  00FDB4  73                 	db	115	;'s'
 12406  00FDB5  65                 	db	101	;'e'
 12407  00FDB6  20                 	db	32
 12408  00FDB7  6F                 	db	111	;'o'
 12409  00FDB8  66                 	db	102	;'f'
 12410  00FDB9  20                 	db	32
 12411  00FDBA  52                 	db	82	;'R'
 12412  00FDBB  65                 	db	101	;'e'
 12413  00FDBC  73                 	db	115	;'s'
 12414  00FDBD  65                 	db	101	;'e'
 12415  00FDBE  74                 	db	116	;'t'
 12416  00FDBF  3F                 	db	63	;'?'
 12417  00FDC0  00                 	db	0
 12418  00FDC1                     STR_104:
 12419  00FDC1  4D                 	db	77	;'M'
 12420  00FDC2  65                 	db	101	;'e'
 12421  00FDC3  61                 	db	97	;'a'
 12422  00FDC4  73                 	db	115	;'s'
 12423  00FDC5  75                 	db	117	;'u'
 12424  00FDC6  72                 	db	114	;'r'
 12425  00FDC7  65                 	db	101	;'e'
 12426  00FDC8  20                 	db	32
 12427  00FDC9  45                 	db	69	;'E'
 12428  00FDCA  6E                 	db	110	;'n'
 12429  00FDCB  65                 	db	101	;'e'
 12430  00FDCC  72                 	db	114	;'r'
 12431  00FDCD  67                 	db	103	;'g'
 12432  00FDCE  79                 	db	121	;'y'
 12433  00FDCF  3F                 	db	63	;'?'
 12434  00FDD0  00                 	db	0
 12435  00FDD1                     STR_115:
 12436  00FDD1  44                 	db	68	;'D'
 12437  00FDD2  69                 	db	105	;'i'
 12438  00FDD3  73                 	db	115	;'s'
 12439  00FDD4  61                 	db	97	;'a'
 12440  00FDD5  62                 	db	98	;'b'
 12441  00FDD6  6C                 	db	108	;'l'
 12442  00FDD7  65                 	db	101	;'e'
 12443  00FDD8  20                 	db	32
 12444  00FDD9  44                 	db	68	;'D'
 12445  00FDDA  69                 	db	105	;'i'
 12446  00FDDB  6D                 	db	109	;'m'
 12447  00FDDC  6D                 	db	109	;'m'
 12448  00FDDD  69                 	db	105	;'i'
 12449  00FDDE  6E                 	db	110	;'n'
 12450  00FDDF  67                 	db	103	;'g'
 12451  00FDE0  00                 	db	0
 12452  00FDE1                     STR_180:
 12453  00FDE1  50                 	db	80	;'P'
 12454  00FDE2  6F                 	db	111	;'o'
 12455  00FDE3  77                 	db	119	;'w'
 12456  00FDE4  65                 	db	101	;'e'
 12457  00FDE5  72                 	db	114	;'r'
 12458  00FDE6  20                 	db	32
 12459  00FDE7  4F                 	db	79	;'O'
 12460  00FDE8  6E                 	db	110	;'n'
 12461  00FDE9  20                 	db	32
 12462  00FDEA  52                 	db	82	;'R'
 12463  00FDEB  65                 	db	101	;'e'
 12464  00FDEC  73                 	db	115	;'s'
 12465  00FDED  65                 	db	101	;'e'
 12466  00FDEE  74                 	db	116	;'t'
 12467  00FDEF  00                 	db	0
 12468  00FDF0                     STR_73:
 12469  00FDF0  20                 	db	32
 12470  00FDF1  20                 	db	32
 12471  00FDF2  20                 	db	32
 12472  00FDF3  20                 	db	32
 12473  00FDF4  44                 	db	68	;'D'
 12474  00FDF5  69                 	db	105	;'i'
 12475  00FDF6  65                 	db	101	;'e'
 12476  00FDF7  20                 	db	32
 12477  00FDF8  54                 	db	84	;'T'
 12478  00FDF9  65                 	db	101	;'e'
 12479  00FDFA  6D                 	db	109	;'m'
 12480  00FDFB  70                 	db	112	;'p'
 12481  00FDFC  0A                 	db	10
 12482  00FDFD  0D                 	db	13
 12483  00FDFE  00                 	db	0
 12484  00FDFF                     STR_88:
 12485  00FDFF  4D                 	db	77	;'M'
 12486  00FE00  65                 	db	101	;'e'
 12487  00FE01  61                 	db	97	;'a'
 12488  00FE02  73                 	db	115	;'s'
 12489  00FE03  75                 	db	117	;'u'
 12490  00FE04  72                 	db	114	;'r'
 12491  00FE05  65                 	db	101	;'e'
 12492  00FE06  20                 	db	32
 12493  00FE07  50                 	db	80	;'P'
 12494  00FE08  4F                 	db	79	;'O'
 12495  00FE09  53                 	db	83	;'S'
 12496  00FE0A  31                 	db	49	;'1'
 12497  00FE0B  32                 	db	50	;'2'
 12498  00FE0C  3F                 	db	63	;'?'
 12499  00FE0D  00                 	db	0
 12500  00FE0E                     STR_102:
 12501  00FE0E  4D                 	db	77	;'M'
 12502  00FE0F  65                 	db	101	;'e'
 12503  00FE10  61                 	db	97	;'a'
 12504  00FE11  73                 	db	115	;'s'
 12505  00FE12  75                 	db	117	;'u'
 12506  00FE13  72                 	db	114	;'r'
 12507  00FE14  65                 	db	101	;'e'
 12508  00FE15  20                 	db	32
 12509  00FE16  50                 	db	80	;'P'
 12510  00FE17  6F                 	db	111	;'o'
 12511  00FE18  77                 	db	119	;'w'
 12512  00FE19  65                 	db	101	;'e'
 12513  00FE1A  72                 	db	114	;'r'
 12514  00FE1B  3F                 	db	63	;'?'
 12515  00FE1C  00                 	db	0
 12516  00FE1D                     STR_108:
 12517  00FE1D  45                 	db	69	;'E'
 12518  00FE1E  6E                 	db	110	;'n'
 12519  00FE1F  61                 	db	97	;'a'
 12520  00FE20  62                 	db	98	;'b'
 12521  00FE21  6C                 	db	108	;'l'
 12522  00FE22  65                 	db	101	;'e'
 12523  00FE23  20                 	db	32
 12524  00FE24  44                 	db	68	;'D'
 12525  00FE25  69                 	db	105	;'i'
 12526  00FE26  6D                 	db	109	;'m'
 12527  00FE27  6D                 	db	109	;'m'
 12528  00FE28  69                 	db	105	;'i'
 12529  00FE29  6E                 	db	110	;'n'
 12530  00FE2A  67                 	db	103	;'g'
 12531  00FE2B  00                 	db	0
 12532  00FE2C                     STR_2:
 12533  00FE2C  41                 	db	65	;'A'
 12534  00FE2D  43                 	db	67	;'C'
 12535  00FE2E  20                 	db	32
 12536  00FE2F  50                 	db	80	;'P'
 12537  00FE30  6F                 	db	111	;'o'
 12538  00FE31  77                 	db	119	;'w'
 12539  00FE32  65                 	db	101	;'e'
 12540  00FE33  72                 	db	114	;'r'
 12541  00FE34  20                 	db	32
 12542  00FE35  4D                 	db	77	;'M'
 12543  00FE36  65                 	db	101	;'e'
 12544  00FE37  74                 	db	116	;'t'
 12545  00FE38  65                 	db	101	;'e'
 12546  00FE39  72                 	db	114	;'r'
 12547  00FE3A  00                 	db	0
 12548  00FE3B                     STR_94:
 12549  00FE3B  4D                 	db	77	;'M'
 12550  00FE3C  65                 	db	101	;'e'
 12551  00FE3D  61                 	db	97	;'a'
 12552  00FE3E  73                 	db	115	;'s'
 12553  00FE3F  75                 	db	117	;'u'
 12554  00FE40  72                 	db	114	;'r'
 12555  00FE41  65                 	db	101	;'e'
 12556  00FE42  20                 	db	32
 12557  00FE43  41                 	db	65	;'A'
 12558  00FE44  56                 	db	86	;'V'
 12559  00FE45  53                 	db	83	;'S'
 12560  00FE46  53                 	db	83	;'S'
 12561  00FE47  3F                 	db	63	;'?'
 12562  00FE48  00                 	db	0
 12563  00FE49                     STR_119:
 12564  00FE49  4C                 	db	76	;'L'
 12565  00FE4A  6F                 	db	111	;'o'
 12566  00FE4B  61                 	db	97	;'a'
 12567  00FE4C  64                 	db	100	;'d'
 12568  00FE4D  20                 	db	32
 12569  00FE4E  45                 	db	69	;'E'
 12570  00FE4F  6E                 	db	110	;'n'
 12571  00FE50  61                 	db	97	;'a'
 12572  00FE51  62                 	db	98	;'b'
 12573  00FE52  6C                 	db	108	;'l'
 12574  00FE53  65                 	db	101	;'e'
 12575  00FE54  64                 	db	100	;'d'
 12576  00FE55  3F                 	db	63	;'?'
 12577  00FE56  00                 	db	0
 12578  00FE57                     STR_137:
 12579  00FE57  4C                 	db	76	;'L'
 12580  00FE58  6F                 	db	111	;'o'
 12581  00FE59  61                 	db	97	;'a'
 12582  00FE5A  64                 	db	100	;'d'
 12583  00FE5B  20                 	db	32
 12584  00FE5C  4F                 	db	79	;'O'
 12585  00FE5D  6E                 	db	110	;'n'
 12586  00FE5E  20                 	db	32
 12587  00FE5F  54                 	db	84	;'T'
 12588  00FE60  69                 	db	105	;'i'
 12589  00FE61  6D                 	db	109	;'m'
 12590  00FE62  65                 	db	101	;'e'
 12591  00FE63  3F                 	db	63	;'?'
 12592  00FE64  00                 	db	0
 12593  00FE65                     STR_147:
 12594  00FE65  4D                 	db	77	;'M'
 12595  00FE66  61                 	db	97	;'a'
 12596  00FE67  78                 	db	120	;'x'
 12597  00FE68  20                 	db	32
 12598  00FE69  44                 	db	68	;'D'
 12599  00FE6A  69                 	db	105	;'i'
 12600  00FE6B  65                 	db	101	;'e'
 12601  00FE6C  20                 	db	32
 12602  00FE6D  54                 	db	84	;'T'
 12603  00FE6E  65                 	db	101	;'e'
 12604  00FE6F  6D                 	db	109	;'m'
 12605  00FE70  70                 	db	112	;'p'
 12606  00FE71  3F                 	db	63	;'?'
 12607  00FE72  00                 	db	0
 12608  00FE73                     STR_5:
 12609  00FE73  42                 	db	66	;'B'
 12610  00FE74  6F                 	db	111	;'o'
 12611  00FE75  6F                 	db	111	;'o'
 12612  00FE76  74                 	db	116	;'t'
 12613  00FE77  20                 	db	32
 12614  00FE78  43                 	db	67	;'C'
 12615  00FE79  6F                 	db	111	;'o'
 12616  00FE7A  6D                 	db	109	;'m'
 12617  00FE7B  70                 	db	112	;'p'
 12618  00FE7C  6C                 	db	108	;'l'
 12619  00FE7D  65                 	db	101	;'e'
 12620  00FE7E  74                 	db	116	;'t'
 12621  00FE7F  65                 	db	101	;'e'
 12622  00FE80  00                 	db	0
 12623  00FE81                     STR_4:
 12624  00FE81  46                 	db	70	;'F'
 12625  00FE82  69                 	db	105	;'i'
 12626  00FE83  6E                 	db	110	;'n'
 12627  00FE84  61                 	db	97	;'a'
 12628  00FE85  6C                 	db	108	;'l'
 12629  00FE86  20                 	db	32
 12630  00FE87  50                 	db	80	;'P'
 12631  00FE88  72                 	db	114	;'r'
 12632  00FE89  6F                 	db	111	;'o'
 12633  00FE8A  6A                 	db	106	;'j'
 12634  00FE8B  65                 	db	101	;'e'
 12635  00FE8C  63                 	db	99	;'c'
 12636  00FE8D  74                 	db	116	;'t'
 12637  00FE8E  00                 	db	0
 12638  00FE8F                     STR_177:
 12639  00FE8F  50                 	db	80	;'P'
 12640  00FE90  49                 	db	73	;'I'
 12641  00FE91  43                 	db	67	;'C'
 12642  00FE92  31                 	db	49	;'1'
 12643  00FE93  38                 	db	56	;'8'
 12644  00FE94  4C                 	db	76	;'L'
 12645  00FE95  46                 	db	70	;'F'
 12646  00FE96  36                 	db	54	;'6'
 12647  00FE97  37                 	db	55	;'7'
 12648  00FE98  4B                 	db	75	;'K'
 12649  00FE99  34                 	db	52	;'4'
 12650  00FE9A  30                 	db	48	;'0'
 12651  00FE9B  00                 	db	0
 12652  00FE9C                     STR_72:
 12653  00FE9C  20                 	db	32
 12654  00FE9D  20                 	db	32
 12655  00FE9E  20                 	db	32
 12656  00FE9F  20                 	db	32
 12657  00FEA0  50                 	db	80	;'P'
 12658  00FEA1  4F                 	db	79	;'O'
 12659  00FEA2  53                 	db	83	;'S'
 12660  00FEA3  33                 	db	51	;'3'
 12661  00FEA4  50                 	db	80	;'P'
 12662  00FEA5  33                 	db	51	;'3'
 12663  00FEA6  0A                 	db	10
 12664  00FEA7  0D                 	db	13
 12665  00FEA8  00                 	db	0
 12666  00FEA9                     STR_175:
 12667  00FEA9  50                 	db	80	;'P'
 12668  00FEAA  53                 	db	83	;'S'
 12669  00FEAB  4F                 	db	79	;'O'
 12670  00FEAC  43                 	db	67	;'C'
 12671  00FEAD  73                 	db	115	;'s'
 12672  00FEAE  20                 	db	32
 12673  00FEAF  53                 	db	83	;'S'
 12674  00FEB0  55                 	db	85	;'U'
 12675  00FEB1  43                 	db	67	;'C'
 12676  00FEB2  4B                 	db	75	;'K'
 12677  00FEB3  0A                 	db	10
 12678  00FEB4  0D                 	db	13
 12679  00FEB5  00                 	db	0
 12680  00FEB6                     STR_59:
 12681  00FEB6  52                 	db	82	;'R'
 12682  00FEB7  65                 	db	101	;'e'
 12683  00FEB8  76                 	db	118	;'v'
 12684  00FEB9  69                 	db	105	;'i'
 12685  00FEBA  73                 	db	115	;'s'
 12686  00FEBB  69                 	db	105	;'i'
 12687  00FEBC  6F                 	db	111	;'o'
 12688  00FEBD  6E                 	db	110	;'n'
 12689  00FEBE  20                 	db	32
 12690  00FEBF  49                 	db	73	;'I'
 12691  00FEC0  44                 	db	68	;'D'
 12692  00FEC1  3F                 	db	63	;'?'
 12693  00FEC2  00                 	db	0
 12694  00FEC3                     STR_92:
 12695  00FEC3  4D                 	db	77	;'M'
 12696  00FEC4  65                 	db	101	;'e'
 12697  00FEC5  61                 	db	97	;'a'
 12698  00FEC6  73                 	db	115	;'s'
 12699  00FEC7  75                 	db	117	;'u'
 12700  00FEC8  72                 	db	114	;'r'
 12701  00FEC9  65                 	db	101	;'e'
 12702  00FECA  20                 	db	32
 12703  00FECB  46                 	db	70	;'F'
 12704  00FECC  56                 	db	86	;'V'
 12705  00FECD  52                 	db	82	;'R'
 12706  00FECE  3F                 	db	63	;'?'
 12707  00FECF  00                 	db	0
 12708  00FED0                     STR_78:
 12709  00FED0  43                 	db	67	;'C'
 12710  00FED1  6F                 	db	111	;'o'
 12711  00FED2  6D                 	db	109	;'m'
 12712  00FED3  6D                 	db	109	;'m'
 12713  00FED4  20                 	db	32
 12714  00FED5  45                 	db	69	;'E'
 12715  00FED6  72                 	db	114	;'r'
 12716  00FED7  72                 	db	114	;'r'
 12717  00FED8  6F                 	db	111	;'o'
 12718  00FED9  72                 	db	114	;'r'
 12719  00FEDA  73                 	db	115	;'s'
 12720  00FEDB  3F                 	db	63	;'?'
 12721  00FEDC  00                 	db	0
 12722  00FEDD                     STR_126:
 12723  00FEDD  44                 	db	68	;'D'
 12724  00FEDE  69                 	db	105	;'i'
 12725  00FEDF  73                 	db	115	;'s'
 12726  00FEE0  61                 	db	97	;'a'
 12727  00FEE1  62                 	db	98	;'b'
 12728  00FEE2  6C                 	db	108	;'l'
 12729  00FEE3  65                 	db	101	;'e'
 12730  00FEE4  20                 	db	32
 12731  00FEE5  4C                 	db	76	;'L'
 12732  00FEE6  6F                 	db	111	;'o'
 12733  00FEE7  61                 	db	97	;'a'
 12734  00FEE8  64                 	db	100	;'d'
 12735  00FEE9  00                 	db	0
 12736  00FEEA                     STR_106:
 12737  00FEEA  43                 	db	67	;'C'
 12738  00FEEB  6C                 	db	108	;'l'
 12739  00FEEC  65                 	db	101	;'e'
 12740  00FEED  61                 	db	97	;'a'
 12741  00FEEE  72                 	db	114	;'r'
 12742  00FEEF  20                 	db	32
 12743  00FEF0  45                 	db	69	;'E'
 12744  00FEF1  6E                 	db	110	;'n'
 12745  00FEF2  65                 	db	101	;'e'
 12746  00FEF3  72                 	db	114	;'r'
 12747  00FEF4  67                 	db	103	;'g'
 12748  00FEF5  79                 	db	121	;'y'
 12749  00FEF6  00                 	db	0
 12750  00FEF7                     STR_176:
 12751  00FEF7  50                 	db	80	;'P'
 12752  00FEF8  49                 	db	73	;'I'
 12753  00FEF9  43                 	db	67	;'C'
 12754  00FEFA  31                 	db	49	;'1'
 12755  00FEFB  38                 	db	56	;'8'
 12756  00FEFC  46                 	db	70	;'F'
 12757  00FEFD  36                 	db	54	;'6'
 12758  00FEFE  37                 	db	55	;'7'
 12759  00FEFF  4B                 	db	75	;'K'
 12760  00FF00  34                 	db	52	;'4'
 12761  00FF01  30                 	db	48	;'0'
 12762  00FF02  00                 	db	0
 12763  00FF03                     STR_71:
 12764  00FF03  20                 	db	32
 12765  00FF04  20                 	db	32
 12766  00FF05  20                 	db	32
 12767  00FF06  20                 	db	32
 12768  00FF07  50                 	db	80	;'P'
 12769  00FF08  4F                 	db	79	;'O'
 12770  00FF09  53                 	db	83	;'S'
 12771  00FF0A  31                 	db	49	;'1'
 12772  00FF0B  32                 	db	50	;'2'
 12773  00FF0C  0A                 	db	10
 12774  00FF0D  0D                 	db	13
 12775  00FF0E  00                 	db	0
 12776  00FF0F                     STR_64:
 12777  00FF0F  41                 	db	65	;'A'
 12778  00FF10  44                 	db	68	;'D'
 12779  00FF11  43                 	db	67	;'C'
 12780  00FF12  20                 	db	32
 12781  00FF13  45                 	db	69	;'E'
 12782  00FF14  72                 	db	114	;'r'
 12783  00FF15  72                 	db	114	;'r'
 12784  00FF16  6F                 	db	111	;'o'
 12785  00FF17  72                 	db	114	;'r'
 12786  00FF18  73                 	db	115	;'s'
 12787  00FF19  3F                 	db	63	;'?'
 12788  00FF1A  00                 	db	0
 12789  00FF1B                     STR_117:
 12790  00FF1B  45                 	db	69	;'E'
 12791  00FF1C  6E                 	db	110	;'n'
 12792  00FF1D  61                 	db	97	;'a'
 12793  00FF1E  62                 	db	98	;'b'
 12794  00FF1F  6C                 	db	108	;'l'
 12795  00FF20  65                 	db	101	;'e'
 12796  00FF21  20                 	db	32
 12797  00FF22  4C                 	db	76	;'L'
 12798  00FF23  6F                 	db	111	;'o'
 12799  00FF24  61                 	db	97	;'a'
 12800  00FF25  64                 	db	100	;'d'
 12801  00FF26  00                 	db	0
 12802  00FF27  25                 	db	37
 12803  00FF28  6C                 	db	108	;'l'
 12804  00FF29  75                 	db	117	;'u'
 12805  00FF2A  2E                 	db	46
 12806  00FF2B  25                 	db	37
 12807  00FF2C  36                 	db	54	;'6'
 12808  00FF2D  2E                 	db	46
 12809  00FF2E  36                 	db	54	;'6'
 12810  00FF2F  6C                 	db	108	;'l'
 12811  00FF30  75                 	db	117	;'u'
 12812  00FF31  00                 	db	0
 12813  00FF32                     STR_70:
 12814  00FF32  20                 	db	32
 12815  00FF33  20                 	db	32
 12816  00FF34  20                 	db	32
 12817  00FF35  20                 	db	32
 12818  00FF36  49                 	db	73	;'I'
 12819  00FF37  53                 	db	83	;'S'
 12820  00FF38  4E                 	db	78	;'N'
 12821  00FF39  53                 	db	83	;'S'
 12822  00FF3A  0A                 	db	10
 12823  00FF3B  0D                 	db	13
 12824  00FF3C  00                 	db	0
 12825  00FF3D                     STR_68:
 12826  00FF3D  20                 	db	32
 12827  00FF3E  20                 	db	32
 12828  00FF3F  20                 	db	32
 12829  00FF40  20                 	db	32
 12830  00FF41  41                 	db	65	;'A'
 12831  00FF42  56                 	db	86	;'V'
 12832  00FF43  53                 	db	83	;'S'
 12833  00FF44  53                 	db	83	;'S'
 12834  00FF45  0A                 	db	10
 12835  00FF46  0D                 	db	13
 12836  00FF47  00                 	db	0
 12837  00FF48                     STR_57:
 12838  00FF48  44                 	db	68	;'D'
 12839  00FF49  65                 	db	101	;'e'
 12840  00FF4A  76                 	db	118	;'v'
 12841  00FF4B  69                 	db	105	;'i'
 12842  00FF4C  63                 	db	99	;'c'
 12843  00FF4D  65                 	db	101	;'e'
 12844  00FF4E  20                 	db	32
 12845  00FF4F  49                 	db	73	;'I'
 12846  00FF50  44                 	db	68	;'D'
 12847  00FF51  3F                 	db	63	;'?'
 12848  00FF52  00                 	db	0
 12849  00FF53                     STR_141:
 12850  00FF53  4D                 	db	77	;'M'
 12851  00FF54  61                 	db	97	;'a'
 12852  00FF55  78                 	db	120	;'x'
 12853  00FF56  20                 	db	32
 12854  00FF57  50                 	db	80	;'P'
 12855  00FF58  6F                 	db	111	;'o'
 12856  00FF59  77                 	db	119	;'w'
 12857  00FF5A  65                 	db	101	;'e'
 12858  00FF5B  72                 	db	114	;'r'
 12859  00FF5C  3F                 	db	63	;'?'
 12860  00FF5D  00                 	db	0
 12861  00FF5E                     STR_170:
 12862  00FF5E  45                 	db	69	;'E'
 12863  00FF5F  61                 	db	97	;'a'
 12864  00FF60  73                 	db	115	;'s'
 12865  00FF61  74                 	db	116	;'t'
 12866  00FF62  65                 	db	101	;'e'
 12867  00FF63  72                 	db	114	;'r'
 12868  00FF64  20                 	db	32
 12869  00FF65  45                 	db	69	;'E'
 12870  00FF66  67                 	db	103	;'g'
 12871  00FF67  67                 	db	103	;'g'
 12872  00FF68  00                 	db	0
 12873  00FF69                     STR_178:
 12874  00FF69  55                 	db	85	;'U'
 12875  00FF6A  6E                 	db	110	;'n'
 12876  00FF6B  64                 	db	100	;'d'
 12877  00FF6C  65                 	db	101	;'e'
 12878  00FF6D  66                 	db	102	;'f'
 12879  00FF6E  69                 	db	105	;'i'
 12880  00FF6F  6E                 	db	110	;'n'
 12881  00FF70  65                 	db	101	;'e'
 12882  00FF71  64                 	db	100	;'d'
 12883  00FF72  00                 	db	0
 12884  00FF73                     STR_69:
 12885  00FF73  20                 	db	32
 12886  00FF74  20                 	db	32
 12887  00FF75  20                 	db	32
 12888  00FF76  20                 	db	32
 12889  00FF77  46                 	db	70	;'F'
 12890  00FF78  56                 	db	86	;'V'
 12891  00FF79  52                 	db	82	;'R'
 12892  00FF7A  0A                 	db	10
 12893  00FF7B  0D                 	db	13
 12894  00FF7C  00                 	db	0
 12895  00FF7D                     STR_61:
 12896  00FF7D  55                 	db	85	;'U'
 12897  00FF7E  73                 	db	115	;'s'
 12898  00FF7F  65                 	db	101	;'e'
 12899  00FF80  72                 	db	114	;'r'
 12900  00FF81  20                 	db	32
 12901  00FF82  49                 	db	73	;'I'
 12902  00FF83  44                 	db	68	;'D'
 12903  00FF84  73                 	db	115	;'s'
 12904  00FF85  3F                 	db	63	;'?'
 12905  00FF86  00                 	db	0
 12906  00FF87                     STR_3:
 12907  00FF87  45                 	db	69	;'E'
 12908  00FF88  4C                 	db	76	;'L'
 12909  00FF89  45                 	db	69	;'E'
 12910  00FF8A  4E                 	db	78	;'N'
 12911  00FF8B  20                 	db	32
 12912  00FF8C  33                 	db	51	;'3'
 12913  00FF8D  30                 	db	48	;'0'
 12914  00FF8E  33                 	db	51	;'3'
 12915  00FF8F  35                 	db	53	;'5'
 12916  00FF90  00                 	db	0
 12917  00FF91                     STR_161:
 12918  00FF91  48                 	db	72	;'H'
 12919  00FF92  65                 	db	101	;'e'
 12920  00FF93  6C                 	db	108	;'l'
 12921  00FF94  70                 	db	112	;'p'
 12922  00FF95  20                 	db	32
 12923  00FF96  41                 	db	65	;'A'
 12924  00FF97  6C                 	db	108	;'l'
 12925  00FF98  6C                 	db	108	;'l'
 12926  00FF99  00                 	db	0
 12927  00FF9A                     STR_191:
 12928  00FF9A  28                 	db	40
 12929  00FF9B  6E                 	db	110	;'n'
 12930  00FF9C  75                 	db	117	;'u'
 12931  00FF9D  6C                 	db	108	;'l'
 12932  00FF9E  6C                 	db	108	;'l'
 12933  00FF9F  29                 	db	41
 12934  00FFA0  00                 	db	0
 12935  00FFA1                     STR_53:
 12936  00FFA1  2A                 	db	42
 12937  00FFA2  49                 	db	73	;'I'
 12938  00FFA3  44                 	db	68	;'D'
 12939  00FFA4  4E                 	db	78	;'N'
 12940  00FFA5  3F                 	db	63	;'?'
 12941  00FFA6  00                 	db	0
 12942  00FFA7                     STR_48:
 12943  00FFA7  43                 	db	67	;'C'
 12944  00FFA8  6C                 	db	108	;'l'
 12945  00FFA9  65                 	db	101	;'e'
 12946  00FFAA  61                 	db	97	;'a'
 12947  00FFAB  72                 	db	114	;'r'
 12948  00FFAC  00                 	db	0
 12949  00FFAD                     STR_163:
 12950  00FFAD  48                 	db	72	;'H'
 12951  00FFAE  65                 	db	101	;'e'
 12952  00FFAF  6C                 	db	108	;'l'
 12953  00FFB0  70                 	db	112	;'p'
 12954  00FFB1  00                 	db	0
 12955  00FFB2                     STR_6:
 12956  00FFB2  1B                 	db	27
 12957  00FFB3  5B                 	db	91	;'['
 12958  00FFB4  32                 	db	50	;'2'
 12959  00FFB5  4A                 	db	74	;'J'
 12960  00FFB6  00                 	db	0
 12961  00FFB7                     STR_54:
 12962  00FFB7  49                 	db	73	;'I'
 12963  00FFB8  44                 	db	68	;'D'
 12964  00FFB9  4E                 	db	78	;'N'
 12965  00FFBA  00                 	db	0
 12966  00FFBB                     STR_7:
 12967  00FFBB  1B                 	db	27
 12968  00FFBC  5B                 	db	91	;'['
 12969  00FFBD  48                 	db	72	;'H'
 12970  00FFBE  00                 	db	0
 12971  00FFBF  1B                 	db	27
 12972  00FFC0  5B                 	db	91	;'['
 12973  00FFC1  73                 	db	115	;'s'
 12974  00FFC2  00                 	db	0
 12975  00FFC3  1B                 	db	27
 12976  00FFC4  5B                 	db	91	;'['
 12977  00FFC5  75                 	db	117	;'u'
 12978  00FFC6  00                 	db	0
 12979  00FFC7                     STR_1:
 12980  00FFC7  1B                 	db	27
 12981  00FFC8  5B                 	db	91	;'['
 12982  00FFC9  4B                 	db	75	;'K'
 12983  00FFCA  00                 	db	0
 12984  00FFCB                     STR_24:
 12985  00FFCB  33                 	db	51	;'3'
 12986  00FFCC  30                 	db	48	;'0'
 12987  00FFCD  00                 	db	0
 12988  00FFCE                     STR_25:
 12989  00FFCE  33                 	db	51	;'3'
 12990  00FFCF  31                 	db	49	;'1'
 12991  00FFD0  00                 	db	0
 12992  00FFD1                     STR_35:
 12993  00FFD1  34                 	db	52	;'4'
 12994  00FFD2  31                 	db	49	;'1'
 12995  00FFD3  00                 	db	0
 12996  00FFD4                     STR_26:
 12997  00FFD4  33                 	db	51	;'3'
 12998  00FFD5  32                 	db	50	;'2'
 12999  00FFD6  00                 	db	0
 13000  00FFD7                     STR_36:
 13001  00FFD7  34                 	db	52	;'4'
 13002  00FFD8  32                 	db	50	;'2'
 13003  00FFD9  00                 	db	0
 13004  00FFDA                     STR_27:
 13005  00FFDA  33                 	db	51	;'3'
 13006  00FFDB  33                 	db	51	;'3'
 13007  00FFDC  00                 	db	0
 13008  00FFDD                     STR_37:
 13009  00FFDD  34                 	db	52	;'4'
 13010  00FFDE  33                 	db	51	;'3'
 13011  00FFDF  00                 	db	0
 13012  00FFE0                     STR_28:
 13013  00FFE0  33                 	db	51	;'3'
 13014  00FFE1  34                 	db	52	;'4'
 13015  00FFE2  00                 	db	0
 13016  00FFE3                     STR_38:
 13017  00FFE3  34                 	db	52	;'4'
 13018  00FFE4  34                 	db	52	;'4'
 13019  00FFE5  00                 	db	0
 13020  00FFE6                     STR_39:
 13021  00FFE6  34                 	db	52	;'4'
 13022  00FFE7  35                 	db	53	;'5'
 13023  00FFE8  00                 	db	0
 13024  00FFE9                     STR_30:
 13025  00FFE9  33                 	db	51	;'3'
 13026  00FFEA  36                 	db	54	;'6'
 13027  00FFEB  00                 	db	0
 13028  00FFEC                     STR_40:
 13029  00FFEC  34                 	db	52	;'4'
 13030  00FFED  36                 	db	54	;'6'
 13031  00FFEE  00                 	db	0
 13032  00FFEF                     STR_31:
 13033  00FFEF  33                 	db	51	;'3'
 13034  00FFF0  37                 	db	55	;'7'
 13035  00FFF1  00                 	db	0
 13036  00FFF2                     STR_41:
 13037  00FFF2  34                 	db	52	;'4'
 13038  00FFF3  37                 	db	55	;'7'
 13039  00FFF4  00                 	db	0
 13040  00FFF5                     STR_15:
 13041  00FFF5  1B                 	db	27
 13042  00FFF6  5B                 	db	91	;'['
 13043  00FFF7  00                 	db	0
 13044  00FFF8                     STR_21:
 13045  00FFF8  38                 	db	56	;'8'
 13046  00FFF9  00                 	db	0
 13047  00FFFA                     STR_23:
 13048  00FFFA  3B                 	db	59	;';'
 13049  00FFFB  00                 	db	0
 13050  00FFFC                     STR_43:
 13051  00FFFC  6D                 	db	109	;'m'
 13052  00FFFD  00                 	db	0
 13053  0000                     
 13054                           ; #config settings
 13055  00FFFE  00                 	db	0	; dummy byte at the end
 13056  0000                     
 13057                           	psect	nvBANK2
 13058  0002F5                     __pnvBANK2:
 13059                           	opt stack 0
 13060  0002F5                     _reset_cause:
 13061                           	opt stack 0
 13062  0002F5                     	ds	1
 13063  0000                     _INT0PPS	set	3568
 13064  0000                     _HLVDCON0bits	set	3778
 13065  0000                     _HLVDCON0	set	3778
 13066  0000                     _HLVDCON1	set	3779
 13067  0000                     _PIR8bits	set	3643
 13068  0000                     _FVRCONbits	set	3780
 13069  0000                     _FVRCON	set	3780
 13070  0000                     _RC2REG	set	3825
 13071  0000                     _RC2STAbits	set	3829
 13072  0000                     _TX2REG	set	3826
 13073  0000                     _TX2STAbits	set	3830
 13074  0000                     _SP2BRGH	set	3828
 13075  0000                     _SP2BRGL	set	3827
 13076  0000                     _TX2STA	set	3830
 13077  0000                     _RC2STA	set	3829
 13078  0000                     _BAUD2CON	set	3831
 13079  0000                     _PIR1bits	set	3636
 13080  0000                     _PIE1bits	set	3626
 13081  0000                     _PIR0bits	set	3635
 13082  0000                     _PIE0bits	set	3625
 13083  0000                     _PIR2bits	set	3637
 13084  0000                     _PIE2bits	set	3627
 13085  0000                     _PIR5bits	set	3640
 13086  0000                     _PIE5bits	set	3630
 13087  0000                     _PIR3bits	set	3638
 13088  0000                     _PIE3bits	set	3628
 13089  0000                     _IPR1bits	set	3616
 13090  0000                     _IPR0bits	set	3615
 13091  0000                     _IPR2bits	set	3617
 13092  0000                     _IPR5bits	set	3620
 13093  0000                     _IPR3bits	set	3618
 13094  0000                     _SSP1DATPPS	set	3610
 13095  0000                     _RC7PPS	set	3689
 13096  0000                     _RX2PPS	set	3601
 13097  0000                     _RC6PPS	set	3688
 13098  0000                     _SSP1CLKPPS	set	3609
 13099  0000                     _RG7PPS	set	3721
 13100  0000                     _SLRCONH	set	3774
 13101  0000                     _SLRCONG	set	3769
 13102  0000                     _SLRCONF	set	3761
 13103  0000                     _SLRCONE	set	3756
 13104  0000                     _SLRCOND	set	3748
 13105  0000                     _SLRCONC	set	3743
 13106  0000                     _SLRCONB	set	3735
 13107  0000                     _SLRCONA	set	3727
 13108  0000                     _ODCOND	set	3749
 13109  0000                     _ODCONC	set	3744
 13110  0000                     _ODCONH	set	3775
 13111  0000                     _ODCONB	set	3736
 13112  0000                     _ODCONG	set	3770
 13113  0000                     _ODCONA	set	3728
 13114  0000                     _ODCONF	set	3762
 13115  0000                     _ODCONE	set	3757
 13116  0000                     _WPUH	set	3776
 13117  0000                     _WPUC	set	3745
 13118  0000                     _WPUA	set	3729
 13119  0000                     _WPUG	set	3771
 13120  0000                     _WPUB	set	3737
 13121  0000                     _WPUE	set	3758
 13122  0000                     _WPUF	set	3763
 13123  0000                     _WPUD	set	3750
 13124  0000                     _ANSELA	set	3730
 13125  0000                     _ANSELF	set	3764
 13126  0000                     _ANSELG	set	3772
 13127  0000                     _ANSELE	set	3759
 13128  0000                     _ANSELB	set	3738
 13129  0000                     _ANSELD	set	3751
 13130  0000                     _PMD5	set	3665
 13131  0000                     _PMD4	set	3664
 13132  0000                     _PMD3	set	3663
 13133  0000                     _PMD2	set	3662
 13134  0000                     _PMD1	set	3661
 13135  0000                     _PMD0	set	3660
 13136  0000                     _OSCTUNE	set	3656
 13137  0000                     _OSCFRQ	set	3657
 13138  0000                     _OSCEN	set	3655
 13139  0000                     _OSCCON3	set	3653
 13140  0000                     _OSCCON1	set	3651
 13141  0000                     _SBOREN	set	29279
 13142  0000                     _PLLR	set	29232
 13143  0000                     _T7GCONbits	set	3889
 13144  0000                     _T7CONbits	set	3888
 13145  0000                     _T7CON	set	3888
 13146  0000                     _TMR7L	set	3886
 13147  0000                     _TMR7H	set	3887
 13148  0000                     _T7CLK	set	3891
 13149  0000                     _T7GATE	set	3890
 13150  0000                     _T7GCON	set	3889
 13151  0000                     _ADCON1bits	set	3929
 13152  0000                     _ADPRE	set	3934
 13153  0000                     _ADCON3bits	set	3931
 13154  0000                     _ADCON2bits	set	3930
 13155  0000                     _ADACQ	set	3932
 13156  0000                     _ADCLK	set	3927
 13157  0000                     _ADACT	set	3926
 13158  0000                     _ADREF	set	3928
 13159  0000                     _ADCON3	set	3931
 13160  0000                     _ADCON2	set	3930
 13161  0000                     _ADCON1	set	3929
 13162  0000                     _ADCAP	set	3933
 13163  0000                     _ADPCH	set	3935
 13164  0000                     _SSP1BUF	set	3985
 13165  0000                     _SSP1CON2bits	set	3990
 13166  0000                     _SSP1CON1bits	set	3989
 13167  0000                     _SSP1ADD	set	3986
 13168  0000                     _SSP1CON3	set	3991
 13169  0000                     _SSP1CON1	set	3989
 13170  0000                     _SSP1STAT	set	3988
 13171  0000                     _PCON0bits	set	4055
 13172  0000                     _LATGbits	set	3967
 13173  0000                     _LATFbits	set	3966
 13174  0000                     _PR4	set	4022
 13175  0000                     _TMR4	set	4021
 13176  0000                     _T4CONbits	set	4023
 13177  0000                     _T4RSTbits	set	4026
 13178  0000                     _T4HLTbits	set	4024
 13179  0000                     _T4CON	set	4023
 13180  0000                     _T4TMR	set	4021
 13181  0000                     _T4PR	set	4022
 13182  0000                     _T4RST	set	4026
 13183  0000                     _T4HLT	set	4024
 13184  0000                     _T4CLKCON	set	4025
 13185  0000                     _NVMDAT	set	3958
 13186  0000                     _NVMADRL	set	3956
 13187  0000                     _NVMADRH	set	3957
 13188  0000                     _NVMCON2	set	3960
 13189  0000                     _TABLAT	set	4085
 13190  0000                     _TBLPTRL	set	4086
 13191  0000                     _TBLPTRH	set	4087
 13192  0000                     _TBLPTRU	set	4088
 13193  0000                     _NVMCON1bits	set	3959
 13194  0000                     _T5GCONbits	set	4036
 13195  0000                     _T5CONbits	set	4035
 13196  0000                     _T5CON	set	4035
 13197  0000                     _TMR5L	set	4033
 13198  0000                     _TMR5H	set	4034
 13199  0000                     _T5CLK	set	4038
 13200  0000                     _T5GATE	set	4037
 13201  0000                     _T5GCON	set	4036
 13202  0000                     _ADERRL	set	3950
 13203  0000                     _ADERRH	set	3951
 13204  0000                     _ADPREVL	set	3937
 13205  0000                     _ADPREVH	set	3938
 13206  0000                     _ADFLTRL	set	3954
 13207  0000                     _ADFLTRH	set	3955
 13208  0000                     _ADSTATbits	set	3941
 13209  0000                     _ADACCL	set	3952
 13210  0000                     _ADACCH	set	3953
 13211  0000                     _ADCNT	set	3943
 13212  0000                     _ADRESL	set	3939
 13213  0000                     _ADRESH	set	3940
 13214  0000                     _ADCON0bits	set	3936
 13215  0000                     _ADCON0	set	3936
 13216  0000                     _ADSTAT	set	3941
 13217  0000                     _ADRPT	set	3942
 13218  0000                     _ADSTPTH	set	3945
 13219  0000                     _ADSTPTL	set	3944
 13220  0000                     _ADUTHH	set	3949
 13221  0000                     _ADUTHL	set	3948
 13222  0000                     _ADLTHH	set	3947
 13223  0000                     _ADLTHL	set	3946
 13224  0000                     _PR6	set	4016
 13225  0000                     _TMR6	set	4015
 13226  0000                     _T6CONbits	set	4017
 13227  0000                     _T6RSTbits	set	4020
 13228  0000                     _T6HLTbits	set	4018
 13229  0000                     _T6CON	set	4017
 13230  0000                     _T6TMR	set	4015
 13231  0000                     _T6PR	set	4016
 13232  0000                     _T6RST	set	4020
 13233  0000                     _T6HLT	set	4018
 13234  0000                     _T6CLKCON	set	4019
 13235  0000                     _INTCONbits	set	4082
 13236  0000                     _TRISD	set	3972
 13237  0000                     _TRISC	set	3971
 13238  0000                     _TRISH	set	3976
 13239  0000                     _TRISB	set	3970
 13240  0000                     _TRISG	set	3975
 13241  0000                     _TRISA	set	3969
 13242  0000                     _TRISF	set	3974
 13243  0000                     _TRISE	set	3973
 13244  0000                     _LATH	set	3968
 13245  0000                     _LATC	set	3963
 13246  0000                     _LATG	set	3967
 13247  0000                     _LATB	set	3962
 13248  0000                     _LATF	set	3966
 13249  0000                     _LATA	set	3961
 13250  0000                     _LATD	set	3964
 13251  0000                     _LATE	set	3965
 13252                           
 13253                           	psect	cinit
 13254  019932                     __pcinit:
 13255                           	opt stack 0
 13256  019932                     start_initialization:
 13257                           	opt stack 0
 13258  019932                     __initialization:
 13259                           	opt stack 0
 13260                           
 13261                           ; Initialize objects allocated to BANK2 (37 bytes)
 13262                           ; load TBLPTR registers with __pidataBANK2
 13263  019932  0EC8               	movlw	low __pidataBANK2
 13264  019934  6EF6               	movwf	tblptrl,c
 13265  019936  0EAE               	movlw	high __pidataBANK2
 13266  019938  6EF7               	movwf	tblptrh,c
 13267  01993A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 13268  01993C  6EF8               	movwf	tblptru,c
 13269  01993E  EE02  F0D0         	lfsr	0,__pdataBANK2
 13270  019942  EE10 F025          	lfsr	1,37
 13271  019946                     copy_data0:
 13272  019946  0009               	tblrd		*+
 13273  019948  CFF5 FFEE          	movff	tablat,postinc0
 13274  01994C  50E5               	movf	postdec1,w,c
 13275  01994E  50E1               	movf	fsr1l,w,c
 13276  019950  E1FA               	bnz	copy_data0
 13277                           
 13278                           ; Initialize objects allocated to BANK0 (6 bytes)
 13279                           ; load TBLPTR registers with __pidataBANK0
 13280  019952  0E64               	movlw	low __pidataBANK0
 13281  019954  6EF6               	movwf	tblptrl,c
 13282  019956  0EB2               	movlw	high __pidataBANK0
 13283  019958  6EF7               	movwf	tblptrh,c
 13284  01995A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 13285  01995C  6EF8               	movwf	tblptru,c
 13286  01995E  EE00  F0F0         	lfsr	0,__pdataBANK0
 13287  019962  EE10 F006          	lfsr	1,6
 13288  019966                     copy_data1:
 13289  019966  0009               	tblrd		*+
 13290  019968  CFF5 FFEE          	movff	tablat,postinc0
 13291  01996C  50E5               	movf	postdec1,w,c
 13292  01996E  50E1               	movf	fsr1l,w,c
 13293  019970  E1FA               	bnz	copy_data1
 13294                           
 13295                           ; Clear objects allocated to BANK4 (128 bytes)
 13296  019972  EE04  F000         	lfsr	0,__pbssBANK4
 13297  019976  0E80               	movlw	128
 13298  019978                     clear_0:
 13299  019978  6AEE               	clrf	postinc0,c
 13300  01997A  06E8               	decf	wreg,f,c
 13301  01997C  E1FD               	bnz	clear_0
 13302                           
 13303                           ; Clear objects allocated to BANK3 (192 bytes)
 13304  01997E  EE03  F000         	lfsr	0,__pbssBANK3
 13305  019982  0EC0               	movlw	192
 13306  019984                     clear_1:
 13307  019984  6AEE               	clrf	postinc0,c
 13308  019986  06E8               	decf	wreg,f,c
 13309  019988  E1FD               	bnz	clear_1
 13310                           
 13311                           ; Clear objects allocated to BANK2 (147 bytes)
 13312  01998A  EE02  F000         	lfsr	0,__pbssBANK2
 13313  01998E  0E93               	movlw	147
 13314  019990                     clear_2:
 13315  019990  6AEE               	clrf	postinc0,c
 13316  019992  06E8               	decf	wreg,f,c
 13317  019994  E1FD               	bnz	clear_2
 13318                           
 13319                           ; Clear objects allocated to BANK1 (35 bytes)
 13320  019996  EE01  F0C6         	lfsr	0,__pbssBANK1
 13321  01999A  0E23               	movlw	35
 13322  01999C                     clear_3:
 13323  01999C  6AEE               	clrf	postinc0,c
 13324  01999E  06E8               	decf	wreg,f,c
 13325  0199A0  E1FD               	bnz	clear_3
 13326                           
 13327                           ; Clear objects allocated to BITBANK0 (1 bytes)
 13328  0199A2  0100               	movlb	0
 13329  0199A4  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 13330                           
 13331                           ; Clear objects allocated to BANK0 (5 bytes)
 13332  0199A6  0100               	movlb	0
 13333  0199A8  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 13334  0199AA  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 13335  0199AC  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 13336  0199AE  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 13337  0199B0  6BF6               	clrf	__pbssBANK0& (0+255),b
 13338                           
 13339                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 13340  0199B2  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 13341  0199B4                     end_of_initialization:
 13342                           	opt stack 0
 13343  0199B4                     __end_of__initialization:
 13344                           	opt stack 0
 13345  0199B4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13346  0199B6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13347  0199B8  0100               	movlb	0
 13348  0199BA  EF2D  F0C5         	goto	_main	;jump to C main() function
 13349                           tblptru	equ	0xFF8
 13350                           tblptrh	equ	0xFF7
 13351                           tblptrl	equ	0xFF6
 13352                           tablat	equ	0xFF5
 13353                           postinc0	equ	0xFEE
 13354                           wreg	equ	0xFE8
 13355                           postdec1	equ	0xFE5
 13356                           fsr1l	equ	0xFE1
 13357                           
 13358                           	psect	bitbssCOMRAM
 13359  0002F0                     __pbitbssCOMRAM:
 13360                           	opt stack 0
 13361  0002F0                     _load_enable:
 13362                           	opt stack 0
 13363  0002F0                     	ds	1
 13364                           tblptru	equ	0xFF8
 13365                           tblptrh	equ	0xFF7
 13366                           tblptrl	equ	0xFF6
 13367                           tablat	equ	0xFF5
 13368                           postinc0	equ	0xFEE
 13369                           wreg	equ	0xFE8
 13370                           postdec1	equ	0xFE5
 13371                           fsr1l	equ	0xFE1
 13372                           
 13373                           	psect	bitbssBANK0
 13374  0007D8                     __pbitbssBANK0:
 13375                           	opt stack 0
 13376  0007D8                     _eusart2RxStringReady:
 13377                           	opt stack 0
 13378  0007D8                     	ds	1
 13379                           tblptru	equ	0xFF8
 13380                           tblptrh	equ	0xFF7
 13381                           tblptrl	equ	0xFF6
 13382                           tablat	equ	0xFF5
 13383                           postinc0	equ	0xFEE
 13384                           wreg	equ	0xFE8
 13385                           postdec1	equ	0xFE5
 13386                           fsr1l	equ	0xFE1
 13387                           
 13388                           	psect	bssBANK0
 13389  0000F6                     __pbssBANK0:
 13390                           	opt stack 0
 13391  0000F6                     _Total_Energy:
 13392                           	opt stack 0
 13393  0000F6                     	ds	4
 13394  0000FA                     _eusart2RxHead:
 13395                           	opt stack 0
 13396  0000FA                     	ds	1
 13397                           tblptru	equ	0xFF8
 13398                           tblptrh	equ	0xFF7
 13399                           tblptrl	equ	0xFF6
 13400                           tablat	equ	0xFF5
 13401                           postinc0	equ	0xFEE
 13402                           wreg	equ	0xFE8
 13403                           postdec1	equ	0xFE5
 13404                           fsr1l	equ	0xFE1
 13405                           
 13406                           	psect	dataBANK0
 13407  0000F0                     __pdataBANK0:
 13408                           	opt stack 0
 13409  0000F0                     _dimming_period:
 13410                           	opt stack 0
 13411  0000F0                     	ds	2
 13412  0000F2                     _TRIAC_Firing_Angle:
 13413                           	opt stack 0
 13414  0000F2                     	ds	4
 13415                           tblptru	equ	0xFF8
 13416                           tblptrh	equ	0xFF7
 13417                           tblptrl	equ	0xFF6
 13418                           tablat	equ	0xFF5
 13419                           postinc0	equ	0xFEE
 13420                           wreg	equ	0xFE8
 13421                           postdec1	equ	0xFE5
 13422                           fsr1l	equ	0xFE1
 13423                           
 13424                           	psect	bssBANK1
 13425  0001C6                     __pbssBANK1:
 13426                           	opt stack 0
 13427  0001C6                     _Avg_Power:
 13428                           	opt stack 0
 13429  0001C6                     	ds	4
 13430  0001CA                     _Irms:
 13431                           	opt stack 0
 13432  0001CA                     	ds	4
 13433  0001CE                     _Ipk:
 13434                           	opt stack 0
 13435  0001CE                     	ds	4
 13436  0001D2                     _Temp_ADC_Result:
 13437                           	opt stack 0
 13438  0001D2                     	ds	4
 13439  0001D6                     _POS12_ADC_Result:
 13440                           	opt stack 0
 13441  0001D6                     	ds	4
 13442  0001DA                     _POS3P3_ADC_Result:
 13443                           	opt stack 0
 13444  0001DA                     	ds	4
 13445  0001DE                     _eusart2RxTail:
 13446                           	opt stack 0
 13447  0001DE                     	ds	1
 13448  0001DF                     _eusart2TxBufferRemaining:
 13449                           	opt stack 0
 13450  0001DF                     	ds	1
 13451  0001E0                     _eusart2TxTail:
 13452                           	opt stack 0
 13453  0001E0                     	ds	1
 13454  0001E1                     _eusart2TxHead:
 13455                           	opt stack 0
 13456  0001E1                     	ds	1
 13457  0001E2                     _FVR_ADC_Result:
 13458                           	opt stack 0
 13459  0001E2                     	ds	4
 13460  0001E6                     I2C1_ISR@i2c_address:
 13461                           	opt stack 0
 13462  0001E6                     	ds	2
 13463  0001E8                     _OLED_I2C_Status:
 13464                           	opt stack 0
 13465  0001E8                     	ds	1
 13466                           tblptru	equ	0xFF8
 13467                           tblptrh	equ	0xFF7
 13468                           tblptrl	equ	0xFF6
 13469                           tablat	equ	0xFF5
 13470                           postinc0	equ	0xFEE
 13471                           wreg	equ	0xFE8
 13472                           postdec1	equ	0xFE5
 13473                           fsr1l	equ	0xFE1
 13474                           
 13475                           	psect	bssBANK2
 13476  000200                     __pbssBANK2:
 13477                           	opt stack 0
 13478  000200                     _error_handler:
 13479                           	opt stack 0
 13480  000200                     	ds	9
 13481  000209                     _i2c1_object:
 13482                           	opt stack 0
 13483  000209                     	ds	7
 13484  000210                     _max_FVR_ADC_Result:
 13485                           	opt stack 0
 13486  000210                     	ds	4
 13487  000214                     _max_Temp_ADC_Result:
 13488                           	opt stack 0
 13489  000214                     	ds	4
 13490  000218                     _max_POS12_ADC_Result:
 13491                           	opt stack 0
 13492  000218                     	ds	4
 13493  00021C                     _max_POS3P3_ADC_Result:
 13494                           	opt stack 0
 13495  00021C                     	ds	4
 13496  000220                     _max_Power:
 13497                           	opt stack 0
 13498  000220                     	ds	4
 13499  000224                     _max_Irms:
 13500                           	opt stack 0
 13501  000224                     	ds	4
 13502  000228                     _load_on_time:
 13503                           	opt stack 0
 13504  000228                     	ds	4
 13505  00022C                     _dev_on_time:
 13506                           	opt stack 0
 13507  00022C                     	ds	4
 13508  000230                     _Vrms:
 13509                           	opt stack 0
 13510  000230                     	ds	4
 13511  000234                     _Imeas:
 13512                           	opt stack 0
 13513  000234                     	ds	4
 13514  000238                     _Vpk:
 13515                           	opt stack 0
 13516  000238                     	ds	4
 13517  00023C                     _ADC_Result_Scaling:
 13518                           	opt stack 0
 13519  00023C                     	ds	4
 13520  000240                     _AVSS_ADC_Result:
 13521                           	opt stack 0
 13522  000240                     	ds	4
 13523  000244                     _TMR4_InterruptHandler:
 13524                           	opt stack 0
 13525  000244                     	ds	3
 13526  000247                     _INT0_InterruptHandler:
 13527                           	opt stack 0
 13528  000247                     	ds	3
 13529  00024A                     _TMR5_InterruptHandler:
 13530                           	opt stack 0
 13531  00024A                     	ds	3
 13532  00024D                     _TMR7_InterruptHandler:
 13533                           	opt stack 0
 13534  00024D                     	ds	3
 13535  000250                     _ADCC_ADTI_InterruptHandler:
 13536                           	opt stack 0
 13537  000250                     	ds	3
 13538  000253                     _TMR6_InterruptHandler:
 13539                           	opt stack 0
 13540  000253                     	ds	3
 13541  000256                     _EUSART2_RxDefaultInterruptHandler:
 13542                           	opt stack 0
 13543  000256                     	ds	3
 13544  000259                     _EUSART2_TxDefaultInterruptHandler:
 13545                           	opt stack 0
 13546  000259                     	ds	3
 13547  00025C                     _errno:
 13548                           	opt stack 0
 13549  00025C                     	ds	2
 13550  00025E                     I2C1_ISR@pi2c_buf_ptr:
 13551                           	opt stack 0
 13552  00025E                     	ds	2
 13553  000260                     _p_i2c1_current:
 13554                           	opt stack 0
 13555  000260                     	ds	2
 13556  000262                     _p_i2c1_trb_current:
 13557                           	opt stack 0
 13558  000262                     	ds	2
 13559  000264                     TMR4_ISR@CountCallBack:
 13560                           	opt stack 0
 13561  000264                     	ds	2
 13562  000266                     _timer5ReloadVal:
 13563                           	opt stack 0
 13564  000266                     	ds	2
 13565  000268                     _timer7ReloadVal:
 13566                           	opt stack 0
 13567  000268                     	ds	2
 13568  00026A                     I2C1_ISR@i2c_10bit_address_restart:
 13569                           	opt stack 0
 13570  00026A                     	ds	1
 13571  00026B                     I2C1_ISR@i2c_bytes_left:
 13572                           	opt stack 0
 13573  00026B                     	ds	1
 13574  00026C                     _i2c1_trb_count:
 13575                           	opt stack 0
 13576  00026C                     	ds	1
 13577  00026D                     _i2c1_state:
 13578                           	opt stack 0
 13579  00026D                     	ds	1
 13580  00026E                     _current_adc_channel:
 13581                           	opt stack 0
 13582  00026E                     	ds	1
 13583  00026F                     _background_color:
 13584                           	opt stack 0
 13585  00026F                     	ds	1
 13586  000270                     _foreground_color:
 13587                           	opt stack 0
 13588  000270                     	ds	1
 13589  000271                     _attribute:
 13590                           	opt stack 0
 13591  000271                     	ds	1
 13592  000272                     _eusart2RxCount:
 13593                           	opt stack 0
 13594  000272                     	ds	1
 13595  000273                     ftoa@buf:
 13596                           	opt stack 0
 13597  000273                     	ds	17
 13598  000284                     I2C1_MasterRead@trBlock:
 13599                           	opt stack 0
 13600  000284                     	ds	5
 13601  000289                     I2C1_MasterWrite@trBlock:
 13602                           	opt stack 0
 13603  000289                     	ds	5
 13604  00028E                     _i2c1_tr_queue:
 13605                           	opt stack 0
 13606  00028E                     	ds	5
 13607                           tblptru	equ	0xFF8
 13608                           tblptrh	equ	0xFF7
 13609                           tblptrl	equ	0xFF6
 13610                           tablat	equ	0xFF5
 13611                           postinc0	equ	0xFEE
 13612                           wreg	equ	0xFE8
 13613                           postdec1	equ	0xFE5
 13614                           fsr1l	equ	0xFE1
 13615                           
 13616                           	psect	dataBANK2
 13617  0002D0                     __pdataBANK2:
 13618                           	opt stack 0
 13619  0002D0                     getCauseOfResetString@strings:
 13620                           	opt stack 0
 13621  0002D0                     	ds	18
 13622  0002E2                     getDeviceIDString@F17550:
 13623                           	opt stack 0
 13624  0002E2                     	ds	6
 13625  0002E8                     _Irms_offset:
 13626                           	opt stack 0
 13627  0002E8                     	ds	4
 13628  0002EC                     _Vpk_const:
 13629                           	opt stack 0
 13630  0002EC                     	ds	4
 13631  0002F0                     _Temp_ADC_Offset:
 13632                           	opt stack 0
 13633  0002F0                     	ds	4
 13634  0002F4                     _next_channel:
 13635                           	opt stack 0
 13636  0002F4                     	ds	1
 13637                           tblptru	equ	0xFF8
 13638                           tblptrh	equ	0xFF7
 13639                           tblptrl	equ	0xFF6
 13640                           tablat	equ	0xFF5
 13641                           postinc0	equ	0xFEE
 13642                           wreg	equ	0xFE8
 13643                           postdec1	equ	0xFE5
 13644                           fsr1l	equ	0xFE1
 13645                           
 13646                           	psect	bssBANK3
 13647  000300                     __pbssBANK3:
 13648                           	opt stack 0
 13649  000300                     _eusart2RxBuffer:
 13650                           	opt stack 0
 13651  000300                     	ds	64
 13652  000340                     _OLED_RAM_Buffer:
 13653                           	opt stack 0
 13654  000340                     	ds	64
 13655  000380                     _line:
 13656                           	opt stack 0
 13657  000380                     	ds	64
 13658                           tblptru	equ	0xFF8
 13659                           tblptrh	equ	0xFF7
 13660                           tblptrl	equ	0xFF6
 13661                           tablat	equ	0xFF5
 13662                           postinc0	equ	0xFEE
 13663                           wreg	equ	0xFE8
 13664                           postdec1	equ	0xFE5
 13665                           fsr1l	equ	0xFE1
 13666                           
 13667                           	psect	bssBANK4
 13668  000400                     __pbssBANK4:
 13669                           	opt stack 0
 13670  000400                     _eusart2TxBuffer:
 13671                           	opt stack 0
 13672  000400                     	ds	128
 13673                           tblptru	equ	0xFF8
 13674                           tblptrh	equ	0xFF7
 13675                           tblptrl	equ	0xFF6
 13676                           tablat	equ	0xFF5
 13677                           postinc0	equ	0xFEE
 13678                           wreg	equ	0xFE8
 13679                           postdec1	equ	0xFE5
 13680                           fsr1l	equ	0xFE1
 13681                           
 13682                           	psect	cstackBANK2
 13683  000293                     __pcstackBANK2:
 13684                           	opt stack 0
 13685  000293                     terminal_textAttributes@foreground_color:
 13686                           	opt stack 0
 13687                           
 13688                           ; 1 bytes @ 0x0
 13689  000293                     	ds	1
 13690  000294                     terminal_textAttributes@output_buff:
 13691                           	opt stack 0
 13692                           
 13693                           ; 15 bytes @ 0x1
 13694  000294                     	ds	15
 13695  0002A3                     ringBufferLUT@arg_buff:
 13696                           	opt stack 0
 13697                           
 13698                           ; 3 bytes @ 0x10
 13699  0002A3                     	ds	3
 13700  0002A6                     ringBufferLUT@angle_degrees:
 13701                           	opt stack 0
 13702                           
 13703                           ; 4 bytes @ 0x13
 13704  0002A6                     	ds	4
 13705  0002AA                     ringBufferLUT@max_current_print:
 13706                           	opt stack 0
 13707                           
 13708                           ; 4 bytes @ 0x17
 13709  0002AA                     	ds	4
 13710  0002AE                     ringBufferLUT@max_Power_print:
 13711                           	opt stack 0
 13712                           
 13713                           ; 4 bytes @ 0x1B
 13714  0002AE                     	ds	4
 13715  0002B2                     ringBufferLUT@max_voltage_print:
 13716                           	opt stack 0
 13717                           
 13718                           ; 4 bytes @ 0x1F
 13719  0002B2                     	ds	4
 13720  0002B6                     ringBufferLUT@max_voltage_print_3299:
 13721                           	opt stack 0
 13722                           
 13723                           ; 4 bytes @ 0x23
 13724  0002B6                     	ds	4
 13725  0002BA                     ringBufferLUT@max_temp_print:
 13726                           	opt stack 0
 13727                           
 13728                           ; 4 bytes @ 0x27
 13729  0002BA                     	ds	4
 13730  0002BE                     ringBufferLUT@max_voltage_print_3305:
 13731                           	opt stack 0
 13732                           
 13733                           ; 4 bytes @ 0x2B
 13734  0002BE                     	ds	4
 13735  0002C2                     ringBufferLUT@index:
 13736                           	opt stack 0
 13737                           
 13738                           ; 2 bytes @ 0x2F
 13739  0002C2                     	ds	2
 13740  0002C4                     ringBufferLUT@percentage:
 13741                           	opt stack 0
 13742                           
 13743                           ; 2 bytes @ 0x31
 13744  0002C4                     	ds	2
 13745  0002C6                     ringBufferLUT@userID:
 13746                           	opt stack 0
 13747                           
 13748                           ; 2 bytes @ 0x33
 13749  0002C6                     	ds	2
 13750  0002C8                     terminal_ringBufferPull@charNumber:
 13751                           	opt stack 0
 13752                           
 13753                           ; 2 bytes @ 0x35
 13754  0002C8                     	ds	2
 13755  0002CA                     terminal_ringBufferPull@index_2956:
 13756                           	opt stack 0
 13757                           
 13758                           ; 2 bytes @ 0x37
 13759  0002CA                     	ds	2
 13760  0002CC                     terminal_ringBufferPull@index:
 13761                           	opt stack 0
 13762                           
 13763                           ; 2 bytes @ 0x39
 13764  0002CC                     	ds	2
 13765  0002CE                     ??_main:
 13766                           
 13767                           ; 1 bytes @ 0x3B
 13768  0002CE                     	ds	2
 13769                           tblptru	equ	0xFF8
 13770                           tblptrh	equ	0xFF7
 13771                           tblptrl	equ	0xFF6
 13772                           tablat	equ	0xFF5
 13773                           postinc0	equ	0xFEE
 13774                           wreg	equ	0xFE8
 13775                           postdec1	equ	0xFE5
 13776                           fsr1l	equ	0xFE1
 13777                           
 13778                           	psect	cstackBANK1
 13779  000100                     __pcstackBANK1:
 13780                           	opt stack 0
 13781  000100                     ??_heartbeatTimerCallback:
 13782  000100                     ADCC_StartConversion@channel:
 13783                           	opt stack 0
 13784  000100                     TMR7_WriteTimer@timerVal:
 13785                           	opt stack 0
 13786                           
 13787                           ; 2 bytes @ 0x0
 13788  000100                     	ds	1
 13789  000101                     
 13790                           ; 1 bytes @ 0x1
 13791  000101                     	ds	1
 13792  000102                     ??_INTERRUPT_InterruptManagerLow:
 13793  000102                     
 13794                           ; 1 bytes @ 0x2
 13795  000102                     	ds	21
 13796  000117                     ??_isdigit:
 13797  000117                     ?_strlen:
 13798                           	opt stack 0
 13799  000117                     ?_strcmp:
 13800                           	opt stack 0
 13801  000117                     ?_getCauseOfResetString:
 13802                           	opt stack 0
 13803  000117                     ?_strchr:
 13804                           	opt stack 0
 13805  000117                     ?___wmul:
 13806                           	opt stack 0
 13807  000117                     ?___awmod:
 13808                           	opt stack 0
 13809  000117                     ?__tdiv_to_l_:
 13810                           	opt stack 0
 13811  000117                     ?__div_to_l_:
 13812                           	opt stack 0
 13813  000117                     ?___lldiv:
 13814                           	opt stack 0
 13815  000117                     ?___xxtofl:
 13816                           	opt stack 0
 13817  000117                     EUSART2_Read@readValue:
 13818                           	opt stack 0
 13819  000117                     EUSART2_Write@txData:
 13820                           	opt stack 0
 13821  000117                     getCauseOfReset@return_reset_cause:
 13822                           	opt stack 0
 13823  000117                     DATAEE_WriteByte@bAdd:
 13824                           	opt stack 0
 13825  000117                     DATAEE_ReadByte@bAdd:
 13826                           	opt stack 0
 13827  000117                     I2C1_MasterTRBInsert@ptrb_list:
 13828                           	opt stack 0
 13829  000117                     I2C1_MasterWriteTRBBuild@ptrb:
 13830                           	opt stack 0
 13831  000117                     ___wmul@multiplier:
 13832                           	opt stack 0
 13833  000117                     ___awmod@dividend:
 13834                           	opt stack 0
 13835  000117                     memmove@d1:
 13836                           	opt stack 0
 13837  000117                     strcat@to:
 13838                           	opt stack 0
 13839  000117                     strcmp@s1:
 13840                           	opt stack 0
 13841  000117                     strcpy@to:
 13842                           	opt stack 0
 13843  000117                     strlen@s:
 13844                           	opt stack 0
 13845  000117                     strncpy@to:
 13846                           	opt stack 0
 13847  000117                     strchr@ptr:
 13848                           	opt stack 0
 13849  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 13850                           	opt stack 0
 13851  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 13852                           	opt stack 0
 13853  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 13854                           	opt stack 0
 13855  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 13856                           	opt stack 0
 13857  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 13858                           	opt stack 0
 13859  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 13860                           	opt stack 0
 13861  000117                     INT0_SetInterruptHandler@InterruptHandler:
 13862                           	opt stack 0
 13863  000117                     TMR4_SetInterruptHandler@InterruptHandler:
 13864                           	opt stack 0
 13865  000117                     __tdiv_to_l_@f1:
 13866                           	opt stack 0
 13867  000117                     FLASH_ReadByte@flashAddr:
 13868                           	opt stack 0
 13869  000117                     __div_to_l_@f1:
 13870                           	opt stack 0
 13871  000117                     ___flge@ff1:
 13872                           	opt stack 0
 13873  000117                     ___lldiv@dividend:
 13874                           	opt stack 0
 13875  000117                     ___xxtofl@val:
 13876                           	opt stack 0
 13877                           
 13878                           ; 4 bytes @ 0x17
 13879  000117                     	ds	1
 13880  000118                     putch@txData:
 13881                           	opt stack 0
 13882  000118                     _isdigit$4329:
 13883                           	opt stack 0
 13884                           
 13885                           ; 1 bytes @ 0x18
 13886  000118                     	ds	1
 13887  000119                     ??_strlen:
 13888  000119                     ?_readDoubleFromEEPROM:
 13889                           	opt stack 0
 13890  000119                     DATAEE_WriteByte@bData:
 13891                           	opt stack 0
 13892  000119                     getCauseOfResetString@r:
 13893                           	opt stack 0
 13894  000119                     isdigit@c:
 13895                           	opt stack 0
 13896  000119                     readDoubleFromEEPROM@starting_address:
 13897                           	opt stack 0
 13898  000119                     I2C1_MasterTRBInsert@pflag:
 13899                           	opt stack 0
 13900  000119                     I2C1_MasterWriteTRBBuild@pdata:
 13901                           	opt stack 0
 13902  000119                     ___wmul@multiplicand:
 13903                           	opt stack 0
 13904  000119                     ___awmod@divisor:
 13905                           	opt stack 0
 13906  000119                     memmove@s1:
 13907                           	opt stack 0
 13908  000119                     strcat@from:
 13909                           	opt stack 0
 13910  000119                     strcmp@s2:
 13911                           	opt stack 0
 13912  000119                     strcpy@from:
 13913                           	opt stack 0
 13914  000119                     strncpy@from:
 13915                           	opt stack 0
 13916  000119                     strchr@chr:
 13917                           	opt stack 0
 13918                           
 13919                           ; 2 bytes @ 0x19
 13920  000119                     	ds	1
 13921  00011A                     ??_TMR7_Initialize:
 13922  00011A                     ??_TMR5_Initialize:
 13923  00011A                     DATAEE_WriteByte@GIEBitValue:
 13924                           	opt stack 0
 13925  00011A                     __tdiv_to_l_@f2:
 13926                           	opt stack 0
 13927                           
 13928                           ; 3 bytes @ 0x1A
 13929  00011A                     	ds	1
 13930  00011B                     ??_strcmp:
 13931  00011B                     ??___xxtofl:
 13932  00011B                     ?_FLASH_ReadWord:
 13933                           	opt stack 0
 13934  00011B                     I2C1_MasterWriteTRBBuild@length:
 13935                           	opt stack 0
 13936  00011B                     ___awmod@counter:
 13937                           	opt stack 0
 13938  00011B                     ___wmul@product:
 13939                           	opt stack 0
 13940  00011B                     memmove@n:
 13941                           	opt stack 0
 13942  00011B                     strcat@cp:
 13943                           	opt stack 0
 13944  00011B                     strcpy@cp:
 13945                           	opt stack 0
 13946  00011B                     strlen@cp:
 13947                           	opt stack 0
 13948  00011B                     strncpy@size:
 13949                           	opt stack 0
 13950  00011B                     FLASH_ReadWord@flashAddr:
 13951                           	opt stack 0
 13952  00011B                     writeDoubleToEEPROM@input_double:
 13953                           	opt stack 0
 13954  00011B                     __div_to_l_@f2:
 13955                           	opt stack 0
 13956  00011B                     ___flge@ff2:
 13957                           	opt stack 0
 13958  00011B                     ___lldiv@divisor:
 13959                           	opt stack 0
 13960                           
 13961                           ; 4 bytes @ 0x1B
 13962  00011B                     	ds	1
 13963  00011C                     I2C1_MasterTRBInsert@count:
 13964                           	opt stack 0
 13965  00011C                     ___awmod@sign:
 13966                           	opt stack 0
 13967  00011C                     strcmp@r:
 13968                           	opt stack 0
 13969  00011C                     I2C1_MasterWriteTRBBuild@address:
 13970                           	opt stack 0
 13971                           
 13972                           ; 2 bytes @ 0x1C
 13973  00011C                     	ds	1
 13974  00011D                     ??_memmove:
 13975  00011D                     ??__tdiv_to_l_:
 13976  00011D                     ?_atoi:
 13977                           	opt stack 0
 13978  00011D                     ?_strncmp:
 13979                           	opt stack 0
 13980  00011D                     ?___awdiv:
 13981                           	opt stack 0
 13982  00011D                     atoi@s:
 13983                           	opt stack 0
 13984  00011D                     ___awdiv@dividend:
 13985                           	opt stack 0
 13986  00011D                     strncpy@cp:
 13987                           	opt stack 0
 13988  00011D                     strncmp@s1:
 13989                           	opt stack 0
 13990  00011D                     readDoubleFromEEPROM@output_data:
 13991                           	opt stack 0
 13992                           
 13993                           ; 4 bytes @ 0x1D
 13994  00011D                     	ds	1
 13995  00011E                     ??_I2C1_MasterWriteTRBBuild:
 13996                           
 13997                           ; 1 bytes @ 0x1E
 13998  00011E                     	ds	1
 13999  00011F                     ??_atoi:
 14000  00011F                     ??_FLASH_ReadWord:
 14001  00011F                     ??___flge:
 14002  00011F                     ___xxtofl@sign:
 14003                           	opt stack 0
 14004  00011F                     writeDoubleToEEPROM@starting_address:
 14005                           	opt stack 0
 14006  00011F                     ___awdiv@divisor:
 14007                           	opt stack 0
 14008  00011F                     memmove@d:
 14009                           	opt stack 0
 14010  00011F                     strncmp@s2:
 14011                           	opt stack 0
 14012  00011F                     __div_to_l_@quot:
 14013                           	opt stack 0
 14014  00011F                     ___lldiv@quotient:
 14015                           	opt stack 0
 14016                           
 14017                           ; 4 bytes @ 0x1F
 14018  00011F                     	ds	1
 14019  000120                     ___xxtofl@exp:
 14020                           	opt stack 0
 14021  000120                     I2C1_MasterWrite@pdata:
 14022                           	opt stack 0
 14023  000120                     __tdiv_to_l_@quot:
 14024                           	opt stack 0
 14025                           
 14026                           ; 4 bytes @ 0x20
 14027  000120                     	ds	1
 14028  000121                     atoi@sign:
 14029                           	opt stack 0
 14030  000121                     ___awdiv@counter:
 14031                           	opt stack 0
 14032  000121                     readDoubleFromEEPROM@byte_index:
 14033                           	opt stack 0
 14034  000121                     memmove@s:
 14035                           	opt stack 0
 14036  000121                     strncmp@len:
 14037                           	opt stack 0
 14038  000121                     writeDoubleToEEPROM@input_data:
 14039                           	opt stack 0
 14040  000121                     ___xxtofl@arg:
 14041                           	opt stack 0
 14042                           
 14043                           ; 4 bytes @ 0x21
 14044  000121                     	ds	1
 14045  000122                     ??_getMajorRevisionID:
 14046  000122                     ?_getDeviceID:
 14047                           	opt stack 0
 14048  000122                     ?_getUserID:
 14049                           	opt stack 0
 14050  000122                     I2C1_MasterWrite@length:
 14051                           	opt stack 0
 14052  000122                     ___awdiv@sign:
 14053                           	opt stack 0
 14054  000122                     getMinorRevisionID@REVID_RAW:
 14055                           	opt stack 0
 14056  000122                     atoi@a:
 14057                           	opt stack 0
 14058                           
 14059                           ; 2 bytes @ 0x22
 14060  000122                     	ds	1
 14061  000123                     ??_strncmp:
 14062  000123                     __div_to_l_@cntr:
 14063                           	opt stack 0
 14064  000123                     ___lldiv@counter:
 14065                           	opt stack 0
 14066  000123                     I2C1_MasterWrite@address:
 14067                           	opt stack 0
 14068  000123                     ___awdiv@quotient:
 14069                           	opt stack 0
 14070                           
 14071                           ; 2 bytes @ 0x23
 14072  000123                     	ds	1
 14073  000124                     ?_getDeviceIDString:
 14074                           	opt stack 0
 14075  000124                     ?___llmod:
 14076                           	opt stack 0
 14077  000124                     __div_to_l_@exp1:
 14078                           	opt stack 0
 14079  000124                     __tdiv_to_l_@cntr:
 14080                           	opt stack 0
 14081  000124                     getDeviceIDString@inputDevID:
 14082                           	opt stack 0
 14083  000124                     getUserID@initialOffset:
 14084                           	opt stack 0
 14085  000124                     ___llmod@dividend:
 14086                           	opt stack 0
 14087                           
 14088                           ; 4 bytes @ 0x24
 14089  000124                     	ds	1
 14090  000125                     ?___flneg:
 14091                           	opt stack 0
 14092  000125                     __tdiv_to_l_@exp1:
 14093                           	opt stack 0
 14094  000125                     getMajorRevisionID@REVID_RAW:
 14095                           	opt stack 0
 14096  000125                     writeDoubleToEEPROM@byte_index:
 14097                           	opt stack 0
 14098  000125                     I2C1_MasterWrite@pflag:
 14099                           	opt stack 0
 14100  000125                     ___flneg@f1:
 14101                           	opt stack 0
 14102                           
 14103                           ; 4 bytes @ 0x25
 14104  000125                     	ds	1
 14105  000126                     ??_getDeviceIDString:
 14106  000126                     ?_strstr:
 14107                           	opt stack 0
 14108  000126                     strstr@s1:
 14109                           	opt stack 0
 14110                           
 14111                           ; 2 bytes @ 0x26
 14112  000126                     	ds	1
 14113  000127                     ??_OLED_PutChar:
 14114  000127                     OLED_Command@temp:
 14115                           	opt stack 0
 14116                           
 14117                           ; 1 bytes @ 0x27
 14118  000127                     	ds	1
 14119  000128                     getUserID@inputUserID:
 14120                           	opt stack 0
 14121  000128                     OLED_Command@length:
 14122                           	opt stack 0
 14123  000128                     strstr@s2:
 14124                           	opt stack 0
 14125  000128                     ___llmod@divisor:
 14126                           	opt stack 0
 14127  000128                     getDeviceIDString@strings:
 14128                           	opt stack 0
 14129                           
 14130                           ; 6 bytes @ 0x28
 14131  000128                     	ds	1
 14132  000129                     ?___fladd:
 14133                           	opt stack 0
 14134  000129                     getUserID@IDOffset:
 14135                           	opt stack 0
 14136  000129                     OLED_Command@data_array:
 14137                           	opt stack 0
 14138  000129                     ___fladd@b:
 14139                           	opt stack 0
 14140                           
 14141                           ; 4 bytes @ 0x29
 14142  000129                     	ds	1
 14143  00012A                     
 14144                           ; 1 bytes @ 0x2A
 14145  00012A                     	ds	1
 14146  00012B                     OLED_YX@Column:
 14147                           	opt stack 0
 14148  00012B                     OLED_PutChar@data_array:
 14149                           	opt stack 0
 14150                           
 14151                           ; 9 bytes @ 0x2B
 14152  00012B                     	ds	1
 14153  00012C                     ??_OLED_YX:
 14154  00012C                     ___llmod@counter:
 14155                           	opt stack 0
 14156                           
 14157                           ; 1 bytes @ 0x2C
 14158  00012C                     	ds	1
 14159  00012D                     OLED_YX@Row:
 14160                           	opt stack 0
 14161  00012D                     ___fladd@a:
 14162                           	opt stack 0
 14163                           
 14164                           ; 4 bytes @ 0x2D
 14165  00012D                     	ds	4
 14166  000131                     ??___fladd:
 14167                           
 14168                           ; 1 bytes @ 0x31
 14169  000131                     	ds	3
 14170  000134                     OLED_PutChar@input_base:
 14171                           	opt stack 0
 14172                           
 14173                           ; 2 bytes @ 0x34
 14174  000134                     	ds	2
 14175  000136                     OLED_PutChar@length:
 14176                           	opt stack 0
 14177                           
 14178                           ; 1 bytes @ 0x36
 14179  000136                     	ds	1
 14180  000137                     OLED_PutChar@ch:
 14181                           	opt stack 0
 14182                           
 14183                           ; 1 bytes @ 0x37
 14184  000137                     	ds	1
 14185  000138                     OLED_Clear@row:
 14186                           	opt stack 0
 14187  000138                     OLED_WriteString@s:
 14188                           	opt stack 0
 14189                           
 14190                           ; 2 bytes @ 0x38
 14191  000138                     	ds	1
 14192  000139                     ___fladd@signs:
 14193                           	opt stack 0
 14194                           
 14195                           ; 1 bytes @ 0x39
 14196  000139                     	ds	1
 14197  00013A                     ___fladd@aexp:
 14198                           	opt stack 0
 14199  00013A                     OLED_Clear@col:
 14200                           	opt stack 0
 14201                           
 14202                           ; 2 bytes @ 0x3A
 14203  00013A                     	ds	1
 14204  00013B                     ___fladd@bexp:
 14205                           	opt stack 0
 14206                           
 14207                           ; 1 bytes @ 0x3B
 14208  00013B                     	ds	1
 14209  00013C                     ___fladd@grs:
 14210                           	opt stack 0
 14211                           
 14212                           ; 1 bytes @ 0x3C
 14213  00013C                     	ds	1
 14214  00013D                     ?___fldiv:
 14215                           	opt stack 0
 14216  00013D                     ?___flsub:
 14217                           	opt stack 0
 14218  00013D                     ___flsub@b:
 14219                           	opt stack 0
 14220  00013D                     ___fldiv@b:
 14221                           	opt stack 0
 14222                           
 14223                           ; 4 bytes @ 0x3D
 14224  00013D                     	ds	4
 14225  000141                     ___flsub@a:
 14226                           	opt stack 0
 14227  000141                     ___fldiv@a:
 14228                           	opt stack 0
 14229                           
 14230                           ; 4 bytes @ 0x41
 14231  000141                     	ds	4
 14232  000145                     ??___fldiv:
 14233  000145                     
 14234                           ; 1 bytes @ 0x45
 14235  000145                     	ds	4
 14236  000149                     ___fldiv@sign:
 14237                           	opt stack 0
 14238                           
 14239                           ; 1 bytes @ 0x49
 14240  000149                     	ds	1
 14241  00014A                     ___fldiv@rem:
 14242                           	opt stack 0
 14243                           
 14244                           ; 4 bytes @ 0x4A
 14245  00014A                     	ds	4
 14246  00014E                     ___fldiv@new_exp:
 14247                           	opt stack 0
 14248                           
 14249                           ; 2 bytes @ 0x4E
 14250  00014E                     	ds	2
 14251  000150                     ___fldiv@grs:
 14252                           	opt stack 0
 14253                           
 14254                           ; 4 bytes @ 0x50
 14255  000150                     	ds	4
 14256  000154                     ___fldiv@bexp:
 14257                           	opt stack 0
 14258                           
 14259                           ; 1 bytes @ 0x54
 14260  000154                     	ds	1
 14261  000155                     ___fldiv@aexp:
 14262                           	opt stack 0
 14263                           
 14264                           ; 1 bytes @ 0x55
 14265  000155                     	ds	1
 14266  000156                     ?___flmul:
 14267                           	opt stack 0
 14268  000156                     ___flmul@b:
 14269                           	opt stack 0
 14270                           
 14271                           ; 4 bytes @ 0x56
 14272  000156                     	ds	4
 14273  00015A                     ___flmul@a:
 14274                           	opt stack 0
 14275                           
 14276                           ; 4 bytes @ 0x5A
 14277  00015A                     	ds	4
 14278  00015E                     ??___flmul:
 14279                           
 14280                           ; 1 bytes @ 0x5E
 14281  00015E                     	ds	4
 14282  000162                     ___flmul@sign:
 14283                           	opt stack 0
 14284                           
 14285                           ; 1 bytes @ 0x62
 14286  000162                     	ds	1
 14287  000163                     ___flmul@aexp:
 14288                           	opt stack 0
 14289                           
 14290                           ; 1 bytes @ 0x63
 14291  000163                     	ds	1
 14292  000164                     ___flmul@grs:
 14293                           	opt stack 0
 14294                           
 14295                           ; 4 bytes @ 0x64
 14296  000164                     	ds	4
 14297  000168                     ___flmul@bexp:
 14298                           	opt stack 0
 14299                           
 14300                           ; 1 bytes @ 0x68
 14301  000168                     	ds	1
 14302  000169                     ___flmul@prod:
 14303                           	opt stack 0
 14304                           
 14305                           ; 4 bytes @ 0x69
 14306  000169                     	ds	4
 14307  00016D                     ___flmul@temp:
 14308                           	opt stack 0
 14309                           
 14310                           ; 2 bytes @ 0x6D
 14311  00016D                     	ds	2
 14312  00016F                     ?_fround:
 14313                           	opt stack 0
 14314  00016F                     ?_scale:
 14315                           	opt stack 0
 14316                           
 14317                           ; 4 bytes @ 0x6F
 14318  00016F                     	ds	4
 14319  000173                     _fround$5188:
 14320                           	opt stack 0
 14321  000173                     _scale$5189:
 14322                           	opt stack 0
 14323                           
 14324                           ; 4 bytes @ 0x73
 14325  000173                     	ds	4
 14326  000177                     scale@scl:
 14327                           	opt stack 0
 14328  000177                     _fround$5187:
 14329                           	opt stack 0
 14330                           
 14331                           ; 4 bytes @ 0x77
 14332  000177                     	ds	1
 14333  000178                     ?___fltol:
 14334                           	opt stack 0
 14335  000178                     ___fltol@f1:
 14336                           	opt stack 0
 14337                           
 14338                           ; 4 bytes @ 0x78
 14339  000178                     	ds	3
 14340  00017B                     fround@prec:
 14341                           	opt stack 0
 14342                           
 14343                           ; 1 bytes @ 0x7B
 14344  00017B                     	ds	1
 14345  00017C                     ??___fltol:
 14346                           
 14347                           ; 1 bytes @ 0x7C
 14348  00017C                     	ds	4
 14349  000180                     ___fltol@sign1:
 14350                           	opt stack 0
 14351                           
 14352                           ; 1 bytes @ 0x80
 14353  000180                     	ds	1
 14354  000181                     ___fltol@exp1:
 14355                           	opt stack 0
 14356                           
 14357                           ; 1 bytes @ 0x81
 14358  000181                     	ds	1
 14359  000182                     ?__doprnt:
 14360                           	opt stack 0
 14361  000182                     __doprnt@pb:
 14362                           	opt stack 0
 14363                           
 14364                           ; 2 bytes @ 0x82
 14365  000182                     	ds	2
 14366  000184                     __doprnt@f:
 14367                           	opt stack 0
 14368                           
 14369                           ; 2 bytes @ 0x84
 14370  000184                     	ds	2
 14371  000186                     __doprnt@ap:
 14372                           	opt stack 0
 14373                           
 14374                           ; 2 bytes @ 0x86
 14375  000186                     	ds	2
 14376  000188                     ??__doprnt:
 14377                           
 14378                           ; 1 bytes @ 0x88
 14379  000188                     	ds	6
 14380  00018E                     __doprnt$5190:
 14381                           	opt stack 0
 14382                           
 14383                           ; 4 bytes @ 0x8E
 14384  00018E                     	ds	4
 14385  000192                     __doprnt@idx:
 14386                           	opt stack 0
 14387                           
 14388                           ; 1 bytes @ 0x92
 14389  000192                     	ds	1
 14390  000193                     __doprnt@cp:
 14391                           	opt stack 0
 14392                           
 14393                           ; 2 bytes @ 0x93
 14394  000193                     	ds	2
 14395  000195                     __doprnt@len:
 14396                           	opt stack 0
 14397                           
 14398                           ; 2 bytes @ 0x95
 14399  000195                     	ds	2
 14400  000197                     __doprnt@exp:
 14401                           	opt stack 0
 14402                           
 14403                           ; 2 bytes @ 0x97
 14404  000197                     	ds	2
 14405  000199                     __doprnt@tmpval:
 14406                           	opt stack 0
 14407                           
 14408                           ; 4 bytes @ 0x99
 14409  000199                     	ds	4
 14410  00019D                     __doprnt@fval:
 14411                           	opt stack 0
 14412                           
 14413                           ; 4 bytes @ 0x9D
 14414  00019D                     	ds	4
 14415  0001A1                     __doprnt@val:
 14416                           	opt stack 0
 14417                           
 14418                           ; 4 bytes @ 0xA1
 14419  0001A1                     	ds	4
 14420  0001A5                     __doprnt@width:
 14421                           	opt stack 0
 14422                           
 14423                           ; 2 bytes @ 0xA5
 14424  0001A5                     	ds	2
 14425  0001A7                     __doprnt@flag:
 14426                           	opt stack 0
 14427                           
 14428                           ; 2 bytes @ 0xA7
 14429  0001A7                     	ds	2
 14430  0001A9                     __doprnt@prec:
 14431                           	opt stack 0
 14432                           
 14433                           ; 2 bytes @ 0xA9
 14434  0001A9                     	ds	2
 14435  0001AB                     __doprnt@c:
 14436                           	opt stack 0
 14437                           
 14438                           ; 1 bytes @ 0xAB
 14439  0001AB                     	ds	1
 14440  0001AC                     ?_printf:
 14441                           	opt stack 0
 14442  0001AC                     printf@f:
 14443                           	opt stack 0
 14444                           
 14445                           ; 2 bytes @ 0xAC
 14446  0001AC                     	ds	10
 14447  0001B6                     printf@ap:
 14448                           	opt stack 0
 14449                           
 14450                           ; 2 bytes @ 0xB6
 14451  0001B6                     	ds	2
 14452  0001B8                     printf@pb:
 14453                           	opt stack 0
 14454                           
 14455                           ; 5 bytes @ 0xB8
 14456  0001B8                     	ds	5
 14457  0001BD                     terminal_textAttributes@background_color:
 14458                           	opt stack 0
 14459                           
 14460                           ; 1 bytes @ 0xBD
 14461  0001BD                     	ds	1
 14462  0001BE                     terminal_textAttributes@input_attribute:
 14463                           	opt stack 0
 14464                           
 14465                           ; 1 bytes @ 0xBE
 14466  0001BE                     	ds	1
 14467  0001BF                     ringBufferLUT@line:
 14468                           	opt stack 0
 14469                           
 14470                           ; 2 bytes @ 0xBF
 14471  0001BF                     	ds	2
 14472  0001C1                     ??_ringBufferLUT:
 14473                           
 14474                           ; 1 bytes @ 0xC1
 14475  0001C1                     	ds	2
 14476  0001C3                     ??_terminal_ringBufferPull:
 14477                           
 14478                           ; 1 bytes @ 0xC3
 14479  0001C3                     	ds	3
 14480                           tblptru	equ	0xFF8
 14481                           tblptrh	equ	0xFF7
 14482                           tblptrl	equ	0xFF6
 14483                           tablat	equ	0xFF5
 14484                           postinc0	equ	0xFEE
 14485                           wreg	equ	0xFE8
 14486                           postdec1	equ	0xFE5
 14487                           fsr1l	equ	0xFE1
 14488                           
 14489                           	psect	cstackBANK0
 14490  000060                     __pcstackBANK0:
 14491                           	opt stack 0
 14492  000060                     ??i2___fladd:
 14493                           
 14494                           ; 1 bytes @ 0x0
 14495  000060                     	ds	8
 14496  000068                     i2___fladd@signs:
 14497                           	opt stack 0
 14498                           
 14499                           ; 1 bytes @ 0x8
 14500  000068                     	ds	1
 14501  000069                     i2___fladd@aexp:
 14502                           	opt stack 0
 14503                           
 14504                           ; 1 bytes @ 0x9
 14505  000069                     	ds	1
 14506  00006A                     i2___fladd@bexp:
 14507                           	opt stack 0
 14508                           
 14509                           ; 1 bytes @ 0xA
 14510  00006A                     	ds	1
 14511  00006B                     i2___fladd@grs:
 14512                           	opt stack 0
 14513                           
 14514                           ; 1 bytes @ 0xB
 14515  00006B                     	ds	1
 14516  00006C                     ?_sqrt:
 14517                           	opt stack 0
 14518  00006C                     ?_eval_poly:
 14519                           	opt stack 0
 14520  00006C                     ?i2___fltol:
 14521                           	opt stack 0
 14522  00006C                     eval_poly@x:
 14523                           	opt stack 0
 14524  00006C                     sqrt@a:
 14525                           	opt stack 0
 14526  00006C                     i2___fltol@f1:
 14527                           	opt stack 0
 14528                           
 14529                           ; 4 bytes @ 0xC
 14530  00006C                     	ds	4
 14531  000070                     ??_sqrt:
 14532  000070                     ??i2___fltol:
 14533  000070                     eval_poly@d:
 14534                           	opt stack 0
 14535                           
 14536                           ; 2 bytes @ 0x10
 14537  000070                     	ds	2
 14538  000072                     eval_poly@n:
 14539                           	opt stack 0
 14540                           
 14541                           ; 2 bytes @ 0x12
 14542  000072                     	ds	2
 14543  000074                     ??_eval_poly:
 14544  000074                     sqrt@sign:
 14545                           	opt stack 0
 14546  000074                     i2___fltol@sign1:
 14547                           	opt stack 0
 14548                           
 14549                           ; 1 bytes @ 0x14
 14550  000074                     	ds	1
 14551  000075                     sqrt@i:
 14552                           	opt stack 0
 14553  000075                     i2___fltol@exp1:
 14554                           	opt stack 0
 14555                           
 14556                           ; 1 bytes @ 0x15
 14557  000075                     	ds	1
 14558  000076                     ?_abs:
 14559                           	opt stack 0
 14560  000076                     ?_floor:
 14561                           	opt stack 0
 14562  000076                     abs@a:
 14563                           	opt stack 0
 14564  000076                     sqrt@tfrac:
 14565                           	opt stack 0
 14566  000076                     floor@x:
 14567                           	opt stack 0
 14568                           
 14569                           ; 4 bytes @ 0x16
 14570  000076                     	ds	2
 14571  000078                     ??_abs:
 14572  000078                     eval_poly@res:
 14573                           	opt stack 0
 14574                           
 14575                           ; 4 bytes @ 0x18
 14576  000078                     	ds	2
 14577  00007A                     sqrt@p:
 14578                           	opt stack 0
 14579  00007A                     floor@i:
 14580                           	opt stack 0
 14581                           
 14582                           ; 4 bytes @ 0x1A
 14583  00007A                     	ds	1
 14584  00007B                     sqrt@grs:
 14585                           	opt stack 0
 14586                           
 14587                           ; 4 bytes @ 0x1B
 14588  00007B                     	ds	1
 14589  00007C                     ?_atan:
 14590                           	opt stack 0
 14591  00007C                     atan@f:
 14592                           	opt stack 0
 14593                           
 14594                           ; 4 bytes @ 0x1C
 14595  00007C                     	ds	2
 14596  00007E                     floor@expon:
 14597                           	opt stack 0
 14598                           
 14599                           ; 2 bytes @ 0x1E
 14600  00007E                     	ds	1
 14601  00007F                     sqrt@exp:
 14602                           	opt stack 0
 14603                           
 14604                           ; 2 bytes @ 0x1F
 14605  00007F                     	ds	1
 14606  000080                     ?i2___flsub:
 14607                           	opt stack 0
 14608  000080                     atan@y:
 14609                           	opt stack 0
 14610  000080                     i2___flsub@b:
 14611                           	opt stack 0
 14612                           
 14613                           ; 4 bytes @ 0x20
 14614  000080                     	ds	1
 14615  000081                     sqrt@root:
 14616                           	opt stack 0
 14617                           
 14618                           ; 4 bytes @ 0x21
 14619  000081                     	ds	3
 14620  000084                     atan@x:
 14621                           	opt stack 0
 14622  000084                     i2___flsub@a:
 14623                           	opt stack 0
 14624                           
 14625                           ; 4 bytes @ 0x24
 14626  000084                     	ds	1
 14627  000085                     sqrt@frac:
 14628                           	opt stack 0
 14629                           
 14630                           ; 4 bytes @ 0x25
 14631  000085                     	ds	3
 14632  000088                     ?i2__doprnt:
 14633                           	opt stack 0
 14634  000088                     ?_sin:
 14635                           	opt stack 0
 14636  000088                     atan@recip:
 14637                           	opt stack 0
 14638  000088                     i2__doprnt@pb:
 14639                           	opt stack 0
 14640  000088                     sin@f:
 14641                           	opt stack 0
 14642                           
 14643                           ; 4 bytes @ 0x28
 14644  000088                     	ds	1
 14645  000089                     atan@val_squared:
 14646                           	opt stack 0
 14647                           
 14648                           ; 4 bytes @ 0x29
 14649  000089                     	ds	1
 14650  00008A                     i2__doprnt@f:
 14651                           	opt stack 0
 14652                           
 14653                           ; 2 bytes @ 0x2A
 14654  00008A                     	ds	2
 14655  00008C                     i2__doprnt@ap:
 14656                           	opt stack 0
 14657  00008C                     sin@y:
 14658                           	opt stack 0
 14659                           
 14660                           ; 4 bytes @ 0x2C
 14661  00008C                     	ds	1
 14662  00008D                     atan@val:
 14663                           	opt stack 0
 14664                           
 14665                           ; 4 bytes @ 0x2D
 14666  00008D                     	ds	1
 14667  00008E                     ??i2__doprnt:
 14668                           
 14669                           ; 1 bytes @ 0x2E
 14670  00008E                     	ds	2
 14671  000090                     _sin$5430:
 14672                           	opt stack 0
 14673                           
 14674                           ; 4 bytes @ 0x30
 14675  000090                     	ds	1
 14676  000091                     ?_asin:
 14677                           	opt stack 0
 14678  000091                     asin@x:
 14679                           	opt stack 0
 14680                           
 14681                           ; 4 bytes @ 0x31
 14682  000091                     	ds	3
 14683  000094                     sin@x2:
 14684                           	opt stack 0
 14685  000094                     i2__doprnt$5434:
 14686                           	opt stack 0
 14687                           
 14688                           ; 4 bytes @ 0x34
 14689  000094                     	ds	1
 14690  000095                     asin@sgn:
 14691                           	opt stack 0
 14692                           
 14693                           ; 4 bytes @ 0x35
 14694  000095                     	ds	3
 14695  000098                     sin@sgn:
 14696                           	opt stack 0
 14697  000098                     i2__doprnt@idx:
 14698                           	opt stack 0
 14699                           
 14700                           ; 1 bytes @ 0x38
 14701  000098                     	ds	1
 14702  000099                     ?_currentMeasuredToPeak:
 14703                           	opt stack 0
 14704  000099                     i2__doprnt@cp:
 14705                           	opt stack 0
 14706  000099                     currentMeasuredToPeak@Measured:
 14707                           	opt stack 0
 14708  000099                     _asin$5429:
 14709                           	opt stack 0
 14710                           
 14711                           ; 4 bytes @ 0x39
 14712  000099                     	ds	2
 14713  00009B                     i2__doprnt@len:
 14714                           	opt stack 0
 14715                           
 14716                           ; 2 bytes @ 0x3B
 14717  00009B                     	ds	2
 14718  00009D                     i2__doprnt@exp:
 14719                           	opt stack 0
 14720  00009D                     currentMeasuredToPeak@Angle:
 14721                           	opt stack 0
 14722  00009D                     _asin$5428:
 14723                           	opt stack 0
 14724                           
 14725                           ; 4 bytes @ 0x3D
 14726  00009D                     	ds	2
 14727  00009F                     i2__doprnt@tmpval:
 14728                           	opt stack 0
 14729                           
 14730                           ; 4 bytes @ 0x3F
 14731  00009F                     	ds	2
 14732  0000A1                     currentMeasuredToPeak@Peak:
 14733                           	opt stack 0
 14734  0000A1                     asin@y:
 14735                           	opt stack 0
 14736                           
 14737                           ; 4 bytes @ 0x41
 14738  0000A1                     	ds	2
 14739  0000A3                     i2__doprnt@fval:
 14740                           	opt stack 0
 14741                           
 14742                           ; 4 bytes @ 0x43
 14743  0000A3                     	ds	2
 14744  0000A5                     _asin$5427:
 14745                           	opt stack 0
 14746                           
 14747                           ; 4 bytes @ 0x45
 14748  0000A5                     	ds	2
 14749  0000A7                     i2__doprnt@val:
 14750                           	opt stack 0
 14751                           
 14752                           ; 4 bytes @ 0x47
 14753  0000A7                     	ds	2
 14754  0000A9                     ?_acos:
 14755                           	opt stack 0
 14756  0000A9                     acos@x:
 14757                           	opt stack 0
 14758                           
 14759                           ; 4 bytes @ 0x49
 14760  0000A9                     	ds	2
 14761  0000AB                     i2__doprnt@width:
 14762                           	opt stack 0
 14763                           
 14764                           ; 2 bytes @ 0x4B
 14765  0000AB                     	ds	2
 14766  0000AD                     i2__doprnt@flag:
 14767                           	opt stack 0
 14768  0000AD                     _acos$5426:
 14769                           	opt stack 0
 14770                           
 14771                           ; 4 bytes @ 0x4D
 14772  0000AD                     	ds	2
 14773  0000AF                     i2__doprnt@prec:
 14774                           	opt stack 0
 14775                           
 14776                           ; 2 bytes @ 0x4F
 14777  0000AF                     	ds	2
 14778  0000B1                     ?_peakToRMS:
 14779                           	opt stack 0
 14780  0000B1                     i2__doprnt@c:
 14781                           	opt stack 0
 14782  0000B1                     peakToRMS@Peak:
 14783                           	opt stack 0
 14784                           
 14785                           ; 4 bytes @ 0x51
 14786  0000B1                     	ds	1
 14787  0000B2                     ?i2_printf:
 14788                           	opt stack 0
 14789  0000B2                     i2printf@f:
 14790                           	opt stack 0
 14791                           
 14792                           ; 2 bytes @ 0x52
 14793  0000B2                     	ds	2
 14794  0000B4                     i2printf@ap:
 14795                           	opt stack 0
 14796                           
 14797                           ; 2 bytes @ 0x54
 14798  0000B4                     	ds	1
 14799  0000B5                     peakToRMS@Angle:
 14800                           	opt stack 0
 14801                           
 14802                           ; 4 bytes @ 0x55
 14803  0000B5                     	ds	1
 14804  0000B6                     i2printf@pb:
 14805                           	opt stack 0
 14806                           
 14807                           ; 5 bytes @ 0x56
 14808  0000B6                     	ds	3
 14809  0000B9                     _peakToRMS$5419:
 14810                           	opt stack 0
 14811                           
 14812                           ; 4 bytes @ 0x59
 14813  0000B9                     	ds	4
 14814  0000BD                     _peakToRMS$5420:
 14815                           	opt stack 0
 14816                           
 14817                           ; 4 bytes @ 0x5D
 14818  0000BD                     	ds	4
 14819  0000C1                     _peakToRMS$5418:
 14820                           	opt stack 0
 14821                           
 14822                           ; 4 bytes @ 0x61
 14823  0000C1                     	ds	4
 14824  0000C5                     peakToRMS@RMS:
 14825                           	opt stack 0
 14826                           
 14827                           ; 4 bytes @ 0x65
 14828  0000C5                     	ds	4
 14829  0000C9                     _ADCPostProcessingCallback$5423:
 14830                           	opt stack 0
 14831                           
 14832                           ; 4 bytes @ 0x69
 14833  0000C9                     	ds	4
 14834  0000CD                     _ADCPostProcessingCallback$5424:
 14835                           	opt stack 0
 14836                           
 14837                           ; 4 bytes @ 0x6D
 14838  0000CD                     	ds	4
 14839  0000D1                     _ADCPostProcessingCallback$5425:
 14840                           	opt stack 0
 14841                           
 14842                           ; 4 bytes @ 0x71
 14843  0000D1                     	ds	4
 14844  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 14845                           	opt stack 0
 14846                           
 14847                           ; 1 bytes @ 0x75
 14848  0000D5                     	ds	1
 14849  0000D6                     _ADCPostProcessingCallback$5421:
 14850                           	opt stack 0
 14851                           
 14852                           ; 4 bytes @ 0x76
 14853  0000D6                     	ds	4
 14854  0000DA                     _ADCPostProcessingCallback$5422:
 14855                           	opt stack 0
 14856                           
 14857                           ; 4 bytes @ 0x7A
 14858  0000DA                     	ds	4
 14859  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 14860                           
 14861                           ; 1 bytes @ 0x7E
 14862  0000DE                     	ds	18
 14863                           tblptru	equ	0xFF8
 14864                           tblptrh	equ	0xFF7
 14865                           tblptrl	equ	0xFF6
 14866                           tablat	equ	0xFF5
 14867                           postinc0	equ	0xFEE
 14868                           wreg	equ	0xFE8
 14869                           postdec1	equ	0xFE5
 14870                           fsr1l	equ	0xFE1
 14871                           
 14872                           	psect	cstackCOMRAM
 14873  000001                     __pcstackCOMRAM:
 14874                           	opt stack 0
 14875  000001                     ??_I2C1_Stop:
 14876  000001                     ??i2_isdigit:
 14877  000001                     ?_ADCC_GetConversionResult:
 14878                           	opt stack 0
 14879  000001                     ?_ADCC_GetFilterValue:
 14880                           	opt stack 0
 14881  000001                     ?i2___wmul:
 14882                           	opt stack 0
 14883  000001                     ?i2___awmod:
 14884                           	opt stack 0
 14885  000001                     ?i2__div_to_l_:
 14886                           	opt stack 0
 14887  000001                     ?i2__tdiv_to_l_:
 14888                           	opt stack 0
 14889  000001                     ?i2___lldiv:
 14890                           	opt stack 0
 14891  000001                     i2EUSART2_Write@txData:
 14892                           	opt stack 0
 14893  000001                     TMR5_WriteTimer@timerVal:
 14894                           	opt stack 0
 14895  000001                     i2DATAEE_WriteByte@bAdd:
 14896                           	opt stack 0
 14897  000001                     i2DATAEE_ReadByte@bAdd:
 14898                           	opt stack 0
 14899  000001                     i2___wmul@multiplier:
 14900                           	opt stack 0
 14901  000001                     i2___awmod@dividend:
 14902                           	opt stack 0
 14903  000001                     i2__tdiv_to_l_@f1:
 14904                           	opt stack 0
 14905  000001                     frexp@value:
 14906                           	opt stack 0
 14907  000001                     i2__div_to_l_@f1:
 14908                           	opt stack 0
 14909  000001                     i2___lldiv@dividend:
 14910                           	opt stack 0
 14911                           
 14912                           ; 4 bytes @ 0x0
 14913  000001                     	ds	1
 14914  000002                     i2putch@txData:
 14915                           	opt stack 0
 14916  000002                     i2_isdigit$4329:
 14917                           	opt stack 0
 14918                           
 14919                           ; 1 bytes @ 0x1
 14920  000002                     	ds	1
 14921  000003                     ??_ADCC_GetConversionResult:
 14922  000003                     ??_ADCC_GetFilterValue:
 14923  000003                     ?i2_readDoubleFromEEPROM:
 14924                           	opt stack 0
 14925  000003                     I2C1_Stop@completion_code:
 14926                           	opt stack 0
 14927  000003                     i2DATAEE_WriteByte@bData:
 14928                           	opt stack 0
 14929  000003                     i2isdigit@c:
 14930                           	opt stack 0
 14931  000003                     i2readDoubleFromEEPROM@starting_address:
 14932                           	opt stack 0
 14933  000003                     i2___wmul@multiplicand:
 14934                           	opt stack 0
 14935  000003                     i2___awmod@divisor:
 14936                           	opt stack 0
 14937                           
 14938                           ; 2 bytes @ 0x2
 14939  000003                     	ds	1
 14940  000004                     ??_I2C1_ISR:
 14941  000004                     i2DATAEE_WriteByte@GIEBitValue:
 14942                           	opt stack 0
 14943  000004                     i2__tdiv_to_l_@f2:
 14944                           	opt stack 0
 14945                           
 14946                           ; 3 bytes @ 0x3
 14947  000004                     	ds	1
 14948  000005                     ?i2___xxtofl:
 14949                           	opt stack 0
 14950  000005                     i2___awmod@counter:
 14951                           	opt stack 0
 14952  000005                     frexp@eptr:
 14953                           	opt stack 0
 14954  000005                     i2___wmul@product:
 14955                           	opt stack 0
 14956  000005                     i2writeDoubleToEEPROM@input_double:
 14957                           	opt stack 0
 14958  000005                     i2__div_to_l_@f2:
 14959                           	opt stack 0
 14960  000005                     i2___lldiv@divisor:
 14961                           	opt stack 0
 14962  000005                     i2___xxtofl@val:
 14963                           	opt stack 0
 14964                           
 14965                           ; 4 bytes @ 0x4
 14966  000005                     	ds	1
 14967  000006                     i2___awmod@sign:
 14968                           	opt stack 0
 14969                           
 14970                           ; 1 bytes @ 0x5
 14971  000006                     	ds	1
 14972  000007                     ??_frexp:
 14973  000007                     ??i2__tdiv_to_l_:
 14974  000007                     ?i2___awdiv:
 14975                           	opt stack 0
 14976  000007                     i2___awdiv@dividend:
 14977                           	opt stack 0
 14978  000007                     i2readDoubleFromEEPROM@output_data:
 14979                           	opt stack 0
 14980                           
 14981                           ; 4 bytes @ 0x6
 14982  000007                     	ds	2
 14983  000009                     ??i2___xxtofl:
 14984  000009                     i2writeDoubleToEEPROM@starting_address:
 14985                           	opt stack 0
 14986  000009                     i2___awdiv@divisor:
 14987                           	opt stack 0
 14988  000009                     i2__div_to_l_@quot:
 14989                           	opt stack 0
 14990  000009                     i2___lldiv@quotient:
 14991                           	opt stack 0
 14992                           
 14993                           ; 4 bytes @ 0x8
 14994  000009                     	ds	1
 14995  00000A                     i2__tdiv_to_l_@quot:
 14996                           	opt stack 0
 14997                           
 14998                           ; 4 bytes @ 0x9
 14999  00000A                     	ds	1
 15000  00000B                     i2___awdiv@counter:
 15001                           	opt stack 0
 15002  00000B                     i2readDoubleFromEEPROM@byte_index:
 15003                           	opt stack 0
 15004  00000B                     i2writeDoubleToEEPROM@input_data:
 15005                           	opt stack 0
 15006                           
 15007                           ; 4 bytes @ 0xA
 15008  00000B                     	ds	1
 15009  00000C                     i2___awdiv@sign:
 15010                           	opt stack 0
 15011                           
 15012                           ; 1 bytes @ 0xB
 15013  00000C                     	ds	1
 15014  00000D                     i2__div_to_l_@cntr:
 15015                           	opt stack 0
 15016  00000D                     i2___lldiv@counter:
 15017                           	opt stack 0
 15018  00000D                     i2___xxtofl@sign:
 15019                           	opt stack 0
 15020  00000D                     i2___awdiv@quotient:
 15021                           	opt stack 0
 15022                           
 15023                           ; 2 bytes @ 0xC
 15024  00000D                     	ds	1
 15025  00000E                     ?i2___llmod:
 15026                           	opt stack 0
 15027  00000E                     i2__div_to_l_@exp1:
 15028                           	opt stack 0
 15029  00000E                     i2__tdiv_to_l_@cntr:
 15030                           	opt stack 0
 15031  00000E                     i2___xxtofl@exp:
 15032                           	opt stack 0
 15033  00000E                     i2___llmod@dividend:
 15034                           	opt stack 0
 15035                           
 15036                           ; 4 bytes @ 0xD
 15037  00000E                     	ds	1
 15038  00000F                     i2__tdiv_to_l_@exp1:
 15039                           	opt stack 0
 15040  00000F                     i2writeDoubleToEEPROM@byte_index:
 15041                           	opt stack 0
 15042  00000F                     i2___xxtofl@arg:
 15043                           	opt stack 0
 15044                           
 15045                           ; 4 bytes @ 0xE
 15046  00000F                     	ds	2
 15047  000011                     
 15048                           ; 1 bytes @ 0x10
 15049  000011                     	ds	1
 15050  000012                     i2___llmod@divisor:
 15051                           	opt stack 0
 15052                           
 15053                           ; 4 bytes @ 0x11
 15054  000012                     	ds	1
 15055  000013                     ?i2___fldiv:
 15056                           	opt stack 0
 15057  000013                     i2___fldiv@b:
 15058                           	opt stack 0
 15059                           
 15060                           ; 4 bytes @ 0x12
 15061  000013                     	ds	3
 15062  000016                     i2___llmod@counter:
 15063                           	opt stack 0
 15064                           
 15065                           ; 1 bytes @ 0x15
 15066  000016                     	ds	1
 15067  000017                     i2___fldiv@a:
 15068                           	opt stack 0
 15069                           
 15070                           ; 4 bytes @ 0x16
 15071  000017                     	ds	4
 15072  00001B                     ??i2___fldiv:
 15073                           
 15074                           ; 1 bytes @ 0x1A
 15075  00001B                     	ds	4
 15076  00001F                     i2___fldiv@sign:
 15077                           	opt stack 0
 15078                           
 15079                           ; 1 bytes @ 0x1E
 15080  00001F                     	ds	1
 15081  000020                     i2___fldiv@rem:
 15082                           	opt stack 0
 15083                           
 15084                           ; 4 bytes @ 0x1F
 15085  000020                     	ds	4
 15086  000024                     i2___fldiv@new_exp:
 15087                           	opt stack 0
 15088                           
 15089                           ; 2 bytes @ 0x23
 15090  000024                     	ds	2
 15091  000026                     i2___fldiv@grs:
 15092                           	opt stack 0
 15093                           
 15094                           ; 4 bytes @ 0x25
 15095  000026                     	ds	4
 15096  00002A                     i2___fldiv@bexp:
 15097                           	opt stack 0
 15098                           
 15099                           ; 1 bytes @ 0x29
 15100  00002A                     	ds	1
 15101  00002B                     i2___fldiv@aexp:
 15102                           	opt stack 0
 15103                           
 15104                           ; 1 bytes @ 0x2A
 15105  00002B                     	ds	1
 15106  00002C                     ?i2___flneg:
 15107                           	opt stack 0
 15108  00002C                     i2___flneg@f1:
 15109                           	opt stack 0
 15110                           
 15111                           ; 4 bytes @ 0x2B
 15112  00002C                     	ds	4
 15113  000030                     ?_fabs:
 15114                           	opt stack 0
 15115  000030                     ?i2___flmul:
 15116                           	opt stack 0
 15117  000030                     fabs@d:
 15118                           	opt stack 0
 15119  000030                     i2___flmul@b:
 15120                           	opt stack 0
 15121                           
 15122                           ; 4 bytes @ 0x2F
 15123  000030                     	ds	4
 15124  000034                     i2___flge@ff1:
 15125                           	opt stack 0
 15126  000034                     i2___flmul@a:
 15127                           	opt stack 0
 15128                           
 15129                           ; 4 bytes @ 0x33
 15130  000034                     	ds	4
 15131  000038                     ??i2___flmul:
 15132  000038                     i2___flge@ff2:
 15133                           	opt stack 0
 15134                           
 15135                           ; 4 bytes @ 0x37
 15136  000038                     	ds	4
 15137  00003C                     ??i2___flge:
 15138  00003C                     i2___flmul@sign:
 15139                           	opt stack 0
 15140                           
 15141                           ; 1 bytes @ 0x3B
 15142  00003C                     	ds	1
 15143  00003D                     i2___flmul@aexp:
 15144                           	opt stack 0
 15145                           
 15146                           ; 1 bytes @ 0x3C
 15147  00003D                     	ds	1
 15148  00003E                     i2___flmul@grs:
 15149                           	opt stack 0
 15150                           
 15151                           ; 4 bytes @ 0x3D
 15152  00003E                     	ds	2
 15153  000040                     writeEnergyToEEPROMCallback@current_value:
 15154                           	opt stack 0
 15155                           
 15156                           ; 4 bytes @ 0x3F
 15157  000040                     	ds	2
 15158  000042                     i2___flmul@bexp:
 15159                           	opt stack 0
 15160                           
 15161                           ; 1 bytes @ 0x41
 15162  000042                     	ds	1
 15163  000043                     i2___flmul@prod:
 15164                           	opt stack 0
 15165                           
 15166                           ; 4 bytes @ 0x42
 15167  000043                     	ds	1
 15168  000044                     
 15169                           ; 1 bytes @ 0x43
 15170  000044                     	ds	3
 15171  000047                     i2___flmul@temp:
 15172                           	opt stack 0
 15173                           
 15174                           ; 2 bytes @ 0x46
 15175  000047                     	ds	2
 15176  000049                     ?i2_fround:
 15177                           	opt stack 0
 15178  000049                     ?i2_scale:
 15179                           	opt stack 0
 15180                           
 15181                           ; 4 bytes @ 0x48
 15182  000049                     	ds	4
 15183  00004D                     i2_fround$5432:
 15184                           	opt stack 0
 15185  00004D                     i2_scale$5433:
 15186                           	opt stack 0
 15187                           
 15188                           ; 4 bytes @ 0x4C
 15189  00004D                     	ds	4
 15190  000051                     i2scale@scl:
 15191                           	opt stack 0
 15192  000051                     i2_fround$5431:
 15193                           	opt stack 0
 15194                           
 15195                           ; 4 bytes @ 0x50
 15196  000051                     	ds	4
 15197  000055                     i2fround@prec:
 15198                           	opt stack 0
 15199                           
 15200                           ; 1 bytes @ 0x54
 15201  000055                     	ds	1
 15202  000056                     ?i2___fladd:
 15203                           	opt stack 0
 15204  000056                     i2___fladd@b:
 15205                           	opt stack 0
 15206                           
 15207                           ; 4 bytes @ 0x55
 15208  000056                     	ds	4
 15209  00005A                     i2___fladd@a:
 15210                           	opt stack 0
 15211                           
 15212                           ; 4 bytes @ 0x59
 15213  00005A                     	ds	4
 15214  00005E                     tblptru	equ	0xFF8
 15215                           tblptrh	equ	0xFF7
 15216                           tblptrl	equ	0xFF6
 15217                           tablat	equ	0xFF5
 15218                           postinc0	equ	0xFEE
 15219                           wreg	equ	0xFE8
 15220                           postdec1	equ	0xFE5
 15221                           fsr1l	equ	0xFE1
 15222                           
 15223                           ; 1 bytes @ 0x5D
 15224 ;;
 15225 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 15226 ;;
 15227 ;; *************** function _main *****************
 15228 ;; Defined at:
 15229 ;;		line 474 in file "main.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;		None
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;		None
 15234 ;; Return value:  Size  Location     Type
 15235 ;;                  1    wreg      void 
 15236 ;; Registers used:
 15237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15245 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15246 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 15247 ;;Total ram usage:        2 bytes
 15248 ;; Hardware stack levels required when called:   21
 15249 ;; This function calls:
 15250 ;;		_ADCC_SetADTIInterruptHandler
 15251 ;;		_INT0_SetInterruptHandler
 15252 ;;		_OLED_Init
 15253 ;;		_OLED_UpdateFromRAMBuffer
 15254 ;;		_SYSTEM_Initialize
 15255 ;;		_TMR4_SetInterruptHandler
 15256 ;;		_TMR5_SetInterruptHandler
 15257 ;;		_TMR5_StopTimer
 15258 ;;		_TMR6_SetInterruptHandler
 15259 ;;		_TMR7_SetInterruptHandler
 15260 ;;		_getCauseOfReset
 15261 ;;		_recoverSRAMMaxFromEEPROM
 15262 ;;		_saveSRAMMaxToEEPROM
 15263 ;;		_strcpy
 15264 ;;		_terminal_clearTerminal
 15265 ;;		_terminal_ringBufferPull
 15266 ;;		_terminal_setCursorHome
 15267 ;;		_terminal_textAttributesReset
 15268 ;;		_updateErrorLEDs
 15269 ;; This function is called by:
 15270 ;;		Startup code after reset
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           	psect	text0
 15275  018A5A                     __ptext0:
 15276                           	opt stack 0
 15277  018A5A                     _main:
 15278                           	opt stack 10
 15279                           
 15280                           ;main.c: 478: reset_cause = getCauseOfReset();
 15281                           
 15282                           ;incstack = 0
 15283  018A5A  ECA7  F0D1         	call	_getCauseOfReset	;wreg free
 15284  018A5E  0102               	movlb	2	; () banked
 15285  018A60  6FF5               	movwf	_reset_cause& (0+255),b
 15286                           
 15287                           ; BSR set to: 2
 15288                           ;main.c: 482: _delay((unsigned long)((250)*(64000000/4000.0)));
 15289  018A62  0E15               	movlw	21
 15290  018A64  0102               	movlb	2	; () banked
 15291  018A66  6FCF               	movwf	(??_main+1)& (0+255),b
 15292  018A68  0E4B               	movlw	75
 15293  018A6A  6FCE               	movwf	??_main& (0+255),b
 15294  018A6C  0EBE               	movlw	190
 15295  018A6E                     u34517:
 15296  018A6E  2EE8               	decfsz	wreg,f,c
 15297  018A70  D7FE               	bra	u34517
 15298  018A72  2FCE               	decfsz	??_main& (0+255),f,b
 15299  018A74  D7FC               	bra	u34517
 15300  018A76  2FCF               	decfsz	(??_main+1)& (0+255),f,b
 15301  018A78  D7FA               	bra	u34517
 15302  018A7A  F000               	nop	
 15303                           
 15304                           ;main.c: 485: SYSTEM_Initialize();
 15305  018A7C  EC3E  F0D5         	call	_SYSTEM_Initialize	;wreg free
 15306                           
 15307                           ;main.c: 488: LATGbits.LATG0 = 0;
 15308  018A80  907F               	bcf	3967,0,c	;volatile
 15309                           
 15310                           ;main.c: 489: LATGbits.LATG1 = 0;
 15311  018A82  927F               	bcf	3967,1,c	;volatile
 15312                           
 15313                           ;main.c: 490: load_enable = 0;
 15314  018A84  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15315                           
 15316                           ;main.c: 493: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 15317  018A86  0E92               	movlw	low _heartbeatTimerCallback
 15318  018A88  0101               	movlb	1	; () banked
 15319  018A8A  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15320  018A8C  0EA8               	movlw	high _heartbeatTimerCallback
 15321  018A8E  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15322  018A90  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 15323  018A92  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15324  018A94  ECD7  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 15325                           
 15326                           ;main.c: 496: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 15327  018A98  0E78               	movlw	low _ADCPostProcessingCallback
 15328  018A9A  0101               	movlb	1	; () banked
 15329  018A9C  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 15330  018A9E  0E40               	movlw	high _ADCPostProcessingCallback
 15331  018AA0  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 15332  018AA2  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 15333  018AA4  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 15334  018AA6  EC01  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 15335                           
 15336                           ;main.c: 499: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 15337  018AAA  0E40               	movlw	low _acquisitionTimerCallback
 15338  018AAC  0101               	movlb	1	; () banked
 15339  018AAE  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15340  018AB0  0EB1               	movlw	high _acquisitionTimerCallback
 15341  018AB2  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15342  018AB4  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 15343  018AB6  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15344  018AB8  ECD0  F0D8         	call	_TMR7_SetInterruptHandler	;wreg free
 15345                           
 15346                           ;main.c: 502: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 15347  018ABC  0EC4               	movlw	low _dimmingOffTimeCallback
 15348  018ABE  0101               	movlb	1	; () banked
 15349  018AC0  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 15350  018AC2  0EB0               	movlw	high _dimmingOffTimeCallback
 15351  018AC4  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15352  018AC6  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 15353  018AC8  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15354  018ACA  ECEC  F0D8         	call	_INT0_SetInterruptHandler	;wreg free
 15355                           
 15356                           ;main.c: 505: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 15357  018ACE  0E1E               	movlw	low _dimmingOnTimeCallback
 15358  018AD0  0101               	movlb	1	; () banked
 15359  018AD2  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15360  018AD4  0EB2               	movlw	high _dimmingOnTimeCallback
 15361  018AD6  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15362  018AD8  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 15363  018ADA  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15364  018ADC  ECDE  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 15365                           
 15366                           ;main.c: 508: TMR4_SetInterruptHandler(writeEnergyToEEPROMCallback);
 15367  018AE0  0ED8               	movlw	low _writeEnergyToEEPROMCallback
 15368  018AE2  0101               	movlb	1	; () banked
 15369  018AE4  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15370  018AE6  0E9B               	movlw	high _writeEnergyToEEPROMCallback
 15371  018AE8  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15372  018AEA  0E01               	movlw	low (_writeEnergyToEEPROMCallback shr (0+16))
 15373  018AEC  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15374  018AEE  ECE5  F0D8         	call	_TMR4_SetInterruptHandler	;wreg free
 15375                           
 15376                           ;main.c: 511: TMR5_StopTimer();
 15377  018AF2  EC3B  F0D9         	call	_TMR5_StopTimer	;wreg free
 15378                           
 15379                           ;main.c: 512: PIE0bits.INT0IE = 0;
 15380  018AF6  010E               	movlb	14	; () banked
 15381  018AF8  9129               	bcf	41,0,b	;volatile
 15382                           
 15383                           ; BSR set to: 14
 15384                           ;main.c: 515: recoverSRAMMaxFromEEPROM();
 15385  018AFA  EC36  F0C2         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 15386                           
 15387                           ;main.c: 518: (INTCONbits.GIEH = 1);
 15388  018AFE  8EF2               	bsf	intcon,7,c	;volatile
 15389                           
 15390                           ;main.c: 521: (INTCONbits.GIEL = 1);
 15391  018B00  8CF2               	bsf	intcon,6,c	;volatile
 15392                           
 15393                           ;main.c: 524: terminal_clearTerminal();
 15394  018B02  ECB9  F0D8         	call	_terminal_clearTerminal	;wreg free
 15395                           
 15396                           ;main.c: 525: terminal_setCursorHome();
 15397  018B06  ECA9  F0D8         	call	_terminal_setCursorHome	;wreg free
 15398                           
 15399                           ;main.c: 526: terminal_textAttributesReset();
 15400  018B0A  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 15401                           
 15402                           ;main.c: 529: OLED_Init();
 15403  018B0E  EC04  F0CC         	call	_OLED_Init	;wreg free
 15404                           
 15405                           ;main.c: 532: strcpy(OLED_RAM_Buffer.line0, "AC Power Meter");
 15406  018B12  0E40               	movlw	low _OLED_RAM_Buffer
 15407  018B14  0101               	movlb	1	; () banked
 15408  018B16  6F17               	movwf	strcpy@to& (0+255),b
 15409  018B18  0E03               	movlw	high _OLED_RAM_Buffer
 15410  018B1A  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15411  018B1C  0E2C               	movlw	low STR_2
 15412  018B1E  6F19               	movwf	strcpy@from& (0+255),b
 15413  018B20  0EFE               	movlw	high STR_2
 15414  018B22  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15415  018B24  ECB0  F0D5         	call	_strcpy	;wreg free
 15416                           
 15417                           ;main.c: 533: strcpy(OLED_RAM_Buffer.line1, "ELEN 3035");
 15418  018B28  0E50               	movlw	low (_OLED_RAM_Buffer+16)
 15419  018B2A  0101               	movlb	1	; () banked
 15420  018B2C  6F17               	movwf	strcpy@to& (0+255),b
 15421  018B2E  0E03               	movlw	high (_OLED_RAM_Buffer+16)
 15422  018B30  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15423  018B32  0E87               	movlw	low STR_3
 15424  018B34  6F19               	movwf	strcpy@from& (0+255),b
 15425  018B36  0EFF               	movlw	high STR_3
 15426  018B38  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15427  018B3A  ECB0  F0D5         	call	_strcpy	;wreg free
 15428                           
 15429                           ;main.c: 534: strcpy(OLED_RAM_Buffer.line2, "Final Project");
 15430  018B3E  0E60               	movlw	low (_OLED_RAM_Buffer+32)
 15431  018B40  0101               	movlb	1	; () banked
 15432  018B42  6F17               	movwf	strcpy@to& (0+255),b
 15433  018B44  0E03               	movlw	high (_OLED_RAM_Buffer+32)
 15434  018B46  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15435  018B48  0E81               	movlw	low STR_4
 15436  018B4A  6F19               	movwf	strcpy@from& (0+255),b
 15437  018B4C  0EFE               	movlw	high STR_4
 15438  018B4E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15439  018B50  ECB0  F0D5         	call	_strcpy	;wreg free
 15440                           
 15441                           ;main.c: 535: strcpy(OLED_RAM_Buffer.line3, "Boot Complete");
 15442  018B54  0E70               	movlw	low (_OLED_RAM_Buffer+48)
 15443  018B56  0101               	movlb	1	; () banked
 15444  018B58  6F17               	movwf	strcpy@to& (0+255),b
 15445  018B5A  0E03               	movlw	high (_OLED_RAM_Buffer+48)
 15446  018B5C  6F18               	movwf	(strcpy@to+1)& (0+255),b
 15447  018B5E  0E73               	movlw	low STR_5
 15448  018B60  6F19               	movwf	strcpy@from& (0+255),b
 15449  018B62  0EFE               	movlw	high STR_5
 15450  018B64  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 15451  018B66  ECB0  F0D5         	call	_strcpy	;wreg free
 15452                           
 15453                           ;main.c: 536: OLED_UpdateFromRAMBuffer();
 15454  018B6A  EC5A  F0CF         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 15455  018B6E                     
 15456                           ;main.c: 540: {
 15457                           ;main.c: 543: if (eusart2RxStringReady) {
 15458  018B6E  0100               	movlb	0	; () banked
 15459  018B70  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;main.c: 545: terminal_ringBufferPull();
 15463  018B72  ECC0  F0C5         	call	_terminal_ringBufferPull	;wreg free
 15464                           
 15465                           ;main.c: 547: }
 15466                           ;main.c: 550: saveSRAMMaxToEEPROM();
 15467  018B76  EC45  F0BC         	call	_saveSRAMMaxToEEPROM	;wreg free
 15468                           
 15469                           ;main.c: 553: updateErrorLEDs();
 15470  018B7A  EC4A  F0D8         	call	_updateErrorLEDs	;wreg free
 15471  018B7E  D7F7               	goto	l1241
 15472  018B80                     __end_of_main:
 15473                           	opt stack 0
 15474                           tblptru	equ	0xFF8
 15475                           tblptrh	equ	0xFF7
 15476                           tblptrl	equ	0xFF6
 15477                           tablat	equ	0xFF5
 15478                           intcon	equ	0xFF2
 15479                           postinc0	equ	0xFEE
 15480                           wreg	equ	0xFE8
 15481                           postdec1	equ	0xFE5
 15482                           fsr1l	equ	0xFE1
 15483                           
 15484 ;; *************** function _updateErrorLEDs *****************
 15485 ;; Defined at:
 15486 ;;		line 54 in file "error_handling.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		wreg, status,2, cstack
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:   14
 15507 ;; This function calls:
 15508 ;;		_getADCError
 15509 ;;		_getCOMMError
 15510 ;; This function is called by:
 15511 ;;		_main
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           	psect	text1
 15516  01B094                     __ptext1:
 15517                           	opt stack 0
 15518  01B094                     _updateErrorLEDs:
 15519                           	opt stack 16
 15520                           
 15521                           ;error_handling.c: 57: if (getADCError()) {
 15522                           
 15523                           ;incstack = 0
 15524  01B094  EC01  F0D6         	call	_getADCError	;wreg free
 15525  01B098  0900               	iorlw	0
 15526  01B09A  A4D8               	btfss	status,2,c
 15527                           
 15528                           ;error_handling.c: 59: LATFbits.LATF3 = 1;
 15529  01B09C  867E               	bsf	3966,3,c	;volatile
 15530                           
 15531                           ;error_handling.c: 61: }
 15532                           ;error_handling.c: 64: if (getCOMMError()) {
 15533  01B09E  EC6E  F0D8         	call	_getCOMMError	;wreg free
 15534  01B0A2  0900               	iorlw	0
 15535  01B0A4  B4D8               	btfsc	status,2,c
 15536  01B0A6  0012               	return	
 15537                           
 15538                           ;error_handling.c: 66: LATFbits.LATF1 = 1;
 15539  01B0A8  827E               	bsf	3966,1,c	;volatile
 15540  01B0AA  0012               	return	
 15541  01B0AC                     __end_of_updateErrorLEDs:
 15542                           	opt stack 0
 15543                           tblptru	equ	0xFF8
 15544                           tblptrh	equ	0xFF7
 15545                           tblptrl	equ	0xFF6
 15546                           tablat	equ	0xFF5
 15547                           intcon	equ	0xFF2
 15548                           postinc0	equ	0xFEE
 15549                           wreg	equ	0xFE8
 15550                           postdec1	equ	0xFE5
 15551                           fsr1l	equ	0xFE1
 15552                           status	equ	0xFD8
 15553                           
 15554 ;; *************** function _terminal_setCursorHome *****************
 15555 ;; Defined at:
 15556 ;;		line 85 in file "ring_buffer_interface.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;		None
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;		None
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      void 
 15563 ;; Registers used:
 15564 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15574 ;;Total ram usage:        0 bytes
 15575 ;; Hardware stack levels used:    1
 15576 ;; Hardware stack levels required when called:   17
 15577 ;; This function calls:
 15578 ;;		_printf
 15579 ;; This function is called by:
 15580 ;;		_main
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           	psect	text2
 15585  01B152                     __ptext2:
 15586                           	opt stack 0
 15587  01B152                     _terminal_setCursorHome:
 15588                           	opt stack 13
 15589                           
 15590                           ;ring_buffer_interface.c: 86: printf("\033[H");
 15591                           
 15592                           ;incstack = 0
 15593  01B152  0EBB               	movlw	low STR_7
 15594  01B154  0101               	movlb	1	; () banked
 15595  01B156  6FAC               	movwf	printf@f& (0+255),b
 15596  01B158  0EFF               	movlw	high STR_7
 15597  01B15A  6FAD               	movwf	(printf@f+1)& (0+255),b
 15598  01B15C  ECC6  F0D4         	call	_printf	;wreg free
 15599  01B160  0012               	return		;funcret
 15600  01B162                     __end_of_terminal_setCursorHome:
 15601                           	opt stack 0
 15602                           tblptru	equ	0xFF8
 15603                           tblptrh	equ	0xFF7
 15604                           tblptrl	equ	0xFF6
 15605                           tablat	equ	0xFF5
 15606                           intcon	equ	0xFF2
 15607                           postinc0	equ	0xFEE
 15608                           wreg	equ	0xFE8
 15609                           postdec1	equ	0xFE5
 15610                           fsr1l	equ	0xFE1
 15611                           status	equ	0xFD8
 15612                           
 15613 ;; *************** function _terminal_ringBufferPull *****************
 15614 ;; Defined at:
 15615 ;;		line 12 in file "ring_buffer_interface.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;		None
 15618 ;; Auto vars:     Size  Location     Type
 15619 ;;  index           2   55[BANK2 ] int 
 15620 ;;  index           2   57[BANK2 ] int 
 15621 ;;  charNumber      2   53[BANK2 ] int 
 15622 ;; Return value:  Size  Location     Type
 15623 ;;                  1    wreg      void 
 15624 ;; Registers used:
 15625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15632 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 15633 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15634 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
 15635 ;;Total ram usage:        9 bytes
 15636 ;; Hardware stack levels used:    1
 15637 ;; Hardware stack levels required when called:   20
 15638 ;; This function calls:
 15639 ;;		_EUSART2_Read
 15640 ;;		_ringBufferLUT
 15641 ;;		_strlen
 15642 ;; This function is called by:
 15643 ;;		_main
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           	psect	text3
 15648  018B80                     __ptext3:
 15649                           	opt stack 0
 15650  018B80                     _terminal_ringBufferPull:
 15651                           	opt stack 10
 15652                           
 15653                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 15654                           
 15655                           ;incstack = 0
 15656  018B80  C272  F2C8         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 15657  018B84  0102               	movlb	2	; () banked
 15658  018B86  6BC9               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 15659                           
 15660                           ; BSR set to: 2
 15661                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 15662  018B88  0E00               	movlw	0
 15663  018B8A  6FCD               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 15664  018B8C  0E00               	movlw	0
 15665  018B8E  6FCC               	movwf	terminal_ringBufferPull@index& (0+255),b
 15666  018B90                     l23363:
 15667                           
 15668                           ; BSR set to: 2
 15669  018B90  BFCD               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 15670  018B92  D006               	goto	l1282
 15671  018B94  51CD               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15672  018B96  E10F               	bnz	l23373
 15673  018B98  0E40               	movlw	64
 15674  018B9A  5DCC               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 15675  018B9C  B0D8               	btfsc	status,0,c
 15676  018B9E  D00B               	goto	u34220
 15677  018BA0                     l1282:
 15678                           
 15679                           ; BSR set to: 2
 15680                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 15681                           
 15682                           ; BSR set to: 2
 15683  018BA0  0E80               	movlw	low _line
 15684  018BA2  25CC               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 15685  018BA4  6ED9               	movwf	fsr2l,c
 15686  018BA6  0E03               	movlw	high _line
 15687  018BA8  21CD               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 15688  018BAA  6EDA               	movwf	fsr2h,c
 15689  018BAC  0E00               	movlw	0
 15690  018BAE  6EDF               	movwf	indf2,c
 15691                           
 15692                           ; BSR set to: 2
 15693  018BB0  4BCC               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 15694  018BB2  2BCD               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 15695  018BB4  D7ED               	goto	l23363
 15696  018BB6                     u34220:
 15697  018BB6                     l23373:
 15698                           
 15699                           ; BSR set to: 2
 15700                           ;ring_buffer_interface.c: 21: }
 15701                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 15702  018BB6  0E00               	movlw	0
 15703  018BB8  6FCB               	movwf	(terminal_ringBufferPull@index_2956+1)& (0+255),b
 15704  018BBA  0E00               	movlw	0
 15705  018BBC  6FCA               	movwf	terminal_ringBufferPull@index_2956& (0+255),b
 15706  018BBE  D00F               	goto	l1284
 15707  018BC0                     
 15708                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 15709                           
 15710                           ; BSR set to: 2
 15711  018BC0  ECE4  F0D2         	call	_EUSART2_Read	;wreg free
 15712  018BC4  0101               	movlb	1	; () banked
 15713  018BC6  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15714  018BC8  0E80               	movlw	low _line
 15715  018BCA  0102               	movlb	2	; () banked
 15716  018BCC  25CA               	addwf	terminal_ringBufferPull@index_2956& (0+255),w,b
 15717  018BCE  6ED9               	movwf	fsr2l,c
 15718  018BD0  0E03               	movlw	high _line
 15719  018BD2  21CB               	addwfc	(terminal_ringBufferPull@index_2956+1)& (0+255),w,b
 15720  018BD4  6EDA               	movwf	fsr2h,c
 15721  018BD6  C1C3  FFDF         	movff	??_terminal_ringBufferPull,indf2
 15722                           
 15723                           ; BSR set to: 2
 15724  018BDA  4BCA               	infsnz	terminal_ringBufferPull@index_2956& (0+255),f,b
 15725  018BDC  2BCB               	incf	(terminal_ringBufferPull@index_2956+1)& (0+255),f,b
 15726  018BDE                     l1284:
 15727                           
 15728                           ; BSR set to: 2
 15729                           
 15730                           ; BSR set to: 2
 15731  018BDE  51C8               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 15732  018BE0  5DCA               	subwf	terminal_ringBufferPull@index_2956& (0+255),w,b
 15733  018BE2  51CB               	movf	(terminal_ringBufferPull@index_2956+1)& (0+255),w,b
 15734  018BE4  0A80               	xorlw	128
 15735  018BE6  0101               	movlb	1	; () banked
 15736  018BE8  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15737  018BEA  0102               	movlb	2	; () banked
 15738  018BEC  51C9               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 15739  018BEE  0A80               	xorlw	128
 15740  018BF0  0101               	movlb	1	; () banked
 15741  018BF2  59C3               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 15742  018BF4  A0D8               	btfss	status,0,c
 15743  018BF6  D7E4               	goto	l1285
 15744                           
 15745                           ; BSR set to: 1
 15746                           ;ring_buffer_interface.c: 28: }
 15747                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 15748  018BF8  C0FA  F1DE         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 15749                           
 15750                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 15751                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 15752  018BFC  D017               	goto	l1287
 15753  018BFE                     
 15754                           ; BSR set to: 1
 15755                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 15756                           
 15757                           ; BSR set to: 1
 15758  018BFE  0EFF               	movlw	255
 15759  018C00  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15760  018C02  0EFF               	movlw	255
 15761  018C04  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15762  018C06  0E80               	movlw	low _line
 15763  018C08  6F17               	movwf	strlen@s& (0+255),b
 15764  018C0A  0E03               	movlw	high _line
 15765  018C0C  6F18               	movwf	(strlen@s+1)& (0+255),b
 15766  018C0E  ECFC  F0D0         	call	_strlen	;wreg free
 15767  018C12  0101               	movlb	1	; () banked
 15768  018C14  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15769  018C16  2717               	addwf	?_strlen& (0+255),f,b
 15770  018C18  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15771  018C1A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15772  018C1C  0E80               	movlw	low _line
 15773  018C1E  2517               	addwf	?_strlen& (0+255),w,b
 15774  018C20  6ED9               	movwf	fsr2l,c
 15775  018C22  0E03               	movlw	high _line
 15776  018C24  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15777  018C26  6EDA               	movwf	fsr2h,c
 15778  018C28  0E00               	movlw	0
 15779  018C2A  6EDF               	movwf	indf2,c
 15780  018C2C                     l1287:
 15781                           
 15782                           ; BSR set to: 1
 15783  018C2C  0EFF               	movlw	255
 15784  018C2E  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15785  018C30  0EFF               	movlw	255
 15786  018C32  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15787  018C34  0E80               	movlw	low _line
 15788  018C36  6F17               	movwf	strlen@s& (0+255),b
 15789  018C38  0E03               	movlw	high _line
 15790  018C3A  6F18               	movwf	(strlen@s+1)& (0+255),b
 15791  018C3C  ECFC  F0D0         	call	_strlen	;wreg free
 15792  018C40  0101               	movlb	1	; () banked
 15793  018C42  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15794  018C44  2717               	addwf	?_strlen& (0+255),f,b
 15795  018C46  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15796  018C48  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15797  018C4A  0E80               	movlw	low _line
 15798  018C4C  2517               	addwf	?_strlen& (0+255),w,b
 15799  018C4E  6ED9               	movwf	fsr2l,c
 15800  018C50  0E03               	movlw	high _line
 15801  018C52  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15802  018C54  6EDA               	movwf	fsr2h,c
 15803  018C56  0E0A               	movlw	10
 15804  018C58  18DE               	xorwf	postinc2,w,c
 15805  018C5A  B4D8               	btfsc	status,2,c
 15806  018C5C  D7D0               	goto	l1288
 15807                           
 15808                           ; BSR set to: 1
 15809  018C5E  0EFF               	movlw	255
 15810  018C60  6FC3               	movwf	??_terminal_ringBufferPull& (0+255),b
 15811  018C62  0EFF               	movlw	255
 15812  018C64  6FC4               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 15813  018C66  0E80               	movlw	low _line
 15814  018C68  6F17               	movwf	strlen@s& (0+255),b
 15815  018C6A  0E03               	movlw	high _line
 15816  018C6C  6F18               	movwf	(strlen@s+1)& (0+255),b
 15817  018C6E  ECFC  F0D0         	call	_strlen	;wreg free
 15818  018C72  0101               	movlb	1	; () banked
 15819  018C74  51C3               	movf	??_terminal_ringBufferPull& (0+255),w,b
 15820  018C76  2717               	addwf	?_strlen& (0+255),f,b
 15821  018C78  51C4               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 15822  018C7A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 15823  018C7C  0E80               	movlw	low _line
 15824  018C7E  2517               	addwf	?_strlen& (0+255),w,b
 15825  018C80  6ED9               	movwf	fsr2l,c
 15826  018C82  0E03               	movlw	high _line
 15827  018C84  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 15828  018C86  6EDA               	movwf	fsr2h,c
 15829  018C88  0E0D               	movlw	13
 15830  018C8A  18DE               	xorwf	postinc2,w,c
 15831  018C8C  B4D8               	btfsc	status,2,c
 15832  018C8E  D7B7               	goto	l1288
 15833                           
 15834                           ; BSR set to: 1
 15835                           ;ring_buffer_interface.c: 40: }
 15836                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 15837  018C90  0100               	movlb	0	; () banked
 15838  018C92  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 15842  018C94  0E80               	movlw	low _line
 15843  018C96  0101               	movlb	1	; () banked
 15844  018C98  6FBF               	movwf	ringBufferLUT@line& (0+255),b
 15845  018C9A  0E03               	movlw	high _line
 15846  018C9C  6FC0               	movwf	(ringBufferLUT@line+1)& (0+255),b
 15847  018C9E  EC00  F080         	call	_ringBufferLUT	;wreg free
 15848  018CA2  0012               	return		;funcret
 15849  018CA4                     __end_of_terminal_ringBufferPull:
 15850                           	opt stack 0
 15851                           tblptru	equ	0xFF8
 15852                           tblptrh	equ	0xFF7
 15853                           tblptrl	equ	0xFF6
 15854                           tablat	equ	0xFF5
 15855                           intcon	equ	0xFF2
 15856                           postinc0	equ	0xFEE
 15857                           wreg	equ	0xFE8
 15858                           postdec1	equ	0xFE5
 15859                           fsr1l	equ	0xFE1
 15860                           indf2	equ	0xFDF
 15861                           postinc2	equ	0xFDE
 15862                           fsr2h	equ	0xFDA
 15863                           fsr2l	equ	0xFD9
 15864                           status	equ	0xFD8
 15865                           
 15866 ;; *************** function _ringBufferLUT *****************
 15867 ;; Defined at:
 15868 ;;		line 61 in file "ring_buffer_LUT.c"
 15869 ;; Parameters:    Size  Location     Type
 15870 ;;  line            2  191[BANK1 ] PTR unsigned char 
 15871 ;;		 -> line(64), 
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;  angle_degree    4   19[BANK2 ] PTR unsigned char 
 15874 ;;  index           2   47[BANK2 ] int 
 15875 ;;  userID          2   51[BANK2 ] int 
 15876 ;;  max_voltage_    4   43[BANK2 ] int 
 15877 ;;  max_temp_pri    4   39[BANK2 ] int 
 15878 ;;  max_voltage_    4   35[BANK2 ] int 
 15879 ;;  max_voltage_    4   31[BANK2 ] int 
 15880 ;;  max_Power_pr    4   27[BANK2 ] int 
 15881 ;;  max_current_    4   23[BANK2 ] int 
 15882 ;;  arg_buff        3   16[BANK2 ] unsigned char [3]
 15883 ;;  percentage      2   49[BANK2 ] int 
 15884 ;; Return value:  Size  Location     Type
 15885 ;;                  1    wreg      void 
 15886 ;; Registers used:
 15887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15888 ;; Tracked objects:
 15889 ;;		On entry : 0/0
 15890 ;;		On exit  : 0/0
 15891 ;;		Unchanged: 0/0
 15892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15893 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15894 ;;      Locals:         0       0       0      37       0       0       0       0       0       0       0       0       
      +0       0       0
 15895 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15896 ;;      Totals:         0       0       4      37       0       0       0       0       0       0       0       0       
      +0       0       0
 15897 ;;Total ram usage:       41 bytes
 15898 ;; Hardware stack levels used:    1
 15899 ;; Hardware stack levels required when called:   19
 15900 ;; This function calls:
 15901 ;;		_TMR5_StopTimer
 15902 ;;		___fladd
 15903 ;;		___fldiv
 15904 ;;		___flmul
 15905 ;;		___flneg
 15906 ;;		___wmul
 15907 ;;		___xxtofl
 15908 ;;		_atoi
 15909 ;;		_clearADCErrors
 15910 ;;		_clearCOMMErrors
 15911 ;;		_getADCError
 15912 ;;		_getCOMMError
 15913 ;;		_getCauseOfResetString
 15914 ;;		_getDeviceID
 15915 ;;		_getDeviceIDString
 15916 ;;		_getMajorRevisionID
 15917 ;;		_getMinorRevisionID
 15918 ;;		_getUserID
 15919 ;;		_printf
 15920 ;;		_readDoubleFromEEPROM
 15921 ;;		_strcmp
 15922 ;;		_strstr
 15923 ;;		_terminal_printNewline
 15924 ;;		_terminal_textAttributes
 15925 ;;		_terminal_textAttributesReset
 15926 ;;		_writeDoubleToEEPROM
 15927 ;; This function is called by:
 15928 ;;		_terminal_ringBufferPull
 15929 ;; This function uses a non-reentrant model
 15930 ;;
 15931                           
 15932                           	psect	text4
 15933  010000                     __ptext4:
 15934                           	opt stack 0
 15935  010000                     _ringBufferLUT:
 15936                           	opt stack 10
 15937                           
 15938                           ;ring_buffer_LUT.c: 67: if((0 == strcmp(line, "Reset"))) {
 15939                           
 15940                           ;incstack = 0
 15941  010000  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 15942  010004  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15943  010008  0E7B               	movlw	low (STR_179+10)
 15944  01000A  0101               	movlb	1	; () banked
 15945  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 15946  01000E  0EFD               	movlw	high (STR_179+10)
 15947  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15948  010012  ECD0  F0D1         	call	_strcmp	;wreg free
 15949  010016  0101               	movlb	1	; () banked
 15950  010018  5117               	movf	?_strcmp& (0+255),w,b
 15951  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15952  01001C  A4D8               	btfss	status,2,c
 15953  01001E  D026               	goto	l1463
 15954                           
 15955                           ; BSR set to: 1
 15956                           ;ring_buffer_LUT.c: 71: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 15957  010020  C0F6  F11B         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 15958  010024  C0F7  F11C         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 15959  010028  C0F8  F11D         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 15960  01002C  C0F9  F11E         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 15961  010030  0E5F               	movlw	low _Total_Energy_address
 15962  010032  6EF6               	movwf	tblptrl,c
 15963  010034                     	if	1	;There is more than 1 active tblptr byte
 15964  010034  0ECF               	movlw	high _Total_Energy_address
 15965  010036  6EF7               	movwf	tblptrh,c
 15966  010038                     	endif
 15967  010038                     	if	1	;There are 3 active tblptr bytes
 15968  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 15969  01003A  6EF8               	movwf	tblptru,c
 15970  01003C                     	endif
 15971  01003C  0009               	tblrd		*+
 15972  01003E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15973  010042  000A               	tblrd		*-
 15974  010044  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15975  010048  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 15976                           
 15977                           ;ring_buffer_LUT.c: 74: printf("\033[2J");
 15978  01004C  0EB2               	movlw	low STR_6
 15979  01004E  0101               	movlb	1	; () banked
 15980  010050  6FAC               	movwf	printf@f& (0+255),b
 15981  010052  0EFF               	movlw	high STR_6
 15982  010054  6FAD               	movwf	(printf@f+1)& (0+255),b
 15983  010056  ECC6  F0D4         	call	_printf	;wreg free
 15984                           
 15985                           ;ring_buffer_LUT.c: 77: printf("\033[H");
 15986  01005A  0EBB               	movlw	low STR_7
 15987  01005C  0101               	movlb	1	; () banked
 15988  01005E  6FAC               	movwf	printf@f& (0+255),b
 15989  010060  0EFF               	movlw	high STR_7
 15990  010062  6FAD               	movwf	(printf@f+1)& (0+255),b
 15991  010064  ECC6  F0D4         	call	_printf	;wreg free
 15992  010068  00FF               	reset		;# 
 15993                           
 15994                           ;ring_buffer_LUT.c: 82: }
 15995  01006A  0012               	return	
 15996  01006C                     l1463:
 15997                           
 15998                           ;ring_buffer_LUT.c: 85: else if((0 == strcmp(line, "Clear"))) {
 15999  01006C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16000  010070  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16001  010074  0EA7               	movlw	low STR_48
 16002  010076  0101               	movlb	1	; () banked
 16003  010078  6F19               	movwf	strcmp@s2& (0+255),b
 16004  01007A  0EFF               	movlw	high STR_48
 16005  01007C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16006  01007E  ECD0  F0D1         	call	_strcmp	;wreg free
 16007  010082  0101               	movlb	1	; () banked
 16008  010084  5117               	movf	?_strcmp& (0+255),w,b
 16009  010086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16010  010088  A4D8               	btfss	status,2,c
 16011  01008A  D00E               	goto	l1465
 16012                           
 16013                           ; BSR set to: 1
 16014                           ;ring_buffer_LUT.c: 88: printf("\033[2J");
 16015  01008C  0EB2               	movlw	low STR_6
 16016  01008E  6FAC               	movwf	printf@f& (0+255),b
 16017  010090  0EFF               	movlw	high STR_6
 16018  010092  6FAD               	movwf	(printf@f+1)& (0+255),b
 16019  010094  ECC6  F0D4         	call	_printf	;wreg free
 16020                           
 16021                           ;ring_buffer_LUT.c: 91: printf("\033[H");
 16022  010098  0EBB               	movlw	low STR_7
 16023  01009A  0101               	movlb	1	; () banked
 16024  01009C  6FAC               	movwf	printf@f& (0+255),b
 16025  01009E  0EFF               	movlw	high STR_7
 16026  0100A0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16027  0100A2  ECC6  F0D4         	call	_printf	;wreg free
 16028                           
 16029                           ;ring_buffer_LUT.c: 93: }
 16030  0100A6  0012               	return	
 16031  0100A8                     l1465:
 16032                           
 16033                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Cause of Reset?"))) {
 16034  0100A8  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16035  0100AC  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16036  0100B0  0EB1               	movlw	low STR_51
 16037  0100B2  0101               	movlb	1	; () banked
 16038  0100B4  6F19               	movwf	strcmp@s2& (0+255),b
 16039  0100B6  0EFD               	movlw	high STR_51
 16040  0100B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16041  0100BA  ECD0  F0D1         	call	_strcmp	;wreg free
 16042  0100BE  0101               	movlb	1	; () banked
 16043  0100C0  5117               	movf	?_strcmp& (0+255),w,b
 16044  0100C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16045  0100C4  A4D8               	btfss	status,2,c
 16046  0100C6  D019               	goto	l1467
 16047                           
 16048                           ; BSR set to: 1
 16049                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16050  0100C8  0E00               	movlw	0
 16051  0100CA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16052  0100CC  0E00               	movlw	0
 16053  0100CE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16054  0100D0  0E02               	movlw	2
 16055  0100D2  EC30  F0AA         	call	_terminal_textAttributes
 16056                           
 16057                           ;ring_buffer_LUT.c: 101: printf("The cause of the most recent device reset was: %s\n\r",
 16058                           ;ring_buffer_LUT.c: 102: getCauseOfResetString(reset_cause));
 16059  0100D6  0EA4               	movlw	low STR_52
 16060  0100D8  0101               	movlb	1	; () banked
 16061  0100DA  6FAC               	movwf	printf@f& (0+255),b
 16062  0100DC  0EF5               	movlw	high STR_52
 16063  0100DE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16064  0100E0  0102               	movlb	2	; () banked
 16065  0100E2  51F5               	movf	_reset_cause& (0+255),w,b
 16066  0100E4  EC68  F0D6         	call	_getCauseOfResetString
 16067  0100E8  C117  F1AE         	movff	?_getCauseOfResetString,?_printf+2
 16068  0100EC  C118  F1AF         	movff	?_getCauseOfResetString+1,?_printf+3
 16069  0100F0  ECC6  F0D4         	call	_printf	;wreg free
 16070                           
 16071                           ;ring_buffer_LUT.c: 104: terminal_textAttributesReset();
 16072  0100F4  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16073                           
 16074                           ;ring_buffer_LUT.c: 106: }
 16075  0100F8  0012               	return	
 16076  0100FA                     l1467:
 16077                           
 16078                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 16079  0100FA  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16080  0100FE  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16081  010102  0EA1               	movlw	low STR_53
 16082  010104  0101               	movlb	1	; () banked
 16083  010106  6F19               	movwf	strcmp@s2& (0+255),b
 16084  010108  0EFF               	movlw	high STR_53
 16085  01010A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16086  01010C  ECD0  F0D1         	call	_strcmp	;wreg free
 16087  010110  0101               	movlb	1	; () banked
 16088  010112  5117               	movf	?_strcmp& (0+255),w,b
 16089  010114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16090  010116  B4D8               	btfsc	status,2,c
 16091  010118  D00F               	goto	u33420
 16092                           
 16093                           ; BSR set to: 1
 16094  01011A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16095  01011E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16096  010122  0EB7               	movlw	low STR_54
 16097  010124  6F19               	movwf	strcmp@s2& (0+255),b
 16098  010126  0EFF               	movlw	high STR_54
 16099  010128  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16100  01012A  ECD0  F0D1         	call	_strcmp	;wreg free
 16101  01012E  0101               	movlb	1	; () banked
 16102  010130  5117               	movf	?_strcmp& (0+255),w,b
 16103  010132  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16104  010134  A4D8               	btfss	status,2,c
 16105  010136  D018               	goto	l1469
 16106  010138                     u33420:
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;ring_buffer_LUT.c: 111: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16110                           
 16111                           ; BSR set to: 1
 16112  010138  0E00               	movlw	0
 16113  01013A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16114  01013C  0E00               	movlw	0
 16115  01013E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16116  010140  0E02               	movlw	2
 16117  010142  EC30  F0AA         	call	_terminal_textAttributes
 16118                           
 16119                           ;ring_buffer_LUT.c: 112: printf("AC Power Meter\n\r");
 16120  010146  0EFA               	movlw	low STR_55
 16121  010148  0101               	movlb	1	; () banked
 16122  01014A  6FAC               	movwf	printf@f& (0+255),b
 16123  01014C  0EFC               	movlw	high STR_55
 16124  01014E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16125  010150  ECC6  F0D4         	call	_printf	;wreg free
 16126                           
 16127                           ;ring_buffer_LUT.c: 113: printf("Marquette University ELEN 3035 Final Project\n\r");
 16128  010154  0EA2               	movlw	low STR_56
 16129  010156  0101               	movlb	1	; () banked
 16130  010158  6FAC               	movwf	printf@f& (0+255),b
 16131  01015A  0EF6               	movlw	high STR_56
 16132  01015C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16133  01015E  ECC6  F0D4         	call	_printf	;wreg free
 16134                           
 16135                           ;ring_buffer_LUT.c: 114: terminal_textAttributesReset();
 16136  010162  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16137                           
 16138                           ;ring_buffer_LUT.c: 116: }
 16139  010166  0012               	return	
 16140  010168                     l1469:
 16141                           
 16142                           ;ring_buffer_LUT.c: 119: else if((0 == strcmp(line, "Device ID?"))) {
 16143  010168  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16144  01016C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16145  010170  0E48               	movlw	low STR_57
 16146  010172  0101               	movlb	1	; () banked
 16147  010174  6F19               	movwf	strcmp@s2& (0+255),b
 16148  010176  0EFF               	movlw	high STR_57
 16149  010178  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16150  01017A  ECD0  F0D1         	call	_strcmp	;wreg free
 16151  01017E  0101               	movlb	1	; () banked
 16152  010180  5117               	movf	?_strcmp& (0+255),w,b
 16153  010182  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16154  010184  A4D8               	btfss	status,2,c
 16155  010186  D023               	goto	l1473
 16156                           
 16157                           ; BSR set to: 1
 16158                           ;ring_buffer_LUT.c: 121: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16159  010188  0E00               	movlw	0
 16160  01018A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16161  01018C  0E00               	movlw	0
 16162  01018E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16163  010190  0E02               	movlw	2
 16164  010192  EC30  F0AA         	call	_terminal_textAttributes
 16165                           
 16166                           ;ring_buffer_LUT.c: 124: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 16167                           ;ring_buffer_LUT.c: 125: "part number of %s\n\r",
 16168                           ;ring_buffer_LUT.c: 126: getDeviceID(),
 16169                           ;ring_buffer_LUT.c: 127: getDeviceIDString(getDeviceID()));
 16170  010196  0EB7               	movlw	low STR_58
 16171  010198  0101               	movlb	1	; () banked
 16172  01019A  6FAC               	movwf	printf@f& (0+255),b
 16173  01019C  0EF0               	movlw	high STR_58
 16174  01019E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16175  0101A0  ECBD  F0D7         	call	_getDeviceID	;wreg free
 16176  0101A4  C122  F1AE         	movff	?_getDeviceID,?_printf+2
 16177  0101A8  C123  F1AF         	movff	?_getDeviceID+1,?_printf+3
 16178  0101AC  ECBD  F0D7         	call	_getDeviceID	;wreg free
 16179  0101B0  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 16180  0101B4  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 16181  0101B8  ECCC  F0D0         	call	_getDeviceIDString	;wreg free
 16182  0101BC  C124  F1B0         	movff	?_getDeviceIDString,?_printf+4
 16183  0101C0  C125  F1B1         	movff	?_getDeviceIDString+1,?_printf+5
 16184  0101C4  ECC6  F0D4         	call	_printf	;wreg free
 16185                           
 16186                           ;ring_buffer_LUT.c: 129: terminal_textAttributesReset();
 16187  0101C8  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16188                           
 16189                           ;ring_buffer_LUT.c: 131: }
 16190  0101CC  0012               	return	
 16191  0101CE                     l1473:
 16192                           
 16193                           ;ring_buffer_LUT.c: 134: else if((0 == strcmp(line, "Revision ID?"))) {
 16194  0101CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16195  0101D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16196  0101D6  0EB6               	movlw	low STR_59
 16197  0101D8  0101               	movlb	1	; () banked
 16198  0101DA  6F19               	movwf	strcmp@s2& (0+255),b
 16199  0101DC  0EFE               	movlw	high STR_59
 16200  0101DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16201  0101E0  ECD0  F0D1         	call	_strcmp	;wreg free
 16202  0101E4  0101               	movlb	1	; () banked
 16203  0101E6  5117               	movf	?_strcmp& (0+255),w,b
 16204  0101E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16205  0101EA  A4D8               	btfss	status,2,c
 16206  0101EC  D022               	goto	l1475
 16207                           
 16208                           ; BSR set to: 1
 16209                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16210  0101EE  0E00               	movlw	0
 16211  0101F0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16212  0101F2  0E00               	movlw	0
 16213  0101F4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16214  0101F6  0E02               	movlw	2
 16215  0101F8  EC30  F0AA         	call	_terminal_textAttributes
 16216                           
 16217                           ;ring_buffer_LUT.c: 139: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 16218                           ;ring_buffer_LUT.c: 140: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 16219  0101FC  0ED6               	movlw	low STR_60
 16220  0101FE  0101               	movlb	1	; () banked
 16221  010200  6FAC               	movwf	printf@f& (0+255),b
 16222  010202  0EF2               	movlw	high STR_60
 16223  010204  6FAD               	movwf	(printf@f+1)& (0+255),b
 16224  010206  ECA8  F0D4         	call	_getMajorRevisionID	;wreg free
 16225  01020A  0101               	movlb	1	; () banked
 16226  01020C  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 16227  01020E  0E41               	movlw	65
 16228  010210  25C1               	addwf	??_ringBufferLUT& (0+255),w,b
 16229  010212  6FAE               	movwf	(?_printf+2)& (0+255),b
 16230  010214  6BAF               	clrf	(?_printf+3)& (0+255),b
 16231  010216  0E00               	movlw	0
 16232  010218  23AF               	addwfc	(?_printf+3)& (0+255),f,b
 16233  01021A  EC18  F0D7         	call	_getMinorRevisionID	;wreg free
 16234  01021E  0101               	movlb	1	; () banked
 16235  010220  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 16236  010222  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 16237  010224  6FB0               	movwf	(?_printf+4)& (0+255),b
 16238  010226  6BB1               	clrf	(?_printf+5)& (0+255),b
 16239  010228  ECC6  F0D4         	call	_printf	;wreg free
 16240                           
 16241                           ;ring_buffer_LUT.c: 142: terminal_textAttributesReset();
 16242  01022C  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16243                           
 16244                           ;ring_buffer_LUT.c: 144: }
 16245  010230  0012               	return	
 16246  010232                     l1475:
 16247                           
 16248                           ;ring_buffer_LUT.c: 147: else if((0 == strcmp(line, "User IDs?"))) {
 16249  010232  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16250  010236  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16251  01023A  0E7D               	movlw	low STR_61
 16252  01023C  0101               	movlb	1	; () banked
 16253  01023E  6F19               	movwf	strcmp@s2& (0+255),b
 16254  010240  0EFF               	movlw	high STR_61
 16255  010242  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16256  010244  ECD0  F0D1         	call	_strcmp	;wreg free
 16257  010248  0101               	movlb	1	; () banked
 16258  01024A  5117               	movf	?_strcmp& (0+255),w,b
 16259  01024C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16260  01024E  A4D8               	btfss	status,2,c
 16261  010250  D03E               	goto	l1477
 16262                           
 16263                           ; BSR set to: 1
 16264                           ;ring_buffer_LUT.c: 149: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16265  010252  0E00               	movlw	0
 16266  010254  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16267  010256  0E00               	movlw	0
 16268  010258  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16269  01025A  0E02               	movlw	2
 16270  01025C  EC30  F0AA         	call	_terminal_textAttributes
 16271                           
 16272                           ;ring_buffer_LUT.c: 151: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 16273  010260  0EDD               	movlw	low STR_62
 16274  010262  0101               	movlb	1	; () banked
 16275  010264  6FAC               	movwf	printf@f& (0+255),b
 16276  010266  0EF1               	movlw	high STR_62
 16277  010268  6FAD               	movwf	(printf@f+1)& (0+255),b
 16278  01026A  ECC6  F0D4         	call	_printf	;wreg free
 16279                           
 16280                           ;ring_buffer_LUT.c: 154: for (int userID = 0; userID <= 7; userID++) {
 16281  01026E  0E00               	movlw	0
 16282  010270  0102               	movlb	2	; () banked
 16283  010272  6FC7               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 16284  010274  0E00               	movlw	0
 16285  010276  6FC6               	movwf	ringBufferLUT@userID& (0+255),b
 16286  010278                     l22901:
 16287                           
 16288                           ; BSR set to: 2
 16289  010278  BFC7               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 16290  01027A  D006               	goto	l1478
 16291  01027C  51C7               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 16292  01027E  E124               	bnz	l22911
 16293  010280  0E08               	movlw	8
 16294  010282  5DC6               	subwf	ringBufferLUT@userID& (0+255),w,b
 16295  010284  B0D8               	btfsc	status,0,c
 16296  010286  D020               	goto	u33470
 16297  010288                     l1478:
 16298                           
 16299                           ; BSR set to: 2
 16300                           ;ring_buffer_LUT.c: 156: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 16301                           ;ring_buffer_LUT.c: 157: userID,
 16302                           ;ring_buffer_LUT.c: 158: (2 * userID),
 16303                           ;ring_buffer_LUT.c: 159: getUserID(userID));
 16304                           
 16305                           ; BSR set to: 2
 16306  010288  0E65               	movlw	low STR_63
 16307  01028A  0101               	movlb	1	; () banked
 16308  01028C  6FAC               	movwf	printf@f& (0+255),b
 16309  01028E  0EF4               	movlw	high STR_63
 16310  010290  6FAD               	movwf	(printf@f+1)& (0+255),b
 16311  010292  C2C6  F1AE         	movff	ringBufferLUT@userID,?_printf+2
 16312  010296  C2C7  F1AF         	movff	ringBufferLUT@userID+1,?_printf+3
 16313  01029A  90D8               	bcf	status,0,c
 16314  01029C  0102               	movlb	2	; () banked
 16315  01029E  35C6               	rlcf	ringBufferLUT@userID& (0+255),w,b
 16316  0102A0  0101               	movlb	1	; () banked
 16317  0102A2  6FB0               	movwf	(?_printf+4)& (0+255),b
 16318  0102A4  0102               	movlb	2	; () banked
 16319  0102A6  35C7               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 16320  0102A8  0101               	movlb	1	; () banked
 16321  0102AA  6FB1               	movwf	(?_printf+5)& (0+255),b
 16322  0102AC  0102               	movlb	2	; () banked
 16323  0102AE  51C6               	movf	ringBufferLUT@userID& (0+255),w,b
 16324  0102B0  ECE6  F0D3         	call	_getUserID
 16325  0102B4  C122  F1B2         	movff	?_getUserID,?_printf+6
 16326  0102B8  C123  F1B3         	movff	?_getUserID+1,?_printf+7
 16327  0102BC  ECC6  F0D4         	call	_printf	;wreg free
 16328  0102C0  0102               	movlb	2	; () banked
 16329  0102C2  4BC6               	infsnz	ringBufferLUT@userID& (0+255),f,b
 16330  0102C4  2BC7               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 16331  0102C6  D7D8               	goto	l22901
 16332  0102C8                     u33470:
 16333  0102C8                     l22911:
 16334                           
 16335                           ; BSR set to: 2
 16336                           ;ring_buffer_LUT.c: 161: }
 16337                           ;ring_buffer_LUT.c: 163: terminal_textAttributesReset();
 16338  0102C8  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16339                           
 16340                           ;ring_buffer_LUT.c: 165: }
 16341  0102CC  0012               	return	
 16342  0102CE                     l1477:
 16343                           
 16344                           ;ring_buffer_LUT.c: 168: else if((0 == strcmp(line, "ADC Errors?"))) {
 16345  0102CE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16346  0102D2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16347  0102D6  0E0F               	movlw	low STR_64
 16348  0102D8  0101               	movlb	1	; () banked
 16349  0102DA  6F19               	movwf	strcmp@s2& (0+255),b
 16350  0102DC  0EFF               	movlw	high STR_64
 16351  0102DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16352  0102E0  ECD0  F0D1         	call	_strcmp	;wreg free
 16353  0102E4  0101               	movlb	1	; () banked
 16354  0102E6  5117               	movf	?_strcmp& (0+255),w,b
 16355  0102E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16356  0102EA  A4D8               	btfss	status,2,c
 16357  0102EC  D08C               	goto	l1481
 16358                           
 16359                           ; BSR set to: 1
 16360                           ;ring_buffer_LUT.c: 170: if (getADCError()) {
 16361  0102EE  EC01  F0D6         	call	_getADCError	;wreg free
 16362  0102F2  0900               	iorlw	0
 16363  0102F4  B4D8               	btfsc	status,2,c
 16364  0102F6  D075               	goto	l1482
 16365                           
 16366                           ;ring_buffer_LUT.c: 172: terminal_textAttributes(RED, BLACK, NORMAL);
 16367  0102F8  0E00               	movlw	0
 16368  0102FA  0101               	movlb	1	; () banked
 16369  0102FC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16370  0102FE  0E00               	movlw	0
 16371  010300  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16372  010302  0E01               	movlw	1
 16373  010304  EC30  F0AA         	call	_terminal_textAttributes
 16374                           
 16375                           ;ring_buffer_LUT.c: 173: printf("ADC error(s) detected!\n\r");
 16376  010308  0EA5               	movlw	low STR_65
 16377  01030A  0101               	movlb	1	; () banked
 16378  01030C  6FAC               	movwf	printf@f& (0+255),b
 16379  01030E  0EFB               	movlw	high STR_65
 16380  010310  6FAD               	movwf	(printf@f+1)& (0+255),b
 16381  010312  ECC6  F0D4         	call	_printf	;wreg free
 16382                           
 16383                           ;ring_buffer_LUT.c: 174: printf("The following channels caused an ADC error:\n\r");
 16384  010316  0ED1               	movlw	low STR_66
 16385  010318  0101               	movlb	1	; () banked
 16386  01031A  6FAC               	movwf	printf@f& (0+255),b
 16387  01031C  0EF6               	movlw	high STR_66
 16388  01031E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16389  010320  ECC6  F0D4         	call	_printf	;wreg free
 16390                           
 16391                           ;ring_buffer_LUT.c: 176: if (error_handler.ADC_general_error_flag) {
 16392  010324  0102               	movlb	2	; () banked
 16393  010326  5106               	movf	(_error_handler+6)& (0+255),w,b
 16394  010328  B4D8               	btfsc	status,2,c
 16395  01032A  D007               	goto	l1483
 16396                           
 16397                           ; BSR set to: 2
 16398                           ;ring_buffer_LUT.c: 177: printf("    General ADC error\n\r");
 16399  01032C  0EF0               	movlw	low STR_67
 16400  01032E  0101               	movlb	1	; () banked
 16401  010330  6FAC               	movwf	printf@f& (0+255),b
 16402  010332  0EFB               	movlw	high STR_67
 16403  010334  6FAD               	movwf	(printf@f+1)& (0+255),b
 16404  010336  ECC6  F0D4         	call	_printf	;wreg free
 16405  01033A                     l1483:
 16406                           
 16407                           ;ring_buffer_LUT.c: 178: }
 16408                           ;ring_buffer_LUT.c: 180: if (error_handler.AVSS_ADC_error_flag) {
 16409  01033A  0102               	movlb	2	; () banked
 16410  01033C  5103               	movf	(_error_handler+3)& (0+255),w,b
 16411  01033E  B4D8               	btfsc	status,2,c
 16412  010340  D007               	goto	l1484
 16413                           
 16414                           ; BSR set to: 2
 16415                           ;ring_buffer_LUT.c: 181: printf("    AVSS\n\r");
 16416  010342  0E3D               	movlw	low STR_68
 16417  010344  0101               	movlb	1	; () banked
 16418  010346  6FAC               	movwf	printf@f& (0+255),b
 16419  010348  0EFF               	movlw	high STR_68
 16420  01034A  6FAD               	movwf	(printf@f+1)& (0+255),b
 16421  01034C  ECC6  F0D4         	call	_printf	;wreg free
 16422  010350                     l1484:
 16423                           
 16424                           ;ring_buffer_LUT.c: 182: }
 16425                           ;ring_buffer_LUT.c: 184: if (error_handler.FVR_ADC_error_flag) {
 16426  010350  0102               	movlb	2	; () banked
 16427  010352  5105               	movf	(_error_handler+5)& (0+255),w,b
 16428  010354  B4D8               	btfsc	status,2,c
 16429  010356  D007               	goto	l1485
 16430                           
 16431                           ; BSR set to: 2
 16432                           ;ring_buffer_LUT.c: 185: printf("    FVR\n\r");
 16433  010358  0E73               	movlw	low STR_69
 16434  01035A  0101               	movlb	1	; () banked
 16435  01035C  6FAC               	movwf	printf@f& (0+255),b
 16436  01035E  0EFF               	movlw	high STR_69
 16437  010360  6FAD               	movwf	(printf@f+1)& (0+255),b
 16438  010362  ECC6  F0D4         	call	_printf	;wreg free
 16439  010366                     l1485:
 16440                           
 16441                           ;ring_buffer_LUT.c: 186: }
 16442                           ;ring_buffer_LUT.c: 188: if (error_handler.ISNS_ADC_error_flag) {
 16443  010366  0102               	movlb	2	; () banked
 16444  010368  5100               	movf	_error_handler& (0+255),w,b
 16445  01036A  B4D8               	btfsc	status,2,c
 16446  01036C  D007               	goto	l1486
 16447                           
 16448                           ; BSR set to: 2
 16449                           ;ring_buffer_LUT.c: 189: printf("    ISNS\n\r");
 16450  01036E  0E32               	movlw	low STR_70
 16451  010370  0101               	movlb	1	; () banked
 16452  010372  6FAC               	movwf	printf@f& (0+255),b
 16453  010374  0EFF               	movlw	high STR_70
 16454  010376  6FAD               	movwf	(printf@f+1)& (0+255),b
 16455  010378  ECC6  F0D4         	call	_printf	;wreg free
 16456  01037C                     l1486:
 16457                           
 16458                           ;ring_buffer_LUT.c: 190: }
 16459                           ;ring_buffer_LUT.c: 192: if (error_handler.POS12_ADC_error_flag) {
 16460  01037C  0102               	movlb	2	; () banked
 16461  01037E  5101               	movf	(_error_handler+1)& (0+255),w,b
 16462  010380  B4D8               	btfsc	status,2,c
 16463  010382  D007               	goto	l1487
 16464                           
 16465                           ; BSR set to: 2
 16466                           ;ring_buffer_LUT.c: 193: printf("    POS12\n\r");
 16467  010384  0E03               	movlw	low STR_71
 16468  010386  0101               	movlb	1	; () banked
 16469  010388  6FAC               	movwf	printf@f& (0+255),b
 16470  01038A  0EFF               	movlw	high STR_71
 16471  01038C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16472  01038E  ECC6  F0D4         	call	_printf	;wreg free
 16473  010392                     l1487:
 16474                           
 16475                           ;ring_buffer_LUT.c: 194: }
 16476                           ;ring_buffer_LUT.c: 196: if (error_handler.POS3P3_ADC_error_flag) {
 16477  010392  0102               	movlb	2	; () banked
 16478  010394  5102               	movf	(_error_handler+2)& (0+255),w,b
 16479  010396  B4D8               	btfsc	status,2,c
 16480  010398  D007               	goto	l1488
 16481                           
 16482                           ; BSR set to: 2
 16483                           ;ring_buffer_LUT.c: 197: printf("    POS3P3\n\r");
 16484  01039A  0E9C               	movlw	low STR_72
 16485  01039C  0101               	movlb	1	; () banked
 16486  01039E  6FAC               	movwf	printf@f& (0+255),b
 16487  0103A0  0EFE               	movlw	high STR_72
 16488  0103A2  6FAD               	movwf	(printf@f+1)& (0+255),b
 16489  0103A4  ECC6  F0D4         	call	_printf	;wreg free
 16490  0103A8                     l1488:
 16491                           
 16492                           ;ring_buffer_LUT.c: 198: }
 16493                           ;ring_buffer_LUT.c: 200: if (error_handler.Temp_ADC_error_flag) {
 16494  0103A8  0102               	movlb	2	; () banked
 16495  0103AA  5104               	movf	(_error_handler+4)& (0+255),w,b
 16496  0103AC  B4D8               	btfsc	status,2,c
 16497  0103AE  D007               	goto	l1489
 16498                           
 16499                           ; BSR set to: 2
 16500                           ;ring_buffer_LUT.c: 201: printf("    Die Temp\n\r");
 16501  0103B0  0EF0               	movlw	low STR_73
 16502  0103B2  0101               	movlb	1	; () banked
 16503  0103B4  6FAC               	movwf	printf@f& (0+255),b
 16504  0103B6  0EFD               	movlw	high STR_73
 16505  0103B8  6FAD               	movwf	(printf@f+1)& (0+255),b
 16506  0103BA  ECC6  F0D4         	call	_printf	;wreg free
 16507  0103BE                     l1489:
 16508                           
 16509                           ;ring_buffer_LUT.c: 202: }
 16510                           ;ring_buffer_LUT.c: 204: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16511  0103BE  0E00               	movlw	0
 16512  0103C0  0101               	movlb	1	; () banked
 16513  0103C2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16514  0103C4  0E00               	movlw	0
 16515  0103C6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16516  0103C8  0E03               	movlw	3
 16517  0103CA  EC30  F0AA         	call	_terminal_textAttributes
 16518                           
 16519                           ;ring_buffer_LUT.c: 205: printf("Call 'Clear ADC Errors' to clear ADC error(s)\n\r");
 16520  0103CE  0E72               	movlw	low STR_74
 16521  0103D0  0101               	movlb	1	; () banked
 16522  0103D2  6FAC               	movwf	printf@f& (0+255),b
 16523  0103D4  0EF6               	movlw	high STR_74
 16524  0103D6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16525  0103D8  ECC6  F0D4         	call	_printf	;wreg free
 16526                           
 16527                           ;ring_buffer_LUT.c: 206: terminal_textAttributesReset();
 16528  0103DC  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16529                           
 16530                           ;ring_buffer_LUT.c: 208: }
 16531  0103E0  0012               	return	
 16532  0103E2                     l1482:
 16533                           
 16534                           ;ring_buffer_LUT.c: 210: else {
 16535                           ;ring_buffer_LUT.c: 212: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16536  0103E2  0E00               	movlw	0
 16537  0103E4  0101               	movlb	1	; () banked
 16538  0103E6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16539  0103E8  0E00               	movlw	0
 16540  0103EA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16541  0103EC  0E02               	movlw	2
 16542  0103EE  EC30  F0AA         	call	_terminal_textAttributes
 16543                           
 16544                           ;ring_buffer_LUT.c: 213: printf("No ADC error(s) detected\n\r");
 16545  0103F2  0E70               	movlw	low STR_75
 16546  0103F4  0101               	movlb	1	; () banked
 16547  0103F6  6FAC               	movwf	printf@f& (0+255),b
 16548  0103F8  0EFB               	movlw	high STR_75
 16549  0103FA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16550  0103FC  ECC6  F0D4         	call	_printf	;wreg free
 16551                           
 16552                           ;ring_buffer_LUT.c: 214: terminal_textAttributesReset();
 16553  010400  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16554                           
 16555                           ;ring_buffer_LUT.c: 216: }
 16556                           ;ring_buffer_LUT.c: 218: }
 16557  010404  0012               	return	
 16558  010406                     l1481:
 16559                           
 16560                           ;ring_buffer_LUT.c: 221: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 16561  010406  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16562  01040A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16563  01040E  0E60               	movlw	low STR_76
 16564  010410  0101               	movlb	1	; () banked
 16565  010412  6F19               	movwf	strcmp@s2& (0+255),b
 16566  010414  0EFD               	movlw	high STR_76
 16567  010416  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16568  010418  ECD0  F0D1         	call	_strcmp	;wreg free
 16569  01041C  0101               	movlb	1	; () banked
 16570  01041E  5117               	movf	?_strcmp& (0+255),w,b
 16571  010420  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16572  010422  A4D8               	btfss	status,2,c
 16573  010424  D014               	goto	l1492
 16574                           
 16575                           ; BSR set to: 1
 16576                           ;ring_buffer_LUT.c: 223: clearADCErrors();
 16577  010426  EC9B  F0D7         	call	_clearADCErrors	;wreg free
 16578                           
 16579                           ;ring_buffer_LUT.c: 225: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16580  01042A  0E00               	movlw	0
 16581  01042C  0101               	movlb	1	; () banked
 16582  01042E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16583  010430  0E00               	movlw	0
 16584  010432  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16585  010434  0E02               	movlw	2
 16586  010436  EC30  F0AA         	call	_terminal_textAttributes
 16587                           
 16588                           ;ring_buffer_LUT.c: 226: printf("ADC Error(s) cleared\n\r");
 16589  01043A  0E1F               	movlw	low STR_77
 16590  01043C  0101               	movlb	1	; () banked
 16591  01043E  6FAC               	movwf	printf@f& (0+255),b
 16592  010440  0EFC               	movlw	high STR_77
 16593  010442  6FAD               	movwf	(printf@f+1)& (0+255),b
 16594  010444  ECC6  F0D4         	call	_printf	;wreg free
 16595                           
 16596                           ;ring_buffer_LUT.c: 227: terminal_textAttributesReset();
 16597  010448  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16598                           
 16599                           ;ring_buffer_LUT.c: 229: }
 16600  01044C  0012               	return	
 16601  01044E                     l1492:
 16602                           
 16603                           ;ring_buffer_LUT.c: 232: else if((0 == strcmp(line, "Comm Errors?"))) {
 16604  01044E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16605  010452  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16606  010456  0ED0               	movlw	low STR_78
 16607  010458  0101               	movlb	1	; () banked
 16608  01045A  6F19               	movwf	strcmp@s2& (0+255),b
 16609  01045C  0EFE               	movlw	high STR_78
 16610  01045E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16611  010460  ECD0  F0D1         	call	_strcmp	;wreg free
 16612  010464  0101               	movlb	1	; () banked
 16613  010466  5117               	movf	?_strcmp& (0+255),w,b
 16614  010468  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16615  01046A  A4D8               	btfss	status,2,c
 16616  01046C  D04E               	goto	l1494
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;ring_buffer_LUT.c: 234: if (getCOMMError()) {
 16620  01046E  EC6E  F0D8         	call	_getCOMMError	;wreg free
 16621  010472  0900               	iorlw	0
 16622  010474  B4D8               	btfsc	status,2,c
 16623  010476  D037               	goto	l1495
 16624                           
 16625                           ;ring_buffer_LUT.c: 236: terminal_textAttributes(RED, BLACK, NORMAL);
 16626  010478  0E00               	movlw	0
 16627  01047A  0101               	movlb	1	; () banked
 16628  01047C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16629  01047E  0E00               	movlw	0
 16630  010480  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16631  010482  0E01               	movlw	1
 16632  010484  EC30  F0AA         	call	_terminal_textAttributes
 16633                           
 16634                           ;ring_buffer_LUT.c: 237: printf("Communications error(s) detected! Interfaces causing er
      +                          ror(s):\n\r");
 16635  010488  0E9C               	movlw	low STR_79
 16636  01048A  0101               	movlb	1	; () banked
 16637  01048C  6FAC               	movwf	printf@f& (0+255),b
 16638  01048E  0EF1               	movlw	high STR_79
 16639  010490  6FAD               	movwf	(printf@f+1)& (0+255),b
 16640  010492  ECC6  F0D4         	call	_printf	;wreg free
 16641                           
 16642                           ;ring_buffer_LUT.c: 239: if (error_handler.I2C_COMM_error_flag) {
 16643  010496  0102               	movlb	2	; () banked
 16644  010498  5107               	movf	(_error_handler+7)& (0+255),w,b
 16645  01049A  B4D8               	btfsc	status,2,c
 16646  01049C  D007               	goto	l1496
 16647                           
 16648                           ; BSR set to: 2
 16649                           ;ring_buffer_LUT.c: 240: printf("    OLED Display I2C\n\r");
 16650  01049E  0E08               	movlw	low STR_80
 16651  0104A0  0101               	movlb	1	; () banked
 16652  0104A2  6FAC               	movwf	printf@f& (0+255),b
 16653  0104A4  0EFC               	movlw	high STR_80
 16654  0104A6  6FAD               	movwf	(printf@f+1)& (0+255),b
 16655  0104A8  ECC6  F0D4         	call	_printf	;wreg free
 16656  0104AC                     l1496:
 16657                           
 16658                           ;ring_buffer_LUT.c: 241: }
 16659                           ;ring_buffer_LUT.c: 243: if (error_handler.USB_UART_COMM_error_flag) {
 16660  0104AC  0102               	movlb	2	; () banked
 16661  0104AE  5108               	movf	(_error_handler+8)& (0+255),w,b
 16662  0104B0  B4D8               	btfsc	status,2,c
 16663  0104B2  D007               	goto	l1497
 16664                           
 16665                           ; BSR set to: 2
 16666                           ;ring_buffer_LUT.c: 244: printf("    USB UART (this interface\n\r");
 16667  0104B4  0E6A               	movlw	low STR_81
 16668  0104B6  0101               	movlb	1	; () banked
 16669  0104B8  6FAC               	movwf	printf@f& (0+255),b
 16670  0104BA  0EFA               	movlw	high STR_81
 16671  0104BC  6FAD               	movwf	(printf@f+1)& (0+255),b
 16672  0104BE  ECC6  F0D4         	call	_printf	;wreg free
 16673  0104C2                     l1497:
 16674                           
 16675                           ;ring_buffer_LUT.c: 245: }
 16676                           ;ring_buffer_LUT.c: 247: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16677  0104C2  0E00               	movlw	0
 16678  0104C4  0101               	movlb	1	; () banked
 16679  0104C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16680  0104C8  0E00               	movlw	0
 16681  0104CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16682  0104CC  0E03               	movlw	3
 16683  0104CE  EC30  F0AA         	call	_terminal_textAttributes
 16684                           
 16685                           ;ring_buffer_LUT.c: 248: printf("Call 'Clear COMM Errors' to clear communications error(
      +                          s)\n\r");
 16686  0104D2  0E9A               	movlw	low STR_82
 16687  0104D4  0101               	movlb	1	; () banked
 16688  0104D6  6FAC               	movwf	printf@f& (0+255),b
 16689  0104D8  0EF2               	movlw	high STR_82
 16690  0104DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16691  0104DC  ECC6  F0D4         	call	_printf	;wreg free
 16692                           
 16693                           ;ring_buffer_LUT.c: 249: terminal_textAttributesReset();
 16694  0104E0  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16695                           
 16696                           ;ring_buffer_LUT.c: 251: }
 16697  0104E4  0012               	return	
 16698  0104E6                     l1495:
 16699                           
 16700                           ;ring_buffer_LUT.c: 253: else {
 16701                           ;ring_buffer_LUT.c: 255: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16702  0104E6  0E00               	movlw	0
 16703  0104E8  0101               	movlb	1	; () banked
 16704  0104EA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16705  0104EC  0E00               	movlw	0
 16706  0104EE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16707  0104F0  0E02               	movlw	2
 16708  0104F2  EC30  F0AA         	call	_terminal_textAttributes
 16709                           
 16710                           ;ring_buffer_LUT.c: 256: printf("No communications error(s) detected\n\r");
 16711  0104F6  0E83               	movlw	low STR_83
 16712  0104F8  0101               	movlb	1	; () banked
 16713  0104FA  6FAC               	movwf	printf@f& (0+255),b
 16714  0104FC  0EF8               	movlw	high STR_83
 16715  0104FE  6FAD               	movwf	(printf@f+1)& (0+255),b
 16716  010500  ECC6  F0D4         	call	_printf	;wreg free
 16717                           
 16718                           ;ring_buffer_LUT.c: 257: terminal_textAttributesReset();
 16719  010504  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16720                           
 16721                           ;ring_buffer_LUT.c: 259: }
 16722                           ;ring_buffer_LUT.c: 260: }
 16723  010508  0012               	return	
 16724  01050A                     l1494:
 16725                           
 16726                           ;ring_buffer_LUT.c: 263: else if((0 == strcmp(line, "Clear Comm Errors"))) {
 16727  01050A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16728  01050E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16729  010512  0ED7               	movlw	low STR_84
 16730  010514  0101               	movlb	1	; () banked
 16731  010516  6F19               	movwf	strcmp@s2& (0+255),b
 16732  010518  0EFC               	movlw	high STR_84
 16733  01051A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16734  01051C  ECD0  F0D1         	call	_strcmp	;wreg free
 16735  010520  0101               	movlb	1	; () banked
 16736  010522  5117               	movf	?_strcmp& (0+255),w,b
 16737  010524  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16738  010526  A4D8               	btfss	status,2,c
 16739  010528  D014               	goto	l1500
 16740                           
 16741                           ; BSR set to: 1
 16742                           ;ring_buffer_LUT.c: 265: clearCOMMErrors();
 16743  01052A  ECC9  F0D8         	call	_clearCOMMErrors	;wreg free
 16744                           
 16745                           ;ring_buffer_LUT.c: 267: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16746  01052E  0E00               	movlw	0
 16747  010530  0101               	movlb	1	; () banked
 16748  010532  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16749  010534  0E00               	movlw	0
 16750  010536  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16751  010538  0E02               	movlw	2
 16752  01053A  EC30  F0AA         	call	_terminal_textAttributes
 16753                           
 16754                           ;ring_buffer_LUT.c: 268: printf("Communications error(s) cleared\n\r");
 16755  01053E  0E82               	movlw	low STR_85
 16756  010540  0101               	movlb	1	; () banked
 16757  010542  6FAC               	movwf	printf@f& (0+255),b
 16758  010544  0EF9               	movlw	high STR_85
 16759  010546  6FAD               	movwf	(printf@f+1)& (0+255),b
 16760  010548  ECC6  F0D4         	call	_printf	;wreg free
 16761                           
 16762                           ;ring_buffer_LUT.c: 269: terminal_textAttributesReset();
 16763  01054C  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16764                           
 16765                           ;ring_buffer_LUT.c: 271: }
 16766  010550  0012               	return	
 16767  010552                     l1500:
 16768                           
 16769                           ;ring_buffer_LUT.c: 275: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 16770  010552  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16771  010556  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16772  01055A  0E91               	movlw	low STR_86
 16773  01055C  0101               	movlb	1	; () banked
 16774  01055E  6F19               	movwf	strcmp@s2& (0+255),b
 16775  010560  0EFD               	movlw	high STR_86
 16776  010562  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16777  010564  ECD0  F0D1         	call	_strcmp	;wreg free
 16778  010568  0101               	movlb	1	; () banked
 16779  01056A  5117               	movf	?_strcmp& (0+255),w,b
 16780  01056C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16781  01056E  A4D8               	btfss	status,2,c
 16782  010570  D019               	goto	l1502
 16783                           
 16784                           ; BSR set to: 1
 16785                           ;ring_buffer_LUT.c: 277: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16786  010572  0E00               	movlw	0
 16787  010574  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16788  010576  0E00               	movlw	0
 16789  010578  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16790  01057A  0E06               	movlw	6
 16791  01057C  EC30  F0AA         	call	_terminal_textAttributes
 16792                           
 16793                           ;ring_buffer_LUT.c: 278: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 16794  010580  0ECE               	movlw	low STR_87
 16795  010582  0101               	movlb	1	; () banked
 16796  010584  6FAC               	movwf	printf@f& (0+255),b
 16797  010586  0EF8               	movlw	high STR_87
 16798  010588  6FAD               	movwf	(printf@f+1)& (0+255),b
 16799  01058A  C1DA  F1AE         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 16800  01058E  C1DB  F1AF         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 16801  010592  C1DC  F1B0         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 16802  010596  C1DD  F1B1         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 16803  01059A  ECC6  F0D4         	call	_printf	;wreg free
 16804                           
 16805                           ;ring_buffer_LUT.c: 279: terminal_textAttributesReset();
 16806  01059E  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16807                           
 16808                           ;ring_buffer_LUT.c: 281: }
 16809  0105A2  0012               	return	
 16810  0105A4                     l1502:
 16811                           
 16812                           ;ring_buffer_LUT.c: 284: else if((0 == strcmp(line, "Measure POS12?"))) {
 16813  0105A4  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16814  0105A8  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16815  0105AC  0EFF               	movlw	low STR_88
 16816  0105AE  0101               	movlb	1	; () banked
 16817  0105B0  6F19               	movwf	strcmp@s2& (0+255),b
 16818  0105B2  0EFD               	movlw	high STR_88
 16819  0105B4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16820  0105B6  ECD0  F0D1         	call	_strcmp	;wreg free
 16821  0105BA  0101               	movlb	1	; () banked
 16822  0105BC  5117               	movf	?_strcmp& (0+255),w,b
 16823  0105BE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16824  0105C0  A4D8               	btfss	status,2,c
 16825  0105C2  D019               	goto	l1504
 16826                           
 16827                           ; BSR set to: 1
 16828                           ;ring_buffer_LUT.c: 286: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16829  0105C4  0E00               	movlw	0
 16830  0105C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16831  0105C8  0E00               	movlw	0
 16832  0105CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16833  0105CC  0E06               	movlw	6
 16834  0105CE  EC30  F0AA         	call	_terminal_textAttributes
 16835                           
 16836                           ;ring_buffer_LUT.c: 287: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 16837  0105D2  0E3C               	movlw	low STR_89
 16838  0105D4  0101               	movlb	1	; () banked
 16839  0105D6  6FAC               	movwf	printf@f& (0+255),b
 16840  0105D8  0EF9               	movlw	high STR_89
 16841  0105DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 16842  0105DC  C1D6  F1AE         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 16843  0105E0  C1D7  F1AF         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 16844  0105E4  C1D8  F1B0         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 16845  0105E8  C1D9  F1B1         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 16846  0105EC  ECC6  F0D4         	call	_printf	;wreg free
 16847                           
 16848                           ;ring_buffer_LUT.c: 288: terminal_textAttributesReset();
 16849  0105F0  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16850                           
 16851                           ;ring_buffer_LUT.c: 290: }
 16852  0105F4  0012               	return	
 16853  0105F6                     l1504:
 16854                           
 16855                           ;ring_buffer_LUT.c: 293: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 16856  0105F6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16857  0105FA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16858  0105FE  0EC5               	movlw	low STR_90
 16859  010600  0101               	movlb	1	; () banked
 16860  010602  6F19               	movwf	strcmp@s2& (0+255),b
 16861  010604  0EFC               	movlw	high STR_90
 16862  010606  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16863  010608  ECD0  F0D1         	call	_strcmp	;wreg free
 16864  01060C  0101               	movlb	1	; () banked
 16865  01060E  5117               	movf	?_strcmp& (0+255),w,b
 16866  010610  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16867  010612  A4D8               	btfss	status,2,c
 16868  010614  D019               	goto	l1506
 16869                           
 16870                           ; BSR set to: 1
 16871                           ;ring_buffer_LUT.c: 295: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16872  010616  0E00               	movlw	0
 16873  010618  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16874  01061A  0E00               	movlw	0
 16875  01061C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16876  01061E  0E06               	movlw	6
 16877  010620  EC30  F0AA         	call	_terminal_textAttributes
 16878                           
 16879                           ;ring_buffer_LUT.c: 296: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 16880  010624  0E18               	movlw	low STR_91
 16881  010626  0101               	movlb	1	; () banked
 16882  010628  6FAC               	movwf	printf@f& (0+255),b
 16883  01062A  0EF9               	movlw	high STR_91
 16884  01062C  6FAD               	movwf	(printf@f+1)& (0+255),b
 16885  01062E  C1D2  F1AE         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 16886  010632  C1D3  F1AF         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 16887  010636  C1D4  F1B0         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 16888  01063A  C1D5  F1B1         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 16889  01063E  ECC6  F0D4         	call	_printf	;wreg free
 16890                           
 16891                           ;ring_buffer_LUT.c: 297: terminal_textAttributesReset();
 16892  010642  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16893                           
 16894                           ;ring_buffer_LUT.c: 301: }
 16895  010646  0012               	return	
 16896  010648                     l1506:
 16897                           
 16898                           ;ring_buffer_LUT.c: 304: else if((0 == strcmp(line, "Measure FVR?"))) {
 16899  010648  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16900  01064C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16901  010650  0EC3               	movlw	low STR_92
 16902  010652  0101               	movlb	1	; () banked
 16903  010654  6F19               	movwf	strcmp@s2& (0+255),b
 16904  010656  0EFE               	movlw	high STR_92
 16905  010658  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16906  01065A  ECD0  F0D1         	call	_strcmp	;wreg free
 16907  01065E  0101               	movlb	1	; () banked
 16908  010660  5117               	movf	?_strcmp& (0+255),w,b
 16909  010662  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16910  010664  A4D8               	btfss	status,2,c
 16911  010666  D019               	goto	l1508
 16912                           
 16913                           ; BSR set to: 1
 16914                           ;ring_buffer_LUT.c: 306: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16915  010668  0E00               	movlw	0
 16916  01066A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16917  01066C  0E00               	movlw	0
 16918  01066E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16919  010670  0E06               	movlw	6
 16920  010672  EC30  F0AA         	call	_terminal_textAttributes
 16921                           
 16922                           ;ring_buffer_LUT.c: 307: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 16923  010676  0E86               	movlw	low STR_93
 16924  010678  0101               	movlb	1	; () banked
 16925  01067A  6FAC               	movwf	printf@f& (0+255),b
 16926  01067C  0EF3               	movlw	high STR_93
 16927  01067E  6FAD               	movwf	(printf@f+1)& (0+255),b
 16928  010680  C1E2  F1AE         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 16929  010684  C1E3  F1AF         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 16930  010688  C1E4  F1B0         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 16931  01068C  C1E5  F1B1         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 16932  010690  ECC6  F0D4         	call	_printf	;wreg free
 16933                           
 16934                           ;ring_buffer_LUT.c: 308: terminal_textAttributesReset();
 16935  010694  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16936                           
 16937                           ;ring_buffer_LUT.c: 310: }
 16938  010698  0012               	return	
 16939  01069A                     l1508:
 16940                           
 16941                           ;ring_buffer_LUT.c: 313: else if((0 == strcmp(line, "Measure AVSS?"))) {
 16942  01069A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16943  01069E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16944  0106A2  0E3B               	movlw	low STR_94
 16945  0106A4  0101               	movlb	1	; () banked
 16946  0106A6  6F19               	movwf	strcmp@s2& (0+255),b
 16947  0106A8  0EFE               	movlw	high STR_94
 16948  0106AA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16949  0106AC  ECD0  F0D1         	call	_strcmp	;wreg free
 16950  0106B0  0101               	movlb	1	; () banked
 16951  0106B2  5117               	movf	?_strcmp& (0+255),w,b
 16952  0106B4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16953  0106B6  A4D8               	btfss	status,2,c
 16954  0106B8  D019               	goto	l1510
 16955                           
 16956                           ; BSR set to: 1
 16957                           ;ring_buffer_LUT.c: 315: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16958  0106BA  0E00               	movlw	0
 16959  0106BC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 16960  0106BE  0E00               	movlw	0
 16961  0106C0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16962  0106C2  0E06               	movlw	6
 16963  0106C4  EC30  F0AA         	call	_terminal_textAttributes
 16964                           
 16965                           ;ring_buffer_LUT.c: 316: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 16966  0106C8  0EA9               	movlw	low STR_95
 16967  0106CA  0101               	movlb	1	; () banked
 16968  0106CC  6FAC               	movwf	printf@f& (0+255),b
 16969  0106CE  0EF8               	movlw	high STR_95
 16970  0106D0  6FAD               	movwf	(printf@f+1)& (0+255),b
 16971  0106D2  C240  F1AE         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 16972  0106D6  C241  F1AF         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 16973  0106DA  C242  F1B0         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 16974  0106DE  C243  F1B1         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 16975  0106E2  ECC6  F0D4         	call	_printf	;wreg free
 16976                           
 16977                           ;ring_buffer_LUT.c: 317: terminal_textAttributesReset();
 16978  0106E6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 16979                           
 16980                           ;ring_buffer_LUT.c: 319: }
 16981  0106EA  0012               	return	
 16982  0106EC                     l1510:
 16983                           
 16984                           ;ring_buffer_LUT.c: 322: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 16985  0106EC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 16986  0106F0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16987  0106F4  0E8B               	movlw	low STR_96
 16988  0106F6  0101               	movlb	1	; () banked
 16989  0106F8  6F19               	movwf	strcmp@s2& (0+255),b
 16990  0106FA  0EFB               	movlw	high STR_96
 16991  0106FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16992  0106FE  ECD0  F0D1         	call	_strcmp	;wreg free
 16993  010702  0101               	movlb	1	; () banked
 16994  010704  5117               	movf	?_strcmp& (0+255),w,b
 16995  010706  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16996  010708  A4D8               	btfss	status,2,c
 16997  01070A  D019               	goto	l1512
 16998                           
 16999                           ; BSR set to: 1
 17000                           ;ring_buffer_LUT.c: 324: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17001  01070C  0E00               	movlw	0
 17002  01070E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17003  010710  0E00               	movlw	0
 17004  010712  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17005  010714  0E06               	movlw	6
 17006  010716  EC30  F0AA         	call	_terminal_textAttributes
 17007                           
 17008                           ;ring_buffer_LUT.c: 325: printf("Measured Current is %.3f Amps\n\r", Imeas);
 17009  01071A  0E2B               	movlw	low STR_97
 17010  01071C  0101               	movlb	1	; () banked
 17011  01071E  6FAC               	movwf	printf@f& (0+255),b
 17012  010720  0EFA               	movlw	high STR_97
 17013  010722  6FAD               	movwf	(printf@f+1)& (0+255),b
 17014  010724  C234  F1AE         	movff	_Imeas,?_printf+2	;volatile
 17015  010728  C235  F1AF         	movff	_Imeas+1,?_printf+3	;volatile
 17016  01072C  C236  F1B0         	movff	_Imeas+2,?_printf+4	;volatile
 17017  010730  C237  F1B1         	movff	_Imeas+3,?_printf+5	;volatile
 17018  010734  ECC6  F0D4         	call	_printf	;wreg free
 17019                           
 17020                           ;ring_buffer_LUT.c: 326: terminal_textAttributesReset();
 17021  010738  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17022                           
 17023                           ;ring_buffer_LUT.c: 328: }
 17024  01073C  0012               	return	
 17025  01073E                     l1512:
 17026                           
 17027                           ;ring_buffer_LUT.c: 331: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 17028  01073E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17029  010742  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17030  010746  0E76               	movlw	low STR_98
 17031  010748  0101               	movlb	1	; () banked
 17032  01074A  6F19               	movwf	strcmp@s2& (0+255),b
 17033  01074C  0EFC               	movlw	high STR_98
 17034  01074E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17035  010750  ECD0  F0D1         	call	_strcmp	;wreg free
 17036  010754  0101               	movlb	1	; () banked
 17037  010756  5117               	movf	?_strcmp& (0+255),w,b
 17038  010758  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17039  01075A  A4D8               	btfss	status,2,c
 17040  01075C  D019               	goto	l1514
 17041                           
 17042                           ; BSR set to: 1
 17043                           ;ring_buffer_LUT.c: 333: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17044  01075E  0E00               	movlw	0
 17045  010760  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17046  010762  0E00               	movlw	0
 17047  010764  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17048  010766  0E06               	movlw	6
 17049  010768  EC30  F0AA         	call	_terminal_textAttributes
 17050                           
 17051                           ;ring_buffer_LUT.c: 334: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 17052  01076C  0EA4               	movlw	low STR_99
 17053  01076E  0101               	movlb	1	; () banked
 17054  010770  6FAC               	movwf	printf@f& (0+255),b
 17055  010772  0EF9               	movlw	high STR_99
 17056  010774  6FAD               	movwf	(printf@f+1)& (0+255),b
 17057  010776  C1CA  F1AE         	movff	_Irms,?_printf+2	;volatile
 17058  01077A  C1CB  F1AF         	movff	_Irms+1,?_printf+3	;volatile
 17059  01077E  C1CC  F1B0         	movff	_Irms+2,?_printf+4	;volatile
 17060  010782  C1CD  F1B1         	movff	_Irms+3,?_printf+5	;volatile
 17061  010786  ECC6  F0D4         	call	_printf	;wreg free
 17062                           
 17063                           ;ring_buffer_LUT.c: 335: terminal_textAttributesReset();
 17064  01078A  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17065                           
 17066                           ;ring_buffer_LUT.c: 337: }
 17067  01078E  0012               	return	
 17068  010790                     l1514:
 17069                           
 17070                           ;ring_buffer_LUT.c: 340: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 17071  010790  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17072  010794  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17073  010798  0E61               	movlw	low STR_100
 17074  01079A  0101               	movlb	1	; () banked
 17075  01079C  6F19               	movwf	strcmp@s2& (0+255),b
 17076  01079E  0EFC               	movlw	high STR_100
 17077  0107A0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17078  0107A2  ECD0  F0D1         	call	_strcmp	;wreg free
 17079  0107A6  0101               	movlb	1	; () banked
 17080  0107A8  5117               	movf	?_strcmp& (0+255),w,b
 17081  0107AA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17082  0107AC  A4D8               	btfss	status,2,c
 17083  0107AE  D019               	goto	l1516
 17084                           
 17085                           ; BSR set to: 1
 17086                           ;ring_buffer_LUT.c: 342: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17087  0107B0  0E00               	movlw	0
 17088  0107B2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17089  0107B4  0E00               	movlw	0
 17090  0107B6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17091  0107B8  0E06               	movlw	6
 17092  0107BA  EC30  F0AA         	call	_terminal_textAttributes
 17093                           
 17094                           ;ring_buffer_LUT.c: 343: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 17095  0107BE  0EC6               	movlw	low STR_101
 17096  0107C0  0101               	movlb	1	; () banked
 17097  0107C2  6FAC               	movwf	printf@f& (0+255),b
 17098  0107C4  0EF9               	movlw	high STR_101
 17099  0107C6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17100  0107C8  C230  F1AE         	movff	_Vrms,?_printf+2	;volatile
 17101  0107CC  C231  F1AF         	movff	_Vrms+1,?_printf+3	;volatile
 17102  0107D0  C232  F1B0         	movff	_Vrms+2,?_printf+4	;volatile
 17103  0107D4  C233  F1B1         	movff	_Vrms+3,?_printf+5	;volatile
 17104  0107D8  ECC6  F0D4         	call	_printf	;wreg free
 17105                           
 17106                           ;ring_buffer_LUT.c: 344: terminal_textAttributesReset();
 17107  0107DC  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17108                           
 17109                           ;ring_buffer_LUT.c: 346: }
 17110  0107E0  0012               	return	
 17111  0107E2                     l1516:
 17112                           
 17113                           ;ring_buffer_LUT.c: 349: else if ((0 == strcmp(line, "Measure Power?"))) {
 17114  0107E2  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17115  0107E6  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17116  0107EA  0E0E               	movlw	low STR_102
 17117  0107EC  0101               	movlb	1	; () banked
 17118  0107EE  6F19               	movwf	strcmp@s2& (0+255),b
 17119  0107F0  0EFE               	movlw	high STR_102
 17120  0107F2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17121  0107F4  ECD0  F0D1         	call	_strcmp	;wreg free
 17122  0107F8  0101               	movlb	1	; () banked
 17123  0107FA  5117               	movf	?_strcmp& (0+255),w,b
 17124  0107FC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17125  0107FE  A4D8               	btfss	status,2,c
 17126  010800  D019               	goto	l1518
 17127                           
 17128                           ; BSR set to: 1
 17129                           ;ring_buffer_LUT.c: 351: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17130  010802  0E00               	movlw	0
 17131  010804  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17132  010806  0E00               	movlw	0
 17133  010808  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17134  01080A  0E06               	movlw	6
 17135  01080C  EC30  F0AA         	call	_terminal_textAttributes
 17136                           
 17137                           ;ring_buffer_LUT.c: 352: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 17138  010810  0EC0               	movlw	low STR_103
 17139  010812  0101               	movlb	1	; () banked
 17140  010814  6FAC               	movwf	printf@f& (0+255),b
 17141  010816  0EF3               	movlw	high STR_103
 17142  010818  6FAD               	movwf	(printf@f+1)& (0+255),b
 17143  01081A  C1C6  F1AE         	movff	_Avg_Power,?_printf+2	;volatile
 17144  01081E  C1C7  F1AF         	movff	_Avg_Power+1,?_printf+3	;volatile
 17145  010822  C1C8  F1B0         	movff	_Avg_Power+2,?_printf+4	;volatile
 17146  010826  C1C9  F1B1         	movff	_Avg_Power+3,?_printf+5	;volatile
 17147  01082A  ECC6  F0D4         	call	_printf	;wreg free
 17148                           
 17149                           ;ring_buffer_LUT.c: 353: terminal_textAttributesReset();
 17150  01082E  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17151                           
 17152                           ;ring_buffer_LUT.c: 355: }
 17153  010832  0012               	return	
 17154  010834                     l1518:
 17155                           
 17156                           ;ring_buffer_LUT.c: 358: else if ((0 == strcmp(line, "Measure Energy?"))) {
 17157  010834  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17158  010838  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17159  01083C  0EC1               	movlw	low STR_104
 17160  01083E  0101               	movlb	1	; () banked
 17161  010840  6F19               	movwf	strcmp@s2& (0+255),b
 17162  010842  0EFD               	movlw	high STR_104
 17163  010844  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17164  010846  ECD0  F0D1         	call	_strcmp	;wreg free
 17165  01084A  0101               	movlb	1	; () banked
 17166  01084C  5117               	movf	?_strcmp& (0+255),w,b
 17167  01084E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17168  010850  A4D8               	btfss	status,2,c
 17169  010852  D019               	goto	l1520
 17170                           
 17171                           ; BSR set to: 1
 17172                           ;ring_buffer_LUT.c: 360: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17173  010854  0E00               	movlw	0
 17174  010856  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17175  010858  0E00               	movlw	0
 17176  01085A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17177  01085C  0E06               	movlw	6
 17178  01085E  EC30  F0AA         	call	_terminal_textAttributes
 17179                           
 17180                           ;ring_buffer_LUT.c: 361: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 17181  010862  0E0C               	movlw	low STR_105
 17182  010864  0101               	movlb	1	; () banked
 17183  010866  6FAC               	movwf	printf@f& (0+255),b
 17184  010868  0EF1               	movlw	high STR_105
 17185  01086A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17186  01086C  C0F6  F1AE         	movff	_Total_Energy,?_printf+2	;volatile
 17187  010870  C0F7  F1AF         	movff	_Total_Energy+1,?_printf+3	;volatile
 17188  010874  C0F8  F1B0         	movff	_Total_Energy+2,?_printf+4	;volatile
 17189  010878  C0F9  F1B1         	movff	_Total_Energy+3,?_printf+5	;volatile
 17190  01087C  ECC6  F0D4         	call	_printf	;wreg free
 17191                           
 17192                           ;ring_buffer_LUT.c: 362: terminal_textAttributesReset();
 17193  010880  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17194                           
 17195                           ;ring_buffer_LUT.c: 364: }
 17196  010884  0012               	return	
 17197  010886                     l1520:
 17198                           
 17199                           ;ring_buffer_LUT.c: 367: else if ((0 == strcmp(line, "Clear Energy"))) {
 17200  010886  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17201  01088A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17202  01088E  0EEA               	movlw	low STR_106
 17203  010890  0101               	movlb	1	; () banked
 17204  010892  6F19               	movwf	strcmp@s2& (0+255),b
 17205  010894  0EFE               	movlw	high STR_106
 17206  010896  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17207  010898  ECD0  F0D1         	call	_strcmp	;wreg free
 17208  01089C  0101               	movlb	1	; () banked
 17209  01089E  5117               	movf	?_strcmp& (0+255),w,b
 17210  0108A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17211  0108A2  A4D8               	btfss	status,2,c
 17212  0108A4  D032               	goto	l1522
 17213                           
 17214                           ; BSR set to: 1
 17215                           ;ring_buffer_LUT.c: 370: Total_Energy = 0.0;
 17216  0108A6  0E00               	movlw	0
 17217  0108A8  0100               	movlb	0	; () banked
 17218  0108AA  6FF6               	movwf	_Total_Energy& (0+255),b	;volatile
 17219  0108AC  0E00               	movlw	0
 17220  0108AE  6FF7               	movwf	(_Total_Energy+1)& (0+255),b	;volatile
 17221  0108B0  0E00               	movlw	0
 17222  0108B2  6FF8               	movwf	(_Total_Energy+2)& (0+255),b	;volatile
 17223  0108B4  0E00               	movlw	0
 17224  0108B6  6FF9               	movwf	(_Total_Energy+3)& (0+255),b	;volatile
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;ring_buffer_LUT.c: 371: writeDoubleToEEPROM(0.0, Total_Energy_address);
 17228  0108B8  0E00               	movlw	0
 17229  0108BA  0101               	movlb	1	; () banked
 17230  0108BC  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 17231  0108BE  0E00               	movlw	0
 17232  0108C0  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 17233  0108C2  0E00               	movlw	0
 17234  0108C4  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 17235  0108C6  0E00               	movlw	0
 17236  0108C8  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 17237  0108CA  0E5F               	movlw	low _Total_Energy_address
 17238  0108CC  6EF6               	movwf	tblptrl,c
 17239  0108CE                     	if	1	;There is more than 1 active tblptr byte
 17240  0108CE  0ECF               	movlw	high _Total_Energy_address
 17241  0108D0  6EF7               	movwf	tblptrh,c
 17242  0108D2                     	endif
 17243  0108D2                     	if	1	;There are 3 active tblptr bytes
 17244  0108D2  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 17245  0108D4  6EF8               	movwf	tblptru,c
 17246  0108D6                     	endif
 17247  0108D6  0009               	tblrd		*+
 17248  0108D8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 17249  0108DC  000A               	tblrd		*-
 17250  0108DE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 17251  0108E2  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 17252                           
 17253                           ;ring_buffer_LUT.c: 373: terminal_textAttributes(RED, BLACK, NORMAL);
 17254  0108E6  0E00               	movlw	0
 17255  0108E8  0101               	movlb	1	; () banked
 17256  0108EA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17257  0108EC  0E00               	movlw	0
 17258  0108EE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17259  0108F0  0E01               	movlw	1
 17260  0108F2  EC30  F0AA         	call	_terminal_textAttributes
 17261                           
 17262                           ;ring_buffer_LUT.c: 374: printf("Measured output energy has been reset to zero Watt Hour
      +                          s\n\r");
 17263  0108F6  0E11               	movlw	low STR_107
 17264  0108F8  0101               	movlb	1	; () banked
 17265  0108FA  6FAC               	movwf	printf@f& (0+255),b
 17266  0108FC  0EF3               	movlw	high STR_107
 17267  0108FE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17268  010900  ECC6  F0D4         	call	_printf	;wreg free
 17269                           
 17270                           ;ring_buffer_LUT.c: 375: terminal_textAttributesReset();
 17271  010904  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17272                           
 17273                           ;ring_buffer_LUT.c: 377: }
 17274  010908  0012               	return	
 17275  01090A                     l1522:
 17276                           
 17277                           ;ring_buffer_LUT.c: 380: else if ((0 == strcmp(line, "Enable Dimming"))) {
 17278  01090A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17279  01090E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17280  010912  0E1D               	movlw	low STR_108
 17281  010914  0101               	movlb	1	; () banked
 17282  010916  6F19               	movwf	strcmp@s2& (0+255),b
 17283  010918  0EFE               	movlw	high STR_108
 17284  01091A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17285  01091C  ECD0  F0D1         	call	_strcmp	;wreg free
 17286  010920  0101               	movlb	1	; () banked
 17287  010922  5117               	movf	?_strcmp& (0+255),w,b
 17288  010924  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17289  010926  A4D8               	btfss	status,2,c
 17290  010928  D046               	goto	l1524
 17291                           
 17292                           ; BSR set to: 1
 17293                           ;ring_buffer_LUT.c: 384: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17294  01092A  0E01               	movlw	1
 17295  01092C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17296  01092E  0E02               	movlw	2
 17297  010930  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17298  010932  0E00               	movlw	0
 17299  010934  EC30  F0AA         	call	_terminal_textAttributes
 17300                           
 17301                           ;ring_buffer_LUT.c: 385: printf("WARNING: Using the dimming feature with load devices ot
      +                          her than a light bulb can result in device damage");
 17302  010938  0E29               	movlw	low STR_109
 17303  01093A  0101               	movlb	1	; () banked
 17304  01093C  6FAC               	movwf	printf@f& (0+255),b
 17305  01093E  0EEF               	movlw	high STR_109
 17306  010940  6FAD               	movwf	(printf@f+1)& (0+255),b
 17307  010942  ECC6  F0D4         	call	_printf	;wreg free
 17308                           
 17309                           ;ring_buffer_LUT.c: 386: terminal_textAttributesReset();
 17310  010946  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17311                           
 17312                           ;ring_buffer_LUT.c: 387: terminal_printNewline();
 17313  01094A  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 17314                           
 17315                           ;ring_buffer_LUT.c: 388: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17316  01094E  0E01               	movlw	1
 17317  010950  0101               	movlb	1	; () banked
 17318  010952  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17319  010954  0E02               	movlw	2
 17320  010956  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17321  010958  0E00               	movlw	0
 17322  01095A  EC30  F0AA         	call	_terminal_textAttributes
 17323                           
 17324                           ;ring_buffer_LUT.c: 389: printf("Only enable dimming if you are completely sure the load
      +                           is compatible with a solid state dimming circuit");
 17325  01095E  0E92               	movlw	low STR_110
 17326  010960  0101               	movlb	1	; () banked
 17327  010962  6FAC               	movwf	printf@f& (0+255),b
 17328  010964  0EEF               	movlw	high STR_110
 17329  010966  6FAD               	movwf	(printf@f+1)& (0+255),b
 17330  010968  ECC6  F0D4         	call	_printf	;wreg free
 17331                           
 17332                           ;ring_buffer_LUT.c: 390: terminal_textAttributesReset();
 17333  01096C  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17334                           
 17335                           ;ring_buffer_LUT.c: 391: terminal_printNewline();
 17336  010970  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 17337                           
 17338                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(BLACK, YELLOW, NORMAL);
 17339  010974  0E03               	movlw	3
 17340  010976  0101               	movlb	1	; () banked
 17341  010978  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17342  01097A  0E00               	movlw	0
 17343  01097C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17344  01097E  0E00               	movlw	0
 17345  010980  EC30  F0AA         	call	_terminal_textAttributes
 17346                           
 17347                           ;ring_buffer_LUT.c: 393: printf("Are you sure you'd like to enable output dimming?\n\r")
      +                          ;
 17348  010984  0E70               	movlw	low STR_111
 17349  010986  0101               	movlb	1	; () banked
 17350  010988  6FAC               	movwf	printf@f& (0+255),b
 17351  01098A  0EF5               	movlw	high STR_111
 17352  01098C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17353  01098E  ECC6  F0D4         	call	_printf	;wreg free
 17354                           
 17355                           ;ring_buffer_LUT.c: 394: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17356  010992  0E00               	movlw	0
 17357  010994  0101               	movlb	1	; () banked
 17358  010996  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17359  010998  0E00               	movlw	0
 17360  01099A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17361  01099C  0E03               	movlw	3
 17362  01099E  EC30  F0AA         	call	_terminal_textAttributes
 17363                           
 17364                           ;ring_buffer_LUT.c: 395: printf("If yes, reply 'Enable Dimming Y' on the next line:\n\r"
      +                          );
 17365  0109A2  0ED1               	movlw	low STR_112
 17366  0109A4  0101               	movlb	1	; () banked
 17367  0109A6  6FAC               	movwf	printf@f& (0+255),b
 17368  0109A8  0EF4               	movlw	high STR_112
 17369  0109AA  6FAD               	movwf	(printf@f+1)& (0+255),b
 17370  0109AC  ECC6  F0D4         	call	_printf	;wreg free
 17371                           
 17372                           ;ring_buffer_LUT.c: 396: terminal_textAttributesReset();
 17373  0109B0  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17374                           
 17375                           ;ring_buffer_LUT.c: 398: }
 17376  0109B4  0012               	return	
 17377  0109B6                     l1524:
 17378                           
 17379                           ;ring_buffer_LUT.c: 401: else if ((0 == strcmp(line, "Enable Dimming Y"))) {
 17380  0109B6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17381  0109BA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17382  0109BE  0E3E               	movlw	low STR_113
 17383  0109C0  0101               	movlb	1	; () banked
 17384  0109C2  6F19               	movwf	strcmp@s2& (0+255),b
 17385  0109C4  0EFD               	movlw	high STR_113
 17386  0109C6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17387  0109C8  ECD0  F0D1         	call	_strcmp	;wreg free
 17388  0109CC  0101               	movlb	1	; () banked
 17389  0109CE  5117               	movf	?_strcmp& (0+255),w,b
 17390  0109D0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17391  0109D2  A4D8               	btfss	status,2,c
 17392  0109D4  D015               	goto	l1526
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;ring_buffer_LUT.c: 404: LATGbits.LATG0 = 0;
 17396  0109D6  907F               	bcf	3967,0,c	;volatile
 17397                           
 17398                           ;ring_buffer_LUT.c: 407: PIE0bits.INT0IE = 1;
 17399  0109D8  010E               	movlb	14	; () banked
 17400  0109DA  8129               	bsf	41,0,b	;volatile
 17401                           
 17402                           ; BSR set to: 14
 17403                           ;ring_buffer_LUT.c: 409: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17404  0109DC  0E00               	movlw	0
 17405  0109DE  0101               	movlb	1	; () banked
 17406  0109E0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17407  0109E2  0E00               	movlw	0
 17408  0109E4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17409  0109E6  0E02               	movlw	2
 17410  0109E8  EC30  F0AA         	call	_terminal_textAttributes
 17411                           
 17412                           ;ring_buffer_LUT.c: 410: printf("Output dimming has been enabled\n\r");
 17413  0109EC  0E60               	movlw	low STR_114
 17414  0109EE  0101               	movlb	1	; () banked
 17415  0109F0  6FAC               	movwf	printf@f& (0+255),b
 17416  0109F2  0EF9               	movlw	high STR_114
 17417  0109F4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17418  0109F6  ECC6  F0D4         	call	_printf	;wreg free
 17419                           
 17420                           ;ring_buffer_LUT.c: 411: terminal_textAttributesReset();
 17421  0109FA  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17422                           
 17423                           ;ring_buffer_LUT.c: 413: }
 17424  0109FE  0012               	return	
 17425  010A00                     l1526:
 17426                           
 17427                           ;ring_buffer_LUT.c: 416: else if ((0 == strcmp(line, "Disable Dimming"))) {
 17428  010A00  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17429  010A04  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17430  010A08  0ED1               	movlw	low STR_115
 17431  010A0A  0101               	movlb	1	; () banked
 17432  010A0C  6F19               	movwf	strcmp@s2& (0+255),b
 17433  010A0E  0EFD               	movlw	high STR_115
 17434  010A10  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17435  010A12  ECD0  F0D1         	call	_strcmp	;wreg free
 17436  010A16  0101               	movlb	1	; () banked
 17437  010A18  5117               	movf	?_strcmp& (0+255),w,b
 17438  010A1A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17439  010A1C  A4D8               	btfss	status,2,c
 17440  010A1E  D017               	goto	l1528
 17441                           
 17442                           ; BSR set to: 1
 17443                           ;ring_buffer_LUT.c: 419: LATGbits.LATG0 = 1;
 17444  010A20  807F               	bsf	3967,0,c	;volatile
 17445                           
 17446                           ;ring_buffer_LUT.c: 422: PIE0bits.INT0IE = 0;
 17447  010A22  010E               	movlb	14	; () banked
 17448  010A24  9129               	bcf	41,0,b	;volatile
 17449                           
 17450                           ; BSR set to: 14
 17451                           ;ring_buffer_LUT.c: 423: TMR5_StopTimer();
 17452  010A26  EC3B  F0D9         	call	_TMR5_StopTimer	;wreg free
 17453                           
 17454                           ;ring_buffer_LUT.c: 425: terminal_textAttributes(RED, BLACK, NORMAL);
 17455  010A2A  0E00               	movlw	0
 17456  010A2C  0101               	movlb	1	; () banked
 17457  010A2E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17458  010A30  0E00               	movlw	0
 17459  010A32  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17460  010A34  0E01               	movlw	1
 17461  010A36  EC30  F0AA         	call	_terminal_textAttributes
 17462                           
 17463                           ;ring_buffer_LUT.c: 426: printf("TRIAC output dimming has been disabled\n\r");
 17464  010A3A  0E33               	movlw	low STR_116
 17465  010A3C  0101               	movlb	1	; () banked
 17466  010A3E  6FAC               	movwf	printf@f& (0+255),b
 17467  010A40  0EF8               	movlw	high STR_116
 17468  010A42  6FAD               	movwf	(printf@f+1)& (0+255),b
 17469  010A44  ECC6  F0D4         	call	_printf	;wreg free
 17470                           
 17471                           ;ring_buffer_LUT.c: 427: terminal_textAttributesReset();
 17472  010A48  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17473                           
 17474                           ;ring_buffer_LUT.c: 429: }
 17475  010A4C  0012               	return	
 17476  010A4E                     l1528:
 17477                           
 17478                           ;ring_buffer_LUT.c: 432: else if ((0 == strcmp(line, "Enable Load"))) {
 17479  010A4E  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17480  010A52  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17481  010A56  0E1B               	movlw	low STR_117
 17482  010A58  0101               	movlb	1	; () banked
 17483  010A5A  6F19               	movwf	strcmp@s2& (0+255),b
 17484  010A5C  0EFF               	movlw	high STR_117
 17485  010A5E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17486  010A60  ECD0  F0D1         	call	_strcmp	;wreg free
 17487  010A64  0101               	movlb	1	; () banked
 17488  010A66  5117               	movf	?_strcmp& (0+255),w,b
 17489  010A68  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17490  010A6A  A4D8               	btfss	status,2,c
 17491  010A6C  D014               	goto	l1530
 17492                           
 17493                           ; BSR set to: 1
 17494                           ;ring_buffer_LUT.c: 434: LATGbits.LATG0 = 1;
 17495  010A6E  807F               	bsf	3967,0,c	;volatile
 17496                           
 17497                           ;ring_buffer_LUT.c: 435: LATGbits.LATG1 = 0;
 17498  010A70  927F               	bcf	3967,1,c	;volatile
 17499                           
 17500                           ;ring_buffer_LUT.c: 436: load_enable = 1;
 17501  010A72  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17502                           
 17503                           ; BSR set to: 1
 17504                           ;ring_buffer_LUT.c: 438: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17505  010A74  0E00               	movlw	0
 17506  010A76  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17507  010A78  0E00               	movlw	0
 17508  010A7A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17509  010A7C  0E02               	movlw	2
 17510  010A7E  EC30  F0AA         	call	_terminal_textAttributes
 17511                           
 17512                           ;ring_buffer_LUT.c: 439: printf("Load has been enabled, dimming disabled\n\r");
 17513  010A82  0EB6               	movlw	low STR_118
 17514  010A84  0101               	movlb	1	; () banked
 17515  010A86  6FAC               	movwf	printf@f& (0+255),b
 17516  010A88  0EF7               	movlw	high STR_118
 17517  010A8A  6FAD               	movwf	(printf@f+1)& (0+255),b
 17518  010A8C  ECC6  F0D4         	call	_printf	;wreg free
 17519                           
 17520                           ;ring_buffer_LUT.c: 440: terminal_textAttributesReset();
 17521  010A90  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17522                           
 17523                           ;ring_buffer_LUT.c: 442: }
 17524  010A94  0012               	return	
 17525  010A96                     l1530:
 17526                           
 17527                           ;ring_buffer_LUT.c: 445: else if ((0 == strcmp(line, "Load Enabled?"))) {
 17528  010A96  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17529  010A9A  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17530  010A9E  0E49               	movlw	low STR_119
 17531  010AA0  0101               	movlb	1	; () banked
 17532  010AA2  6F19               	movwf	strcmp@s2& (0+255),b
 17533  010AA4  0EFE               	movlw	high STR_119
 17534  010AA6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17535  010AA8  ECD0  F0D1         	call	_strcmp	;wreg free
 17536  010AAC  0101               	movlb	1	; () banked
 17537  010AAE  5117               	movf	?_strcmp& (0+255),w,b
 17538  010AB0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17539  010AB2  A4D8               	btfss	status,2,c
 17540  010AB4  D025               	goto	l1532
 17541                           
 17542                           ; BSR set to: 1
 17543                           ;ring_buffer_LUT.c: 447: if (load_enable == 1) {
 17544  010AB6  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17545  010AB8  D011               	goto	l1533
 17546                           
 17547                           ; BSR set to: 1
 17548                           ;ring_buffer_LUT.c: 449: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17549  010ABA  0E00               	movlw	0
 17550  010ABC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17551  010ABE  0E00               	movlw	0
 17552  010AC0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17553  010AC2  0E02               	movlw	2
 17554  010AC4  EC30  F0AA         	call	_terminal_textAttributes
 17555                           
 17556                           ;ring_buffer_LUT.c: 450: printf("Load is currently enabled\n\r");
 17557  010AC8  0E39               	movlw	low STR_120
 17558  010ACA  0101               	movlb	1	; () banked
 17559  010ACC  6FAC               	movwf	printf@f& (0+255),b
 17560  010ACE  0EFB               	movlw	high STR_120
 17561  010AD0  6FAD               	movwf	(printf@f+1)& (0+255),b
 17562  010AD2  ECC6  F0D4         	call	_printf	;wreg free
 17563                           
 17564                           ;ring_buffer_LUT.c: 451: terminal_textAttributesReset();
 17565  010AD6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17566                           
 17567                           ;ring_buffer_LUT.c: 453: }
 17568  010ADA  0012               	return	
 17569  010ADC                     l1533:
 17570                           
 17571                           ;ring_buffer_LUT.c: 455: else {
 17572                           ;ring_buffer_LUT.c: 457: terminal_textAttributes(RED, BLACK, NORMAL);
 17573  010ADC  0E00               	movlw	0
 17574  010ADE  0101               	movlb	1	; () banked
 17575  010AE0  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17576  010AE2  0E00               	movlw	0
 17577  010AE4  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17578  010AE6  0E01               	movlw	1
 17579  010AE8  EC30  F0AA         	call	_terminal_textAttributes
 17580                           
 17581                           ;ring_buffer_LUT.c: 458: printf("Load is currently disabled\n\r");
 17582  010AEC  0EC6               	movlw	low STR_121
 17583  010AEE  0101               	movlb	1	; () banked
 17584  010AF0  6FAC               	movwf	printf@f& (0+255),b
 17585  010AF2  0EFA               	movlw	high STR_121
 17586  010AF4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17587  010AF6  ECC6  F0D4         	call	_printf	;wreg free
 17588                           
 17589                           ;ring_buffer_LUT.c: 459: terminal_textAttributesReset();
 17590  010AFA  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17591                           
 17592                           ;ring_buffer_LUT.c: 462: }
 17593                           ;ring_buffer_LUT.c: 464: }
 17594  010AFE  0012               	return	
 17595  010B00                     l1532:
 17596                           
 17597                           ;ring_buffer_LUT.c: 467: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 17598  010B00  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17599  010B04  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17600  010B08  0E0B               	movlw	low STR_122
 17601  010B0A  0101               	movlb	1	; () banked
 17602  010B0C  6F19               	movwf	strcmp@s2& (0+255),b
 17603  010B0E  0EFD               	movlw	high STR_122
 17604  010B10  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17605  010B12  ECD0  F0D1         	call	_strcmp	;wreg free
 17606  010B16  0101               	movlb	1	; () banked
 17607  010B18  5117               	movf	?_strcmp& (0+255),w,b
 17608  010B1A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17609  010B1C  A4D8               	btfss	status,2,c
 17610  010B1E  D039               	goto	l1536
 17611                           
 17612                           ; BSR set to: 1
 17613                           ;ring_buffer_LUT.c: 469: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 17614  010B20  B05E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17615                           
 17616                           ; BSR set to: 1
 17617  010B22  B07F               	btfsc	3967,0,c	;volatile
 17618  010B24  D011               	goto	l1537
 17619                           
 17620                           ; BSR set to: 1
 17621                           ;ring_buffer_LUT.c: 471: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17622  010B26  0E00               	movlw	0
 17623  010B28  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17624  010B2A  0E00               	movlw	0
 17625  010B2C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17626  010B2E  0E02               	movlw	2
 17627  010B30  EC30  F0AA         	call	_terminal_textAttributes
 17628                           
 17629                           ;ring_buffer_LUT.c: 472: printf("Dimming is currently enabled\n\r");
 17630  010B34  0E4B               	movlw	low STR_123
 17631  010B36  0101               	movlb	1	; () banked
 17632  010B38  6FAC               	movwf	printf@f& (0+255),b
 17633  010B3A  0EFA               	movlw	high STR_123
 17634  010B3C  6FAD               	movwf	(printf@f+1)& (0+255),b
 17635  010B3E  ECC6  F0D4         	call	_printf	;wreg free
 17636                           
 17637                           ;ring_buffer_LUT.c: 473: terminal_textAttributesReset();
 17638  010B42  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17639                           
 17640                           ;ring_buffer_LUT.c: 475: }
 17641  010B46  0012               	return	
 17642  010B48                     l1537:
 17643                           
 17644                           ; BSR set to: 1
 17645                           ;ring_buffer_LUT.c: 477: else if (load_enable == 1){
 17646  010B48  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17647  010B4A  D011               	goto	l1539
 17648                           
 17649                           ; BSR set to: 1
 17650                           ;ring_buffer_LUT.c: 479: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17651  010B4C  0E00               	movlw	0
 17652  010B4E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17653  010B50  0E00               	movlw	0
 17654  010B52  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17655  010B54  0E03               	movlw	3
 17656  010B56  EC30  F0AA         	call	_terminal_textAttributes
 17657                           
 17658                           ;ring_buffer_LUT.c: 480: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 17659  010B5A  0E06               	movlw	low STR_124
 17660  010B5C  0101               	movlb	1	; () banked
 17661  010B5E  6FAC               	movwf	printf@f& (0+255),b
 17662  010B60  0EF5               	movlw	high STR_124
 17663  010B62  6FAD               	movwf	(printf@f+1)& (0+255),b
 17664  010B64  ECC6  F0D4         	call	_printf	;wreg free
 17665                           
 17666                           ;ring_buffer_LUT.c: 481: terminal_textAttributesReset();
 17667  010B68  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17668                           
 17669                           ;ring_buffer_LUT.c: 483: }
 17670  010B6C  0012               	return	
 17671  010B6E                     l1539:
 17672                           
 17673                           ;ring_buffer_LUT.c: 485: else {
 17674                           ;ring_buffer_LUT.c: 487: terminal_textAttributes(RED, BLACK, NORMAL);
 17675  010B6E  0E00               	movlw	0
 17676  010B70  0101               	movlb	1	; () banked
 17677  010B72  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17678  010B74  0E00               	movlw	0
 17679  010B76  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17680  010B78  0E01               	movlw	1
 17681  010B7A  EC30  F0AA         	call	_terminal_textAttributes
 17682                           
 17683                           ;ring_buffer_LUT.c: 488: printf("Load and dimming are currently disabled\n\r");
 17684  010B7E  0EE0               	movlw	low STR_125
 17685  010B80  0101               	movlb	1	; () banked
 17686  010B82  6FAC               	movwf	printf@f& (0+255),b
 17687  010B84  0EF7               	movlw	high STR_125
 17688  010B86  6FAD               	movwf	(printf@f+1)& (0+255),b
 17689  010B88  ECC6  F0D4         	call	_printf	;wreg free
 17690                           
 17691                           ;ring_buffer_LUT.c: 489: terminal_textAttributesReset();
 17692  010B8C  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17693                           
 17694                           ;ring_buffer_LUT.c: 491: }
 17695                           ;ring_buffer_LUT.c: 495: }
 17696  010B90  0012               	return	
 17697  010B92                     l1536:
 17698                           
 17699                           ;ring_buffer_LUT.c: 500: else if ((0 == strcmp(line, "Disable Load"))) {
 17700  010B92  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 17701  010B96  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17702  010B9A  0EDD               	movlw	low STR_126
 17703  010B9C  0101               	movlb	1	; () banked
 17704  010B9E  6F19               	movwf	strcmp@s2& (0+255),b
 17705  010BA0  0EFE               	movlw	high STR_126
 17706  010BA2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 17707  010BA4  ECD0  F0D1         	call	_strcmp	;wreg free
 17708  010BA8  0101               	movlb	1	; () banked
 17709  010BAA  5117               	movf	?_strcmp& (0+255),w,b
 17710  010BAC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 17711  010BAE  A4D8               	btfss	status,2,c
 17712  010BB0  D014               	goto	l1542
 17713                           
 17714                           ; BSR set to: 1
 17715                           ;ring_buffer_LUT.c: 502: LATGbits.LATG1 = 0;
 17716  010BB2  927F               	bcf	3967,1,c	;volatile
 17717                           
 17718                           ;ring_buffer_LUT.c: 503: LATGbits.LATG0 = 0;
 17719  010BB4  907F               	bcf	3967,0,c	;volatile
 17720                           
 17721                           ;ring_buffer_LUT.c: 504: load_enable = 0;
 17722  010BB6  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 17723                           
 17724                           ; BSR set to: 1
 17725                           ;ring_buffer_LUT.c: 506: terminal_textAttributes(RED, BLACK, NORMAL);
 17726  010BB8  0E00               	movlw	0
 17727  010BBA  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17728  010BBC  0E00               	movlw	0
 17729  010BBE  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17730  010BC0  0E01               	movlw	1
 17731  010BC2  EC30  F0AA         	call	_terminal_textAttributes
 17732                           
 17733                           ;ring_buffer_LUT.c: 507: printf("Load has been disabled\n\r");
 17734  010BC6  0EBE               	movlw	low STR_127
 17735  010BC8  0101               	movlb	1	; () banked
 17736  010BCA  6FAC               	movwf	printf@f& (0+255),b
 17737  010BCC  0EFB               	movlw	high STR_127
 17738  010BCE  6FAD               	movwf	(printf@f+1)& (0+255),b
 17739  010BD0  ECC6  F0D4         	call	_printf	;wreg free
 17740                           
 17741                           ;ring_buffer_LUT.c: 508: terminal_textAttributesReset();
 17742  010BD4  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17743                           
 17744                           ;ring_buffer_LUT.c: 510: }
 17745  010BD8  0012               	return	
 17746  010BDA                     l1542:
 17747                           
 17748                           ;ring_buffer_LUT.c: 513: else if ((strstr(line, "Set Dimming Percentage: "))) {
 17749  010BDA  C1BF  F126         	movff	ringBufferLUT@line,strstr@s1
 17750  010BDE  C1C0  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 17751  010BE2  0ED7               	movlw	low STR_128
 17752  010BE4  0101               	movlb	1	; () banked
 17753  010BE6  6F28               	movwf	strstr@s2& (0+255),b
 17754  010BE8  0EFB               	movlw	high STR_128
 17755  010BEA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 17756  010BEC  ECDF  F0CC         	call	_strstr	;wreg free
 17757  010BF0  0101               	movlb	1	; () banked
 17758  010BF2  5126               	movf	?_strstr& (0+255),w,b
 17759  010BF4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 17760  010BF6  B4D8               	btfsc	status,2,c
 17761  010BF8  D127               	goto	l1544
 17762                           
 17763                           ; BSR set to: 1
 17764                           ;ring_buffer_LUT.c: 516: char arg_buff[3];
 17765                           ;ring_buffer_LUT.c: 519: for (int index = 0; index < 3; index++) {
 17766  010BFA  0E00               	movlw	0
 17767  010BFC  0102               	movlb	2	; () banked
 17768  010BFE  6FC3               	movwf	(ringBufferLUT@index+1)& (0+255),b
 17769  010C00  0E00               	movlw	0
 17770  010C02  6FC2               	movwf	ringBufferLUT@index& (0+255),b
 17771  010C04                     l23095:
 17772                           
 17773                           ; BSR set to: 2
 17774  010C04  BFC3               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 17775  010C06  D006               	goto	l1545
 17776  010C08  51C3               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 17777  010C0A  E11F               	bnz	l23105
 17778  010C0C  0E03               	movlw	3
 17779  010C0E  5DC2               	subwf	ringBufferLUT@index& (0+255),w,b
 17780  010C10  B0D8               	btfsc	status,0,c
 17781  010C12  D01B               	goto	u33870
 17782  010C14                     l1545:
 17783                           
 17784                           ; BSR set to: 2
 17785                           ;ring_buffer_LUT.c: 521: arg_buff[index] = line[index + 24];
 17786                           
 17787                           ; BSR set to: 2
 17788  010C14  0E18               	movlw	24
 17789  010C16  25C2               	addwf	ringBufferLUT@index& (0+255),w,b
 17790  010C18  0101               	movlb	1	; () banked
 17791  010C1A  6FC1               	movwf	??_ringBufferLUT& (0+255),b
 17792  010C1C  0E00               	movlw	0
 17793  010C1E  0102               	movlb	2	; () banked
 17794  010C20  21C3               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17795  010C22  0101               	movlb	1	; () banked
 17796  010C24  6FC2               	movwf	(??_ringBufferLUT+1)& (0+255),b
 17797  010C26  51C1               	movf	??_ringBufferLUT& (0+255),w,b
 17798  010C28  25BF               	addwf	ringBufferLUT@line& (0+255),w,b
 17799  010C2A  6ED9               	movwf	fsr2l,c
 17800  010C2C  51C2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 17801  010C2E  21C0               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 17802  010C30  6EDA               	movwf	fsr2h,c
 17803  010C32  0EA3               	movlw	low ringBufferLUT@arg_buff
 17804  010C34  0102               	movlb	2	; () banked
 17805  010C36  25C2               	addwf	ringBufferLUT@index& (0+255),w,b
 17806  010C38  6EE1               	movwf	fsr1l,c
 17807  010C3A  0E02               	movlw	high ringBufferLUT@arg_buff
 17808  010C3C  21C3               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 17809  010C3E  6EE2               	movwf	fsr1h,c
 17810  010C40  CFDF FFE7          	movff	indf2,indf1
 17811                           
 17812                           ; BSR set to: 2
 17813  010C44  4BC2               	infsnz	ringBufferLUT@index& (0+255),f,b
 17814  010C46  2BC3               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 17815  010C48  D7DD               	goto	l23095
 17816  010C4A                     u33870:
 17817  010C4A                     l23105:
 17818                           
 17819                           ; BSR set to: 2
 17820                           ;ring_buffer_LUT.c: 523: }
 17821                           ;ring_buffer_LUT.c: 525: int percentage = atoi(arg_buff);
 17822  010C4A  0EA3               	movlw	low ringBufferLUT@arg_buff
 17823  010C4C  0101               	movlb	1	; () banked
 17824  010C4E  6F1D               	movwf	atoi@s& (0+255),b
 17825  010C50  0E02               	movlw	high ringBufferLUT@arg_buff
 17826  010C52  6F1E               	movwf	(atoi@s+1)& (0+255),b
 17827  010C54  ECDE  F0C9         	call	_atoi	;wreg free
 17828  010C58  C11D  F2C4         	movff	?_atoi,ringBufferLUT@percentage
 17829  010C5C  C11E  F2C5         	movff	?_atoi+1,ringBufferLUT@percentage+1
 17830                           
 17831                           ;ring_buffer_LUT.c: 528: if ( (percentage >= 100) ||
 17832                           ;ring_buffer_LUT.c: 529: (percentage <= 0)) {
 17833  010C60  0102               	movlb	2	; () banked
 17834  010C62  BFC5               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17835  010C64  D006               	goto	u33880
 17836  010C66  51C5               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17837  010C68  E10B               	bnz	l23111
 17838  010C6A  0E64               	movlw	100
 17839  010C6C  5DC4               	subwf	ringBufferLUT@percentage& (0+255),w,b
 17840  010C6E  B0D8               	btfsc	status,0,c
 17841  010C70  D007               	goto	u33890
 17842  010C72                     u33880:
 17843                           
 17844                           ; BSR set to: 2
 17845  010C72  BFC5               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 17846  010C74  D005               	goto	u33890
 17847  010C76  51C5               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 17848  010C78  E12B               	bnz	l23113
 17849  010C7A  05C4               	decf	ringBufferLUT@percentage& (0+255),w,b
 17850  010C7C  B0D8               	btfsc	status,0,c
 17851  010C7E  D028               	goto	l1547
 17852  010C80                     u33890:
 17853  010C80                     l23111:
 17854                           
 17855                           ; BSR set to: 2
 17856                           ;ring_buffer_LUT.c: 531: terminal_textAttributes(RED, BLACK, NORMAL);
 17857  010C80  0E00               	movlw	0
 17858  010C82  0101               	movlb	1	; () banked
 17859  010C84  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17860  010C86  0E00               	movlw	0
 17861  010C88  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17862  010C8A  0E01               	movlw	1
 17863  010C8C  EC30  F0AA         	call	_terminal_textAttributes
 17864                           
 17865                           ;ring_buffer_LUT.c: 532: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 17866  010C90  0E61               	movlw	low STR_129
 17867  010C92  0101               	movlb	1	; () banked
 17868  010C94  6FAC               	movwf	printf@f& (0+255),b
 17869  010C96  0EF0               	movlw	high STR_129
 17870  010C98  6FAD               	movwf	(printf@f+1)& (0+255),b
 17871  010C9A  ECC6  F0D4         	call	_printf	;wreg free
 17872                           
 17873                           ;ring_buffer_LUT.c: 533: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17874  010C9E  0E00               	movlw	0
 17875  010CA0  0101               	movlb	1	; () banked
 17876  010CA2  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 17877  010CA4  0E00               	movlw	0
 17878  010CA6  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17879  010CA8  0E03               	movlw	3
 17880  010CAA  EC30  F0AA         	call	_terminal_textAttributes
 17881                           
 17882                           ;ring_buffer_LUT.c: 534: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 17883  010CAE  0EFB               	movlw	low STR_130
 17884  010CB0  0101               	movlb	1	; () banked
 17885  010CB2  6FAC               	movwf	printf@f& (0+255),b
 17886  010CB4  0EEF               	movlw	high STR_130
 17887  010CB6  6FAD               	movwf	(printf@f+1)& (0+255),b
 17888  010CB8  ECC6  F0D4         	call	_printf	;wreg free
 17889                           
 17890                           ;ring_buffer_LUT.c: 535: printf("Enter 'Help' for list of available commands\n\r");
 17891  010CBC  0E2D               	movlw	low STR_131
 17892  010CBE  0101               	movlb	1	; () banked
 17893  010CC0  6FAC               	movwf	printf@f& (0+255),b
 17894  010CC2  0EF7               	movlw	high STR_131
 17895  010CC4  6FAD               	movwf	(printf@f+1)& (0+255),b
 17896  010CC6  ECC6  F0D4         	call	_printf	;wreg free
 17897                           
 17898                           ;ring_buffer_LUT.c: 536: terminal_textAttributesReset();
 17899  010CCA  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 17900                           
 17901                           ;ring_buffer_LUT.c: 538: }
 17902  010CCE  0012               	return	
 17903  010CD0                     l1547:
 17904  010CD0                     l23113:
 17905                           
 17906                           ;ring_buffer_LUT.c: 541: else {
 17907                           ;ring_buffer_LUT.c: 544: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 17908  010CD0  0E00               	movlw	0
 17909  010CD2  0101               	movlb	1	; () banked
 17910  010CD4  6F41               	movwf	___fldiv@a& (0+255),b
 17911  010CD6  0E00               	movlw	0
 17912  010CD8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 17913  010CDA  0EC8               	movlw	200
 17914  010CDC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 17915  010CDE  0E42               	movlw	66
 17916  010CE0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 17917  010CE2  0E00               	movlw	0
 17918  010CE4  6F2D               	movwf	___fladd@a& (0+255),b
 17919  010CE6  0E00               	movlw	0
 17920  010CE8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 17921  010CEA  0EC8               	movlw	200
 17922  010CEC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 17923  010CEE  0E42               	movlw	66
 17924  010CF0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 17925  010CF2  C2C4  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 17926  010CF6  C2C5  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 17927  010CFA  0E00               	movlw	0
 17928  010CFC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 17929  010CFE  0EFF               	movlw	-1
 17930  010D00  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 17931  010D02  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 17932  010D04  0E01               	movlw	1
 17933  010D06  ECE4  F0C0         	call	___xxtofl
 17934  010D0A  C117  F125         	movff	?___xxtofl,___flneg@f1
 17935  010D0E  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 17936  010D12  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 17937  010D16  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 17938  010D1A  EC80  F0D6         	call	___flneg	;wreg free
 17939  010D1E  C125  F129         	movff	?___flneg,___fladd@b
 17940  010D22  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 17941  010D26  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 17942  010D2A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 17943  010D2E  EC35  F0AF         	call	___fladd	;wreg free
 17944  010D32  C129  F13D         	movff	?___fladd,___fldiv@b
 17945  010D36  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 17946  010D3A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 17947  010D3E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 17948  010D42  EC39  F0B8         	call	___fldiv	;wreg free
 17949  010D46  C13D  F156         	movff	?___fldiv,___flmul@b
 17950  010D4A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 17951  010D4E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 17952  010D52  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 17953  010D56  0EDB               	movlw	219
 17954  010D58  0101               	movlb	1	; () banked
 17955  010D5A  6F5A               	movwf	___flmul@a& (0+255),b
 17956  010D5C  0E0F               	movlw	15
 17957  010D5E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17958  010D60  0E49               	movlw	73
 17959  010D62  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17960  010D64  0E40               	movlw	64
 17961  010D66  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17962  010D68  ECE4  F0AB         	call	___flmul	;wreg free
 17963  010D6C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 17964  010D70  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 17965  010D74  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 17966  010D78  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 17967                           
 17968                           ;ring_buffer_LUT.c: 545: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 17969  010D7C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 17970  010D80  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 17971  010D84  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 17972  010D88  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 17973  010D8C  0EE1               	movlw	225
 17974  010D8E  0101               	movlb	1	; () banked
 17975  010D90  6F5A               	movwf	___flmul@a& (0+255),b
 17976  010D92  0E2E               	movlw	46
 17977  010D94  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 17978  010D96  0E65               	movlw	101
 17979  010D98  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 17980  010D9A  0E42               	movlw	66
 17981  010D9C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 17982  010D9E  ECE4  F0AB         	call	___flmul	;wreg free
 17983  010DA2  C156  F2A6         	movff	?___flmul,ringBufferLUT@angle_degrees
 17984  010DA6  C157  F2A7         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 17985  010DAA  C158  F2A8         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 17986  010DAE  C159  F2A9         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 17987                           
 17988                           ;ring_buffer_LUT.c: 546: dimming_period = (percentage) * (0xFFFF / 100);
 17989  010DB2  C2C4  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 17990  010DB6  C2C5  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 17991  010DBA  0E02               	movlw	2
 17992  010DBC  0101               	movlb	1	; () banked
 17993  010DBE  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17994  010DC0  0E8F               	movlw	143
 17995  010DC2  6F19               	movwf	___wmul@multiplicand& (0+255),b
 17996  010DC4  ECDC  F0D6         	call	___wmul	;wreg free
 17997  010DC8  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 17998  010DCC  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 17999                           
 18000                           ;ring_buffer_LUT.c: 548: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18001  010DD0  0E00               	movlw	0
 18002  010DD2  0101               	movlb	1	; () banked
 18003  010DD4  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18004  010DD6  0E00               	movlw	0
 18005  010DD8  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18006  010DDA  0E02               	movlw	2
 18007  010DDC  EC30  F0AA         	call	_terminal_textAttributes
 18008                           
 18009                           ;ring_buffer_LUT.c: 549: printf("Dimming has been set to %d percent\n\r", percentage);
 18010  010DE0  0EF3               	movlw	low STR_132
 18011  010DE2  0101               	movlb	1	; () banked
 18012  010DE4  6FAC               	movwf	printf@f& (0+255),b
 18013  010DE6  0EF8               	movlw	high STR_132
 18014  010DE8  6FAD               	movwf	(printf@f+1)& (0+255),b
 18015  010DEA  C2C4  F1AE         	movff	ringBufferLUT@percentage,?_printf+2
 18016  010DEE  C2C5  F1AF         	movff	ringBufferLUT@percentage+1,?_printf+3
 18017  010DF2  ECC6  F0D4         	call	_printf	;wreg free
 18018                           
 18019                           ;ring_buffer_LUT.c: 550: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 18020  010DF6  0E1D               	movlw	low STR_133
 18021  010DF8  0101               	movlb	1	; () banked
 18022  010DFA  6FAC               	movwf	printf@f& (0+255),b
 18023  010DFC  0EF2               	movlw	high STR_133
 18024  010DFE  6FAD               	movwf	(printf@f+1)& (0+255),b
 18025  010E00  C0F2  F1AE         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 18026  010E04  C0F3  F1AF         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 18027  010E08  C0F4  F1B0         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 18028  010E0C  C0F5  F1B1         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 18029  010E10  C2A6  F1B2         	movff	ringBufferLUT@angle_degrees,?_printf+6
 18030  010E14  C2A7  F1B3         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 18031  010E18  C2A8  F1B4         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 18032  010E1C  C2A9  F1B5         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 18033  010E20  ECC6  F0D4         	call	_printf	;wreg free
 18034                           
 18035                           ;ring_buffer_LUT.c: 551: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 18036  010E24  0E55               	movlw	low STR_134
 18037  010E26  0101               	movlb	1	; () banked
 18038  010E28  6FAC               	movwf	printf@f& (0+255),b
 18039  010E2A  0EF1               	movlw	high STR_134
 18040  010E2C  6FAD               	movwf	(printf@f+1)& (0+255),b
 18041  010E2E  C0F0  F1AE         	movff	_dimming_period,?_printf+2	;volatile
 18042  010E32  C0F1  F1AF         	movff	_dimming_period+1,?_printf+3	;volatile
 18043  010E36  C0F0  F1B0         	movff	_dimming_period,?_printf+4	;volatile
 18044  010E3A  C0F1  F1B1         	movff	_dimming_period+1,?_printf+5	;volatile
 18045  010E3E  ECC6  F0D4         	call	_printf	;wreg free
 18046                           
 18047                           ;ring_buffer_LUT.c: 552: terminal_textAttributesReset();
 18048  010E42  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18049                           
 18050                           ;ring_buffer_LUT.c: 554: }
 18051                           ;ring_buffer_LUT.c: 556: }
 18052  010E46  0012               	return	
 18053  010E48                     l1544:
 18054                           
 18055                           ;ring_buffer_LUT.c: 559: else if((0 == strcmp(line, "Device On Time?"))) {
 18056  010E48  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18057  010E4C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18058  010E50  0EA1               	movlw	low STR_135
 18059  010E52  0101               	movlb	1	; () banked
 18060  010E54  6F19               	movwf	strcmp@s2& (0+255),b
 18061  010E56  0EFD               	movlw	high STR_135
 18062  010E58  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18063  010E5A  ECD0  F0D1         	call	_strcmp	;wreg free
 18064  010E5E  0101               	movlb	1	; () banked
 18065  010E60  5117               	movf	?_strcmp& (0+255),w,b
 18066  010E62  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18067  010E64  A4D8               	btfss	status,2,c
 18068  010E66  D019               	goto	l1552
 18069                           
 18070                           ; BSR set to: 1
 18071                           ;ring_buffer_LUT.c: 561: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18072  010E68  0E00               	movlw	0
 18073  010E6A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18074  010E6C  0E00               	movlw	0
 18075  010E6E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18076  010E70  0E02               	movlw	2
 18077  010E72  EC30  F0AA         	call	_terminal_textAttributes
 18078                           
 18079                           ;ring_buffer_LUT.c: 562: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 18080  010E76  0E4C               	movlw	low STR_136
 18081  010E78  0101               	movlb	1	; () banked
 18082  010E7A  6FAC               	movwf	printf@f& (0+255),b
 18083  010E7C  0EF3               	movlw	high STR_136
 18084  010E7E  6FAD               	movwf	(printf@f+1)& (0+255),b
 18085  010E80  C22C  F1AE         	movff	_dev_on_time,?_printf+2	;volatile
 18086  010E84  C22D  F1AF         	movff	_dev_on_time+1,?_printf+3	;volatile
 18087  010E88  C22E  F1B0         	movff	_dev_on_time+2,?_printf+4	;volatile
 18088  010E8C  C22F  F1B1         	movff	_dev_on_time+3,?_printf+5	;volatile
 18089  010E90  ECC6  F0D4         	call	_printf	;wreg free
 18090                           
 18091                           ;ring_buffer_LUT.c: 563: terminal_textAttributesReset();
 18092  010E94  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18093                           
 18094                           ;ring_buffer_LUT.c: 565: }
 18095  010E98  0012               	return	
 18096  010E9A                     l1552:
 18097                           
 18098                           ;ring_buffer_LUT.c: 568: else if((0 == strcmp(line, "Load On Time?"))) {
 18099  010E9A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18100  010E9E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18101  010EA2  0E57               	movlw	low STR_137
 18102  010EA4  0101               	movlb	1	; () banked
 18103  010EA6  6F19               	movwf	strcmp@s2& (0+255),b
 18104  010EA8  0EFE               	movlw	high STR_137
 18105  010EAA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18106  010EAC  ECD0  F0D1         	call	_strcmp	;wreg free
 18107  010EB0  0101               	movlb	1	; () banked
 18108  010EB2  5117               	movf	?_strcmp& (0+255),w,b
 18109  010EB4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18110  010EB6  A4D8               	btfss	status,2,c
 18111  010EB8  D019               	goto	l1554
 18112                           
 18113                           ; BSR set to: 1
 18114                           ;ring_buffer_LUT.c: 570: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18115  010EBA  0E00               	movlw	0
 18116  010EBC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18117  010EBE  0E00               	movlw	0
 18118  010EC0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18119  010EC2  0E02               	movlw	2
 18120  010EC4  EC30  F0AA         	call	_terminal_textAttributes
 18121                           
 18122                           ;ring_buffer_LUT.c: 571: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 18123  010EC8  0E3B               	movlw	low STR_138
 18124  010ECA  0101               	movlb	1	; () banked
 18125  010ECC  6FAC               	movwf	printf@f& (0+255),b
 18126  010ECE  0EF5               	movlw	high STR_138
 18127  010ED0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18128  010ED2  C228  F1AE         	movff	_load_on_time,?_printf+2	;volatile
 18129  010ED6  C229  F1AF         	movff	_load_on_time+1,?_printf+3	;volatile
 18130  010EDA  C22A  F1B0         	movff	_load_on_time+2,?_printf+4	;volatile
 18131  010EDE  C22B  F1B1         	movff	_load_on_time+3,?_printf+5	;volatile
 18132  010EE2  ECC6  F0D4         	call	_printf	;wreg free
 18133                           
 18134                           ;ring_buffer_LUT.c: 572: terminal_textAttributesReset();
 18135  010EE6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18136                           
 18137                           ;ring_buffer_LUT.c: 574: }
 18138  010EEA  0012               	return	
 18139  010EEC                     l1554:
 18140                           
 18141                           ;ring_buffer_LUT.c: 577: else if((0 == strcmp(line, "Max RMS Current?"))) {
 18142  010EEC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18143  010EF0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18144  010EF4  0E2D               	movlw	low STR_139
 18145  010EF6  0101               	movlb	1	; () banked
 18146  010EF8  6F19               	movwf	strcmp@s2& (0+255),b
 18147  010EFA  0EFD               	movlw	high STR_139
 18148  010EFC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18149  010EFE  ECD0  F0D1         	call	_strcmp	;wreg free
 18150  010F02  0101               	movlb	1	; () banked
 18151  010F04  5117               	movf	?_strcmp& (0+255),w,b
 18152  010F06  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18153  010F08  A4D8               	btfss	status,2,c
 18154  010F0A  D030               	goto	l1556
 18155                           
 18156                           ; BSR set to: 1
 18157                           ;ring_buffer_LUT.c: 580: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 18158  010F0C  0E5D               	movlw	low _max_Irms_address
 18159  010F0E  6EF6               	movwf	tblptrl,c
 18160  010F10                     	if	1	;There is more than 1 active tblptr byte
 18161  010F10  0ECF               	movlw	high _max_Irms_address
 18162  010F12  6EF7               	movwf	tblptrh,c
 18163  010F14                     	endif
 18164  010F14                     	if	1	;There are 3 active tblptr bytes
 18165  010F14  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18166  010F16  6EF8               	movwf	tblptru,c
 18167  010F18                     	endif
 18168  010F18  0009               	tblrd		*+
 18169  010F1A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18170  010F1E  000A               	tblrd		*-
 18171  010F20  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18172  010F24  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18173  010F28  C119  F2AA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 18174  010F2C  C11A  F2AB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 18175  010F30  C11B  F2AC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 18176  010F34  C11C  F2AD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 18177                           
 18178                           ;ring_buffer_LUT.c: 582: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18179  010F38  0E00               	movlw	0
 18180  010F3A  0101               	movlb	1	; () banked
 18181  010F3C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18182  010F3E  0E00               	movlw	0
 18183  010F40  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18184  010F42  0E06               	movlw	6
 18185  010F44  EC30  F0AA         	call	_terminal_textAttributes
 18186                           
 18187                           ;ring_buffer_LUT.c: 583: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 18188  010F48  0E0C               	movlw	low STR_140
 18189  010F4A  0101               	movlb	1	; () banked
 18190  010F4C  6FAC               	movwf	printf@f& (0+255),b
 18191  010F4E  0EF6               	movlw	high STR_140
 18192  010F50  6FAD               	movwf	(printf@f+1)& (0+255),b
 18193  010F52  C2AA  F1AE         	movff	ringBufferLUT@max_current_print,?_printf+2
 18194  010F56  C2AB  F1AF         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 18195  010F5A  C2AC  F1B0         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 18196  010F5E  C2AD  F1B1         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 18197  010F62  ECC6  F0D4         	call	_printf	;wreg free
 18198                           
 18199                           ;ring_buffer_LUT.c: 584: terminal_textAttributesReset();
 18200  010F66  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18201                           
 18202                           ;ring_buffer_LUT.c: 586: }
 18203  010F6A  0012               	return	
 18204  010F6C                     l1556:
 18205                           
 18206                           ;ring_buffer_LUT.c: 589: else if((0 == strcmp(line, "Max Power?"))) {
 18207  010F6C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18208  010F70  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18209  010F74  0E53               	movlw	low STR_141
 18210  010F76  0101               	movlb	1	; () banked
 18211  010F78  6F19               	movwf	strcmp@s2& (0+255),b
 18212  010F7A  0EFF               	movlw	high STR_141
 18213  010F7C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18214  010F7E  ECD0  F0D1         	call	_strcmp	;wreg free
 18215  010F82  0101               	movlb	1	; () banked
 18216  010F84  5117               	movf	?_strcmp& (0+255),w,b
 18217  010F86  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18218  010F88  A4D8               	btfss	status,2,c
 18219  010F8A  D030               	goto	l1558
 18220                           
 18221                           ; BSR set to: 1
 18222                           ;ring_buffer_LUT.c: 592: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 18223  010F8C  0E5B               	movlw	low _max_Power_address
 18224  010F8E  6EF6               	movwf	tblptrl,c
 18225  010F90                     	if	1	;There is more than 1 active tblptr byte
 18226  010F90  0ECF               	movlw	high _max_Power_address
 18227  010F92  6EF7               	movwf	tblptrh,c
 18228  010F94                     	endif
 18229  010F94                     	if	1	;There are 3 active tblptr bytes
 18230  010F94  0E00               	movlw	low (_max_Power_address shr (0+16))
 18231  010F96  6EF8               	movwf	tblptru,c
 18232  010F98                     	endif
 18233  010F98  0009               	tblrd		*+
 18234  010F9A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18235  010F9E  000A               	tblrd		*-
 18236  010FA0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18237  010FA4  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18238  010FA8  C119  F2AE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 18239  010FAC  C11A  F2AF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 18240  010FB0  C11B  F2B0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 18241  010FB4  C11C  F2B1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 18242                           
 18243                           ;ring_buffer_LUT.c: 594: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18244  010FB8  0E00               	movlw	0
 18245  010FBA  0101               	movlb	1	; () banked
 18246  010FBC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18247  010FBE  0E00               	movlw	0
 18248  010FC0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18249  010FC2  0E06               	movlw	6
 18250  010FC4  EC30  F0AA         	call	_terminal_textAttributes
 18251                           
 18252                           ;ring_buffer_LUT.c: 595: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 18253  010FC8  0E5B               	movlw	low STR_142
 18254  010FCA  0101               	movlb	1	; () banked
 18255  010FCC  6FAC               	movwf	printf@f& (0+255),b
 18256  010FCE  0EF7               	movlw	high STR_142
 18257  010FD0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18258  010FD2  C2AE  F1AE         	movff	ringBufferLUT@max_Power_print,?_printf+2
 18259  010FD6  C2AF  F1AF         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 18260  010FDA  C2B0  F1B0         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 18261  010FDE  C2B1  F1B1         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 18262  010FE2  ECC6  F0D4         	call	_printf	;wreg free
 18263                           
 18264                           ;ring_buffer_LUT.c: 596: terminal_textAttributesReset();
 18265  010FE6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18266                           
 18267                           ;ring_buffer_LUT.c: 598: }
 18268  010FEA  0012               	return	
 18269  010FEC                     l1558:
 18270                           
 18271                           ;ring_buffer_LUT.c: 601: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 18272  010FEC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18273  010FF0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18274  010FF4  0E8B               	movlw	low STR_143
 18275  010FF6  0101               	movlb	1	; () banked
 18276  010FF8  6F19               	movwf	strcmp@s2& (0+255),b
 18277  010FFA  0EFC               	movlw	high STR_143
 18278  010FFC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18279  010FFE  ECD0  F0D1         	call	_strcmp	;wreg free
 18280  011002  0101               	movlb	1	; () banked
 18281  011004  5117               	movf	?_strcmp& (0+255),w,b
 18282  011006  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18283  011008  A4D8               	btfss	status,2,c
 18284  01100A  D030               	goto	l1560
 18285                           
 18286                           ; BSR set to: 1
 18287                           ;ring_buffer_LUT.c: 604: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 18288  01100C  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 18289  01100E  6EF6               	movwf	tblptrl,c
 18290  011010                     	if	1	;There is more than 1 active tblptr byte
 18291  011010  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 18292  011012  6EF7               	movwf	tblptrh,c
 18293  011014                     	endif
 18294  011014                     	if	1	;There are 3 active tblptr bytes
 18295  011014  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18296  011016  6EF8               	movwf	tblptru,c
 18297  011018                     	endif
 18298  011018  0009               	tblrd		*+
 18299  01101A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18300  01101E  000A               	tblrd		*-
 18301  011020  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18302  011024  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18303  011028  C119  F2B2         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 18304  01102C  C11A  F2B3         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 18305  011030  C11B  F2B4         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 18306  011034  C11C  F2B5         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 18307                           
 18308                           ;ring_buffer_LUT.c: 606: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18309  011038  0E00               	movlw	0
 18310  01103A  0101               	movlb	1	; () banked
 18311  01103C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18312  01103E  0E00               	movlw	0
 18313  011040  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18314  011042  0E06               	movlw	6
 18315  011044  EC30  F0AA         	call	_terminal_textAttributes
 18316                           
 18317                           ;ring_buffer_LUT.c: 607: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 18318  011048  0ED8               	movlw	low STR_144
 18319  01104A  0101               	movlb	1	; () banked
 18320  01104C  6FAC               	movwf	printf@f& (0+255),b
 18321  01104E  0EF5               	movlw	high STR_144
 18322  011050  6FAD               	movwf	(printf@f+1)& (0+255),b
 18323  011052  C2B2  F1AE         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 18324  011056  C2B3  F1AF         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 18325  01105A  C2B4  F1B0         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 18326  01105E  C2B5  F1B1         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 18327  011062  ECC6  F0D4         	call	_printf	;wreg free
 18328                           
 18329                           ;ring_buffer_LUT.c: 608: terminal_textAttributesReset();
 18330  011066  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18331                           
 18332                           ;ring_buffer_LUT.c: 610: }
 18333  01106A  0012               	return	
 18334  01106C                     l1560:
 18335                           
 18336                           ;ring_buffer_LUT.c: 613: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 18337  01106C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18338  011070  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18339  011074  0EB2               	movlw	low STR_145
 18340  011076  0101               	movlb	1	; () banked
 18341  011078  6F19               	movwf	strcmp@s2& (0+255),b
 18342  01107A  0EFC               	movlw	high STR_145
 18343  01107C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18344  01107E  ECD0  F0D1         	call	_strcmp	;wreg free
 18345  011082  0101               	movlb	1	; () banked
 18346  011084  5117               	movf	?_strcmp& (0+255),w,b
 18347  011086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18348  011088  A4D8               	btfss	status,2,c
 18349  01108A  D030               	goto	l1562
 18350                           
 18351                           ; BSR set to: 1
 18352                           ;ring_buffer_LUT.c: 616: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 18353  01108C  0E57               	movlw	low _max_POS12_ADC_Result_address
 18354  01108E  6EF6               	movwf	tblptrl,c
 18355  011090                     	if	1	;There is more than 1 active tblptr byte
 18356  011090  0ECF               	movlw	high _max_POS12_ADC_Result_address
 18357  011092  6EF7               	movwf	tblptrh,c
 18358  011094                     	endif
 18359  011094                     	if	1	;There are 3 active tblptr bytes
 18360  011094  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18361  011096  6EF8               	movwf	tblptru,c
 18362  011098                     	endif
 18363  011098  0009               	tblrd		*+
 18364  01109A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18365  01109E  000A               	tblrd		*-
 18366  0110A0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18367  0110A4  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18368  0110A8  C119  F2B6         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3299
 18369  0110AC  C11A  F2B7         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3299+1
 18370  0110B0  C11B  F2B8         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3299+2
 18371  0110B4  C11C  F2B9         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3299+3
 18372                           
 18373                           ;ring_buffer_LUT.c: 618: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18374  0110B8  0E00               	movlw	0
 18375  0110BA  0101               	movlb	1	; () banked
 18376  0110BC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18377  0110BE  0E00               	movlw	0
 18378  0110C0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18379  0110C2  0E06               	movlw	6
 18380  0110C4  EC30  F0AA         	call	_terminal_textAttributes
 18381                           
 18382                           ;ring_buffer_LUT.c: 619: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 18383  0110C8  0E3F               	movlw	low STR_146
 18384  0110CA  0101               	movlb	1	; () banked
 18385  0110CC  6FAC               	movwf	printf@f& (0+255),b
 18386  0110CE  0EF6               	movlw	high STR_146
 18387  0110D0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18388  0110D2  C2B6  F1AE         	movff	ringBufferLUT@max_voltage_print_3299,?_printf+2
 18389  0110D6  C2B7  F1AF         	movff	ringBufferLUT@max_voltage_print_3299+1,?_printf+3
 18390  0110DA  C2B8  F1B0         	movff	ringBufferLUT@max_voltage_print_3299+2,?_printf+4
 18391  0110DE  C2B9  F1B1         	movff	ringBufferLUT@max_voltage_print_3299+3,?_printf+5
 18392  0110E2  ECC6  F0D4         	call	_printf	;wreg free
 18393                           
 18394                           ;ring_buffer_LUT.c: 620: terminal_textAttributesReset();
 18395  0110E6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18396                           
 18397                           ;ring_buffer_LUT.c: 622: }
 18398  0110EA  0012               	return	
 18399  0110EC                     l1562:
 18400                           
 18401                           ;ring_buffer_LUT.c: 625: else if((0 == strcmp(line, "Max Die Temp?"))) {
 18402  0110EC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18403  0110F0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18404  0110F4  0E65               	movlw	low STR_147
 18405  0110F6  0101               	movlb	1	; () banked
 18406  0110F8  6F19               	movwf	strcmp@s2& (0+255),b
 18407  0110FA  0EFE               	movlw	high STR_147
 18408  0110FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18409  0110FE  ECD0  F0D1         	call	_strcmp	;wreg free
 18410  011102  0101               	movlb	1	; () banked
 18411  011104  5117               	movf	?_strcmp& (0+255),w,b
 18412  011106  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18413  011108  A4D8               	btfss	status,2,c
 18414  01110A  D030               	goto	l1564
 18415                           
 18416                           ; BSR set to: 1
 18417                           ;ring_buffer_LUT.c: 628: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 18418  01110C  0E55               	movlw	low _max_Temp_ADC_Result_address
 18419  01110E  6EF6               	movwf	tblptrl,c
 18420  011110                     	if	1	;There is more than 1 active tblptr byte
 18421  011110  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18422  011112  6EF7               	movwf	tblptrh,c
 18423  011114                     	endif
 18424  011114                     	if	1	;There are 3 active tblptr bytes
 18425  011114  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18426  011116  6EF8               	movwf	tblptru,c
 18427  011118                     	endif
 18428  011118  0009               	tblrd		*+
 18429  01111A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18430  01111E  000A               	tblrd		*-
 18431  011120  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18432  011124  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18433  011128  C119  F2BA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 18434  01112C  C11A  F2BB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 18435  011130  C11B  F2BC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 18436  011134  C11C  F2BD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 18437                           
 18438                           ;ring_buffer_LUT.c: 630: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18439  011138  0E00               	movlw	0
 18440  01113A  0101               	movlb	1	; () banked
 18441  01113C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18442  01113E  0E00               	movlw	0
 18443  011140  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18444  011142  0E06               	movlw	6
 18445  011144  EC30  F0AA         	call	_terminal_textAttributes
 18446                           
 18447                           ;ring_buffer_LUT.c: 631: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 18448  011148  0E89               	movlw	low STR_148
 18449  01114A  0101               	movlb	1	; () banked
 18450  01114C  6FAC               	movwf	printf@f& (0+255),b
 18451  01114E  0EF7               	movlw	high STR_148
 18452  011150  6FAD               	movwf	(printf@f+1)& (0+255),b
 18453  011152  C2BA  F1AE         	movff	ringBufferLUT@max_temp_print,?_printf+2
 18454  011156  C2BB  F1AF         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 18455  01115A  C2BC  F1B0         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 18456  01115E  C2BD  F1B1         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 18457  011162  ECC6  F0D4         	call	_printf	;wreg free
 18458                           
 18459                           ;ring_buffer_LUT.c: 632: terminal_textAttributesReset();
 18460  011166  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18461                           
 18462                           ;ring_buffer_LUT.c: 634: }
 18463  01116A  0012               	return	
 18464  01116C                     l1564:
 18465                           
 18466                           ;ring_buffer_LUT.c: 637: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 18467  01116C  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18468  011170  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18469  011174  0E1C               	movlw	low STR_149
 18470  011176  0101               	movlb	1	; () banked
 18471  011178  6F19               	movwf	strcmp@s2& (0+255),b
 18472  01117A  0EFD               	movlw	high STR_149
 18473  01117C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18474  01117E  ECD0  F0D1         	call	_strcmp	;wreg free
 18475  011182  0101               	movlb	1	; () banked
 18476  011184  5117               	movf	?_strcmp& (0+255),w,b
 18477  011186  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18478  011188  A4D8               	btfss	status,2,c
 18479  01118A  D030               	goto	l1566
 18480                           
 18481                           ; BSR set to: 1
 18482                           ;ring_buffer_LUT.c: 640: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 18483  01118C  0E53               	movlw	low _max_FVR_ADC_Result_address
 18484  01118E  6EF6               	movwf	tblptrl,c
 18485  011190                     	if	1	;There is more than 1 active tblptr byte
 18486  011190  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18487  011192  6EF7               	movwf	tblptrh,c
 18488  011194                     	endif
 18489  011194                     	if	1	;There are 3 active tblptr bytes
 18490  011194  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18491  011196  6EF8               	movwf	tblptru,c
 18492  011198                     	endif
 18493  011198  0009               	tblrd		*+
 18494  01119A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 18495  01119E  000A               	tblrd		*-
 18496  0111A0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18497  0111A4  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 18498  0111A8  C119  F2BE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3305
 18499  0111AC  C11A  F2BF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3305+1
 18500  0111B0  C11B  F2C0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3305+2
 18501  0111B4  C11C  F2C1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3305+3
 18502                           
 18503                           ;ring_buffer_LUT.c: 642: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18504  0111B8  0E00               	movlw	0
 18505  0111BA  0101               	movlb	1	; () banked
 18506  0111BC  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18507  0111BE  0E00               	movlw	0
 18508  0111C0  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18509  0111C2  0E06               	movlw	6
 18510  0111C4  EC30  F0AA         	call	_terminal_textAttributes
 18511                           
 18512                           ;ring_buffer_LUT.c: 643: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 18513  0111C8  0E9B               	movlw	low STR_150
 18514  0111CA  0101               	movlb	1	; () banked
 18515  0111CC  6FAC               	movwf	printf@f& (0+255),b
 18516  0111CE  0EF4               	movlw	high STR_150
 18517  0111D0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18518  0111D2  C2BE  F1AE         	movff	ringBufferLUT@max_voltage_print_3305,?_printf+2
 18519  0111D6  C2BF  F1AF         	movff	ringBufferLUT@max_voltage_print_3305+1,?_printf+3
 18520  0111DA  C2C0  F1B0         	movff	ringBufferLUT@max_voltage_print_3305+2,?_printf+4
 18521  0111DE  C2C1  F1B1         	movff	ringBufferLUT@max_voltage_print_3305+3,?_printf+5
 18522  0111E2  ECC6  F0D4         	call	_printf	;wreg free
 18523                           
 18524                           ;ring_buffer_LUT.c: 644: terminal_textAttributesReset();
 18525  0111E6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18526                           
 18527                           ;ring_buffer_LUT.c: 646: }
 18528  0111EA  0012               	return	
 18529  0111EC                     l1566:
 18530                           
 18531                           ;ring_buffer_LUT.c: 649: else if((0 == strcmp(line, "Clear Max Values"))) {
 18532  0111EC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18533  0111F0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18534  0111F4  0E4F               	movlw	low STR_151
 18535  0111F6  0101               	movlb	1	; () banked
 18536  0111F8  6F19               	movwf	strcmp@s2& (0+255),b
 18537  0111FA  0EFD               	movlw	high STR_151
 18538  0111FC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18539  0111FE  ECD0  F0D1         	call	_strcmp	;wreg free
 18540  011202  0101               	movlb	1	; () banked
 18541  011204  5117               	movf	?_strcmp& (0+255),w,b
 18542  011206  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18543  011208  A4D8               	btfss	status,2,c
 18544  01120A  D0CC               	goto	l1568
 18545                           
 18546                           ; BSR set to: 1
 18547                           ;ring_buffer_LUT.c: 652: writeDoubleToEEPROM(0.0, max_Irms_address);
 18548  01120C  0E00               	movlw	0
 18549  01120E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18550  011210  0E00               	movlw	0
 18551  011212  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18552  011214  0E00               	movlw	0
 18553  011216  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18554  011218  0E00               	movlw	0
 18555  01121A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18556  01121C  0E5D               	movlw	low _max_Irms_address
 18557  01121E  6EF6               	movwf	tblptrl,c
 18558  011220                     	if	1	;There is more than 1 active tblptr byte
 18559  011220  0ECF               	movlw	high _max_Irms_address
 18560  011222  6EF7               	movwf	tblptrh,c
 18561  011224                     	endif
 18562  011224                     	if	1	;There are 3 active tblptr bytes
 18563  011224  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18564  011226  6EF8               	movwf	tblptru,c
 18565  011228                     	endif
 18566  011228  0009               	tblrd		*+
 18567  01122A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18568  01122E  000A               	tblrd		*-
 18569  011230  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18570  011234  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18571                           
 18572                           ;ring_buffer_LUT.c: 653: writeDoubleToEEPROM(0.0, max_Power_address);
 18573  011238  0E00               	movlw	0
 18574  01123A  0101               	movlb	1	; () banked
 18575  01123C  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18576  01123E  0E00               	movlw	0
 18577  011240  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18578  011242  0E00               	movlw	0
 18579  011244  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18580  011246  0E00               	movlw	0
 18581  011248  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18582  01124A  0E5B               	movlw	low _max_Power_address
 18583  01124C  6EF6               	movwf	tblptrl,c
 18584  01124E                     	if	1	;There is more than 1 active tblptr byte
 18585  01124E  0ECF               	movlw	high _max_Power_address
 18586  011250  6EF7               	movwf	tblptrh,c
 18587  011252                     	endif
 18588  011252                     	if	1	;There are 3 active tblptr bytes
 18589  011252  0E00               	movlw	low (_max_Power_address shr (0+16))
 18590  011254  6EF8               	movwf	tblptru,c
 18591  011256                     	endif
 18592  011256  0009               	tblrd		*+
 18593  011258  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18594  01125C  000A               	tblrd		*-
 18595  01125E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18596  011262  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18597                           
 18598                           ;ring_buffer_LUT.c: 654: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 18599  011266  0E00               	movlw	0
 18600  011268  0101               	movlb	1	; () banked
 18601  01126A  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18602  01126C  0E00               	movlw	0
 18603  01126E  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18604  011270  0E00               	movlw	0
 18605  011272  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18606  011274  0E00               	movlw	0
 18607  011276  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18608  011278  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 18609  01127A  6EF6               	movwf	tblptrl,c
 18610  01127C                     	if	1	;There is more than 1 active tblptr byte
 18611  01127C  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 18612  01127E  6EF7               	movwf	tblptrh,c
 18613  011280                     	endif
 18614  011280                     	if	1	;There are 3 active tblptr bytes
 18615  011280  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18616  011282  6EF8               	movwf	tblptru,c
 18617  011284                     	endif
 18618  011284  0009               	tblrd		*+
 18619  011286  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18620  01128A  000A               	tblrd		*-
 18621  01128C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18622  011290  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18623                           
 18624                           ;ring_buffer_LUT.c: 655: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 18625  011294  0E00               	movlw	0
 18626  011296  0101               	movlb	1	; () banked
 18627  011298  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18628  01129A  0E00               	movlw	0
 18629  01129C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18630  01129E  0E00               	movlw	0
 18631  0112A0  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18632  0112A2  0E00               	movlw	0
 18633  0112A4  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18634  0112A6  0E57               	movlw	low _max_POS12_ADC_Result_address
 18635  0112A8  6EF6               	movwf	tblptrl,c
 18636  0112AA                     	if	1	;There is more than 1 active tblptr byte
 18637  0112AA  0ECF               	movlw	high _max_POS12_ADC_Result_address
 18638  0112AC  6EF7               	movwf	tblptrh,c
 18639  0112AE                     	endif
 18640  0112AE                     	if	1	;There are 3 active tblptr bytes
 18641  0112AE  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 18642  0112B0  6EF8               	movwf	tblptru,c
 18643  0112B2                     	endif
 18644  0112B2  0009               	tblrd		*+
 18645  0112B4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18646  0112B8  000A               	tblrd		*-
 18647  0112BA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18648  0112BE  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18649                           
 18650                           ;ring_buffer_LUT.c: 656: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 18651  0112C2  0E00               	movlw	0
 18652  0112C4  0101               	movlb	1	; () banked
 18653  0112C6  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18654  0112C8  0E00               	movlw	0
 18655  0112CA  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18656  0112CC  0E00               	movlw	0
 18657  0112CE  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18658  0112D0  0E00               	movlw	0
 18659  0112D2  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18660  0112D4  0E55               	movlw	low _max_Temp_ADC_Result_address
 18661  0112D6  6EF6               	movwf	tblptrl,c
 18662  0112D8                     	if	1	;There is more than 1 active tblptr byte
 18663  0112D8  0ECF               	movlw	high _max_Temp_ADC_Result_address
 18664  0112DA  6EF7               	movwf	tblptrh,c
 18665  0112DC                     	endif
 18666  0112DC                     	if	1	;There are 3 active tblptr bytes
 18667  0112DC  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 18668  0112DE  6EF8               	movwf	tblptru,c
 18669  0112E0                     	endif
 18670  0112E0  0009               	tblrd		*+
 18671  0112E2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18672  0112E6  000A               	tblrd		*-
 18673  0112E8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18674  0112EC  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18675                           
 18676                           ;ring_buffer_LUT.c: 657: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 18677  0112F0  0E00               	movlw	0
 18678  0112F2  0101               	movlb	1	; () banked
 18679  0112F4  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 18680  0112F6  0E00               	movlw	0
 18681  0112F8  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 18682  0112FA  0E00               	movlw	0
 18683  0112FC  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 18684  0112FE  0E00               	movlw	0
 18685  011300  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 18686  011302  0E53               	movlw	low _max_FVR_ADC_Result_address
 18687  011304  6EF6               	movwf	tblptrl,c
 18688  011306                     	if	1	;There is more than 1 active tblptr byte
 18689  011306  0ECF               	movlw	high _max_FVR_ADC_Result_address
 18690  011308  6EF7               	movwf	tblptrh,c
 18691  01130A                     	endif
 18692  01130A                     	if	1	;There are 3 active tblptr bytes
 18693  01130A  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 18694  01130C  6EF8               	movwf	tblptru,c
 18695  01130E                     	endif
 18696  01130E  0009               	tblrd		*+
 18697  011310  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 18698  011314  000A               	tblrd		*-
 18699  011316  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 18700  01131A  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 18701                           
 18702                           ;ring_buffer_LUT.c: 660: max_Irms = 0.0;
 18703  01131E  0E00               	movlw	0
 18704  011320  0102               	movlb	2	; () banked
 18705  011322  6F24               	movwf	_max_Irms& (0+255),b	;volatile
 18706  011324  0E00               	movlw	0
 18707  011326  6F25               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 18708  011328  0E00               	movlw	0
 18709  01132A  6F26               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 18710  01132C  0E00               	movlw	0
 18711  01132E  6F27               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 18712                           
 18713                           ; BSR set to: 2
 18714                           ;ring_buffer_LUT.c: 661: max_Power = 0.0;
 18715  011330  0E00               	movlw	0
 18716  011332  6F20               	movwf	_max_Power& (0+255),b	;volatile
 18717  011334  0E00               	movlw	0
 18718  011336  6F21               	movwf	(_max_Power+1)& (0+255),b	;volatile
 18719  011338  0E00               	movlw	0
 18720  01133A  6F22               	movwf	(_max_Power+2)& (0+255),b	;volatile
 18721  01133C  0E00               	movlw	0
 18722  01133E  6F23               	movwf	(_max_Power+3)& (0+255),b	;volatile
 18723                           
 18724                           ; BSR set to: 2
 18725                           ;ring_buffer_LUT.c: 662: max_POS3P3_ADC_Result = 0.0;
 18726  011340  0E00               	movlw	0
 18727  011342  6F1C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 18728  011344  0E00               	movlw	0
 18729  011346  6F1D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 18730  011348  0E00               	movlw	0
 18731  01134A  6F1E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 18732  01134C  0E00               	movlw	0
 18733  01134E  6F1F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 18734                           
 18735                           ; BSR set to: 2
 18736                           ;ring_buffer_LUT.c: 663: max_POS12_ADC_Result = 0.0;
 18737  011350  0E00               	movlw	0
 18738  011352  6F18               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 18739  011354  0E00               	movlw	0
 18740  011356  6F19               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 18741  011358  0E00               	movlw	0
 18742  01135A  6F1A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 18743  01135C  0E00               	movlw	0
 18744  01135E  6F1B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 18745                           
 18746                           ; BSR set to: 2
 18747                           ;ring_buffer_LUT.c: 664: max_Temp_ADC_Result = 0.0;
 18748  011360  0E00               	movlw	0
 18749  011362  6F14               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 18750  011364  0E00               	movlw	0
 18751  011366  6F15               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 18752  011368  0E00               	movlw	0
 18753  01136A  6F16               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 18754  01136C  0E00               	movlw	0
 18755  01136E  6F17               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 18756                           
 18757                           ; BSR set to: 2
 18758                           ;ring_buffer_LUT.c: 665: max_FVR_ADC_Result = 0.0;
 18759  011370  0E00               	movlw	0
 18760  011372  6F10               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 18761  011374  0E00               	movlw	0
 18762  011376  6F11               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 18763  011378  0E00               	movlw	0
 18764  01137A  6F12               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 18765  01137C  0E00               	movlw	0
 18766  01137E  6F13               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 18767                           
 18768                           ; BSR set to: 2
 18769                           ;ring_buffer_LUT.c: 667: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18770  011380  0E00               	movlw	0
 18771  011382  0101               	movlb	1	; () banked
 18772  011384  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18773  011386  0E00               	movlw	0
 18774  011388  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18775  01138A  0E02               	movlw	2
 18776  01138C  EC30  F0AA         	call	_terminal_textAttributes
 18777                           
 18778                           ;ring_buffer_LUT.c: 668: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 18779  011390  0E2F               	movlw	low STR_152
 18780  011392  0101               	movlb	1	; () banked
 18781  011394  6FAC               	movwf	printf@f& (0+255),b
 18782  011396  0EF4               	movlw	high STR_152
 18783  011398  6FAD               	movwf	(printf@f+1)& (0+255),b
 18784  01139A  ECC6  F0D4         	call	_printf	;wreg free
 18785                           
 18786                           ;ring_buffer_LUT.c: 669: terminal_textAttributesReset();
 18787  01139E  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18788                           
 18789                           ;ring_buffer_LUT.c: 671: }
 18790  0113A2  0012               	return	
 18791  0113A4                     l1568:
 18792                           
 18793                           ;ring_buffer_LUT.c: 675: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 18794  0113A4  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18795  0113A8  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18796  0113AC  0EE3               	movlw	low STR_153
 18797  0113AE  0101               	movlb	1	; () banked
 18798  0113B0  6F19               	movwf	strcmp@s2& (0+255),b
 18799  0113B2  0EFA               	movlw	high STR_153
 18800  0113B4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18801  0113B6  ECD0  F0D1         	call	_strcmp	;wreg free
 18802  0113BA  0101               	movlb	1	; () banked
 18803  0113BC  5117               	movf	?_strcmp& (0+255),w,b
 18804  0113BE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18805  0113C0  A4D8               	btfss	status,2,c
 18806  0113C2  D011               	goto	l1570
 18807                           
 18808                           ; BSR set to: 1
 18809                           ;ring_buffer_LUT.c: 677: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18810  0113C4  0E00               	movlw	0
 18811  0113C6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18812  0113C8  0E00               	movlw	0
 18813  0113CA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18814  0113CC  0E03               	movlw	3
 18815  0113CE  EC30  F0AA         	call	_terminal_textAttributes
 18816                           
 18817                           ;ring_buffer_LUT.c: 678: printf("List of supported Device Control Commands:\n\r"
 18818                           ;ring_buffer_LUT.c: 680: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18819                           ;ring_buffer_LUT.c: 681: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18820                           ;ring_buffer_LUT.c: 682: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18821                           ;ring_buffer_LUT.c: 683: "   *IDN?: Returns device identification string\n\r"
 18822                           ;ring_buffer_LUT.c: 684: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 18823  0113D2  0EBF               	movlw	low STR_154
 18824  0113D4  0101               	movlb	1	; () banked
 18825  0113D6  6FAC               	movwf	printf@f& (0+255),b
 18826  0113D8  0EDE               	movlw	high STR_154
 18827  0113DA  6FAD               	movwf	(printf@f+1)& (0+255),b
 18828  0113DC  ECC6  F0D4         	call	_printf	;wreg free
 18829                           
 18830                           ;ring_buffer_LUT.c: 696: terminal_textAttributesReset();
 18831  0113E0  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18832                           
 18833                           ;ring_buffer_LUT.c: 698: }
 18834  0113E4  0012               	return	
 18835  0113E6                     l1570:
 18836                           
 18837                           ;ring_buffer_LUT.c: 701: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 18838  0113E6  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18839  0113EA  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18840  0113EE  0E0A               	movlw	low STR_155
 18841  0113F0  0101               	movlb	1	; () banked
 18842  0113F2  6F19               	movwf	strcmp@s2& (0+255),b
 18843  0113F4  0EFA               	movlw	high STR_155
 18844  0113F6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18845  0113F8  ECD0  F0D1         	call	_strcmp	;wreg free
 18846  0113FC  0101               	movlb	1	; () banked
 18847  0113FE  5117               	movf	?_strcmp& (0+255),w,b
 18848  011400  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18849  011402  A4D8               	btfss	status,2,c
 18850  011404  D011               	goto	l1572
 18851                           
 18852                           ; BSR set to: 1
 18853                           ;ring_buffer_LUT.c: 703: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18854  011406  0E00               	movlw	0
 18855  011408  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18856  01140A  0E00               	movlw	0
 18857  01140C  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18858  01140E  0E03               	movlw	3
 18859  011410  EC30  F0AA         	call	_terminal_textAttributes
 18860                           
 18861                           ;ring_buffer_LUT.c: 704: printf("List of supported Device Measurement Commands:\n\r"
 18862                           ;ring_buffer_LUT.c: 706: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 18863                           ;ring_buffer_LUT.c: 707: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 18864                           ;ring_buffer_LUT.c: 708: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 18865                           ;ring_buffer_LUT.c: 709: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 18866                           ;ring_buffer_LUT.c: 710: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 18867  011414  0E79               	movlw	low STR_156
 18868  011416  0101               	movlb	1	; () banked
 18869  011418  6FAC               	movwf	printf@f& (0+255),b
 18870  01141A  0EE5               	movlw	high STR_156
 18871  01141C  6FAD               	movwf	(printf@f+1)& (0+255),b
 18872  01141E  ECC6  F0D4         	call	_printf	;wreg free
 18873                           
 18874                           ;ring_buffer_LUT.c: 717: terminal_textAttributesReset();
 18875  011422  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18876                           
 18877                           ;ring_buffer_LUT.c: 719: }
 18878  011426  0012               	return	
 18879  011428                     l1572:
 18880                           
 18881                           ;ring_buffer_LUT.c: 722: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 18882  011428  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18883  01142C  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18884  011430  0EE8               	movlw	low STR_157
 18885  011432  0101               	movlb	1	; () banked
 18886  011434  6F19               	movwf	strcmp@s2& (0+255),b
 18887  011436  0EF9               	movlw	high STR_157
 18888  011438  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18889  01143A  ECD0  F0D1         	call	_strcmp	;wreg free
 18890  01143E  0101               	movlb	1	; () banked
 18891  011440  5117               	movf	?_strcmp& (0+255),w,b
 18892  011442  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18893  011444  A4D8               	btfss	status,2,c
 18894  011446  D011               	goto	l1574
 18895                           
 18896                           ; BSR set to: 1
 18897                           ;ring_buffer_LUT.c: 724: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18898  011448  0E00               	movlw	0
 18899  01144A  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18900  01144C  0E00               	movlw	0
 18901  01144E  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18902  011450  0E03               	movlw	3
 18903  011452  EC30  F0AA         	call	_terminal_textAttributes
 18904                           
 18905                           ;ring_buffer_LUT.c: 725: printf("List of supported Primary Measurement Commands:\n\r"
 18906                           ;ring_buffer_LUT.c: 727: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 18907                           ;ring_buffer_LUT.c: 728: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 18908                           ;ring_buffer_LUT.c: 729: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 18909                           ;ring_buffer_LUT.c: 730: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 18910  011456  0E8D               	movlw	low STR_158
 18911  011458  0101               	movlb	1	; () banked
 18912  01145A  6FAC               	movwf	printf@f& (0+255),b
 18913  01145C  0EE2               	movlw	high STR_158
 18914  01145E  6FAD               	movwf	(printf@f+1)& (0+255),b
 18915  011460  ECC6  F0D4         	call	_printf	;wreg free
 18916                           
 18917                           ;ring_buffer_LUT.c: 738: terminal_textAttributesReset();
 18918  011464  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18919                           
 18920                           ;ring_buffer_LUT.c: 740: }
 18921  011468  0012               	return	
 18922  01146A                     l1574:
 18923                           
 18924                           ;ring_buffer_LUT.c: 743: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 18925  01146A  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18926  01146E  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18927  011472  0E00               	movlw	low STR_159
 18928  011474  0101               	movlb	1	; () banked
 18929  011476  6F19               	movwf	strcmp@s2& (0+255),b
 18930  011478  0EFB               	movlw	high STR_159
 18931  01147A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18932  01147C  ECD0  F0D1         	call	_strcmp	;wreg free
 18933  011480  0101               	movlb	1	; () banked
 18934  011482  5117               	movf	?_strcmp& (0+255),w,b
 18935  011484  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18936  011486  A4D8               	btfss	status,2,c
 18937  011488  D011               	goto	l1576
 18938                           
 18939                           ; BSR set to: 1
 18940                           ;ring_buffer_LUT.c: 745: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18941  01148A  0E00               	movlw	0
 18942  01148C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18943  01148E  0E00               	movlw	0
 18944  011490  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18945  011492  0E03               	movlw	3
 18946  011494  EC30  F0AA         	call	_terminal_textAttributes
 18947                           
 18948                           ;ring_buffer_LUT.c: 746: printf("List of supported Output Control Commands:\n\r"
 18949                           ;ring_buffer_LUT.c: 748: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 18950                           ;ring_buffer_LUT.c: 749: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 18951                           ;ring_buffer_LUT.c: 750: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 18952                           ;ring_buffer_LUT.c: 751: "   Disable Load: Disables the output TRIAC completely\n\r"
 18953                           ;ring_buffer_LUT.c: 752: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 18954  011498  0E49               	movlw	low STR_160
 18955  01149A  0101               	movlb	1	; () banked
 18956  01149C  6FAC               	movwf	printf@f& (0+255),b
 18957  01149E  0EE8               	movlw	high STR_160
 18958  0114A0  6FAD               	movwf	(printf@f+1)& (0+255),b
 18959  0114A2  ECC6  F0D4         	call	_printf	;wreg free
 18960                           
 18961                           ;ring_buffer_LUT.c: 757: terminal_textAttributesReset();
 18962  0114A6  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 18963                           
 18964                           ;ring_buffer_LUT.c: 759: }
 18965  0114AA  0012               	return	
 18966  0114AC                     l1576:
 18967                           
 18968                           ;ring_buffer_LUT.c: 762: else if((0 == strcmp(line, "Help All"))) {
 18969  0114AC  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 18970  0114B0  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18971  0114B4  0E91               	movlw	low STR_161
 18972  0114B6  0101               	movlb	1	; () banked
 18973  0114B8  6F19               	movwf	strcmp@s2& (0+255),b
 18974  0114BA  0EFF               	movlw	high STR_161
 18975  0114BC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 18976  0114BE  ECD0  F0D1         	call	_strcmp	;wreg free
 18977  0114C2  0101               	movlb	1	; () banked
 18978  0114C4  5117               	movf	?_strcmp& (0+255),w,b
 18979  0114C6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 18980  0114C8  A4D8               	btfss	status,2,c
 18981  0114CA  D011               	goto	l1578
 18982                           
 18983                           ; BSR set to: 1
 18984                           ;ring_buffer_LUT.c: 764: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18985  0114CC  0E00               	movlw	0
 18986  0114CE  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 18987  0114D0  0E00               	movlw	0
 18988  0114D2  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18989  0114D4  0E03               	movlw	3
 18990  0114D6  EC30  F0AA         	call	_terminal_textAttributes
 18991                           
 18992                           ;ring_buffer_LUT.c: 765: printf("List of all supported commands:\n\r"
 18993                           ;ring_buffer_LUT.c: 767: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 18994                           ;ring_buffer_LUT.c: 768: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 18995                           ;ring_buffer_LUT.c: 769: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 18996                           ;ring_buffer_LUT.c: 770: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 18997                           ;ring_buffer_LUT.c: 771: "   *IDN?: Returns device identification string\n\r"
 18998  0114DA  0EB1               	movlw	low STR_162
 18999  0114DC  0101               	movlb	1	; () banked
 19000  0114DE  6FAC               	movwf	printf@f& (0+255),b
 19001  0114E0  0ED2               	movlw	high STR_162
 19002  0114E2  6FAD               	movwf	(printf@f+1)& (0+255),b
 19003  0114E4  ECC6  F0D4         	call	_printf	;wreg free
 19004                           
 19005                           ;ring_buffer_LUT.c: 816: terminal_textAttributesReset();
 19006  0114E8  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19007                           
 19008                           ;ring_buffer_LUT.c: 818: }
 19009  0114EC  0012               	return	
 19010  0114EE                     l1578:
 19011                           
 19012                           ;ring_buffer_LUT.c: 822: else if((0 == strcmp(line, "Help"))) {
 19013  0114EE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19014  0114F2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19015  0114F6  0EAD               	movlw	low STR_163
 19016  0114F8  0101               	movlb	1	; () banked
 19017  0114FA  6F19               	movwf	strcmp@s2& (0+255),b
 19018  0114FC  0EFF               	movlw	high STR_163
 19019  0114FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19020  011500  ECD0  F0D1         	call	_strcmp	;wreg free
 19021  011504  0101               	movlb	1	; () banked
 19022  011506  5117               	movf	?_strcmp& (0+255),w,b
 19023  011508  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19024  01150A  A4D8               	btfss	status,2,c
 19025  01150C  D050               	goto	l1580
 19026                           
 19027                           ; BSR set to: 1
 19028                           ;ring_buffer_LUT.c: 824: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19029  01150E  0E00               	movlw	0
 19030  011510  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19031  011512  0E00               	movlw	0
 19032  011514  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19033  011516  0E03               	movlw	3
 19034  011518  EC30  F0AA         	call	_terminal_textAttributes
 19035                           
 19036                           ;ring_buffer_LUT.c: 825: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 19037                           ;ring_buffer_LUT.c: 826: "Try 'Help <command set>'\n\r\n\r"
 19038                           ;ring_buffer_LUT.c: 828: "Supported Command Sets:\n\r"
 19039                           ;ring_buffer_LUT.c: 829: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 19040                           ;ring_buffer_LUT.c: 830: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 19041                           ;ring_buffer_LUT.c: 831: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 19042  01151C  0E35               	movlw	low STR_164
 19043  01151E  0101               	movlb	1	; () banked
 19044  011520  6FAC               	movwf	printf@f& (0+255),b
 19045  011522  0EEA               	movlw	high STR_164
 19046  011524  6FAD               	movwf	(printf@f+1)& (0+255),b
 19047  011526  ECC6  F0D4         	call	_printf	;wreg free
 19048                           
 19049                           ;ring_buffer_LUT.c: 838: terminal_printNewline();
 19050  01152A  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 19051                           
 19052                           ;ring_buffer_LUT.c: 839: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 19053  01152E  0EF8               	movlw	low STR_165
 19054  011530  0101               	movlb	1	; () banked
 19055  011532  6FAC               	movwf	printf@f& (0+255),b
 19056  011534  0EF3               	movlw	high STR_165
 19057  011536  6FAD               	movwf	(printf@f+1)& (0+255),b
 19058  011538  ECC6  F0D4         	call	_printf	;wreg free
 19059                           
 19060                           ;ring_buffer_LUT.c: 841: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19061  01153C  0E00               	movlw	0
 19062  01153E  0101               	movlb	1	; () banked
 19063  011540  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19064  011542  0E00               	movlw	0
 19065  011544  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19066  011546  0E02               	movlw	2
 19067  011548  EC30  F0AA         	call	_terminal_textAttributes
 19068                           
 19069                           ;ring_buffer_LUT.c: 842: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 19070  01154C  0E5C               	movlw	low STR_166
 19071  01154E  0101               	movlb	1	; () banked
 19072  011550  6FAC               	movwf	printf@f& (0+255),b
 19073  011552  0EF2               	movlw	high STR_166
 19074  011554  6FAD               	movwf	(printf@f+1)& (0+255),b
 19075  011556  ECC6  F0D4         	call	_printf	;wreg free
 19076                           
 19077                           ;ring_buffer_LUT.c: 843: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19078  01155A  0E00               	movlw	0
 19079  01155C  0101               	movlb	1	; () banked
 19080  01155E  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19081  011560  0E00               	movlw	0
 19082  011562  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19083  011564  0E06               	movlw	6
 19084  011566  EC30  F0AA         	call	_terminal_textAttributes
 19085                           
 19086                           ;ring_buffer_LUT.c: 844: printf("Measurement responses appear in cyan\n\r");
 19087  01156A  0E5C               	movlw	low STR_167
 19088  01156C  0101               	movlb	1	; () banked
 19089  01156E  6FAC               	movwf	printf@f& (0+255),b
 19090  011570  0EF8               	movlw	high STR_167
 19091  011572  6FAD               	movwf	(printf@f+1)& (0+255),b
 19092  011574  ECC6  F0D4         	call	_printf	;wreg free
 19093                           
 19094                           ;ring_buffer_LUT.c: 845: terminal_textAttributes(RED, BLACK, NORMAL);
 19095  011578  0E00               	movlw	0
 19096  01157A  0101               	movlb	1	; () banked
 19097  01157C  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19098  01157E  0E00               	movlw	0
 19099  011580  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19100  011582  0E01               	movlw	1
 19101  011584  EC30  F0AA         	call	_terminal_textAttributes
 19102                           
 19103                           ;ring_buffer_LUT.c: 846: printf("Errors and negative responses appear in red\n\r");
 19104  011588  0EFF               	movlw	low STR_168
 19105  01158A  0101               	movlb	1	; () banked
 19106  01158C  6FAC               	movwf	printf@f& (0+255),b
 19107  01158E  0EF6               	movlw	high STR_168
 19108  011590  6FAD               	movwf	(printf@f+1)& (0+255),b
 19109  011592  ECC6  F0D4         	call	_printf	;wreg free
 19110                           
 19111                           ;ring_buffer_LUT.c: 847: terminal_textAttributesReset();
 19112  011596  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19113                           
 19114                           ;ring_buffer_LUT.c: 848: printf("User input appears in white\n\r");
 19115  01159A  0EA8               	movlw	low STR_169
 19116  01159C  0101               	movlb	1	; () banked
 19117  01159E  6FAC               	movwf	printf@f& (0+255),b
 19118  0115A0  0EFA               	movlw	high STR_169
 19119  0115A2  6FAD               	movwf	(printf@f+1)& (0+255),b
 19120  0115A4  ECC6  F0D4         	call	_printf	;wreg free
 19121                           
 19122                           ;ring_buffer_LUT.c: 851: terminal_printNewline();
 19123  0115A8  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 19124                           
 19125                           ;ring_buffer_LUT.c: 853: }
 19126  0115AC  0012               	return	
 19127  0115AE                     l1580:
 19128                           
 19129                           ;ring_buffer_LUT.c: 856: else if ((0 == strcmp(line, "Easter Egg"))) {
 19130  0115AE  C1BF  F117         	movff	ringBufferLUT@line,strcmp@s1
 19131  0115B2  C1C0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19132  0115B6  0E5E               	movlw	low STR_170
 19133  0115B8  0101               	movlb	1	; () banked
 19134  0115BA  6F19               	movwf	strcmp@s2& (0+255),b
 19135  0115BC  0EFF               	movlw	high STR_170
 19136  0115BE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 19137  0115C0  ECD0  F0D1         	call	_strcmp	;wreg free
 19138  0115C4  0101               	movlb	1	; () banked
 19139  0115C6  5117               	movf	?_strcmp& (0+255),w,b
 19140  0115C8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 19141  0115CA  A4D8               	btfss	status,2,c
 19142  0115CC  0012               	return	
 19143                           
 19144                           ; BSR set to: 1
 19145                           ;ring_buffer_LUT.c: 858: terminal_printNewline();
 19146  0115CE  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 19147                           
 19148                           ;ring_buffer_LUT.c: 859: terminal_textAttributes(RED, BLACK, NORMAL);
 19149  0115D2  0E00               	movlw	0
 19150  0115D4  0101               	movlb	1	; () banked
 19151  0115D6  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19152  0115D8  0E00               	movlw	0
 19153  0115DA  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19154  0115DC  0E01               	movlw	1
 19155  0115DE  EC30  F0AA         	call	_terminal_textAttributes
 19156                           
 19157                           ;ring_buffer_LUT.c: 860: printf(
 19158                           ;ring_buffer_LUT.c: 861: "    _   ___   ___                      __  __     _           
      +                                         _   ___  _      \n\r"
 19159                           ;ring_buffer_LUT.c: 862: "   /_\\ / __| | _ \\_____ __ _____ _ _  |  \\/  |___| |_ ___ _
      +                           _   __ _ _ _  __| | |   \\(_)_ __  _ __  ___ _ _ \n\r"
 19160                           ;ring_buffer_LUT.c: 863: "  / _ \\ (__  |  _/ _ \\ V  V / -_) '_| | |\\/| / -_)  _/ -_) 
      +                          '_| / _` | ' \\/ _` | | |) | | '  \\| '  \\/ -_) '_|\n\r"
 19161                           ;ring_buffer_LUT.c: 864: " /_/ \\_\\___| |_| \\___/\\_/\\_/\\___|_|   |_|  |_\\___|\\__\
      +                          \___|_|   \\__,_|_||_\\__,_| |___/|_|_|_|_|_|_|_\\___|_|  \n\r"
 19162  0115E2  0E0B               	movlw	low STR_171
 19163  0115E4  0101               	movlb	1	; () banked
 19164  0115E6  6FAC               	movwf	printf@f& (0+255),b
 19165  0115E8  0EEC               	movlw	high STR_171
 19166  0115EA  6FAD               	movwf	(printf@f+1)& (0+255),b
 19167  0115EC  ECC6  F0D4         	call	_printf	;wreg free
 19168                           
 19169                           ;ring_buffer_LUT.c: 869: terminal_printNewline();
 19170  0115F0  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 19171                           
 19172                           ;ring_buffer_LUT.c: 870: terminal_textAttributes(YELLOW, BLUE, NORMAL);
 19173  0115F4  0E04               	movlw	4
 19174  0115F6  0101               	movlb	1	; () banked
 19175  0115F8  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19176  0115FA  0E00               	movlw	0
 19177  0115FC  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19178  0115FE  0E03               	movlw	3
 19179  011600  EC30  F0AA         	call	_terminal_textAttributes
 19180                           
 19181                           ;ring_buffer_LUT.c: 871: printf("Marquette University EECE\n\r");
 19182  011604  0E1D               	movlw	low STR_172
 19183  011606  0101               	movlb	1	; () banked
 19184  011608  6FAC               	movwf	printf@f& (0+255),b
 19185  01160A  0EFB               	movlw	high STR_172
 19186  01160C  6FAD               	movwf	(printf@f+1)& (0+255),b
 19187  01160E  ECC6  F0D4         	call	_printf	;wreg free
 19188                           
 19189                           ;ring_buffer_LUT.c: 872: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19190  011612  0E00               	movlw	0
 19191  011614  0101               	movlb	1	; () banked
 19192  011616  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19193  011618  0E00               	movlw	0
 19194  01161A  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19195  01161C  0E02               	movlw	2
 19196  01161E  EC30  F0AA         	call	_terminal_textAttributes
 19197                           
 19198                           ;ring_buffer_LUT.c: 873: printf("ELEN 3035 Final Project\n\r");
 19199  011622  0EB7               	movlw	low (STR_56+21)
 19200  011624  0101               	movlb	1	; () banked
 19201  011626  6FAC               	movwf	printf@f& (0+255),b
 19202  011628  0EF6               	movlw	high (STR_56+21)
 19203  01162A  6FAD               	movwf	(printf@f+1)& (0+255),b
 19204  01162C  ECC6  F0D4         	call	_printf	;wreg free
 19205                           
 19206                           ;ring_buffer_LUT.c: 874: printf("Drew Maatman and Gabe Thalji\n\r");
 19207  011630  0E89               	movlw	low STR_174
 19208  011632  0101               	movlb	1	; () banked
 19209  011634  6FAC               	movwf	printf@f& (0+255),b
 19210  011636  0EFA               	movlw	high STR_174
 19211  011638  6FAD               	movwf	(printf@f+1)& (0+255),b
 19212  01163A  ECC6  F0D4         	call	_printf	;wreg free
 19213                           
 19214                           ;ring_buffer_LUT.c: 875: terminal_textAttributes(YELLOW, BLACK, BOLD);
 19215  01163E  0E00               	movlw	0
 19216  011640  0101               	movlb	1	; () banked
 19217  011642  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19218  011644  0E01               	movlw	1
 19219  011646  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19220  011648  0E03               	movlw	3
 19221  01164A  EC30  F0AA         	call	_terminal_textAttributes
 19222                           
 19223                           ;ring_buffer_LUT.c: 876: printf("PSOCs SUCK\n\r");
 19224  01164E  0EA9               	movlw	low STR_175
 19225  011650  0101               	movlb	1	; () banked
 19226  011652  6FAC               	movwf	printf@f& (0+255),b
 19227  011654  0EFE               	movlw	high STR_175
 19228  011656  6FAD               	movwf	(printf@f+1)& (0+255),b
 19229  011658  ECC6  F0D4         	call	_printf	;wreg free
 19230                           
 19231                           ;ring_buffer_LUT.c: 877: terminal_textAttributesReset();
 19232  01165C  EC97  F0D8         	call	_terminal_textAttributesReset	;wreg free
 19233                           
 19234                           ;ring_buffer_LUT.c: 878: terminal_printNewline();
 19235  011660  ECB1  F0D8         	call	_terminal_printNewline	;wreg free
 19236  011664  0012               	return	
 19237  011666                     __end_of_ringBufferLUT:
 19238                           	opt stack 0
 19239                           tblptru	equ	0xFF8
 19240                           tblptrh	equ	0xFF7
 19241                           tblptrl	equ	0xFF6
 19242                           tablat	equ	0xFF5
 19243                           intcon	equ	0xFF2
 19244                           postinc0	equ	0xFEE
 19245                           wreg	equ	0xFE8
 19246                           indf1	equ	0xFE7
 19247                           postdec1	equ	0xFE5
 19248                           fsr1h	equ	0xFE2
 19249                           fsr1l	equ	0xFE1
 19250                           indf2	equ	0xFDF
 19251                           postinc2	equ	0xFDE
 19252                           fsr2h	equ	0xFDA
 19253                           fsr2l	equ	0xFD9
 19254                           status	equ	0xFD8
 19255                           
 19256 ;; *************** function _terminal_textAttributesReset *****************
 19257 ;; Defined at:
 19258 ;;		line 223 in file "ring_buffer_interface.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;		None
 19261 ;; Auto vars:     Size  Location     Type
 19262 ;;		None
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  1    wreg      void 
 19265 ;; Registers used:
 19266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19267 ;; Tracked objects:
 19268 ;;		On entry : 0/0
 19269 ;;		On exit  : 0/0
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19276 ;;Total ram usage:        0 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; Hardware stack levels required when called:   18
 19279 ;; This function calls:
 19280 ;;		_terminal_textAttributes
 19281 ;; This function is called by:
 19282 ;;		_main
 19283 ;;		_ringBufferLUT
 19284 ;; This function uses a non-reentrant model
 19285 ;;
 19286                           
 19287                           	psect	text5
 19288  01B12E                     __ptext5:
 19289                           	opt stack 0
 19290  01B12E                     _terminal_textAttributesReset:
 19291                           	opt stack 12
 19292                           
 19293                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 19294                           
 19295                           ;incstack = 0
 19296  01B12E  0E00               	movlw	0
 19297  01B130  0101               	movlb	1	; () banked
 19298  01B132  6FBD               	movwf	terminal_textAttributes@background_color& (0+255),b
 19299  01B134  0E00               	movlw	0
 19300  01B136  6FBE               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19301  01B138  0E07               	movlw	7
 19302  01B13A  EC30  F0AA         	call	_terminal_textAttributes
 19303  01B13E  0012               	return		;funcret
 19304  01B140                     __end_of_terminal_textAttributesReset:
 19305                           	opt stack 0
 19306                           tblptru	equ	0xFF8
 19307                           tblptrh	equ	0xFF7
 19308                           tblptrl	equ	0xFF6
 19309                           tablat	equ	0xFF5
 19310                           intcon	equ	0xFF2
 19311                           postinc0	equ	0xFEE
 19312                           wreg	equ	0xFE8
 19313                           indf1	equ	0xFE7
 19314                           postdec1	equ	0xFE5
 19315                           fsr1h	equ	0xFE2
 19316                           fsr1l	equ	0xFE1
 19317                           indf2	equ	0xFDF
 19318                           postinc2	equ	0xFDE
 19319                           fsr2h	equ	0xFDA
 19320                           fsr2l	equ	0xFD9
 19321                           status	equ	0xFD8
 19322                           
 19323 ;; *************** function _terminal_textAttributes *****************
 19324 ;; Defined at:
 19325 ;;		line 115 in file "ring_buffer_interface.c"
 19326 ;; Parameters:    Size  Location     Type
 19327 ;;  foreground_c    1    wreg     enum E18069
 19328 ;;  background_c    1  189[BANK1 ] enum E18069
 19329 ;;  input_attrib    1  190[BANK1 ] enum E18061
 19330 ;; Auto vars:     Size  Location     Type
 19331 ;;  foreground_c    1    0[BANK2 ] enum E18069
 19332 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 19333 ;; Return value:  Size  Location     Type
 19334 ;;                  1    wreg      void 
 19335 ;; Registers used:
 19336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19337 ;; Tracked objects:
 19338 ;;		On entry : 0/0
 19339 ;;		On exit  : 0/0
 19340 ;;		Unchanged: 0/0
 19341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19342 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19343 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19345 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 19346 ;;Total ram usage:       18 bytes
 19347 ;; Hardware stack levels used:    1
 19348 ;; Hardware stack levels required when called:   17
 19349 ;; This function calls:
 19350 ;;		_printf
 19351 ;;		_strcat
 19352 ;;		_strncpy
 19353 ;; This function is called by:
 19354 ;;		_terminal_textAttributesReset
 19355 ;;		_ringBufferLUT
 19356 ;; This function uses a non-reentrant model
 19357 ;;
 19358                           
 19359                           	psect	text6
 19360  015460                     __ptext6:
 19361                           	opt stack 0
 19362  015460                     _terminal_textAttributes:
 19363                           	opt stack 12
 19364                           
 19365                           ;incstack = 0
 19366                           ;terminal_textAttributes@foreground_color stored from wreg
 19367  015460  0102               	movlb	2	; () banked
 19368  015462  6F93               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 19369                           
 19370                           ;ring_buffer_interface.c: 119: char output_buff[15];
 19371                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 19372  015464  0E94               	movlw	low terminal_textAttributes@output_buff
 19373  015466  0101               	movlb	1	; () banked
 19374  015468  6F17               	movwf	strncpy@to& (0+255),b
 19375  01546A  0E02               	movlw	high terminal_textAttributes@output_buff
 19376  01546C  6F18               	movwf	(strncpy@to+1)& (0+255),b
 19377  01546E  0EF5               	movlw	low STR_15
 19378  015470  6F19               	movwf	strncpy@from& (0+255),b
 19379  015472  0EFF               	movlw	high STR_15
 19380  015474  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 19381  015476  0E00               	movlw	0
 19382  015478  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 19383  01547A  0E0F               	movlw	15
 19384  01547C  6F1B               	movwf	strncpy@size& (0+255),b
 19385  01547E  ECFD  F0CF         	call	_strncpy	;wreg free
 19386                           
 19387                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 19388  015482  D054               	goto	l1311
 19389  015484                     
 19390                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 19391  015484  0E94               	movlw	low terminal_textAttributes@output_buff
 19392  015486  0101               	movlb	1	; () banked
 19393  015488  6F17               	movwf	strcat@to& (0+255),b
 19394  01548A  0E02               	movlw	high terminal_textAttributes@output_buff
 19395  01548C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19396  01548E  0ECC               	movlw	low (STR_24+1)
 19397  015490  6F19               	movwf	strcat@from& (0+255),b
 19398  015492  0EFF               	movlw	high (STR_24+1)
 19399  015494  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19400  015496  ECBE  F0D2         	call	_strcat	;wreg free
 19401                           
 19402                           ;ring_buffer_interface.c: 127: break;
 19403  01549A  D05D               	goto	l1313
 19404  01549C                     
 19405                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 19406  01549C  0E94               	movlw	low terminal_textAttributes@output_buff
 19407  01549E  0101               	movlb	1	; () banked
 19408  0154A0  6F17               	movwf	strcat@to& (0+255),b
 19409  0154A2  0E02               	movlw	high terminal_textAttributes@output_buff
 19410  0154A4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19411  0154A6  0ECF               	movlw	low (STR_25+1)
 19412  0154A8  6F19               	movwf	strcat@from& (0+255),b
 19413  0154AA  0EFF               	movlw	high (STR_25+1)
 19414  0154AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19415  0154AE  ECBE  F0D2         	call	_strcat	;wreg free
 19416                           
 19417                           ;ring_buffer_interface.c: 130: break;
 19418  0154B2  D051               	goto	l1313
 19419  0154B4                     
 19420                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 19421  0154B4  0E94               	movlw	low terminal_textAttributes@output_buff
 19422  0154B6  0101               	movlb	1	; () banked
 19423  0154B8  6F17               	movwf	strcat@to& (0+255),b
 19424  0154BA  0E02               	movlw	high terminal_textAttributes@output_buff
 19425  0154BC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19426  0154BE  0EE1               	movlw	low (STR_28+1)
 19427  0154C0  6F19               	movwf	strcat@from& (0+255),b
 19428  0154C2  0EFF               	movlw	high (STR_28+1)
 19429  0154C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19430  0154C6  ECBE  F0D2         	call	_strcat	;wreg free
 19431                           
 19432                           ;ring_buffer_interface.c: 133: break;
 19433  0154CA  D045               	goto	l1313
 19434  0154CC                     
 19435                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 19436  0154CC  0E94               	movlw	low terminal_textAttributes@output_buff
 19437  0154CE  0101               	movlb	1	; () banked
 19438  0154D0  6F17               	movwf	strcat@to& (0+255),b
 19439  0154D2  0E02               	movlw	high terminal_textAttributes@output_buff
 19440  0154D4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19441  0154D6  0E8F               	movlw	low (STR_3+8)
 19442  0154D8  6F19               	movwf	strcat@from& (0+255),b
 19443  0154DA  0EFF               	movlw	high (STR_3+8)
 19444  0154DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19445  0154DE  ECBE  F0D2         	call	_strcat	;wreg free
 19446                           
 19447                           ;ring_buffer_interface.c: 136: break;
 19448  0154E2  D039               	goto	l1313
 19449  0154E4                     
 19450                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 19451  0154E4  0E94               	movlw	low terminal_textAttributes@output_buff
 19452  0154E6  0101               	movlb	1	; () banked
 19453  0154E8  6F17               	movwf	strcat@to& (0+255),b
 19454  0154EA  0E02               	movlw	high terminal_textAttributes@output_buff
 19455  0154EC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19456  0154EE  0EF0               	movlw	low (STR_31+1)
 19457  0154F0  6F19               	movwf	strcat@from& (0+255),b
 19458  0154F2  0EFF               	movlw	high (STR_31+1)
 19459  0154F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19460  0154F6  ECBE  F0D2         	call	_strcat	;wreg free
 19461                           
 19462                           ;ring_buffer_interface.c: 139: break;
 19463  0154FA  D02D               	goto	l1313
 19464  0154FC                     
 19465                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 19466  0154FC  0E94               	movlw	low terminal_textAttributes@output_buff
 19467  0154FE  0101               	movlb	1	; () banked
 19468  015500  6F17               	movwf	strcat@to& (0+255),b
 19469  015502  0E02               	movlw	high terminal_textAttributes@output_buff
 19470  015504  6F18               	movwf	(strcat@to+1)& (0+255),b
 19471  015506  0EF8               	movlw	low STR_21
 19472  015508  6F19               	movwf	strcat@from& (0+255),b
 19473  01550A  0EFF               	movlw	high STR_21
 19474  01550C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19475  01550E  ECBE  F0D2         	call	_strcat	;wreg free
 19476                           
 19477                           ;ring_buffer_interface.c: 142: break;
 19478  015512  D021               	goto	l1313
 19479  015514                     
 19480                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 19481  015514  0E94               	movlw	low terminal_textAttributes@output_buff
 19482  015516  0101               	movlb	1	; () banked
 19483  015518  6F17               	movwf	strcat@to& (0+255),b
 19484  01551A  0E02               	movlw	high terminal_textAttributes@output_buff
 19485  01551C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19486  01551E  0ECC               	movlw	low (STR_24+1)
 19487  015520  6F19               	movwf	strcat@from& (0+255),b
 19488  015522  0EFF               	movlw	high (STR_24+1)
 19489  015524  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19490  015526  ECBE  F0D2         	call	_strcat	;wreg free
 19491                           
 19492                           ;ring_buffer_interface.c: 147: }
 19493                           
 19494                           ;ring_buffer_interface.c: 146: break;
 19495  01552A  D015               	goto	l1313
 19496  01552C                     l1311:
 19497  01552C  0101               	movlb	1	; () banked
 19498  01552E  51BE               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 19499                           
 19500                           ; Switch size 1, requested type "space"
 19501                           ; Number of cases is 6, Range of values is 0 to 5
 19502                           ; switch strategies available:
 19503                           ; Name         Instructions Cycles
 19504                           ; simple_byte           19    10 (average)
 19505                           ;	Chosen strategy is simple_byte
 19506  015530  0A00               	xorlw	0	; case 0
 19507  015532  B4D8               	btfsc	status,2,c
 19508  015534  D7A7               	goto	l1312
 19509  015536  0A01               	xorlw	1	; case 1
 19510  015538  B4D8               	btfsc	status,2,c
 19511  01553A  D7B0               	goto	l1314
 19512  01553C  0A03               	xorlw	3	; case 2
 19513  01553E  B4D8               	btfsc	status,2,c
 19514  015540  D7B9               	goto	l1315
 19515  015542  0A01               	xorlw	1	; case 3
 19516  015544  B4D8               	btfsc	status,2,c
 19517  015546  D7C2               	goto	l1316
 19518  015548  0A07               	xorlw	7	; case 4
 19519  01554A  B4D8               	btfsc	status,2,c
 19520  01554C  D7CB               	goto	l1317
 19521  01554E  0A01               	xorlw	1	; case 5
 19522  015550  B4D8               	btfsc	status,2,c
 19523  015552  D7D4               	goto	l1318
 19524  015554  D7DF               	goto	l1319
 19525  015556                     l1313:
 19526                           
 19527                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 19528                           
 19529                           ; BSR set to: 1
 19530  015556  0E94               	movlw	low terminal_textAttributes@output_buff
 19531  015558  0101               	movlb	1	; () banked
 19532  01555A  6F17               	movwf	strcat@to& (0+255),b
 19533  01555C  0E02               	movlw	high terminal_textAttributes@output_buff
 19534  01555E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19535  015560  0EFA               	movlw	low STR_23
 19536  015562  6F19               	movwf	strcat@from& (0+255),b
 19537  015564  0EFF               	movlw	high STR_23
 19538  015566  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19539  015568  ECBE  F0D2         	call	_strcat	;wreg free
 19540                           
 19541                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 19542  01556C  D06C               	goto	l1320
 19543  01556E                     
 19544                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 19545  01556E  0E94               	movlw	low terminal_textAttributes@output_buff
 19546  015570  0101               	movlb	1	; () banked
 19547  015572  6F17               	movwf	strcat@to& (0+255),b
 19548  015574  0E02               	movlw	high terminal_textAttributes@output_buff
 19549  015576  6F18               	movwf	(strcat@to+1)& (0+255),b
 19550  015578  0ECB               	movlw	low STR_24
 19551  01557A  6F19               	movwf	strcat@from& (0+255),b
 19552  01557C  0EFF               	movlw	high STR_24
 19553  01557E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19554  015580  ECBE  F0D2         	call	_strcat	;wreg free
 19555                           
 19556                           ;ring_buffer_interface.c: 155: break;
 19557  015584  D07B               	goto	l1322
 19558  015586                     
 19559                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 19560  015586  0E94               	movlw	low terminal_textAttributes@output_buff
 19561  015588  0101               	movlb	1	; () banked
 19562  01558A  6F17               	movwf	strcat@to& (0+255),b
 19563  01558C  0E02               	movlw	high terminal_textAttributes@output_buff
 19564  01558E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19565  015590  0ECE               	movlw	low STR_25
 19566  015592  6F19               	movwf	strcat@from& (0+255),b
 19567  015594  0EFF               	movlw	high STR_25
 19568  015596  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19569  015598  ECBE  F0D2         	call	_strcat	;wreg free
 19570                           
 19571                           ;ring_buffer_interface.c: 158: break;
 19572  01559C  D06F               	goto	l1322
 19573  01559E                     
 19574                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 19575  01559E  0E94               	movlw	low terminal_textAttributes@output_buff
 19576  0155A0  0101               	movlb	1	; () banked
 19577  0155A2  6F17               	movwf	strcat@to& (0+255),b
 19578  0155A4  0E02               	movlw	high terminal_textAttributes@output_buff
 19579  0155A6  6F18               	movwf	(strcat@to+1)& (0+255),b
 19580  0155A8  0ED4               	movlw	low STR_26
 19581  0155AA  6F19               	movwf	strcat@from& (0+255),b
 19582  0155AC  0EFF               	movlw	high STR_26
 19583  0155AE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19584  0155B0  ECBE  F0D2         	call	_strcat	;wreg free
 19585                           
 19586                           ;ring_buffer_interface.c: 161: break;
 19587  0155B4  D063               	goto	l1322
 19588  0155B6                     
 19589                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 19590  0155B6  0E94               	movlw	low terminal_textAttributes@output_buff
 19591  0155B8  0101               	movlb	1	; () banked
 19592  0155BA  6F17               	movwf	strcat@to& (0+255),b
 19593  0155BC  0E02               	movlw	high terminal_textAttributes@output_buff
 19594  0155BE  6F18               	movwf	(strcat@to+1)& (0+255),b
 19595  0155C0  0EDA               	movlw	low STR_27
 19596  0155C2  6F19               	movwf	strcat@from& (0+255),b
 19597  0155C4  0EFF               	movlw	high STR_27
 19598  0155C6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19599  0155C8  ECBE  F0D2         	call	_strcat	;wreg free
 19600                           
 19601                           ;ring_buffer_interface.c: 164: break;
 19602  0155CC  D057               	goto	l1322
 19603  0155CE                     
 19604                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 19605  0155CE  0E94               	movlw	low terminal_textAttributes@output_buff
 19606  0155D0  0101               	movlb	1	; () banked
 19607  0155D2  6F17               	movwf	strcat@to& (0+255),b
 19608  0155D4  0E02               	movlw	high terminal_textAttributes@output_buff
 19609  0155D6  6F18               	movwf	(strcat@to+1)& (0+255),b
 19610  0155D8  0EE0               	movlw	low STR_28
 19611  0155DA  6F19               	movwf	strcat@from& (0+255),b
 19612  0155DC  0EFF               	movlw	high STR_28
 19613  0155DE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19614  0155E0  ECBE  F0D2         	call	_strcat	;wreg free
 19615                           
 19616                           ;ring_buffer_interface.c: 167: break;
 19617  0155E4  D04B               	goto	l1322
 19618  0155E6                     
 19619                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 19620  0155E6  0E94               	movlw	low terminal_textAttributes@output_buff
 19621  0155E8  0101               	movlb	1	; () banked
 19622  0155EA  6F17               	movwf	strcat@to& (0+255),b
 19623  0155EC  0E02               	movlw	high terminal_textAttributes@output_buff
 19624  0155EE  6F18               	movwf	(strcat@to+1)& (0+255),b
 19625  0155F0  0E8E               	movlw	low (STR_3+7)
 19626  0155F2  6F19               	movwf	strcat@from& (0+255),b
 19627  0155F4  0EFF               	movlw	high (STR_3+7)
 19628  0155F6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19629  0155F8  ECBE  F0D2         	call	_strcat	;wreg free
 19630                           
 19631                           ;ring_buffer_interface.c: 170: break;
 19632  0155FC  D03F               	goto	l1322
 19633  0155FE                     
 19634                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 19635  0155FE  0E94               	movlw	low terminal_textAttributes@output_buff
 19636  015600  0101               	movlb	1	; () banked
 19637  015602  6F17               	movwf	strcat@to& (0+255),b
 19638  015604  0E02               	movlw	high terminal_textAttributes@output_buff
 19639  015606  6F18               	movwf	(strcat@to+1)& (0+255),b
 19640  015608  0EE9               	movlw	low STR_30
 19641  01560A  6F19               	movwf	strcat@from& (0+255),b
 19642  01560C  0EFF               	movlw	high STR_30
 19643  01560E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19644  015610  ECBE  F0D2         	call	_strcat	;wreg free
 19645                           
 19646                           ;ring_buffer_interface.c: 173: break;
 19647  015614  D033               	goto	l1322
 19648  015616                     
 19649                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 19650  015616  0E94               	movlw	low terminal_textAttributes@output_buff
 19651  015618  0101               	movlb	1	; () banked
 19652  01561A  6F17               	movwf	strcat@to& (0+255),b
 19653  01561C  0E02               	movlw	high terminal_textAttributes@output_buff
 19654  01561E  6F18               	movwf	(strcat@to+1)& (0+255),b
 19655  015620  0EEF               	movlw	low STR_31
 19656  015622  6F19               	movwf	strcat@from& (0+255),b
 19657  015624  0EFF               	movlw	high STR_31
 19658  015626  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19659  015628  ECBE  F0D2         	call	_strcat	;wreg free
 19660                           
 19661                           ;ring_buffer_interface.c: 176: break;
 19662  01562C  D027               	goto	l1322
 19663  01562E                     
 19664                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 19665  01562E  0E94               	movlw	low terminal_textAttributes@output_buff
 19666  015630  0101               	movlb	1	; () banked
 19667  015632  6F17               	movwf	strcat@to& (0+255),b
 19668  015634  0E02               	movlw	high terminal_textAttributes@output_buff
 19669  015636  6F18               	movwf	(strcat@to+1)& (0+255),b
 19670  015638  0EEF               	movlw	low STR_31
 19671  01563A  6F19               	movwf	strcat@from& (0+255),b
 19672  01563C  0EFF               	movlw	high STR_31
 19673  01563E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19674  015640  ECBE  F0D2         	call	_strcat	;wreg free
 19675                           
 19676                           ;ring_buffer_interface.c: 181: }
 19677                           
 19678                           ;ring_buffer_interface.c: 180: break;
 19679  015644  D01B               	goto	l1322
 19680  015646                     l1320:
 19681  015646  0102               	movlb	2	; () banked
 19682  015648  5193               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 19683                           
 19684                           ; Switch size 1, requested type "space"
 19685                           ; Number of cases is 8, Range of values is 0 to 7
 19686                           ; switch strategies available:
 19687                           ; Name         Instructions Cycles
 19688                           ; simple_byte           25    13 (average)
 19689                           ;	Chosen strategy is simple_byte
 19690  01564A  0A00               	xorlw	0	; case 0
 19691  01564C  B4D8               	btfsc	status,2,c
 19692  01564E  D78F               	goto	l1321
 19693  015650  0A01               	xorlw	1	; case 1
 19694  015652  B4D8               	btfsc	status,2,c
 19695  015654  D798               	goto	l1323
 19696  015656  0A03               	xorlw	3	; case 2
 19697  015658  B4D8               	btfsc	status,2,c
 19698  01565A  D7A1               	goto	l1324
 19699  01565C  0A01               	xorlw	1	; case 3
 19700  01565E  B4D8               	btfsc	status,2,c
 19701  015660  D7AA               	goto	l1325
 19702  015662  0A07               	xorlw	7	; case 4
 19703  015664  B4D8               	btfsc	status,2,c
 19704  015666  D7B3               	goto	l1326
 19705  015668  0A01               	xorlw	1	; case 5
 19706  01566A  B4D8               	btfsc	status,2,c
 19707  01566C  D7BC               	goto	l1327
 19708  01566E  0A03               	xorlw	3	; case 6
 19709  015670  B4D8               	btfsc	status,2,c
 19710  015672  D7C5               	goto	l1328
 19711  015674  0A01               	xorlw	1	; case 7
 19712  015676  B4D8               	btfsc	status,2,c
 19713  015678  D7CE               	goto	l1329
 19714  01567A  D7D9               	goto	l1330
 19715  01567C                     l1322:
 19716                           
 19717                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 19718                           
 19719                           ; BSR set to: 2
 19720  01567C  0E94               	movlw	low terminal_textAttributes@output_buff
 19721  01567E  0101               	movlb	1	; () banked
 19722  015680  6F17               	movwf	strcat@to& (0+255),b
 19723  015682  0E02               	movlw	high terminal_textAttributes@output_buff
 19724  015684  6F18               	movwf	(strcat@to+1)& (0+255),b
 19725  015686  0EFA               	movlw	low STR_23
 19726  015688  6F19               	movwf	strcat@from& (0+255),b
 19727  01568A  0EFF               	movlw	high STR_23
 19728  01568C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19729  01568E  ECBE  F0D2         	call	_strcat	;wreg free
 19730                           
 19731                           ;ring_buffer_interface.c: 185: switch (background_color) {
 19732  015692  D06C               	goto	l1331
 19733  015694                     
 19734                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 19735  015694  0E94               	movlw	low terminal_textAttributes@output_buff
 19736  015696  0101               	movlb	1	; () banked
 19737  015698  6F17               	movwf	strcat@to& (0+255),b
 19738  01569A  0E02               	movlw	high terminal_textAttributes@output_buff
 19739  01569C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19740  01569E  0E00               	movlw	low (STR_176+9)
 19741  0156A0  6F19               	movwf	strcat@from& (0+255),b
 19742  0156A2  0EFF               	movlw	high (STR_176+9)
 19743  0156A4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19744  0156A6  ECBE  F0D2         	call	_strcat	;wreg free
 19745                           
 19746                           ;ring_buffer_interface.c: 189: break;
 19747  0156AA  D07B               	goto	l1333
 19748  0156AC                     
 19749                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 19750  0156AC  0E94               	movlw	low terminal_textAttributes@output_buff
 19751  0156AE  0101               	movlb	1	; () banked
 19752  0156B0  6F17               	movwf	strcat@to& (0+255),b
 19753  0156B2  0E02               	movlw	high terminal_textAttributes@output_buff
 19754  0156B4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19755  0156B6  0ED1               	movlw	low STR_35
 19756  0156B8  6F19               	movwf	strcat@from& (0+255),b
 19757  0156BA  0EFF               	movlw	high STR_35
 19758  0156BC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19759  0156BE  ECBE  F0D2         	call	_strcat	;wreg free
 19760                           
 19761                           ;ring_buffer_interface.c: 192: break;
 19762  0156C2  D06F               	goto	l1333
 19763  0156C4                     
 19764                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 19765  0156C4  0E94               	movlw	low terminal_textAttributes@output_buff
 19766  0156C6  0101               	movlb	1	; () banked
 19767  0156C8  6F17               	movwf	strcat@to& (0+255),b
 19768  0156CA  0E02               	movlw	high terminal_textAttributes@output_buff
 19769  0156CC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19770  0156CE  0ED7               	movlw	low STR_36
 19771  0156D0  6F19               	movwf	strcat@from& (0+255),b
 19772  0156D2  0EFF               	movlw	high STR_36
 19773  0156D4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19774  0156D6  ECBE  F0D2         	call	_strcat	;wreg free
 19775                           
 19776                           ;ring_buffer_interface.c: 195: break;
 19777  0156DA  D063               	goto	l1333
 19778  0156DC                     
 19779                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 19780  0156DC  0E94               	movlw	low terminal_textAttributes@output_buff
 19781  0156DE  0101               	movlb	1	; () banked
 19782  0156E0  6F17               	movwf	strcat@to& (0+255),b
 19783  0156E2  0E02               	movlw	high terminal_textAttributes@output_buff
 19784  0156E4  6F18               	movwf	(strcat@to+1)& (0+255),b
 19785  0156E6  0EDD               	movlw	low STR_37
 19786  0156E8  6F19               	movwf	strcat@from& (0+255),b
 19787  0156EA  0EFF               	movlw	high STR_37
 19788  0156EC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19789  0156EE  ECBE  F0D2         	call	_strcat	;wreg free
 19790                           
 19791                           ;ring_buffer_interface.c: 198: break;
 19792  0156F2  D057               	goto	l1333
 19793  0156F4                     
 19794                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 19795  0156F4  0E94               	movlw	low terminal_textAttributes@output_buff
 19796  0156F6  0101               	movlb	1	; () banked
 19797  0156F8  6F17               	movwf	strcat@to& (0+255),b
 19798  0156FA  0E02               	movlw	high terminal_textAttributes@output_buff
 19799  0156FC  6F18               	movwf	(strcat@to+1)& (0+255),b
 19800  0156FE  0EE3               	movlw	low STR_38
 19801  015700  6F19               	movwf	strcat@from& (0+255),b
 19802  015702  0EFF               	movlw	high STR_38
 19803  015704  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19804  015706  ECBE  F0D2         	call	_strcat	;wreg free
 19805                           
 19806                           ;ring_buffer_interface.c: 201: break;
 19807  01570A  D04B               	goto	l1333
 19808  01570C                     
 19809                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 19810  01570C  0E94               	movlw	low terminal_textAttributes@output_buff
 19811  01570E  0101               	movlb	1	; () banked
 19812  015710  6F17               	movwf	strcat@to& (0+255),b
 19813  015712  0E02               	movlw	high terminal_textAttributes@output_buff
 19814  015714  6F18               	movwf	(strcat@to+1)& (0+255),b
 19815  015716  0EE6               	movlw	low STR_39
 19816  015718  6F19               	movwf	strcat@from& (0+255),b
 19817  01571A  0EFF               	movlw	high STR_39
 19818  01571C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19819  01571E  ECBE  F0D2         	call	_strcat	;wreg free
 19820                           
 19821                           ;ring_buffer_interface.c: 204: break;
 19822  015722  D03F               	goto	l1333
 19823  015724                     
 19824                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 19825  015724  0E94               	movlw	low terminal_textAttributes@output_buff
 19826  015726  0101               	movlb	1	; () banked
 19827  015728  6F17               	movwf	strcat@to& (0+255),b
 19828  01572A  0E02               	movlw	high terminal_textAttributes@output_buff
 19829  01572C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19830  01572E  0EEC               	movlw	low STR_40
 19831  015730  6F19               	movwf	strcat@from& (0+255),b
 19832  015732  0EFF               	movlw	high STR_40
 19833  015734  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19834  015736  ECBE  F0D2         	call	_strcat	;wreg free
 19835                           
 19836                           ;ring_buffer_interface.c: 207: break;
 19837  01573A  D033               	goto	l1333
 19838  01573C                     
 19839                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 19840  01573C  0E94               	movlw	low terminal_textAttributes@output_buff
 19841  01573E  0101               	movlb	1	; () banked
 19842  015740  6F17               	movwf	strcat@to& (0+255),b
 19843  015742  0E02               	movlw	high terminal_textAttributes@output_buff
 19844  015744  6F18               	movwf	(strcat@to+1)& (0+255),b
 19845  015746  0EF2               	movlw	low STR_41
 19846  015748  6F19               	movwf	strcat@from& (0+255),b
 19847  01574A  0EFF               	movlw	high STR_41
 19848  01574C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19849  01574E  ECBE  F0D2         	call	_strcat	;wreg free
 19850                           
 19851                           ;ring_buffer_interface.c: 210: break;
 19852  015752  D027               	goto	l1333
 19853  015754                     
 19854                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 19855  015754  0E94               	movlw	low terminal_textAttributes@output_buff
 19856  015756  0101               	movlb	1	; () banked
 19857  015758  6F17               	movwf	strcat@to& (0+255),b
 19858  01575A  0E02               	movlw	high terminal_textAttributes@output_buff
 19859  01575C  6F18               	movwf	(strcat@to+1)& (0+255),b
 19860  01575E  0EF2               	movlw	low STR_41
 19861  015760  6F19               	movwf	strcat@from& (0+255),b
 19862  015762  0EFF               	movlw	high STR_41
 19863  015764  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19864  015766  ECBE  F0D2         	call	_strcat	;wreg free
 19865                           
 19866                           ;ring_buffer_interface.c: 215: }
 19867                           
 19868                           ;ring_buffer_interface.c: 214: break;
 19869  01576A  D01B               	goto	l1333
 19870  01576C                     l1331:
 19871  01576C  0101               	movlb	1	; () banked
 19872  01576E  51BD               	movf	terminal_textAttributes@background_color& (0+255),w,b
 19873                           
 19874                           ; Switch size 1, requested type "space"
 19875                           ; Number of cases is 8, Range of values is 0 to 7
 19876                           ; switch strategies available:
 19877                           ; Name         Instructions Cycles
 19878                           ; simple_byte           25    13 (average)
 19879                           ;	Chosen strategy is simple_byte
 19880  015770  0A00               	xorlw	0	; case 0
 19881  015772  B4D8               	btfsc	status,2,c
 19882  015774  D78F               	goto	l1332
 19883  015776  0A01               	xorlw	1	; case 1
 19884  015778  B4D8               	btfsc	status,2,c
 19885  01577A  D798               	goto	l1334
 19886  01577C  0A03               	xorlw	3	; case 2
 19887  01577E  B4D8               	btfsc	status,2,c
 19888  015780  D7A1               	goto	l1335
 19889  015782  0A01               	xorlw	1	; case 3
 19890  015784  B4D8               	btfsc	status,2,c
 19891  015786  D7AA               	goto	l1336
 19892  015788  0A07               	xorlw	7	; case 4
 19893  01578A  B4D8               	btfsc	status,2,c
 19894  01578C  D7B3               	goto	l1337
 19895  01578E  0A01               	xorlw	1	; case 5
 19896  015790  B4D8               	btfsc	status,2,c
 19897  015792  D7BC               	goto	l1338
 19898  015794  0A03               	xorlw	3	; case 6
 19899  015796  B4D8               	btfsc	status,2,c
 19900  015798  D7C5               	goto	l1339
 19901  01579A  0A01               	xorlw	1	; case 7
 19902  01579C  B4D8               	btfsc	status,2,c
 19903  01579E  D7CE               	goto	l1340
 19904  0157A0  D7D9               	goto	l1341
 19905  0157A2                     l1333:
 19906                           
 19907                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 19908                           
 19909                           ; BSR set to: 1
 19910  0157A2  0E94               	movlw	low terminal_textAttributes@output_buff
 19911  0157A4  0101               	movlb	1	; () banked
 19912  0157A6  6F17               	movwf	strcat@to& (0+255),b
 19913  0157A8  0E02               	movlw	high terminal_textAttributes@output_buff
 19914  0157AA  6F18               	movwf	(strcat@to+1)& (0+255),b
 19915  0157AC  0EFC               	movlw	low STR_43
 19916  0157AE  6F19               	movwf	strcat@from& (0+255),b
 19917  0157B0  0EFF               	movlw	high STR_43
 19918  0157B2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 19919  0157B4  ECBE  F0D2         	call	_strcat	;wreg free
 19920                           
 19921                           ;ring_buffer_interface.c: 219: printf(output_buff);
 19922  0157B8  0E94               	movlw	low terminal_textAttributes@output_buff
 19923  0157BA  0101               	movlb	1	; () banked
 19924  0157BC  6FAC               	movwf	printf@f& (0+255),b
 19925  0157BE  0E02               	movlw	high terminal_textAttributes@output_buff
 19926  0157C0  6FAD               	movwf	(printf@f+1)& (0+255),b
 19927  0157C2  ECC6  F0D4         	call	_printf	;wreg free
 19928  0157C6  0012               	return		;funcret
 19929  0157C8                     __end_of_terminal_textAttributes:
 19930                           	opt stack 0
 19931                           tblptru	equ	0xFF8
 19932                           tblptrh	equ	0xFF7
 19933                           tblptrl	equ	0xFF6
 19934                           tablat	equ	0xFF5
 19935                           intcon	equ	0xFF2
 19936                           postinc0	equ	0xFEE
 19937                           wreg	equ	0xFE8
 19938                           indf1	equ	0xFE7
 19939                           postdec1	equ	0xFE5
 19940                           fsr1h	equ	0xFE2
 19941                           fsr1l	equ	0xFE1
 19942                           indf2	equ	0xFDF
 19943                           postinc2	equ	0xFDE
 19944                           fsr2h	equ	0xFDA
 19945                           fsr2l	equ	0xFD9
 19946                           status	equ	0xFD8
 19947                           
 19948 ;; *************** function _strncpy *****************
 19949 ;; Defined at:
 19950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;  to              2   23[BANK1 ] PTR unsigned char 
 19953 ;;		 -> terminal_textAttributes@output_buff(15), 
 19954 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 19955 ;;		 -> STR_15(3), 
 19956 ;;  size            2   27[BANK1 ] unsigned int 
 19957 ;; Auto vars:     Size  Location     Type
 19958 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 19959 ;;		 -> terminal_textAttributes@output_buff(15), 
 19960 ;; Return value:  Size  Location     Type
 19961 ;;                  2   23[BANK1 ] PTR unsigned char 
 19962 ;; Registers used:
 19963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19964 ;; Tracked objects:
 19965 ;;		On entry : 0/0
 19966 ;;		On exit  : 0/0
 19967 ;;		Unchanged: 0/0
 19968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19969 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19970 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19972 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19973 ;;Total ram usage:        8 bytes
 19974 ;; Hardware stack levels used:    1
 19975 ;; Hardware stack levels required when called:   13
 19976 ;; This function calls:
 19977 ;;		Nothing
 19978 ;; This function is called by:
 19979 ;;		_terminal_textAttributes
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           	psect	text7
 19984  019FFA                     __ptext7:
 19985                           	opt stack 0
 19986  019FFA                     _strncpy:
 19987                           	opt stack 15
 19988                           
 19989                           ;incstack = 0
 19990  019FFA  C117  F11D         	movff	strncpy@to,strncpy@cp
 19991  019FFE  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 19992  01A002  D018               	goto	l2888
 19993  01A004  0101               	movlb	1	; () banked
 19994  01A006  071B               	decf	strncpy@size& (0+255),f,b
 19995  01A008  A0D8               	btfss	status,0,c
 19996  01A00A  071C               	decf	(strncpy@size+1)& (0+255),f,b
 19997                           
 19998                           ; BSR set to: 1
 19999  01A00C  C119  FFF6         	movff	strncpy@from,tblptrl
 20000  01A010  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 20001  01A014  4B19               	infsnz	strncpy@from& (0+255),f,b
 20002  01A016  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 20003  01A018                     	if	0	;tblptru may be non-zero
 20004  01A018                     	endif
 20005  01A018                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20006  01A018  0E00               	movlw	low (__mediumconst shr (0+16))
 20007  01A01A  6EF8               	movwf	tblptru,c
 20008  01A01C                     	endif
 20009  01A01C  C11D  FFD9         	movff	strncpy@cp,fsr2l
 20010  01A020  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 20011  01A024  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 20012  01A026  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 20013  01A028  0008               	tblrd		*
 20014  01A02A  CFF5 FFDF          	movff	tablat,indf2
 20015  01A02E  50DF               	movf	indf2,w,c
 20016  01A030  B4D8               	btfsc	status,2,c
 20017  01A032  D00E               	goto	l2890
 20018  01A034                     l2888:
 20019                           
 20020                           ; BSR set to: 1
 20021                           
 20022                           ; BSR set to: 1
 20023  01A034  0101               	movlb	1	; () banked
 20024  01A036  511B               	movf	strncpy@size& (0+255),w,b
 20025  01A038  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 20026  01A03A  B4D8               	btfsc	status,2,c
 20027  01A03C  D009               	goto	l2890
 20028  01A03E  D7E2               	goto	l2887
 20029  01A040                     l15445:
 20030                           
 20031                           ; BSR set to: 1
 20032  01A040  C11D  FFD9         	movff	strncpy@cp,fsr2l
 20033  01A044  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 20034  01A048  0E00               	movlw	0
 20035  01A04A  6EDF               	movwf	indf2,c
 20036                           
 20037                           ; BSR set to: 1
 20038  01A04C  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 20039  01A04E  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 20040  01A050                     l2890:
 20041                           
 20042                           ; BSR set to: 1
 20043                           
 20044                           ; BSR set to: 1
 20045  01A050  071B               	decf	strncpy@size& (0+255),f,b
 20046  01A052  A0D8               	btfss	status,0,c
 20047  01A054  071C               	decf	(strncpy@size+1)& (0+255),f,b
 20048  01A056  291B               	incf	strncpy@size& (0+255),w,b
 20049  01A058  E1F3               	bnz	l15445
 20050  01A05A  291C               	incf	(strncpy@size+1)& (0+255),w,b
 20051  01A05C  B4D8               	btfsc	status,2,c
 20052  01A05E  0012               	return	
 20053  01A060  D7EF               	goto	l2891
 20054  01A062                     __end_of_strncpy:
 20055                           	opt stack 0
 20056                           tblptru	equ	0xFF8
 20057                           tblptrh	equ	0xFF7
 20058                           tblptrl	equ	0xFF6
 20059                           tablat	equ	0xFF5
 20060                           intcon	equ	0xFF2
 20061                           postinc0	equ	0xFEE
 20062                           wreg	equ	0xFE8
 20063                           indf1	equ	0xFE7
 20064                           postdec1	equ	0xFE5
 20065                           fsr1h	equ	0xFE2
 20066                           fsr1l	equ	0xFE1
 20067                           indf2	equ	0xFDF
 20068                           postinc2	equ	0xFDE
 20069                           fsr2h	equ	0xFDA
 20070                           fsr2l	equ	0xFD9
 20071                           status	equ	0xFD8
 20072                           
 20073 ;; *************** function _strcat *****************
 20074 ;; Defined at:
 20075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 20076 ;; Parameters:    Size  Location     Type
 20077 ;;  to              2   23[BANK1 ] PTR unsigned char 
 20078 ;;		 -> terminal_textAttributes@output_buff(15), 
 20079 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 20080 ;;		 -> STR_43(2), STR_42(3), STR_41(3), STR_40(3), 
 20081 ;;		 -> STR_39(3), STR_38(3), STR_37(3), STR_36(3), 
 20082 ;;		 -> STR_35(3), STR_34(3), STR_33(2), STR_32(3), 
 20083 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(3), 
 20084 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 20085 ;;		 -> STR_23(2), STR_22(2), STR_21(2), STR_20(2), 
 20086 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 20087 ;; Auto vars:     Size  Location     Type
 20088 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 20089 ;;		 -> terminal_textAttributes@output_buff(15), 
 20090 ;; Return value:  Size  Location     Type
 20091 ;;                  2   23[BANK1 ] PTR unsigned char 
 20092 ;; Registers used:
 20093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20094 ;; Tracked objects:
 20095 ;;		On entry : 0/0
 20096 ;;		On exit  : 0/0
 20097 ;;		Unchanged: 0/0
 20098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20099 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20100 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20102 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20103 ;;Total ram usage:        6 bytes
 20104 ;; Hardware stack levels used:    1
 20105 ;; Hardware stack levels required when called:   13
 20106 ;; This function calls:
 20107 ;;		Nothing
 20108 ;; This function is called by:
 20109 ;;		_terminal_textAttributes
 20110 ;; This function uses a non-reentrant model
 20111 ;;
 20112                           
 20113                           	psect	text8
 20114  01A57C                     __ptext8:
 20115                           	opt stack 0
 20116  01A57C                     _strcat:
 20117                           	opt stack 15
 20118                           
 20119                           ; BSR set to: 1
 20120                           ;incstack = 0
 20121  01A57C  C117  F11B         	movff	strcat@to,strcat@cp
 20122  01A580  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 20123  01A584  D003               	goto	l2857
 20124  01A586  0101               	movlb	1	; () banked
 20125  01A588  4B1B               	infsnz	strcat@cp& (0+255),f,b
 20126  01A58A  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 20127  01A58C                     l2857:
 20128                           
 20129                           ; BSR set to: 1
 20130  01A58C  C11B  FFD9         	movff	strcat@cp,fsr2l
 20131  01A590  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 20132  01A594  50DF               	movf	indf2,w,c
 20133  01A596  B4D8               	btfsc	status,2,c
 20134  01A598  D006               	goto	l2860
 20135  01A59A  D7F5               	goto	l2858
 20136  01A59C  0101               	movlb	1	; () banked
 20137  01A59E  4B1B               	infsnz	strcat@cp& (0+255),f,b
 20138  01A5A0  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 20139  01A5A2  4B19               	infsnz	strcat@from& (0+255),f,b
 20140  01A5A4  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 20141  01A5A6                     l2860:
 20142                           
 20143                           ; BSR set to: 1
 20144  01A5A6  C119  FFF6         	movff	strcat@from,tblptrl
 20145  01A5AA  C11A  FFF7         	movff	strcat@from+1,tblptrh
 20146  01A5AE                     	if	0	;tblptru may be non-zero
 20147  01A5AE                     	endif
 20148  01A5AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20149  01A5AE  0E00               	movlw	low (__mediumconst shr (0+16))
 20150  01A5B0  6EF8               	movwf	tblptru,c
 20151  01A5B2                     	endif
 20152  01A5B2  C11B  FFD9         	movff	strcat@cp,fsr2l
 20153  01A5B6  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 20154  01A5BA  0008               	tblrd		*
 20155  01A5BC  CFF5 FFDF          	movff	tablat,indf2
 20156  01A5C0  50DF               	movf	indf2,w,c
 20157  01A5C2  B4D8               	btfsc	status,2,c
 20158  01A5C4  0012               	return	
 20159  01A5C6  D7EA               	goto	l2861
 20160  01A5C8                     __end_of_strcat:
 20161                           	opt stack 0
 20162                           tblptru	equ	0xFF8
 20163                           tblptrh	equ	0xFF7
 20164                           tblptrl	equ	0xFF6
 20165                           tablat	equ	0xFF5
 20166                           intcon	equ	0xFF2
 20167                           postinc0	equ	0xFEE
 20168                           wreg	equ	0xFE8
 20169                           indf1	equ	0xFE7
 20170                           postdec1	equ	0xFE5
 20171                           fsr1h	equ	0xFE2
 20172                           fsr1l	equ	0xFE1
 20173                           indf2	equ	0xFDF
 20174                           postinc2	equ	0xFDE
 20175                           fsr2h	equ	0xFDA
 20176                           fsr2l	equ	0xFD9
 20177                           status	equ	0xFD8
 20178                           
 20179 ;; *************** function _terminal_printNewline *****************
 20180 ;; Defined at:
 20181 ;;		line 230 in file "ring_buffer_interface.c"
 20182 ;; Parameters:    Size  Location     Type
 20183 ;;		None
 20184 ;; Auto vars:     Size  Location     Type
 20185 ;;		None
 20186 ;; Return value:  Size  Location     Type
 20187 ;;                  1    wreg      void 
 20188 ;; Registers used:
 20189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20190 ;; Tracked objects:
 20191 ;;		On entry : 0/0
 20192 ;;		On exit  : 0/0
 20193 ;;		Unchanged: 0/0
 20194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20199 ;;Total ram usage:        0 bytes
 20200 ;; Hardware stack levels used:    1
 20201 ;; Hardware stack levels required when called:   17
 20202 ;; This function calls:
 20203 ;;		_printf
 20204 ;; This function is called by:
 20205 ;;		_ringBufferLUT
 20206 ;; This function uses a non-reentrant model
 20207 ;;
 20208                           
 20209                           	psect	text9
 20210  01B162                     __ptext9:
 20211                           	opt stack 0
 20212  01B162                     _terminal_printNewline:
 20213                           	opt stack 11
 20214                           
 20215                           ;ring_buffer_interface.c: 232: printf("\n\r");
 20216                           
 20217                           ;incstack = 0
 20218  01B162  0E46               	movlw	low (STR_156+717)
 20219  01B164  0101               	movlb	1	; () banked
 20220  01B166  6FAC               	movwf	printf@f& (0+255),b
 20221  01B168  0EE8               	movlw	high (STR_156+717)
 20222  01B16A  6FAD               	movwf	(printf@f+1)& (0+255),b
 20223  01B16C  ECC6  F0D4         	call	_printf	;wreg free
 20224  01B170  0012               	return		;funcret
 20225  01B172                     __end_of_terminal_printNewline:
 20226                           	opt stack 0
 20227                           tblptru	equ	0xFF8
 20228                           tblptrh	equ	0xFF7
 20229                           tblptrl	equ	0xFF6
 20230                           tablat	equ	0xFF5
 20231                           intcon	equ	0xFF2
 20232                           postinc0	equ	0xFEE
 20233                           wreg	equ	0xFE8
 20234                           indf1	equ	0xFE7
 20235                           postdec1	equ	0xFE5
 20236                           fsr1h	equ	0xFE2
 20237                           fsr1l	equ	0xFE1
 20238                           indf2	equ	0xFDF
 20239                           postinc2	equ	0xFDE
 20240                           fsr2h	equ	0xFDA
 20241                           fsr2l	equ	0xFD9
 20242                           status	equ	0xFD8
 20243                           
 20244 ;; *************** function _strstr *****************
 20245 ;; Defined at:
 20246 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 20249 ;;		 -> NULL(0), line(64), 
 20250 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 20251 ;;		 -> STR_128(25), 
 20252 ;; Auto vars:     Size  Location     Type
 20253 ;;		None
 20254 ;; Return value:  Size  Location     Type
 20255 ;;                  2   38[BANK1 ] PTR unsigned char 
 20256 ;; Registers used:
 20257 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20258 ;; Tracked objects:
 20259 ;;		On entry : 0/0
 20260 ;;		On exit  : 0/0
 20261 ;;		Unchanged: 0/0
 20262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20263 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20266 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20267 ;;Total ram usage:        4 bytes
 20268 ;; Hardware stack levels used:    1
 20269 ;; Hardware stack levels required when called:   14
 20270 ;; This function calls:
 20271 ;;		_strchr
 20272 ;;		_strlen
 20273 ;;		_strncmp
 20274 ;; This function is called by:
 20275 ;;		_ringBufferLUT
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text10
 20280  0199BE                     __ptext10:
 20281                           	opt stack 0
 20282  0199BE                     _strstr:
 20283                           	opt stack 14
 20284                           
 20285                           ;incstack = 0
 20286  0199BE  D034               	goto	l2902
 20287  0199C0  C126  F11D         	movff	strstr@s1,strncmp@s1
 20288  0199C4  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 20289  0199C8  C128  F11F         	movff	strstr@s2,strncmp@s2
 20290  0199CC  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 20291  0199D0  C128  F117         	movff	strstr@s2,strlen@s
 20292  0199D4  C129  F118         	movff	strstr@s2+1,strlen@s+1
 20293  0199D8  ECFC  F0D0         	call	_strlen	;wreg free
 20294  0199DC  C117  F121         	movff	?_strlen,strncmp@len
 20295  0199E0  C118  F122         	movff	?_strlen+1,strncmp@len+1
 20296  0199E4  EC51  F0CC         	call	_strncmp	;wreg free
 20297  0199E8  0101               	movlb	1	; () banked
 20298  0199EA  511D               	movf	?_strncmp& (0+255),w,b
 20299  0199EC  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 20300  0199EE  A4D8               	btfss	status,2,c
 20301  0199F0  D005               	goto	l2904
 20302                           
 20303                           ; BSR set to: 1
 20304  0199F2  C126  F126         	movff	strstr@s1,?_strstr
 20305  0199F6  C127  F127         	movff	strstr@s1+1,?_strstr+1
 20306                           
 20307                           ; BSR set to: 1
 20308  0199FA  0012               	return	
 20309  0199FC                     l2904:
 20310                           
 20311                           ; BSR set to: 1
 20312                           
 20313                           ; BSR set to: 1
 20314  0199FC  0E01               	movlw	1
 20315  0199FE  2526               	addwf	strstr@s1& (0+255),w,b
 20316  019A00  6F17               	movwf	strchr@ptr& (0+255),b
 20317  019A02  0E00               	movlw	0
 20318  019A04  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 20319  019A06  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 20320  019A08  C128  FFF6         	movff	strstr@s2,tblptrl
 20321  019A0C  C129  FFF7         	movff	strstr@s2+1,tblptrh
 20322  019A10                     	if	0	;tblptru may be non-zero
 20323  019A10                     	endif
 20324  019A10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20325  019A10  0E00               	movlw	low (__mediumconst shr (0+16))
 20326  019A12  6EF8               	movwf	tblptru,c
 20327  019A14                     	endif
 20328  019A14  0008               	tblrd		*
 20329  019A16  50F5               	movf	tablat,w,c
 20330  019A18  6F19               	movwf	strchr@chr& (0+255),b
 20331  019A1A  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 20332  019A1C  EC78  F0D5         	call	_strchr	;wreg free
 20333  019A20  C117  F126         	movff	?_strchr,strstr@s1
 20334  019A24  C118  F127         	movff	?_strchr+1,strstr@s1+1
 20335  019A28                     l2902:
 20336  019A28  0101               	movlb	1	; () banked
 20337  019A2A  5126               	movf	strstr@s1& (0+255),w,b
 20338  019A2C  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 20339  019A2E  B4D8               	btfsc	status,2,c
 20340  019A30  D007               	goto	u20890
 20341                           
 20342                           ; BSR set to: 1
 20343  019A32  C126  FFD9         	movff	strstr@s1,fsr2l
 20344  019A36  C127  FFDA         	movff	strstr@s1+1,fsr2h
 20345  019A3A  50DF               	movf	indf2,w,c
 20346  019A3C  A4D8               	btfss	status,2,c
 20347  019A3E  D7C0               	goto	l2903
 20348  019A40                     u20890:
 20349                           
 20350                           ; BSR set to: 1
 20351                           
 20352                           ; BSR set to: 1
 20353                           
 20354                           ; BSR set to: 1
 20355  019A40  0E00               	movlw	0
 20356  019A42  6F26               	movwf	?_strstr& (0+255),b
 20357  019A44  0E00               	movlw	0
 20358  019A46  6F27               	movwf	(?_strstr+1)& (0+255),b
 20359  019A48  0012               	return	
 20360  019A4A                     __end_of_strstr:
 20361                           	opt stack 0
 20362                           tblptru	equ	0xFF8
 20363                           tblptrh	equ	0xFF7
 20364                           tblptrl	equ	0xFF6
 20365                           tablat	equ	0xFF5
 20366                           intcon	equ	0xFF2
 20367                           postinc0	equ	0xFEE
 20368                           wreg	equ	0xFE8
 20369                           indf1	equ	0xFE7
 20370                           postdec1	equ	0xFE5
 20371                           fsr1h	equ	0xFE2
 20372                           fsr1l	equ	0xFE1
 20373                           indf2	equ	0xFDF
 20374                           postinc2	equ	0xFDE
 20375                           fsr2h	equ	0xFDA
 20376                           fsr2l	equ	0xFD9
 20377                           status	equ	0xFD8
 20378                           
 20379 ;; *************** function _strncmp *****************
 20380 ;; Defined at:
 20381 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 20382 ;; Parameters:    Size  Location     Type
 20383 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 20384 ;;		 -> NULL(0), line(64), 
 20385 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 20386 ;;		 -> STR_128(25), 
 20387 ;;  len             2   33[BANK1 ] unsigned int 
 20388 ;; Auto vars:     Size  Location     Type
 20389 ;;		None
 20390 ;; Return value:  Size  Location     Type
 20391 ;;                  2   29[BANK1 ] int 
 20392 ;; Registers used:
 20393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20394 ;; Tracked objects:
 20395 ;;		On entry : 0/0
 20396 ;;		On exit  : 0/0
 20397 ;;		Unchanged: 0/0
 20398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20399 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20401 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20402 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20403 ;;Total ram usage:        9 bytes
 20404 ;; Hardware stack levels used:    1
 20405 ;; Hardware stack levels required when called:   13
 20406 ;; This function calls:
 20407 ;;		Nothing
 20408 ;; This function is called by:
 20409 ;;		_strstr
 20410 ;; This function uses a non-reentrant model
 20411 ;;
 20412                           
 20413                           	psect	text11
 20414  0198A2                     __ptext11:
 20415                           	opt stack 0
 20416  0198A2                     _strncmp:
 20417                           	opt stack 14
 20418                           
 20419                           ; BSR set to: 1
 20420                           ;incstack = 0
 20421  0198A2  D039               	goto	l2961
 20422  0198A4                     l15857:
 20423  0198A4  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20424  0198A8  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20425  0198AC  50DF               	movf	indf2,w,c
 20426  0198AE  B4D8               	btfsc	status,2,c
 20427  0198B0  D012               	goto	u20330
 20428  0198B2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20429  0198B6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20430  0198BA  50DF               	movf	indf2,w,c
 20431  0198BC  0101               	movlb	1	; () banked
 20432  0198BE  6F23               	movwf	??_strncmp& (0+255),b
 20433  0198C0  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20434  0198C4  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20435  0198C8                     	if	0	;tblptru may be non-zero
 20436  0198C8                     	endif
 20437  0198C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20438  0198C8  0E00               	movlw	low (__mediumconst shr (0+16))
 20439  0198CA  6EF8               	movwf	tblptru,c
 20440  0198CC                     	endif
 20441  0198CC  0008               	tblrd		*
 20442  0198CE  50F5               	movf	tablat,w,c
 20443  0198D0  1923               	xorwf	??_strncmp& (0+255),w,b
 20444  0198D2  B4D8               	btfsc	status,2,c
 20445  0198D4  D01C               	goto	l2963
 20446  0198D6                     u20330:
 20447                           
 20448                           ; BSR set to: 1
 20449  0198D6  C11F  FFF6         	movff	strncmp@s2,tblptrl
 20450  0198DA  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 20451  0198DE                     	if	0	;tblptru may be non-zero
 20452  0198DE                     	endif
 20453  0198DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20454  0198DE  0E00               	movlw	low (__mediumconst shr (0+16))
 20455  0198E0  6EF8               	movwf	tblptru,c
 20456  0198E2                     	endif
 20457  0198E2  0008               	tblrd		*
 20458  0198E4  50F5               	movf	tablat,w,c
 20459  0198E6  0101               	movlb	1	; () banked
 20460  0198E8  6F23               	movwf	??_strncmp& (0+255),b
 20461  0198EA  6B24               	clrf	(??_strncmp+1)& (0+255),b
 20462  0198EC  1F23               	comf	??_strncmp& (0+255),f,b
 20463  0198EE  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 20464  0198F0  4B23               	infsnz	??_strncmp& (0+255),f,b
 20465  0198F2  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 20466  0198F4  C11D  FFD9         	movff	strncmp@s1,fsr2l
 20467  0198F8  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 20468  0198FC  50DF               	movf	indf2,w,c
 20469  0198FE  6F25               	movwf	(??_strncmp+2)& (0+255),b
 20470  019900  5125               	movf	(??_strncmp+2)& (0+255),w,b
 20471  019902  2523               	addwf	??_strncmp& (0+255),w,b
 20472  019904  6F1D               	movwf	?_strncmp& (0+255),b
 20473  019906  0E00               	movlw	0
 20474  019908  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 20475  01990A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20476                           
 20477                           ; BSR set to: 1
 20478  01990C  0012               	return	
 20479  01990E                     l2963:
 20480                           
 20481                           ; BSR set to: 1
 20482                           
 20483                           ; BSR set to: 1
 20484  01990E  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 20485  019910  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 20486  019912  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 20487  019914  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 20488  019916                     l2961:
 20489                           
 20490                           ; BSR set to: 1
 20491  019916  0101               	movlb	1	; () banked
 20492  019918  0721               	decf	strncmp@len& (0+255),f,b
 20493  01991A  A0D8               	btfss	status,0,c
 20494  01991C  0722               	decf	(strncmp@len+1)& (0+255),f,b
 20495  01991E  2921               	incf	strncmp@len& (0+255),w,b
 20496  019920  E1C1               	bnz	l15857
 20497  019922  2922               	incf	(strncmp@len+1)& (0+255),w,b
 20498  019924  A4D8               	btfss	status,2,c
 20499  019926  D7BE               	goto	l2962
 20500                           
 20501                           ; BSR set to: 1
 20502                           
 20503                           ; BSR set to: 1
 20504  019928  0E00               	movlw	0
 20505  01992A  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 20506  01992C  0E00               	movlw	0
 20507  01992E  6F1D               	movwf	?_strncmp& (0+255),b
 20508  019930  0012               	return	
 20509  019932                     __end_of_strncmp:
 20510                           	opt stack 0
 20511                           tblptru	equ	0xFF8
 20512                           tblptrh	equ	0xFF7
 20513                           tblptrl	equ	0xFF6
 20514                           tablat	equ	0xFF5
 20515                           intcon	equ	0xFF2
 20516                           postinc0	equ	0xFEE
 20517                           wreg	equ	0xFE8
 20518                           indf1	equ	0xFE7
 20519                           postdec1	equ	0xFE5
 20520                           fsr1h	equ	0xFE2
 20521                           fsr1l	equ	0xFE1
 20522                           indf2	equ	0xFDF
 20523                           postinc2	equ	0xFDE
 20524                           fsr2h	equ	0xFDA
 20525                           fsr2l	equ	0xFD9
 20526                           status	equ	0xFD8
 20527                           
 20528 ;; *************** function _strlen *****************
 20529 ;; Defined at:
 20530 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 20531 ;; Parameters:    Size  Location     Type
 20532 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 20533 ;;		 -> STR_128(25), line(64), 
 20534 ;; Auto vars:     Size  Location     Type
 20535 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 20536 ;;		 -> STR_128(25), line(64), 
 20537 ;; Return value:  Size  Location     Type
 20538 ;;                  2   23[BANK1 ] unsigned int 
 20539 ;; Registers used:
 20540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 20541 ;; Tracked objects:
 20542 ;;		On entry : 0/0
 20543 ;;		On exit  : 0/0
 20544 ;;		Unchanged: 0/0
 20545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20546 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20547 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20548 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20549 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20550 ;;Total ram usage:        6 bytes
 20551 ;; Hardware stack levels used:    1
 20552 ;; Hardware stack levels required when called:   13
 20553 ;; This function calls:
 20554 ;;		Nothing
 20555 ;; This function is called by:
 20556 ;;		_terminal_ringBufferPull
 20557 ;;		_strstr
 20558 ;; This function uses a non-reentrant model
 20559 ;;
 20560                           
 20561                           	psect	text12
 20562  01A1F8                     __ptext12:
 20563                           	opt stack 0
 20564  01A1F8                     _strlen:
 20565                           	opt stack 16
 20566                           
 20567                           ; BSR set to: 1
 20568                           ;incstack = 0
 20569  01A1F8  C117  F11B         	movff	strlen@s,strlen@cp
 20570  01A1FC  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 20571  01A200  D003               	goto	l2880
 20572  01A202  0101               	movlb	1	; () banked
 20573  01A204  4B1B               	infsnz	strlen@cp& (0+255),f,b
 20574  01A206  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 20575  01A208                     l2880:
 20576                           
 20577                           ; BSR set to: 1
 20578  01A208  C11B  FFF6         	movff	strlen@cp,tblptrl
 20579  01A20C  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 20580  01A210  0E00               	movlw	low (__mediumconst shr (0+16))
 20581  01A212  6EF8               	movwf	tblptru,c
 20582  01A214  0E0D               	movlw	(high __ramtop+-1)
 20583  01A216  64F7               	cpfsgt	tblptrh,c
 20584  01A218  D003               	bra	u20247
 20585  01A21A  0008               	tblrd		*
 20586  01A21C  50F5               	movf	tablat,w,c
 20587  01A21E  D005               	bra	u20240
 20588  01A220                     u20247:
 20589  01A220  CFF6 FFE9          	movff	tblptrl,fsr0l
 20590  01A224  CFF7 FFEA          	movff	tblptrh,fsr0h
 20591  01A228  50EF               	movf	indf0,w,c
 20592  01A22A                     u20240:
 20593  01A22A  0900               	iorlw	0
 20594  01A22C  A4D8               	btfss	status,2,c
 20595  01A22E  D7E9               	goto	l2881
 20596  01A230  C117  F119         	movff	strlen@s,??_strlen
 20597  01A234  C118  F11A         	movff	strlen@s+1,??_strlen+1
 20598  01A238  0101               	movlb	1	; () banked
 20599  01A23A  1F19               	comf	??_strlen& (0+255),f,b
 20600  01A23C  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 20601  01A23E  4B19               	infsnz	??_strlen& (0+255),f,b
 20602  01A240  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 20603  01A242  511B               	movf	strlen@cp& (0+255),w,b
 20604  01A244  2519               	addwf	??_strlen& (0+255),w,b
 20605  01A246  6F17               	movwf	?_strlen& (0+255),b
 20606  01A248  511C               	movf	(strlen@cp+1)& (0+255),w,b
 20607  01A24A  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 20608  01A24C  6F18               	movwf	(?_strlen+1)& (0+255),b
 20609  01A24E  0012               	return	
 20610  01A250                     __end_of_strlen:
 20611                           	opt stack 0
 20612                           tblptru	equ	0xFF8
 20613                           tblptrh	equ	0xFF7
 20614                           tblptrl	equ	0xFF6
 20615                           tablat	equ	0xFF5
 20616                           intcon	equ	0xFF2
 20617                           indf0	equ	0xFEF
 20618                           postinc0	equ	0xFEE
 20619                           fsr0h	equ	0xFEA
 20620                           fsr0l	equ	0xFE9
 20621                           wreg	equ	0xFE8
 20622                           indf1	equ	0xFE7
 20623                           postdec1	equ	0xFE5
 20624                           fsr1h	equ	0xFE2
 20625                           fsr1l	equ	0xFE1
 20626                           indf2	equ	0xFDF
 20627                           postinc2	equ	0xFDE
 20628                           fsr2h	equ	0xFDA
 20629                           fsr2l	equ	0xFD9
 20630                           status	equ	0xFD8
 20631                           
 20632 ;; *************** function _strchr *****************
 20633 ;; Defined at:
 20634 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 20635 ;; Parameters:    Size  Location     Type
 20636 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 20637 ;;		 -> NULL(0), line(64), 
 20638 ;;  chr             2   25[BANK1 ] int 
 20639 ;; Auto vars:     Size  Location     Type
 20640 ;;		None
 20641 ;; Return value:  Size  Location     Type
 20642 ;;                  2   23[BANK1 ] PTR unsigned char 
 20643 ;; Registers used:
 20644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20645 ;; Tracked objects:
 20646 ;;		On entry : 0/0
 20647 ;;		On exit  : 0/0
 20648 ;;		Unchanged: 0/0
 20649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20650 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20652 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20653 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20654 ;;Total ram usage:        5 bytes
 20655 ;; Hardware stack levels used:    1
 20656 ;; Hardware stack levels required when called:   13
 20657 ;; This function calls:
 20658 ;;		Nothing
 20659 ;; This function is called by:
 20660 ;;		_strstr
 20661 ;; This function uses a non-reentrant model
 20662 ;;
 20663                           
 20664                           	psect	text13
 20665  01AAF0                     __ptext13:
 20666                           	opt stack 0
 20667  01AAF0                     _strchr:
 20668                           	opt stack 14
 20669                           
 20670                           ; BSR set to: 1
 20671                           ;incstack = 0
 20672  01AAF0  C117  FFD9         	movff	strchr@ptr,fsr2l
 20673  01AAF4  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20674  01AAF8  0101               	movlb	1	; () banked
 20675  01AAFA  5119               	movf	strchr@chr& (0+255),w,b
 20676  01AAFC  18DE               	xorwf	postinc2,w,c
 20677  01AAFE  A4D8               	btfss	status,2,c
 20678  01AB00  D005               	goto	l2956
 20679                           
 20680                           ; BSR set to: 1
 20681  01AB02  C117  F117         	movff	strchr@ptr,?_strchr
 20682  01AB06  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 20683                           
 20684                           ; BSR set to: 1
 20685  01AB0A  0012               	return	
 20686  01AB0C                     l2956:
 20687                           
 20688                           ; BSR set to: 1
 20689                           
 20690                           ; BSR set to: 1
 20691  01AB0C  C117  FFD9         	movff	strchr@ptr,fsr2l
 20692  01AB10  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 20693  01AB14  4B17               	infsnz	strchr@ptr& (0+255),f,b
 20694  01AB16  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 20695  01AB18  50DF               	movf	indf2,w,c
 20696  01AB1A  A4D8               	btfss	status,2,c
 20697  01AB1C  D7E9               	goto	_strchr
 20698                           
 20699                           ; BSR set to: 1
 20700                           
 20701                           ; BSR set to: 1
 20702  01AB1E  0E00               	movlw	0
 20703  01AB20  6F17               	movwf	?_strchr& (0+255),b
 20704  01AB22  0E00               	movlw	0
 20705  01AB24  6F18               	movwf	(?_strchr+1)& (0+255),b
 20706  01AB26  0012               	return	
 20707  01AB28                     __end_of_strchr:
 20708                           	opt stack 0
 20709                           tblptru	equ	0xFF8
 20710                           tblptrh	equ	0xFF7
 20711                           tblptrl	equ	0xFF6
 20712                           tablat	equ	0xFF5
 20713                           intcon	equ	0xFF2
 20714                           indf0	equ	0xFEF
 20715                           postinc0	equ	0xFEE
 20716                           fsr0h	equ	0xFEA
 20717                           fsr0l	equ	0xFE9
 20718                           wreg	equ	0xFE8
 20719                           indf1	equ	0xFE7
 20720                           postdec1	equ	0xFE5
 20721                           fsr1h	equ	0xFE2
 20722                           fsr1l	equ	0xFE1
 20723                           indf2	equ	0xFDF
 20724                           postinc2	equ	0xFDE
 20725                           fsr2h	equ	0xFDA
 20726                           fsr2l	equ	0xFD9
 20727                           status	equ	0xFD8
 20728                           
 20729 ;; *************** function _strcmp *****************
 20730 ;; Defined at:
 20731 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 20734 ;;		 -> line(64), 
 20735 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 20736 ;;		 -> STR_170(11), STR_163(5), STR_161(9), STR_159(29), 
 20737 ;;		 -> STR_157(34), STR_155(33), STR_153(29), STR_151(17), 
 20738 ;;		 -> STR_149(17), STR_147(14), STR_145(19), STR_143(20), 
 20739 ;;		 -> STR_141(11), STR_139(17), STR_137(14), STR_135(16), 
 20740 ;;		 -> STR_126(13), STR_122(17), STR_119(14), STR_117(12), 
 20741 ;;		 -> STR_115(16), STR_113(17), STR_108(15), STR_106(13), 
 20742 ;;		 -> STR_104(16), STR_102(15), STR_100(21), STR_98(21), 
 20743 ;;		 -> STR_96(26), STR_94(14), STR_92(13), STR_90(18), 
 20744 ;;		 -> STR_88(15), STR_86(16), STR_84(18), STR_78(13), 
 20745 ;;		 -> STR_76(17), STR_64(12), STR_61(10), STR_59(13), 
 20746 ;;		 -> STR_57(11), STR_54(4), STR_53(6), STR_51(16), 
 20747 ;;		 -> STR_48(6), STR_45(6), 
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;  r               1   28[BANK1 ] char 
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  2   23[BANK1 ] int 
 20752 ;; Registers used:
 20753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20759 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20760 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20761 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20762 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20763 ;;Total ram usage:        6 bytes
 20764 ;; Hardware stack levels used:    1
 20765 ;; Hardware stack levels required when called:   13
 20766 ;; This function calls:
 20767 ;;		Nothing
 20768 ;; This function is called by:
 20769 ;;		_ringBufferLUT
 20770 ;; This function uses a non-reentrant model
 20771 ;;
 20772                           
 20773                           	psect	text14
 20774  01A3A0                     __ptext14:
 20775                           	opt stack 0
 20776  01A3A0                     _strcmp:
 20777                           	opt stack 15
 20778                           
 20779                           ; BSR set to: 1
 20780                           ;incstack = 0
 20781  01A3A0  D005               	goto	l2866
 20782  01A3A2  0101               	movlb	1	; () banked
 20783  01A3A4  4B17               	infsnz	strcmp@s1& (0+255),f,b
 20784  01A3A6  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 20785  01A3A8  4B19               	infsnz	strcmp@s2& (0+255),f,b
 20786  01A3AA  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 20787  01A3AC                     l2866:
 20788                           
 20789                           ; BSR set to: 1
 20790  01A3AC  C117  FFD9         	movff	strcmp@s1,fsr2l
 20791  01A3B0  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 20792  01A3B4  50DF               	movf	indf2,w,c
 20793  01A3B6  0101               	movlb	1	; () banked
 20794  01A3B8  6F1B               	movwf	??_strcmp& (0+255),b
 20795  01A3BA  C119  FFF6         	movff	strcmp@s2,tblptrl
 20796  01A3BE  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 20797  01A3C2                     	if	0	;tblptru may be non-zero
 20798  01A3C2                     	endif
 20799  01A3C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20800  01A3C2  0E00               	movlw	low (__mediumconst shr (0+16))
 20801  01A3C4  6EF8               	movwf	tblptru,c
 20802  01A3C6                     	endif
 20803  01A3C6  0008               	tblrd		*
 20804  01A3C8  50F5               	movf	tablat,w,c
 20805  01A3CA  0800               	sublw	0
 20806  01A3CC  251B               	addwf	??_strcmp& (0+255),w,b
 20807  01A3CE  6F1C               	movwf	strcmp@r& (0+255),b
 20808  01A3D0  511C               	movf	strcmp@r& (0+255),w,b
 20809  01A3D2  A4D8               	btfss	status,2,c
 20810  01A3D4  D007               	goto	u20740
 20811                           
 20812                           ; BSR set to: 1
 20813  01A3D6  C117  FFD9         	movff	strcmp@s1,fsr2l
 20814  01A3DA  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 20815  01A3DE  50DF               	movf	indf2,w,c
 20816  01A3E0  A4D8               	btfss	status,2,c
 20817  01A3E2  D7DF               	goto	l2867
 20818  01A3E4                     u20740:
 20819                           
 20820                           ; BSR set to: 1
 20821                           
 20822                           ; BSR set to: 1
 20823                           
 20824                           ; BSR set to: 1
 20825  01A3E4  511C               	movf	strcmp@r& (0+255),w,b
 20826  01A3E6  6F17               	movwf	?_strcmp& (0+255),b
 20827  01A3E8  6B18               	clrf	(?_strcmp+1)& (0+255),b
 20828  01A3EA  BF17               	btfsc	?_strcmp& (0+255),7,b
 20829  01A3EC  0718               	decf	(?_strcmp+1)& (0+255),f,b
 20830  01A3EE  0012               	return	
 20831  01A3F0                     __end_of_strcmp:
 20832                           	opt stack 0
 20833                           tblptru	equ	0xFF8
 20834                           tblptrh	equ	0xFF7
 20835                           tblptrl	equ	0xFF6
 20836                           tablat	equ	0xFF5
 20837                           intcon	equ	0xFF2
 20838                           indf0	equ	0xFEF
 20839                           postinc0	equ	0xFEE
 20840                           fsr0h	equ	0xFEA
 20841                           fsr0l	equ	0xFE9
 20842                           wreg	equ	0xFE8
 20843                           indf1	equ	0xFE7
 20844                           postdec1	equ	0xFE5
 20845                           fsr1h	equ	0xFE2
 20846                           fsr1l	equ	0xFE1
 20847                           indf2	equ	0xFDF
 20848                           postinc2	equ	0xFDE
 20849                           fsr2h	equ	0xFDA
 20850                           fsr2l	equ	0xFD9
 20851                           status	equ	0xFD8
 20852                           
 20853 ;; *************** function _getUserID *****************
 20854 ;; Defined at:
 20855 ;;		line 65 in file "device_IDs.c"
 20856 ;; Parameters:    Size  Location     Type
 20857 ;;  inputUserID     1    wreg     unsigned char 
 20858 ;; Auto vars:     Size  Location     Type
 20859 ;;  inputUserID     1   40[BANK1 ] unsigned char 
 20860 ;;  initialOffse    4   36[BANK1 ] unsigned long 
 20861 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 20862 ;; Return value:  Size  Location     Type
 20863 ;;                  2   34[BANK1 ] unsigned int 
 20864 ;; Registers used:
 20865 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20866 ;; Tracked objects:
 20867 ;;		On entry : 0/0
 20868 ;;		On exit  : 0/0
 20869 ;;		Unchanged: 0/0
 20870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20871 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20872 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20874 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20875 ;;Total ram usage:        8 bytes
 20876 ;; Hardware stack levels used:    1
 20877 ;; Hardware stack levels required when called:   15
 20878 ;; This function calls:
 20879 ;;		_FLASH_ReadWord
 20880 ;; This function is called by:
 20881 ;;		_ringBufferLUT
 20882 ;; This function uses a non-reentrant model
 20883 ;;
 20884                           
 20885                           	psect	text15
 20886  01A7CC                     __ptext15:
 20887                           	opt stack 0
 20888  01A7CC                     _getUserID:
 20889                           	opt stack 13
 20890                           
 20891                           ; BSR set to: 1
 20892                           ;incstack = 0
 20893                           ;getUserID@inputUserID stored from wreg
 20894  01A7CC  0101               	movlb	1	; () banked
 20895  01A7CE  6F28               	movwf	getUserID@inputUserID& (0+255),b
 20896                           
 20897                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 20898  01A7D0  0E00               	movlw	0
 20899  01A7D2  0101               	movlb	1	; () banked
 20900  01A7D4  6F24               	movwf	getUserID@initialOffset& (0+255),b
 20901  01A7D6  0E00               	movlw	0
 20902  01A7D8  6F25               	movwf	(getUserID@initialOffset+1)& (0+255),b
 20903  01A7DA  0E20               	movlw	32
 20904  01A7DC  6F26               	movwf	(getUserID@initialOffset+2)& (0+255),b
 20905  01A7DE  0E00               	movlw	0
 20906  01A7E0  6F27               	movwf	(getUserID@initialOffset+3)& (0+255),b
 20907                           
 20908                           ; BSR set to: 1
 20909                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 20910  01A7E2  5128               	movf	getUserID@inputUserID& (0+255),w,b
 20911  01A7E4  0D02               	mullw	2
 20912  01A7E6  CFF3 F129          	movff	prodl,getUserID@IDOffset
 20913                           
 20914                           ; BSR set to: 1
 20915                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 20916  01A7EA  5129               	movf	getUserID@IDOffset& (0+255),w,b
 20917  01A7EC  2524               	addwf	getUserID@initialOffset& (0+255),w,b
 20918  01A7EE  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20919  01A7F0  0E00               	movlw	0
 20920  01A7F2  2125               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 20921  01A7F4  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20922  01A7F6  0E00               	movlw	0
 20923  01A7F8  2126               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 20924  01A7FA  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 20925  01A7FC  0E00               	movlw	0
 20926  01A7FE  2127               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 20927  01A800  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 20928  01A802  EC08  F0D4         	call	_FLASH_ReadWord	;wreg free
 20929  01A806  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 20930  01A80A  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 20931  01A80E  0012               	return	
 20932  01A810                     __end_of_getUserID:
 20933                           	opt stack 0
 20934                           tblptru	equ	0xFF8
 20935                           tblptrh	equ	0xFF7
 20936                           tblptrl	equ	0xFF6
 20937                           tablat	equ	0xFF5
 20938                           prodl	equ	0xFF3
 20939                           intcon	equ	0xFF2
 20940                           indf0	equ	0xFEF
 20941                           postinc0	equ	0xFEE
 20942                           fsr0h	equ	0xFEA
 20943                           fsr0l	equ	0xFE9
 20944                           wreg	equ	0xFE8
 20945                           indf1	equ	0xFE7
 20946                           postdec1	equ	0xFE5
 20947                           fsr1h	equ	0xFE2
 20948                           fsr1l	equ	0xFE1
 20949                           indf2	equ	0xFDF
 20950                           postinc2	equ	0xFDE
 20951                           fsr2h	equ	0xFDA
 20952                           fsr2l	equ	0xFD9
 20953                           status	equ	0xFD8
 20954                           
 20955 ;; *************** function _getMinorRevisionID *****************
 20956 ;; Defined at:
 20957 ;;		line 23 in file "device_IDs.c"
 20958 ;; Parameters:    Size  Location     Type
 20959 ;;		None
 20960 ;; Auto vars:     Size  Location     Type
 20961 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 20962 ;; Return value:  Size  Location     Type
 20963 ;;                  1    wreg      unsigned char 
 20964 ;; Registers used:
 20965 ;;		wreg, status,2, status,0, cstack
 20966 ;; Tracked objects:
 20967 ;;		On entry : 0/0
 20968 ;;		On exit  : 0/0
 20969 ;;		Unchanged: 0/0
 20970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20972 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20974 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20975 ;;Total ram usage:        2 bytes
 20976 ;; Hardware stack levels used:    1
 20977 ;; Hardware stack levels required when called:   15
 20978 ;; This function calls:
 20979 ;;		_FLASH_ReadWord
 20980 ;; This function is called by:
 20981 ;;		_ringBufferLUT
 20982 ;; This function uses a non-reentrant model
 20983 ;;
 20984                           
 20985                           	psect	text16
 20986  01AE30                     __ptext16:
 20987                           	opt stack 0
 20988  01AE30                     _getMinorRevisionID:
 20989                           	opt stack 13
 20990                           
 20991                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 20992                           
 20993                           ;incstack = 0
 20994  01AE30  0EFC               	movlw	252
 20995  01AE32  0101               	movlb	1	; () banked
 20996  01AE34  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 20997  01AE36  0EFF               	movlw	255
 20998  01AE38  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 20999  01AE3A  0E3F               	movlw	63
 21000  01AE3C  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21001  01AE3E  0E00               	movlw	0
 21002  01AE40  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21003  01AE42  EC08  F0D4         	call	_FLASH_ReadWord	;wreg free
 21004  01AE46  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 21005  01AE4A  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 21006                           
 21007                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 21008  01AE4E  0101               	movlb	1	; () banked
 21009  01AE50  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 21010  01AE52  0B1F               	andlw	31
 21011  01AE54  0012               	return	
 21012  01AE56                     __end_of_getMinorRevisionID:
 21013                           	opt stack 0
 21014                           tblptru	equ	0xFF8
 21015                           tblptrh	equ	0xFF7
 21016                           tblptrl	equ	0xFF6
 21017                           tablat	equ	0xFF5
 21018                           prodl	equ	0xFF3
 21019                           intcon	equ	0xFF2
 21020                           indf0	equ	0xFEF
 21021                           postinc0	equ	0xFEE
 21022                           fsr0h	equ	0xFEA
 21023                           fsr0l	equ	0xFE9
 21024                           wreg	equ	0xFE8
 21025                           indf1	equ	0xFE7
 21026                           postdec1	equ	0xFE5
 21027                           fsr1h	equ	0xFE2
 21028                           fsr1l	equ	0xFE1
 21029                           indf2	equ	0xFDF
 21030                           postinc2	equ	0xFDE
 21031                           fsr2h	equ	0xFDA
 21032                           fsr2l	equ	0xFD9
 21033                           status	equ	0xFD8
 21034                           
 21035 ;; *************** function _getMajorRevisionID *****************
 21036 ;; Defined at:
 21037 ;;		line 12 in file "device_IDs.c"
 21038 ;; Parameters:    Size  Location     Type
 21039 ;;		None
 21040 ;; Auto vars:     Size  Location     Type
 21041 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 21042 ;; Return value:  Size  Location     Type
 21043 ;;                  1    wreg      unsigned char 
 21044 ;; Registers used:
 21045 ;;		wreg, status,2, status,0, cstack
 21046 ;; Tracked objects:
 21047 ;;		On entry : 0/0
 21048 ;;		On exit  : 0/0
 21049 ;;		Unchanged: 0/0
 21050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21052 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21053 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21054 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21055 ;;Total ram usage:        5 bytes
 21056 ;; Hardware stack levels used:    1
 21057 ;; Hardware stack levels required when called:   15
 21058 ;; This function calls:
 21059 ;;		_FLASH_ReadWord
 21060 ;; This function is called by:
 21061 ;;		_ringBufferLUT
 21062 ;; This function uses a non-reentrant model
 21063 ;;
 21064                           
 21065                           	psect	text17
 21066  01A950                     __ptext17:
 21067                           	opt stack 0
 21068  01A950                     _getMajorRevisionID:
 21069                           	opt stack 13
 21070                           
 21071                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 21072                           
 21073                           ; BSR set to: 1
 21074                           ;incstack = 0
 21075  01A950  0EFC               	movlw	252
 21076  01A952  0101               	movlb	1	; () banked
 21077  01A954  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21078  01A956  0EFF               	movlw	255
 21079  01A958  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21080  01A95A  0E3F               	movlw	63
 21081  01A95C  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21082  01A95E  0E00               	movlw	0
 21083  01A960  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21084  01A962  EC08  F0D4         	call	_FLASH_ReadWord	;wreg free
 21085  01A966  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 21086  01A96A  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 21087                           
 21088                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 21089  01A96E  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 21090  01A972  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 21091  01A976  0E06               	movlw	6
 21092  01A978  0101               	movlb	1	; () banked
 21093  01A97A  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 21094  01A97C                     u20775:
 21095  01A97C  90D8               	bcf	status,0,c
 21096  01A97E  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 21097  01A980  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 21098  01A982  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 21099  01A984  D7FB               	goto	u20775
 21100  01A986  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 21101  01A988  0B1F               	andlw	31
 21102  01A98A  0012               	return	
 21103  01A98C                     __end_of_getMajorRevisionID:
 21104                           	opt stack 0
 21105                           tblptru	equ	0xFF8
 21106                           tblptrh	equ	0xFF7
 21107                           tblptrl	equ	0xFF6
 21108                           tablat	equ	0xFF5
 21109                           prodl	equ	0xFF3
 21110                           intcon	equ	0xFF2
 21111                           indf0	equ	0xFEF
 21112                           postinc0	equ	0xFEE
 21113                           fsr0h	equ	0xFEA
 21114                           fsr0l	equ	0xFE9
 21115                           wreg	equ	0xFE8
 21116                           indf1	equ	0xFE7
 21117                           postdec1	equ	0xFE5
 21118                           fsr1h	equ	0xFE2
 21119                           fsr1l	equ	0xFE1
 21120                           indf2	equ	0xFDF
 21121                           postinc2	equ	0xFDE
 21122                           fsr2h	equ	0xFDA
 21123                           fsr2l	equ	0xFD9
 21124                           status	equ	0xFD8
 21125                           
 21126 ;; *************** function _getDeviceIDString *****************
 21127 ;; Defined at:
 21128 ;;		line 34 in file "device_IDs.c"
 21129 ;; Parameters:    Size  Location     Type
 21130 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 21131 ;; Auto vars:     Size  Location     Type
 21132 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 21133 ;;		 -> STR_178(10), STR_177(13), STR_176(12), 
 21134 ;; Return value:  Size  Location     Type
 21135 ;;                  2   36[BANK1 ] PTR inline unsigned char
 21136 ;; Registers used:
 21137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21138 ;; Tracked objects:
 21139 ;;		On entry : 0/0
 21140 ;;		On exit  : 0/0
 21141 ;;		Unchanged: 0/0
 21142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21143 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21144 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21145 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21146 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21147 ;;Total ram usage:       10 bytes
 21148 ;; Hardware stack levels used:    1
 21149 ;; Hardware stack levels required when called:   13
 21150 ;; This function calls:
 21151 ;;		Nothing
 21152 ;; This function is called by:
 21153 ;;		_ringBufferLUT
 21154 ;; This function uses a non-reentrant model
 21155 ;;
 21156                           
 21157                           	psect	text18
 21158  01A198                     __ptext18:
 21159                           	opt stack 0
 21160  01A198                     _getDeviceIDString:
 21161                           	opt stack 15
 21162                           
 21163                           ;device_IDs.c: 37: const char *strings[] = {
 21164                           ;device_IDs.c: 39: "PIC18F67K40",
 21165                           ;device_IDs.c: 40: "PIC18LF67K40",
 21166                           ;device_IDs.c: 41: "Undefined"
 21167                           ;device_IDs.c: 43: };
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;incstack = 0
 21171  01A198  EE22  F0E2         	lfsr	2,getDeviceIDString@F17550
 21172  01A19C  EE11  F028         	lfsr	1,getDeviceIDString@strings
 21173  01A1A0  0E05               	movlw	5
 21174  01A1A2                     u20761:
 21175  01A1A2  CFDB FFE3          	movff	plusw2,plusw1
 21176  01A1A6  06E8               	decf	wreg,f,c
 21177  01A1A8  E2FC               	bc	u20761
 21178                           
 21179                           ;device_IDs.c: 47: switch (inputDevID) {
 21180  01A1AA  D00F               	goto	l1599
 21181  01A1AC                     
 21182                           ;device_IDs.c: 50: return strings[0];
 21183  01A1AC  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 21184  01A1B0  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 21185                           
 21186                           ;device_IDs.c: 51: break;
 21187  01A1B4  0012               	return	
 21188  01A1B6                     
 21189                           ;device_IDs.c: 54: return strings[1];
 21190  01A1B6  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 21191  01A1BA  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 21192                           
 21193                           ;device_IDs.c: 55: break;
 21194  01A1BE  0012               	return	
 21195  01A1C0                     
 21196                           ;device_IDs.c: 58: return strings[2];
 21197  01A1C0  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 21198  01A1C4  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 21199                           
 21200                           ;device_IDs.c: 61: }
 21201                           
 21202                           ;device_IDs.c: 59: break;
 21203  01A1C8  0012               	return	
 21204  01A1CA                     l1599:
 21205  01A1CA  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 21206  01A1CE  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 21207                           
 21208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 21209                           ; Switch size 1, requested type "space"
 21210                           ; Number of cases is 2, Range of values is 106 to 107
 21211                           ; switch strategies available:
 21212                           ; Name         Instructions Cycles
 21213                           ; simple_byte            7     4 (average)
 21214                           ;	Chosen strategy is simple_byte
 21215  01A1D2  0101               	movlb	1	; () banked
 21216  01A1D4  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 21217  01A1D6  0A6A               	xorlw	106	; case 106
 21218  01A1D8  B4D8               	btfsc	status,2,c
 21219  01A1DA  D004               	goto	l23543
 21220  01A1DC  0A01               	xorlw	1	; case 107
 21221  01A1DE  B4D8               	btfsc	status,2,c
 21222  01A1E0  D006               	goto	l23545
 21223  01A1E2  D7EE               	goto	l1604
 21224  01A1E4                     l23543:
 21225                           
 21226                           ; BSR set to: 1
 21227                           ; Switch size 1, requested type "space"
 21228                           ; Number of cases is 1, Range of values is 192 to 192
 21229                           ; switch strategies available:
 21230                           ; Name         Instructions Cycles
 21231                           ; simple_byte            4     3 (average)
 21232                           ;	Chosen strategy is simple_byte
 21233  01A1E4  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21234  01A1E6  0AC0               	xorlw	192	; case 192
 21235  01A1E8  B4D8               	btfsc	status,2,c
 21236  01A1EA  D7E0               	goto	l1600
 21237  01A1EC  D7E9               	goto	l1604
 21238  01A1EE                     l23545:
 21239                           
 21240                           ; BSR set to: 1
 21241                           ; Switch size 1, requested type "space"
 21242                           ; Number of cases is 1, Range of values is 32 to 32
 21243                           ; switch strategies available:
 21244                           ; Name         Instructions Cycles
 21245                           ; simple_byte            4     3 (average)
 21246                           ;	Chosen strategy is simple_byte
 21247  01A1EE  5126               	movf	??_getDeviceIDString& (0+255),w,b
 21248  01A1F0  0A20               	xorlw	32	; case 32
 21249  01A1F2  B4D8               	btfsc	status,2,c
 21250  01A1F4  D7E0               	goto	l1603
 21251  01A1F6  D7E4               	goto	l1604
 21252  01A1F8                     __end_of_getDeviceIDString:
 21253                           	opt stack 0
 21254                           tblptru	equ	0xFF8
 21255                           tblptrh	equ	0xFF7
 21256                           tblptrl	equ	0xFF6
 21257                           tablat	equ	0xFF5
 21258                           prodl	equ	0xFF3
 21259                           intcon	equ	0xFF2
 21260                           indf0	equ	0xFEF
 21261                           postinc0	equ	0xFEE
 21262                           fsr0h	equ	0xFEA
 21263                           fsr0l	equ	0xFE9
 21264                           wreg	equ	0xFE8
 21265                           indf1	equ	0xFE7
 21266                           postdec1	equ	0xFE5
 21267                           plusw1	equ	0xFE3
 21268                           fsr1h	equ	0xFE2
 21269                           fsr1l	equ	0xFE1
 21270                           indf2	equ	0xFDF
 21271                           postinc2	equ	0xFDE
 21272                           plusw2	equ	0xFDB
 21273                           fsr2h	equ	0xFDA
 21274                           fsr2l	equ	0xFD9
 21275                           status	equ	0xFD8
 21276                           
 21277 ;; *************** function _getDeviceID *****************
 21278 ;; Defined at:
 21279 ;;		line 4 in file "device_IDs.c"
 21280 ;; Parameters:    Size  Location     Type
 21281 ;;		None
 21282 ;; Auto vars:     Size  Location     Type
 21283 ;;		None
 21284 ;; Return value:  Size  Location     Type
 21285 ;;                  2   34[BANK1 ] unsigned int 
 21286 ;; Registers used:
 21287 ;;		wreg, status,2, status,0, cstack
 21288 ;; Tracked objects:
 21289 ;;		On entry : 0/0
 21290 ;;		On exit  : 0/0
 21291 ;;		Unchanged: 0/0
 21292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21293 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21296 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21297 ;;Total ram usage:        2 bytes
 21298 ;; Hardware stack levels used:    1
 21299 ;; Hardware stack levels required when called:   15
 21300 ;; This function calls:
 21301 ;;		_FLASH_ReadWord
 21302 ;; This function is called by:
 21303 ;;		_ringBufferLUT
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           	psect	text19
 21308  01AF7A                     __ptext19:
 21309                           	opt stack 0
 21310  01AF7A                     _getDeviceID:
 21311                           	opt stack 13
 21312                           
 21313                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 21314                           
 21315                           ;incstack = 0
 21316  01AF7A  0EFE               	movlw	254
 21317  01AF7C  0101               	movlb	1	; () banked
 21318  01AF7E  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21319  01AF80  0EFF               	movlw	255
 21320  01AF82  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21321  01AF84  0E3F               	movlw	63
 21322  01AF86  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21323  01AF88  0E00               	movlw	0
 21324  01AF8A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21325  01AF8C  EC08  F0D4         	call	_FLASH_ReadWord	;wreg free
 21326  01AF90  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 21327  01AF94  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 21328  01AF98  0012               	return	
 21329  01AF9A                     __end_of_getDeviceID:
 21330                           	opt stack 0
 21331                           tblptru	equ	0xFF8
 21332                           tblptrh	equ	0xFF7
 21333                           tblptrl	equ	0xFF6
 21334                           tablat	equ	0xFF5
 21335                           prodl	equ	0xFF3
 21336                           intcon	equ	0xFF2
 21337                           indf0	equ	0xFEF
 21338                           postinc0	equ	0xFEE
 21339                           fsr0h	equ	0xFEA
 21340                           fsr0l	equ	0xFE9
 21341                           wreg	equ	0xFE8
 21342                           indf1	equ	0xFE7
 21343                           postdec1	equ	0xFE5
 21344                           plusw1	equ	0xFE3
 21345                           fsr1h	equ	0xFE2
 21346                           fsr1l	equ	0xFE1
 21347                           indf2	equ	0xFDF
 21348                           postinc2	equ	0xFDE
 21349                           plusw2	equ	0xFDB
 21350                           fsr2h	equ	0xFDA
 21351                           fsr2l	equ	0xFD9
 21352                           status	equ	0xFD8
 21353                           
 21354 ;; *************** function _FLASH_ReadWord *****************
 21355 ;; Defined at:
 21356 ;;		line 71 in file "mcc_generated_files/memory.c"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;		None
 21361 ;; Return value:  Size  Location     Type
 21362 ;;                  2   27[BANK1 ] unsigned int 
 21363 ;; Registers used:
 21364 ;;		wreg, status,2, status,0, cstack
 21365 ;; Tracked objects:
 21366 ;;		On entry : 0/0
 21367 ;;		On exit  : 0/0
 21368 ;;		Unchanged: 0/0
 21369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21370 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21372 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21373 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21374 ;;Total ram usage:        7 bytes
 21375 ;; Hardware stack levels used:    1
 21376 ;; Hardware stack levels required when called:   14
 21377 ;; This function calls:
 21378 ;;		_FLASH_ReadByte
 21379 ;; This function is called by:
 21380 ;;		_getDeviceID
 21381 ;;		_getMajorRevisionID
 21382 ;;		_getMinorRevisionID
 21383 ;;		_getUserID
 21384 ;; This function uses a non-reentrant model
 21385 ;;
 21386                           
 21387                           	psect	text20
 21388  01A810                     __ptext20:
 21389                           	opt stack 0
 21390  01A810                     _FLASH_ReadWord:
 21391                           	opt stack 13
 21392                           
 21393                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 21394                           
 21395                           ;incstack = 0
 21396  01A810  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 21397  01A814  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 21398  01A818  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 21399  01A81C  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 21400  01A820  EC23  F0D8         	call	_FLASH_ReadByte	;wreg free
 21401  01A824  0101               	movlb	1	; () banked
 21402  01A826  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 21403  01A828  0E01               	movlw	1
 21404  01A82A  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 21405  01A82C  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 21406  01A82E  0E00               	movlw	0
 21407  01A830  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 21408  01A832  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 21409  01A834  0E00               	movlw	0
 21410  01A836  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 21411  01A838  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 21412  01A83A  0E00               	movlw	0
 21413  01A83C  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 21414  01A83E  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 21415  01A840  EC23  F0D8         	call	_FLASH_ReadByte	;wreg free
 21416  01A844  0101               	movlb	1	; () banked
 21417  01A846  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 21418  01A848  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 21419  01A84A  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 21420  01A84C  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 21421  01A850  0012               	return	
 21422  01A852                     __end_of_FLASH_ReadWord:
 21423                           	opt stack 0
 21424                           tblptru	equ	0xFF8
 21425                           tblptrh	equ	0xFF7
 21426                           tblptrl	equ	0xFF6
 21427                           tablat	equ	0xFF5
 21428                           prodl	equ	0xFF3
 21429                           intcon	equ	0xFF2
 21430                           indf0	equ	0xFEF
 21431                           postinc0	equ	0xFEE
 21432                           fsr0h	equ	0xFEA
 21433                           fsr0l	equ	0xFE9
 21434                           wreg	equ	0xFE8
 21435                           indf1	equ	0xFE7
 21436                           postdec1	equ	0xFE5
 21437                           plusw1	equ	0xFE3
 21438                           fsr1h	equ	0xFE2
 21439                           fsr1l	equ	0xFE1
 21440                           indf2	equ	0xFDF
 21441                           postinc2	equ	0xFDE
 21442                           plusw2	equ	0xFDB
 21443                           fsr2h	equ	0xFDA
 21444                           fsr2l	equ	0xFD9
 21445                           status	equ	0xFD8
 21446                           
 21447 ;; *************** function _FLASH_ReadByte *****************
 21448 ;; Defined at:
 21449 ;;		line 59 in file "mcc_generated_files/memory.c"
 21450 ;; Parameters:    Size  Location     Type
 21451 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 21452 ;; Auto vars:     Size  Location     Type
 21453 ;;		None
 21454 ;; Return value:  Size  Location     Type
 21455 ;;                  1    wreg      unsigned char 
 21456 ;; Registers used:
 21457 ;;		wreg, status,2
 21458 ;; Tracked objects:
 21459 ;;		On entry : 0/0
 21460 ;;		On exit  : 0/0
 21461 ;;		Unchanged: 0/0
 21462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21463 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21466 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21467 ;;Total ram usage:        4 bytes
 21468 ;; Hardware stack levels used:    1
 21469 ;; Hardware stack levels required when called:   13
 21470 ;; This function calls:
 21471 ;;		Nothing
 21472 ;; This function is called by:
 21473 ;;		_FLASH_ReadWord
 21474 ;;		_FLASH_WriteByte
 21475 ;; This function uses a non-reentrant model
 21476 ;;
 21477                           
 21478                           	psect	text21
 21479  01B046                     __ptext21:
 21480                           	opt stack 0
 21481  01B046                     _FLASH_ReadByte:
 21482                           	opt stack 13
 21483                           
 21484                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 21485                           
 21486                           ; BSR set to: 1
 21487                           ;incstack = 0
 21488  01B046  5077               	movf	3959,w,c	;volsfr
 21489  01B048  0B3F               	andlw	-193
 21490  01B04A  0980               	iorlw	128
 21491  01B04C  6E77               	movwf	3959,c	;volsfr
 21492                           
 21493                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 21494  01B04E  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 21495                           
 21496                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 21497  01B052  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 21498                           
 21499                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 21500  01B056  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 21501  01B05A  0008               	tblrd		*	;# 
 21502                           
 21503                           ;memory.c: 68: return (TABLAT);
 21504  01B05C  50F5               	movf	tablat,w,c	;volatile
 21505  01B05E  0012               	return	
 21506  01B060                     __end_of_FLASH_ReadByte:
 21507                           	opt stack 0
 21508                           tblptru	equ	0xFF8
 21509                           tblptrh	equ	0xFF7
 21510                           tblptrl	equ	0xFF6
 21511                           tablat	equ	0xFF5
 21512                           prodl	equ	0xFF3
 21513                           intcon	equ	0xFF2
 21514                           indf0	equ	0xFEF
 21515                           postinc0	equ	0xFEE
 21516                           fsr0h	equ	0xFEA
 21517                           fsr0l	equ	0xFE9
 21518                           wreg	equ	0xFE8
 21519                           indf1	equ	0xFE7
 21520                           postdec1	equ	0xFE5
 21521                           plusw1	equ	0xFE3
 21522                           fsr1h	equ	0xFE2
 21523                           fsr1l	equ	0xFE1
 21524                           indf2	equ	0xFDF
 21525                           postinc2	equ	0xFDE
 21526                           plusw2	equ	0xFDB
 21527                           fsr2h	equ	0xFDA
 21528                           fsr2l	equ	0xFD9
 21529                           status	equ	0xFD8
 21530                           
 21531 ;; *************** function _getCauseOfResetString *****************
 21532 ;; Defined at:
 21533 ;;		line 81 in file "cause_of_reset.c"
 21534 ;; Parameters:    Size  Location     Type
 21535 ;;  r               1    wreg     enum E17455
 21536 ;; Auto vars:     Size  Location     Type
 21537 ;;  r               1   25[BANK1 ] enum E17455
 21538 ;; Return value:  Size  Location     Type
 21539 ;;                  2   23[BANK1 ] PTR inline unsigned char
 21540 ;; Registers used:
 21541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21542 ;; Tracked objects:
 21543 ;;		On entry : 0/0
 21544 ;;		On exit  : 0/0
 21545 ;;		Unchanged: 0/0
 21546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21547 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21548 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21550 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21551 ;;Total ram usage:        3 bytes
 21552 ;; Hardware stack levels used:    1
 21553 ;; Hardware stack levels required when called:   13
 21554 ;; This function calls:
 21555 ;;		Nothing
 21556 ;; This function is called by:
 21557 ;;		_ringBufferLUT
 21558 ;; This function uses a non-reentrant model
 21559 ;;
 21560                           
 21561                           	psect	text22
 21562  01ACD0                     __ptext22:
 21563                           	opt stack 0
 21564  01ACD0                     _getCauseOfResetString:
 21565                           	opt stack 15
 21566                           
 21567                           ;incstack = 0
 21568                           ;getCauseOfResetString@r stored from wreg
 21569  01ACD0  0101               	movlb	1	; () banked
 21570  01ACD2  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 21571                           
 21572                           ;cause_of_reset.c: 84: static char *strings[] = {
 21573                           ;cause_of_reset.c: 85: "Undefined Reset",
 21574                           ;cause_of_reset.c: 86: "Power On Reset",
 21575                           ;cause_of_reset.c: 87: "Brown Out Reset",
 21576                           ;cause_of_reset.c: 88: "Master Clear Reset",
 21577                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 21578                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 21579                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 21580                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 21581                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 21582                           ;cause_of_reset.c: 94: };
 21583  01ACD4  0E09               	movlw	9
 21584  01ACD6  0101               	movlb	1	; () banked
 21585  01ACD8  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 21586  01ACDA  D00D               	goto	l1631
 21587                           
 21588                           ; BSR set to: 1
 21589                           ;cause_of_reset.c: 99: return strings[r];
 21590  01ACDC  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 21591  01ACDE  0D02               	mullw	2
 21592  01ACE0  0ED0               	movlw	low getCauseOfResetString@strings
 21593  01ACE2  24F3               	addwf	prodl,w,c
 21594  01ACE4  6ED9               	movwf	fsr2l,c
 21595  01ACE6  0E02               	movlw	high getCauseOfResetString@strings
 21596  01ACE8  20F4               	addwfc	prodh,w,c
 21597  01ACEA  6EDA               	movwf	fsr2h,c
 21598  01ACEC  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 21599  01ACF0  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;cause_of_reset.c: 101: }
 21603                           
 21604                           ; BSR set to: 1
 21605  01ACF4  0012               	return	
 21606  01ACF6                     l1631:
 21607                           
 21608                           ; BSR set to: 1
 21609                           ;cause_of_reset.c: 103: else {
 21610                           ;cause_of_reset.c: 105: return "Undefined Reset";
 21611                           
 21612                           ; BSR set to: 1
 21613  01ACF6  0E71               	movlw	low STR_179
 21614  01ACF8  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 21615  01ACFA  0EFD               	movlw	high STR_179
 21616  01ACFC  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 21617                           
 21618                           ; BSR set to: 1
 21619  01ACFE  0012               	return	
 21620  01AD00                     __end_of_getCauseOfResetString:
 21621                           	opt stack 0
 21622                           tblptru	equ	0xFF8
 21623                           tblptrh	equ	0xFF7
 21624                           tblptrl	equ	0xFF6
 21625                           tablat	equ	0xFF5
 21626                           prodh	equ	0xFF4
 21627                           prodl	equ	0xFF3
 21628                           intcon	equ	0xFF2
 21629                           indf0	equ	0xFEF
 21630                           postinc0	equ	0xFEE
 21631                           fsr0h	equ	0xFEA
 21632                           fsr0l	equ	0xFE9
 21633                           wreg	equ	0xFE8
 21634                           indf1	equ	0xFE7
 21635                           postdec1	equ	0xFE5
 21636                           plusw1	equ	0xFE3
 21637                           fsr1h	equ	0xFE2
 21638                           fsr1l	equ	0xFE1
 21639                           indf2	equ	0xFDF
 21640                           postinc2	equ	0xFDE
 21641                           postdec2	equ	0xFDD
 21642                           plusw2	equ	0xFDB
 21643                           fsr2h	equ	0xFDA
 21644                           fsr2l	equ	0xFD9
 21645                           status	equ	0xFD8
 21646                           
 21647 ;; *************** function _getCOMMError *****************
 21648 ;; Defined at:
 21649 ;;		line 35 in file "error_handling.c"
 21650 ;; Parameters:    Size  Location     Type
 21651 ;;		None
 21652 ;; Auto vars:     Size  Location     Type
 21653 ;;		None
 21654 ;; Return value:  Size  Location     Type
 21655 ;;                  1    wreg      unsigned char 
 21656 ;; Registers used:
 21657 ;;		wreg, status,2
 21658 ;; Tracked objects:
 21659 ;;		On entry : 0/0
 21660 ;;		On exit  : 0/0
 21661 ;;		Unchanged: 0/0
 21662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21667 ;;Total ram usage:        0 bytes
 21668 ;; Hardware stack levels used:    1
 21669 ;; Hardware stack levels required when called:   13
 21670 ;; This function calls:
 21671 ;;		Nothing
 21672 ;; This function is called by:
 21673 ;;		_ringBufferLUT
 21674 ;;		_updateErrorLEDs
 21675 ;; This function uses a non-reentrant model
 21676 ;;
 21677                           
 21678                           	psect	text23
 21679  01B0DC                     __ptext23:
 21680                           	opt stack 0
 21681  01B0DC                     _getCOMMError:
 21682                           	opt stack 16
 21683                           
 21684                           ;error_handling.c: 38: if ( error_handler.I2C_COMM_error_flag ||
 21685                           ;error_handling.c: 39: error_handler.USB_UART_COMM_error_flag ) {
 21686                           
 21687                           ; BSR set to: 1
 21688                           ;incstack = 0
 21689  01B0DC  0102               	movlb	2	; () banked
 21690  01B0DE  5107               	movf	(_error_handler+7)& (0+255),w,b
 21691  01B0E0  A4D8               	btfss	status,2,c
 21692  01B0E2  D003               	goto	u20860
 21693                           
 21694                           ; BSR set to: 2
 21695  01B0E4  5108               	movf	(_error_handler+8)& (0+255),w,b
 21696  01B0E6  B4D8               	btfsc	status,2,c
 21697  01B0E8  D002               	goto	l1889
 21698  01B0EA                     u20860:
 21699                           
 21700                           ; BSR set to: 2
 21701                           ;error_handling.c: 41: return 1;
 21702                           
 21703                           ; BSR set to: 2
 21704  01B0EA  0E01               	movlw	1
 21705                           
 21706                           ; BSR set to: 2
 21707                           ;error_handling.c: 43: }
 21708                           
 21709                           ; BSR set to: 2
 21710  01B0EC  0012               	return	
 21711  01B0EE                     l1889:
 21712                           
 21713                           ; BSR set to: 2
 21714                           ;error_handling.c: 45: else {
 21715                           ;error_handling.c: 47: return 0;
 21716                           
 21717                           ; BSR set to: 2
 21718  01B0EE  0E00               	movlw	0
 21719                           
 21720                           ; BSR set to: 2
 21721  01B0F0  0012               	return	
 21722  01B0F2                     __end_of_getCOMMError:
 21723                           	opt stack 0
 21724                           tblptru	equ	0xFF8
 21725                           tblptrh	equ	0xFF7
 21726                           tblptrl	equ	0xFF6
 21727                           tablat	equ	0xFF5
 21728                           prodh	equ	0xFF4
 21729                           prodl	equ	0xFF3
 21730                           intcon	equ	0xFF2
 21731                           indf0	equ	0xFEF
 21732                           postinc0	equ	0xFEE
 21733                           fsr0h	equ	0xFEA
 21734                           fsr0l	equ	0xFE9
 21735                           wreg	equ	0xFE8
 21736                           indf1	equ	0xFE7
 21737                           postdec1	equ	0xFE5
 21738                           plusw1	equ	0xFE3
 21739                           fsr1h	equ	0xFE2
 21740                           fsr1l	equ	0xFE1
 21741                           indf2	equ	0xFDF
 21742                           postinc2	equ	0xFDE
 21743                           postdec2	equ	0xFDD
 21744                           plusw2	equ	0xFDB
 21745                           fsr2h	equ	0xFDA
 21746                           fsr2l	equ	0xFD9
 21747                           status	equ	0xFD8
 21748                           
 21749 ;; *************** function _getADCError *****************
 21750 ;; Defined at:
 21751 ;;		line 11 in file "error_handling.c"
 21752 ;; Parameters:    Size  Location     Type
 21753 ;;		None
 21754 ;; Auto vars:     Size  Location     Type
 21755 ;;		None
 21756 ;; Return value:  Size  Location     Type
 21757 ;;                  1    wreg      unsigned char 
 21758 ;; Registers used:
 21759 ;;		wreg, status,2
 21760 ;; Tracked objects:
 21761 ;;		On entry : 0/0
 21762 ;;		On exit  : 0/0
 21763 ;;		Unchanged: 0/0
 21764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21769 ;;Total ram usage:        0 bytes
 21770 ;; Hardware stack levels used:    1
 21771 ;; Hardware stack levels required when called:   13
 21772 ;; This function calls:
 21773 ;;		Nothing
 21774 ;; This function is called by:
 21775 ;;		_ringBufferLUT
 21776 ;;		_updateErrorLEDs
 21777 ;; This function uses a non-reentrant model
 21778 ;;
 21779                           
 21780                           	psect	text24
 21781  01AC02                     __ptext24:
 21782                           	opt stack 0
 21783  01AC02                     _getADCError:
 21784                           	opt stack 16
 21785                           
 21786                           ;error_handling.c: 14: if ( error_handler.ADC_general_error_flag ||
 21787                           ;error_handling.c: 15: error_handler.AVSS_ADC_error_flag ||
 21788                           ;error_handling.c: 16: error_handler.FVR_ADC_error_flag ||
 21789                           ;error_handling.c: 17: error_handler.ISNS_ADC_error_flag ||
 21790                           ;error_handling.c: 18: error_handler.POS12_ADC_error_flag ||
 21791                           ;error_handling.c: 19: error_handler.POS3P3_ADC_error_flag ||
 21792                           ;error_handling.c: 20: error_handler.Temp_ADC_error_flag ) {
 21793                           
 21794                           ; BSR set to: 2
 21795                           ;incstack = 0
 21796  01AC02  0102               	movlb	2	; () banked
 21797  01AC04  5106               	movf	(_error_handler+6)& (0+255),w,b
 21798  01AC06  A4D8               	btfss	status,2,c
 21799  01AC08  D012               	goto	u20840
 21800                           
 21801                           ; BSR set to: 2
 21802  01AC0A  5103               	movf	(_error_handler+3)& (0+255),w,b
 21803  01AC0C  A4D8               	btfss	status,2,c
 21804  01AC0E  D00F               	goto	u20840
 21805                           
 21806                           ; BSR set to: 2
 21807  01AC10  5105               	movf	(_error_handler+5)& (0+255),w,b
 21808  01AC12  A4D8               	btfss	status,2,c
 21809  01AC14  D00C               	goto	u20840
 21810                           
 21811                           ; BSR set to: 2
 21812  01AC16  5100               	movf	_error_handler& (0+255),w,b
 21813  01AC18  A4D8               	btfss	status,2,c
 21814  01AC1A  D009               	goto	u20840
 21815                           
 21816                           ; BSR set to: 2
 21817  01AC1C  5101               	movf	(_error_handler+1)& (0+255),w,b
 21818  01AC1E  A4D8               	btfss	status,2,c
 21819  01AC20  D006               	goto	u20840
 21820                           
 21821                           ; BSR set to: 2
 21822  01AC22  5102               	movf	(_error_handler+2)& (0+255),w,b
 21823  01AC24  A4D8               	btfss	status,2,c
 21824  01AC26  D003               	goto	u20840
 21825                           
 21826                           ; BSR set to: 2
 21827  01AC28  5104               	movf	(_error_handler+4)& (0+255),w,b
 21828  01AC2A  B4D8               	btfsc	status,2,c
 21829  01AC2C  D002               	goto	l1882
 21830  01AC2E                     u20840:
 21831                           
 21832                           ; BSR set to: 2
 21833                           ;error_handling.c: 22: return 1;
 21834                           
 21835                           ; BSR set to: 2
 21836  01AC2E  0E01               	movlw	1
 21837                           
 21838                           ; BSR set to: 2
 21839                           ;error_handling.c: 24: }
 21840                           
 21841                           ; BSR set to: 2
 21842  01AC30  0012               	return	
 21843  01AC32                     l1882:
 21844                           
 21845                           ; BSR set to: 2
 21846                           ;error_handling.c: 26: else {
 21847                           ;error_handling.c: 28: return 0;
 21848                           
 21849                           ; BSR set to: 2
 21850  01AC32  0E00               	movlw	0
 21851                           
 21852                           ; BSR set to: 2
 21853  01AC34  0012               	return	
 21854  01AC36                     __end_of_getADCError:
 21855                           	opt stack 0
 21856                           tblptru	equ	0xFF8
 21857                           tblptrh	equ	0xFF7
 21858                           tblptrl	equ	0xFF6
 21859                           tablat	equ	0xFF5
 21860                           prodh	equ	0xFF4
 21861                           prodl	equ	0xFF3
 21862                           intcon	equ	0xFF2
 21863                           indf0	equ	0xFEF
 21864                           postinc0	equ	0xFEE
 21865                           fsr0h	equ	0xFEA
 21866                           fsr0l	equ	0xFE9
 21867                           wreg	equ	0xFE8
 21868                           indf1	equ	0xFE7
 21869                           postdec1	equ	0xFE5
 21870                           plusw1	equ	0xFE3
 21871                           fsr1h	equ	0xFE2
 21872                           fsr1l	equ	0xFE1
 21873                           indf2	equ	0xFDF
 21874                           postinc2	equ	0xFDE
 21875                           postdec2	equ	0xFDD
 21876                           plusw2	equ	0xFDB
 21877                           fsr2h	equ	0xFDA
 21878                           fsr2l	equ	0xFD9
 21879                           status	equ	0xFD8
 21880                           
 21881 ;; *************** function _clearCOMMErrors *****************
 21882 ;; Defined at:
 21883 ;;		line 90 in file "error_handling.c"
 21884 ;; Parameters:    Size  Location     Type
 21885 ;;		None
 21886 ;; Auto vars:     Size  Location     Type
 21887 ;;		None
 21888 ;; Return value:  Size  Location     Type
 21889 ;;                  1    wreg      void 
 21890 ;; Registers used:
 21891 ;;		wreg, status,2
 21892 ;; Tracked objects:
 21893 ;;		On entry : 0/0
 21894 ;;		On exit  : 0/0
 21895 ;;		Unchanged: 0/0
 21896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21901 ;;Total ram usage:        0 bytes
 21902 ;; Hardware stack levels used:    1
 21903 ;; Hardware stack levels required when called:   13
 21904 ;; This function calls:
 21905 ;;		Nothing
 21906 ;; This function is called by:
 21907 ;;		_ringBufferLUT
 21908 ;; This function uses a non-reentrant model
 21909 ;;
 21910                           
 21911                           	psect	text25
 21912  01B192                     __ptext25:
 21913                           	opt stack 0
 21914  01B192                     _clearCOMMErrors:
 21915                           	opt stack 15
 21916                           
 21917                           ;error_handling.c: 93: error_handler.I2C_COMM_error_flag = 0;
 21918                           
 21919                           ; BSR set to: 2
 21920                           ;incstack = 0
 21921  01B192  0E00               	movlw	0
 21922  01B194  0102               	movlb	2	; () banked
 21923  01B196  6F07               	movwf	(_error_handler+7)& (0+255),b
 21924                           
 21925                           ;error_handling.c: 94: error_handler.USB_UART_COMM_error_flag = 0;
 21926  01B198  0E00               	movlw	0
 21927  01B19A  6F08               	movwf	(_error_handler+8)& (0+255),b
 21928                           
 21929                           ; BSR set to: 2
 21930                           ;error_handling.c: 97: LATFbits.LATF1 = 0;
 21931  01B19C  927E               	bcf	3966,1,c	;volatile
 21932                           
 21933                           ; BSR set to: 2
 21934  01B19E  0012               	return		;funcret
 21935  01B1A0                     __end_of_clearCOMMErrors:
 21936                           	opt stack 0
 21937                           tblptru	equ	0xFF8
 21938                           tblptrh	equ	0xFF7
 21939                           tblptrl	equ	0xFF6
 21940                           tablat	equ	0xFF5
 21941                           prodh	equ	0xFF4
 21942                           prodl	equ	0xFF3
 21943                           intcon	equ	0xFF2
 21944                           indf0	equ	0xFEF
 21945                           postinc0	equ	0xFEE
 21946                           fsr0h	equ	0xFEA
 21947                           fsr0l	equ	0xFE9
 21948                           wreg	equ	0xFE8
 21949                           indf1	equ	0xFE7
 21950                           postdec1	equ	0xFE5
 21951                           plusw1	equ	0xFE3
 21952                           fsr1h	equ	0xFE2
 21953                           fsr1l	equ	0xFE1
 21954                           indf2	equ	0xFDF
 21955                           postinc2	equ	0xFDE
 21956                           postdec2	equ	0xFDD
 21957                           plusw2	equ	0xFDB
 21958                           fsr2h	equ	0xFDA
 21959                           fsr2l	equ	0xFD9
 21960                           status	equ	0xFD8
 21961                           
 21962 ;; *************** function _clearADCErrors *****************
 21963 ;; Defined at:
 21964 ;;		line 73 in file "error_handling.c"
 21965 ;; Parameters:    Size  Location     Type
 21966 ;;		None
 21967 ;; Auto vars:     Size  Location     Type
 21968 ;;		None
 21969 ;; Return value:  Size  Location     Type
 21970 ;;                  1    wreg      void 
 21971 ;; Registers used:
 21972 ;;		wreg, status,2
 21973 ;; Tracked objects:
 21974 ;;		On entry : 0/0
 21975 ;;		On exit  : 0/0
 21976 ;;		Unchanged: 0/0
 21977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21982 ;;Total ram usage:        0 bytes
 21983 ;; Hardware stack levels used:    1
 21984 ;; Hardware stack levels required when called:   13
 21985 ;; This function calls:
 21986 ;;		Nothing
 21987 ;; This function is called by:
 21988 ;;		_ringBufferLUT
 21989 ;; This function uses a non-reentrant model
 21990 ;;
 21991                           
 21992                           	psect	text26
 21993  01AF36                     __ptext26:
 21994                           	opt stack 0
 21995  01AF36                     _clearADCErrors:
 21996                           	opt stack 15
 21997                           
 21998                           ;error_handling.c: 76: error_handler.ISNS_ADC_error_flag = 0;
 21999                           
 22000                           ; BSR set to: 2
 22001                           ;incstack = 0
 22002  01AF36  0E00               	movlw	0
 22003  01AF38  0102               	movlb	2	; () banked
 22004  01AF3A  6F00               	movwf	_error_handler& (0+255),b
 22005                           
 22006                           ;error_handling.c: 77: error_handler.POS12_ADC_error_flag = 0;
 22007  01AF3C  0E00               	movlw	0
 22008  01AF3E  6F01               	movwf	(_error_handler+1)& (0+255),b
 22009                           
 22010                           ;error_handling.c: 78: error_handler.POS3P3_ADC_error_flag = 0;
 22011  01AF40  0E00               	movlw	0
 22012  01AF42  6F02               	movwf	(_error_handler+2)& (0+255),b
 22013                           
 22014                           ;error_handling.c: 79: error_handler.AVSS_ADC_error_flag = 0;
 22015  01AF44  0E00               	movlw	0
 22016  01AF46  6F03               	movwf	(_error_handler+3)& (0+255),b
 22017                           
 22018                           ;error_handling.c: 80: error_handler.Temp_ADC_error_flag = 0;
 22019  01AF48  0E00               	movlw	0
 22020  01AF4A  6F04               	movwf	(_error_handler+4)& (0+255),b
 22021                           
 22022                           ;error_handling.c: 81: error_handler.FVR_ADC_error_flag = 0;
 22023  01AF4C  0E00               	movlw	0
 22024  01AF4E  6F05               	movwf	(_error_handler+5)& (0+255),b
 22025                           
 22026                           ;error_handling.c: 82: error_handler.ADC_general_error_flag = 0;
 22027  01AF50  0E00               	movlw	0
 22028  01AF52  6F06               	movwf	(_error_handler+6)& (0+255),b
 22029                           
 22030                           ; BSR set to: 2
 22031                           ;error_handling.c: 85: LATFbits.LATF3 = 0;
 22032  01AF54  967E               	bcf	3966,3,c	;volatile
 22033                           
 22034                           ; BSR set to: 2
 22035  01AF56  0012               	return		;funcret
 22036  01AF58                     __end_of_clearADCErrors:
 22037                           	opt stack 0
 22038                           tblptru	equ	0xFF8
 22039                           tblptrh	equ	0xFF7
 22040                           tblptrl	equ	0xFF6
 22041                           tablat	equ	0xFF5
 22042                           prodh	equ	0xFF4
 22043                           prodl	equ	0xFF3
 22044                           intcon	equ	0xFF2
 22045                           indf0	equ	0xFEF
 22046                           postinc0	equ	0xFEE
 22047                           fsr0h	equ	0xFEA
 22048                           fsr0l	equ	0xFE9
 22049                           wreg	equ	0xFE8
 22050                           indf1	equ	0xFE7
 22051                           postdec1	equ	0xFE5
 22052                           plusw1	equ	0xFE3
 22053                           fsr1h	equ	0xFE2
 22054                           fsr1l	equ	0xFE1
 22055                           indf2	equ	0xFDF
 22056                           postinc2	equ	0xFDE
 22057                           postdec2	equ	0xFDD
 22058                           plusw2	equ	0xFDB
 22059                           fsr2h	equ	0xFDA
 22060                           fsr2l	equ	0xFD9
 22061                           status	equ	0xFD8
 22062                           
 22063 ;; *************** function _atoi *****************
 22064 ;; Defined at:
 22065 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 22066 ;; Parameters:    Size  Location     Type
 22067 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 22068 ;;		 -> ringBufferLUT@arg_buff(3), 
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;  a               2   34[BANK1 ] int 
 22071 ;;  sign            1   33[BANK1 ] unsigned char 
 22072 ;; Return value:  Size  Location     Type
 22073 ;;                  2   29[BANK1 ] int 
 22074 ;; Registers used:
 22075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22076 ;; Tracked objects:
 22077 ;;		On entry : 0/0
 22078 ;;		On exit  : 0/0
 22079 ;;		Unchanged: 0/0
 22080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22081 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22082 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22083 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22084 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22085 ;;Total ram usage:        7 bytes
 22086 ;; Hardware stack levels used:    1
 22087 ;; Hardware stack levels required when called:   14
 22088 ;; This function calls:
 22089 ;;		___wmul
 22090 ;;		_isdigit
 22091 ;; This function is called by:
 22092 ;;		_ringBufferLUT
 22093 ;; This function uses a non-reentrant model
 22094 ;;
 22095                           
 22096                           	psect	text27
 22097  0193BC                     __ptext27:
 22098                           	opt stack 0
 22099  0193BC                     _atoi:
 22100                           	opt stack 14
 22101                           
 22102                           ; BSR set to: 2
 22103                           ;incstack = 0
 22104  0193BC  D003               	goto	l2320
 22105  0193BE  0101               	movlb	1	; () banked
 22106  0193C0  4B1D               	infsnz	atoi@s& (0+255),f,b
 22107  0193C2  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 22108  0193C4                     l2320:
 22109                           
 22110                           ; BSR set to: 1
 22111  0193C4  C11D  FFD9         	movff	atoi@s,fsr2l
 22112  0193C8  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22113  0193CC  0E20               	movlw	32
 22114  0193CE  18DE               	xorwf	postinc2,w,c
 22115  0193D0  B4D8               	btfsc	status,2,c
 22116  0193D2  D7F5               	goto	l2321
 22117  0193D4  C11D  FFD9         	movff	atoi@s,fsr2l
 22118  0193D8  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22119  0193DC  0E09               	movlw	9
 22120  0193DE  18DE               	xorwf	postinc2,w,c
 22121  0193E0  B4D8               	btfsc	status,2,c
 22122  0193E2  D7ED               	goto	l2321
 22123  0193E4  0E00               	movlw	0
 22124  0193E6  0101               	movlb	1	; () banked
 22125  0193E8  6F23               	movwf	(atoi@a+1)& (0+255),b
 22126  0193EA  0E00               	movlw	0
 22127  0193EC  6F22               	movwf	atoi@a& (0+255),b
 22128  0193EE  0E00               	movlw	0
 22129  0193F0  6F21               	movwf	atoi@sign& (0+255),b
 22130                           
 22131                           ; BSR set to: 1
 22132  0193F2  C11D  FFD9         	movff	atoi@s,fsr2l
 22133  0193F6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22134  0193FA  0E2D               	movlw	45
 22135  0193FC  18DE               	xorwf	postinc2,w,c
 22136  0193FE  A4D8               	btfss	status,2,c
 22137  019400  D002               	goto	l2323
 22138                           
 22139                           ; BSR set to: 1
 22140  019402  2B21               	incf	atoi@sign& (0+255),f,b
 22141  019404  D026               	goto	l16373
 22142  019406                     l2323:
 22143                           
 22144                           ; BSR set to: 1
 22145                           
 22146                           ; BSR set to: 1
 22147  019406  C11D  FFD9         	movff	atoi@s,fsr2l
 22148  01940A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22149  01940E  0E2B               	movlw	43
 22150  019410  18DE               	xorwf	postinc2,w,c
 22151  019412  A4D8               	btfss	status,2,c
 22152  019414  D020               	goto	l2326
 22153  019416  D01D               	goto	l16373
 22154  019418                     
 22155                           ; BSR set to: 1
 22156  019418  C122  F117         	movff	atoi@a,___wmul@multiplier
 22157  01941C  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 22158  019420  0E00               	movlw	0
 22159  019422  0101               	movlb	1	; () banked
 22160  019424  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22161  019426  0E0A               	movlw	10
 22162  019428  6F19               	movwf	___wmul@multiplicand& (0+255),b
 22163  01942A  ECDC  F0D6         	call	___wmul	;wreg free
 22164  01942E  C11D  FFD9         	movff	atoi@s,fsr2l
 22165  019432  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22166  019436  50DF               	movf	indf2,w,c
 22167  019438  0101               	movlb	1	; () banked
 22168  01943A  6F1F               	movwf	??_atoi& (0+255),b
 22169  01943C  6B20               	clrf	(??_atoi+1)& (0+255),b
 22170  01943E  5117               	movf	?___wmul& (0+255),w,b
 22171  019440  271F               	addwf	??_atoi& (0+255),f,b
 22172  019442  5118               	movf	(?___wmul+1)& (0+255),w,b
 22173  019444  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 22174  019446  0ED0               	movlw	208
 22175  019448  251F               	addwf	??_atoi& (0+255),w,b
 22176  01944A  6F22               	movwf	atoi@a& (0+255),b
 22177  01944C  0EFF               	movlw	255
 22178  01944E  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 22179  019450  6F23               	movwf	(atoi@a+1)& (0+255),b
 22180  019452                     l16373:
 22181                           
 22182                           ; BSR set to: 1
 22183  019452  4B1D               	infsnz	atoi@s& (0+255),f,b
 22184  019454  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 22185  019456                     l2326:
 22186                           
 22187                           ; BSR set to: 1
 22188                           
 22189                           ; BSR set to: 1
 22190  019456  C11D  FFD9         	movff	atoi@s,fsr2l
 22191  01945A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 22192  01945E  50DF               	movf	indf2,w,c
 22193  019460  ECAC  F0D7         	call	_isdigit
 22194  019464  B0D8               	btfsc	status,0,c
 22195  019466  D7D8               	goto	l2327
 22196  019468  0101               	movlb	1	; () banked
 22197  01946A  5121               	movf	atoi@sign& (0+255),w,b
 22198  01946C  B4D8               	btfsc	status,2,c
 22199  01946E  D00D               	goto	l2329
 22200                           
 22201                           ; BSR set to: 1
 22202  019470  C122  F11F         	movff	atoi@a,??_atoi
 22203  019474  C123  F120         	movff	atoi@a+1,??_atoi+1
 22204  019478  1F1F               	comf	??_atoi& (0+255),f,b
 22205  01947A  1F20               	comf	(??_atoi+1)& (0+255),f,b
 22206  01947C  4B1F               	infsnz	??_atoi& (0+255),f,b
 22207  01947E  2B20               	incf	(??_atoi+1)& (0+255),f,b
 22208  019480  C11F  F11D         	movff	??_atoi,?_atoi
 22209  019484  C120  F11E         	movff	??_atoi+1,?_atoi+1
 22210  019488  0012               	return	
 22211  01948A                     l2329:
 22212                           
 22213                           ; BSR set to: 1
 22214  01948A  C122  F11D         	movff	atoi@a,?_atoi
 22215  01948E  C123  F11E         	movff	atoi@a+1,?_atoi+1
 22216                           
 22217                           ; BSR set to: 1
 22218  019492  0012               	return		;funcret
 22219  019494                     __end_of_atoi:
 22220                           	opt stack 0
 22221                           tblptru	equ	0xFF8
 22222                           tblptrh	equ	0xFF7
 22223                           tblptrl	equ	0xFF6
 22224                           tablat	equ	0xFF5
 22225                           prodh	equ	0xFF4
 22226                           prodl	equ	0xFF3
 22227                           intcon	equ	0xFF2
 22228                           indf0	equ	0xFEF
 22229                           postinc0	equ	0xFEE
 22230                           fsr0h	equ	0xFEA
 22231                           fsr0l	equ	0xFE9
 22232                           wreg	equ	0xFE8
 22233                           indf1	equ	0xFE7
 22234                           postdec1	equ	0xFE5
 22235                           plusw1	equ	0xFE3
 22236                           fsr1h	equ	0xFE2
 22237                           fsr1l	equ	0xFE1
 22238                           indf2	equ	0xFDF
 22239                           postinc2	equ	0xFDE
 22240                           postdec2	equ	0xFDD
 22241                           plusw2	equ	0xFDB
 22242                           fsr2h	equ	0xFDA
 22243                           fsr2l	equ	0xFD9
 22244                           status	equ	0xFD8
 22245                           
 22246 ;; *************** function ___fldiv *****************
 22247 ;; Defined at:
 22248 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 22249 ;; Parameters:    Size  Location     Type
 22250 ;;  b               4   61[BANK1 ] int 
 22251 ;;  a               4   65[BANK1 ] int 
 22252 ;; Auto vars:     Size  Location     Type
 22253 ;;  grs             4   80[BANK1 ] unsigned long 
 22254 ;;  rem             4   74[BANK1 ] unsigned long 
 22255 ;;  new_exp         2   78[BANK1 ] int 
 22256 ;;  aexp            1   85[BANK1 ] unsigned char 
 22257 ;;  bexp            1   84[BANK1 ] unsigned char 
 22258 ;;  sign            1   73[BANK1 ] unsigned char 
 22259 ;; Return value:  Size  Location     Type
 22260 ;;                  4   61[BANK1 ] unsigned char 
 22261 ;; Registers used:
 22262 ;;		wreg, status,2, status,0
 22263 ;; Tracked objects:
 22264 ;;		On entry : 0/0
 22265 ;;		On exit  : 0/0
 22266 ;;		Unchanged: 0/0
 22267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22268 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22269 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22270 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22271 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22272 ;;Total ram usage:       25 bytes
 22273 ;; Hardware stack levels used:    1
 22274 ;; Hardware stack levels required when called:   13
 22275 ;; This function calls:
 22276 ;;		Nothing
 22277 ;; This function is called by:
 22278 ;;		_ringBufferLUT
 22279 ;; This function uses a non-reentrant model
 22280 ;;
 22281                           
 22282                           	psect	text28
 22283  017072                     __ptext28:
 22284                           	opt stack 0
 22285  017072                     ___fldiv:
 22286                           	opt stack 15
 22287                           
 22288                           ; BSR set to: 1
 22289                           ;incstack = 0
 22290  017072  0101               	movlb	1	; () banked
 22291  017074  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 22292  017076  0B80               	andlw	128
 22293  017078  6F49               	movwf	___fldiv@sign& (0+255),b
 22294  01707A  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 22295  01707C  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 22296  01707E  6F54               	movwf	___fldiv@bexp& (0+255),b
 22297                           
 22298                           ; BSR set to: 1
 22299  017080  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 22300                           
 22301                           ; BSR set to: 1
 22302  017082  8154               	bsf	___fldiv@bexp& (0+255),0,b
 22303                           
 22304                           ; BSR set to: 1
 22305                           
 22306                           ; BSR set to: 1
 22307  017084  5154               	movf	___fldiv@bexp& (0+255),w,b
 22308  017086  B4D8               	btfsc	status,2,c
 22309  017088  D00D               	goto	l2768
 22310                           
 22311                           ; BSR set to: 1
 22312  01708A  2954               	incf	___fldiv@bexp& (0+255),w,b
 22313  01708C  A4D8               	btfss	status,2,c
 22314  01708E  D008               	goto	l2769
 22315                           
 22316                           ; BSR set to: 1
 22317  017090  0E00               	movlw	0
 22318  017092  6F3D               	movwf	___fldiv@b& (0+255),b
 22319  017094  0E00               	movlw	0
 22320  017096  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22321  017098  0E00               	movlw	0
 22322  01709A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22323  01709C  0E00               	movlw	0
 22324  01709E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22325  0170A0                     l2769:
 22326                           
 22327                           ; BSR set to: 1
 22328                           
 22329                           ; BSR set to: 1
 22330  0170A0  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 22331  0170A2  D006               	goto	L1
 22332  0170A4                     l2768:
 22333                           
 22334                           ; BSR set to: 1
 22335                           
 22336                           ; BSR set to: 1
 22337  0170A4  0E00               	movlw	0
 22338  0170A6  6F3D               	movwf	___fldiv@b& (0+255),b
 22339  0170A8  0E00               	movlw	0
 22340  0170AA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22341  0170AC  0E00               	movlw	0
 22342  0170AE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22343  0170B0                     L1:
 22344  0170B0  0E00               	movlw	0
 22345  0170B2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22346                           
 22347                           ; BSR set to: 1
 22348                           
 22349                           ; BSR set to: 1
 22350  0170B4  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22351  0170B6  0B80               	andlw	128
 22352  0170B8  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 22353                           
 22354                           ; BSR set to: 1
 22355  0170BA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22356  0170BC  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 22357  0170BE  6F55               	movwf	___fldiv@aexp& (0+255),b
 22358                           
 22359                           ; BSR set to: 1
 22360  0170C0  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 22361                           
 22362                           ; BSR set to: 1
 22363  0170C2  8155               	bsf	___fldiv@aexp& (0+255),0,b
 22364                           
 22365                           ; BSR set to: 1
 22366                           
 22367                           ; BSR set to: 1
 22368  0170C4  5155               	movf	___fldiv@aexp& (0+255),w,b
 22369  0170C6  B4D8               	btfsc	status,2,c
 22370  0170C8  D00D               	goto	l2772
 22371                           
 22372                           ; BSR set to: 1
 22373  0170CA  2955               	incf	___fldiv@aexp& (0+255),w,b
 22374  0170CC  A4D8               	btfss	status,2,c
 22375  0170CE  D008               	goto	l2773
 22376                           
 22377                           ; BSR set to: 1
 22378  0170D0  0E00               	movlw	0
 22379  0170D2  6F41               	movwf	___fldiv@a& (0+255),b
 22380  0170D4  0E00               	movlw	0
 22381  0170D6  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 22382  0170D8  0E00               	movlw	0
 22383  0170DA  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 22384  0170DC  0E00               	movlw	0
 22385  0170DE  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 22386  0170E0                     l2773:
 22387                           
 22388                           ; BSR set to: 1
 22389                           
 22390                           ; BSR set to: 1
 22391  0170E0  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 22392  0170E2  D006               	goto	L2
 22393  0170E4                     l2772:
 22394                           
 22395                           ; BSR set to: 1
 22396                           
 22397                           ; BSR set to: 1
 22398  0170E4  0E00               	movlw	0
 22399  0170E6  6F41               	movwf	___fldiv@a& (0+255),b
 22400  0170E8  0E00               	movlw	0
 22401  0170EA  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 22402  0170EC  0E00               	movlw	0
 22403  0170EE  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 22404  0170F0                     L2:
 22405  0170F0  0E00               	movlw	0
 22406  0170F2  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 22407                           
 22408                           ; BSR set to: 1
 22409                           
 22410                           ; BSR set to: 1
 22411  0170F4  5141               	movf	___fldiv@a& (0+255),w,b
 22412  0170F6  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 22413  0170F8  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 22414  0170FA  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 22415  0170FC  A4D8               	btfss	status,2,c
 22416  0170FE  D015               	goto	l2775
 22417                           
 22418                           ; BSR set to: 1
 22419  017100  0E00               	movlw	0
 22420  017102  6F3D               	movwf	___fldiv@b& (0+255),b
 22421  017104  0E00               	movlw	0
 22422  017106  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22423  017108  0E00               	movlw	0
 22424  01710A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22425  01710C  0E00               	movlw	0
 22426  01710E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22427                           
 22428                           ; BSR set to: 1
 22429  017110  0E80               	movlw	128
 22430  017112  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 22431  017114  0E7F               	movlw	127
 22432  017116  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22433                           
 22434                           ; BSR set to: 1
 22435  017118  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22436  01711C  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22437  017120  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22438  017124  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22439                           
 22440                           ; BSR set to: 1
 22441  017128  0012               	return	
 22442  01712A                     l2775:
 22443                           
 22444                           ; BSR set to: 1
 22445                           
 22446                           ; BSR set to: 1
 22447  01712A  5154               	movf	___fldiv@bexp& (0+255),w,b
 22448  01712C  A4D8               	btfss	status,2,c
 22449  01712E  D011               	goto	l2777
 22450                           
 22451                           ; BSR set to: 1
 22452  017130  0E00               	movlw	0
 22453  017132  6F3D               	movwf	___fldiv@b& (0+255),b
 22454  017134  0E00               	movlw	0
 22455  017136  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22456  017138  0E00               	movlw	0
 22457  01713A  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22458  01713C  0E00               	movlw	0
 22459  01713E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22460                           
 22461                           ; BSR set to: 1
 22462  017140  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22463  017144  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22464  017148  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22465  01714C  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22466                           
 22467                           ; BSR set to: 1
 22468  017150  0012               	return	
 22469  017152                     l2777:
 22470                           
 22471                           ; BSR set to: 1
 22472                           
 22473                           ; BSR set to: 1
 22474  017152  5155               	movf	___fldiv@aexp& (0+255),w,b
 22475  017154  6F45               	movwf	??___fldiv& (0+255),b
 22476  017156  6B46               	clrf	(??___fldiv+1)& (0+255),b
 22477  017158  1F45               	comf	??___fldiv& (0+255),f,b
 22478  01715A  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 22479  01715C  4B45               	infsnz	??___fldiv& (0+255),f,b
 22480  01715E  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 22481  017160  5154               	movf	___fldiv@bexp& (0+255),w,b
 22482  017162  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22483  017164  6B48               	clrf	(??___fldiv+3)& (0+255),b
 22484  017166  5145               	movf	??___fldiv& (0+255),w,b
 22485  017168  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 22486  01716A  5146               	movf	(??___fldiv+1)& (0+255),w,b
 22487  01716C  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 22488  01716E  0E7F               	movlw	127
 22489  017170  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 22490  017172  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 22491  017174  0E00               	movlw	0
 22492  017176  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 22493  017178  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22494                           
 22495                           ; BSR set to: 1
 22496  01717A  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 22497  01717E  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 22498  017182  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 22499  017186  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 22500                           
 22501                           ; BSR set to: 1
 22502  01718A  0E00               	movlw	0
 22503  01718C  6F3D               	movwf	___fldiv@b& (0+255),b
 22504  01718E  0E00               	movlw	0
 22505  017190  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22506  017192  0E00               	movlw	0
 22507  017194  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22508  017196  0E00               	movlw	0
 22509  017198  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22510                           
 22511                           ; BSR set to: 1
 22512  01719A  0E00               	movlw	0
 22513  01719C  6F50               	movwf	___fldiv@grs& (0+255),b
 22514  01719E  0E00               	movlw	0
 22515  0171A0  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 22516  0171A2  0E00               	movlw	0
 22517  0171A4  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 22518  0171A6  0E00               	movlw	0
 22519  0171A8  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 22520                           
 22521                           ; BSR set to: 1
 22522  0171AA  0E00               	movlw	0
 22523  0171AC  6F55               	movwf	___fldiv@aexp& (0+255),b
 22524  0171AE  D028               	goto	l2778
 22525  0171B0                     
 22526                           ; BSR set to: 1
 22527                           
 22528                           ; BSR set to: 1
 22529  0171B0  5155               	movf	___fldiv@aexp& (0+255),w,b
 22530  0171B2  B4D8               	btfsc	status,2,c
 22531  0171B4  D011               	goto	l2780
 22532                           
 22533                           ; BSR set to: 1
 22534  0171B6  90D8               	bcf	status,0,c
 22535  0171B8  374A               	rlcf	___fldiv@rem& (0+255),f,b
 22536  0171BA  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22537  0171BC  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22538  0171BE  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22539  0171C0  90D8               	bcf	status,0,c
 22540  0171C2  373D               	rlcf	___fldiv@b& (0+255),f,b
 22541  0171C4  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22542  0171C6  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22543  0171C8  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22544                           
 22545                           ; BSR set to: 1
 22546  0171CA  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22547                           
 22548                           ; BSR set to: 1
 22549  0171CC  813D               	bsf	___fldiv@b& (0+255),0,b
 22550                           
 22551                           ; BSR set to: 1
 22552  0171CE  90D8               	bcf	status,0,c
 22553  0171D0  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22554  0171D2  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22555  0171D4  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22556  0171D6  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22557  0171D8                     l2780:
 22558                           
 22559                           ; BSR set to: 1
 22560                           
 22561                           ; BSR set to: 1
 22562  0171D8  5141               	movf	___fldiv@a& (0+255),w,b
 22563  0171DA  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 22564  0171DC  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22565  0171DE  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22566  0171E0  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22567  0171E2  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22568  0171E4  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22569  0171E6  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22570  0171E8  A0D8               	btfss	status,0,c
 22571  0171EA  D009               	goto	l2782
 22572                           
 22573                           ; BSR set to: 1
 22574  0171EC  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22575                           
 22576                           ; BSR set to: 1
 22577  0171EE  5141               	movf	___fldiv@a& (0+255),w,b
 22578  0171F0  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 22579  0171F2  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 22580  0171F4  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22581  0171F6  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 22582  0171F8  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22583  0171FA  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 22584  0171FC  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22585  0171FE                     l2782:
 22586                           
 22587                           ; BSR set to: 1
 22588                           
 22589                           ; BSR set to: 1
 22590  0171FE  2B55               	incf	___fldiv@aexp& (0+255),f,b
 22591  017200                     l2778:
 22592                           
 22593                           ; BSR set to: 1
 22594  017200  0E19               	movlw	25
 22595  017202  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 22596  017204  D7D5               	goto	l2779
 22597                           
 22598                           ; BSR set to: 1
 22599                           
 22600                           ; BSR set to: 1
 22601  017206  514A               	movf	___fldiv@rem& (0+255),w,b
 22602  017208  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22603  01720A  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22604  01720C  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22605  01720E  B4D8               	btfsc	status,2,c
 22606  017210  D011               	goto	l2785
 22607                           
 22608                           ; BSR set to: 1
 22609  017212  8150               	bsf	___fldiv@grs& (0+255),0,b
 22610                           
 22611                           ; BSR set to: 1
 22612  017214  D00F               	goto	l2785
 22613  017216                     
 22614                           ; BSR set to: 1
 22615                           
 22616                           ; BSR set to: 1
 22617  017216  90D8               	bcf	status,0,c
 22618  017218  373D               	rlcf	___fldiv@b& (0+255),f,b
 22619  01721A  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22620  01721C  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22621  01721E  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22622                           
 22623                           ; BSR set to: 1
 22624  017220  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22625                           
 22626                           ; BSR set to: 1
 22627  017222  813D               	bsf	___fldiv@b& (0+255),0,b
 22628                           
 22629                           ; BSR set to: 1
 22630  017224  90D8               	bcf	status,0,c
 22631  017226  3750               	rlcf	___fldiv@grs& (0+255),f,b
 22632  017228  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22633  01722A  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22634  01722C  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22635  01722E  074E               	decf	___fldiv@new_exp& (0+255),f,b
 22636  017230  A0D8               	btfss	status,0,c
 22637  017232  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22638  017234                     l2785:
 22639                           
 22640                           ; BSR set to: 1
 22641                           
 22642                           ; BSR set to: 1
 22643  017234  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 22644  017236  D7EF               	goto	l2786
 22645                           
 22646                           ; BSR set to: 1
 22647                           
 22648                           ; BSR set to: 1
 22649  017238  0E00               	movlw	0
 22650  01723A  6F55               	movwf	___fldiv@aexp& (0+255),b
 22651                           
 22652                           ; BSR set to: 1
 22653  01723C  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22654  01723E  D016               	goto	l2792
 22655                           
 22656                           ; BSR set to: 1
 22657  017240  0EFF               	movlw	255
 22658  017242  1550               	andwf	___fldiv@grs& (0+255),w,b
 22659  017244  6F45               	movwf	??___fldiv& (0+255),b
 22660  017246  0EFF               	movlw	255
 22661  017248  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22662  01724A  6F46               	movwf	(??___fldiv+1)& (0+255),b
 22663  01724C  0EFF               	movlw	255
 22664  01724E  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22665  017250  6F47               	movwf	(??___fldiv+2)& (0+255),b
 22666  017252  0E7F               	movlw	127
 22667  017254  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22668  017256  6F48               	movwf	(??___fldiv+3)& (0+255),b
 22669  017258  5145               	movf	??___fldiv& (0+255),w,b
 22670  01725A  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 22671  01725C  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 22672  01725E  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 22673  017260  A4D8               	btfss	status,2,c
 22674  017262  D002               	goto	u21190
 22675                           
 22676                           ; BSR set to: 1
 22677                           
 22678                           ; BSR set to: 1
 22679  017264  A13D               	btfss	___fldiv@b& (0+255),0,b
 22680  017266  D002               	goto	l2792
 22681  017268                     u21190:
 22682                           
 22683                           ; BSR set to: 1
 22684  017268  0E01               	movlw	1
 22685  01726A  6F55               	movwf	___fldiv@aexp& (0+255),b
 22686  01726C                     l2792:
 22687                           
 22688                           ; BSR set to: 1
 22689                           
 22690                           ; BSR set to: 1
 22691                           
 22692                           ; BSR set to: 1
 22693  01726C  5155               	movf	___fldiv@aexp& (0+255),w,b
 22694  01726E  B4D8               	btfsc	status,2,c
 22695  017270  D01F               	goto	l2794
 22696                           
 22697                           ; BSR set to: 1
 22698  017272  0E01               	movlw	1
 22699  017274  273D               	addwf	___fldiv@b& (0+255),f,b
 22700  017276  0E00               	movlw	0
 22701  017278  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 22702  01727A  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 22703  01727C  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 22704                           
 22705                           ; BSR set to: 1
 22706  01727E  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 22707  017280  D017               	goto	l2794
 22708                           
 22709                           ; BSR set to: 1
 22710  017282  C13D  F145         	movff	___fldiv@b,??___fldiv
 22711  017286  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 22712  01728A  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 22713  01728E  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 22714  017292  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 22715  017294  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 22716  017296  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 22717  017298  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 22718  01729A  3345               	rrcf	??___fldiv& (0+255),f,b
 22719  01729C  C145  F13D         	movff	??___fldiv,___fldiv@b
 22720  0172A0  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 22721  0172A4  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 22722  0172A8  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 22723                           
 22724                           ; BSR set to: 1
 22725  0172AC  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 22726  0172AE  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 22727  0172B0                     l2794:
 22728                           
 22729                           ; BSR set to: 1
 22730                           
 22731                           ; BSR set to: 1
 22732                           
 22733                           ; BSR set to: 1
 22734  0172B0  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22735  0172B2  D010               	goto	l2795
 22736  0172B4  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22737  0172B6  E103               	bnz	u21220
 22738  0172B8  294E               	incf	___fldiv@new_exp& (0+255),w,b
 22739  0172BA  A0D8               	btfss	status,0,c
 22740  0172BC  D00B               	goto	l2795
 22741  0172BE                     u21220:
 22742                           
 22743                           ; BSR set to: 1
 22744  0172BE  0E00               	movlw	0
 22745  0172C0  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22746  0172C2  694E               	setf	___fldiv@new_exp& (0+255),b
 22747  0172C4  0E00               	movlw	0
 22748  0172C6  6F3D               	movwf	___fldiv@b& (0+255),b
 22749  0172C8  0E00               	movlw	0
 22750  0172CA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22751  0172CC  0E00               	movlw	0
 22752  0172CE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22753  0172D0  0E00               	movlw	0
 22754  0172D2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22755  0172D4                     l2795:
 22756                           
 22757                           ; BSR set to: 1
 22758                           
 22759                           ; BSR set to: 1
 22760  0172D4  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22761  0172D6  D005               	goto	u21230
 22762  0172D8  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22763  0172DA  E111               	bnz	l16535
 22764  0172DC  054E               	decf	___fldiv@new_exp& (0+255),w,b
 22765  0172DE  B0D8               	btfsc	status,0,c
 22766  0172E0  D00E               	goto	l2796
 22767  0172E2                     u21230:
 22768                           
 22769                           ; BSR set to: 1
 22770  0172E2  0E00               	movlw	0
 22771  0172E4  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22772  0172E6  0E00               	movlw	0
 22773  0172E8  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 22774  0172EA  0E00               	movlw	0
 22775  0172EC  6F3D               	movwf	___fldiv@b& (0+255),b
 22776  0172EE  0E00               	movlw	0
 22777  0172F0  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 22778  0172F2  0E00               	movlw	0
 22779  0172F4  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 22780  0172F6  0E00               	movlw	0
 22781  0172F8  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22782  0172FA  0E00               	movlw	0
 22783  0172FC  6F49               	movwf	___fldiv@sign& (0+255),b
 22784  0172FE                     l2796:
 22785  0172FE                     l16535:
 22786                           
 22787                           ; BSR set to: 1
 22788  0172FE  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 22789                           
 22790                           ; BSR set to: 1
 22791  017302  A154               	btfss	___fldiv@bexp& (0+255),0,b
 22792  017304  D002               	goto	l2797
 22793                           
 22794                           ; BSR set to: 1
 22795  017306  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 22796  017308  D001               	goto	l2798
 22797  01730A                     l2797:
 22798                           
 22799                           ; BSR set to: 1
 22800                           
 22801                           ; BSR set to: 1
 22802  01730A  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 22803  01730C                     l2798:
 22804                           
 22805                           ; BSR set to: 1
 22806                           
 22807                           ; BSR set to: 1
 22808  01730C  90D8               	bcf	status,0,c
 22809  01730E  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 22810  017310  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 22811                           
 22812                           ; BSR set to: 1
 22813  017312  5149               	movf	___fldiv@sign& (0+255),w,b
 22814  017314  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22815                           
 22816                           ; BSR set to: 1
 22817  017316  C13D  F13D         	movff	___fldiv@b,?___fldiv
 22818  01731A  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 22819  01731E  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 22820  017322  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 22821  017326  0012               	return	
 22822  017328                     __end_of___fldiv:
 22823                           	opt stack 0
 22824                           tblptru	equ	0xFF8
 22825                           tblptrh	equ	0xFF7
 22826                           tblptrl	equ	0xFF6
 22827                           tablat	equ	0xFF5
 22828                           prodh	equ	0xFF4
 22829                           prodl	equ	0xFF3
 22830                           intcon	equ	0xFF2
 22831                           indf0	equ	0xFEF
 22832                           postinc0	equ	0xFEE
 22833                           fsr0h	equ	0xFEA
 22834                           fsr0l	equ	0xFE9
 22835                           wreg	equ	0xFE8
 22836                           indf1	equ	0xFE7
 22837                           postdec1	equ	0xFE5
 22838                           plusw1	equ	0xFE3
 22839                           fsr1h	equ	0xFE2
 22840                           fsr1l	equ	0xFE1
 22841                           indf2	equ	0xFDF
 22842                           postinc2	equ	0xFDE
 22843                           postdec2	equ	0xFDD
 22844                           plusw2	equ	0xFDB
 22845                           fsr2h	equ	0xFDA
 22846                           fsr2l	equ	0xFD9
 22847                           status	equ	0xFD8
 22848                           
 22849 ;; *************** function _TMR5_StopTimer *****************
 22850 ;; Defined at:
 22851 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 22852 ;; Parameters:    Size  Location     Type
 22853 ;;		None
 22854 ;; Auto vars:     Size  Location     Type
 22855 ;;		None
 22856 ;; Return value:  Size  Location     Type
 22857 ;;                  1    wreg      void 
 22858 ;; Registers used:
 22859 ;;		None
 22860 ;; Tracked objects:
 22861 ;;		On entry : 0/0
 22862 ;;		On exit  : 0/0
 22863 ;;		Unchanged: 0/0
 22864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22869 ;;Total ram usage:        0 bytes
 22870 ;; Hardware stack levels used:    1
 22871 ;; Hardware stack levels required when called:   13
 22872 ;; This function calls:
 22873 ;;		Nothing
 22874 ;; This function is called by:
 22875 ;;		_main
 22876 ;;		_ringBufferLUT
 22877 ;; This function uses a non-reentrant model
 22878 ;;
 22879                           
 22880                           	psect	text29
 22881  01B276                     __ptext29:
 22882                           	opt stack 0
 22883  01B276                     _TMR5_StopTimer:
 22884                           	opt stack 15
 22885                           
 22886                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 22887                           
 22888                           ; BSR set to: 1
 22889                           ;incstack = 0
 22890  01B276  90C3               	bcf	4035,0,c	;volatile
 22891  01B278  0012               	return		;funcret
 22892  01B27A                     __end_of_TMR5_StopTimer:
 22893                           	opt stack 0
 22894                           tblptru	equ	0xFF8
 22895                           tblptrh	equ	0xFF7
 22896                           tblptrl	equ	0xFF6
 22897                           tablat	equ	0xFF5
 22898                           prodh	equ	0xFF4
 22899                           prodl	equ	0xFF3
 22900                           intcon	equ	0xFF2
 22901                           indf0	equ	0xFEF
 22902                           postinc0	equ	0xFEE
 22903                           fsr0h	equ	0xFEA
 22904                           fsr0l	equ	0xFE9
 22905                           wreg	equ	0xFE8
 22906                           indf1	equ	0xFE7
 22907                           postdec1	equ	0xFE5
 22908                           plusw1	equ	0xFE3
 22909                           fsr1h	equ	0xFE2
 22910                           fsr1l	equ	0xFE1
 22911                           indf2	equ	0xFDF
 22912                           postinc2	equ	0xFDE
 22913                           postdec2	equ	0xFDD
 22914                           plusw2	equ	0xFDB
 22915                           fsr2h	equ	0xFDA
 22916                           fsr2l	equ	0xFD9
 22917                           status	equ	0xFD8
 22918                           
 22919 ;; *************** function _EUSART2_Read *****************
 22920 ;; Defined at:
 22921 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 22922 ;; Parameters:    Size  Location     Type
 22923 ;;		None
 22924 ;; Auto vars:     Size  Location     Type
 22925 ;;  readValue       1   23[BANK1 ] unsigned char 
 22926 ;; Return value:  Size  Location     Type
 22927 ;;                  1    wreg      unsigned char 
 22928 ;; Registers used:
 22929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22930 ;; Tracked objects:
 22931 ;;		On entry : 0/0
 22932 ;;		On exit  : 0/0
 22933 ;;		Unchanged: 0/0
 22934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22936 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22938 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22939 ;;Total ram usage:        1 bytes
 22940 ;; Hardware stack levels used:    1
 22941 ;; Hardware stack levels required when called:   13
 22942 ;; This function calls:
 22943 ;;		Nothing
 22944 ;; This function is called by:
 22945 ;;		_terminal_ringBufferPull
 22946 ;;		_getch
 22947 ;; This function uses a non-reentrant model
 22948 ;;
 22949                           
 22950                           	psect	text30
 22951  01A5C8                     __ptext30:
 22952                           	opt stack 0
 22953  01A5C8                     _EUSART2_Read:
 22954                           	opt stack 16
 22955                           
 22956                           ;eusart2.c: 136: uint8_t readValue = 0;
 22957                           
 22958                           ;incstack = 0
 22959  01A5C8  0E00               	movlw	0
 22960  01A5CA  0101               	movlb	1	; () banked
 22961  01A5CC  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 22962                           
 22963                           ;eusart2.c: 138: while(0 == eusart2RxCount)
 22964  01A5CE  D004               	goto	l423
 22965  01A5D0                     l424:
 22966                           
 22967                           ; BSR set to: 2
 22968  01A5D0  0004               	clrwdt		;# 
 22969                           
 22970                           ;eusart2.c: 141: error_handler.USB_UART_COMM_error_flag = 1;
 22971  01A5D2  0E01               	movlw	1
 22972  01A5D4  0102               	movlb	2	; () banked
 22973  01A5D6  6F08               	movwf	(_error_handler+8)& (0+255),b
 22974  01A5D8                     l423:
 22975  01A5D8  0102               	movlb	2	; () banked
 22976  01A5DA  5172               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 22977  01A5DC  B4D8               	btfsc	status,2,c
 22978  01A5DE  D7F8               	goto	l424
 22979                           
 22980                           ; BSR set to: 2
 22981                           ;eusart2.c: 142: }
 22982                           ;eusart2.c: 144: readValue = eusart2RxBuffer[eusart2RxTail++];
 22983                           
 22984                           ; BSR set to: 2
 22985  01A5E0  0101               	movlb	1	; () banked
 22986  01A5E2  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 22987  01A5E4  0D01               	mullw	1
 22988  01A5E6  0E00               	movlw	low _eusart2RxBuffer
 22989  01A5E8  24F3               	addwf	prodl,w,c
 22990  01A5EA  6ED9               	movwf	fsr2l,c
 22991  01A5EC  0E03               	movlw	high _eusart2RxBuffer
 22992  01A5EE  20F4               	addwfc	prodh,w,c
 22993  01A5F0  6EDA               	movwf	fsr2h,c
 22994  01A5F2  50DF               	movf	indf2,w,c
 22995  01A5F4  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 22996                           
 22997                           ; BSR set to: 1
 22998  01A5F6  2BDE               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 22999                           
 23000                           ; BSR set to: 1
 23001                           ;eusart2.c: 145: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 23002  01A5F8  0E3F               	movlw	63
 23003  01A5FA  65DE               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 23004  01A5FC  D002               	goto	l426
 23005                           
 23006                           ; BSR set to: 1
 23007                           ;eusart2.c: 146: {
 23008                           ;eusart2.c: 147: eusart2RxTail = 0;
 23009  01A5FE  0E00               	movlw	0
 23010  01A600  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 23011  01A602                     l426:
 23012                           
 23013                           ; BSR set to: 1
 23014                           ;eusart2.c: 148: }
 23015                           ;eusart2.c: 149: PIE3bits.RC2IE = 0;
 23016                           
 23017                           ; BSR set to: 1
 23018  01A602  010E               	movlb	14	; () banked
 23019  01A604  9F2C               	bcf	44,7,b	;volatile
 23020                           
 23021                           ; BSR set to: 14
 23022                           ;eusart2.c: 150: eusart2RxCount--;
 23023  01A606  0102               	movlb	2	; () banked
 23024  01A608  0772               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 23025                           
 23026                           ; BSR set to: 2
 23027                           ;eusart2.c: 151: PIE3bits.RC2IE = 1;
 23028  01A60A  010E               	movlb	14	; () banked
 23029  01A60C  8F2C               	bsf	44,7,b	;volatile
 23030                           
 23031                           ; BSR set to: 14
 23032                           ;eusart2.c: 152: return readValue;
 23033  01A60E  0101               	movlb	1	; () banked
 23034  01A610  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 23035  01A612  0012               	return	
 23036  01A614                     __end_of_EUSART2_Read:
 23037                           	opt stack 0
 23038                           tblptru	equ	0xFF8
 23039                           tblptrh	equ	0xFF7
 23040                           tblptrl	equ	0xFF6
 23041                           tablat	equ	0xFF5
 23042                           prodh	equ	0xFF4
 23043                           prodl	equ	0xFF3
 23044                           intcon	equ	0xFF2
 23045                           indf0	equ	0xFEF
 23046                           postinc0	equ	0xFEE
 23047                           fsr0h	equ	0xFEA
 23048                           fsr0l	equ	0xFE9
 23049                           wreg	equ	0xFE8
 23050                           indf1	equ	0xFE7
 23051                           postdec1	equ	0xFE5
 23052                           plusw1	equ	0xFE3
 23053                           fsr1h	equ	0xFE2
 23054                           fsr1l	equ	0xFE1
 23055                           indf2	equ	0xFDF
 23056                           postinc2	equ	0xFDE
 23057                           postdec2	equ	0xFDD
 23058                           plusw2	equ	0xFDB
 23059                           fsr2h	equ	0xFDA
 23060                           fsr2l	equ	0xFD9
 23061                           status	equ	0xFD8
 23062                           
 23063 ;; *************** function _terminal_clearTerminal *****************
 23064 ;; Defined at:
 23065 ;;		line 80 in file "ring_buffer_interface.c"
 23066 ;; Parameters:    Size  Location     Type
 23067 ;;		None
 23068 ;; Auto vars:     Size  Location     Type
 23069 ;;		None
 23070 ;; Return value:  Size  Location     Type
 23071 ;;                  1    wreg      void 
 23072 ;; Registers used:
 23073 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23074 ;; Tracked objects:
 23075 ;;		On entry : 0/0
 23076 ;;		On exit  : 0/0
 23077 ;;		Unchanged: 0/0
 23078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23083 ;;Total ram usage:        0 bytes
 23084 ;; Hardware stack levels used:    1
 23085 ;; Hardware stack levels required when called:   17
 23086 ;; This function calls:
 23087 ;;		_printf
 23088 ;; This function is called by:
 23089 ;;		_main
 23090 ;; This function uses a non-reentrant model
 23091 ;;
 23092                           
 23093                           	psect	text31
 23094  01B172                     __ptext31:
 23095                           	opt stack 0
 23096  01B172                     _terminal_clearTerminal:
 23097                           	opt stack 13
 23098                           
 23099                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 23100                           
 23101                           ; BSR set to: 1
 23102                           ;incstack = 0
 23103  01B172  0EB2               	movlw	low STR_6
 23104  01B174  0101               	movlb	1	; () banked
 23105  01B176  6FAC               	movwf	printf@f& (0+255),b
 23106  01B178  0EFF               	movlw	high STR_6
 23107  01B17A  6FAD               	movwf	(printf@f+1)& (0+255),b
 23108  01B17C  ECC6  F0D4         	call	_printf	;wreg free
 23109  01B180  0012               	return		;funcret
 23110  01B182                     __end_of_terminal_clearTerminal:
 23111                           	opt stack 0
 23112                           tblptru	equ	0xFF8
 23113                           tblptrh	equ	0xFF7
 23114                           tblptrl	equ	0xFF6
 23115                           tablat	equ	0xFF5
 23116                           prodh	equ	0xFF4
 23117                           prodl	equ	0xFF3
 23118                           intcon	equ	0xFF2
 23119                           indf0	equ	0xFEF
 23120                           postinc0	equ	0xFEE
 23121                           fsr0h	equ	0xFEA
 23122                           fsr0l	equ	0xFE9
 23123                           wreg	equ	0xFE8
 23124                           indf1	equ	0xFE7
 23125                           postdec1	equ	0xFE5
 23126                           plusw1	equ	0xFE3
 23127                           fsr1h	equ	0xFE2
 23128                           fsr1l	equ	0xFE1
 23129                           indf2	equ	0xFDF
 23130                           postinc2	equ	0xFDE
 23131                           postdec2	equ	0xFDD
 23132                           plusw2	equ	0xFDB
 23133                           fsr2h	equ	0xFDA
 23134                           fsr2l	equ	0xFD9
 23135                           status	equ	0xFD8
 23136                           
 23137 ;; *************** function _printf *****************
 23138 ;; Defined at:
 23139 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 23140 ;; Parameters:    Size  Location     Type
 23141 ;;  f               2  172[BANK1 ] PTR const unsigned char 
 23142 ;;		 -> STR_175(13), STR_174(31), STR_173(26), STR_172(28), 
 23143 ;;		 -> STR_171(426), STR_169(30), STR_168(46), STR_167(39), 
 23144 ;;		 -> STR_166(62), STR_165(55), STR_164(470), STR_162(3086), 
 23145 ;;		 -> STR_160(492), STR_158(748), STR_156(720), STR_154(974), 
 23146 ;;		 -> STR_152(54), STR_150(54), STR_148(45), STR_146(51), 
 23147 ;;		 -> STR_144(52), STR_142(46), STR_140(51), STR_138(53), 
 23148 ;;		 -> STR_136(58), STR_134(71), STR_133(63), STR_132(37), 
 23149 ;;		 -> STR_131(46), STR_130(102), STR_129(86), STR_127(25), 
 23150 ;;		 -> STR_125(42), STR_124(53), STR_123(31), STR_121(29), 
 23151 ;;		 -> STR_120(28), STR_118(42), STR_116(41), STR_114(34), 
 23152 ;;		 -> STR_112(53), STR_111(52), STR_110(105), STR_109(105), 
 23153 ;;		 -> STR_107(59), STR_105(73), STR_103(56), STR_101(34), 
 23154 ;;		 -> STR_99(34), STR_97(32), STR_95(37), STR_93(58), 
 23155 ;;		 -> STR_91(36), STR_89(36), STR_87(37), STR_85(34), 
 23156 ;;		 -> STR_83(38), STR_82(60), STR_81(31), STR_80(23), 
 23157 ;;		 -> STR_79(65), STR_77(23), STR_75(27), STR_74(48), 
 23158 ;;		 -> STR_73(15), STR_72(13), STR_71(12), STR_70(11), 
 23159 ;;		 -> STR_69(10), STR_68(11), STR_67(24), STR_66(46), 
 23160 ;;		 -> STR_65(25), STR_63(54), STR_62(64), STR_60(59), 
 23161 ;;		 -> STR_58(85), STR_56(47), STR_55(17), STR_52(52), 
 23162 ;;		 -> STR_50(4), STR_49(5), STR_47(4), STR_46(5), 
 23163 ;;		 -> STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), STR_13(4), 
 23164 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(3), 
 23165 ;;		 -> STR_8(372), STR_7(4), STR_6(5), STR_1(4), 
 23166 ;; Auto vars:     Size  Location     Type
 23167 ;;  pb              5  184[BANK1 ] struct __prbuf
 23168 ;;  ap              2  182[BANK1 ] PTR void [1]
 23169 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 23170 ;; Return value:  Size  Location     Type
 23171 ;;                  2  172[BANK1 ] int 
 23172 ;; Registers used:
 23173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23174 ;; Tracked objects:
 23175 ;;		On entry : 0/0
 23176 ;;		On exit  : 0/0
 23177 ;;		Unchanged: 0/0
 23178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23179 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23180 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23182 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23183 ;;Total ram usage:       17 bytes
 23184 ;; Hardware stack levels used:    1
 23185 ;; Hardware stack levels required when called:   16
 23186 ;; This function calls:
 23187 ;;		__doprnt
 23188 ;; This function is called by:
 23189 ;;		_terminal_clearTerminal
 23190 ;;		_terminal_setCursorHome
 23191 ;;		_terminal_textAttributes
 23192 ;;		_terminal_printNewline
 23193 ;;		_ringBufferLUT
 23194 ;;		_terminal_printResetMessage
 23195 ;;		_terminal_clearLine
 23196 ;;		_terminal_saveCursor
 23197 ;;		_terminal_returnCursor
 23198 ;; This function uses a non-reentrant model
 23199 ;;
 23200                           
 23201                           	psect	text32
 23202  01A98C                     __ptext32:
 23203                           	opt stack 0
 23204  01A98C                     _printf:
 23205                           	opt stack 12
 23206                           
 23207                           ;incstack = 0
 23208  01A98C  0E00               	movlw	0
 23209  01A98E  0101               	movlb	1	; () banked
 23210  01A990  6FB8               	movwf	printf@pb& (0+255),b
 23211  01A992  0E00               	movlw	0
 23212  01A994  6FB9               	movwf	(printf@pb+1)& (0+255),b
 23213  01A996  0EF2               	movlw	low _putch
 23214  01A998  6FBA               	movwf	(printf@pb+2)& (0+255),b
 23215  01A99A  0EB0               	movlw	high _putch
 23216  01A99C  6FBB               	movwf	(printf@pb+3)& (0+255),b
 23217  01A99E  0E01               	movlw	low (_putch shr (0+16))
 23218  01A9A0  6FBC               	movwf	(printf@pb+4)& (0+255),b
 23219  01A9A2  0EAE               	movlw	low (?_printf+2)
 23220  01A9A4  6FB6               	movwf	printf@ap& (0+255),b
 23221  01A9A6  0E01               	movlw	high (?_printf+2)
 23222  01A9A8  6FB7               	movwf	(printf@ap+1)& (0+255),b
 23223                           
 23224                           ; BSR set to: 1
 23225                           ;	Return value of _printf is never used
 23226  01A9AA  0EB8               	movlw	low printf@pb
 23227  01A9AC  6F82               	movwf	__doprnt@pb& (0+255),b
 23228  01A9AE  0E01               	movlw	high printf@pb
 23229  01A9B0  6F83               	movwf	(__doprnt@pb+1)& (0+255),b
 23230  01A9B2  C1AC  F184         	movff	printf@f,__doprnt@f
 23231  01A9B6  C1AD  F185         	movff	printf@f+1,__doprnt@f+1
 23232  01A9BA  0EB6               	movlw	low printf@ap
 23233  01A9BC  6F86               	movwf	__doprnt@ap& (0+255),b
 23234  01A9BE  0E01               	movlw	high printf@ap
 23235  01A9C0  6F87               	movwf	(__doprnt@ap+1)& (0+255),b
 23236  01A9C2  EC33  F08B         	call	__doprnt	;wreg free
 23237  01A9C6  0012               	return	
 23238  01A9C8                     __end_of_printf:
 23239                           	opt stack 0
 23240                           tblptru	equ	0xFF8
 23241                           tblptrh	equ	0xFF7
 23242                           tblptrl	equ	0xFF6
 23243                           tablat	equ	0xFF5
 23244                           prodh	equ	0xFF4
 23245                           prodl	equ	0xFF3
 23246                           intcon	equ	0xFF2
 23247                           indf0	equ	0xFEF
 23248                           postinc0	equ	0xFEE
 23249                           fsr0h	equ	0xFEA
 23250                           fsr0l	equ	0xFE9
 23251                           wreg	equ	0xFE8
 23252                           indf1	equ	0xFE7
 23253                           postdec1	equ	0xFE5
 23254                           plusw1	equ	0xFE3
 23255                           fsr1h	equ	0xFE2
 23256                           fsr1l	equ	0xFE1
 23257                           indf2	equ	0xFDF
 23258                           postinc2	equ	0xFDE
 23259                           postdec2	equ	0xFDD
 23260                           plusw2	equ	0xFDB
 23261                           fsr2h	equ	0xFDA
 23262                           fsr2l	equ	0xFD9
 23263                           status	equ	0xFD8
 23264                           
 23265 ;; *************** function __doprnt *****************
 23266 ;; Defined at:
 23267 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23268 ;; Parameters:    Size  Location     Type
 23269 ;;  pb              2  130[BANK1 ] PTR struct __prbuf
 23270 ;;		 -> sprintf@pb(5), printf@pb(5), 
 23271 ;;  f               2  132[BANK1 ] PTR const unsigned char 
 23272 ;;		 -> STR_193(11), STR_175(13), STR_174(31), STR_173(26), 
 23273 ;;		 -> STR_172(28), STR_171(426), STR_169(30), STR_168(46), 
 23274 ;;		 -> STR_167(39), STR_166(62), STR_165(55), STR_164(470), 
 23275 ;;		 -> STR_162(3086), STR_160(492), STR_158(748), STR_156(720), 
 23276 ;;		 -> STR_154(974), STR_152(54), STR_150(54), STR_148(45), 
 23277 ;;		 -> STR_146(51), STR_144(52), STR_142(46), STR_140(51), 
 23278 ;;		 -> STR_138(53), STR_136(58), STR_134(71), STR_133(63), 
 23279 ;;		 -> STR_132(37), STR_131(46), STR_130(102), STR_129(86), 
 23280 ;;		 -> STR_127(25), STR_125(42), STR_124(53), STR_123(31), 
 23281 ;;		 -> STR_121(29), STR_120(28), STR_118(42), STR_116(41), 
 23282 ;;		 -> STR_114(34), STR_112(53), STR_111(52), STR_110(105), 
 23283 ;;		 -> STR_109(105), STR_107(59), STR_105(73), STR_103(56), 
 23284 ;;		 -> STR_101(34), STR_99(34), STR_97(32), STR_95(37), 
 23285 ;;		 -> STR_93(58), STR_91(36), STR_89(36), STR_87(37), 
 23286 ;;		 -> STR_85(34), STR_83(38), STR_82(60), STR_81(31), 
 23287 ;;		 -> STR_80(23), STR_79(65), STR_77(23), STR_75(27), 
 23288 ;;		 -> STR_74(48), STR_73(15), STR_72(13), STR_71(12), 
 23289 ;;		 -> STR_70(11), STR_69(10), STR_68(11), STR_67(24), 
 23290 ;;		 -> STR_66(46), STR_65(25), STR_63(54), STR_62(64), 
 23291 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 23292 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 23293 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 23294 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 23295 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 23296 ;;		 -> STR_1(4), 
 23297 ;;  ap              2  134[BANK1 ] PTR PTR void 
 23298 ;;		 -> sprintf@ap(2), printf@ap(2), 
 23299 ;; Auto vars:     Size  Location     Type
 23300 ;;  idx             1  146[BANK1 ] unsigned char 
 23301 ;;  val             4  161[BANK1 ] unsigned long 
 23302 ;;  fval            4  157[BANK1 ] unsigned long 
 23303 ;;  tmpval          4  153[BANK1 ] struct .
 23304 ;;  prec            2  169[BANK1 ] int 
 23305 ;;  flag            2  167[BANK1 ] unsigned short 
 23306 ;;  width           2  165[BANK1 ] int 
 23307 ;;  exp             2  151[BANK1 ] int 
 23308 ;;  len             2  149[BANK1 ] unsigned int 
 23309 ;;  cp              2  147[BANK1 ] PTR const unsigned char 
 23310 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_191(7), 
 23311 ;;		 -> _doprnt@c(1), STR_188(16), STR_187(22), STR_186(21), 
 23312 ;;		 -> STR_185(27), STR_184(41), STR_183(32), STR_182(19), 
 23313 ;;		 -> STR_181(16), STR_180(15), STR_179(16), STR_178(10), 
 23314 ;;		 -> STR_177(13), STR_176(12), NULL(0), TRIAC_Firing_Angle(4), 
 23315 ;;  c               1  171[BANK1 ] char 
 23316 ;;  d               1    0        unsigned char 
 23317 ;; Return value:  Size  Location     Type
 23318 ;;                  2  130[BANK1 ] int 
 23319 ;; Registers used:
 23320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23321 ;; Tracked objects:
 23322 ;;		On entry : 0/0
 23323 ;;		On exit  : 0/0
 23324 ;;		Unchanged: 0/0
 23325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23326 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23327 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23328 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23329 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23330 ;;Total ram usage:       42 bytes
 23331 ;; Hardware stack levels used:    1
 23332 ;; Hardware stack levels required when called:   15
 23333 ;; This function calls:
 23334 ;;		Absolute function
 23335 ;;		___awdiv
 23336 ;;		___fladd
 23337 ;;		___flge
 23338 ;;		___flmul
 23339 ;;		___flneg
 23340 ;;		___flsub
 23341 ;;		___fltol
 23342 ;;		___lldiv
 23343 ;;		___llmod
 23344 ;;		___wmul
 23345 ;;		___xxtofl
 23346 ;;		__div_to_l_
 23347 ;;		__tdiv_to_l_
 23348 ;;		_fround
 23349 ;;		_isdigit
 23350 ;;		_putch
 23351 ;;		_scale
 23352 ;; This function is called by:
 23353 ;;		_printf
 23354 ;; This function uses a non-reentrant model
 23355 ;;
 23356                           
 23357                           	psect	text33
 23358  011666                     __ptext33:
 23359                           	opt stack 0
 23360  011666                     __doprnt:
 23361                           	opt stack 12
 23362                           
 23363                           ;doprnt.c: 499: signed char c;
 23364                           ;doprnt.c: 501: int width;
 23365                           ;doprnt.c: 504: int prec;
 23366                           ;doprnt.c: 508: unsigned short flag;
 23367                           ;doprnt.c: 515: char d;
 23368                           ;doprnt.c: 516: double fval;
 23369                           ;doprnt.c: 517: int exp;
 23370                           ;doprnt.c: 523: union {
 23371                           ;doprnt.c: 524: unsigned long vd;
 23372                           ;doprnt.c: 525: double integ;
 23373                           ;doprnt.c: 526: } tmpval;
 23374                           ;doprnt.c: 528: unsigned long val;
 23375                           ;doprnt.c: 529: unsigned len;
 23376                           ;doprnt.c: 530: const char * cp;
 23377                           ;doprnt.c: 536: while(c = *f++) {
 23378                           
 23379                           ;incstack = 0
 23380  011666  EF97  F095         	goto	u32160
 23381  01166A                     
 23382                           ;doprnt.c: 538: if(c != '%')
 23383  01166A  0E25               	movlw	37
 23384  01166C  0101               	movlb	1	; () banked
 23385  01166E  19AB               	xorwf	__doprnt@c& (0+255),w,b
 23386  011670  B4D8               	btfsc	status,2,c
 23387  011672  D036               	goto	l1941
 23388                           
 23389                           ; BSR set to: 1
 23390                           ;doprnt.c: 540: {
 23391                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 23392  011674  EE20 F002          	lfsr	2,2
 23393  011678  5182               	movf	__doprnt@pb& (0+255),w,b
 23394  01167A  26D9               	addwf	fsr2l,f,c
 23395  01167C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23396  01167E  22DA               	addwfc	fsr2h,f,c
 23397  011680  50DE               	movf	postinc2,w,c
 23398  011682  10DE               	iorwf	postinc2,w,c
 23399  011684  10DE               	iorwf	postinc2,w,c
 23400  011686  B4D8               	btfsc	status,2,c
 23401  011688  D014               	goto	l1942
 23402                           
 23403                           ; BSR set to: 1
 23404  01168A  EE20 F002          	lfsr	2,2
 23405  01168E  5182               	movf	__doprnt@pb& (0+255),w,b
 23406  011690  26D9               	addwf	fsr2l,f,c
 23407  011692  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23408  011694  22DA               	addwfc	fsr2h,f,c
 23409  011696  D802               	call	u31068
 23410  011698  EF97  F095         	goto	u32160
 23411  01169C                     u31068:
 23412  01169C  0005               	push	
 23413  01169E  6EFA               	movwf	pclath,c
 23414  0116A0  50DE               	movf	postinc2,w,c
 23415  0116A2  6EFD               	movwf	tosl,c
 23416  0116A4  50DE               	movf	postinc2,w,c
 23417  0116A6  6EFE               	movwf	tosh,c
 23418  0116A8  50DE               	movf	postinc2,w,c
 23419  0116AA  6EFF               	movwf	tosu,c
 23420  0116AC  50FA               	movf	pclath,w,c
 23421  0116AE  51AB               	movf	__doprnt@c& (0+255),w,b
 23422  0116B0  0012               	return		;indir
 23423  0116B2                     l1942:
 23424  0116B2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23425  0116B6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23426  0116BA  CFDE F188          	movff	postinc2,??__doprnt
 23427  0116BE  CFDD F189          	movff	postdec2,??__doprnt+1
 23428  0116C2  C188  FFD9         	movff	??__doprnt,fsr2l
 23429  0116C6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23430  0116CA  C1AB  FFDF         	movff	__doprnt@c,indf2
 23431  0116CE  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23432  0116D2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23433  0116D6  2ADE               	incf	postinc2,f,c
 23434  0116D8  0E00               	movlw	0
 23435  0116DA  22DD               	addwfc	postdec2,f,c
 23436                           
 23437                           ;doprnt.c: 542: continue;
 23438  0116DC  EF97  F095         	goto	u32160
 23439  0116E0                     l1941:
 23440                           
 23441                           ;doprnt.c: 543: }
 23442                           ;doprnt.c: 546: width = 0;
 23443  0116E0  0E00               	movlw	0
 23444  0116E2  0101               	movlb	1	; () banked
 23445  0116E4  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23446  0116E6  0E00               	movlw	0
 23447  0116E8  6FA5               	movwf	__doprnt@width& (0+255),b
 23448                           
 23449                           ;doprnt.c: 548: flag = 0;
 23450  0116EA  0E00               	movlw	0
 23451  0116EC  6FA8               	movwf	(__doprnt@flag+1)& (0+255),b
 23452  0116EE  0E00               	movlw	0
 23453  0116F0  6FA7               	movwf	__doprnt@flag& (0+255),b
 23454                           
 23455                           ; BSR set to: 1
 23456                           ;doprnt.c: 551: switch(*f) {
 23457                           
 23458                           ;doprnt.c: 550: for(;;) {
 23459  0116F2  D004               	goto	l1945
 23460  0116F4                     
 23461                           ;doprnt.c: 580: flag |= 0x04;
 23462                           
 23463                           ; BSR set to: 1
 23464  0116F4  0101               	movlb	1	; () banked
 23465  0116F6  85A7               	bsf	__doprnt@flag& (0+255),2,b
 23466                           
 23467                           ;doprnt.c: 581: f++;
 23468  0116F8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23469  0116FA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23470  0116FC                     l1945:
 23471                           
 23472                           ; BSR set to: 1
 23473  0116FC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23474  011700  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23475  011704  0E00               	movlw	low (__mediumconst shr (0+16))
 23476  011706  6EF8               	movwf	tblptru,c
 23477  011708  0E0D               	movlw	(high __ramtop+-1)
 23478  01170A  64F7               	cpfsgt	tblptrh,c
 23479  01170C  D003               	bra	u31077
 23480  01170E  0008               	tblrd		*
 23481  011710  50F5               	movf	tablat,w,c
 23482  011712  D005               	bra	u31070
 23483  011714                     u31077:
 23484  011714  CFF6 FFE9          	movff	tblptrl,fsr0l
 23485  011718  CFF7 FFEA          	movff	tblptrh,fsr0h
 23486  01171C  50EF               	movf	indf0,w,c
 23487  01171E                     u31070:
 23488                           
 23489                           ; Switch size 1, requested type "space"
 23490                           ; Number of cases is 1, Range of values is 48 to 48
 23491                           ; switch strategies available:
 23492                           ; Name         Instructions Cycles
 23493                           ; simple_byte            4     3 (average)
 23494                           ;	Chosen strategy is simple_byte
 23495  01171E  0A30               	xorlw	48	; case 48
 23496  011720  B4D8               	btfsc	status,2,c
 23497  011722  D7E8               	goto	l1946
 23498                           
 23499                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 23500                           
 23501                           ;doprnt.c: 586: }
 23502                           
 23503                           ;doprnt.c: 585: break;
 23504  011724  C184  FFF6         	movff	__doprnt@f,tblptrl
 23505  011728  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23506  01172C  0E00               	movlw	low (__mediumconst shr (0+16))
 23507  01172E  6EF8               	movwf	tblptru,c
 23508  011730  0E0D               	movlw	(high __ramtop+-1)
 23509  011732  64F7               	cpfsgt	tblptrh,c
 23510  011734  D003               	bra	u31087
 23511  011736  0008               	tblrd		*
 23512  011738  50F5               	movf	tablat,w,c
 23513  01173A  D005               	bra	u31080
 23514  01173C                     u31087:
 23515  01173C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23516  011740  CFF7 FFEA          	movff	tblptrh,fsr0h
 23517  011744  50EF               	movf	indf0,w,c
 23518  011746                     u31080:
 23519  011746  ECAC  F0D7         	call	_isdigit
 23520  01174A  A0D8               	btfss	status,0,c
 23521  01174C  D04C               	goto	u31120
 23522                           
 23523                           ;doprnt.c: 598: width = 0;
 23524  01174E  0E00               	movlw	0
 23525  011750  0101               	movlb	1	; () banked
 23526  011752  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23527  011754  0E00               	movlw	0
 23528  011756  6FA5               	movwf	__doprnt@width& (0+255),b
 23529  011758                     
 23530                           ;doprnt.c: 600: width *= 10;
 23531                           
 23532                           ; BSR set to: 1
 23533  011758  C1A5  F117         	movff	__doprnt@width,___wmul@multiplier
 23534  01175C  C1A6  F118         	movff	__doprnt@width+1,___wmul@multiplier+1
 23535  011760  0E00               	movlw	0
 23536  011762  0101               	movlb	1	; () banked
 23537  011764  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23538  011766  0E0A               	movlw	10
 23539  011768  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23540  01176A  ECDC  F0D6         	call	___wmul	;wreg free
 23541  01176E  C117  F1A5         	movff	?___wmul,__doprnt@width
 23542  011772  C118  F1A6         	movff	?___wmul+1,__doprnt@width+1
 23543                           
 23544                           ;doprnt.c: 601: width += *f++ - '0';
 23545  011776  0ED0               	movlw	208
 23546  011778  0101               	movlb	1	; () banked
 23547  01177A  6F88               	movwf	??__doprnt& (0+255),b
 23548  01177C  0EFF               	movlw	255
 23549  01177E  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23550  011780  C184  FFF6         	movff	__doprnt@f,tblptrl
 23551  011784  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23552  011788  0E00               	movlw	low (__mediumconst shr (0+16))
 23553  01178A  6EF8               	movwf	tblptru,c
 23554  01178C  0E0D               	movlw	(high __ramtop+-1)
 23555  01178E  64F7               	cpfsgt	tblptrh,c
 23556  011790  D003               	bra	u31107
 23557  011792  0008               	tblrd		*
 23558  011794  50F5               	movf	tablat,w,c
 23559  011796  D005               	bra	u31100
 23560  011798                     u31107:
 23561  011798  CFF6 FFE9          	movff	tblptrl,fsr0l
 23562  01179C  CFF7 FFEA          	movff	tblptrh,fsr0h
 23563  0117A0  50EF               	movf	indf0,w,c
 23564  0117A2                     u31100:
 23565  0117A2  0101               	movlb	1	; () banked
 23566  0117A4  6F8A               	movwf	(??__doprnt+2)& (0+255),b
 23567  0117A6  6B8B               	clrf	(??__doprnt+3)& (0+255),b
 23568  0117A8  5188               	movf	??__doprnt& (0+255),w,b
 23569  0117AA  278A               	addwf	(??__doprnt+2)& (0+255),f,b
 23570  0117AC  5189               	movf	(??__doprnt+1)& (0+255),w,b
 23571  0117AE  238B               	addwfc	(??__doprnt+3)& (0+255),f,b
 23572  0117B0  518A               	movf	(??__doprnt+2)& (0+255),w,b
 23573  0117B2  27A5               	addwf	__doprnt@width& (0+255),f,b
 23574  0117B4  518B               	movf	(??__doprnt+3)& (0+255),w,b
 23575  0117B6  23A6               	addwfc	(__doprnt@width+1)& (0+255),f,b
 23576                           
 23577                           ; BSR set to: 1
 23578  0117B8  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23579  0117BA  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23580                           
 23581                           ; BSR set to: 1
 23582                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 23583  0117BC  C184  FFF6         	movff	__doprnt@f,tblptrl
 23584  0117C0  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23585  0117C4  0E00               	movlw	low (__mediumconst shr (0+16))
 23586  0117C6  6EF8               	movwf	tblptru,c
 23587  0117C8  0E0D               	movlw	(high __ramtop+-1)
 23588  0117CA  64F7               	cpfsgt	tblptrh,c
 23589  0117CC  D003               	bra	u31117
 23590  0117CE  0008               	tblrd		*
 23591  0117D0  50F5               	movf	tablat,w,c
 23592  0117D2  D005               	bra	u31110
 23593  0117D4                     u31117:
 23594  0117D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 23595  0117D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 23596  0117DC  50EF               	movf	indf0,w,c
 23597  0117DE                     u31110:
 23598  0117DE  ECAC  F0D7         	call	_isdigit
 23599  0117E2  B0D8               	btfsc	status,0,c
 23600  0117E4  D7B9               	goto	l1951
 23601  0117E6                     u31120:
 23602                           
 23603                           ;doprnt.c: 608: }
 23604                           ;doprnt.c: 611: if(*f == '.') {
 23605  0117E6  C184  FFF6         	movff	__doprnt@f,tblptrl
 23606  0117EA  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23607  0117EE  0E00               	movlw	low (__mediumconst shr (0+16))
 23608  0117F0  6EF8               	movwf	tblptru,c
 23609  0117F2  0E0D               	movlw	(high __ramtop+-1)
 23610  0117F4  64F7               	cpfsgt	tblptrh,c
 23611  0117F6  D003               	bra	u31137
 23612  0117F8  0008               	tblrd		*
 23613  0117FA  50F5               	movf	tablat,w,c
 23614  0117FC  D005               	bra	u31130
 23615  0117FE                     u31137:
 23616  0117FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 23617  011802  CFF7 FFEA          	movff	tblptrh,fsr0h
 23618  011806  50EF               	movf	indf0,w,c
 23619  011808                     u31130:
 23620  011808  0A2E               	xorlw	46
 23621  01180A  A4D8               	btfss	status,2,c
 23622  01180C  D049               	goto	l1953
 23623                           
 23624                           ;doprnt.c: 612: flag |= 0x4000;
 23625  01180E  0101               	movlb	1	; () banked
 23626  011810  8DA8               	bsf	(__doprnt@flag+1)& (0+255),6,b
 23627                           
 23628                           ;doprnt.c: 613: f++;
 23629  011812  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23630  011814  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23631                           
 23632                           ; BSR set to: 1
 23633                           ;doprnt.c: 620: {
 23634                           ;doprnt.c: 621: prec = 0;
 23635  011816  0E00               	movlw	0
 23636  011818  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23637  01181A  0E00               	movlw	0
 23638  01181C  6FA9               	movwf	__doprnt@prec& (0+255),b
 23639                           
 23640                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 23641  01181E  D02A               	goto	l1954
 23642  011820                     
 23643                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 23644                           
 23645                           ; BSR set to: 1
 23646  011820  C1A9  F117         	movff	__doprnt@prec,___wmul@multiplier
 23647  011824  C1AA  F118         	movff	__doprnt@prec+1,___wmul@multiplier+1
 23648  011828  0E00               	movlw	0
 23649  01182A  0101               	movlb	1	; () banked
 23650  01182C  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23651  01182E  0E0A               	movlw	10
 23652  011830  6F19               	movwf	___wmul@multiplicand& (0+255),b
 23653  011832  ECDC  F0D6         	call	___wmul	;wreg free
 23654  011836  C184  FFF6         	movff	__doprnt@f,tblptrl
 23655  01183A  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23656  01183E  0E00               	movlw	low (__mediumconst shr (0+16))
 23657  011840  6EF8               	movwf	tblptru,c
 23658  011842  0E0D               	movlw	(high __ramtop+-1)
 23659  011844  64F7               	cpfsgt	tblptrh,c
 23660  011846  D003               	bra	u31157
 23661  011848  0008               	tblrd		*
 23662  01184A  50F5               	movf	tablat,w,c
 23663  01184C  D005               	bra	u31150
 23664  01184E                     u31157:
 23665  01184E  CFF6 FFE9          	movff	tblptrl,fsr0l
 23666  011852  CFF7 FFEA          	movff	tblptrh,fsr0h
 23667  011856  50EF               	movf	indf0,w,c
 23668  011858                     u31150:
 23669  011858  0101               	movlb	1	; () banked
 23670  01185A  6F88               	movwf	??__doprnt& (0+255),b
 23671  01185C  5188               	movf	??__doprnt& (0+255),w,b
 23672  01185E  2717               	addwf	?___wmul& (0+255),f,b
 23673  011860  0E00               	movlw	0
 23674  011862  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 23675  011864  0ED0               	movlw	208
 23676  011866  2517               	addwf	?___wmul& (0+255),w,b
 23677  011868  6FA9               	movwf	__doprnt@prec& (0+255),b
 23678  01186A  0EFF               	movlw	255
 23679  01186C  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 23680  01186E  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23681                           
 23682                           ; BSR set to: 1
 23683  011870  4B84               	infsnz	__doprnt@f& (0+255),f,b
 23684  011872  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 23685  011874                     l1954:
 23686                           
 23687                           ; BSR set to: 1
 23688                           
 23689                           ; BSR set to: 1
 23690  011874  C184  FFF6         	movff	__doprnt@f,tblptrl
 23691  011878  C185  FFF7         	movff	__doprnt@f+1,tblptrh
 23692  01187C  0E00               	movlw	low (__mediumconst shr (0+16))
 23693  01187E  6EF8               	movwf	tblptru,c
 23694  011880  0E0D               	movlw	(high __ramtop+-1)
 23695  011882  64F7               	cpfsgt	tblptrh,c
 23696  011884  D003               	bra	u31167
 23697  011886  0008               	tblrd		*
 23698  011888  50F5               	movf	tablat,w,c
 23699  01188A  D005               	bra	u31160
 23700  01188C                     u31167:
 23701  01188C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23702  011890  CFF7 FFEA          	movff	tblptrh,fsr0h
 23703  011894  50EF               	movf	indf0,w,c
 23704  011896                     u31160:
 23705  011896  ECAC  F0D7         	call	_isdigit
 23706  01189A  A0D8               	btfss	status,0,c
 23707  01189C  D12A               	goto	l1959
 23708  01189E  D7C0               	goto	l1955
 23709  0118A0                     l1953:
 23710                           
 23711                           ;doprnt.c: 626: prec = 0;
 23712  0118A0  0E00               	movlw	0
 23713  0118A2  0101               	movlb	1	; () banked
 23714  0118A4  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 23715  0118A6  0E00               	movlw	0
 23716  0118A8  6FA9               	movwf	__doprnt@prec& (0+255),b
 23717                           
 23718                           ; BSR set to: 1
 23719                           ;doprnt.c: 628: flag |= 0x1000;
 23720  0118AA  89A8               	bsf	(__doprnt@flag+1)& (0+255),4,b
 23721                           
 23722                           ; BSR set to: 1
 23723                           ;doprnt.c: 635: switch(c = *f++) {
 23724                           
 23725                           ;doprnt.c: 630: }
 23726                           ;doprnt.c: 633: loop:
 23727                           
 23728                           ; BSR set to: 1
 23729  0118AC  D122               	goto	l1959
 23730  0118AE                     
 23731                           ; BSR set to: 1
 23732                           ;doprnt.c: 643: flag |= 0x10;
 23733                           
 23734                           ; BSR set to: 1
 23735  0118AE  89A7               	bsf	__doprnt@flag& (0+255),4,b
 23736                           
 23737                           ;doprnt.c: 644: goto loop;
 23738  0118B0  D120               	goto	l1959
 23739  0118B2                     
 23740                           ; BSR set to: 1
 23741                           ;doprnt.c: 663: flag |= 0x400;
 23742                           
 23743                           ; BSR set to: 1
 23744  0118B2  85A8               	bsf	(__doprnt@flag+1)& (0+255),2,b
 23745                           
 23746                           ; BSR set to: 1
 23747                           ;doprnt.c: 698: case 'i':
 23748                           ;doprnt.c: 699: break;
 23749                           
 23750                           ; BSR set to: 1
 23751                           
 23752                           ;doprnt.c: 697: case 'd':
 23753                           
 23754                           ;doprnt.c: 664: break;
 23755  0118B4  D159               	goto	l1964
 23756  0118B6                     
 23757                           ; BSR set to: 1
 23758                           ;doprnt.c: 718: case 'x':
 23759                           ;doprnt.c: 721: flag |= 0x80;
 23760                           
 23761                           ; BSR set to: 1
 23762                           
 23763                           ; BSR set to: 1
 23764  0118B6  8FA7               	bsf	__doprnt@flag& (0+255),7,b
 23765                           
 23766                           ;doprnt.c: 723: break;
 23767  0118B8  D157               	goto	l1964
 23768  0118BA                     
 23769                           ; BSR set to: 1
 23770                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 23771                           
 23772                           ; BSR set to: 1
 23773  0118BA  C186  FFD9         	movff	__doprnt@ap,fsr2l
 23774  0118BE  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 23775  0118C2  CFDF F188          	movff	indf2,??__doprnt
 23776  0118C6  0E02               	movlw	2
 23777  0118C8  26DE               	addwf	postinc2,f,c
 23778  0118CA  CFDF F189          	movff	indf2,??__doprnt+1
 23779  0118CE  0E00               	movlw	0
 23780  0118D0  22DD               	addwfc	postdec2,f,c
 23781  0118D2  C188  FFD9         	movff	??__doprnt,fsr2l
 23782  0118D6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23783  0118DA  CFDE F193          	movff	postinc2,__doprnt@cp
 23784  0118DE  CFDD F194          	movff	postdec2,__doprnt@cp+1
 23785                           
 23786                           ; BSR set to: 1
 23787                           ;doprnt.c: 740: if(!cp)
 23788  0118E2  5193               	movf	__doprnt@cp& (0+255),w,b
 23789  0118E4  1194               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 23790  0118E6  A4D8               	btfss	status,2,c
 23791  0118E8  D004               	goto	l1970
 23792                           
 23793                           ; BSR set to: 1
 23794                           ;doprnt.c: 741: cp = "(null)";
 23795  0118EA  0E9A               	movlw	low STR_191
 23796  0118EC  6F93               	movwf	__doprnt@cp& (0+255),b
 23797  0118EE  0EFF               	movlw	high STR_191
 23798  0118F0  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 23799  0118F2                     l1970:
 23800                           
 23801                           ; BSR set to: 1
 23802                           ;doprnt.c: 745: len = 0;
 23803                           
 23804                           ; BSR set to: 1
 23805  0118F2  0E00               	movlw	0
 23806  0118F4  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 23807  0118F6  0E00               	movlw	0
 23808  0118F8  6F95               	movwf	__doprnt@len& (0+255),b
 23809                           
 23810                           ;doprnt.c: 746: while(cp[len])
 23811  0118FA  D003               	goto	l1971
 23812  0118FC                     
 23813                           ;doprnt.c: 747: len++;
 23814                           
 23815                           ; BSR set to: 1
 23816  0118FC  0101               	movlb	1	; () banked
 23817  0118FE  4B95               	infsnz	__doprnt@len& (0+255),f,b
 23818  011900  2B96               	incf	(__doprnt@len+1)& (0+255),f,b
 23819  011902                     l1971:
 23820                           
 23821                           ; BSR set to: 1
 23822                           
 23823                           ; BSR set to: 1
 23824  011902  5195               	movf	__doprnt@len& (0+255),w,b
 23825  011904  2593               	addwf	__doprnt@cp& (0+255),w,b
 23826  011906  6F88               	movwf	??__doprnt& (0+255),b
 23827  011908  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23828  01190A  2194               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 23829  01190C  6F89               	movwf	(??__doprnt+1)& (0+255),b
 23830  01190E  C188  FFF6         	movff	??__doprnt,tblptrl
 23831  011912  C189  FFF7         	movff	??__doprnt+1,tblptrh
 23832  011916  0E00               	movlw	low (__mediumconst shr (0+16))
 23833  011918  6EF8               	movwf	tblptru,c
 23834  01191A  0E0D               	movlw	(high __ramtop+-1)
 23835  01191C  64F7               	cpfsgt	tblptrh,c
 23836  01191E  D003               	bra	u31197
 23837  011920  0008               	tblrd		*
 23838  011922  50F5               	movf	tablat,w,c
 23839  011924  D005               	bra	u31190
 23840  011926                     u31197:
 23841  011926  CFF6 FFE9          	movff	tblptrl,fsr0l
 23842  01192A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23843  01192E  50EF               	movf	indf0,w,c
 23844  011930                     u31190:
 23845  011930  0900               	iorlw	0
 23846  011932  A4D8               	btfss	status,2,c
 23847  011934  D7E3               	goto	l1972
 23848  011936                     u31200:
 23849                           
 23850                           ;doprnt.c: 753: if(prec && prec < len)
 23851                           
 23852                           ;doprnt.c: 750: dostring:
 23853  011936  0101               	movlb	1	; () banked
 23854  011938  51A9               	movf	__doprnt@prec& (0+255),w,b
 23855  01193A  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 23856  01193C  B4D8               	btfsc	status,2,c
 23857  01193E  D00A               	goto	l1975
 23858                           
 23859                           ; BSR set to: 1
 23860  011940  5195               	movf	__doprnt@len& (0+255),w,b
 23861  011942  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 23862  011944  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23863  011946  59AA               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 23864  011948  B0D8               	btfsc	status,0,c
 23865  01194A  D004               	goto	l1975
 23866                           
 23867                           ; BSR set to: 1
 23868                           ;doprnt.c: 754: len = prec;
 23869  01194C  C1A9  F195         	movff	__doprnt@prec,__doprnt@len
 23870  011950  C1AA  F196         	movff	__doprnt@prec+1,__doprnt@len+1
 23871  011954                     l1975:
 23872                           
 23873                           ; BSR set to: 1
 23874                           ;doprnt.c: 757: if(width > len)
 23875                           
 23876                           ; BSR set to: 1
 23877  011954  51A5               	movf	__doprnt@width& (0+255),w,b
 23878  011956  5D95               	subwf	__doprnt@len& (0+255),w,b
 23879  011958  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 23880  01195A  5996               	subwfb	(__doprnt@len+1)& (0+255),w,b
 23881  01195C  B0D8               	btfsc	status,0,c
 23882  01195E  D005               	goto	l1976
 23883                           
 23884                           ; BSR set to: 1
 23885                           ;doprnt.c: 758: width -= len;
 23886  011960  5195               	movf	__doprnt@len& (0+255),w,b
 23887  011962  5FA5               	subwf	__doprnt@width& (0+255),f,b
 23888  011964  5196               	movf	(__doprnt@len+1)& (0+255),w,b
 23889  011966  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 23890  011968  D038               	goto	l1981
 23891  01196A                     l1976:
 23892                           
 23893                           ; BSR set to: 1
 23894                           ;doprnt.c: 759: else
 23895                           ;doprnt.c: 760: width = 0;
 23896                           
 23897                           ; BSR set to: 1
 23898  01196A  0E00               	movlw	0
 23899  01196C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 23900  01196E  0E00               	movlw	0
 23901  011970  6FA5               	movwf	__doprnt@width& (0+255),b
 23902                           
 23903                           ; BSR set to: 1
 23904                           ;doprnt.c: 764: while(width--)
 23905  011972  D033               	goto	l1981
 23906  011974                     l21859:
 23907                           
 23908                           ; BSR set to: 1
 23909                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 23910  011974  EE20 F002          	lfsr	2,2
 23911  011978  5182               	movf	__doprnt@pb& (0+255),w,b
 23912  01197A  26D9               	addwf	fsr2l,f,c
 23913  01197C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23914  01197E  22DA               	addwfc	fsr2h,f,c
 23915  011980  50DE               	movf	postinc2,w,c
 23916  011982  10DE               	iorwf	postinc2,w,c
 23917  011984  10DE               	iorwf	postinc2,w,c
 23918  011986  B4D8               	btfsc	status,2,c
 23919  011988  D013               	goto	l1980
 23920                           
 23921                           ; BSR set to: 1
 23922  01198A  EE20 F002          	lfsr	2,2
 23923  01198E  5182               	movf	__doprnt@pb& (0+255),w,b
 23924  011990  26D9               	addwf	fsr2l,f,c
 23925  011992  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23926  011994  22DA               	addwfc	fsr2h,f,c
 23927  011996  D801               	call	u31258
 23928  011998  D020               	goto	l1981
 23929  01199A                     u31258:
 23930  01199A  0005               	push	
 23931  01199C  6EFA               	movwf	pclath,c
 23932  01199E  50DE               	movf	postinc2,w,c
 23933  0119A0  6EFD               	movwf	tosl,c
 23934  0119A2  50DE               	movf	postinc2,w,c
 23935  0119A4  6EFE               	movwf	tosh,c
 23936  0119A6  50DE               	movf	postinc2,w,c
 23937  0119A8  6EFF               	movwf	tosu,c
 23938  0119AA  50FA               	movf	pclath,w,c
 23939  0119AC  0E20               	movlw	32
 23940  0119AE  0012               	return		;indir
 23941  0119B0                     l1980:
 23942  0119B0  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23943  0119B4  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23944  0119B8  CFDE F188          	movff	postinc2,??__doprnt
 23945  0119BC  CFDD F189          	movff	postdec2,??__doprnt+1
 23946  0119C0  C188  FFD9         	movff	??__doprnt,fsr2l
 23947  0119C4  C189  FFDA         	movff	??__doprnt+1,fsr2h
 23948  0119C8  0E20               	movlw	32
 23949  0119CA  6EDF               	movwf	indf2,c
 23950  0119CC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 23951  0119D0  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 23952  0119D4  2ADE               	incf	postinc2,f,c
 23953  0119D6  0E00               	movlw	0
 23954  0119D8  22DD               	addwfc	postdec2,f,c
 23955  0119DA                     l1981:
 23956  0119DA  0101               	movlb	1	; () banked
 23957  0119DC  07A5               	decf	__doprnt@width& (0+255),f,b
 23958  0119DE  A0D8               	btfss	status,0,c
 23959  0119E0  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 23960  0119E2  29A5               	incf	__doprnt@width& (0+255),w,b
 23961  0119E4  E1C7               	bnz	l21859
 23962  0119E6  29A6               	incf	(__doprnt@width+1)& (0+255),w,b
 23963  0119E8  B4D8               	btfsc	status,2,c
 23964  0119EA  D05B               	goto	l1986
 23965  0119EC  D7C3               	goto	l1979
 23966  0119EE                     l21869:
 23967                           
 23968                           ; BSR set to: 1
 23969                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 23970  0119EE  EE20 F002          	lfsr	2,2
 23971  0119F2  5182               	movf	__doprnt@pb& (0+255),w,b
 23972  0119F4  26D9               	addwf	fsr2l,f,c
 23973  0119F6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23974  0119F8  22DA               	addwfc	fsr2h,f,c
 23975  0119FA  50DE               	movf	postinc2,w,c
 23976  0119FC  10DE               	iorwf	postinc2,w,c
 23977  0119FE  10DE               	iorwf	postinc2,w,c
 23978  011A00  B4D8               	btfsc	status,2,c
 23979  011A02  D027               	goto	l1985
 23980                           
 23981                           ; BSR set to: 1
 23982  011A04  EE20 F002          	lfsr	2,2
 23983  011A08  5182               	movf	__doprnt@pb& (0+255),w,b
 23984  011A0A  26D9               	addwf	fsr2l,f,c
 23985  011A0C  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 23986  011A0E  22DA               	addwfc	fsr2h,f,c
 23987  011A10  D801               	call	u31288
 23988  011A12  D01B               	goto	u31289
 23989  011A14                     u31288:
 23990  011A14  0005               	push	
 23991  011A16  6EFA               	movwf	pclath,c
 23992  011A18  50DE               	movf	postinc2,w,c
 23993  011A1A  6EFD               	movwf	tosl,c
 23994  011A1C  50DE               	movf	postinc2,w,c
 23995  011A1E  6EFE               	movwf	tosh,c
 23996  011A20  50DE               	movf	postinc2,w,c
 23997  011A22  6EFF               	movwf	tosu,c
 23998  011A24  50FA               	movf	pclath,w,c
 23999  011A26  C193  FFF6         	movff	__doprnt@cp,tblptrl
 24000  011A2A  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 24001  011A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 24002  011A30  6EF8               	movwf	tblptru,c
 24003  011A32  0E0D               	movlw	(high __ramtop+-1)
 24004  011A34  64F7               	cpfsgt	tblptrh,c
 24005  011A36  D003               	bra	u31297
 24006  011A38  0008               	tblrd		*
 24007  011A3A  50F5               	movf	tablat,w,c
 24008  011A3C  D005               	bra	u31290
 24009  011A3E                     u31297:
 24010  011A3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24011  011A42  CFF7 FFEA          	movff	tblptrh,fsr0h
 24012  011A46  50EF               	movf	indf0,w,c
 24013  011A48                     u31290:
 24014  011A48  0012               	return		;indir
 24015  011A4A                     u31289:
 24016  011A4A  0101               	movlb	1	; () banked
 24017  011A4C  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 24018  011A4E  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 24019  011A50  D028               	goto	l1986
 24020  011A52                     l1985:
 24021                           
 24022                           ; BSR set to: 1
 24023                           
 24024                           ; BSR set to: 1
 24025  011A52  C193  FFF6         	movff	__doprnt@cp,tblptrl
 24026  011A56  C194  FFF7         	movff	__doprnt@cp+1,tblptrh
 24027  011A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 24028  011A5C  6EF8               	movwf	tblptru,c
 24029  011A5E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24030  011A62  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24031  011A66  CFDE F188          	movff	postinc2,??__doprnt
 24032  011A6A  CFDD F189          	movff	postdec2,??__doprnt+1
 24033  011A6E  C188  FFD9         	movff	??__doprnt,fsr2l
 24034  011A72  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24035  011A76  0E0D               	movlw	(high __ramtop+-1)
 24036  011A78  64F7               	cpfsgt	tblptrh,c
 24037  011A7A  D003               	bra	u31307
 24038  011A7C  0008               	tblrd		*
 24039  011A7E  50F5               	movf	tablat,w,c
 24040  011A80  D005               	bra	u31300
 24041  011A82                     u31307:
 24042  011A82  CFF6 FFE9          	movff	tblptrl,fsr0l
 24043  011A86  CFF7 FFEA          	movff	tblptrh,fsr0h
 24044  011A8A  50EF               	movf	indf0,w,c
 24045  011A8C                     u31300:
 24046  011A8C  6EDF               	movwf	indf2,c
 24047  011A8E  0101               	movlb	1	; () banked
 24048  011A90  4B93               	infsnz	__doprnt@cp& (0+255),f,b
 24049  011A92  2B94               	incf	(__doprnt@cp+1)& (0+255),f,b
 24050                           
 24051                           ; BSR set to: 1
 24052  011A94  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24053  011A98  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24054  011A9C  2ADE               	incf	postinc2,f,c
 24055  011A9E  0E00               	movlw	0
 24056  011AA0  22DD               	addwfc	postdec2,f,c
 24057  011AA2                     l1986:
 24058                           
 24059                           ; BSR set to: 1
 24060                           
 24061                           ; BSR set to: 1
 24062                           
 24063                           ; BSR set to: 1
 24064  011AA2  0795               	decf	__doprnt@len& (0+255),f,b
 24065  011AA4  A0D8               	btfss	status,0,c
 24066  011AA6  0796               	decf	(__doprnt@len+1)& (0+255),f,b
 24067  011AA8  2995               	incf	__doprnt@len& (0+255),w,b
 24068  011AAA  E1A1               	bnz	l21869
 24069  011AAC  2996               	incf	(__doprnt@len+1)& (0+255),w,b
 24070  011AAE  B4D8               	btfsc	status,2,c
 24071  011AB0  EF97  F095         	goto	u32160
 24072  011AB4  D79C               	goto	l1984
 24073  011AB6                     
 24074                           ; BSR set to: 1
 24075                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24076                           
 24077                           ; BSR set to: 1
 24078  011AB6  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24079  011ABA  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24080  011ABE  CFDF F188          	movff	indf2,??__doprnt
 24081  011AC2  0E02               	movlw	2
 24082  011AC4  26DE               	addwf	postinc2,f,c
 24083  011AC6  CFDF F189          	movff	indf2,??__doprnt+1
 24084  011ACA  0E00               	movlw	0
 24085  011ACC  22DD               	addwfc	postdec2,f,c
 24086  011ACE  C188  FFD9         	movff	??__doprnt,fsr2l
 24087  011AD2  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24088  011AD6  50DF               	movf	indf2,w,c
 24089  011AD8  6FAB               	movwf	__doprnt@c& (0+255),b
 24090  011ADA                     
 24091                           ; BSR set to: 1
 24092                           ;doprnt.c: 805: cp = (char *)&c;
 24093                           
 24094                           ; BSR set to: 1
 24095  011ADA  0EAB               	movlw	low __doprnt@c
 24096  011ADC  6F93               	movwf	__doprnt@cp& (0+255),b
 24097  011ADE  0E01               	movlw	high __doprnt@c
 24098  011AE0  6F94               	movwf	(__doprnt@cp+1)& (0+255),b
 24099                           
 24100                           ; BSR set to: 1
 24101                           ;doprnt.c: 806: len = 1;
 24102  011AE2  0E00               	movlw	0
 24103  011AE4  6F96               	movwf	(__doprnt@len+1)& (0+255),b
 24104  011AE6  0E01               	movlw	1
 24105  011AE8  6F95               	movwf	__doprnt@len& (0+255),b
 24106                           
 24107                           ;doprnt.c: 807: goto dostring;
 24108  011AEA  D725               	goto	u31200
 24109  011AEC                     
 24110                           ; BSR set to: 1
 24111                           ;doprnt.c: 818: flag |= 0xC0;
 24112                           
 24113                           ; BSR set to: 1
 24114  011AEC  0EC0               	movlw	192
 24115  011AEE  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 24116                           
 24117                           ; BSR set to: 1
 24118                           ;doprnt.c: 822: }
 24119                           
 24120                           ;doprnt.c: 819: break;
 24121  011AF0  D03B               	goto	l1964
 24122  011AF2                     l1959:
 24123                           
 24124                           ; BSR set to: 1
 24125  011AF2  0101               	movlb	1	; () banked
 24126  011AF4  5184               	movf	__doprnt@f& (0+255),w,b
 24127  011AF6  6F88               	movwf	??__doprnt& (0+255),b
 24128  011AF8  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 24129  011AFA  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24130  011AFC  4B84               	infsnz	__doprnt@f& (0+255),f,b
 24131  011AFE  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 24132  011B00  C188  FFF6         	movff	??__doprnt,tblptrl
 24133  011B04  C189  FFF7         	movff	??__doprnt+1,tblptrh
 24134  011B08  0E00               	movlw	low (__mediumconst shr (0+16))
 24135  011B0A  6EF8               	movwf	tblptru,c
 24136  011B0C  0E0D               	movlw	(high __ramtop+-1)
 24137  011B0E  64F7               	cpfsgt	tblptrh,c
 24138  011B10  D003               	bra	u31327
 24139  011B12  0008               	tblrd		*
 24140  011B14  50F5               	movf	tablat,w,c
 24141  011B16  D005               	bra	u31320
 24142  011B18                     u31327:
 24143  011B18  CFF6 FFE9          	movff	tblptrl,fsr0l
 24144  011B1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24145  011B20  50EF               	movf	indf0,w,c
 24146  011B22                     u31320:
 24147  011B22  0101               	movlb	1	; () banked
 24148  011B24  6FAB               	movwf	__doprnt@c& (0+255),b
 24149  011B26  51AB               	movf	__doprnt@c& (0+255),w,b
 24150                           
 24151                           ; Switch size 1, requested type "space"
 24152                           ; Number of cases is 10, Range of values is 0 to 120
 24153                           ; switch strategies available:
 24154                           ; Name         Instructions Cycles
 24155                           ; simple_byte           31    16 (average)
 24156                           ;	Chosen strategy is simple_byte
 24157  011B28  0A00               	xorlw	0	; case 0
 24158  011B2A  B4D8               	btfsc	status,2,c
 24159  011B2C  EFB5  F095         	goto	u32180
 24160  011B30  0A58               	xorlw	88	; case 88
 24161  011B32  B4D8               	btfsc	status,2,c
 24162  011B34  D6C0               	goto	l1967
 24163  011B36  0A3B               	xorlw	59	; case 99
 24164  011B38  B4D8               	btfsc	status,2,c
 24165  011B3A  D7BD               	goto	l1988
 24166  011B3C  0A07               	xorlw	7	; case 100
 24167  011B3E  B4D8               	btfsc	status,2,c
 24168  011B40  D013               	goto	l1964
 24169  011B42  0A02               	xorlw	2	; case 102
 24170  011B44  B4D8               	btfsc	status,2,c
 24171  011B46  D6B5               	goto	l1963
 24172  011B48  0A0F               	xorlw	15	; case 105
 24173  011B4A  B4D8               	btfsc	status,2,c
 24174  011B4C  D00D               	goto	l1964
 24175  011B4E  0A05               	xorlw	5	; case 108
 24176  011B50  B4D8               	btfsc	status,2,c
 24177  011B52  D6AD               	goto	l1962
 24178  011B54  0A1F               	xorlw	31	; case 115
 24179  011B56  B4D8               	btfsc	status,2,c
 24180  011B58  D6B0               	goto	l1969
 24181  011B5A  0A06               	xorlw	6	; case 117
 24182  011B5C  B4D8               	btfsc	status,2,c
 24183  011B5E  D7C6               	goto	l1990
 24184  011B60  0A0D               	xorlw	13	; case 120
 24185  011B62  B4D8               	btfsc	status,2,c
 24186  011B64  D6A8               	goto	l1967
 24187  011B66  D7B9               	goto	l1989
 24188  011B68                     l1964:
 24189                           
 24190                           ; BSR set to: 1
 24191                           ;doprnt.c: 825: if(flag & (0x700)) {
 24192                           
 24193                           ; BSR set to: 1
 24194  011B68  0E07               	movlw	7
 24195  011B6A  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24196  011B6C  B4D8               	btfsc	status,2,c
 24197  011B6E  EFAB  F092         	goto	l1991
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;doprnt.c: 827: if(flag & 0x1000)
 24201  011B72  A9A8               	btfss	(__doprnt@flag+1)& (0+255),4,b
 24202  011B74  D004               	goto	l1992
 24203                           
 24204                           ; BSR set to: 1
 24205                           ;doprnt.c: 829: prec = 6;
 24206  011B76  0E00               	movlw	0
 24207  011B78  6FAA               	movwf	(__doprnt@prec+1)& (0+255),b
 24208  011B7A  0E06               	movlw	6
 24209  011B7C  6FA9               	movwf	__doprnt@prec& (0+255),b
 24210  011B7E                     l1992:
 24211                           
 24212                           ; BSR set to: 1
 24213                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24214                           
 24215                           ; BSR set to: 1
 24216  011B7E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 24217  011B82  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 24218  011B86  CFDF F188          	movff	indf2,??__doprnt
 24219  011B8A  0E04               	movlw	4
 24220  011B8C  26DE               	addwf	postinc2,f,c
 24221  011B8E  CFDF F189          	movff	indf2,??__doprnt+1
 24222  011B92  0E00               	movlw	0
 24223  011B94  22DD               	addwfc	postdec2,f,c
 24224  011B96  C188  FFD9         	movff	??__doprnt,fsr2l
 24225  011B9A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24226  011B9E  CFDE F19D          	movff	postinc2,__doprnt@fval
 24227  011BA2  CFDE F19E          	movff	postinc2,__doprnt@fval+1
 24228  011BA6  CFDE F19F          	movff	postinc2,__doprnt@fval+2
 24229  011BAA  CFDE F1A0          	movff	postinc2,__doprnt@fval+3
 24230                           
 24231                           ; BSR set to: 1
 24232                           ;doprnt.c: 831: if(fval < 0.0) {
 24233  011BAE  AFA0               	btfss	(__doprnt@fval+3)& (0+255),7,b
 24234  011BB0  D015               	goto	l1993
 24235                           
 24236                           ; BSR set to: 1
 24237                           ;doprnt.c: 832: fval = -fval;
 24238  011BB2  C19D  F125         	movff	__doprnt@fval,___flneg@f1
 24239  011BB6  C19E  F126         	movff	__doprnt@fval+1,___flneg@f1+1
 24240  011BBA  C19F  F127         	movff	__doprnt@fval+2,___flneg@f1+2
 24241  011BBE  C1A0  F128         	movff	__doprnt@fval+3,___flneg@f1+3
 24242  011BC2  EC80  F0D6         	call	___flneg
 24243  011BC6  C125  F19D         	movff	?___flneg,__doprnt@fval
 24244  011BCA  C126  F19E         	movff	?___flneg+1,__doprnt@fval+1
 24245  011BCE  C127  F19F         	movff	?___flneg+2,__doprnt@fval+2
 24246  011BD2  C128  F1A0         	movff	?___flneg+3,__doprnt@fval+3
 24247                           
 24248                           ;doprnt.c: 833: flag |= 0x03;
 24249  011BD6  0E03               	movlw	3
 24250  011BD8  0101               	movlb	1	; () banked
 24251  011BDA  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 24252  011BDC                     l1993:
 24253                           
 24254                           ; BSR set to: 1
 24255                           ;doprnt.c: 834: }
 24256                           ;doprnt.c: 835: exp = 0;
 24257                           
 24258                           ; BSR set to: 1
 24259  011BDC  0E00               	movlw	0
 24260  011BDE  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24261  011BE0  0E00               	movlw	0
 24262  011BE2  6F97               	movwf	__doprnt@exp& (0+255),b
 24263                           
 24264                           ; BSR set to: 1
 24265                           ;doprnt.c: 836: if( fval!=0) {
 24266  011BE4  519D               	movf	__doprnt@fval& (0+255),w,b
 24267  011BE6  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24268  011BE8  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24269  011BEA  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24270  011BEC  B4D8               	btfsc	status,2,c
 24271  011BEE  D084               	goto	l1998
 24272                           
 24273                           ; BSR set to: 1
 24274                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 24275  011BF0  359F               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 24276  011BF2  35A0               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 24277  011BF4  0F82               	addlw	130
 24278  011BF6  6F97               	movwf	__doprnt@exp& (0+255),b
 24279  011BF8  6B98               	clrf	(__doprnt@exp+1)& (0+255),b
 24280  011BFA  0EFF               	movlw	255
 24281  011BFC  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24282                           
 24283                           ; BSR set to: 1
 24284                           ;doprnt.c: 838: exp--;
 24285  011BFE  0797               	decf	__doprnt@exp& (0+255),f,b
 24286  011C00  A0D8               	btfss	status,0,c
 24287  011C02  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24288                           
 24289                           ; BSR set to: 1
 24290                           ;doprnt.c: 839: exp *= 3;
 24291  011C04  C197  F117         	movff	__doprnt@exp,___wmul@multiplier
 24292  011C08  C198  F118         	movff	__doprnt@exp+1,___wmul@multiplier+1
 24293  011C0C  0E00               	movlw	0
 24294  011C0E  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24295  011C10  0E03               	movlw	3
 24296  011C12  6F19               	movwf	___wmul@multiplicand& (0+255),b
 24297  011C14  ECDC  F0D6         	call	___wmul	;wreg free
 24298  011C18  C117  F197         	movff	?___wmul,__doprnt@exp
 24299  011C1C  C118  F198         	movff	?___wmul+1,__doprnt@exp+1
 24300                           
 24301                           ;doprnt.c: 840: exp /= 10;
 24302  011C20  C197  F11D         	movff	__doprnt@exp,___awdiv@dividend
 24303  011C24  C198  F11E         	movff	__doprnt@exp+1,___awdiv@dividend+1
 24304  011C28  0E00               	movlw	0
 24305  011C2A  0101               	movlb	1	; () banked
 24306  011C2C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 24307  011C2E  0E0A               	movlw	10
 24308  011C30  6F1F               	movwf	___awdiv@divisor& (0+255),b
 24309  011C32  EC25  F0CD         	call	___awdiv	;wreg free
 24310  011C36  C11D  F197         	movff	?___awdiv,__doprnt@exp
 24311  011C3A  C11E  F198         	movff	?___awdiv+1,__doprnt@exp+1
 24312                           
 24313                           ;doprnt.c: 841: if(exp < 0)
 24314  011C3E  0101               	movlb	1	; () banked
 24315  011C40  AF98               	btfss	(__doprnt@exp+1)& (0+255),7,b
 24316  011C42  D003               	goto	l1995
 24317                           
 24318                           ; BSR set to: 1
 24319                           ;doprnt.c: 842: exp--;
 24320  011C44  0797               	decf	__doprnt@exp& (0+255),f,b
 24321  011C46  A0D8               	btfss	status,0,c
 24322  011C48  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24323  011C4A                     l1995:
 24324                           
 24325                           ; BSR set to: 1
 24326                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 24327                           
 24328                           ; BSR set to: 1
 24329  011C4A  5197               	movf	__doprnt@exp& (0+255),w,b
 24330  011C4C  0800               	sublw	0
 24331  011C4E  EC9E  F0A5         	call	_scale
 24332  011C52  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24333  011C56  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24334  011C5A  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24335  011C5E  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24336                           
 24337                           ;doprnt.c: 847: tmpval.integ *= fval;
 24338  011C62  C199  F156         	movff	__doprnt@tmpval,___flmul@b
 24339  011C66  C19A  F157         	movff	__doprnt@tmpval+1,___flmul@b+1
 24340  011C6A  C19B  F158         	movff	__doprnt@tmpval+2,___flmul@b+2
 24341  011C6E  C19C  F159         	movff	__doprnt@tmpval+3,___flmul@b+3
 24342  011C72  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 24343  011C76  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 24344  011C7A  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 24345  011C7E  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 24346  011C82  ECE4  F0AB         	call	___flmul	;wreg free
 24347  011C86  C156  F199         	movff	?___flmul,__doprnt@tmpval
 24348  011C8A  C157  F19A         	movff	?___flmul+1,__doprnt@tmpval+1
 24349  011C8E  C158  F19B         	movff	?___flmul+2,__doprnt@tmpval+2
 24350  011C92  C159  F19C         	movff	?___flmul+3,__doprnt@tmpval+3
 24351                           
 24352                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 24353  011C96  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24354  011C9A  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24355  011C9E  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24356  011CA2  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24357  011CA6  0E00               	movlw	0
 24358  011CA8  0101               	movlb	1	; () banked
 24359  011CAA  6F1B               	movwf	___flge@ff2& (0+255),b
 24360  011CAC  0E00               	movlw	0
 24361  011CAE  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24362  011CB0  0E80               	movlw	128
 24363  011CB2  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24364  011CB4  0E3F               	movlw	63
 24365  011CB6  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24366  011CB8  EC52  F0C6         	call	___flge	;wreg free
 24367  011CBC  0101               	movlb	1	; () banked
 24368  011CBE  B0D8               	btfsc	status,0,c
 24369  011CC0  D004               	goto	l1996
 24370                           
 24371                           ; BSR set to: 1
 24372                           ;doprnt.c: 849: exp--;
 24373  011CC2  0797               	decf	__doprnt@exp& (0+255),f,b
 24374  011CC4  A0D8               	btfss	status,0,c
 24375  011CC6  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 24376  011CC8  D017               	goto	l1998
 24377  011CCA                     l1996:
 24378                           
 24379                           ; BSR set to: 1
 24380                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 24381                           
 24382                           ; BSR set to: 1
 24383  011CCA  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24384  011CCE  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24385  011CD2  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24386  011CD6  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24387  011CDA  0E00               	movlw	0
 24388  011CDC  6F1B               	movwf	___flge@ff2& (0+255),b
 24389  011CDE  0E00               	movlw	0
 24390  011CE0  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24391  011CE2  0E20               	movlw	32
 24392  011CE4  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24393  011CE6  0E41               	movlw	65
 24394  011CE8  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24395  011CEA  EC52  F0C6         	call	___flge	;wreg free
 24396  011CEE  0101               	movlb	1	; () banked
 24397  011CF0  A0D8               	btfss	status,0,c
 24398  011CF2  D002               	goto	l1998
 24399                           
 24400                           ; BSR set to: 1
 24401                           ;doprnt.c: 851: exp++;
 24402  011CF4  4B97               	infsnz	__doprnt@exp& (0+255),f,b
 24403  011CF6  2B98               	incf	(__doprnt@exp+1)& (0+255),f,b
 24404  011CF8                     l1998:
 24405                           
 24406                           ; BSR set to: 1
 24407                           ;doprnt.c: 852: }
 24408                           ;doprnt.c: 1112: if(prec <= 12)
 24409                           
 24410                           ; BSR set to: 1
 24411                           
 24412                           ; BSR set to: 1
 24413                           
 24414                           ; BSR set to: 1
 24415  011CF8  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 24416  011CFA  D006               	goto	u31400
 24417  011CFC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24418  011CFE  E121               	bnz	l21941
 24419  011D00  0E0D               	movlw	13
 24420  011D02  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 24421  011D04  B0D8               	btfsc	status,0,c
 24422  011D06  D01D               	goto	l1999
 24423  011D08                     u31400:
 24424                           
 24425                           ; BSR set to: 1
 24426                           ;doprnt.c: 1113: fval += fround(prec);
 24427  011D08  C19D  F129         	movff	__doprnt@fval,___fladd@b
 24428  011D0C  C19E  F12A         	movff	__doprnt@fval+1,___fladd@b+1
 24429  011D10  C19F  F12B         	movff	__doprnt@fval+2,___fladd@b+2
 24430  011D14  C1A0  F12C         	movff	__doprnt@fval+3,___fladd@b+3
 24431  011D18  51A9               	movf	__doprnt@prec& (0+255),w,b
 24432  011D1A  ECD6  F0B6         	call	_fround
 24433  011D1E  C16F  F12D         	movff	?_fround,___fladd@a
 24434  011D22  C170  F12E         	movff	?_fround+1,___fladd@a+1
 24435  011D26  C171  F12F         	movff	?_fround+2,___fladd@a+2
 24436  011D2A  C172  F130         	movff	?_fround+3,___fladd@a+3
 24437  011D2E  EC35  F0AF         	call	___fladd	;wreg free
 24438  011D32  C129  F19D         	movff	?___fladd,__doprnt@fval
 24439  011D36  C12A  F19E         	movff	?___fladd+1,__doprnt@fval+1
 24440  011D3A  C12B  F19F         	movff	?___fladd+2,__doprnt@fval+2
 24441  011D3E  C12C  F1A0         	movff	?___fladd+3,__doprnt@fval+3
 24442  011D42                     l1999:
 24443  011D42                     l21941:
 24444                           
 24445                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 24446  011D42  0101               	movlb	1	; () banked
 24447  011D44  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24448  011D46  D006               	goto	u31410
 24449  011D48  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24450  011D4A  E122               	bnz	l21949
 24451  011D4C  0E0A               	movlw	10
 24452  011D4E  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24453  011D50  B0D8               	btfsc	status,0,c
 24454  011D52  D01E               	goto	u31440
 24455  011D54                     u31410:
 24456                           
 24457                           ; BSR set to: 1
 24458  011D54  519D               	movf	__doprnt@fval& (0+255),w,b
 24459  011D56  119E               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 24460  011D58  119F               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 24461  011D5A  11A0               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 24462  011D5C  B4D8               	btfsc	status,2,c
 24463  011D5E  D062               	goto	l2000
 24464                           
 24465                           ; BSR set to: 1
 24466  011D60  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24467  011D64  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24468  011D68  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24469  011D6C  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24470  011D70  EC00  F0C9         	call	___fltol	;wreg free
 24471  011D74  0101               	movlb	1	; () banked
 24472  011D76  5178               	movf	?___fltol& (0+255),w,b
 24473  011D78  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 24474  011D7A  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 24475  011D7C  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 24476  011D7E  B4D8               	btfsc	status,2,c
 24477                           
 24478                           ; BSR set to: 1
 24479  011D80  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 24480  011D82  D050               	goto	l2000
 24481  011D84  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24482  011D86  E104               	bnz	l21949
 24483  011D88  0E02               	movlw	2
 24484  011D8A  5D97               	subwf	__doprnt@exp& (0+255),w,b
 24485  011D8C  A0D8               	btfss	status,0,c
 24486  011D8E  D04A               	goto	l2000
 24487  011D90                     u31440:
 24488  011D90                     l21949:
 24489                           
 24490                           ; BSR set to: 1
 24491                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 24492  011D90  C199  F117         	movff	__doprnt@tmpval,___flge@ff1
 24493  011D94  C19A  F118         	movff	__doprnt@tmpval+1,___flge@ff1+1
 24494  011D98  C19B  F119         	movff	__doprnt@tmpval+2,___flge@ff1+2
 24495  011D9C  C19C  F11A         	movff	__doprnt@tmpval+3,___flge@ff1+3
 24496  011DA0  0E5F               	movlw	95
 24497  011DA2  6F1B               	movwf	___flge@ff2& (0+255),b
 24498  011DA4  0E70               	movlw	112
 24499  011DA6  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24500  011DA8  0E89               	movlw	137
 24501  011DAA  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24502  011DAC  0E40               	movlw	64
 24503  011DAE  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24504  011DB0  EC52  F0C6         	call	___flge	;wreg free
 24505  011DB4  0101               	movlb	1	; () banked
 24506  011DB6  B0D8               	btfsc	status,0,c
 24507  011DB8  D002               	goto	l2003
 24508                           
 24509                           ; BSR set to: 1
 24510                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24511  011DBA  0EF7               	movlw	247
 24512  011DBC  D001               	goto	L3
 24513  011DBE                     l2003:
 24514                           
 24515                           ; BSR set to: 1
 24516                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24517                           
 24518                           ; BSR set to: 1
 24519  011DBE  0EF8               	movlw	248
 24520  011DC0                     L3:
 24521  011DC0  2797               	addwf	__doprnt@exp& (0+255),f,b
 24522  011DC2  0EFF               	movlw	255
 24523  011DC4  2398               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 24524                           
 24525                           ; BSR set to: 1
 24526                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24527                           
 24528                           ; BSR set to: 1
 24529  011DC6  5197               	movf	__doprnt@exp& (0+255),w,b
 24530  011DC8  EC9E  F0A5         	call	_scale
 24531  011DCC  C16F  F199         	movff	?_scale,__doprnt@tmpval
 24532  011DD0  C170  F19A         	movff	?_scale+1,__doprnt@tmpval+1
 24533  011DD4  C171  F19B         	movff	?_scale+2,__doprnt@tmpval+2
 24534  011DD8  C172  F19C         	movff	?_scale+3,__doprnt@tmpval+3
 24535  011DDC  C19D  F117         	movff	__doprnt@fval,__div_to_l_@f1
 24536  011DE0  C19E  F118         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 24537  011DE4  C19F  F119         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 24538  011DE8  C1A0  F11A         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 24539  011DEC  C199  F11B         	movff	__doprnt@tmpval,__div_to_l_@f2
 24540  011DF0  C19A  F11C         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 24541  011DF4  C19B  F11D         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 24542  011DF8  C19C  F11E         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 24543  011DFC  EC04  F0C4         	call	__div_to_l_	;wreg free
 24544  011E00  C117  F1A1         	movff	?__div_to_l_,__doprnt@val
 24545  011E04  C118  F1A2         	movff	?__div_to_l_+1,__doprnt@val+1
 24546  011E08  C119  F1A3         	movff	?__div_to_l_+2,__doprnt@val+2
 24547  011E0C  C11A  F1A4         	movff	?__div_to_l_+3,__doprnt@val+3
 24548                           
 24549                           ;doprnt.c: 1129: fval = 0.0;
 24550  011E10  0E00               	movlw	0
 24551  011E12  0101               	movlb	1	; () banked
 24552  011E14  6F9D               	movwf	__doprnt@fval& (0+255),b
 24553  011E16  0E00               	movlw	0
 24554  011E18  6F9E               	movwf	(__doprnt@fval+1)& (0+255),b
 24555  011E1A  0E00               	movlw	0
 24556  011E1C  6F9F               	movwf	(__doprnt@fval+2)& (0+255),b
 24557  011E1E  0E00               	movlw	0
 24558  011E20  6FA0               	movwf	(__doprnt@fval+3)& (0+255),b
 24559                           
 24560                           ;doprnt.c: 1130: } else {
 24561  011E22  D03C               	goto	l2009
 24562  011E24                     l2000:
 24563                           
 24564                           ; BSR set to: 1
 24565                           ;doprnt.c: 1131: val = (unsigned long)fval;
 24566                           
 24567                           ; BSR set to: 1
 24568  011E24  C19D  F178         	movff	__doprnt@fval,___fltol@f1
 24569  011E28  C19E  F179         	movff	__doprnt@fval+1,___fltol@f1+1
 24570  011E2C  C19F  F17A         	movff	__doprnt@fval+2,___fltol@f1+2
 24571  011E30  C1A0  F17B         	movff	__doprnt@fval+3,___fltol@f1+3
 24572  011E34  EC00  F0C9         	call	___fltol	;wreg free
 24573  011E38  C178  F1A1         	movff	?___fltol,__doprnt@val
 24574  011E3C  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 24575  011E40  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 24576  011E44  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 24577                           
 24578                           ;doprnt.c: 1132: fval -= (double)val;
 24579  011E48  C19D  F13D         	movff	__doprnt@fval,___flsub@b
 24580  011E4C  C19E  F13E         	movff	__doprnt@fval+1,___flsub@b+1
 24581  011E50  C19F  F13F         	movff	__doprnt@fval+2,___flsub@b+2
 24582  011E54  C1A0  F140         	movff	__doprnt@fval+3,___flsub@b+3
 24583  011E58  C1A1  F117         	movff	__doprnt@val,___xxtofl@val
 24584  011E5C  C1A2  F118         	movff	__doprnt@val+1,___xxtofl@val+1
 24585  011E60  C1A3  F119         	movff	__doprnt@val+2,___xxtofl@val+2
 24586  011E64  C1A4  F11A         	movff	__doprnt@val+3,___xxtofl@val+3
 24587  011E68  0E00               	movlw	0
 24588  011E6A  ECE4  F0C0         	call	___xxtofl
 24589  011E6E  C117  F141         	movff	?___xxtofl,___flsub@a
 24590  011E72  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 24591  011E76  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 24592  011E7A  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 24593  011E7E  EC7B  F0D3         	call	___flsub	;wreg free
 24594  011E82  C13D  F19D         	movff	?___flsub,__doprnt@fval
 24595  011E86  C13E  F19E         	movff	?___flsub+1,__doprnt@fval+1
 24596  011E8A  C13F  F19F         	movff	?___flsub+2,__doprnt@fval+2
 24597  011E8E  C140  F1A0         	movff	?___flsub+3,__doprnt@fval+3
 24598                           
 24599                           ;doprnt.c: 1133: exp = 0;
 24600  011E92  0E00               	movlw	0
 24601  011E94  0101               	movlb	1	; () banked
 24602  011E96  6F98               	movwf	(__doprnt@exp+1)& (0+255),b
 24603  011E98  0E00               	movlw	0
 24604  011E9A  6F97               	movwf	__doprnt@exp& (0+255),b
 24605  011E9C                     l2009:
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;doprnt.c: 1134: }
 24609                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 24610                           
 24611                           ; BSR set to: 1
 24612  011E9C  0E01               	movlw	1
 24613  011E9E  6FAB               	movwf	__doprnt@c& (0+255),b
 24614  011EA0                     l21969:
 24615                           
 24616                           ; BSR set to: 1
 24617  011EA0  0E0A               	movlw	10
 24618  011EA2  19AB               	xorwf	__doprnt@c& (0+255),w,b
 24619  011EA4  B4D8               	btfsc	status,2,c
 24620  011EA6  D01B               	goto	u31480
 24621                           
 24622                           ; BSR set to: 1
 24623                           ;doprnt.c: 1137: if(val < dpowers[c])
 24624                           
 24625                           ; BSR set to: 1
 24626                           
 24627                           ; BSR set to: 1
 24628  011EA8  51AB               	movf	__doprnt@c& (0+255),w,b
 24629  011EAA  0D04               	mullw	4
 24630  011EAC  0E0B               	movlw	low _dpowers
 24631  011EAE  24F3               	addwf	prodl,w,c
 24632  011EB0  6EF6               	movwf	tblptrl,c
 24633  011EB2  0ECF               	movlw	high _dpowers
 24634  011EB4  20F4               	addwfc	prodh,w,c
 24635  011EB6  6EF7               	movwf	tblptrh,c
 24636  011EB8                     	if	1	;There are 3 active tblptr bytes
 24637  011EB8  6AF8               	clrf	tblptru,c
 24638  011EBA  0E00               	movlw	low (__mediumconst shr (0+16))
 24639  011EBC  22F8               	addwfc	tblptru,f,c
 24640  011EBE                     	endif
 24641  011EBE  0009               	tblrd		*+
 24642  011EC0  50F5               	movf	tablat,w,c
 24643  011EC2  5DA1               	subwf	__doprnt@val& (0+255),w,b
 24644  011EC4  0009               	tblrd		*+
 24645  011EC6  50F5               	movf	tablat,w,c
 24646  011EC8  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 24647  011ECA  0009               	tblrd		*+
 24648  011ECC  50F5               	movf	tablat,w,c
 24649  011ECE  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 24650  011ED0  0009               	tblrd		*+
 24651  011ED2  50F5               	movf	tablat,w,c
 24652  011ED4  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 24653  011ED6  A0D8               	btfss	status,0,c
 24654  011ED8  D002               	goto	u31480
 24655                           
 24656                           ; BSR set to: 1
 24657                           
 24658                           ; BSR set to: 1
 24659                           
 24660                           ; BSR set to: 1
 24661                           ;doprnt.c: 1138: break;
 24662  011EDA  2BAB               	incf	__doprnt@c& (0+255),f,b
 24663  011EDC  D7E1               	goto	l21969
 24664  011EDE                     u31480:
 24665                           
 24666                           ; BSR set to: 1
 24667                           ;doprnt.c: 1142: width -= prec + c + exp;
 24668                           
 24669                           ; BSR set to: 1
 24670  011EDE  C1AB  F188         	movff	__doprnt@c,??__doprnt
 24671  011EE2  6B89               	clrf	(??__doprnt+1)& (0+255),b
 24672  011EE4  BF88               	btfsc	??__doprnt& (0+255),7,b
 24673  011EE6  0789               	decf	(??__doprnt+1)& (0+255),f,b
 24674  011EE8  51A9               	movf	__doprnt@prec& (0+255),w,b
 24675  011EEA  2788               	addwf	??__doprnt& (0+255),f,b
 24676  011EEC  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 24677  011EEE  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24678  011EF0  5197               	movf	__doprnt@exp& (0+255),w,b
 24679  011EF2  2788               	addwf	??__doprnt& (0+255),f,b
 24680  011EF4  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 24681  011EF6  2389               	addwfc	(??__doprnt+1)& (0+255),f,b
 24682  011EF8  5188               	movf	??__doprnt& (0+255),w,b
 24683  011EFA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 24684  011EFC  5189               	movf	(??__doprnt+1)& (0+255),w,b
 24685  011EFE  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 24686                           
 24687                           ;doprnt.c: 1143: if(
 24688                           ;doprnt.c: 1147: prec)
 24689  011F00  51A9               	movf	__doprnt@prec& (0+255),w,b
 24690  011F02  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 24691  011F04  B4D8               	btfsc	status,2,c
 24692  011F06  D003               	goto	l2013
 24693                           
 24694                           ; BSR set to: 1
 24695                           ;doprnt.c: 1148: width--;
 24696  011F08  07A5               	decf	__doprnt@width& (0+255),f,b
 24697  011F0A  A0D8               	btfss	status,0,c
 24698  011F0C  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24699  011F0E                     l2013:
 24700                           
 24701                           ; BSR set to: 1
 24702                           ;doprnt.c: 1149: if(flag & 0x03)
 24703                           
 24704                           ; BSR set to: 1
 24705  011F0E  0E03               	movlw	3
 24706  011F10  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24707  011F12  6F88               	movwf	??__doprnt& (0+255),b
 24708  011F14  0E00               	movlw	0
 24709  011F16  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24710  011F18  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24711  011F1A  5188               	movf	??__doprnt& (0+255),w,b
 24712  011F1C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24713  011F1E  B4D8               	btfsc	status,2,c
 24714  011F20  D003               	goto	l2014
 24715                           
 24716                           ; BSR set to: 1
 24717                           ;doprnt.c: 1150: width--;
 24718  011F22  07A5               	decf	__doprnt@width& (0+255),f,b
 24719  011F24  A0D8               	btfss	status,0,c
 24720  011F26  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24721  011F28                     l2014:
 24722                           
 24723                           ; BSR set to: 1
 24724                           ;doprnt.c: 1153: if(flag & 0x04) {
 24725                           
 24726                           ; BSR set to: 1
 24727  011F28  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 24728  011F2A  D0B6               	goto	l2025
 24729                           
 24730                           ; BSR set to: 1
 24731                           ;doprnt.c: 1157: if(flag & 0x03)
 24732  011F2C  0E03               	movlw	3
 24733  011F2E  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24734  011F30  6F88               	movwf	??__doprnt& (0+255),b
 24735  011F32  0E00               	movlw	0
 24736  011F34  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24737  011F36  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24738  011F38  5188               	movf	??__doprnt& (0+255),w,b
 24739  011F3A  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24740  011F3C  B4D8               	btfsc	status,2,c
 24741  011F3E  D06C               	goto	l2019
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24745  011F40  EE20 F002          	lfsr	2,2
 24746  011F44  5182               	movf	__doprnt@pb& (0+255),w,b
 24747  011F46  26D9               	addwf	fsr2l,f,c
 24748  011F48  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24749  011F4A  22DA               	addwfc	fsr2h,f,c
 24750  011F4C  50DE               	movf	postinc2,w,c
 24751  011F4E  10DE               	iorwf	postinc2,w,c
 24752  011F50  10DE               	iorwf	postinc2,w,c
 24753  011F52  B4D8               	btfsc	status,2,c
 24754  011F54  D013               	goto	l2017
 24755                           
 24756                           ; BSR set to: 1
 24757  011F56  EE20 F002          	lfsr	2,2
 24758  011F5A  5182               	movf	__doprnt@pb& (0+255),w,b
 24759  011F5C  26D9               	addwf	fsr2l,f,c
 24760  011F5E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24761  011F60  22DA               	addwfc	fsr2h,f,c
 24762  011F62  D801               	call	u31548
 24763  011F64  D059               	goto	l2019
 24764  011F66                     u31548:
 24765  011F66  0005               	push	
 24766  011F68  6EFA               	movwf	pclath,c
 24767  011F6A  50DE               	movf	postinc2,w,c
 24768  011F6C  6EFD               	movwf	tosl,c
 24769  011F6E  50DE               	movf	postinc2,w,c
 24770  011F70  6EFE               	movwf	tosh,c
 24771  011F72  50DE               	movf	postinc2,w,c
 24772  011F74  6EFF               	movwf	tosu,c
 24773  011F76  50FA               	movf	pclath,w,c
 24774  011F78  0E2D               	movlw	45
 24775  011F7A  0012               	return		;indir
 24776  011F7C                     l2017:
 24777  011F7C  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24778  011F80  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24779  011F84  CFDE F188          	movff	postinc2,??__doprnt
 24780  011F88  CFDD F189          	movff	postdec2,??__doprnt+1
 24781  011F8C  C188  FFD9         	movff	??__doprnt,fsr2l
 24782  011F90  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24783  011F94  0E2D               	movlw	45
 24784  011F96  6EDF               	movwf	indf2,c
 24785  011F98  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24786  011F9C  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24787  011FA0  2ADE               	incf	postinc2,f,c
 24788  011FA2  0E00               	movlw	0
 24789  011FA4  22DD               	addwfc	postdec2,f,c
 24790                           
 24791                           ;doprnt.c: 1168: while(width > 0) {
 24792  011FA6  D038               	goto	l2019
 24793  011FA8                     l22001:
 24794                           
 24795                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 24796  011FA8  0101               	movlb	1	; () banked
 24797  011FAA  EE20 F002          	lfsr	2,2
 24798  011FAE  5182               	movf	__doprnt@pb& (0+255),w,b
 24799  011FB0  26D9               	addwf	fsr2l,f,c
 24800  011FB2  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24801  011FB4  22DA               	addwfc	fsr2h,f,c
 24802  011FB6  50DE               	movf	postinc2,w,c
 24803  011FB8  10DE               	iorwf	postinc2,w,c
 24804  011FBA  10DE               	iorwf	postinc2,w,c
 24805  011FBC  B4D8               	btfsc	status,2,c
 24806  011FBE  D013               	goto	l2021
 24807                           
 24808                           ; BSR set to: 1
 24809  011FC0  EE20 F002          	lfsr	2,2
 24810  011FC4  5182               	movf	__doprnt@pb& (0+255),w,b
 24811  011FC6  26D9               	addwf	fsr2l,f,c
 24812  011FC8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24813  011FCA  22DA               	addwfc	fsr2h,f,c
 24814  011FCC  D801               	call	u31568
 24815  011FCE  D020               	goto	l2022
 24816  011FD0                     u31568:
 24817  011FD0  0005               	push	
 24818  011FD2  6EFA               	movwf	pclath,c
 24819  011FD4  50DE               	movf	postinc2,w,c
 24820  011FD6  6EFD               	movwf	tosl,c
 24821  011FD8  50DE               	movf	postinc2,w,c
 24822  011FDA  6EFE               	movwf	tosh,c
 24823  011FDC  50DE               	movf	postinc2,w,c
 24824  011FDE  6EFF               	movwf	tosu,c
 24825  011FE0  50FA               	movf	pclath,w,c
 24826  011FE2  0E30               	movlw	48
 24827  011FE4  0012               	return		;indir
 24828  011FE6                     l2021:
 24829  011FE6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24830  011FEA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24831  011FEE  CFDE F188          	movff	postinc2,??__doprnt
 24832  011FF2  CFDD F189          	movff	postdec2,??__doprnt+1
 24833  011FF6  C188  FFD9         	movff	??__doprnt,fsr2l
 24834  011FFA  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24835  011FFE  0E30               	movlw	48
 24836  012000  6EDF               	movwf	indf2,c
 24837  012002  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24838  012006  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24839  01200A  2ADE               	incf	postinc2,f,c
 24840  01200C  0E00               	movlw	0
 24841  01200E  22DD               	addwfc	postdec2,f,c
 24842  012010                     l2022:
 24843                           
 24844                           ;doprnt.c: 1170: width--;
 24845  012010  0101               	movlb	1	; () banked
 24846  012012  07A5               	decf	__doprnt@width& (0+255),f,b
 24847  012014  A0D8               	btfss	status,0,c
 24848  012016  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24849  012018                     l2019:
 24850                           
 24851                           ; BSR set to: 1
 24852  012018  0101               	movlb	1	; () banked
 24853  01201A  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24854  01201C  D0F6               	goto	l2036
 24855  01201E  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24856  012020  E1C3               	bnz	l22001
 24857  012022  05A5               	decf	__doprnt@width& (0+255),w,b
 24858  012024  A0D8               	btfss	status,0,c
 24859  012026  D0F1               	goto	l2036
 24860  012028  D7BF               	goto	l2020
 24861  01202A                     l22013:
 24862                           
 24863                           ; BSR set to: 1
 24864                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 24865  01202A  EE20 F002          	lfsr	2,2
 24866  01202E  5182               	movf	__doprnt@pb& (0+255),w,b
 24867  012030  26D9               	addwf	fsr2l,f,c
 24868  012032  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24869  012034  22DA               	addwfc	fsr2h,f,c
 24870  012036  50DE               	movf	postinc2,w,c
 24871  012038  10DE               	iorwf	postinc2,w,c
 24872  01203A  10DE               	iorwf	postinc2,w,c
 24873  01203C  B4D8               	btfsc	status,2,c
 24874  01203E  D013               	goto	l2027
 24875                           
 24876                           ; BSR set to: 1
 24877  012040  EE20 F002          	lfsr	2,2
 24878  012044  5182               	movf	__doprnt@pb& (0+255),w,b
 24879  012046  26D9               	addwf	fsr2l,f,c
 24880  012048  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24881  01204A  22DA               	addwfc	fsr2h,f,c
 24882  01204C  D801               	call	u31598
 24883  01204E  D020               	goto	l2028
 24884  012050                     u31598:
 24885  012050  0005               	push	
 24886  012052  6EFA               	movwf	pclath,c
 24887  012054  50DE               	movf	postinc2,w,c
 24888  012056  6EFD               	movwf	tosl,c
 24889  012058  50DE               	movf	postinc2,w,c
 24890  01205A  6EFE               	movwf	tosh,c
 24891  01205C  50DE               	movf	postinc2,w,c
 24892  01205E  6EFF               	movwf	tosu,c
 24893  012060  50FA               	movf	pclath,w,c
 24894  012062  0E20               	movlw	32
 24895  012064  0012               	return		;indir
 24896  012066                     l2027:
 24897  012066  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24898  01206A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24899  01206E  CFDE F188          	movff	postinc2,??__doprnt
 24900  012072  CFDD F189          	movff	postdec2,??__doprnt+1
 24901  012076  C188  FFD9         	movff	??__doprnt,fsr2l
 24902  01207A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24903  01207E  0E20               	movlw	32
 24904  012080  6EDF               	movwf	indf2,c
 24905  012082  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24906  012086  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24907  01208A  2ADE               	incf	postinc2,f,c
 24908  01208C  0E00               	movlw	0
 24909  01208E  22DD               	addwfc	postdec2,f,c
 24910  012090                     l2028:
 24911                           
 24912                           ;doprnt.c: 1182: width--;
 24913  012090  0101               	movlb	1	; () banked
 24914  012092  07A5               	decf	__doprnt@width& (0+255),f,b
 24915  012094  A0D8               	btfss	status,0,c
 24916  012096  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 24917  012098                     l2025:
 24918                           
 24919                           ; BSR set to: 1
 24920                           
 24921                           ; BSR set to: 1
 24922  012098  BFA6               	btfsc	(__doprnt@width+1)& (0+255),7,b
 24923  01209A  D005               	goto	u31600
 24924  01209C  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 24925  01209E  E1C5               	bnz	l22013
 24926  0120A0  05A5               	decf	__doprnt@width& (0+255),w,b
 24927  0120A2  B0D8               	btfsc	status,0,c
 24928  0120A4  D7C2               	goto	l2026
 24929  0120A6                     u31600:
 24930                           
 24931                           ; BSR set to: 1
 24932                           ;doprnt.c: 1183: }
 24933                           ;doprnt.c: 1188: if(flag & 0x03)
 24934                           
 24935                           ; BSR set to: 1
 24936  0120A6  0E03               	movlw	3
 24937  0120A8  15A7               	andwf	__doprnt@flag& (0+255),w,b
 24938  0120AA  6F88               	movwf	??__doprnt& (0+255),b
 24939  0120AC  0E00               	movlw	0
 24940  0120AE  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 24941  0120B0  6F89               	movwf	(??__doprnt+1)& (0+255),b
 24942  0120B2  5188               	movf	??__doprnt& (0+255),w,b
 24943  0120B4  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 24944  0120B6  B4D8               	btfsc	status,2,c
 24945  0120B8  D0A8               	goto	l2036
 24946                           
 24947                           ; BSR set to: 1
 24948                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 24949  0120BA  EE20 F002          	lfsr	2,2
 24950  0120BE  5182               	movf	__doprnt@pb& (0+255),w,b
 24951  0120C0  26D9               	addwf	fsr2l,f,c
 24952  0120C2  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24953  0120C4  22DA               	addwfc	fsr2h,f,c
 24954  0120C6  50DE               	movf	postinc2,w,c
 24955  0120C8  10DE               	iorwf	postinc2,w,c
 24956  0120CA  10DE               	iorwf	postinc2,w,c
 24957  0120CC  B4D8               	btfsc	status,2,c
 24958  0120CE  D013               	goto	l2031
 24959                           
 24960                           ; BSR set to: 1
 24961  0120D0  EE20 F002          	lfsr	2,2
 24962  0120D4  5182               	movf	__doprnt@pb& (0+255),w,b
 24963  0120D6  26D9               	addwf	fsr2l,f,c
 24964  0120D8  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 24965  0120DA  22DA               	addwfc	fsr2h,f,c
 24966  0120DC  D801               	call	u31638
 24967  0120DE  D095               	goto	l2036
 24968  0120E0                     u31638:
 24969  0120E0  0005               	push	
 24970  0120E2  6EFA               	movwf	pclath,c
 24971  0120E4  50DE               	movf	postinc2,w,c
 24972  0120E6  6EFD               	movwf	tosl,c
 24973  0120E8  50DE               	movf	postinc2,w,c
 24974  0120EA  6EFE               	movwf	tosh,c
 24975  0120EC  50DE               	movf	postinc2,w,c
 24976  0120EE  6EFF               	movwf	tosu,c
 24977  0120F0  50FA               	movf	pclath,w,c
 24978  0120F2  0E2D               	movlw	45
 24979  0120F4  0012               	return		;indir
 24980  0120F6                     l2031:
 24981  0120F6  C182  FFD9         	movff	__doprnt@pb,fsr2l
 24982  0120FA  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 24983  0120FE  CFDE F188          	movff	postinc2,??__doprnt
 24984  012102  CFDD F189          	movff	postdec2,??__doprnt+1
 24985  012106  C188  FFD9         	movff	??__doprnt,fsr2l
 24986  01210A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 24987  01210E  0E2D               	movlw	45
 24988  012110  D074               	goto	L4
 24989  012112                     
 24990                           ;doprnt.c: 1200: {
 24991                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 24992  012112  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 24993  012116  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 24994  01211A  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 24995  01211E  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 24996  012122  0101               	movlb	1	; () banked
 24997  012124  51AB               	movf	__doprnt@c& (0+255),w,b
 24998  012126  0D04               	mullw	4
 24999  012128  0E0B               	movlw	low _dpowers
 25000  01212A  24F3               	addwf	prodl,w,c
 25001  01212C  6EF6               	movwf	tblptrl,c
 25002  01212E  0ECF               	movlw	high _dpowers
 25003  012130  20F4               	addwfc	prodh,w,c
 25004  012132  6EF7               	movwf	tblptrh,c
 25005  012134                     	if	1	;There are 3 active tblptr bytes
 25006  012134  6AF8               	clrf	tblptru,c
 25007  012136  0E00               	movlw	low (__mediumconst shr (0+16))
 25008  012138  22F8               	addwfc	tblptru,f,c
 25009  01213A                     	endif
 25010  01213A  0009               	tblrd		*+
 25011  01213C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25012  012140  0009               	tblrd		*+
 25013  012142  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25014  012146  0009               	tblrd		*+
 25015  012148  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25016  01214C  000A               	tblrd		*-
 25017  01214E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25018  012152  EC68  F0CD         	call	___lldiv
 25019  012156  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 25020  01215A  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 25021  01215E  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 25022  012162  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 25023                           
 25024                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25025  012166  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 25026  01216A  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 25027  01216E  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 25028  012172  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 25029  012176  0E0A               	movlw	10
 25030  012178  0101               	movlb	1	; () banked
 25031  01217A  6F28               	movwf	___llmod@divisor& (0+255),b
 25032  01217C  0E00               	movlw	0
 25033  01217E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25034  012180  0E00               	movlw	0
 25035  012182  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25036  012184  0E00               	movlw	0
 25037  012186  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25038  012188  EC31  F0D0         	call	___llmod	;wreg free
 25039  01218C  C124  F199         	movff	?___llmod,__doprnt@tmpval
 25040  012190  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 25041  012194  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 25042  012198  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 25043                           
 25044                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 25045  01219C  0101               	movlb	1	; () banked
 25046  01219E  EE20 F002          	lfsr	2,2
 25047  0121A2  5182               	movf	__doprnt@pb& (0+255),w,b
 25048  0121A4  26D9               	addwf	fsr2l,f,c
 25049  0121A6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25050  0121A8  22DA               	addwfc	fsr2h,f,c
 25051  0121AA  50DE               	movf	postinc2,w,c
 25052  0121AC  10DE               	iorwf	postinc2,w,c
 25053  0121AE  10DE               	iorwf	postinc2,w,c
 25054  0121B0  B4D8               	btfsc	status,2,c
 25055  0121B2  D014               	goto	l2035
 25056                           
 25057                           ; BSR set to: 1
 25058  0121B4  EE20 F002          	lfsr	2,2
 25059  0121B8  5182               	movf	__doprnt@pb& (0+255),w,b
 25060  0121BA  26D9               	addwf	fsr2l,f,c
 25061  0121BC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25062  0121BE  22DA               	addwfc	fsr2h,f,c
 25063  0121C0  D801               	call	u31658
 25064  0121C2  D023               	goto	l2036
 25065  0121C4                     u31658:
 25066  0121C4  0005               	push	
 25067  0121C6  6EFA               	movwf	pclath,c
 25068  0121C8  50DE               	movf	postinc2,w,c
 25069  0121CA  6EFD               	movwf	tosl,c
 25070  0121CC  50DE               	movf	postinc2,w,c
 25071  0121CE  6EFE               	movwf	tosh,c
 25072  0121D0  50DE               	movf	postinc2,w,c
 25073  0121D2  6EFF               	movwf	tosu,c
 25074  0121D4  50FA               	movf	pclath,w,c
 25075  0121D6  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25076  0121D8  0F30               	addlw	48
 25077  0121DA  0012               	return		;indir
 25078  0121DC                     l2035:
 25079  0121DC  0101               	movlb	1	; () banked
 25080  0121DE  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25081  0121E0  0F30               	addlw	48
 25082  0121E2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25083  0121E6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25084  0121EA  CFDE F188          	movff	postinc2,??__doprnt
 25085  0121EE  CFDD F189          	movff	postdec2,??__doprnt+1
 25086  0121F2  C188  FFD9         	movff	??__doprnt,fsr2l
 25087  0121F6  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25088  0121FA                     L4:
 25089  0121FA  6EDF               	movwf	indf2,c
 25090  0121FC  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25091  012200  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25092  012204  2ADE               	incf	postinc2,f,c
 25093  012206  0E00               	movlw	0
 25094  012208  22DD               	addwfc	postdec2,f,c
 25095  01220A                     l2036:
 25096                           
 25097                           ; BSR set to: 1
 25098                           
 25099                           ; BSR set to: 1
 25100  01220A  0101               	movlb	1	; () banked
 25101  01220C  07AB               	decf	__doprnt@c& (0+255),f,b
 25102  01220E  29AB               	incf	__doprnt@c& (0+255),w,b
 25103  012210  B4D8               	btfsc	status,2,c
 25104  012212  D038               	goto	l2038
 25105  012214  D77E               	goto	l2034
 25106  012216                     l22047:
 25107                           
 25108                           ; BSR set to: 1
 25109                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25110  012216  EE20 F002          	lfsr	2,2
 25111  01221A  5182               	movf	__doprnt@pb& (0+255),w,b
 25112  01221C  26D9               	addwf	fsr2l,f,c
 25113  01221E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25114  012220  22DA               	addwfc	fsr2h,f,c
 25115  012222  50DE               	movf	postinc2,w,c
 25116  012224  10DE               	iorwf	postinc2,w,c
 25117  012226  10DE               	iorwf	postinc2,w,c
 25118  012228  B4D8               	btfsc	status,2,c
 25119  01222A  D013               	goto	l2040
 25120                           
 25121                           ; BSR set to: 1
 25122  01222C  EE20 F002          	lfsr	2,2
 25123  012230  5182               	movf	__doprnt@pb& (0+255),w,b
 25124  012232  26D9               	addwf	fsr2l,f,c
 25125  012234  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25126  012236  22DA               	addwfc	fsr2h,f,c
 25127  012238  D801               	call	u31688
 25128  01223A  D020               	goto	l2041
 25129  01223C                     u31688:
 25130  01223C  0005               	push	
 25131  01223E  6EFA               	movwf	pclath,c
 25132  012240  50DE               	movf	postinc2,w,c
 25133  012242  6EFD               	movwf	tosl,c
 25134  012244  50DE               	movf	postinc2,w,c
 25135  012246  6EFE               	movwf	tosh,c
 25136  012248  50DE               	movf	postinc2,w,c
 25137  01224A  6EFF               	movwf	tosu,c
 25138  01224C  50FA               	movf	pclath,w,c
 25139  01224E  0E30               	movlw	48
 25140  012250  0012               	return		;indir
 25141  012252                     l2040:
 25142  012252  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25143  012256  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25144  01225A  CFDE F188          	movff	postinc2,??__doprnt
 25145  01225E  CFDD F189          	movff	postdec2,??__doprnt+1
 25146  012262  C188  FFD9         	movff	??__doprnt,fsr2l
 25147  012266  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25148  01226A  0E30               	movlw	48
 25149  01226C  6EDF               	movwf	indf2,c
 25150  01226E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25151  012272  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25152  012276  2ADE               	incf	postinc2,f,c
 25153  012278  0E00               	movlw	0
 25154  01227A  22DD               	addwfc	postdec2,f,c
 25155  01227C                     l2041:
 25156                           
 25157                           ;doprnt.c: 1209: exp--;
 25158  01227C  0101               	movlb	1	; () banked
 25159  01227E  0797               	decf	__doprnt@exp& (0+255),f,b
 25160  012280  A0D8               	btfss	status,0,c
 25161  012282  0798               	decf	(__doprnt@exp+1)& (0+255),f,b
 25162  012284                     l2038:
 25163                           
 25164                           ; BSR set to: 1
 25165                           
 25166                           ; BSR set to: 1
 25167  012284  BF98               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 25168  012286  D005               	goto	u31690
 25169  012288  5198               	movf	(__doprnt@exp+1)& (0+255),w,b
 25170  01228A  E1C5               	bnz	l22047
 25171  01228C  0597               	decf	__doprnt@exp& (0+255),w,b
 25172  01228E  B0D8               	btfsc	status,0,c
 25173  012290  D7C2               	goto	l2039
 25174  012292                     u31690:
 25175                           
 25176                           ; BSR set to: 1
 25177                           ;doprnt.c: 1210: }
 25178                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25179                           
 25180                           ; BSR set to: 1
 25181  012292  BFAA               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 25182  012294  D009               	goto	l2043
 25183  012296  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25184  012298  E104               	bnz	u31700
 25185  01229A  0E09               	movlw	9
 25186  01229C  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25187  01229E  A0D8               	btfss	status,0,c
 25188  0122A0  D003               	goto	l2043
 25189  0122A2                     u31700:
 25190                           
 25191                           ; BSR set to: 1
 25192                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25193  0122A2  0E08               	movlw	8
 25194  0122A4  6FAB               	movwf	__doprnt@c& (0+255),b
 25195  0122A6  D002               	goto	l2044
 25196  0122A8                     l2043:
 25197                           
 25198                           ; BSR set to: 1
 25199                           ;doprnt.c: 1213: else
 25200                           ;doprnt.c: 1214: c = prec;
 25201  0122A8  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 25202  0122AC                     l2044:
 25203                           
 25204                           ; BSR set to: 1
 25205                           ;doprnt.c: 1215: prec -= c;
 25206                           
 25207                           ; BSR set to: 1
 25208  0122AC  51AB               	movf	__doprnt@c& (0+255),w,b
 25209  0122AE  5FA9               	subwf	__doprnt@prec& (0+255),f,b
 25210  0122B0  0E00               	movlw	0
 25211  0122B2  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25212  0122B4  0EFF               	movlw	255
 25213  0122B6  5BAA               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 25214                           
 25215                           ; BSR set to: 1
 25216                           ;doprnt.c: 1219: if(c)
 25217  0122B8  51AB               	movf	__doprnt@c& (0+255),w,b
 25218  0122BA  B4D8               	btfsc	status,2,c
 25219  0122BC  D033               	goto	l2047
 25220                           
 25221                           ; BSR set to: 1
 25222                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 25223  0122BE  EE20 F002          	lfsr	2,2
 25224  0122C2  5182               	movf	__doprnt@pb& (0+255),w,b
 25225  0122C4  26D9               	addwf	fsr2l,f,c
 25226  0122C6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25227  0122C8  22DA               	addwfc	fsr2h,f,c
 25228  0122CA  50DE               	movf	postinc2,w,c
 25229  0122CC  10DE               	iorwf	postinc2,w,c
 25230  0122CE  10DE               	iorwf	postinc2,w,c
 25231  0122D0  B4D8               	btfsc	status,2,c
 25232  0122D2  D013               	goto	l2046
 25233                           
 25234                           ; BSR set to: 1
 25235  0122D4  EE20 F002          	lfsr	2,2
 25236  0122D8  5182               	movf	__doprnt@pb& (0+255),w,b
 25237  0122DA  26D9               	addwf	fsr2l,f,c
 25238  0122DC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25239  0122DE  22DA               	addwfc	fsr2h,f,c
 25240  0122E0  D801               	call	u31738
 25241  0122E2  D020               	goto	l2047
 25242  0122E4                     u31738:
 25243  0122E4  0005               	push	
 25244  0122E6  6EFA               	movwf	pclath,c
 25245  0122E8  50DE               	movf	postinc2,w,c
 25246  0122EA  6EFD               	movwf	tosl,c
 25247  0122EC  50DE               	movf	postinc2,w,c
 25248  0122EE  6EFE               	movwf	tosh,c
 25249  0122F0  50DE               	movf	postinc2,w,c
 25250  0122F2  6EFF               	movwf	tosu,c
 25251  0122F4  50FA               	movf	pclath,w,c
 25252  0122F6  0E2E               	movlw	46
 25253  0122F8  0012               	return		;indir
 25254  0122FA                     l2046:
 25255  0122FA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25256  0122FE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25257  012302  CFDE F188          	movff	postinc2,??__doprnt
 25258  012306  CFDD F189          	movff	postdec2,??__doprnt+1
 25259  01230A  C188  FFD9         	movff	??__doprnt,fsr2l
 25260  01230E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25261  012312  0E2E               	movlw	46
 25262  012314  6EDF               	movwf	indf2,c
 25263  012316  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25264  01231A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25265  01231E  2ADE               	incf	postinc2,f,c
 25266  012320  0E00               	movlw	0
 25267  012322  22DD               	addwfc	postdec2,f,c
 25268  012324                     l2047:
 25269                           
 25270                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25271  012324  0101               	movlb	1	; () banked
 25272  012326  51AB               	movf	__doprnt@c& (0+255),w,b
 25273  012328  EC9E  F0A5         	call	_scale
 25274  01232C  C16F  F18E         	movff	?_scale,__doprnt$5190
 25275  012330  C170  F18F         	movff	?_scale+1,__doprnt$5190+1
 25276  012334  C171  F190         	movff	?_scale+2,__doprnt$5190+2
 25277  012338  C172  F191         	movff	?_scale+3,__doprnt$5190+3
 25278                           
 25279                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25280  01233C  C19D  F15A         	movff	__doprnt@fval,___flmul@a
 25281  012340  C19E  F15B         	movff	__doprnt@fval+1,___flmul@a+1
 25282  012344  C19F  F15C         	movff	__doprnt@fval+2,___flmul@a+2
 25283  012348  C1A0  F15D         	movff	__doprnt@fval+3,___flmul@a+3
 25284  01234C  C18E  F156         	movff	__doprnt$5190,___flmul@b
 25285  012350  C18F  F157         	movff	__doprnt$5190+1,___flmul@b+1
 25286  012354  C190  F158         	movff	__doprnt$5190+2,___flmul@b+2
 25287  012358  C191  F159         	movff	__doprnt$5190+3,___flmul@b+3
 25288  01235C  ECE4  F0AB         	call	___flmul	;wreg free
 25289  012360  C156  F178         	movff	?___flmul,___fltol@f1
 25290  012364  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 25291  012368  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 25292  01236C  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 25293  012370  EC00  F0C9         	call	___fltol	;wreg free
 25294  012374  C178  F1A1         	movff	?___fltol,__doprnt@val
 25295  012378  C179  F1A2         	movff	?___fltol+1,__doprnt@val+1
 25296  01237C  C17A  F1A3         	movff	?___fltol+2,__doprnt@val+2
 25297  012380  C17B  F1A4         	movff	?___fltol+3,__doprnt@val+3
 25298                           
 25299                           ;doprnt.c: 1228: while(c--) {
 25300  012384  D0A6               	goto	l2048
 25301  012386                     
 25302                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25303  012386  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 25304  01238A  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 25305  01238E  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 25306  012392  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 25307  012396  0101               	movlb	1	; () banked
 25308  012398  51AB               	movf	__doprnt@c& (0+255),w,b
 25309  01239A  0D04               	mullw	4
 25310  01239C  0E0B               	movlw	low _dpowers
 25311  01239E  24F3               	addwf	prodl,w,c
 25312  0123A0  6EF6               	movwf	tblptrl,c
 25313  0123A2  0ECF               	movlw	high _dpowers
 25314  0123A4  20F4               	addwfc	prodh,w,c
 25315  0123A6  6EF7               	movwf	tblptrh,c
 25316  0123A8                     	if	1	;There are 3 active tblptr bytes
 25317  0123A8  6AF8               	clrf	tblptru,c
 25318  0123AA  0E00               	movlw	low (__mediumconst shr (0+16))
 25319  0123AC  22F8               	addwfc	tblptru,f,c
 25320  0123AE                     	endif
 25321  0123AE  0009               	tblrd		*+
 25322  0123B0  CFF5 F11B          	movff	tablat,___lldiv@divisor
 25323  0123B4  0009               	tblrd		*+
 25324  0123B6  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 25325  0123BA  0009               	tblrd		*+
 25326  0123BC  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 25327  0123C0  000A               	tblrd		*-
 25328  0123C2  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 25329  0123C6  EC68  F0CD         	call	___lldiv	;wreg free
 25330  0123CA  C117  F199         	movff	?___lldiv,__doprnt@tmpval
 25331  0123CE  C118  F19A         	movff	?___lldiv+1,__doprnt@tmpval+1
 25332  0123D2  C119  F19B         	movff	?___lldiv+2,__doprnt@tmpval+2
 25333  0123D6  C11A  F19C         	movff	?___lldiv+3,__doprnt@tmpval+3
 25334                           
 25335                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25336  0123DA  C199  F124         	movff	__doprnt@tmpval,___llmod@dividend
 25337  0123DE  C19A  F125         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 25338  0123E2  C19B  F126         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 25339  0123E6  C19C  F127         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 25340  0123EA  0E0A               	movlw	10
 25341  0123EC  0101               	movlb	1	; () banked
 25342  0123EE  6F28               	movwf	___llmod@divisor& (0+255),b
 25343  0123F0  0E00               	movlw	0
 25344  0123F2  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 25345  0123F4  0E00               	movlw	0
 25346  0123F6  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 25347  0123F8  0E00               	movlw	0
 25348  0123FA  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 25349  0123FC  EC31  F0D0         	call	___llmod	;wreg free
 25350  012400  C124  F199         	movff	?___llmod,__doprnt@tmpval
 25351  012404  C125  F19A         	movff	?___llmod+1,__doprnt@tmpval+1
 25352  012408  C126  F19B         	movff	?___llmod+2,__doprnt@tmpval+2
 25353  01240C  C127  F19C         	movff	?___llmod+3,__doprnt@tmpval+3
 25354                           
 25355                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 25356  012410  0101               	movlb	1	; () banked
 25357  012412  EE20 F002          	lfsr	2,2
 25358  012416  5182               	movf	__doprnt@pb& (0+255),w,b
 25359  012418  26D9               	addwf	fsr2l,f,c
 25360  01241A  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25361  01241C  22DA               	addwfc	fsr2h,f,c
 25362  01241E  50DE               	movf	postinc2,w,c
 25363  012420  10DE               	iorwf	postinc2,w,c
 25364  012422  10DE               	iorwf	postinc2,w,c
 25365  012424  B4D8               	btfsc	status,2,c
 25366  012426  D014               	goto	l2050
 25367                           
 25368                           ; BSR set to: 1
 25369  012428  EE20 F002          	lfsr	2,2
 25370  01242C  5182               	movf	__doprnt@pb& (0+255),w,b
 25371  01242E  26D9               	addwf	fsr2l,f,c
 25372  012430  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25373  012432  22DA               	addwfc	fsr2h,f,c
 25374  012434  D801               	call	u31758
 25375  012436  D023               	goto	l2051
 25376  012438                     u31758:
 25377  012438  0005               	push	
 25378  01243A  6EFA               	movwf	pclath,c
 25379  01243C  50DE               	movf	postinc2,w,c
 25380  01243E  6EFD               	movwf	tosl,c
 25381  012440  50DE               	movf	postinc2,w,c
 25382  012442  6EFE               	movwf	tosh,c
 25383  012444  50DE               	movf	postinc2,w,c
 25384  012446  6EFF               	movwf	tosu,c
 25385  012448  50FA               	movf	pclath,w,c
 25386  01244A  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25387  01244C  0F30               	addlw	48
 25388  01244E  0012               	return		;indir
 25389  012450                     l2050:
 25390  012450  0101               	movlb	1	; () banked
 25391  012452  5199               	movf	__doprnt@tmpval& (0+255),w,b
 25392  012454  0F30               	addlw	48
 25393  012456  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25394  01245A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25395  01245E  CFDE F188          	movff	postinc2,??__doprnt
 25396  012462  CFDD F189          	movff	postdec2,??__doprnt+1
 25397  012466  C188  FFD9         	movff	??__doprnt,fsr2l
 25398  01246A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25399  01246E  6EDF               	movwf	indf2,c
 25400  012470  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25401  012474  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25402  012478  2ADE               	incf	postinc2,f,c
 25403  01247A  0E00               	movlw	0
 25404  01247C  22DD               	addwfc	postdec2,f,c
 25405  01247E                     l2051:
 25406                           
 25407                           ;doprnt.c: 1232: val %= dpowers[c];
 25408                           
 25409                           ; BSR set to: 1
 25410  01247E  C1A1  F124         	movff	__doprnt@val,___llmod@dividend
 25411  012482  C1A2  F125         	movff	__doprnt@val+1,___llmod@dividend+1
 25412  012486  C1A3  F126         	movff	__doprnt@val+2,___llmod@dividend+2
 25413  01248A  C1A4  F127         	movff	__doprnt@val+3,___llmod@dividend+3
 25414  01248E  0101               	movlb	1	; () banked
 25415  012490  51AB               	movf	__doprnt@c& (0+255),w,b
 25416  012492  0D04               	mullw	4
 25417  012494  0E0B               	movlw	low _dpowers
 25418  012496  24F3               	addwf	prodl,w,c
 25419  012498  6EF6               	movwf	tblptrl,c
 25420  01249A  0ECF               	movlw	high _dpowers
 25421  01249C  20F4               	addwfc	prodh,w,c
 25422  01249E  6EF7               	movwf	tblptrh,c
 25423  0124A0                     	if	1	;There are 3 active tblptr bytes
 25424  0124A0  6AF8               	clrf	tblptru,c
 25425  0124A2  0E00               	movlw	low (__mediumconst shr (0+16))
 25426  0124A4  22F8               	addwfc	tblptru,f,c
 25427  0124A6                     	endif
 25428  0124A6  0009               	tblrd		*+
 25429  0124A8  CFF5 F128          	movff	tablat,___llmod@divisor
 25430  0124AC  0009               	tblrd		*+
 25431  0124AE  CFF5 F129          	movff	tablat,___llmod@divisor+1
 25432  0124B2  0009               	tblrd		*+
 25433  0124B4  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 25434  0124B8  000A               	tblrd		*-
 25435  0124BA  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 25436  0124BE  EC31  F0D0         	call	___llmod
 25437  0124C2  C124  F1A1         	movff	?___llmod,__doprnt@val
 25438  0124C6  C125  F1A2         	movff	?___llmod+1,__doprnt@val+1
 25439  0124CA  C126  F1A3         	movff	?___llmod+2,__doprnt@val+2
 25440  0124CE  C127  F1A4         	movff	?___llmod+3,__doprnt@val+3
 25441  0124D2                     l2048:
 25442  0124D2  0101               	movlb	1	; () banked
 25443  0124D4  07AB               	decf	__doprnt@c& (0+255),f,b
 25444  0124D6  29AB               	incf	__doprnt@c& (0+255),w,b
 25445  0124D8  B4D8               	btfsc	status,2,c
 25446  0124DA  D038               	goto	l2053
 25447  0124DC  D754               	goto	l2049
 25448  0124DE                     
 25449                           ; BSR set to: 1
 25450                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 25451                           
 25452                           ; BSR set to: 1
 25453  0124DE  EE20 F002          	lfsr	2,2
 25454  0124E2  5182               	movf	__doprnt@pb& (0+255),w,b
 25455  0124E4  26D9               	addwf	fsr2l,f,c
 25456  0124E6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25457  0124E8  22DA               	addwfc	fsr2h,f,c
 25458  0124EA  50DE               	movf	postinc2,w,c
 25459  0124EC  10DE               	iorwf	postinc2,w,c
 25460  0124EE  10DE               	iorwf	postinc2,w,c
 25461  0124F0  B4D8               	btfsc	status,2,c
 25462  0124F2  D013               	goto	l2055
 25463                           
 25464                           ; BSR set to: 1
 25465  0124F4  EE20 F002          	lfsr	2,2
 25466  0124F8  5182               	movf	__doprnt@pb& (0+255),w,b
 25467  0124FA  26D9               	addwf	fsr2l,f,c
 25468  0124FC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 25469  0124FE  22DA               	addwfc	fsr2h,f,c
 25470  012500  D801               	call	u31788
 25471  012502  D020               	goto	l2056
 25472  012504                     u31788:
 25473  012504  0005               	push	
 25474  012506  6EFA               	movwf	pclath,c
 25475  012508  50DE               	movf	postinc2,w,c
 25476  01250A  6EFD               	movwf	tosl,c
 25477  01250C  50DE               	movf	postinc2,w,c
 25478  01250E  6EFE               	movwf	tosh,c
 25479  012510  50DE               	movf	postinc2,w,c
 25480  012512  6EFF               	movwf	tosu,c
 25481  012514  50FA               	movf	pclath,w,c
 25482  012516  0E30               	movlw	48
 25483  012518  0012               	return		;indir
 25484  01251A                     l2055:
 25485  01251A  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25486  01251E  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25487  012522  CFDE F188          	movff	postinc2,??__doprnt
 25488  012526  CFDD F189          	movff	postdec2,??__doprnt+1
 25489  01252A  C188  FFD9         	movff	??__doprnt,fsr2l
 25490  01252E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25491  012532  0E30               	movlw	48
 25492  012534  6EDF               	movwf	indf2,c
 25493  012536  C182  FFD9         	movff	__doprnt@pb,fsr2l
 25494  01253A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 25495  01253E  2ADE               	incf	postinc2,f,c
 25496  012540  0E00               	movlw	0
 25497  012542  22DD               	addwfc	postdec2,f,c
 25498  012544                     l2056:
 25499                           
 25500                           ;doprnt.c: 1237: prec--;
 25501  012544  0101               	movlb	1	; () banked
 25502  012546  07A9               	decf	__doprnt@prec& (0+255),f,b
 25503  012548  A0D8               	btfss	status,0,c
 25504  01254A  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25505  01254C                     l2053:
 25506                           
 25507                           ; BSR set to: 1
 25508                           
 25509                           ; BSR set to: 1
 25510  01254C  51A9               	movf	__doprnt@prec& (0+255),w,b
 25511  01254E  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25512  012550  B4D8               	btfsc	status,2,c
 25513  012552  D2ED               	goto	u32160
 25514  012554  D7C4               	goto	l2054
 25515  012556                     l1991:
 25516                           
 25517                           ; BSR set to: 1
 25518                           ;doprnt.c: 1246: }
 25519                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25520                           
 25521                           ; BSR set to: 1
 25522  012556  0EC0               	movlw	192
 25523  012558  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25524  01255A  6F88               	movwf	??__doprnt& (0+255),b
 25525  01255C  0E00               	movlw	0
 25526  01255E  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25527  012560  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25528  012562  5188               	movf	??__doprnt& (0+255),w,b
 25529  012564  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25530  012566  A4D8               	btfss	status,2,c
 25531  012568  D041               	goto	l2058
 25532                           
 25533                           ; BSR set to: 1
 25534                           ;doprnt.c: 1253: {
 25535                           ;doprnt.c: 1255: if(flag & 0x10)
 25536  01256A  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25537  01256C  D019               	goto	l2059
 25538                           
 25539                           ; BSR set to: 1
 25540                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 25541  01256E  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25542  012572  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25543  012576  CFDF F188          	movff	indf2,??__doprnt
 25544  01257A  0E04               	movlw	4
 25545  01257C  26DE               	addwf	postinc2,f,c
 25546  01257E  CFDF F189          	movff	indf2,??__doprnt+1
 25547  012582  0E00               	movlw	0
 25548  012584  22DD               	addwfc	postdec2,f,c
 25549  012586  C188  FFD9         	movff	??__doprnt,fsr2l
 25550  01258A  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25551  01258E  CFDE F1A1          	movff	postinc2,__doprnt@val
 25552  012592  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25553  012596  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25554  01259A  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25555  01259E  D019               	goto	l2060
 25556  0125A0                     l2059:
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;doprnt.c: 1257: else
 25560                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25561                           
 25562                           ; BSR set to: 1
 25563  0125A0  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25564  0125A4  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25565  0125A8  CFDF F188          	movff	indf2,??__doprnt
 25566  0125AC  0E02               	movlw	2
 25567  0125AE  26DE               	addwf	postinc2,f,c
 25568  0125B0  CFDF F189          	movff	indf2,??__doprnt+1
 25569  0125B4  0E00               	movlw	0
 25570  0125B6  22DD               	addwfc	postdec2,f,c
 25571  0125B8  C188  FFD9         	movff	??__doprnt,fsr2l
 25572  0125BC  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25573  0125C0  CFDE F1A1          	movff	postinc2,__doprnt@val
 25574  0125C4  CFDD F1A2          	movff	postdec2,__doprnt@val+1
 25575  0125C8  0E00               	movlw	0
 25576  0125CA  BFA2               	btfsc	(__doprnt@val+1)& (0+255),7,b
 25577  0125CC  0EFF               	movlw	-1
 25578  0125CE  6FA3               	movwf	(__doprnt@val+2)& (0+255),b
 25579  0125D0  6FA4               	movwf	(__doprnt@val+3)& (0+255),b
 25580  0125D2                     l2060:
 25581                           
 25582                           ; BSR set to: 1
 25583                           ;doprnt.c: 1261: if((long)val < 0) {
 25584                           
 25585                           ; BSR set to: 1
 25586  0125D2  AFA4               	btfss	(__doprnt@val+3)& (0+255),7,b
 25587  0125D4  D040               	goto	l2064
 25588                           
 25589                           ; BSR set to: 1
 25590                           ;doprnt.c: 1262: flag |= 0x03;
 25591  0125D6  0E03               	movlw	3
 25592  0125D8  13A7               	iorwf	__doprnt@flag& (0+255),f,b
 25593                           
 25594                           ; BSR set to: 1
 25595                           ;doprnt.c: 1263: val = -val;
 25596  0125DA  1FA4               	comf	(__doprnt@val+3)& (0+255),f,b
 25597  0125DC  1FA3               	comf	(__doprnt@val+2)& (0+255),f,b
 25598  0125DE  1FA2               	comf	(__doprnt@val+1)& (0+255),f,b
 25599  0125E0  6DA1               	negf	__doprnt@val& (0+255),b
 25600  0125E2  0E00               	movlw	0
 25601  0125E4  23A2               	addwfc	(__doprnt@val+1)& (0+255),f,b
 25602  0125E6  23A3               	addwfc	(__doprnt@val+2)& (0+255),f,b
 25603  0125E8  23A4               	addwfc	(__doprnt@val+3)& (0+255),f,b
 25604                           
 25605                           ; BSR set to: 1
 25606                           ;doprnt.c: 1264: }
 25607                           ;doprnt.c: 1266: }
 25608  0125EA  D035               	goto	l2064
 25609  0125EC                     l2058:
 25610                           
 25611                           ; BSR set to: 1
 25612                           ;doprnt.c: 1268: else
 25613                           ;doprnt.c: 1273: {
 25614                           ;doprnt.c: 1281: if(flag & 0x10)
 25615  0125EC  A9A7               	btfss	__doprnt@flag& (0+255),4,b
 25616  0125EE  D019               	goto	l2063
 25617                           
 25618                           ; BSR set to: 1
 25619                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 25620  0125F0  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25621  0125F4  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25622  0125F8  CFDF F188          	movff	indf2,??__doprnt
 25623  0125FC  0E04               	movlw	4
 25624  0125FE  26DE               	addwf	postinc2,f,c
 25625  012600  CFDF F189          	movff	indf2,??__doprnt+1
 25626  012604  0E00               	movlw	0
 25627  012606  22DD               	addwfc	postdec2,f,c
 25628  012608  C188  FFD9         	movff	??__doprnt,fsr2l
 25629  01260C  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25630  012610  CFDE F1A1          	movff	postinc2,__doprnt@val
 25631  012614  CFDE F1A2          	movff	postinc2,__doprnt@val+1
 25632  012618  CFDE F1A3          	movff	postinc2,__doprnt@val+2
 25633  01261C  CFDE F1A4          	movff	postinc2,__doprnt@val+3
 25634  012620  D01A               	goto	l2064
 25635  012622                     l2063:
 25636                           
 25637                           ; BSR set to: 1
 25638                           ;doprnt.c: 1283: else
 25639                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25640                           
 25641                           ; BSR set to: 1
 25642  012622  C186  FFD9         	movff	__doprnt@ap,fsr2l
 25643  012626  C187  FFDA         	movff	__doprnt@ap+1,fsr2h
 25644  01262A  CFDF F188          	movff	indf2,??__doprnt
 25645  01262E  0E02               	movlw	2
 25646  012630  26DE               	addwf	postinc2,f,c
 25647  012632  CFDF F189          	movff	indf2,??__doprnt+1
 25648  012636  0E00               	movlw	0
 25649  012638  22DD               	addwfc	postdec2,f,c
 25650  01263A  C188  FFD9         	movff	??__doprnt,fsr2l
 25651  01263E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 25652  012642  CFDE F18A          	movff	postinc2,??__doprnt+2
 25653  012646  CFDD F18B          	movff	postdec2,??__doprnt+3
 25654  01264A  C18A  F1A1         	movff	??__doprnt+2,__doprnt@val
 25655  01264E  C18B  F1A2         	movff	??__doprnt+3,__doprnt@val+1
 25656  012652  6BA3               	clrf	(__doprnt@val+2)& (0+255),b
 25657  012654  6BA4               	clrf	(__doprnt@val+3)& (0+255),b
 25658  012656                     l2064:
 25659                           
 25660                           ; BSR set to: 1
 25661                           ;doprnt.c: 1287: }
 25662                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25663                           
 25664                           ; BSR set to: 1
 25665                           
 25666                           ; BSR set to: 1
 25667  012656  51A9               	movf	__doprnt@prec& (0+255),w,b
 25668  012658  11AA               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 25669  01265A  A4D8               	btfss	status,2,c
 25670  01265C  D04B               	goto	l2066
 25671                           
 25672                           ; BSR set to: 1
 25673  01265E  51A1               	movf	__doprnt@val& (0+255),w,b
 25674  012660  11A2               	iorwf	(__doprnt@val+1)& (0+255),w,b
 25675  012662  11A3               	iorwf	(__doprnt@val+2)& (0+255),w,b
 25676  012664  11A4               	iorwf	(__doprnt@val+3)& (0+255),w,b
 25677  012666  A4D8               	btfss	status,2,c
 25678  012668  D045               	goto	l2066
 25679                           
 25680                           ; BSR set to: 1
 25681                           ;doprnt.c: 1291: prec++;
 25682  01266A  4BA9               	infsnz	__doprnt@prec& (0+255),f,b
 25683  01266C  2BAA               	incf	(__doprnt@prec+1)& (0+255),f,b
 25684                           
 25685                           ; BSR set to: 1
 25686                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25687  01266E  D042               	goto	l2066
 25688  012670                     
 25689                           ; BSR set to: 1
 25690                           ;doprnt.c: 1302: case 0xC0:
 25691                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25692                           
 25693                           ; BSR set to: 1
 25694                           
 25695                           ; BSR set to: 1
 25696  012670  0E01               	movlw	1
 25697  012672  6FAB               	movwf	__doprnt@c& (0+255),b
 25698  012674                     l22131:
 25699                           
 25700                           ; BSR set to: 1
 25701  012674  0E0A               	movlw	10
 25702  012676  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25703  012678  B4D8               	btfsc	status,2,c
 25704  01267A  D047               	goto	l2072
 25705                           
 25706                           ; BSR set to: 1
 25707                           ;doprnt.c: 1306: if(val < dpowers[c])
 25708                           
 25709                           ; BSR set to: 1
 25710                           
 25711                           ; BSR set to: 1
 25712  01267C  51AB               	movf	__doprnt@c& (0+255),w,b
 25713  01267E  0D04               	mullw	4
 25714  012680  0E0B               	movlw	low _dpowers
 25715  012682  24F3               	addwf	prodl,w,c
 25716  012684  6EF6               	movwf	tblptrl,c
 25717  012686  0ECF               	movlw	high _dpowers
 25718  012688  20F4               	addwfc	prodh,w,c
 25719  01268A  6EF7               	movwf	tblptrh,c
 25720  01268C                     	if	1	;There are 3 active tblptr bytes
 25721  01268C  6AF8               	clrf	tblptru,c
 25722  01268E  0E00               	movlw	low (__mediumconst shr (0+16))
 25723  012690  22F8               	addwfc	tblptru,f,c
 25724  012692                     	endif
 25725  012692  0009               	tblrd		*+
 25726  012694  50F5               	movf	tablat,w,c
 25727  012696  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25728  012698  0009               	tblrd		*+
 25729  01269A  50F5               	movf	tablat,w,c
 25730  01269C  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25731  01269E  0009               	tblrd		*+
 25732  0126A0  50F5               	movf	tablat,w,c
 25733  0126A2  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25734  0126A4  0009               	tblrd		*+
 25735  0126A6  50F5               	movf	tablat,w,c
 25736  0126A8  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25737  0126AA  A0D8               	btfss	status,0,c
 25738  0126AC  D02E               	goto	l2072
 25739                           
 25740                           ; BSR set to: 1
 25741                           
 25742                           ; BSR set to: 1
 25743                           
 25744                           ; BSR set to: 1
 25745                           ;doprnt.c: 1307: break;
 25746  0126AE  2BAB               	incf	__doprnt@c& (0+255),f,b
 25747  0126B0  D7E1               	goto	l22131
 25748  0126B2                     
 25749                           ; BSR set to: 1
 25750                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25751                           
 25752                           ; BSR set to: 1
 25753  0126B2  0E01               	movlw	1
 25754  0126B4  6FAB               	movwf	__doprnt@c& (0+255),b
 25755  0126B6                     l22145:
 25756                           
 25757                           ; BSR set to: 1
 25758  0126B6  0E08               	movlw	8
 25759  0126B8  19AB               	xorwf	__doprnt@c& (0+255),w,b
 25760  0126BA  B4D8               	btfsc	status,2,c
 25761  0126BC  D026               	goto	l2072
 25762                           
 25763                           ; BSR set to: 1
 25764                           ;doprnt.c: 1317: if(val < hexpowers[c])
 25765                           
 25766                           ; BSR set to: 1
 25767                           
 25768                           ; BSR set to: 1
 25769  0126BE  51AB               	movf	__doprnt@c& (0+255),w,b
 25770  0126C0  0D04               	mullw	4
 25771  0126C2  0E33               	movlw	low _hexpowers
 25772  0126C4  24F3               	addwf	prodl,w,c
 25773  0126C6  6EF6               	movwf	tblptrl,c
 25774  0126C8  0ECF               	movlw	high _hexpowers
 25775  0126CA  20F4               	addwfc	prodh,w,c
 25776  0126CC  6EF7               	movwf	tblptrh,c
 25777  0126CE                     	if	1	;There are 3 active tblptr bytes
 25778  0126CE  6AF8               	clrf	tblptru,c
 25779  0126D0  0E00               	movlw	low (__mediumconst shr (0+16))
 25780  0126D2  22F8               	addwfc	tblptru,f,c
 25781  0126D4                     	endif
 25782  0126D4  0009               	tblrd		*+
 25783  0126D6  50F5               	movf	tablat,w,c
 25784  0126D8  5DA1               	subwf	__doprnt@val& (0+255),w,b
 25785  0126DA  0009               	tblrd		*+
 25786  0126DC  50F5               	movf	tablat,w,c
 25787  0126DE  59A2               	subwfb	(__doprnt@val+1)& (0+255),w,b
 25788  0126E0  0009               	tblrd		*+
 25789  0126E2  50F5               	movf	tablat,w,c
 25790  0126E4  59A3               	subwfb	(__doprnt@val+2)& (0+255),w,b
 25791  0126E6  0009               	tblrd		*+
 25792  0126E8  50F5               	movf	tablat,w,c
 25793  0126EA  59A4               	subwfb	(__doprnt@val+3)& (0+255),w,b
 25794  0126EC  A0D8               	btfss	status,0,c
 25795  0126EE  D00D               	goto	l2072
 25796                           
 25797                           ; BSR set to: 1
 25798                           
 25799                           ; BSR set to: 1
 25800                           
 25801                           ; BSR set to: 1
 25802                           ;doprnt.c: 1318: break;
 25803  0126F0  2BAB               	incf	__doprnt@c& (0+255),f,b
 25804  0126F2  D7E1               	goto	l22145
 25805  0126F4                     l2066:
 25806                           
 25807                           ; BSR set to: 1
 25808                           
 25809                           ; BSR set to: 1
 25810  0126F4  51A7               	movf	__doprnt@flag& (0+255),w,b
 25811  0126F6  0BC0               	andlw	192
 25812                           
 25813                           ; Switch size 1, requested type "space"
 25814                           ; Number of cases is 3, Range of values is 0 to 192
 25815                           ; switch strategies available:
 25816                           ; Name         Instructions Cycles
 25817                           ; simple_byte           10     6 (average)
 25818                           ;	Chosen strategy is simple_byte
 25819  0126F8  0A00               	xorlw	0	; case 0
 25820  0126FA  B4D8               	btfsc	status,2,c
 25821  0126FC  D7B9               	goto	l2067
 25822  0126FE  0A80               	xorlw	128	; case 128
 25823  012700  B4D8               	btfsc	status,2,c
 25824  012702  D7D7               	goto	l2073
 25825  012704  0A40               	xorlw	64	; case 192
 25826  012706  B4D8               	btfsc	status,2,c
 25827  012708  D7B3               	goto	l2067
 25828  01270A                     l2072:
 25829                           
 25830                           ; BSR set to: 1
 25831                           ;doprnt.c: 1339: if(c < prec)
 25832                           
 25833                           ; BSR set to: 1
 25834  01270A  0E80               	movlw	128
 25835  01270C  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25836  01270E  0E7F               	movlw	127
 25837  012710  6F88               	movwf	??__doprnt& (0+255),b
 25838  012712  51A9               	movf	__doprnt@prec& (0+255),w,b
 25839  012714  5DAB               	subwf	__doprnt@c& (0+255),w,b
 25840  012716  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25841  012718  0A80               	xorlw	128
 25842  01271A  5988               	subwfb	??__doprnt& (0+255),w,b
 25843  01271C  B0D8               	btfsc	status,0,c
 25844  01271E  D003               	goto	l2077
 25845                           
 25846                           ; BSR set to: 1
 25847                           ;doprnt.c: 1340: c = prec;
 25848  012720  C1A9  F1AB         	movff	__doprnt@prec,__doprnt@c
 25849  012724  D010               	goto	l2079
 25850  012726                     l2077:
 25851                           
 25852                           ; BSR set to: 1
 25853                           ;doprnt.c: 1341: else if(prec < c)
 25854                           
 25855                           ; BSR set to: 1
 25856  012726  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25857  012728  0A80               	xorlw	128
 25858  01272A  6F88               	movwf	??__doprnt& (0+255),b
 25859  01272C  51AB               	movf	__doprnt@c& (0+255),w,b
 25860  01272E  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25861  012730  0E80               	movlw	128
 25862  012732  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25863  012734  0E7F               	movlw	127
 25864  012736  5988               	subwfb	??__doprnt& (0+255),w,b
 25865  012738  B0D8               	btfsc	status,0,c
 25866  01273A  D005               	goto	l2079
 25867                           
 25868                           ; BSR set to: 1
 25869                           ;doprnt.c: 1342: prec = c;
 25870  01273C  51AB               	movf	__doprnt@c& (0+255),w,b
 25871  01273E  6FA9               	movwf	__doprnt@prec& (0+255),b
 25872  012740  6BAA               	clrf	(__doprnt@prec+1)& (0+255),b
 25873  012742  BFA9               	btfsc	__doprnt@prec& (0+255),7,b
 25874  012744  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 25875  012746                     l2079:
 25876                           
 25877                           ; BSR set to: 1
 25878                           ;doprnt.c: 1345: if(width && flag & 0x03)
 25879                           
 25880                           ; BSR set to: 1
 25881                           
 25882                           ; BSR set to: 1
 25883  012746  51A5               	movf	__doprnt@width& (0+255),w,b
 25884  012748  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 25885  01274A  B4D8               	btfsc	status,2,c
 25886  01274C  D00D               	goto	l2080
 25887                           
 25888                           ; BSR set to: 1
 25889  01274E  0E03               	movlw	3
 25890  012750  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25891  012752  6F88               	movwf	??__doprnt& (0+255),b
 25892  012754  0E00               	movlw	0
 25893  012756  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 25894  012758  6F89               	movwf	(??__doprnt+1)& (0+255),b
 25895  01275A  5188               	movf	??__doprnt& (0+255),w,b
 25896  01275C  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 25897  01275E  B4D8               	btfsc	status,2,c
 25898  012760  D003               	goto	l2080
 25899                           
 25900                           ; BSR set to: 1
 25901                           ;doprnt.c: 1346: width--;
 25902  012762  07A5               	decf	__doprnt@width& (0+255),f,b
 25903  012764  A0D8               	btfss	status,0,c
 25904  012766  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 25905  012768                     l2080:
 25906                           
 25907                           ; BSR set to: 1
 25908                           ;doprnt.c: 1348: if(flag & 0x4000) {
 25909                           
 25910                           ; BSR set to: 1
 25911  012768  ADA8               	btfss	(__doprnt@flag+1)& (0+255),6,b
 25912  01276A  D013               	goto	l2083
 25913                           
 25914                           ; BSR set to: 1
 25915                           ;doprnt.c: 1349: if(width > prec)
 25916  01276C  51A5               	movf	__doprnt@width& (0+255),w,b
 25917  01276E  5DA9               	subwf	__doprnt@prec& (0+255),w,b
 25918  012770  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25919  012772  0A80               	xorlw	128
 25920  012774  6F88               	movwf	??__doprnt& (0+255),b
 25921  012776  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25922  012778  0A80               	xorlw	128
 25923  01277A  5988               	subwfb	??__doprnt& (0+255),w,b
 25924  01277C  B0D8               	btfsc	status,0,c
 25925  01277E  D005               	goto	l2082
 25926                           
 25927                           ; BSR set to: 1
 25928                           ;doprnt.c: 1350: width -= prec;
 25929  012780  51A9               	movf	__doprnt@prec& (0+255),w,b
 25930  012782  5FA5               	subwf	__doprnt@width& (0+255),f,b
 25931  012784  51AA               	movf	(__doprnt@prec+1)& (0+255),w,b
 25932  012786  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25933  012788  D004               	goto	l2083
 25934  01278A                     l2082:
 25935                           
 25936                           ; BSR set to: 1
 25937                           ;doprnt.c: 1351: else
 25938                           ;doprnt.c: 1352: width = 0;
 25939                           
 25940                           ; BSR set to: 1
 25941  01278A  0E00               	movlw	0
 25942  01278C  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 25943  01278E  0E00               	movlw	0
 25944  012790  6FA5               	movwf	__doprnt@width& (0+255),b
 25945  012792                     l2083:
 25946                           
 25947                           ; BSR set to: 1
 25948                           ;doprnt.c: 1353: }
 25949                           ;doprnt.c: 1381: if(width > c)
 25950                           
 25951                           ; BSR set to: 1
 25952                           
 25953                           ; BSR set to: 1
 25954  012792  0E80               	movlw	128
 25955  012794  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25956  012796  0E7F               	movlw	127
 25957  012798  6F88               	movwf	??__doprnt& (0+255),b
 25958  01279A  51A5               	movf	__doprnt@width& (0+255),w,b
 25959  01279C  5DAB               	subwf	__doprnt@c& (0+255),w,b
 25960  01279E  51A6               	movf	(__doprnt@width+1)& (0+255),w,b
 25961  0127A0  0A80               	xorlw	128
 25962  0127A2  5988               	subwfb	??__doprnt& (0+255),w,b
 25963  0127A4  B0D8               	btfsc	status,0,c
 25964  0127A6  D007               	goto	l2084
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;doprnt.c: 1382: width -= c;
 25968  0127A8  51AB               	movf	__doprnt@c& (0+255),w,b
 25969  0127AA  5FA5               	subwf	__doprnt@width& (0+255),f,b
 25970  0127AC  0E00               	movlw	0
 25971  0127AE  BFAB               	btfsc	__doprnt@c& (0+255),7,b
 25972  0127B0  0EFF               	movlw	255
 25973  0127B2  5BA6               	subwfb	(__doprnt@width+1)& (0+255),f,b
 25974  0127B4  D004               	goto	l2085
 25975  0127B6                     l2084:
 25976                           
 25977                           ; BSR set to: 1
 25978                           ;doprnt.c: 1383: else
 25979                           ;doprnt.c: 1384: width = 0;
 25980                           
 25981                           ; BSR set to: 1
 25982  0127B6  0E00               	movlw	0
 25983  0127B8  6FA6               	movwf	(__doprnt@width+1)& (0+255),b
 25984  0127BA  0E00               	movlw	0
 25985  0127BC  6FA5               	movwf	__doprnt@width& (0+255),b
 25986  0127BE                     l2085:
 25987                           
 25988                           ; BSR set to: 1
 25989                           ;doprnt.c: 1387: if(flag & 0x04) {
 25990                           
 25991                           ; BSR set to: 1
 25992  0127BE  A5A7               	btfss	__doprnt@flag& (0+255),2,b
 25993  0127C0  D07A               	goto	l2086
 25994                           
 25995                           ; BSR set to: 1
 25996                           ;doprnt.c: 1392: if(flag & 0x03)
 25997  0127C2  0E03               	movlw	3
 25998  0127C4  15A7               	andwf	__doprnt@flag& (0+255),w,b
 25999  0127C6  6F88               	movwf	??__doprnt& (0+255),b
 26000  0127C8  0E00               	movlw	0
 26001  0127CA  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26002  0127CC  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26003  0127CE  5188               	movf	??__doprnt& (0+255),w,b
 26004  0127D0  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26005  0127D2  B4D8               	btfsc	status,2,c
 26006  0127D4  D033               	goto	l2089
 26007                           
 26008                           ; BSR set to: 1
 26009                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 26010  0127D6  EE20 F002          	lfsr	2,2
 26011  0127DA  5182               	movf	__doprnt@pb& (0+255),w,b
 26012  0127DC  26D9               	addwf	fsr2l,f,c
 26013  0127DE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26014  0127E0  22DA               	addwfc	fsr2h,f,c
 26015  0127E2  50DE               	movf	postinc2,w,c
 26016  0127E4  10DE               	iorwf	postinc2,w,c
 26017  0127E6  10DE               	iorwf	postinc2,w,c
 26018  0127E8  B4D8               	btfsc	status,2,c
 26019  0127EA  D013               	goto	l2088
 26020                           
 26021                           ; BSR set to: 1
 26022  0127EC  EE20 F002          	lfsr	2,2
 26023  0127F0  5182               	movf	__doprnt@pb& (0+255),w,b
 26024  0127F2  26D9               	addwf	fsr2l,f,c
 26025  0127F4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26026  0127F6  22DA               	addwfc	fsr2h,f,c
 26027  0127F8  D801               	call	u32028
 26028  0127FA  D020               	goto	l2089
 26029  0127FC                     u32028:
 26030  0127FC  0005               	push	
 26031  0127FE  6EFA               	movwf	pclath,c
 26032  012800  50DE               	movf	postinc2,w,c
 26033  012802  6EFD               	movwf	tosl,c
 26034  012804  50DE               	movf	postinc2,w,c
 26035  012806  6EFE               	movwf	tosh,c
 26036  012808  50DE               	movf	postinc2,w,c
 26037  01280A  6EFF               	movwf	tosu,c
 26038  01280C  50FA               	movf	pclath,w,c
 26039  01280E  0E2D               	movlw	45
 26040  012810  0012               	return		;indir
 26041  012812                     l2088:
 26042  012812  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26043  012816  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26044  01281A  CFDE F188          	movff	postinc2,??__doprnt
 26045  01281E  CFDD F189          	movff	postdec2,??__doprnt+1
 26046  012822  C188  FFD9         	movff	??__doprnt,fsr2l
 26047  012826  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26048  01282A  0E2D               	movlw	45
 26049  01282C  6EDF               	movwf	indf2,c
 26050  01282E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26051  012832  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26052  012836  2ADE               	incf	postinc2,f,c
 26053  012838  0E00               	movlw	0
 26054  01283A  22DD               	addwfc	postdec2,f,c
 26055  01283C                     l2089:
 26056                           
 26057                           ;doprnt.c: 1415: if(width)
 26058  01283C  0101               	movlb	1	; () banked
 26059  01283E  51A5               	movf	__doprnt@width& (0+255),w,b
 26060  012840  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26061  012842  B4D8               	btfsc	status,2,c
 26062  012844  D16B               	goto	l2112
 26063                           
 26064                           ; BSR set to: 1
 26065                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 26066                           
 26067                           ; BSR set to: 1
 26068                           
 26069                           ;doprnt.c: 1416: do
 26070  012846  EE20 F002          	lfsr	2,2
 26071  01284A  5182               	movf	__doprnt@pb& (0+255),w,b
 26072  01284C  26D9               	addwf	fsr2l,f,c
 26073  01284E  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26074  012850  22DA               	addwfc	fsr2h,f,c
 26075  012852  50DE               	movf	postinc2,w,c
 26076  012854  10DE               	iorwf	postinc2,w,c
 26077  012856  10DE               	iorwf	postinc2,w,c
 26078  012858  B4D8               	btfsc	status,2,c
 26079  01285A  D013               	goto	l2092
 26080                           
 26081                           ; BSR set to: 1
 26082  01285C  EE20 F002          	lfsr	2,2
 26083  012860  5182               	movf	__doprnt@pb& (0+255),w,b
 26084  012862  26D9               	addwf	fsr2l,f,c
 26085  012864  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26086  012866  22DA               	addwfc	fsr2h,f,c
 26087  012868  D801               	call	u32058
 26088  01286A  D020               	goto	l2093
 26089  01286C                     u32058:
 26090  01286C  0005               	push	
 26091  01286E  6EFA               	movwf	pclath,c
 26092  012870  50DE               	movf	postinc2,w,c
 26093  012872  6EFD               	movwf	tosl,c
 26094  012874  50DE               	movf	postinc2,w,c
 26095  012876  6EFE               	movwf	tosh,c
 26096  012878  50DE               	movf	postinc2,w,c
 26097  01287A  6EFF               	movwf	tosu,c
 26098  01287C  50FA               	movf	pclath,w,c
 26099  01287E  0E30               	movlw	48
 26100  012880  0012               	return		;indir
 26101  012882                     l2092:
 26102  012882  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26103  012886  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26104  01288A  CFDE F188          	movff	postinc2,??__doprnt
 26105  01288E  CFDD F189          	movff	postdec2,??__doprnt+1
 26106  012892  C188  FFD9         	movff	??__doprnt,fsr2l
 26107  012896  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26108  01289A  0E30               	movlw	48
 26109  01289C  6EDF               	movwf	indf2,c
 26110  01289E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26111  0128A2  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26112  0128A6  2ADE               	incf	postinc2,f,c
 26113  0128A8  0E00               	movlw	0
 26114  0128AA  22DD               	addwfc	postdec2,f,c
 26115  0128AC                     l2093:
 26116                           
 26117                           ;doprnt.c: 1418: while(--width);
 26118  0128AC  0101               	movlb	1	; () banked
 26119  0128AE  07A5               	decf	__doprnt@width& (0+255),f,b
 26120  0128B0  A0D8               	btfss	status,0,c
 26121  0128B2  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26122  0128B4  D7C4               	goto	L33
 26123  0128B6                     l2086:
 26124                           
 26125                           ; BSR set to: 1
 26126                           ;doprnt.c: 1422: {
 26127                           ;doprnt.c: 1424: if(width
 26128                           ;doprnt.c: 1428: )
 26129                           
 26130                           ; BSR set to: 1
 26131  0128B6  51A5               	movf	__doprnt@width& (0+255),w,b
 26132  0128B8  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26133  0128BA  B4D8               	btfsc	status,2,c
 26134  0128BC  D03B               	goto	u32100
 26135  0128BE                     u32070:
 26136                           
 26137                           ; BSR set to: 1
 26138                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 26139                           
 26140                           ; BSR set to: 1
 26141                           
 26142                           ;doprnt.c: 1429: do
 26143  0128BE  EE20 F002          	lfsr	2,2
 26144  0128C2  5182               	movf	__doprnt@pb& (0+255),w,b
 26145  0128C4  26D9               	addwf	fsr2l,f,c
 26146  0128C6  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26147  0128C8  22DA               	addwfc	fsr2h,f,c
 26148  0128CA  50DE               	movf	postinc2,w,c
 26149  0128CC  10DE               	iorwf	postinc2,w,c
 26150  0128CE  10DE               	iorwf	postinc2,w,c
 26151  0128D0  B4D8               	btfsc	status,2,c
 26152  0128D2  D013               	goto	l2098
 26153                           
 26154                           ; BSR set to: 1
 26155  0128D4  EE20 F002          	lfsr	2,2
 26156  0128D8  5182               	movf	__doprnt@pb& (0+255),w,b
 26157  0128DA  26D9               	addwf	fsr2l,f,c
 26158  0128DC  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26159  0128DE  22DA               	addwfc	fsr2h,f,c
 26160  0128E0  D801               	call	u32098
 26161  0128E2  D020               	goto	l2099
 26162  0128E4                     u32098:
 26163  0128E4  0005               	push	
 26164  0128E6  6EFA               	movwf	pclath,c
 26165  0128E8  50DE               	movf	postinc2,w,c
 26166  0128EA  6EFD               	movwf	tosl,c
 26167  0128EC  50DE               	movf	postinc2,w,c
 26168  0128EE  6EFE               	movwf	tosh,c
 26169  0128F0  50DE               	movf	postinc2,w,c
 26170  0128F2  6EFF               	movwf	tosu,c
 26171  0128F4  50FA               	movf	pclath,w,c
 26172  0128F6  0E20               	movlw	32
 26173  0128F8  0012               	return		;indir
 26174  0128FA                     l2098:
 26175  0128FA  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26176  0128FE  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26177  012902  CFDE F188          	movff	postinc2,??__doprnt
 26178  012906  CFDD F189          	movff	postdec2,??__doprnt+1
 26179  01290A  C188  FFD9         	movff	??__doprnt,fsr2l
 26180  01290E  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26181  012912  0E20               	movlw	32
 26182  012914  6EDF               	movwf	indf2,c
 26183  012916  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26184  01291A  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26185  01291E  2ADE               	incf	postinc2,f,c
 26186  012920  0E00               	movlw	0
 26187  012922  22DD               	addwfc	postdec2,f,c
 26188  012924                     l2099:
 26189                           
 26190                           ;doprnt.c: 1431: while(--width);
 26191  012924  0101               	movlb	1	; () banked
 26192  012926  07A5               	decf	__doprnt@width& (0+255),f,b
 26193  012928  A0D8               	btfss	status,0,c
 26194  01292A  07A6               	decf	(__doprnt@width+1)& (0+255),f,b
 26195  01292C  51A5               	movf	__doprnt@width& (0+255),w,b
 26196  01292E  11A6               	iorwf	(__doprnt@width+1)& (0+255),w,b
 26197  012930  A4D8               	btfss	status,2,c
 26198  012932  D7C5               	goto	u32070
 26199  012934                     u32100:
 26200                           
 26201                           ; BSR set to: 1
 26202                           ;doprnt.c: 1438: if(flag & 0x03)
 26203                           
 26204                           ; BSR set to: 1
 26205                           
 26206                           ; BSR set to: 1
 26207  012934  0E03               	movlw	3
 26208  012936  15A7               	andwf	__doprnt@flag& (0+255),w,b
 26209  012938  6F88               	movwf	??__doprnt& (0+255),b
 26210  01293A  0E00               	movlw	0
 26211  01293C  15A8               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26212  01293E  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26213  012940  5188               	movf	??__doprnt& (0+255),w,b
 26214  012942  1189               	iorwf	(??__doprnt+1)& (0+255),w,b
 26215  012944  B4D8               	btfsc	status,2,c
 26216  012946  D0EA               	goto	l2112
 26217                           
 26218                           ; BSR set to: 1
 26219                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 26220  012948  EE20 F002          	lfsr	2,2
 26221  01294C  5182               	movf	__doprnt@pb& (0+255),w,b
 26222  01294E  26D9               	addwf	fsr2l,f,c
 26223  012950  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26224  012952  22DA               	addwfc	fsr2h,f,c
 26225  012954  50DE               	movf	postinc2,w,c
 26226  012956  10DE               	iorwf	postinc2,w,c
 26227  012958  10DE               	iorwf	postinc2,w,c
 26228  01295A  B4D8               	btfsc	status,2,c
 26229  01295C  D013               	goto	l2102
 26230                           
 26231                           ; BSR set to: 1
 26232  01295E  EE20 F002          	lfsr	2,2
 26233  012962  5182               	movf	__doprnt@pb& (0+255),w,b
 26234  012964  26D9               	addwf	fsr2l,f,c
 26235  012966  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26236  012968  22DA               	addwfc	fsr2h,f,c
 26237  01296A  D801               	call	u32138
 26238  01296C  D0D7               	goto	l2112
 26239  01296E                     u32138:
 26240  01296E  0005               	push	
 26241  012970  6EFA               	movwf	pclath,c
 26242  012972  50DE               	movf	postinc2,w,c
 26243  012974  6EFD               	movwf	tosl,c
 26244  012976  50DE               	movf	postinc2,w,c
 26245  012978  6EFE               	movwf	tosh,c
 26246  01297A  50DE               	movf	postinc2,w,c
 26247  01297C  6EFF               	movwf	tosu,c
 26248  01297E  50FA               	movf	pclath,w,c
 26249  012980  0E2D               	movlw	45
 26250  012982  0012               	return		;indir
 26251  012984                     l2102:
 26252  012984  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26253  012988  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26254  01298C  CFDE F188          	movff	postinc2,??__doprnt
 26255  012990  CFDD F189          	movff	postdec2,??__doprnt+1
 26256  012994  C188  FFD9         	movff	??__doprnt,fsr2l
 26257  012998  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26258  01299C  0E2D               	movlw	45
 26259  01299E  6EDF               	movwf	indf2,c
 26260  0129A0  D0B6               	goto	l22251
 26261  0129A2                     
 26262                           ;doprnt.c: 1486: case 0xC0:
 26263                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 26264  0129A2  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 26265  0129A6  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 26266  0129AA  0101               	movlb	1	; () banked
 26267  0129AC  90D8               	bcf	status,0,c
 26268  0129AE  3788               	rlcf	??__doprnt& (0+255),f,b
 26269  0129B0  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26270  0129B2  90D8               	bcf	status,0,c
 26271  0129B4  3788               	rlcf	??__doprnt& (0+255),f,b
 26272  0129B6  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26273  0129B8  0E0B               	movlw	low _dpowers
 26274  0129BA  2588               	addwf	??__doprnt& (0+255),w,b
 26275  0129BC  6EF6               	movwf	tblptrl,c
 26276  0129BE  0ECF               	movlw	high _dpowers
 26277  0129C0  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 26278  0129C2  6EF7               	movwf	tblptrh,c
 26279  0129C4                     	if	1	;There are 3 active tblptr bytes
 26280  0129C4  6AF8               	clrf	tblptru,c
 26281  0129C6  0E00               	movlw	low (__mediumconst shr (0+16))
 26282  0129C8  22F8               	addwfc	tblptru,f,c
 26283  0129CA                     	endif
 26284  0129CA  0009               	tblrd		*+
 26285  0129CC  CFF5 F11B          	movff	tablat,___lldiv@divisor
 26286  0129D0  0009               	tblrd		*+
 26287  0129D2  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 26288  0129D6  0009               	tblrd		*+
 26289  0129D8  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 26290  0129DC  000A               	tblrd		*-
 26291  0129DE  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 26292  0129E2  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 26293  0129E6  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 26294  0129EA  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 26295  0129EE  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 26296  0129F2  EC68  F0CD         	call	___lldiv
 26297  0129F6  C117  F124         	movff	?___lldiv,___llmod@dividend
 26298  0129FA  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 26299  0129FE  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 26300  012A02  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 26301  012A06  0E0A               	movlw	10
 26302  012A08  0101               	movlb	1	; () banked
 26303  012A0A  6F28               	movwf	___llmod@divisor& (0+255),b
 26304  012A0C  0E00               	movlw	0
 26305  012A0E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 26306  012A10  0E00               	movlw	0
 26307  012A12  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 26308  012A14  0E00               	movlw	0
 26309  012A16  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 26310  012A18  EC31  F0D0         	call	___llmod	;wreg free
 26311  012A1C  0101               	movlb	1	; () banked
 26312  012A1E  5124               	movf	?___llmod& (0+255),w,b
 26313  012A20  0F30               	addlw	48
 26314  012A22  6FAB               	movwf	__doprnt@c& (0+255),b
 26315                           
 26316                           ;doprnt.c: 1491: break;
 26317  012A24  D048               	goto	l2109
 26318  012A26                     
 26319                           ; BSR set to: 1
 26320                           ;doprnt.c: 1499: {
 26321                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 26322                           
 26323                           ; BSR set to: 1
 26324  012A26  C1A1  F117         	movff	__doprnt@val,___lldiv@dividend
 26325  012A2A  C1A2  F118         	movff	__doprnt@val+1,___lldiv@dividend+1
 26326  012A2E  C1A3  F119         	movff	__doprnt@val+2,___lldiv@dividend+2
 26327  012A32  C1A4  F11A         	movff	__doprnt@val+3,___lldiv@dividend+3
 26328  012A36  C1A9  F188         	movff	__doprnt@prec,??__doprnt
 26329  012A3A  C1AA  F189         	movff	__doprnt@prec+1,??__doprnt+1
 26330  012A3E  90D8               	bcf	status,0,c
 26331  012A40  3788               	rlcf	??__doprnt& (0+255),f,b
 26332  012A42  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26333  012A44  90D8               	bcf	status,0,c
 26334  012A46  3788               	rlcf	??__doprnt& (0+255),f,b
 26335  012A48  3789               	rlcf	(??__doprnt+1)& (0+255),f,b
 26336  012A4A  0E33               	movlw	low _hexpowers
 26337  012A4C  2588               	addwf	??__doprnt& (0+255),w,b
 26338  012A4E  6EF6               	movwf	tblptrl,c
 26339  012A50  0ECF               	movlw	high _hexpowers
 26340  012A52  2189               	addwfc	(??__doprnt+1)& (0+255),w,b
 26341  012A54  6EF7               	movwf	tblptrh,c
 26342  012A56                     	if	1	;There are 3 active tblptr bytes
 26343  012A56  6AF8               	clrf	tblptru,c
 26344  012A58  0E00               	movlw	low (__mediumconst shr (0+16))
 26345  012A5A  22F8               	addwfc	tblptru,f,c
 26346  012A5C                     	endif
 26347  012A5C  0009               	tblrd		*+
 26348  012A5E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 26349  012A62  0009               	tblrd		*+
 26350  012A64  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 26351  012A68  0009               	tblrd		*+
 26352  012A6A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 26353  012A6E  000A               	tblrd		*-
 26354  012A70  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 26355  012A74  EC68  F0CD         	call	___lldiv	;wreg free
 26356  012A78  0101               	movlb	1	; () banked
 26357  012A7A  5117               	movf	?___lldiv& (0+255),w,b
 26358  012A7C  0B0F               	andlw	15
 26359  012A7E  6F92               	movwf	__doprnt@idx& (0+255),b
 26360                           
 26361                           ; BSR set to: 1
 26362                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 26363  012A80  5192               	movf	__doprnt@idx& (0+255),w,b
 26364  012A82  0D01               	mullw	1
 26365  012A84  0EE9               	movlw	low STR_192
 26366  012A86  24F3               	addwf	prodl,w,c
 26367  012A88  6EF6               	movwf	tblptrl,c
 26368  012A8A  0EFC               	movlw	high STR_192
 26369  012A8C  20F4               	addwfc	prodh,w,c
 26370  012A8E  6EF7               	movwf	tblptrh,c
 26371  012A90                     	if	1	;There are 3 active tblptr bytes
 26372  012A90  6AF8               	clrf	tblptru,c
 26373  012A92  0E00               	movlw	low (__mediumconst shr (0+16))
 26374  012A94  22F8               	addwfc	tblptru,f,c
 26375  012A96                     	endif
 26376  012A96  0008               	tblrd		*
 26377  012A98  CFF5 F1AB          	movff	tablat,__doprnt@c
 26378                           
 26379                           ; BSR set to: 1
 26380                           ;doprnt.c: 1523: }
 26381                           
 26382                           ;doprnt.c: 1508: }
 26383                           ;doprnt.c: 1510: break;
 26384  012A9C  D00C               	goto	l2109
 26385  012A9E                     l22243:
 26386  012A9E  0101               	movlb	1	; () banked
 26387  012AA0  51A7               	movf	__doprnt@flag& (0+255),w,b
 26388  012AA2  0BC0               	andlw	192
 26389                           
 26390                           ; Switch size 1, requested type "space"
 26391                           ; Number of cases is 3, Range of values is 0 to 192
 26392                           ; switch strategies available:
 26393                           ; Name         Instructions Cycles
 26394                           ; simple_byte           10     6 (average)
 26395                           ;	Chosen strategy is simple_byte
 26396  012AA4  0A00               	xorlw	0	; case 0
 26397  012AA6  B4D8               	btfsc	status,2,c
 26398  012AA8  D77C               	goto	l2107
 26399  012AAA  0A80               	xorlw	128	; case 128
 26400  012AAC  B4D8               	btfsc	status,2,c
 26401  012AAE  D7BB               	goto	l2110
 26402  012AB0  0A40               	xorlw	64	; case 192
 26403  012AB2  B4D8               	btfsc	status,2,c
 26404  012AB4  D776               	goto	l2107
 26405  012AB6                     l2109:
 26406                           
 26407                           ; BSR set to: 1
 26408                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 26409                           
 26410                           ; BSR set to: 1
 26411  012AB6  EE20 F002          	lfsr	2,2
 26412  012ABA  5182               	movf	__doprnt@pb& (0+255),w,b
 26413  012ABC  26D9               	addwf	fsr2l,f,c
 26414  012ABE  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26415  012AC0  22DA               	addwfc	fsr2h,f,c
 26416  012AC2  50DE               	movf	postinc2,w,c
 26417  012AC4  10DE               	iorwf	postinc2,w,c
 26418  012AC6  10DE               	iorwf	postinc2,w,c
 26419  012AC8  B4D8               	btfsc	status,2,c
 26420  012ACA  D013               	goto	l2111
 26421                           
 26422                           ; BSR set to: 1
 26423  012ACC  EE20 F002          	lfsr	2,2
 26424  012AD0  5182               	movf	__doprnt@pb& (0+255),w,b
 26425  012AD2  26D9               	addwf	fsr2l,f,c
 26426  012AD4  5183               	movf	(__doprnt@pb+1)& (0+255),w,b
 26427  012AD6  22DA               	addwfc	fsr2h,f,c
 26428  012AD8  D801               	call	u32158
 26429  012ADA  D020               	goto	l2112
 26430  012ADC                     u32158:
 26431  012ADC  0005               	push	
 26432  012ADE  6EFA               	movwf	pclath,c
 26433  012AE0  50DE               	movf	postinc2,w,c
 26434  012AE2  6EFD               	movwf	tosl,c
 26435  012AE4  50DE               	movf	postinc2,w,c
 26436  012AE6  6EFE               	movwf	tosh,c
 26437  012AE8  50DE               	movf	postinc2,w,c
 26438  012AEA  6EFF               	movwf	tosu,c
 26439  012AEC  50FA               	movf	pclath,w,c
 26440  012AEE  51AB               	movf	__doprnt@c& (0+255),w,b
 26441  012AF0  0012               	return		;indir
 26442  012AF2                     l2111:
 26443  012AF2  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26444  012AF6  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26445  012AFA  CFDE F188          	movff	postinc2,??__doprnt
 26446  012AFE  CFDD F189          	movff	postdec2,??__doprnt+1
 26447  012B02  C188  FFD9         	movff	??__doprnt,fsr2l
 26448  012B06  C189  FFDA         	movff	??__doprnt+1,fsr2h
 26449  012B0A  C1AB  FFDF         	movff	__doprnt@c,indf2
 26450  012B0E                     l22251:
 26451  012B0E  C182  FFD9         	movff	__doprnt@pb,fsr2l
 26452  012B12  C183  FFDA         	movff	__doprnt@pb+1,fsr2h
 26453  012B16  2ADE               	incf	postinc2,f,c
 26454  012B18  0E00               	movlw	0
 26455  012B1A  22DD               	addwfc	postdec2,f,c
 26456  012B1C                     l2112:
 26457  012B1C  0101               	movlb	1	; () banked
 26458  012B1E  07A9               	decf	__doprnt@prec& (0+255),f,b
 26459  012B20  A0D8               	btfss	status,0,c
 26460  012B22  07AA               	decf	(__doprnt@prec+1)& (0+255),f,b
 26461  012B24  29A9               	incf	__doprnt@prec& (0+255),w,b
 26462  012B26  E1BB               	bnz	l22243
 26463  012B28  29AA               	incf	(__doprnt@prec+1)& (0+255),w,b
 26464  012B2A  A4D8               	btfss	status,2,c
 26465  012B2C  D7B8               	goto	l2106
 26466  012B2E                     u32160:
 26467                           
 26468                           ; BSR set to: 1
 26469                           
 26470                           ; BSR set to: 1
 26471  012B2E  0101               	movlb	1	; () banked
 26472  012B30  5184               	movf	__doprnt@f& (0+255),w,b
 26473  012B32  6F88               	movwf	??__doprnt& (0+255),b
 26474  012B34  5185               	movf	(__doprnt@f+1)& (0+255),w,b
 26475  012B36  6F89               	movwf	(??__doprnt+1)& (0+255),b
 26476  012B38  4B84               	infsnz	__doprnt@f& (0+255),f,b
 26477  012B3A  2B85               	incf	(__doprnt@f+1)& (0+255),f,b
 26478  012B3C  C188  FFF6         	movff	??__doprnt,tblptrl
 26479  012B40  C189  FFF7         	movff	??__doprnt+1,tblptrh
 26480  012B44  0E00               	movlw	low (__mediumconst shr (0+16))
 26481  012B46  6EF8               	movwf	tblptru,c
 26482  012B48  0E0D               	movlw	(high __ramtop+-1)
 26483  012B4A  64F7               	cpfsgt	tblptrh,c
 26484  012B4C  D003               	bra	u32177
 26485  012B4E  0008               	tblrd		*
 26486  012B50  50F5               	movf	tablat,w,c
 26487  012B52  D005               	bra	u32170
 26488  012B54                     u32177:
 26489  012B54  CFF6 FFE9          	movff	tblptrl,fsr0l
 26490  012B58  CFF7 FFEA          	movff	tblptrh,fsr0h
 26491  012B5C  50EF               	movf	indf0,w,c
 26492  012B5E                     u32170:
 26493  012B5E  0101               	movlb	1	; () banked
 26494  012B60  6FAB               	movwf	__doprnt@c& (0+255),b
 26495  012B62  51AB               	movf	__doprnt@c& (0+255),w,b
 26496  012B64  A4D8               	btfss	status,2,c
 26497  012B66  EF35  F08B         	goto	l1940
 26498  012B6A                     u32180:
 26499                           
 26500                           ; BSR set to: 1
 26501                           ;doprnt.c: 1540: return 0;
 26502                           
 26503                           ; BSR set to: 1
 26504                           
 26505                           ;doprnt.c: 1525: }
 26506                           ;doprnt.c: 1533: }
 26507                           ;doprnt.c: 1535: alldone:
 26508                           
 26509                           ; BSR set to: 1
 26510  012B6A  0E00               	movlw	0
 26511  012B6C  6F83               	movwf	(?__doprnt+1)& (0+255),b
 26512  012B6E  0E00               	movlw	0
 26513  012B70  6F82               	movwf	?__doprnt& (0+255),b
 26514  012B72  0012               	return	
 26515  012B74                     __end_of__doprnt:
 26516                           	opt stack 0
 26517                           tosu	equ	0xFFF
 26518                           tosh	equ	0xFFE
 26519                           tosl	equ	0xFFD
 26520                           pclath	equ	0xFFA
 26521                           tblptru	equ	0xFF8
 26522                           tblptrh	equ	0xFF7
 26523                           tblptrl	equ	0xFF6
 26524                           tablat	equ	0xFF5
 26525                           prodh	equ	0xFF4
 26526                           prodl	equ	0xFF3
 26527                           intcon	equ	0xFF2
 26528                           indf0	equ	0xFEF
 26529                           postinc0	equ	0xFEE
 26530                           fsr0h	equ	0xFEA
 26531                           fsr0l	equ	0xFE9
 26532                           wreg	equ	0xFE8
 26533                           indf1	equ	0xFE7
 26534                           postdec1	equ	0xFE5
 26535                           plusw1	equ	0xFE3
 26536                           fsr1h	equ	0xFE2
 26537                           fsr1l	equ	0xFE1
 26538                           indf2	equ	0xFDF
 26539                           postinc2	equ	0xFDE
 26540                           postdec2	equ	0xFDD
 26541                           plusw2	equ	0xFDB
 26542                           fsr2h	equ	0xFDA
 26543                           fsr2l	equ	0xFD9
 26544                           status	equ	0xFD8
 26545                           
 26546 ;; *************** function _scale *****************
 26547 ;; Defined at:
 26548 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26549 ;; Parameters:    Size  Location     Type
 26550 ;;  scl             1    wreg     char 
 26551 ;; Auto vars:     Size  Location     Type
 26552 ;;  scl             1  119[BANK1 ] char 
 26553 ;; Return value:  Size  Location     Type
 26554 ;;                  4  111[BANK1 ] char 
 26555 ;; Registers used:
 26556 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26557 ;; Tracked objects:
 26558 ;;		On entry : 0/0
 26559 ;;		On exit  : 0/0
 26560 ;;		Unchanged: 0/0
 26561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26562 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26563 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26565 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26566 ;;Total ram usage:        9 bytes
 26567 ;; Hardware stack levels used:    1
 26568 ;; Hardware stack levels required when called:   14
 26569 ;; This function calls:
 26570 ;;		___awdiv
 26571 ;;		___awmod
 26572 ;;		___flmul
 26573 ;; This function is called by:
 26574 ;;		__doprnt
 26575 ;; This function uses a non-reentrant model
 26576 ;;
 26577                           
 26578                           	psect	text34
 26579  014B3C                     __ptext34:
 26580                           	opt stack 0
 26581  014B3C                     _scale:
 26582                           	opt stack 12
 26583                           
 26584                           ; BSR set to: 1
 26585                           ;incstack = 0
 26586                           ;scale@scl stored from wreg
 26587  014B3C  0101               	movlb	1	; () banked
 26588  014B3E  6F77               	movwf	scale@scl& (0+255),b
 26589                           
 26590                           ;doprnt.c: 428: if(scl < 0) {
 26591  014B40  0101               	movlb	1	; () banked
 26592  014B42  AF77               	btfss	scale@scl& (0+255),7,b
 26593  014B44  D127               	goto	l1929
 26594                           
 26595                           ; BSR set to: 1
 26596                           ;doprnt.c: 429: scl = -scl;
 26597  014B46  6D77               	negf	scale@scl& (0+255),b
 26598                           
 26599                           ;doprnt.c: 430: if(scl>=110)
 26600  014B48  5177               	movf	scale@scl& (0+255),w,b
 26601  014B4A  0A80               	xorlw	128
 26602  014B4C  0F12               	addlw	-238
 26603  014B4E  A0D8               	btfss	status,0,c
 26604  014B50  D0A5               	goto	l1930
 26605                           
 26606                           ; BSR set to: 1
 26607                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26608  014B52  0E00               	movlw	0
 26609  014B54  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26610  014B56  0E0A               	movlw	10
 26611  014B58  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26612  014B5A  0E00               	movlw	0
 26613  014B5C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26614  014B5E  0E64               	movlw	100
 26615  014B60  6F19               	movwf	___awmod@divisor& (0+255),b
 26616  014B62  5177               	movf	scale@scl& (0+255),w,b
 26617  014B64  6F17               	movwf	___awmod@dividend& (0+255),b
 26618  014B66  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26619  014B68  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26620  014B6A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26621  014B6C  ECE9  F0CE         	call	___awmod
 26622  014B70  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26623  014B74  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26624  014B78  EC25  F0CD         	call	___awdiv	;wreg free
 26625  014B7C  0101               	movlb	1	; () banked
 26626  014B7E  90D8               	bcf	status,0,c
 26627  014B80  371D               	rlcf	?___awdiv& (0+255),f,b
 26628  014B82  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26629  014B84  90D8               	bcf	status,0,c
 26630  014B86  371D               	rlcf	?___awdiv& (0+255),f,b
 26631  014B88  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26632  014B8A  0E24               	movlw	36
 26633  014B8C  271D               	addwf	?___awdiv& (0+255),f,b
 26634  014B8E  0E00               	movlw	0
 26635  014B90  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26636  014B92  0ED7               	movlw	low __npowers_
 26637  014B94  251D               	addwf	?___awdiv& (0+255),w,b
 26638  014B96  6EF6               	movwf	tblptrl,c
 26639  014B98  0ECE               	movlw	high __npowers_
 26640  014B9A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26641  014B9C  6EF7               	movwf	tblptrh,c
 26642  014B9E                     	if	1	;There are 3 active tblptr bytes
 26643  014B9E  6AF8               	clrf	tblptru,c
 26644  014BA0  0E00               	movlw	low (__mediumconst shr (0+16))
 26645  014BA2  22F8               	addwfc	tblptru,f,c
 26646  014BA4                     	endif
 26647  014BA4  0009               	tblrd		*+
 26648  014BA6  CFF5 F15A          	movff	tablat,___flmul@a
 26649  014BAA  0009               	tblrd		*+
 26650  014BAC  CFF5 F15B          	movff	tablat,___flmul@a+1
 26651  014BB0  0009               	tblrd		*+
 26652  014BB2  CFF5 F15C          	movff	tablat,___flmul@a+2
 26653  014BB6  000A               	tblrd		*-
 26654  014BB8  CFF5 F15D          	movff	tablat,___flmul@a+3
 26655  014BBC  0E00               	movlw	0
 26656  014BBE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26657  014BC0  0E64               	movlw	100
 26658  014BC2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26659  014BC4  5177               	movf	scale@scl& (0+255),w,b
 26660  014BC6  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26661  014BC8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26662  014BCA  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26663  014BCC  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26664  014BCE  EC25  F0CD         	call	___awdiv	;wreg free
 26665  014BD2  0101               	movlb	1	; () banked
 26666  014BD4  90D8               	bcf	status,0,c
 26667  014BD6  371D               	rlcf	?___awdiv& (0+255),f,b
 26668  014BD8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26669  014BDA  90D8               	bcf	status,0,c
 26670  014BDC  371D               	rlcf	?___awdiv& (0+255),f,b
 26671  014BDE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26672  014BE0  0E48               	movlw	72
 26673  014BE2  271D               	addwf	?___awdiv& (0+255),f,b
 26674  014BE4  0E00               	movlw	0
 26675  014BE6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26676  014BE8  0ED7               	movlw	low __npowers_
 26677  014BEA  251D               	addwf	?___awdiv& (0+255),w,b
 26678  014BEC  6EF6               	movwf	tblptrl,c
 26679  014BEE  0ECE               	movlw	high __npowers_
 26680  014BF0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26681  014BF2  6EF7               	movwf	tblptrh,c
 26682  014BF4                     	if	1	;There are 3 active tblptr bytes
 26683  014BF4  6AF8               	clrf	tblptru,c
 26684  014BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 26685  014BF8  22F8               	addwfc	tblptru,f,c
 26686  014BFA                     	endif
 26687  014BFA  0009               	tblrd		*+
 26688  014BFC  CFF5 F156          	movff	tablat,___flmul@b
 26689  014C00  0009               	tblrd		*+
 26690  014C02  CFF5 F157          	movff	tablat,___flmul@b+1
 26691  014C06  0009               	tblrd		*+
 26692  014C08  CFF5 F158          	movff	tablat,___flmul@b+2
 26693  014C0C  000A               	tblrd		*-
 26694  014C0E  CFF5 F159          	movff	tablat,___flmul@b+3
 26695  014C12  ECE4  F0AB         	call	___flmul	;wreg free
 26696  014C16  C156  F173         	movff	?___flmul,_scale$5189
 26697  014C1A  C157  F174         	movff	?___flmul+1,_scale$5189+1
 26698  014C1E  C158  F175         	movff	?___flmul+2,_scale$5189+2
 26699  014C22  C159  F176         	movff	?___flmul+3,_scale$5189+3
 26700                           
 26701                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 26702  014C26  C173  F156         	movff	_scale$5189,___flmul@b
 26703  014C2A  C174  F157         	movff	_scale$5189+1,___flmul@b+1
 26704  014C2E  C175  F158         	movff	_scale$5189+2,___flmul@b+2
 26705  014C32  C176  F159         	movff	_scale$5189+3,___flmul@b+3
 26706  014C36  0E00               	movlw	0
 26707  014C38  0101               	movlb	1	; () banked
 26708  014C3A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26709  014C3C  0E0A               	movlw	10
 26710  014C3E  6F19               	movwf	___awmod@divisor& (0+255),b
 26711  014C40  5177               	movf	scale@scl& (0+255),w,b
 26712  014C42  6F17               	movwf	___awmod@dividend& (0+255),b
 26713  014C44  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26714  014C46  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26715  014C48  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26716  014C4A  ECE9  F0CE         	call	___awmod	;wreg free
 26717  014C4E  0101               	movlb	1	; () banked
 26718  014C50  90D8               	bcf	status,0,c
 26719  014C52  3717               	rlcf	?___awmod& (0+255),f,b
 26720  014C54  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26721  014C56  90D8               	bcf	status,0,c
 26722  014C58  3717               	rlcf	?___awmod& (0+255),f,b
 26723  014C5A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26724  014C5C  0ED7               	movlw	low __npowers_
 26725  014C5E  2517               	addwf	?___awmod& (0+255),w,b
 26726  014C60  6EF6               	movwf	tblptrl,c
 26727  014C62  0ECE               	movlw	high __npowers_
 26728  014C64  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26729  014C66  6EF7               	movwf	tblptrh,c
 26730  014C68                     	if	1	;There are 3 active tblptr bytes
 26731  014C68  6AF8               	clrf	tblptru,c
 26732  014C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 26733  014C6C  22F8               	addwfc	tblptru,f,c
 26734  014C6E                     	endif
 26735  014C6E  0009               	tblrd		*+
 26736  014C70  CFF5 F15A          	movff	tablat,___flmul@a
 26737  014C74  0009               	tblrd		*+
 26738  014C76  CFF5 F15B          	movff	tablat,___flmul@a+1
 26739  014C7A  0009               	tblrd		*+
 26740  014C7C  CFF5 F15C          	movff	tablat,___flmul@a+2
 26741  014C80  000A               	tblrd		*-
 26742  014C82  CFF5 F15D          	movff	tablat,___flmul@a+3
 26743  014C86  ECE4  F0AB         	call	___flmul	;wreg free
 26744  014C8A  C156  F16F         	movff	?___flmul,?_scale
 26745  014C8E  C157  F170         	movff	?___flmul+1,?_scale+1
 26746  014C92  C158  F171         	movff	?___flmul+2,?_scale+2
 26747  014C96  C159  F172         	movff	?___flmul+3,?_scale+3
 26748  014C9A  0012               	return	
 26749  014C9C                     l1930:
 26750                           
 26751                           ;doprnt.c: 432: else if(scl > 10)
 26752  014C9C  0101               	movlb	1	; () banked
 26753  014C9E  5177               	movf	scale@scl& (0+255),w,b
 26754  014CA0  0A80               	xorlw	128
 26755  014CA2  0F75               	addlw	-139
 26756  014CA4  A0D8               	btfss	status,0,c
 26757  014CA6  D05D               	goto	l1933
 26758                           
 26759                           ; BSR set to: 1
 26760                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26761  014CA8  0E00               	movlw	0
 26762  014CAA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26763  014CAC  0E0A               	movlw	10
 26764  014CAE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26765  014CB0  5177               	movf	scale@scl& (0+255),w,b
 26766  014CB2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26767  014CB4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26768  014CB6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26769  014CB8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26770  014CBA  EC25  F0CD         	call	___awdiv	;wreg free
 26771  014CBE  0101               	movlb	1	; () banked
 26772  014CC0  90D8               	bcf	status,0,c
 26773  014CC2  371D               	rlcf	?___awdiv& (0+255),f,b
 26774  014CC4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26775  014CC6  90D8               	bcf	status,0,c
 26776  014CC8  371D               	rlcf	?___awdiv& (0+255),f,b
 26777  014CCA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26778  014CCC  0E24               	movlw	36
 26779  014CCE  271D               	addwf	?___awdiv& (0+255),f,b
 26780  014CD0  0E00               	movlw	0
 26781  014CD2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26782  014CD4  0ED7               	movlw	low __npowers_
 26783  014CD6  251D               	addwf	?___awdiv& (0+255),w,b
 26784  014CD8  6EF6               	movwf	tblptrl,c
 26785  014CDA  0ECE               	movlw	high __npowers_
 26786  014CDC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26787  014CDE  6EF7               	movwf	tblptrh,c
 26788  014CE0                     	if	1	;There are 3 active tblptr bytes
 26789  014CE0  6AF8               	clrf	tblptru,c
 26790  014CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 26791  014CE4  22F8               	addwfc	tblptru,f,c
 26792  014CE6                     	endif
 26793  014CE6  0009               	tblrd		*+
 26794  014CE8  CFF5 F156          	movff	tablat,___flmul@b
 26795  014CEC  0009               	tblrd		*+
 26796  014CEE  CFF5 F157          	movff	tablat,___flmul@b+1
 26797  014CF2  0009               	tblrd		*+
 26798  014CF4  CFF5 F158          	movff	tablat,___flmul@b+2
 26799  014CF8  000A               	tblrd		*-
 26800  014CFA  CFF5 F159          	movff	tablat,___flmul@b+3
 26801  014CFE  0E00               	movlw	0
 26802  014D00  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26803  014D02  0E0A               	movlw	10
 26804  014D04  6F19               	movwf	___awmod@divisor& (0+255),b
 26805  014D06  5177               	movf	scale@scl& (0+255),w,b
 26806  014D08  6F17               	movwf	___awmod@dividend& (0+255),b
 26807  014D0A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26808  014D0C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26809  014D0E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26810  014D10  ECE9  F0CE         	call	___awmod	;wreg free
 26811  014D14  0101               	movlb	1	; () banked
 26812  014D16  90D8               	bcf	status,0,c
 26813  014D18  3717               	rlcf	?___awmod& (0+255),f,b
 26814  014D1A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26815  014D1C  90D8               	bcf	status,0,c
 26816  014D1E  3717               	rlcf	?___awmod& (0+255),f,b
 26817  014D20  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26818  014D22  0ED7               	movlw	low __npowers_
 26819  014D24  2517               	addwf	?___awmod& (0+255),w,b
 26820  014D26  6EF6               	movwf	tblptrl,c
 26821  014D28  0ECE               	movlw	high __npowers_
 26822  014D2A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 26823  014D2C  6EF7               	movwf	tblptrh,c
 26824  014D2E                     	if	1	;There are 3 active tblptr bytes
 26825  014D2E  6AF8               	clrf	tblptru,c
 26826  014D30  0E00               	movlw	low (__mediumconst shr (0+16))
 26827  014D32  22F8               	addwfc	tblptru,f,c
 26828  014D34                     	endif
 26829  014D34  0009               	tblrd		*+
 26830  014D36  CFF5 F15A          	movff	tablat,___flmul@a
 26831  014D3A  0009               	tblrd		*+
 26832  014D3C  CFF5 F15B          	movff	tablat,___flmul@a+1
 26833  014D40  0009               	tblrd		*+
 26834  014D42  CFF5 F15C          	movff	tablat,___flmul@a+2
 26835  014D46  000A               	tblrd		*-
 26836  014D48  CFF5 F15D          	movff	tablat,___flmul@a+3
 26837  014D4C  ECE4  F0AB         	call	___flmul	;wreg free
 26838  014D50  C156  F16F         	movff	?___flmul,?_scale
 26839  014D54  C157  F170         	movff	?___flmul+1,?_scale+1
 26840  014D58  C158  F171         	movff	?___flmul+2,?_scale+2
 26841  014D5C  C159  F172         	movff	?___flmul+3,?_scale+3
 26842  014D60  0012               	return	
 26843  014D62                     l1933:
 26844                           
 26845                           ;doprnt.c: 434: return _npowers_[scl];
 26846  014D62  0101               	movlb	1	; () banked
 26847  014D64  5177               	movf	scale@scl& (0+255),w,b
 26848  014D66  0D04               	mullw	4
 26849  014D68  0ED7               	movlw	low __npowers_
 26850  014D6A  24F3               	addwf	prodl,w,c
 26851  014D6C  6EF6               	movwf	tblptrl,c
 26852  014D6E  0ECE               	movlw	high __npowers_
 26853  014D70  20F4               	addwfc	prodh,w,c
 26854  014D72  6EF7               	movwf	tblptrh,c
 26855  014D74                     	if	1	;There are 3 active tblptr bytes
 26856  014D74  6AF8               	clrf	tblptru,c
 26857  014D76  0E00               	movlw	low (__mediumconst shr (0+16))
 26858  014D78  22F8               	addwfc	tblptru,f,c
 26859  014D7A                     	endif
 26860  014D7A  0009               	tblrd		*+
 26861  014D7C  CFF5 F16F          	movff	tablat,?_scale
 26862  014D80  0009               	tblrd		*+
 26863  014D82  CFF5 F170          	movff	tablat,?_scale+1
 26864  014D86  0009               	tblrd		*+
 26865  014D88  CFF5 F171          	movff	tablat,?_scale+2
 26866  014D8C  000A               	tblrd		*-
 26867  014D8E  CFF5 F172          	movff	tablat,?_scale+3
 26868                           
 26869                           ; BSR set to: 1
 26870  014D92  0012               	return	
 26871  014D94                     l1929:
 26872                           
 26873                           ; BSR set to: 1
 26874                           ;doprnt.c: 435: }
 26875                           ;doprnt.c: 436: if(scl>=110)
 26876                           
 26877                           ; BSR set to: 1
 26878  014D94  5177               	movf	scale@scl& (0+255),w,b
 26879  014D96  0A80               	xorlw	128
 26880  014D98  0F12               	addlw	-238
 26881  014D9A  A0D8               	btfss	status,0,c
 26882  014D9C  D0A5               	goto	l1934
 26883                           
 26884                           ; BSR set to: 1
 26885                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26886  014D9E  0E00               	movlw	0
 26887  014DA0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26888  014DA2  0E0A               	movlw	10
 26889  014DA4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26890  014DA6  0E00               	movlw	0
 26891  014DA8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26892  014DAA  0E64               	movlw	100
 26893  014DAC  6F19               	movwf	___awmod@divisor& (0+255),b
 26894  014DAE  5177               	movf	scale@scl& (0+255),w,b
 26895  014DB0  6F17               	movwf	___awmod@dividend& (0+255),b
 26896  014DB2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26897  014DB4  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26898  014DB6  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26899  014DB8  ECE9  F0CE         	call	___awmod	;wreg free
 26900  014DBC  C117  F11D         	movff	?___awmod,___awdiv@dividend
 26901  014DC0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 26902  014DC4  EC25  F0CD         	call	___awdiv	;wreg free
 26903  014DC8  0101               	movlb	1	; () banked
 26904  014DCA  90D8               	bcf	status,0,c
 26905  014DCC  371D               	rlcf	?___awdiv& (0+255),f,b
 26906  014DCE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26907  014DD0  90D8               	bcf	status,0,c
 26908  014DD2  371D               	rlcf	?___awdiv& (0+255),f,b
 26909  014DD4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26910  014DD6  0E24               	movlw	36
 26911  014DD8  271D               	addwf	?___awdiv& (0+255),f,b
 26912  014DDA  0E00               	movlw	0
 26913  014DDC  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26914  014DDE  0EA3               	movlw	low __powers_
 26915  014DE0  251D               	addwf	?___awdiv& (0+255),w,b
 26916  014DE2  6EF6               	movwf	tblptrl,c
 26917  014DE4  0ECE               	movlw	high __powers_
 26918  014DE6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26919  014DE8  6EF7               	movwf	tblptrh,c
 26920  014DEA                     	if	1	;There are 3 active tblptr bytes
 26921  014DEA  6AF8               	clrf	tblptru,c
 26922  014DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 26923  014DEE  22F8               	addwfc	tblptru,f,c
 26924  014DF0                     	endif
 26925  014DF0  0009               	tblrd		*+
 26926  014DF2  CFF5 F15A          	movff	tablat,___flmul@a
 26927  014DF6  0009               	tblrd		*+
 26928  014DF8  CFF5 F15B          	movff	tablat,___flmul@a+1
 26929  014DFC  0009               	tblrd		*+
 26930  014DFE  CFF5 F15C          	movff	tablat,___flmul@a+2
 26931  014E02  000A               	tblrd		*-
 26932  014E04  CFF5 F15D          	movff	tablat,___flmul@a+3
 26933  014E08  0E00               	movlw	0
 26934  014E0A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 26935  014E0C  0E64               	movlw	100
 26936  014E0E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 26937  014E10  5177               	movf	scale@scl& (0+255),w,b
 26938  014E12  6F1D               	movwf	___awdiv@dividend& (0+255),b
 26939  014E14  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 26940  014E16  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 26941  014E18  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 26942  014E1A  EC25  F0CD         	call	___awdiv	;wreg free
 26943  014E1E  0101               	movlb	1	; () banked
 26944  014E20  90D8               	bcf	status,0,c
 26945  014E22  371D               	rlcf	?___awdiv& (0+255),f,b
 26946  014E24  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26947  014E26  90D8               	bcf	status,0,c
 26948  014E28  371D               	rlcf	?___awdiv& (0+255),f,b
 26949  014E2A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 26950  014E2C  0E48               	movlw	72
 26951  014E2E  271D               	addwf	?___awdiv& (0+255),f,b
 26952  014E30  0E00               	movlw	0
 26953  014E32  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 26954  014E34  0EA3               	movlw	low __powers_
 26955  014E36  251D               	addwf	?___awdiv& (0+255),w,b
 26956  014E38  6EF6               	movwf	tblptrl,c
 26957  014E3A  0ECE               	movlw	high __powers_
 26958  014E3C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 26959  014E3E  6EF7               	movwf	tblptrh,c
 26960  014E40                     	if	1	;There are 3 active tblptr bytes
 26961  014E40  6AF8               	clrf	tblptru,c
 26962  014E42  0E00               	movlw	low (__mediumconst shr (0+16))
 26963  014E44  22F8               	addwfc	tblptru,f,c
 26964  014E46                     	endif
 26965  014E46  0009               	tblrd		*+
 26966  014E48  CFF5 F156          	movff	tablat,___flmul@b
 26967  014E4C  0009               	tblrd		*+
 26968  014E4E  CFF5 F157          	movff	tablat,___flmul@b+1
 26969  014E52  0009               	tblrd		*+
 26970  014E54  CFF5 F158          	movff	tablat,___flmul@b+2
 26971  014E58  000A               	tblrd		*-
 26972  014E5A  CFF5 F159          	movff	tablat,___flmul@b+3
 26973  014E5E  ECE4  F0AB         	call	___flmul	;wreg free
 26974  014E62  C156  F173         	movff	?___flmul,_scale$5189
 26975  014E66  C157  F174         	movff	?___flmul+1,_scale$5189+1
 26976  014E6A  C158  F175         	movff	?___flmul+2,_scale$5189+2
 26977  014E6E  C159  F176         	movff	?___flmul+3,_scale$5189+3
 26978                           
 26979                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26980  014E72  C173  F156         	movff	_scale$5189,___flmul@b
 26981  014E76  C174  F157         	movff	_scale$5189+1,___flmul@b+1
 26982  014E7A  C175  F158         	movff	_scale$5189+2,___flmul@b+2
 26983  014E7E  C176  F159         	movff	_scale$5189+3,___flmul@b+3
 26984  014E82  0E00               	movlw	0
 26985  014E84  0101               	movlb	1	; () banked
 26986  014E86  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 26987  014E88  0E0A               	movlw	10
 26988  014E8A  6F19               	movwf	___awmod@divisor& (0+255),b
 26989  014E8C  5177               	movf	scale@scl& (0+255),w,b
 26990  014E8E  6F17               	movwf	___awmod@dividend& (0+255),b
 26991  014E90  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 26992  014E92  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 26993  014E94  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 26994  014E96  ECE9  F0CE         	call	___awmod	;wreg free
 26995  014E9A  0101               	movlb	1	; () banked
 26996  014E9C  90D8               	bcf	status,0,c
 26997  014E9E  3717               	rlcf	?___awmod& (0+255),f,b
 26998  014EA0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 26999  014EA2  90D8               	bcf	status,0,c
 27000  014EA4  3717               	rlcf	?___awmod& (0+255),f,b
 27001  014EA6  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27002  014EA8  0EA3               	movlw	low __powers_
 27003  014EAA  2517               	addwf	?___awmod& (0+255),w,b
 27004  014EAC  6EF6               	movwf	tblptrl,c
 27005  014EAE  0ECE               	movlw	high __powers_
 27006  014EB0  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27007  014EB2  6EF7               	movwf	tblptrh,c
 27008  014EB4                     	if	1	;There are 3 active tblptr bytes
 27009  014EB4  6AF8               	clrf	tblptru,c
 27010  014EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 27011  014EB8  22F8               	addwfc	tblptru,f,c
 27012  014EBA                     	endif
 27013  014EBA  0009               	tblrd		*+
 27014  014EBC  CFF5 F15A          	movff	tablat,___flmul@a
 27015  014EC0  0009               	tblrd		*+
 27016  014EC2  CFF5 F15B          	movff	tablat,___flmul@a+1
 27017  014EC6  0009               	tblrd		*+
 27018  014EC8  CFF5 F15C          	movff	tablat,___flmul@a+2
 27019  014ECC  000A               	tblrd		*-
 27020  014ECE  CFF5 F15D          	movff	tablat,___flmul@a+3
 27021  014ED2  ECE4  F0AB         	call	___flmul	;wreg free
 27022  014ED6  C156  F16F         	movff	?___flmul,?_scale
 27023  014EDA  C157  F170         	movff	?___flmul+1,?_scale+1
 27024  014EDE  C158  F171         	movff	?___flmul+2,?_scale+2
 27025  014EE2  C159  F172         	movff	?___flmul+3,?_scale+3
 27026  014EE6  0012               	return	
 27027  014EE8                     l1934:
 27028                           
 27029                           ;doprnt.c: 438: else if(scl > 10)
 27030  014EE8  0101               	movlb	1	; () banked
 27031  014EEA  5177               	movf	scale@scl& (0+255),w,b
 27032  014EEC  0A80               	xorlw	128
 27033  014EEE  0F75               	addlw	-139
 27034  014EF0  A0D8               	btfss	status,0,c
 27035  014EF2  D05D               	goto	l1936
 27036                           
 27037                           ; BSR set to: 1
 27038                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27039  014EF4  0E00               	movlw	0
 27040  014EF6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27041  014EF8  0E0A               	movlw	10
 27042  014EFA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27043  014EFC  5177               	movf	scale@scl& (0+255),w,b
 27044  014EFE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 27045  014F00  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27046  014F02  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 27047  014F04  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27048  014F06  EC25  F0CD         	call	___awdiv	;wreg free
 27049  014F0A  0101               	movlb	1	; () banked
 27050  014F0C  90D8               	bcf	status,0,c
 27051  014F0E  371D               	rlcf	?___awdiv& (0+255),f,b
 27052  014F10  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27053  014F12  90D8               	bcf	status,0,c
 27054  014F14  371D               	rlcf	?___awdiv& (0+255),f,b
 27055  014F16  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27056  014F18  0E24               	movlw	36
 27057  014F1A  271D               	addwf	?___awdiv& (0+255),f,b
 27058  014F1C  0E00               	movlw	0
 27059  014F1E  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27060  014F20  0EA3               	movlw	low __powers_
 27061  014F22  251D               	addwf	?___awdiv& (0+255),w,b
 27062  014F24  6EF6               	movwf	tblptrl,c
 27063  014F26  0ECE               	movlw	high __powers_
 27064  014F28  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27065  014F2A  6EF7               	movwf	tblptrh,c
 27066  014F2C                     	if	1	;There are 3 active tblptr bytes
 27067  014F2C  6AF8               	clrf	tblptru,c
 27068  014F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 27069  014F30  22F8               	addwfc	tblptru,f,c
 27070  014F32                     	endif
 27071  014F32  0009               	tblrd		*+
 27072  014F34  CFF5 F156          	movff	tablat,___flmul@b
 27073  014F38  0009               	tblrd		*+
 27074  014F3A  CFF5 F157          	movff	tablat,___flmul@b+1
 27075  014F3E  0009               	tblrd		*+
 27076  014F40  CFF5 F158          	movff	tablat,___flmul@b+2
 27077  014F44  000A               	tblrd		*-
 27078  014F46  CFF5 F159          	movff	tablat,___flmul@b+3
 27079  014F4A  0E00               	movlw	0
 27080  014F4C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27081  014F4E  0E0A               	movlw	10
 27082  014F50  6F19               	movwf	___awmod@divisor& (0+255),b
 27083  014F52  5177               	movf	scale@scl& (0+255),w,b
 27084  014F54  6F17               	movwf	___awmod@dividend& (0+255),b
 27085  014F56  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27086  014F58  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 27087  014F5A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 27088  014F5C  ECE9  F0CE         	call	___awmod	;wreg free
 27089  014F60  0101               	movlb	1	; () banked
 27090  014F62  90D8               	bcf	status,0,c
 27091  014F64  3717               	rlcf	?___awmod& (0+255),f,b
 27092  014F66  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27093  014F68  90D8               	bcf	status,0,c
 27094  014F6A  3717               	rlcf	?___awmod& (0+255),f,b
 27095  014F6C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27096  014F6E  0EA3               	movlw	low __powers_
 27097  014F70  2517               	addwf	?___awmod& (0+255),w,b
 27098  014F72  6EF6               	movwf	tblptrl,c
 27099  014F74  0ECE               	movlw	high __powers_
 27100  014F76  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27101  014F78  6EF7               	movwf	tblptrh,c
 27102  014F7A                     	if	1	;There are 3 active tblptr bytes
 27103  014F7A  6AF8               	clrf	tblptru,c
 27104  014F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 27105  014F7E  22F8               	addwfc	tblptru,f,c
 27106  014F80                     	endif
 27107  014F80  0009               	tblrd		*+
 27108  014F82  CFF5 F15A          	movff	tablat,___flmul@a
 27109  014F86  0009               	tblrd		*+
 27110  014F88  CFF5 F15B          	movff	tablat,___flmul@a+1
 27111  014F8C  0009               	tblrd		*+
 27112  014F8E  CFF5 F15C          	movff	tablat,___flmul@a+2
 27113  014F92  000A               	tblrd		*-
 27114  014F94  CFF5 F15D          	movff	tablat,___flmul@a+3
 27115  014F98  ECE4  F0AB         	call	___flmul	;wreg free
 27116  014F9C  C156  F16F         	movff	?___flmul,?_scale
 27117  014FA0  C157  F170         	movff	?___flmul+1,?_scale+1
 27118  014FA4  C158  F171         	movff	?___flmul+2,?_scale+2
 27119  014FA8  C159  F172         	movff	?___flmul+3,?_scale+3
 27120  014FAC  0012               	return	
 27121  014FAE                     l1936:
 27122                           
 27123                           ;doprnt.c: 440: return _powers_[scl];
 27124  014FAE  0101               	movlb	1	; () banked
 27125  014FB0  5177               	movf	scale@scl& (0+255),w,b
 27126  014FB2  0D04               	mullw	4
 27127  014FB4  0EA3               	movlw	low __powers_
 27128  014FB6  24F3               	addwf	prodl,w,c
 27129  014FB8  6EF6               	movwf	tblptrl,c
 27130  014FBA  0ECE               	movlw	high __powers_
 27131  014FBC  20F4               	addwfc	prodh,w,c
 27132  014FBE  6EF7               	movwf	tblptrh,c
 27133  014FC0                     	if	1	;There are 3 active tblptr bytes
 27134  014FC0  6AF8               	clrf	tblptru,c
 27135  014FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 27136  014FC4  22F8               	addwfc	tblptru,f,c
 27137  014FC6                     	endif
 27138  014FC6  0009               	tblrd		*+
 27139  014FC8  CFF5 F16F          	movff	tablat,?_scale
 27140  014FCC  0009               	tblrd		*+
 27141  014FCE  CFF5 F170          	movff	tablat,?_scale+1
 27142  014FD2  0009               	tblrd		*+
 27143  014FD4  CFF5 F171          	movff	tablat,?_scale+2
 27144  014FD8  000A               	tblrd		*-
 27145  014FDA  CFF5 F172          	movff	tablat,?_scale+3
 27146  014FDE  0012               	return	
 27147  014FE0                     __end_of_scale:
 27148                           	opt stack 0
 27149                           tosu	equ	0xFFF
 27150                           tosh	equ	0xFFE
 27151                           tosl	equ	0xFFD
 27152                           pclath	equ	0xFFA
 27153                           tblptru	equ	0xFF8
 27154                           tblptrh	equ	0xFF7
 27155                           tblptrl	equ	0xFF6
 27156                           tablat	equ	0xFF5
 27157                           prodh	equ	0xFF4
 27158                           prodl	equ	0xFF3
 27159                           intcon	equ	0xFF2
 27160                           indf0	equ	0xFEF
 27161                           postinc0	equ	0xFEE
 27162                           fsr0h	equ	0xFEA
 27163                           fsr0l	equ	0xFE9
 27164                           wreg	equ	0xFE8
 27165                           indf1	equ	0xFE7
 27166                           postdec1	equ	0xFE5
 27167                           plusw1	equ	0xFE3
 27168                           fsr1h	equ	0xFE2
 27169                           fsr1l	equ	0xFE1
 27170                           indf2	equ	0xFDF
 27171                           postinc2	equ	0xFDE
 27172                           postdec2	equ	0xFDD
 27173                           plusw2	equ	0xFDB
 27174                           fsr2h	equ	0xFDA
 27175                           fsr2l	equ	0xFD9
 27176                           status	equ	0xFD8
 27177                           
 27178 ;; *************** function _putch *****************
 27179 ;; Defined at:
 27180 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 27181 ;; Parameters:    Size  Location     Type
 27182 ;;  txData          1    wreg     unsigned char 
 27183 ;; Auto vars:     Size  Location     Type
 27184 ;;  txData          1   24[BANK1 ] unsigned char 
 27185 ;; Return value:  Size  Location     Type
 27186 ;;                  1    wreg      void 
 27187 ;; Registers used:
 27188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27189 ;; Tracked objects:
 27190 ;;		On entry : 0/0
 27191 ;;		On exit  : 0/0
 27192 ;;		Unchanged: 0/0
 27193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27195 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27197 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27198 ;;Total ram usage:        1 bytes
 27199 ;; Hardware stack levels used:    1
 27200 ;; Hardware stack levels required when called:   14
 27201 ;; This function calls:
 27202 ;;		_EUSART2_Write
 27203 ;; This function is called by:
 27204 ;;		_printf
 27205 ;;		__doprnt
 27206 ;;		i2__doprnt
 27207 ;; This function uses a non-reentrant model
 27208 ;;
 27209                           
 27210                           	psect	text35
 27211  01B0F2                     __ptext35:
 27212                           	opt stack 0
 27213  01B0F2                     _putch:
 27214                           	opt stack 0
 27215                           
 27216                           ;Skip over the trampoline to the duplicate function for level 2
 27217  01B0F2  B25F               	btfsc	btemp,1,c
 27218  01B0F4  EF25  F0D9         	goto	i2_putch
 27219  01B0F8                     _putch$intlevel0:
 27220                           	opt stack 12
 27221                           
 27222                           ;incstack = 0
 27223                           ;putch@txData stored from wreg
 27224  01B0F8  0101               	movlb	1	; () banked
 27225  01B0FA  6F18               	movwf	putch@txData& (0+255),b
 27226                           
 27227                           ;eusart2.c: 187: EUSART2_Write(txData);
 27228  01B0FC  0101               	movlb	1	; () banked
 27229  01B0FE  5118               	movf	putch@txData& (0+255),w,b
 27230  01B100  EC70  F0D2         	call	_EUSART2_Write
 27231  01B104  0012               	return		;funcret
 27232  01B106                     __end_of_putch:
 27233                           	opt stack 0
 27234                           tosu	equ	0xFFF
 27235                           tosh	equ	0xFFE
 27236                           tosl	equ	0xFFD
 27237                           pclath	equ	0xFFA
 27238                           tblptru	equ	0xFF8
 27239                           tblptrh	equ	0xFF7
 27240                           tblptrl	equ	0xFF6
 27241                           tablat	equ	0xFF5
 27242                           prodh	equ	0xFF4
 27243                           prodl	equ	0xFF3
 27244                           intcon	equ	0xFF2
 27245                           indf0	equ	0xFEF
 27246                           postinc0	equ	0xFEE
 27247                           fsr0h	equ	0xFEA
 27248                           fsr0l	equ	0xFE9
 27249                           wreg	equ	0xFE8
 27250                           indf1	equ	0xFE7
 27251                           postdec1	equ	0xFE5
 27252                           plusw1	equ	0xFE3
 27253                           fsr1h	equ	0xFE2
 27254                           fsr1l	equ	0xFE1
 27255                           indf2	equ	0xFDF
 27256                           postinc2	equ	0xFDE
 27257                           postdec2	equ	0xFDD
 27258                           plusw2	equ	0xFDB
 27259                           fsr2h	equ	0xFDA
 27260                           fsr2l	equ	0xFD9
 27261                           status	equ	0xFD8
 27262                           
 27263 ;; *************** function _EUSART2_Write *****************
 27264 ;; Defined at:
 27265 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 27266 ;; Parameters:    Size  Location     Type
 27267 ;;  txData          1    wreg     unsigned char 
 27268 ;; Auto vars:     Size  Location     Type
 27269 ;;  txData          1   23[BANK1 ] unsigned char 
 27270 ;; Return value:  Size  Location     Type
 27271 ;;                  1    wreg      void 
 27272 ;; Registers used:
 27273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27274 ;; Tracked objects:
 27275 ;;		On entry : 0/0
 27276 ;;		On exit  : 0/0
 27277 ;;		Unchanged: 0/0
 27278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27280 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27282 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27283 ;;Total ram usage:        1 bytes
 27284 ;; Hardware stack levels used:    1
 27285 ;; Hardware stack levels required when called:   13
 27286 ;; This function calls:
 27287 ;;		Nothing
 27288 ;; This function is called by:
 27289 ;;		_putch
 27290 ;; This function uses a non-reentrant model
 27291 ;;
 27292                           
 27293                           	psect	text36
 27294  01A4E0                     __ptext36:
 27295                           	opt stack 0
 27296  01A4E0                     _EUSART2_Write:
 27297                           	opt stack 12
 27298                           
 27299                           ;incstack = 0
 27300                           ;EUSART2_Write@txData stored from wreg
 27301  01A4E0  0101               	movlb	1	; () banked
 27302  01A4E2  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 27303                           
 27304                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 27305  01A4E4  D004               	goto	l430
 27306  01A4E6                     l431:
 27307                           
 27308                           ; BSR set to: 1
 27309  01A4E6  0004               	clrwdt		;# 
 27310                           
 27311                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 27312  01A4E8  0E01               	movlw	1
 27313  01A4EA  0102               	movlb	2	; () banked
 27314  01A4EC  6F08               	movwf	(_error_handler+8)& (0+255),b
 27315  01A4EE                     l430:
 27316                           
 27317                           ; BSR set to: 2
 27318  01A4EE  0101               	movlb	1	; () banked
 27319  01A4F0  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 27320  01A4F2  B4D8               	btfsc	status,2,c
 27321  01A4F4  D7F8               	goto	l431
 27322                           
 27323                           ; BSR set to: 1
 27324                           ;eusart2.c: 161: }
 27325                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 27326  01A4F6  010E               	movlb	14	; () banked
 27327  01A4F8  BD2C               	btfsc	44,6,b	;volatile
 27328  01A4FA  D003               	goto	l433
 27329                           
 27330                           ; BSR set to: 14
 27331                           ;eusart2.c: 164: {
 27332                           ;eusart2.c: 165: TX2REG = txData;
 27333  01A4FC  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 27334                           
 27335                           ;eusart2.c: 166: }
 27336  01A500  D013               	goto	l434
 27337  01A502                     l433:
 27338                           
 27339                           ; BSR set to: 14
 27340                           ;eusart2.c: 167: else
 27341                           ;eusart2.c: 168: {
 27342                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 27343  01A502  9D2C               	bcf	44,6,b	;volatile
 27344                           
 27345                           ; BSR set to: 14
 27346                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 27347  01A504  0101               	movlb	1	; () banked
 27348  01A506  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 27349  01A508  0D01               	mullw	1
 27350  01A50A  0E00               	movlw	low _eusart2TxBuffer
 27351  01A50C  24F3               	addwf	prodl,w,c
 27352  01A50E  6ED9               	movwf	fsr2l,c
 27353  01A510  0E04               	movlw	high _eusart2TxBuffer
 27354  01A512  20F4               	addwfc	prodh,w,c
 27355  01A514  6EDA               	movwf	fsr2h,c
 27356  01A516  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 27357                           
 27358                           ; BSR set to: 1
 27359  01A51A  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 27360                           
 27361                           ; BSR set to: 1
 27362                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 27363  01A51C  0E7F               	movlw	127
 27364  01A51E  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 27365  01A520  D002               	goto	l435
 27366                           
 27367                           ; BSR set to: 1
 27368                           ;eusart2.c: 172: {
 27369                           ;eusart2.c: 173: eusart2TxHead = 0;
 27370  01A522  0E00               	movlw	0
 27371  01A524  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 27372  01A526                     l435:
 27373                           
 27374                           ; BSR set to: 1
 27375                           ;eusart2.c: 174: }
 27376                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 27377                           
 27378                           ; BSR set to: 1
 27379  01A526  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 27380  01A528                     l434:
 27381                           
 27382                           ;eusart2.c: 176: }
 27383                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 27384                           
 27385                           ; BSR set to: 1
 27386  01A528  010E               	movlb	14	; () banked
 27387  01A52A  8D2C               	bsf	44,6,b	;volatile
 27388                           
 27389                           ; BSR set to: 14
 27390  01A52C  0012               	return		;funcret
 27391  01A52E                     __end_of_EUSART2_Write:
 27392                           	opt stack 0
 27393                           tosu	equ	0xFFF
 27394                           tosh	equ	0xFFE
 27395                           tosl	equ	0xFFD
 27396                           pclath	equ	0xFFA
 27397                           tblptru	equ	0xFF8
 27398                           tblptrh	equ	0xFF7
 27399                           tblptrl	equ	0xFF6
 27400                           tablat	equ	0xFF5
 27401                           prodh	equ	0xFF4
 27402                           prodl	equ	0xFF3
 27403                           intcon	equ	0xFF2
 27404                           indf0	equ	0xFEF
 27405                           postinc0	equ	0xFEE
 27406                           fsr0h	equ	0xFEA
 27407                           fsr0l	equ	0xFE9
 27408                           wreg	equ	0xFE8
 27409                           indf1	equ	0xFE7
 27410                           postdec1	equ	0xFE5
 27411                           plusw1	equ	0xFE3
 27412                           fsr1h	equ	0xFE2
 27413                           fsr1l	equ	0xFE1
 27414                           indf2	equ	0xFDF
 27415                           postinc2	equ	0xFDE
 27416                           postdec2	equ	0xFDD
 27417                           plusw2	equ	0xFDB
 27418                           fsr2h	equ	0xFDA
 27419                           fsr2l	equ	0xFD9
 27420                           status	equ	0xFD8
 27421                           
 27422 ;; *************** function _isdigit *****************
 27423 ;; Defined at:
 27424 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 27425 ;; Parameters:    Size  Location     Type
 27426 ;;  c               1    wreg     unsigned char 
 27427 ;; Auto vars:     Size  Location     Type
 27428 ;;  c               1   25[BANK1 ] unsigned char 
 27429 ;; Return value:  Size  Location     Type
 27430 ;;		None               void
 27431 ;; Registers used:
 27432 ;;		wreg, status,2, status,0
 27433 ;; Tracked objects:
 27434 ;;		On entry : 0/0
 27435 ;;		On exit  : 0/0
 27436 ;;		Unchanged: 0/0
 27437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27439 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27440 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27441 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27442 ;;Total ram usage:        3 bytes
 27443 ;; Hardware stack levels used:    1
 27444 ;; Hardware stack levels required when called:   13
 27445 ;; This function calls:
 27446 ;;		Nothing
 27447 ;; This function is called by:
 27448 ;;		__doprnt
 27449 ;;		_atoi
 27450 ;; This function uses a non-reentrant model
 27451 ;;
 27452                           
 27453                           	psect	text37
 27454  01AF58                     __ptext37:
 27455                           	opt stack 0
 27456  01AF58                     _isdigit:
 27457                           	opt stack 13
 27458                           
 27459                           ; BSR set to: 14
 27460                           ;incstack = 0
 27461                           ;isdigit@c stored from wreg
 27462  01AF58  0101               	movlb	1	; () banked
 27463  01AF5A  6F19               	movwf	isdigit@c& (0+255),b
 27464  01AF5C  0E00               	movlw	0
 27465  01AF5E  0101               	movlb	1	; () banked
 27466  01AF60  6F18               	movwf	_isdigit$4329& (0+255),b
 27467                           
 27468                           ; BSR set to: 1
 27469  01AF62  0E3A               	movlw	58
 27470  01AF64  6119               	cpfslt	isdigit@c& (0+255),b
 27471  01AF66  D005               	goto	l2555
 27472                           
 27473                           ; BSR set to: 1
 27474  01AF68  0E2F               	movlw	47
 27475  01AF6A  6519               	cpfsgt	isdigit@c& (0+255),b
 27476  01AF6C  D002               	goto	l2555
 27477                           
 27478                           ; BSR set to: 1
 27479  01AF6E  0E01               	movlw	1
 27480  01AF70  6F18               	movwf	_isdigit$4329& (0+255),b
 27481  01AF72                     l2555:
 27482                           
 27483                           ; BSR set to: 1
 27484                           
 27485                           ; BSR set to: 1
 27486  01AF72  C118  F117         	movff	_isdigit$4329,??_isdigit
 27487  01AF76  3117               	rrcf	??_isdigit& (0+255),w,b
 27488  01AF78  0012               	return	
 27489  01AF7A                     __end_of_isdigit:
 27490                           	opt stack 0
 27491                           tosu	equ	0xFFF
 27492                           tosh	equ	0xFFE
 27493                           tosl	equ	0xFFD
 27494                           pclath	equ	0xFFA
 27495                           tblptru	equ	0xFF8
 27496                           tblptrh	equ	0xFF7
 27497                           tblptrl	equ	0xFF6
 27498                           tablat	equ	0xFF5
 27499                           prodh	equ	0xFF4
 27500                           prodl	equ	0xFF3
 27501                           intcon	equ	0xFF2
 27502                           indf0	equ	0xFEF
 27503                           postinc0	equ	0xFEE
 27504                           fsr0h	equ	0xFEA
 27505                           fsr0l	equ	0xFE9
 27506                           wreg	equ	0xFE8
 27507                           indf1	equ	0xFE7
 27508                           postdec1	equ	0xFE5
 27509                           plusw1	equ	0xFE3
 27510                           fsr1h	equ	0xFE2
 27511                           fsr1l	equ	0xFE1
 27512                           indf2	equ	0xFDF
 27513                           postinc2	equ	0xFDE
 27514                           postdec2	equ	0xFDD
 27515                           plusw2	equ	0xFDB
 27516                           fsr2h	equ	0xFDA
 27517                           fsr2l	equ	0xFD9
 27518                           status	equ	0xFD8
 27519                           
 27520 ;; *************** function _fround *****************
 27521 ;; Defined at:
 27522 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 27523 ;; Parameters:    Size  Location     Type
 27524 ;;  prec            1    wreg     unsigned char 
 27525 ;; Auto vars:     Size  Location     Type
 27526 ;;  prec            1  123[BANK1 ] unsigned char 
 27527 ;; Return value:  Size  Location     Type
 27528 ;;                  4  111[BANK1 ] unsigned char 
 27529 ;; Registers used:
 27530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27531 ;; Tracked objects:
 27532 ;;		On entry : 0/0
 27533 ;;		On exit  : 0/0
 27534 ;;		Unchanged: 0/0
 27535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27536 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27537 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27539 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27540 ;;Total ram usage:       13 bytes
 27541 ;; Hardware stack levels used:    1
 27542 ;; Hardware stack levels required when called:   14
 27543 ;; This function calls:
 27544 ;;		___awdiv
 27545 ;;		___awmod
 27546 ;;		___flmul
 27547 ;; This function is called by:
 27548 ;;		__doprnt
 27549 ;; This function uses a non-reentrant model
 27550 ;;
 27551                           
 27552                           	psect	text38
 27553  016DAC                     __ptext38:
 27554                           	opt stack 0
 27555  016DAC                     _fround:
 27556                           	opt stack 12
 27557                           
 27558                           ; BSR set to: 1
 27559                           ;incstack = 0
 27560                           ;fround@prec stored from wreg
 27561  016DAC  0101               	movlb	1	; () banked
 27562  016DAE  6F7B               	movwf	fround@prec& (0+255),b
 27563                           
 27564                           ;doprnt.c: 413: if(prec>=110)
 27565  016DB0  0E6D               	movlw	109
 27566  016DB2  0101               	movlb	1	; () banked
 27567  016DB4  657B               	cpfsgt	fround@prec& (0+255),b
 27568  016DB6  D0BA               	goto	l1923
 27569                           
 27570                           ; BSR set to: 1
 27571                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27572  016DB8  0E00               	movlw	0
 27573  016DBA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27574  016DBC  0E0A               	movlw	10
 27575  016DBE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27576  016DC0  0E00               	movlw	0
 27577  016DC2  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27578  016DC4  0E64               	movlw	100
 27579  016DC6  6F19               	movwf	___awmod@divisor& (0+255),b
 27580  016DC8  C17B  F117         	movff	fround@prec,___awmod@dividend
 27581  016DCC  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27582  016DCE  ECE9  F0CE         	call	___awmod	;wreg free
 27583  016DD2  C117  F11D         	movff	?___awmod,___awdiv@dividend
 27584  016DD6  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 27585  016DDA  EC25  F0CD         	call	___awdiv	;wreg free
 27586  016DDE  0101               	movlb	1	; () banked
 27587  016DE0  90D8               	bcf	status,0,c
 27588  016DE2  371D               	rlcf	?___awdiv& (0+255),f,b
 27589  016DE4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27590  016DE6  90D8               	bcf	status,0,c
 27591  016DE8  371D               	rlcf	?___awdiv& (0+255),f,b
 27592  016DEA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27593  016DEC  0E24               	movlw	36
 27594  016DEE  271D               	addwf	?___awdiv& (0+255),f,b
 27595  016DF0  0E00               	movlw	0
 27596  016DF2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27597  016DF4  0ED7               	movlw	low __npowers_
 27598  016DF6  251D               	addwf	?___awdiv& (0+255),w,b
 27599  016DF8  6EF6               	movwf	tblptrl,c
 27600  016DFA  0ECE               	movlw	high __npowers_
 27601  016DFC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27602  016DFE  6EF7               	movwf	tblptrh,c
 27603  016E00                     	if	1	;There are 3 active tblptr bytes
 27604  016E00  6AF8               	clrf	tblptru,c
 27605  016E02  0E00               	movlw	low (__mediumconst shr (0+16))
 27606  016E04  22F8               	addwfc	tblptru,f,c
 27607  016E06                     	endif
 27608  016E06  0009               	tblrd		*+
 27609  016E08  CFF5 F15A          	movff	tablat,___flmul@a
 27610  016E0C  0009               	tblrd		*+
 27611  016E0E  CFF5 F15B          	movff	tablat,___flmul@a+1
 27612  016E12  0009               	tblrd		*+
 27613  016E14  CFF5 F15C          	movff	tablat,___flmul@a+2
 27614  016E18  000A               	tblrd		*-
 27615  016E1A  CFF5 F15D          	movff	tablat,___flmul@a+3
 27616  016E1E  0E00               	movlw	0
 27617  016E20  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27618  016E22  0E64               	movlw	100
 27619  016E24  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27620  016E26  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27621  016E2A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27622  016E2C  EC25  F0CD         	call	___awdiv	;wreg free
 27623  016E30  0101               	movlb	1	; () banked
 27624  016E32  90D8               	bcf	status,0,c
 27625  016E34  371D               	rlcf	?___awdiv& (0+255),f,b
 27626  016E36  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27627  016E38  90D8               	bcf	status,0,c
 27628  016E3A  371D               	rlcf	?___awdiv& (0+255),f,b
 27629  016E3C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27630  016E3E  0E48               	movlw	72
 27631  016E40  271D               	addwf	?___awdiv& (0+255),f,b
 27632  016E42  0E00               	movlw	0
 27633  016E44  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27634  016E46  0ED7               	movlw	low __npowers_
 27635  016E48  251D               	addwf	?___awdiv& (0+255),w,b
 27636  016E4A  6EF6               	movwf	tblptrl,c
 27637  016E4C  0ECE               	movlw	high __npowers_
 27638  016E4E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27639  016E50  6EF7               	movwf	tblptrh,c
 27640  016E52                     	if	1	;There are 3 active tblptr bytes
 27641  016E52  6AF8               	clrf	tblptru,c
 27642  016E54  0E00               	movlw	low (__mediumconst shr (0+16))
 27643  016E56  22F8               	addwfc	tblptru,f,c
 27644  016E58                     	endif
 27645  016E58  0009               	tblrd		*+
 27646  016E5A  CFF5 F156          	movff	tablat,___flmul@b
 27647  016E5E  0009               	tblrd		*+
 27648  016E60  CFF5 F157          	movff	tablat,___flmul@b+1
 27649  016E64  0009               	tblrd		*+
 27650  016E66  CFF5 F158          	movff	tablat,___flmul@b+2
 27651  016E6A  000A               	tblrd		*-
 27652  016E6C  CFF5 F159          	movff	tablat,___flmul@b+3
 27653  016E70  ECE4  F0AB         	call	___flmul	;wreg free
 27654  016E74  C156  F177         	movff	?___flmul,_fround$5187
 27655  016E78  C157  F178         	movff	?___flmul+1,_fround$5187+1
 27656  016E7C  C158  F179         	movff	?___flmul+2,_fround$5187+2
 27657  016E80  C159  F17A         	movff	?___flmul+3,_fround$5187+3
 27658                           
 27659                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27660  016E84  0E00               	movlw	0
 27661  016E86  0101               	movlb	1	; () banked
 27662  016E88  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27663  016E8A  0E0A               	movlw	10
 27664  016E8C  6F19               	movwf	___awmod@divisor& (0+255),b
 27665  016E8E  C17B  F117         	movff	fround@prec,___awmod@dividend
 27666  016E92  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27667  016E94  ECE9  F0CE         	call	___awmod	;wreg free
 27668  016E98  0101               	movlb	1	; () banked
 27669  016E9A  90D8               	bcf	status,0,c
 27670  016E9C  3717               	rlcf	?___awmod& (0+255),f,b
 27671  016E9E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27672  016EA0  90D8               	bcf	status,0,c
 27673  016EA2  3717               	rlcf	?___awmod& (0+255),f,b
 27674  016EA4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27675  016EA6  0ED7               	movlw	low __npowers_
 27676  016EA8  2517               	addwf	?___awmod& (0+255),w,b
 27677  016EAA  6EF6               	movwf	tblptrl,c
 27678  016EAC  0ECE               	movlw	high __npowers_
 27679  016EAE  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27680  016EB0  6EF7               	movwf	tblptrh,c
 27681  016EB2                     	if	1	;There are 3 active tblptr bytes
 27682  016EB2  6AF8               	clrf	tblptru,c
 27683  016EB4  0E00               	movlw	low (__mediumconst shr (0+16))
 27684  016EB6  22F8               	addwfc	tblptru,f,c
 27685  016EB8                     	endif
 27686  016EB8  0009               	tblrd		*+
 27687  016EBA  CFF5 F15A          	movff	tablat,___flmul@a
 27688  016EBE  0009               	tblrd		*+
 27689  016EC0  CFF5 F15B          	movff	tablat,___flmul@a+1
 27690  016EC4  0009               	tblrd		*+
 27691  016EC6  CFF5 F15C          	movff	tablat,___flmul@a+2
 27692  016ECA  000A               	tblrd		*-
 27693  016ECC  CFF5 F15D          	movff	tablat,___flmul@a+3
 27694  016ED0  C177  F156         	movff	_fround$5187,___flmul@b
 27695  016ED4  C178  F157         	movff	_fround$5187+1,___flmul@b+1
 27696  016ED8  C179  F158         	movff	_fround$5187+2,___flmul@b+2
 27697  016EDC  C17A  F159         	movff	_fround$5187+3,___flmul@b+3
 27698  016EE0  ECE4  F0AB         	call	___flmul	;wreg free
 27699  016EE4  C156  F173         	movff	?___flmul,_fround$5188
 27700  016EE8  C157  F174         	movff	?___flmul+1,_fround$5188+1
 27701  016EEC  C158  F175         	movff	?___flmul+2,_fround$5188+2
 27702  016EF0  C159  F176         	movff	?___flmul+3,_fround$5188+3
 27703                           
 27704                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 27705  016EF4  C173  F156         	movff	_fround$5188,___flmul@b
 27706  016EF8  C174  F157         	movff	_fround$5188+1,___flmul@b+1
 27707  016EFC  C175  F158         	movff	_fround$5188+2,___flmul@b+2
 27708  016F00  C176  F159         	movff	_fround$5188+3,___flmul@b+3
 27709  016F04  0E00               	movlw	0
 27710  016F06  0101               	movlb	1	; () banked
 27711  016F08  6F5A               	movwf	___flmul@a& (0+255),b
 27712  016F0A  0E00               	movlw	0
 27713  016F0C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27714  016F0E  0E00               	movlw	0
 27715  016F10  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27716  016F12  0E3F               	movlw	63
 27717  016F14  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27718  016F16  ECE4  F0AB         	call	___flmul	;wreg free
 27719  016F1A  C156  F16F         	movff	?___flmul,?_fround
 27720  016F1E  C157  F170         	movff	?___flmul+1,?_fround+1
 27721  016F22  C158  F171         	movff	?___flmul+2,?_fround+2
 27722  016F26  C159  F172         	movff	?___flmul+3,?_fround+3
 27723  016F2A  0012               	return	
 27724  016F2C                     l1923:
 27725                           
 27726                           ;doprnt.c: 415: else if(prec > 10)
 27727  016F2C  0E0A               	movlw	10
 27728  016F2E  0101               	movlb	1	; () banked
 27729  016F30  657B               	cpfsgt	fround@prec& (0+255),b
 27730  016F32  D074               	goto	l1926
 27731                           
 27732                           ; BSR set to: 1
 27733                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27734  016F34  0E00               	movlw	0
 27735  016F36  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 27736  016F38  0E0A               	movlw	10
 27737  016F3A  6F19               	movwf	___awmod@divisor& (0+255),b
 27738  016F3C  C17B  F117         	movff	fround@prec,___awmod@dividend
 27739  016F40  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 27740  016F42  ECE9  F0CE         	call	___awmod	;wreg free
 27741  016F46  0101               	movlb	1	; () banked
 27742  016F48  90D8               	bcf	status,0,c
 27743  016F4A  3717               	rlcf	?___awmod& (0+255),f,b
 27744  016F4C  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27745  016F4E  90D8               	bcf	status,0,c
 27746  016F50  3717               	rlcf	?___awmod& (0+255),f,b
 27747  016F52  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 27748  016F54  0ED7               	movlw	low __npowers_
 27749  016F56  2517               	addwf	?___awmod& (0+255),w,b
 27750  016F58  6EF6               	movwf	tblptrl,c
 27751  016F5A  0ECE               	movlw	high __npowers_
 27752  016F5C  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 27753  016F5E  6EF7               	movwf	tblptrh,c
 27754  016F60                     	if	1	;There are 3 active tblptr bytes
 27755  016F60  6AF8               	clrf	tblptru,c
 27756  016F62  0E00               	movlw	low (__mediumconst shr (0+16))
 27757  016F64  22F8               	addwfc	tblptru,f,c
 27758  016F66                     	endif
 27759  016F66  0009               	tblrd		*+
 27760  016F68  CFF5 F15A          	movff	tablat,___flmul@a
 27761  016F6C  0009               	tblrd		*+
 27762  016F6E  CFF5 F15B          	movff	tablat,___flmul@a+1
 27763  016F72  0009               	tblrd		*+
 27764  016F74  CFF5 F15C          	movff	tablat,___flmul@a+2
 27765  016F78  000A               	tblrd		*-
 27766  016F7A  CFF5 F15D          	movff	tablat,___flmul@a+3
 27767  016F7E  0E00               	movlw	0
 27768  016F80  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 27769  016F82  0E0A               	movlw	10
 27770  016F84  6F1F               	movwf	___awdiv@divisor& (0+255),b
 27771  016F86  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 27772  016F8A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 27773  016F8C  EC25  F0CD         	call	___awdiv	;wreg free
 27774  016F90  0101               	movlb	1	; () banked
 27775  016F92  90D8               	bcf	status,0,c
 27776  016F94  371D               	rlcf	?___awdiv& (0+255),f,b
 27777  016F96  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27778  016F98  90D8               	bcf	status,0,c
 27779  016F9A  371D               	rlcf	?___awdiv& (0+255),f,b
 27780  016F9C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 27781  016F9E  0E24               	movlw	36
 27782  016FA0  271D               	addwf	?___awdiv& (0+255),f,b
 27783  016FA2  0E00               	movlw	0
 27784  016FA4  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 27785  016FA6  0ED7               	movlw	low __npowers_
 27786  016FA8  251D               	addwf	?___awdiv& (0+255),w,b
 27787  016FAA  6EF6               	movwf	tblptrl,c
 27788  016FAC  0ECE               	movlw	high __npowers_
 27789  016FAE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 27790  016FB0  6EF7               	movwf	tblptrh,c
 27791  016FB2                     	if	1	;There are 3 active tblptr bytes
 27792  016FB2  6AF8               	clrf	tblptru,c
 27793  016FB4  0E00               	movlw	low (__mediumconst shr (0+16))
 27794  016FB6  22F8               	addwfc	tblptru,f,c
 27795  016FB8                     	endif
 27796  016FB8  0009               	tblrd		*+
 27797  016FBA  CFF5 F156          	movff	tablat,___flmul@b
 27798  016FBE  0009               	tblrd		*+
 27799  016FC0  CFF5 F157          	movff	tablat,___flmul@b+1
 27800  016FC4  0009               	tblrd		*+
 27801  016FC6  CFF5 F158          	movff	tablat,___flmul@b+2
 27802  016FCA  000A               	tblrd		*-
 27803  016FCC  CFF5 F159          	movff	tablat,___flmul@b+3
 27804  016FD0  ECE4  F0AB         	call	___flmul	;wreg free
 27805  016FD4  C156  F177         	movff	?___flmul,_fround$5187
 27806  016FD8  C157  F178         	movff	?___flmul+1,_fround$5187+1
 27807  016FDC  C158  F179         	movff	?___flmul+2,_fround$5187+2
 27808  016FE0  C159  F17A         	movff	?___flmul+3,_fround$5187+3
 27809                           
 27810                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 27811  016FE4  C177  F156         	movff	_fround$5187,___flmul@b
 27812  016FE8  C178  F157         	movff	_fround$5187+1,___flmul@b+1
 27813  016FEC  C179  F158         	movff	_fround$5187+2,___flmul@b+2
 27814  016FF0  C17A  F159         	movff	_fround$5187+3,___flmul@b+3
 27815  016FF4  0E00               	movlw	0
 27816  016FF6  0101               	movlb	1	; () banked
 27817  016FF8  6F5A               	movwf	___flmul@a& (0+255),b
 27818  016FFA  0E00               	movlw	0
 27819  016FFC  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27820  016FFE  0E00               	movlw	0
 27821  017000  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27822  017002  0E3F               	movlw	63
 27823  017004  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27824  017006  ECE4  F0AB         	call	___flmul	;wreg free
 27825  01700A  C156  F16F         	movff	?___flmul,?_fround
 27826  01700E  C157  F170         	movff	?___flmul+1,?_fround+1
 27827  017012  C158  F171         	movff	?___flmul+2,?_fround+2
 27828  017016  C159  F172         	movff	?___flmul+3,?_fround+3
 27829  01701A  0012               	return	
 27830  01701C                     l1926:
 27831                           
 27832                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27833  01701C  0101               	movlb	1	; () banked
 27834  01701E  517B               	movf	fround@prec& (0+255),w,b
 27835  017020  0D04               	mullw	4
 27836  017022  0ED7               	movlw	low __npowers_
 27837  017024  24F3               	addwf	prodl,w,c
 27838  017026  6EF6               	movwf	tblptrl,c
 27839  017028  0ECE               	movlw	high __npowers_
 27840  01702A  20F4               	addwfc	prodh,w,c
 27841  01702C  6EF7               	movwf	tblptrh,c
 27842  01702E                     	if	1	;There are 3 active tblptr bytes
 27843  01702E  6AF8               	clrf	tblptru,c
 27844  017030  0E00               	movlw	low (__mediumconst shr (0+16))
 27845  017032  22F8               	addwfc	tblptru,f,c
 27846  017034                     	endif
 27847  017034  0009               	tblrd		*+
 27848  017036  CFF5 F156          	movff	tablat,___flmul@b
 27849  01703A  0009               	tblrd		*+
 27850  01703C  CFF5 F157          	movff	tablat,___flmul@b+1
 27851  017040  0009               	tblrd		*+
 27852  017042  CFF5 F158          	movff	tablat,___flmul@b+2
 27853  017046  000A               	tblrd		*-
 27854  017048  CFF5 F159          	movff	tablat,___flmul@b+3
 27855  01704C  0E00               	movlw	0
 27856  01704E  6F5A               	movwf	___flmul@a& (0+255),b
 27857  017050  0E00               	movlw	0
 27858  017052  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 27859  017054  0E00               	movlw	0
 27860  017056  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 27861  017058  0E3F               	movlw	63
 27862  01705A  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 27863  01705C  ECE4  F0AB         	call	___flmul	;wreg free
 27864  017060  C156  F16F         	movff	?___flmul,?_fround
 27865  017064  C157  F170         	movff	?___flmul+1,?_fround+1
 27866  017068  C158  F171         	movff	?___flmul+2,?_fround+2
 27867  01706C  C159  F172         	movff	?___flmul+3,?_fround+3
 27868  017070  0012               	return	
 27869  017072                     __end_of_fround:
 27870                           	opt stack 0
 27871                           tosu	equ	0xFFF
 27872                           tosh	equ	0xFFE
 27873                           tosl	equ	0xFFD
 27874                           pclath	equ	0xFFA
 27875                           tblptru	equ	0xFF8
 27876                           tblptrh	equ	0xFF7
 27877                           tblptrl	equ	0xFF6
 27878                           tablat	equ	0xFF5
 27879                           prodh	equ	0xFF4
 27880                           prodl	equ	0xFF3
 27881                           intcon	equ	0xFF2
 27882                           indf0	equ	0xFEF
 27883                           postinc0	equ	0xFEE
 27884                           fsr0h	equ	0xFEA
 27885                           fsr0l	equ	0xFE9
 27886                           wreg	equ	0xFE8
 27887                           indf1	equ	0xFE7
 27888                           postdec1	equ	0xFE5
 27889                           plusw1	equ	0xFE3
 27890                           fsr1h	equ	0xFE2
 27891                           fsr1l	equ	0xFE1
 27892                           indf2	equ	0xFDF
 27893                           postinc2	equ	0xFDE
 27894                           postdec2	equ	0xFDD
 27895                           plusw2	equ	0xFDB
 27896                           fsr2h	equ	0xFDA
 27897                           fsr2l	equ	0xFD9
 27898                           status	equ	0xFD8
 27899                           
 27900 ;; *************** function ___flmul *****************
 27901 ;; Defined at:
 27902 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 27903 ;; Parameters:    Size  Location     Type
 27904 ;;  b               4   86[BANK1 ] unsigned char 
 27905 ;;  a               4   90[BANK1 ] unsigned char 
 27906 ;; Auto vars:     Size  Location     Type
 27907 ;;  prod            4  105[BANK1 ] struct .
 27908 ;;  grs             4  100[BANK1 ] unsigned long 
 27909 ;;  temp            2  109[BANK1 ] struct .
 27910 ;;  bexp            1  104[BANK1 ] unsigned char 
 27911 ;;  aexp            1   99[BANK1 ] unsigned char 
 27912 ;;  sign            1   98[BANK1 ] unsigned char 
 27913 ;; Return value:  Size  Location     Type
 27914 ;;                  4   86[BANK1 ] unsigned char 
 27915 ;; Registers used:
 27916 ;;		wreg, status,2, status,0, prodl, prodh
 27917 ;; Tracked objects:
 27918 ;;		On entry : 0/0
 27919 ;;		On exit  : 0/0
 27920 ;;		Unchanged: 0/0
 27921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27922 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27923 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27924 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27925 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27926 ;;Total ram usage:       25 bytes
 27927 ;; Hardware stack levels used:    1
 27928 ;; Hardware stack levels required when called:   13
 27929 ;; This function calls:
 27930 ;;		Nothing
 27931 ;; This function is called by:
 27932 ;;		_ringBufferLUT
 27933 ;;		_fround
 27934 ;;		_scale
 27935 ;;		__doprnt
 27936 ;;		_ftoa
 27937 ;; This function uses a non-reentrant model
 27938 ;;
 27939                           
 27940                           	psect	text39
 27941  0157C8                     __ptext39:
 27942                           	opt stack 0
 27943  0157C8                     ___flmul:
 27944                           	opt stack 12
 27945                           
 27946                           ;incstack = 0
 27947  0157C8  0101               	movlb	1	; () banked
 27948  0157CA  5159               	movf	(___flmul@b+3)& (0+255),w,b
 27949  0157CC  0B80               	andlw	128
 27950  0157CE  6F62               	movwf	___flmul@sign& (0+255),b
 27951  0157D0  5159               	movf	(___flmul@b+3)& (0+255),w,b
 27952  0157D2  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 27953  0157D4  6F68               	movwf	___flmul@bexp& (0+255),b
 27954                           
 27955                           ; BSR set to: 1
 27956  0157D6  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 27957                           
 27958                           ; BSR set to: 1
 27959  0157D8  8168               	bsf	___flmul@bexp& (0+255),0,b
 27960                           
 27961                           ; BSR set to: 1
 27962                           
 27963                           ; BSR set to: 1
 27964  0157DA  5168               	movf	___flmul@bexp& (0+255),w,b
 27965  0157DC  B4D8               	btfsc	status,2,c
 27966  0157DE  D00D               	goto	l2802
 27967                           
 27968                           ; BSR set to: 1
 27969  0157E0  2968               	incf	___flmul@bexp& (0+255),w,b
 27970  0157E2  A4D8               	btfss	status,2,c
 27971  0157E4  D008               	goto	l2803
 27972                           
 27973                           ; BSR set to: 1
 27974  0157E6  0E00               	movlw	0
 27975  0157E8  6F56               	movwf	___flmul@b& (0+255),b
 27976  0157EA  0E00               	movlw	0
 27977  0157EC  6F57               	movwf	(___flmul@b+1)& (0+255),b
 27978  0157EE  0E00               	movlw	0
 27979  0157F0  6F58               	movwf	(___flmul@b+2)& (0+255),b
 27980  0157F2  0E00               	movlw	0
 27981  0157F4  6F59               	movwf	(___flmul@b+3)& (0+255),b
 27982  0157F6                     l2803:
 27983                           
 27984                           ; BSR set to: 1
 27985                           
 27986                           ; BSR set to: 1
 27987  0157F6  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 27988  0157F8  D008               	goto	l2804
 27989  0157FA                     l2802:
 27990                           
 27991                           ; BSR set to: 1
 27992                           
 27993                           ; BSR set to: 1
 27994  0157FA  0E00               	movlw	0
 27995  0157FC  6F56               	movwf	___flmul@b& (0+255),b
 27996  0157FE  0E00               	movlw	0
 27997  015800  6F57               	movwf	(___flmul@b+1)& (0+255),b
 27998  015802  0E00               	movlw	0
 27999  015804  6F58               	movwf	(___flmul@b+2)& (0+255),b
 28000  015806  0E00               	movlw	0
 28001  015808  6F59               	movwf	(___flmul@b+3)& (0+255),b
 28002  01580A                     l2804:
 28003                           
 28004                           ; BSR set to: 1
 28005                           
 28006                           ; BSR set to: 1
 28007  01580A  515D               	movf	(___flmul@a+3)& (0+255),w,b
 28008  01580C  0B80               	andlw	128
 28009  01580E  1B62               	xorwf	___flmul@sign& (0+255),f,b
 28010                           
 28011                           ; BSR set to: 1
 28012  015810  515D               	movf	(___flmul@a+3)& (0+255),w,b
 28013  015812  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 28014  015814  6F63               	movwf	___flmul@aexp& (0+255),b
 28015                           
 28016                           ; BSR set to: 1
 28017  015816  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 28018                           
 28019                           ; BSR set to: 1
 28020  015818  8163               	bsf	___flmul@aexp& (0+255),0,b
 28021                           
 28022                           ; BSR set to: 1
 28023                           
 28024                           ; BSR set to: 1
 28025  01581A  5163               	movf	___flmul@aexp& (0+255),w,b
 28026  01581C  B4D8               	btfsc	status,2,c
 28027  01581E  D00D               	goto	l2806
 28028                           
 28029                           ; BSR set to: 1
 28030  015820  2963               	incf	___flmul@aexp& (0+255),w,b
 28031  015822  A4D8               	btfss	status,2,c
 28032  015824  D008               	goto	l2807
 28033                           
 28034                           ; BSR set to: 1
 28035  015826  0E00               	movlw	0
 28036  015828  6F5A               	movwf	___flmul@a& (0+255),b
 28037  01582A  0E00               	movlw	0
 28038  01582C  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28039  01582E  0E00               	movlw	0
 28040  015830  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28041  015832  0E00               	movlw	0
 28042  015834  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28043  015836                     l2807:
 28044                           
 28045                           ; BSR set to: 1
 28046                           
 28047                           ; BSR set to: 1
 28048  015836  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 28049  015838  D008               	goto	l2808
 28050  01583A                     l2806:
 28051                           
 28052                           ; BSR set to: 1
 28053                           
 28054                           ; BSR set to: 1
 28055  01583A  0E00               	movlw	0
 28056  01583C  6F5A               	movwf	___flmul@a& (0+255),b
 28057  01583E  0E00               	movlw	0
 28058  015840  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 28059  015842  0E00               	movlw	0
 28060  015844  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 28061  015846  0E00               	movlw	0
 28062  015848  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 28063  01584A                     l2808:
 28064                           
 28065                           ; BSR set to: 1
 28066  01584A  5163               	movf	___flmul@aexp& (0+255),w,b
 28067  01584C  B4D8               	btfsc	status,2,c
 28068  01584E  D003               	goto	u17020
 28069                           
 28070                           ; BSR set to: 1
 28071  015850  5168               	movf	___flmul@bexp& (0+255),w,b
 28072  015852  A4D8               	btfss	status,2,c
 28073  015854  D009               	goto	l2809
 28074  015856                     u17020:
 28075                           
 28076                           ; BSR set to: 1
 28077                           
 28078                           ; BSR set to: 1
 28079  015856  0E00               	movlw	0
 28080  015858  6F56               	movwf	?___flmul& (0+255),b
 28081  01585A  0E00               	movlw	0
 28082  01585C  6F57               	movwf	(?___flmul+1)& (0+255),b
 28083  01585E  0E00               	movlw	0
 28084  015860  6F58               	movwf	(?___flmul+2)& (0+255),b
 28085  015862  0E00               	movlw	0
 28086  015864  6F59               	movwf	(?___flmul+3)& (0+255),b
 28087                           
 28088                           ; BSR set to: 1
 28089  015866  0012               	return	
 28090  015868                     l2809:
 28091                           
 28092                           ; BSR set to: 1
 28093                           
 28094                           ; BSR set to: 1
 28095  015868  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28096  01586A  0356               	mulwf	___flmul@b& (0+255),b
 28097  01586C  CFF3 F16D          	movff	prodl,___flmul@temp
 28098  015870  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28099                           
 28100                           ; BSR set to: 1
 28101  015874  516D               	movf	___flmul@temp& (0+255),w,b
 28102  015876  6F64               	movwf	___flmul@grs& (0+255),b
 28103  015878  6B65               	clrf	(___flmul@grs+1)& (0+255),b
 28104  01587A  6B66               	clrf	(___flmul@grs+2)& (0+255),b
 28105  01587C  6B67               	clrf	(___flmul@grs+3)& (0+255),b
 28106                           
 28107                           ; BSR set to: 1
 28108  01587E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28109  015880  6F69               	movwf	___flmul@prod& (0+255),b
 28110  015882  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 28111  015884  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 28112  015886  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 28113  015888  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28114  01588A  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28115  01588C  CFF3 F16D          	movff	prodl,___flmul@temp
 28116  015890  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28117                           
 28118                           ; BSR set to: 1
 28119  015894  516D               	movf	___flmul@temp& (0+255),w,b
 28120  015896  2764               	addwf	___flmul@grs& (0+255),f,b
 28121  015898  0E00               	movlw	0
 28122  01589A  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28123  01589C  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28124  01589E  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28125                           
 28126                           ; BSR set to: 1
 28127  0158A0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28128  0158A2  2769               	addwf	___flmul@prod& (0+255),f,b
 28129  0158A4  0E00               	movlw	0
 28130  0158A6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28131  0158A8  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28132  0158AA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28133  0158AC  515A               	movf	___flmul@a& (0+255),w,b
 28134  0158AE  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28135  0158B0  CFF3 F16D          	movff	prodl,___flmul@temp
 28136  0158B4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28137                           
 28138                           ; BSR set to: 1
 28139  0158B8  516D               	movf	___flmul@temp& (0+255),w,b
 28140  0158BA  2764               	addwf	___flmul@grs& (0+255),f,b
 28141  0158BC  0E00               	movlw	0
 28142  0158BE  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28143  0158C0  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28144  0158C2  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28145                           
 28146                           ; BSR set to: 1
 28147  0158C4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28148  0158C6  2769               	addwf	___flmul@prod& (0+255),f,b
 28149  0158C8  0E00               	movlw	0
 28150  0158CA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28151  0158CC  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28152  0158CE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28153                           
 28154                           ; BSR set to: 1
 28155  0158D0  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28156  0158D4  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28157  0158D8  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28158  0158DC  6B64               	clrf	___flmul@grs& (0+255),b
 28159                           
 28160                           ; BSR set to: 1
 28161  0158DE  515A               	movf	___flmul@a& (0+255),w,b
 28162  0158E0  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28163  0158E2  CFF3 F16D          	movff	prodl,___flmul@temp
 28164  0158E6  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28165                           
 28166                           ; BSR set to: 1
 28167  0158EA  516D               	movf	___flmul@temp& (0+255),w,b
 28168  0158EC  2764               	addwf	___flmul@grs& (0+255),f,b
 28169  0158EE  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28170  0158F0  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28171  0158F2  0E00               	movlw	0
 28172  0158F4  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28173  0158F6  0E00               	movlw	0
 28174  0158F8  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28175                           
 28176                           ; BSR set to: 1
 28177  0158FA  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28178  0158FC  0356               	mulwf	___flmul@b& (0+255),b
 28179  0158FE  CFF3 F16D          	movff	prodl,___flmul@temp
 28180  015902  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28181                           
 28182                           ; BSR set to: 1
 28183  015906  516D               	movf	___flmul@temp& (0+255),w,b
 28184  015908  2764               	addwf	___flmul@grs& (0+255),f,b
 28185  01590A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28186  01590C  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28187  01590E  0E00               	movlw	0
 28188  015910  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28189  015912  0E00               	movlw	0
 28190  015914  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28191                           
 28192                           ; BSR set to: 1
 28193  015916  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28194  01591A  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28195  01591E  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28196  015922  6B64               	clrf	___flmul@grs& (0+255),b
 28197  015924  515A               	movf	___flmul@a& (0+255),w,b
 28198  015926  0356               	mulwf	___flmul@b& (0+255),b
 28199  015928  CFF3 F16D          	movff	prodl,___flmul@temp
 28200  01592C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28201                           
 28202                           ; BSR set to: 1
 28203  015930  516D               	movf	___flmul@temp& (0+255),w,b
 28204  015932  2764               	addwf	___flmul@grs& (0+255),f,b
 28205  015934  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28206  015936  2365               	addwfc	(___flmul@grs+1)& (0+255),f,b
 28207  015938  0E00               	movlw	0
 28208  01593A  2366               	addwfc	(___flmul@grs+2)& (0+255),f,b
 28209  01593C  0E00               	movlw	0
 28210  01593E  2367               	addwfc	(___flmul@grs+3)& (0+255),f,b
 28211                           
 28212                           ; BSR set to: 1
 28213  015940  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28214  015942  0357               	mulwf	(___flmul@b+1)& (0+255),b
 28215  015944  CFF3 F16D          	movff	prodl,___flmul@temp
 28216  015948  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28217  01594C  516D               	movf	___flmul@temp& (0+255),w,b
 28218  01594E  2769               	addwf	___flmul@prod& (0+255),f,b
 28219  015950  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28220  015952  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28221  015954  0E00               	movlw	0
 28222  015956  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28223  015958  0E00               	movlw	0
 28224  01595A  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28225                           
 28226                           ; BSR set to: 1
 28227  01595C  515B               	movf	(___flmul@a+1)& (0+255),w,b
 28228  01595E  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28229  015960  CFF3 F16D          	movff	prodl,___flmul@temp
 28230  015964  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28231                           
 28232                           ; BSR set to: 1
 28233  015968  516D               	movf	___flmul@temp& (0+255),w,b
 28234  01596A  2769               	addwf	___flmul@prod& (0+255),f,b
 28235  01596C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28236  01596E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28237  015970  0E00               	movlw	0
 28238  015972  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28239  015974  0E00               	movlw	0
 28240  015976  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28241  015978  515C               	movf	(___flmul@a+2)& (0+255),w,b
 28242  01597A  0358               	mulwf	(___flmul@b+2)& (0+255),b
 28243  01597C  CFF3 F16D          	movff	prodl,___flmul@temp
 28244  015980  CFF4 F16E          	movff	prodh,___flmul@temp+1
 28245                           
 28246                           ; BSR set to: 1
 28247  015984  516D               	movf	___flmul@temp& (0+255),w,b
 28248  015986  6F5E               	movwf	??___flmul& (0+255),b
 28249  015988  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28250  01598A  6F5F               	movwf	(??___flmul+1)& (0+255),b
 28251  01598C  6B60               	clrf	(??___flmul+2)& (0+255),b
 28252  01598E  6B61               	clrf	(??___flmul+3)& (0+255),b
 28253  015990  C160  F161         	movff	??___flmul+2,??___flmul+3
 28254  015994  C15F  F160         	movff	??___flmul+1,??___flmul+2
 28255  015998  C15E  F15F         	movff	??___flmul,??___flmul+1
 28256  01599C  6B5E               	clrf	??___flmul& (0+255),b
 28257  01599E  515E               	movf	??___flmul& (0+255),w,b
 28258  0159A0  2769               	addwf	___flmul@prod& (0+255),f,b
 28259  0159A2  515F               	movf	(??___flmul+1)& (0+255),w,b
 28260  0159A4  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28261  0159A6  5160               	movf	(??___flmul+2)& (0+255),w,b
 28262  0159A8  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28263  0159AA  5161               	movf	(??___flmul+3)& (0+255),w,b
 28264  0159AC  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28265                           
 28266                           ; BSR set to: 1
 28267  0159AE  C164  F15E         	movff	___flmul@grs,??___flmul
 28268  0159B2  C165  F15F         	movff	___flmul@grs+1,??___flmul+1
 28269  0159B6  C166  F160         	movff	___flmul@grs+2,??___flmul+2
 28270  0159BA  C167  F161         	movff	___flmul@grs+3,??___flmul+3
 28271  0159BE  0E19               	movlw	25
 28272  0159C0  D005               	goto	u17030
 28273  0159C2                     u17035:
 28274  0159C2  90D8               	bcf	status,0,c
 28275  0159C4  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 28276  0159C6  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 28277  0159C8  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 28278  0159CA  335E               	rrcf	??___flmul& (0+255),f,b
 28279  0159CC                     u17030:
 28280  0159CC  2EE8               	decfsz	wreg,f,c
 28281  0159CE  D7F9               	goto	u17035
 28282  0159D0  515E               	movf	??___flmul& (0+255),w,b
 28283  0159D2  2769               	addwf	___flmul@prod& (0+255),f,b
 28284  0159D4  515F               	movf	(??___flmul+1)& (0+255),w,b
 28285  0159D6  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28286  0159D8  5160               	movf	(??___flmul+2)& (0+255),w,b
 28287  0159DA  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28288  0159DC  5161               	movf	(??___flmul+3)& (0+255),w,b
 28289  0159DE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28290                           
 28291                           ; BSR set to: 1
 28292  0159E0  C166  F167         	movff	___flmul@grs+2,___flmul@grs+3
 28293  0159E4  C165  F166         	movff	___flmul@grs+1,___flmul@grs+2
 28294  0159E8  C164  F165         	movff	___flmul@grs,___flmul@grs+1
 28295  0159EC  6B64               	clrf	___flmul@grs& (0+255),b
 28296                           
 28297                           ; BSR set to: 1
 28298  0159EE  5163               	movf	___flmul@aexp& (0+255),w,b
 28299  0159F0  C168  F15E         	movff	___flmul@bexp,??___flmul
 28300  0159F4  6B5F               	clrf	(??___flmul+1)& (0+255),b
 28301  0159F6  275E               	addwf	??___flmul& (0+255),f,b
 28302  0159F8  0E00               	movlw	0
 28303  0159FA  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 28304  0159FC  0E82               	movlw	130
 28305  0159FE  255E               	addwf	??___flmul& (0+255),w,b
 28306  015A00  6F6D               	movwf	___flmul@temp& (0+255),b
 28307  015A02  0EFF               	movlw	255
 28308  015A04  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 28309  015A06  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 28310  015A08  D00F               	goto	l2813
 28311  015A0A                     
 28312                           ; BSR set to: 1
 28313                           
 28314                           ; BSR set to: 1
 28315  015A0A  90D8               	bcf	status,0,c
 28316  015A0C  3769               	rlcf	___flmul@prod& (0+255),f,b
 28317  015A0E  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 28318  015A10  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 28319  015A12  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 28320                           
 28321                           ; BSR set to: 1
 28322  015A14  BF67               	btfsc	(___flmul@grs+3)& (0+255),7,b
 28323                           
 28324                           ; BSR set to: 1
 28325  015A16  8169               	bsf	___flmul@prod& (0+255),0,b
 28326                           
 28327                           ; BSR set to: 1
 28328  015A18  90D8               	bcf	status,0,c
 28329  015A1A  3764               	rlcf	___flmul@grs& (0+255),f,b
 28330  015A1C  3765               	rlcf	(___flmul@grs+1)& (0+255),f,b
 28331  015A1E  3766               	rlcf	(___flmul@grs+2)& (0+255),f,b
 28332  015A20  3767               	rlcf	(___flmul@grs+3)& (0+255),f,b
 28333  015A22  076D               	decf	___flmul@temp& (0+255),f,b
 28334  015A24  A0D8               	btfss	status,0,c
 28335  015A26  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 28336  015A28                     l2813:
 28337                           
 28338                           ; BSR set to: 1
 28339                           
 28340                           ; BSR set to: 1
 28341  015A28  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 28342  015A2A  D7EF               	goto	l2814
 28343                           
 28344                           ; BSR set to: 1
 28345                           
 28346                           ; BSR set to: 1
 28347  015A2C  0E00               	movlw	0
 28348  015A2E  6F63               	movwf	___flmul@aexp& (0+255),b
 28349                           
 28350                           ; BSR set to: 1
 28351  015A30  AF67               	btfss	(___flmul@grs+3)& (0+255),7,b
 28352  015A32  D016               	goto	l2820
 28353                           
 28354                           ; BSR set to: 1
 28355  015A34  0EFF               	movlw	255
 28356  015A36  1564               	andwf	___flmul@grs& (0+255),w,b
 28357  015A38  6F5E               	movwf	??___flmul& (0+255),b
 28358  015A3A  0EFF               	movlw	255
 28359  015A3C  1565               	andwf	(___flmul@grs+1)& (0+255),w,b
 28360  015A3E  6F5F               	movwf	(??___flmul+1)& (0+255),b
 28361  015A40  0EFF               	movlw	255
 28362  015A42  1566               	andwf	(___flmul@grs+2)& (0+255),w,b
 28363  015A44  6F60               	movwf	(??___flmul+2)& (0+255),b
 28364  015A46  0E7F               	movlw	127
 28365  015A48  1567               	andwf	(___flmul@grs+3)& (0+255),w,b
 28366  015A4A  6F61               	movwf	(??___flmul+3)& (0+255),b
 28367  015A4C  515E               	movf	??___flmul& (0+255),w,b
 28368  015A4E  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 28369  015A50  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 28370  015A52  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 28371  015A54  A4D8               	btfss	status,2,c
 28372  015A56  D002               	goto	u17080
 28373                           
 28374                           ; BSR set to: 1
 28375                           
 28376                           ; BSR set to: 1
 28377  015A58  A169               	btfss	___flmul@prod& (0+255),0,b
 28378  015A5A  D002               	goto	l2820
 28379  015A5C                     u17080:
 28380                           
 28381                           ; BSR set to: 1
 28382  015A5C  0E01               	movlw	1
 28383  015A5E  6F63               	movwf	___flmul@aexp& (0+255),b
 28384  015A60                     l2820:
 28385                           
 28386                           ; BSR set to: 1
 28387                           
 28388                           ; BSR set to: 1
 28389                           
 28390                           ; BSR set to: 1
 28391  015A60  5163               	movf	___flmul@aexp& (0+255),w,b
 28392  015A62  B4D8               	btfsc	status,2,c
 28393  015A64  D01F               	goto	l2822
 28394                           
 28395                           ; BSR set to: 1
 28396  015A66  0E01               	movlw	1
 28397  015A68  2769               	addwf	___flmul@prod& (0+255),f,b
 28398  015A6A  0E00               	movlw	0
 28399  015A6C  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 28400  015A6E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 28401  015A70  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 28402                           
 28403                           ; BSR set to: 1
 28404  015A72  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 28405  015A74  D017               	goto	l2822
 28406                           
 28407                           ; BSR set to: 1
 28408  015A76  C169  F15E         	movff	___flmul@prod,??___flmul
 28409  015A7A  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 28410  015A7E  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 28411  015A82  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 28412  015A86  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 28413  015A88  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 28414  015A8A  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 28415  015A8C  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 28416  015A8E  335E               	rrcf	??___flmul& (0+255),f,b
 28417  015A90  C15E  F169         	movff	??___flmul,___flmul@prod
 28418  015A94  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 28419  015A98  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 28420  015A9C  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 28421                           
 28422                           ; BSR set to: 1
 28423  015AA0  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 28424  015AA2  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 28425  015AA4                     l2822:
 28426                           
 28427                           ; BSR set to: 1
 28428                           
 28429                           ; BSR set to: 1
 28430                           
 28431                           ; BSR set to: 1
 28432  015AA4  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28433  015AA6  D00D               	goto	l2823
 28434  015AA8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28435  015AAA  E103               	bnz	u17110
 28436  015AAC  296D               	incf	___flmul@temp& (0+255),w,b
 28437  015AAE  A0D8               	btfss	status,0,c
 28438  015AB0  D008               	goto	l2823
 28439  015AB2                     u17110:
 28440                           
 28441                           ; BSR set to: 1
 28442  015AB2  0E00               	movlw	0
 28443  015AB4  6F69               	movwf	___flmul@prod& (0+255),b
 28444  015AB6  0E00               	movlw	0
 28445  015AB8  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28446  015ABA  0E80               	movlw	128
 28447  015ABC  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28448  015ABE  0E7F               	movlw	127
 28449  015AC0  D020               	goto	L5
 28450  015AC2                     l2823:
 28451                           
 28452                           ; BSR set to: 1
 28453                           
 28454                           ; BSR set to: 1
 28455  015AC2  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 28456  015AC4  D005               	goto	u17120
 28457  015AC6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 28458  015AC8  E10E               	bnz	l2825
 28459  015ACA  056D               	decf	___flmul@temp& (0+255),w,b
 28460  015ACC  B0D8               	btfsc	status,0,c
 28461  015ACE  D00B               	goto	l2825
 28462  015AD0                     u17120:
 28463                           
 28464                           ; BSR set to: 1
 28465  015AD0  0E00               	movlw	0
 28466  015AD2  6F69               	movwf	___flmul@prod& (0+255),b
 28467  015AD4  0E00               	movlw	0
 28468  015AD6  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 28469  015AD8  0E00               	movlw	0
 28470  015ADA  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 28471  015ADC  0E00               	movlw	0
 28472  015ADE  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28473  015AE0  0E00               	movlw	0
 28474  015AE2  6F62               	movwf	___flmul@sign& (0+255),b
 28475  015AE4  D00F               	goto	l2826
 28476  015AE6                     l2825:
 28477                           
 28478                           ; BSR set to: 1
 28479  015AE6  C16D  F168         	movff	___flmul@temp,___flmul@bexp
 28480                           
 28481                           ; BSR set to: 1
 28482  015AEA  0EFF               	movlw	255
 28483  015AEC  1769               	andwf	___flmul@prod& (0+255),f,b
 28484  015AEE  0EFF               	movlw	255
 28485  015AF0  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 28486  015AF2  0E7F               	movlw	127
 28487  015AF4  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 28488  015AF6  0E00               	movlw	0
 28489  015AF8  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 28490                           
 28491                           ; BSR set to: 1
 28492  015AFA  B168               	btfsc	___flmul@bexp& (0+255),0,b
 28493                           
 28494                           ; BSR set to: 1
 28495  015AFC  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 28496                           
 28497                           ; BSR set to: 1
 28498                           
 28499                           ; BSR set to: 1
 28500  015AFE  90D8               	bcf	status,0,c
 28501  015B00  3168               	rrcf	___flmul@bexp& (0+255),w,b
 28502  015B02                     L5:
 28503  015B02  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 28504  015B04                     l2826:
 28505                           
 28506                           ; BSR set to: 1
 28507                           
 28508                           ; BSR set to: 1
 28509                           
 28510                           ; BSR set to: 1
 28511  015B04  5162               	movf	___flmul@sign& (0+255),w,b
 28512  015B06  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 28513                           
 28514                           ; BSR set to: 1
 28515  015B08  C169  F156         	movff	___flmul@prod,?___flmul
 28516  015B0C  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 28517  015B10  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 28518  015B14  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 28519  015B18  0012               	return	
 28520  015B1A                     __end_of___flmul:
 28521                           	opt stack 0
 28522                           tosu	equ	0xFFF
 28523                           tosh	equ	0xFFE
 28524                           tosl	equ	0xFFD
 28525                           pclath	equ	0xFFA
 28526                           tblptru	equ	0xFF8
 28527                           tblptrh	equ	0xFF7
 28528                           tblptrl	equ	0xFF6
 28529                           tablat	equ	0xFF5
 28530                           prodh	equ	0xFF4
 28531                           prodl	equ	0xFF3
 28532                           intcon	equ	0xFF2
 28533                           indf0	equ	0xFEF
 28534                           postinc0	equ	0xFEE
 28535                           fsr0h	equ	0xFEA
 28536                           fsr0l	equ	0xFE9
 28537                           wreg	equ	0xFE8
 28538                           indf1	equ	0xFE7
 28539                           postdec1	equ	0xFE5
 28540                           plusw1	equ	0xFE3
 28541                           fsr1h	equ	0xFE2
 28542                           fsr1l	equ	0xFE1
 28543                           indf2	equ	0xFDF
 28544                           postinc2	equ	0xFDE
 28545                           postdec2	equ	0xFDD
 28546                           plusw2	equ	0xFDB
 28547                           fsr2h	equ	0xFDA
 28548                           fsr2l	equ	0xFD9
 28549                           status	equ	0xFD8
 28550                           
 28551 ;; *************** function ___awmod *****************
 28552 ;; Defined at:
 28553 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 28554 ;; Parameters:    Size  Location     Type
 28555 ;;  dividend        2   23[BANK1 ] int 
 28556 ;;  divisor         2   25[BANK1 ] int 
 28557 ;; Auto vars:     Size  Location     Type
 28558 ;;  sign            1   28[BANK1 ] unsigned char 
 28559 ;;  counter         1   27[BANK1 ] unsigned char 
 28560 ;; Return value:  Size  Location     Type
 28561 ;;                  2   23[BANK1 ] int 
 28562 ;; Registers used:
 28563 ;;		wreg, status,2, status,0
 28564 ;; Tracked objects:
 28565 ;;		On entry : 0/0
 28566 ;;		On exit  : 0/0
 28567 ;;		Unchanged: 0/0
 28568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28569 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28570 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28572 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28573 ;;Total ram usage:        6 bytes
 28574 ;; Hardware stack levels used:    1
 28575 ;; Hardware stack levels required when called:   13
 28576 ;; This function calls:
 28577 ;;		Nothing
 28578 ;; This function is called by:
 28579 ;;		_fround
 28580 ;;		_scale
 28581 ;; This function uses a non-reentrant model
 28582 ;;
 28583                           
 28584                           	psect	text40
 28585  019DD2                     __ptext40:
 28586                           	opt stack 0
 28587  019DD2                     ___awmod:
 28588                           	opt stack 12
 28589                           
 28590                           ; BSR set to: 1
 28591                           ;incstack = 0
 28592  019DD2  0E00               	movlw	0
 28593  019DD4  0101               	movlb	1	; () banked
 28594  019DD6  6F1C               	movwf	___awmod@sign& (0+255),b
 28595                           
 28596                           ; BSR set to: 1
 28597  019DD8  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28598  019DDA  D006               	goto	l2352
 28599                           
 28600                           ; BSR set to: 1
 28601  019DDC  6D17               	negf	___awmod@dividend& (0+255),b
 28602  019DDE  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28603  019DE0  B0D8               	btfsc	status,0,c
 28604  019DE2  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28605                           
 28606                           ; BSR set to: 1
 28607  019DE4  0E01               	movlw	1
 28608  019DE6  6F1C               	movwf	___awmod@sign& (0+255),b
 28609  019DE8                     l2352:
 28610                           
 28611                           ; BSR set to: 1
 28612                           
 28613                           ; BSR set to: 1
 28614  019DE8  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28615  019DEA  D004               	goto	l2353
 28616                           
 28617                           ; BSR set to: 1
 28618  019DEC  6D19               	negf	___awmod@divisor& (0+255),b
 28619  019DEE  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 28620  019DF0  B0D8               	btfsc	status,0,c
 28621  019DF2  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 28622  019DF4                     l2353:
 28623                           
 28624                           ; BSR set to: 1
 28625                           
 28626                           ; BSR set to: 1
 28627  019DF4  5119               	movf	___awmod@divisor& (0+255),w,b
 28628  019DF6  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28629  019DF8  B4D8               	btfsc	status,2,c
 28630  019DFA  D018               	goto	l2360
 28631                           
 28632                           ; BSR set to: 1
 28633  019DFC  0E01               	movlw	1
 28634  019DFE  6F1B               	movwf	___awmod@counter& (0+255),b
 28635  019E00  D004               	goto	l2355
 28636  019E02                     
 28637                           ; BSR set to: 1
 28638                           
 28639                           ; BSR set to: 1
 28640  019E02  90D8               	bcf	status,0,c
 28641  019E04  3719               	rlcf	___awmod@divisor& (0+255),f,b
 28642  019E06  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28643  019E08  2B1B               	incf	___awmod@counter& (0+255),f,b
 28644  019E0A                     l2355:
 28645                           
 28646                           ; BSR set to: 1
 28647                           
 28648                           ; BSR set to: 1
 28649  019E0A  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28650  019E0C  D7FA               	goto	l2356
 28651  019E0E                     u17230:
 28652                           
 28653                           ; BSR set to: 1
 28654                           
 28655                           ; BSR set to: 1
 28656                           
 28657                           ; BSR set to: 1
 28658  019E0E  5119               	movf	___awmod@divisor& (0+255),w,b
 28659  019E10  5D17               	subwf	___awmod@dividend& (0+255),w,b
 28660  019E12  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28661  019E14  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28662  019E16  A0D8               	btfss	status,0,c
 28663  019E18  D004               	goto	l2359
 28664                           
 28665                           ; BSR set to: 1
 28666  019E1A  5119               	movf	___awmod@divisor& (0+255),w,b
 28667  019E1C  5F17               	subwf	___awmod@dividend& (0+255),f,b
 28668  019E1E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 28669  019E20  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28670  019E22                     l2359:
 28671                           
 28672                           ; BSR set to: 1
 28673                           
 28674                           ; BSR set to: 1
 28675  019E22  90D8               	bcf	status,0,c
 28676  019E24  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28677  019E26  3319               	rrcf	___awmod@divisor& (0+255),f,b
 28678                           
 28679                           ; BSR set to: 1
 28680  019E28  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 28681  019E2A  D7F1               	goto	u17230
 28682  019E2C                     l2360:
 28683                           
 28684                           ; BSR set to: 1
 28685                           
 28686                           ; BSR set to: 1
 28687                           
 28688                           ; BSR set to: 1
 28689  019E2C  511C               	movf	___awmod@sign& (0+255),w,b
 28690  019E2E  B4D8               	btfsc	status,2,c
 28691  019E30  D004               	goto	l2361
 28692                           
 28693                           ; BSR set to: 1
 28694  019E32  6D17               	negf	___awmod@dividend& (0+255),b
 28695  019E34  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 28696  019E36  B0D8               	btfsc	status,0,c
 28697  019E38  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 28698  019E3A                     l2361:
 28699                           
 28700                           ; BSR set to: 1
 28701                           
 28702                           ; BSR set to: 1
 28703  019E3A  C117  F117         	movff	___awmod@dividend,?___awmod
 28704  019E3E  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 28705  019E42  0012               	return	
 28706  019E44                     __end_of___awmod:
 28707                           	opt stack 0
 28708                           tosu	equ	0xFFF
 28709                           tosh	equ	0xFFE
 28710                           tosl	equ	0xFFD
 28711                           pclath	equ	0xFFA
 28712                           tblptru	equ	0xFF8
 28713                           tblptrh	equ	0xFF7
 28714                           tblptrl	equ	0xFF6
 28715                           tablat	equ	0xFF5
 28716                           prodh	equ	0xFF4
 28717                           prodl	equ	0xFF3
 28718                           intcon	equ	0xFF2
 28719                           indf0	equ	0xFEF
 28720                           postinc0	equ	0xFEE
 28721                           fsr0h	equ	0xFEA
 28722                           fsr0l	equ	0xFE9
 28723                           wreg	equ	0xFE8
 28724                           indf1	equ	0xFE7
 28725                           postdec1	equ	0xFE5
 28726                           plusw1	equ	0xFE3
 28727                           fsr1h	equ	0xFE2
 28728                           fsr1l	equ	0xFE1
 28729                           indf2	equ	0xFDF
 28730                           postinc2	equ	0xFDE
 28731                           postdec2	equ	0xFDD
 28732                           plusw2	equ	0xFDB
 28733                           fsr2h	equ	0xFDA
 28734                           fsr2l	equ	0xFD9
 28735                           status	equ	0xFD8
 28736                           
 28737 ;; *************** function ___awdiv *****************
 28738 ;; Defined at:
 28739 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 28740 ;; Parameters:    Size  Location     Type
 28741 ;;  dividend        2   29[BANK1 ] int 
 28742 ;;  divisor         2   31[BANK1 ] int 
 28743 ;; Auto vars:     Size  Location     Type
 28744 ;;  quotient        2   35[BANK1 ] int 
 28745 ;;  sign            1   34[BANK1 ] unsigned char 
 28746 ;;  counter         1   33[BANK1 ] unsigned char 
 28747 ;; Return value:  Size  Location     Type
 28748 ;;                  2   29[BANK1 ] int 
 28749 ;; Registers used:
 28750 ;;		wreg, status,2, status,0
 28751 ;; Tracked objects:
 28752 ;;		On entry : 0/0
 28753 ;;		On exit  : 0/0
 28754 ;;		Unchanged: 0/0
 28755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28756 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28757 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28759 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28760 ;;Total ram usage:        8 bytes
 28761 ;; Hardware stack levels used:    1
 28762 ;; Hardware stack levels required when called:   13
 28763 ;; This function calls:
 28764 ;;		Nothing
 28765 ;; This function is called by:
 28766 ;;		_fround
 28767 ;;		_scale
 28768 ;;		__doprnt
 28769 ;; This function uses a non-reentrant model
 28770 ;;
 28771                           
 28772                           	psect	text41
 28773  019A4A                     __ptext41:
 28774                           	opt stack 0
 28775  019A4A                     ___awdiv:
 28776                           	opt stack 12
 28777                           
 28778                           ; BSR set to: 1
 28779                           ;incstack = 0
 28780  019A4A  0E00               	movlw	0
 28781  019A4C  0101               	movlb	1	; () banked
 28782  019A4E  6F22               	movwf	___awdiv@sign& (0+255),b
 28783                           
 28784                           ; BSR set to: 1
 28785  019A50  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28786  019A52  D006               	goto	l2339
 28787                           
 28788                           ; BSR set to: 1
 28789  019A54  6D1F               	negf	___awdiv@divisor& (0+255),b
 28790  019A56  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28791  019A58  B0D8               	btfsc	status,0,c
 28792  019A5A  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28793                           
 28794                           ; BSR set to: 1
 28795  019A5C  0E01               	movlw	1
 28796  019A5E  6F22               	movwf	___awdiv@sign& (0+255),b
 28797  019A60                     l2339:
 28798                           
 28799                           ; BSR set to: 1
 28800                           
 28801                           ; BSR set to: 1
 28802  019A60  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28803  019A62  D006               	goto	l2340
 28804                           
 28805                           ; BSR set to: 1
 28806  019A64  6D1D               	negf	___awdiv@dividend& (0+255),b
 28807  019A66  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28808  019A68  B0D8               	btfsc	status,0,c
 28809  019A6A  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28810                           
 28811                           ; BSR set to: 1
 28812  019A6C  0E01               	movlw	1
 28813  019A6E  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 28814  019A70                     l2340:
 28815                           
 28816                           ; BSR set to: 1
 28817                           
 28818                           ; BSR set to: 1
 28819  019A70  0E00               	movlw	0
 28820  019A72  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 28821  019A74  0E00               	movlw	0
 28822  019A76  6F23               	movwf	___awdiv@quotient& (0+255),b
 28823                           
 28824                           ; BSR set to: 1
 28825  019A78  511F               	movf	___awdiv@divisor& (0+255),w,b
 28826  019A7A  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28827  019A7C  B4D8               	btfsc	status,2,c
 28828  019A7E  D01C               	goto	l2347
 28829                           
 28830                           ; BSR set to: 1
 28831  019A80  0E01               	movlw	1
 28832  019A82  6F21               	movwf	___awdiv@counter& (0+255),b
 28833  019A84  D004               	goto	l2342
 28834  019A86                     
 28835                           ; BSR set to: 1
 28836                           
 28837                           ; BSR set to: 1
 28838  019A86  90D8               	bcf	status,0,c
 28839  019A88  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 28840  019A8A  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28841  019A8C  2B21               	incf	___awdiv@counter& (0+255),f,b
 28842  019A8E                     l2342:
 28843                           
 28844                           ; BSR set to: 1
 28845                           
 28846                           ; BSR set to: 1
 28847  019A8E  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28848  019A90  D7FA               	goto	l2343
 28849  019A92                     u17170:
 28850                           
 28851                           ; BSR set to: 1
 28852                           
 28853                           ; BSR set to: 1
 28854                           
 28855                           ; BSR set to: 1
 28856  019A92  90D8               	bcf	status,0,c
 28857  019A94  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 28858  019A96  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28859                           
 28860                           ; BSR set to: 1
 28861  019A98  511F               	movf	___awdiv@divisor& (0+255),w,b
 28862  019A9A  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 28863  019A9C  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28864  019A9E  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28865  019AA0  A0D8               	btfss	status,0,c
 28866  019AA2  D005               	goto	l2346
 28867                           
 28868                           ; BSR set to: 1
 28869  019AA4  511F               	movf	___awdiv@divisor& (0+255),w,b
 28870  019AA6  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 28871  019AA8  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28872  019AAA  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28873                           
 28874                           ; BSR set to: 1
 28875  019AAC  8123               	bsf	___awdiv@quotient& (0+255),0,b
 28876  019AAE                     l2346:
 28877                           
 28878                           ; BSR set to: 1
 28879                           
 28880                           ; BSR set to: 1
 28881  019AAE  90D8               	bcf	status,0,c
 28882  019AB0  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28883  019AB2  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 28884                           
 28885                           ; BSR set to: 1
 28886  019AB4  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 28887  019AB6  D7ED               	goto	u17170
 28888  019AB8                     l2347:
 28889                           
 28890                           ; BSR set to: 1
 28891                           
 28892                           ; BSR set to: 1
 28893                           
 28894                           ; BSR set to: 1
 28895  019AB8  5122               	movf	___awdiv@sign& (0+255),w,b
 28896  019ABA  B4D8               	btfsc	status,2,c
 28897  019ABC  D004               	goto	l2348
 28898                           
 28899                           ; BSR set to: 1
 28900  019ABE  6D23               	negf	___awdiv@quotient& (0+255),b
 28901  019AC0  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28902  019AC2  B0D8               	btfsc	status,0,c
 28903  019AC4  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28904  019AC6                     l2348:
 28905                           
 28906                           ; BSR set to: 1
 28907                           
 28908                           ; BSR set to: 1
 28909  019AC6  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 28910  019ACA  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 28911  019ACE  0012               	return	
 28912  019AD0                     __end_of___awdiv:
 28913                           	opt stack 0
 28914                           tosu	equ	0xFFF
 28915                           tosh	equ	0xFFE
 28916                           tosl	equ	0xFFD
 28917                           pclath	equ	0xFFA
 28918                           tblptru	equ	0xFF8
 28919                           tblptrh	equ	0xFF7
 28920                           tblptrl	equ	0xFF6
 28921                           tablat	equ	0xFF5
 28922                           prodh	equ	0xFF4
 28923                           prodl	equ	0xFF3
 28924                           intcon	equ	0xFF2
 28925                           indf0	equ	0xFEF
 28926                           postinc0	equ	0xFEE
 28927                           fsr0h	equ	0xFEA
 28928                           fsr0l	equ	0xFE9
 28929                           wreg	equ	0xFE8
 28930                           indf1	equ	0xFE7
 28931                           postdec1	equ	0xFE5
 28932                           plusw1	equ	0xFE3
 28933                           fsr1h	equ	0xFE2
 28934                           fsr1l	equ	0xFE1
 28935                           indf2	equ	0xFDF
 28936                           postinc2	equ	0xFDE
 28937                           postdec2	equ	0xFDD
 28938                           plusw2	equ	0xFDB
 28939                           fsr2h	equ	0xFDA
 28940                           fsr2l	equ	0xFD9
 28941                           status	equ	0xFD8
 28942                           
 28943 ;; *************** function __tdiv_to_l_ *****************
 28944 ;; Defined at:
 28945 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 28946 ;; Parameters:    Size  Location     Type
 28947 ;;  f1              3   23[BANK1 ] float 
 28948 ;;  f2              3   26[BANK1 ] float 
 28949 ;; Auto vars:     Size  Location     Type
 28950 ;;  quot            4   32[BANK1 ] unsigned long 
 28951 ;;  exp1            1   37[BANK1 ] unsigned char 
 28952 ;;  cntr            1   36[BANK1 ] unsigned char 
 28953 ;; Return value:  Size  Location     Type
 28954 ;;                  4   23[BANK1 ] unsigned long 
 28955 ;; Registers used:
 28956 ;;		wreg, status,2, status,0
 28957 ;; Tracked objects:
 28958 ;;		On entry : 0/0
 28959 ;;		On exit  : 0/0
 28960 ;;		Unchanged: 0/0
 28961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28962 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28963 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28964 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28965 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28966 ;;Total ram usage:       15 bytes
 28967 ;; Hardware stack levels used:    1
 28968 ;; Hardware stack levels required when called:   13
 28969 ;; This function calls:
 28970 ;;		Nothing
 28971 ;; This function is called by:
 28972 ;;		__doprnt
 28973 ;; This function uses a non-reentrant model
 28974 ;;
 28975                           
 28976                           	psect	text42
 28977  0185A2                     __ptext42:
 28978                           	opt stack 0
 28979  0185A2                     __tdiv_to_l_:
 28980                           	opt stack 13
 28981                           
 28982                           ; BSR set to: 1
 28983                           ;incstack = 0
 28984  0185A2  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 28985  0185A6  0101               	movlb	1	; () banked
 28986  0185A8  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 28987  0185AA  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 28988  0185AC  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 28989  0185AE  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 28990  0185B0  E301               	bnc	u17941
 28991  0185B2  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 28992  0185B4                     u17941:
 28993  0185B4  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 28994  0185B6  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 28995  0185B8  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 28996  0185BA  A4D8               	btfss	status,2,c
 28997  0185BC  D009               	goto	l2487
 28998                           
 28999                           ; BSR set to: 1
 29000  0185BE  0E00               	movlw	0
 29001  0185C0  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29002  0185C2  0E00               	movlw	0
 29003  0185C4  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29004  0185C6  0E00               	movlw	0
 29005  0185C8  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29006  0185CA  0E00               	movlw	0
 29007  0185CC  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29008                           
 29009                           ; BSR set to: 1
 29010  0185CE  0012               	return	
 29011  0185D0                     l2487:
 29012                           
 29013                           ; BSR set to: 1
 29014                           
 29015                           ; BSR set to: 1
 29016  0185D0  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29017  0185D4  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29018  0185D6  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29019  0185D8  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29020  0185DA  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29021  0185DC  E301               	bnc	u17961
 29022  0185DE  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29023  0185E0                     u17961:
 29024  0185E0  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 29025  0185E2  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29026  0185E4  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29027  0185E6  A4D8               	btfss	status,2,c
 29028  0185E8  D009               	goto	l2489
 29029                           
 29030                           ; BSR set to: 1
 29031  0185EA  0E00               	movlw	0
 29032  0185EC  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29033  0185EE  0E00               	movlw	0
 29034  0185F0  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29035  0185F2  0E00               	movlw	0
 29036  0185F4  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29037  0185F6  0E00               	movlw	0
 29038  0185F8  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29039                           
 29040                           ; BSR set to: 1
 29041  0185FA  0012               	return	
 29042  0185FC                     l2489:
 29043                           
 29044                           ; BSR set to: 1
 29045                           
 29046                           ; BSR set to: 1
 29047  0185FC  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29048                           
 29049                           ; BSR set to: 1
 29050  0185FE  0EFF               	movlw	255
 29051  018600  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29052  018602  0EFF               	movlw	255
 29053  018604  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29054  018606  0E00               	movlw	0
 29055  018608  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29056  01860A  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29057                           
 29058                           ; BSR set to: 1
 29059  01860C  0EFF               	movlw	255
 29060  01860E  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29061  018610  0EFF               	movlw	255
 29062  018612  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29063  018614  0E00               	movlw	0
 29064  018616  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29065                           
 29066                           ; BSR set to: 1
 29067  018618  0E00               	movlw	0
 29068  01861A  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 29069  01861C  0E00               	movlw	0
 29070  01861E  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29071  018620  0E00               	movlw	0
 29072  018622  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29073  018624  0E00               	movlw	0
 29074  018626  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29075                           
 29076                           ; BSR set to: 1
 29077  018628  0E7F               	movlw	127
 29078  01862A  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29079                           
 29080                           ; BSR set to: 1
 29081  01862C  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29082  01862E  0F98               	addlw	152
 29083  018630  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29084                           
 29085                           ; BSR set to: 1
 29086  018632  0E18               	movlw	24
 29087  018634  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29088  018636                     l2490:
 29089                           
 29090                           ; BSR set to: 1
 29091  018636  90D8               	bcf	status,0,c
 29092  018638  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29093  01863A  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29094  01863C  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29095  01863E  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29096                           
 29097                           ; BSR set to: 1
 29098  018640  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29099  018642  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29100  018644  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29101  018646  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29102  018648  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29103  01864A  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29104  01864C  A0D8               	btfss	status,0,c
 29105  01864E  D007               	goto	l2491
 29106                           
 29107                           ; BSR set to: 1
 29108  018650  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29109  018652  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29110  018654  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29111  018656  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29112  018658  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29113  01865A  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29114                           
 29115                           ; BSR set to: 1
 29116  01865C  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29117  01865E                     l2491:
 29118                           
 29119                           ; BSR set to: 1
 29120  01865E  90D8               	bcf	status,0,c
 29121  018660  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29122  018662  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29123  018664  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29124                           
 29125                           ; BSR set to: 1
 29126  018666  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29127  018668  D7E6               	goto	l2490
 29128                           
 29129                           ; BSR set to: 1
 29130                           
 29131                           ; BSR set to: 1
 29132  01866A  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29133  01866C  D016               	goto	l2493
 29134                           
 29135                           ; BSR set to: 1
 29136  01866E  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29137  018670  0A80               	xorlw	128
 29138  018672  0F97               	addlw	151
 29139  018674  B0D8               	btfsc	status,0,c
 29140  018676  D009               	goto	l2494
 29141                           
 29142                           ; BSR set to: 1
 29143  018678  0E00               	movlw	0
 29144  01867A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29145  01867C  0E00               	movlw	0
 29146  01867E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29147  018680  0E00               	movlw	0
 29148  018682  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29149  018684  0E00               	movlw	0
 29150  018686  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29151                           
 29152                           ; BSR set to: 1
 29153  018688  0012               	return	
 29154  01868A                     l2494:
 29155                           
 29156                           ; BSR set to: 1
 29157                           
 29158                           ; BSR set to: 1
 29159                           
 29160                           ; BSR set to: 1
 29161  01868A  90D8               	bcf	status,0,c
 29162  01868C  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29163  01868E  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29164  018690  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29165  018692  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29166                           
 29167                           ; BSR set to: 1
 29168  018694  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29169  018696  D7F9               	goto	l2494
 29170                           
 29171                           ; BSR set to: 1
 29172  018698  D015               	goto	u18020
 29173  01869A                     l2493:
 29174                           
 29175                           ; BSR set to: 1
 29176                           
 29177                           ; BSR set to: 1
 29178  01869A  0E17               	movlw	23
 29179  01869C  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29180  01869E  D00F               	goto	l2499
 29181                           
 29182                           ; BSR set to: 1
 29183  0186A0  0E00               	movlw	0
 29184  0186A2  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 29185  0186A4  0E00               	movlw	0
 29186  0186A6  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29187  0186A8  0E00               	movlw	0
 29188  0186AA  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29189  0186AC  0E00               	movlw	0
 29190  0186AE  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29191                           
 29192                           ; BSR set to: 1
 29193  0186B0  0012               	return	
 29194  0186B2                     
 29195                           ; BSR set to: 1
 29196                           
 29197                           ; BSR set to: 1
 29198  0186B2  90D8               	bcf	status,0,c
 29199  0186B4  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29200  0186B6  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29201  0186B8  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29202  0186BA  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29203  0186BC  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29204  0186BE                     l2499:
 29205                           
 29206                           ; BSR set to: 1
 29207                           
 29208                           ; BSR set to: 1
 29209  0186BE  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29210  0186C0  A4D8               	btfss	status,2,c
 29211  0186C2  D7F7               	goto	l2500
 29212  0186C4                     u18020:
 29213                           
 29214                           ; BSR set to: 1
 29215                           
 29216                           ; BSR set to: 1
 29217  0186C4  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29218  0186C8  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29219  0186CC  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29220  0186D0  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29221                           
 29222                           ; BSR set to: 1
 29223  0186D4  0012               	return		;funcret
 29224  0186D6                     __end_of__tdiv_to_l_:
 29225                           	opt stack 0
 29226                           tosu	equ	0xFFF
 29227                           tosh	equ	0xFFE
 29228                           tosl	equ	0xFFD
 29229                           pclath	equ	0xFFA
 29230                           tblptru	equ	0xFF8
 29231                           tblptrh	equ	0xFF7
 29232                           tblptrl	equ	0xFF6
 29233                           tablat	equ	0xFF5
 29234                           prodh	equ	0xFF4
 29235                           prodl	equ	0xFF3
 29236                           intcon	equ	0xFF2
 29237                           indf0	equ	0xFEF
 29238                           postinc0	equ	0xFEE
 29239                           fsr0h	equ	0xFEA
 29240                           fsr0l	equ	0xFE9
 29241                           wreg	equ	0xFE8
 29242                           indf1	equ	0xFE7
 29243                           postdec1	equ	0xFE5
 29244                           plusw1	equ	0xFE3
 29245                           fsr1h	equ	0xFE2
 29246                           fsr1l	equ	0xFE1
 29247                           indf2	equ	0xFDF
 29248                           postinc2	equ	0xFDE
 29249                           postdec2	equ	0xFDD
 29250                           plusw2	equ	0xFDB
 29251                           fsr2h	equ	0xFDA
 29252                           fsr2l	equ	0xFD9
 29253                           status	equ	0xFD8
 29254                           
 29255 ;; *************** function __div_to_l_ *****************
 29256 ;; Defined at:
 29257 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 29258 ;; Parameters:    Size  Location     Type
 29259 ;;  f1              4   23[BANK1 ] unsigned long 
 29260 ;;  f2              4   27[BANK1 ] unsigned long 
 29261 ;; Auto vars:     Size  Location     Type
 29262 ;;  quot            4   31[BANK1 ] unsigned long 
 29263 ;;  exp1            1   36[BANK1 ] unsigned char 
 29264 ;;  cntr            1   35[BANK1 ] unsigned char 
 29265 ;; Return value:  Size  Location     Type
 29266 ;;                  4   23[BANK1 ] unsigned long 
 29267 ;; Registers used:
 29268 ;;		wreg, status,2, status,0
 29269 ;; Tracked objects:
 29270 ;;		On entry : 0/0
 29271 ;;		On exit  : 0/0
 29272 ;;		Unchanged: 0/0
 29273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29274 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29275 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29277 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29278 ;;Total ram usage:       14 bytes
 29279 ;; Hardware stack levels used:    1
 29280 ;; Hardware stack levels required when called:   13
 29281 ;; This function calls:
 29282 ;;		Nothing
 29283 ;; This function is called by:
 29284 ;;		__doprnt
 29285 ;; This function uses a non-reentrant model
 29286 ;;
 29287                           
 29288                           	psect	text43
 29289  018808                     __ptext43:
 29290                           	opt stack 0
 29291  018808                     __div_to_l_:
 29292                           	opt stack 13
 29293                           
 29294                           ; BSR set to: 1
 29295                           ;incstack = 0
 29296  018808  0101               	movlb	1	; () banked
 29297  01880A  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29298  01880C  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29299  01880E  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 29300  018810  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29301  018812  A4D8               	btfss	status,2,c
 29302  018814  D009               	goto	l2383
 29303                           
 29304                           ; BSR set to: 1
 29305  018816  0E00               	movlw	0
 29306  018818  6F17               	movwf	?__div_to_l_& (0+255),b
 29307  01881A  0E00               	movlw	0
 29308  01881C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29309  01881E  0E00               	movlw	0
 29310  018820  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29311  018822  0E00               	movlw	0
 29312  018824  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29313                           
 29314                           ; BSR set to: 1
 29315  018826  0012               	return	
 29316  018828                     l2383:
 29317                           
 29318                           ; BSR set to: 1
 29319                           
 29320                           ; BSR set to: 1
 29321  018828  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29322  01882A  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29323  01882C  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 29324  01882E  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 29325  018830  A4D8               	btfss	status,2,c
 29326  018832  D009               	goto	l2385
 29327                           
 29328                           ; BSR set to: 1
 29329  018834  0E00               	movlw	0
 29330  018836  6F17               	movwf	?__div_to_l_& (0+255),b
 29331  018838  0E00               	movlw	0
 29332  01883A  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29333  01883C  0E00               	movlw	0
 29334  01883E  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29335  018840  0E00               	movlw	0
 29336  018842  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29337                           
 29338                           ; BSR set to: 1
 29339  018844  0012               	return	
 29340  018846                     l2385:
 29341                           
 29342                           ; BSR set to: 1
 29343                           
 29344                           ; BSR set to: 1
 29345  018846  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29346                           
 29347                           ; BSR set to: 1
 29348  018848  0EFF               	movlw	255
 29349  01884A  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 29350  01884C  0EFF               	movlw	255
 29351  01884E  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29352  018850  0EFF               	movlw	255
 29353  018852  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29354  018854  0E00               	movlw	0
 29355  018856  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29356                           
 29357                           ; BSR set to: 1
 29358  018858  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29359  01885A  0EFF               	movlw	255
 29360  01885C  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 29361  01885E  0EFF               	movlw	255
 29362  018860  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29363  018862  0EFF               	movlw	255
 29364  018864  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29365  018866  0E00               	movlw	0
 29366  018868  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29367                           
 29368                           ; BSR set to: 1
 29369  01886A  0E00               	movlw	0
 29370  01886C  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 29371  01886E  0E00               	movlw	0
 29372  018870  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29373  018872  0E00               	movlw	0
 29374  018874  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29375  018876  0E00               	movlw	0
 29376  018878  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29377                           
 29378                           ; BSR set to: 1
 29379  01887A  0E7F               	movlw	127
 29380  01887C  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 29381                           
 29382                           ; BSR set to: 1
 29383  01887E  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 29384  018880  0FA0               	addlw	160
 29385  018882  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 29386                           
 29387                           ; BSR set to: 1
 29388  018884  0E20               	movlw	32
 29389  018886  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 29390  018888                     
 29391                           ; BSR set to: 1
 29392                           
 29393                           ; BSR set to: 1
 29394  018888  90D8               	bcf	status,0,c
 29395  01888A  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29396  01888C  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29397  01888E  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29398  018890  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29399                           
 29400                           ; BSR set to: 1
 29401  018892  511B               	movf	__div_to_l_@f2& (0+255),w,b
 29402  018894  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 29403  018896  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29404  018898  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29405  01889A  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29406  01889C  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29407  01889E  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29408  0188A0  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29409  0188A2  A0D8               	btfss	status,0,c
 29410  0188A4  D009               	goto	l2387
 29411                           
 29412                           ; BSR set to: 1
 29413  0188A6  511B               	movf	__div_to_l_@f2& (0+255),w,b
 29414  0188A8  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 29415  0188AA  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29416  0188AC  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29417  0188AE  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29418  0188B0  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29419  0188B2  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29420  0188B4  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29421                           
 29422                           ; BSR set to: 1
 29423  0188B6  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 29424  0188B8                     l2387:
 29425                           
 29426                           ; BSR set to: 1
 29427                           
 29428                           ; BSR set to: 1
 29429  0188B8  90D8               	bcf	status,0,c
 29430  0188BA  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 29431  0188BC  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29432  0188BE  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29433  0188C0  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29434                           
 29435                           ; BSR set to: 1
 29436  0188C2  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29437  0188C4  D7E1               	goto	l2386
 29438                           
 29439                           ; BSR set to: 1
 29440                           
 29441                           ; BSR set to: 1
 29442  0188C6  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 29443  0188C8  D016               	goto	l2389
 29444                           
 29445                           ; BSR set to: 1
 29446  0188CA  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29447  0188CC  0A80               	xorlw	128
 29448  0188CE  0F9F               	addlw	159
 29449  0188D0  B0D8               	btfsc	status,0,c
 29450  0188D2  D009               	goto	l2390
 29451                           
 29452                           ; BSR set to: 1
 29453  0188D4  0E00               	movlw	0
 29454  0188D6  6F17               	movwf	?__div_to_l_& (0+255),b
 29455  0188D8  0E00               	movlw	0
 29456  0188DA  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29457  0188DC  0E00               	movlw	0
 29458  0188DE  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29459  0188E0  0E00               	movlw	0
 29460  0188E2  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29461                           
 29462                           ; BSR set to: 1
 29463  0188E4  0012               	return	
 29464  0188E6                     l2390:
 29465                           
 29466                           ; BSR set to: 1
 29467                           
 29468                           ; BSR set to: 1
 29469                           
 29470                           ; BSR set to: 1
 29471  0188E6  90D8               	bcf	status,0,c
 29472  0188E8  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29473  0188EA  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29474  0188EC  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29475  0188EE  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 29476                           
 29477                           ; BSR set to: 1
 29478  0188F0  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29479  0188F2  D7F9               	goto	l2390
 29480                           
 29481                           ; BSR set to: 1
 29482  0188F4  D015               	goto	u18090
 29483  0188F6                     l2389:
 29484                           
 29485                           ; BSR set to: 1
 29486                           
 29487                           ; BSR set to: 1
 29488  0188F6  0E1F               	movlw	31
 29489  0188F8  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29490  0188FA  D00F               	goto	l2395
 29491                           
 29492                           ; BSR set to: 1
 29493  0188FC  0E00               	movlw	0
 29494  0188FE  6F17               	movwf	?__div_to_l_& (0+255),b
 29495  018900  0E00               	movlw	0
 29496  018902  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 29497  018904  0E00               	movlw	0
 29498  018906  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 29499  018908  0E00               	movlw	0
 29500  01890A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 29501                           
 29502                           ; BSR set to: 1
 29503  01890C  0012               	return	
 29504  01890E                     
 29505                           ; BSR set to: 1
 29506                           
 29507                           ; BSR set to: 1
 29508  01890E  90D8               	bcf	status,0,c
 29509  018910  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 29510  018912  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29511  018914  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29512  018916  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29513  018918  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 29514  01891A                     l2395:
 29515                           
 29516                           ; BSR set to: 1
 29517                           
 29518                           ; BSR set to: 1
 29519  01891A  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 29520  01891C  A4D8               	btfss	status,2,c
 29521  01891E  D7F7               	goto	l2396
 29522  018920                     u18090:
 29523                           
 29524                           ; BSR set to: 1
 29525                           
 29526                           ; BSR set to: 1
 29527  018920  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 29528  018924  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29529  018928  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29530  01892C  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29531                           
 29532                           ; BSR set to: 1
 29533  018930  0012               	return		;funcret
 29534  018932                     __end_of__div_to_l_:
 29535                           	opt stack 0
 29536                           tosu	equ	0xFFF
 29537                           tosh	equ	0xFFE
 29538                           tosl	equ	0xFFD
 29539                           pclath	equ	0xFFA
 29540                           tblptru	equ	0xFF8
 29541                           tblptrh	equ	0xFF7
 29542                           tblptrl	equ	0xFF6
 29543                           tablat	equ	0xFF5
 29544                           prodh	equ	0xFF4
 29545                           prodl	equ	0xFF3
 29546                           intcon	equ	0xFF2
 29547                           indf0	equ	0xFEF
 29548                           postinc0	equ	0xFEE
 29549                           fsr0h	equ	0xFEA
 29550                           fsr0l	equ	0xFE9
 29551                           wreg	equ	0xFE8
 29552                           indf1	equ	0xFE7
 29553                           postdec1	equ	0xFE5
 29554                           plusw1	equ	0xFE3
 29555                           fsr1h	equ	0xFE2
 29556                           fsr1l	equ	0xFE1
 29557                           indf2	equ	0xFDF
 29558                           postinc2	equ	0xFDE
 29559                           postdec2	equ	0xFDD
 29560                           plusw2	equ	0xFDB
 29561                           fsr2h	equ	0xFDA
 29562                           fsr2l	equ	0xFD9
 29563                           status	equ	0xFD8
 29564                           
 29565 ;; *************** function ___xxtofl *****************
 29566 ;; Defined at:
 29567 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 29568 ;; Parameters:    Size  Location     Type
 29569 ;;  sign            1    wreg     unsigned char 
 29570 ;;  val             4   23[BANK1 ] long 
 29571 ;; Auto vars:     Size  Location     Type
 29572 ;;  sign            1   31[BANK1 ] unsigned char 
 29573 ;;  arg             4   33[BANK1 ] unsigned long 
 29574 ;;  exp             1   32[BANK1 ] unsigned char 
 29575 ;; Return value:  Size  Location     Type
 29576 ;;                  4   23[BANK1 ] unsigned char 
 29577 ;; Registers used:
 29578 ;;		wreg, status,2, status,0
 29579 ;; Tracked objects:
 29580 ;;		On entry : 0/0
 29581 ;;		On exit  : 0/0
 29582 ;;		Unchanged: 0/0
 29583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29584 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29585 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29586 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29587 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29588 ;;Total ram usage:       14 bytes
 29589 ;; Hardware stack levels used:    1
 29590 ;; Hardware stack levels required when called:   13
 29591 ;; This function calls:
 29592 ;;		Nothing
 29593 ;; This function is called by:
 29594 ;;		_ringBufferLUT
 29595 ;;		__doprnt
 29596 ;; This function uses a non-reentrant model
 29597 ;;
 29598                           
 29599                           	psect	text44
 29600  0181C8                     __ptext44:
 29601                           	opt stack 0
 29602  0181C8                     ___xxtofl:
 29603                           	opt stack 13
 29604                           
 29605                           ; BSR set to: 1
 29606                           ;incstack = 0
 29607                           ;___xxtofl@sign stored from wreg
 29608  0181C8  0101               	movlb	1	; () banked
 29609  0181CA  6F1F               	movwf	___xxtofl@sign& (0+255),b
 29610  0181CC  0101               	movlb	1	; () banked
 29611  0181CE  511F               	movf	___xxtofl@sign& (0+255),w,b
 29612  0181D0  A4D8               	btfss	status,2,c
 29613                           
 29614                           ; BSR set to: 1
 29615  0181D2  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29616  0181D4  D01A               	goto	l2911
 29617                           
 29618                           ; BSR set to: 1
 29619  0181D6  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 29620  0181DA  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 29621  0181DE  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 29622  0181E2  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 29623  0181E6  1F1B               	comf	??___xxtofl& (0+255),f,b
 29624  0181E8  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 29625  0181EA  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 29626  0181EC  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 29627  0181EE  2B1B               	incf	??___xxtofl& (0+255),f,b
 29628  0181F0  0E00               	movlw	0
 29629  0181F2  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 29630  0181F4  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 29631  0181F6  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 29632  0181F8  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 29633  0181FC  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 29634  018200  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 29635  018204  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 29636  018208  D008               	goto	l2912
 29637  01820A                     l2911:
 29638                           
 29639                           ; BSR set to: 1
 29640  01820A  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 29641  01820E  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 29642  018212  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 29643  018216  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 29644  01821A                     l2912:
 29645                           
 29646                           ; BSR set to: 1
 29647                           
 29648                           ; BSR set to: 1
 29649  01821A  5117               	movf	___xxtofl@val& (0+255),w,b
 29650  01821C  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 29651  01821E  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 29652  018220  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 29653  018222  A4D8               	btfss	status,2,c
 29654  018224  D009               	goto	l2913
 29655                           
 29656                           ; BSR set to: 1
 29657  018226  0E00               	movlw	0
 29658  018228  6F17               	movwf	?___xxtofl& (0+255),b
 29659  01822A  0E00               	movlw	0
 29660  01822C  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 29661  01822E  0E00               	movlw	0
 29662  018230  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 29663  018232  0E00               	movlw	0
 29664  018234  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 29665                           
 29666                           ; BSR set to: 1
 29667  018236  0012               	return	
 29668  018238                     l2913:
 29669                           
 29670                           ; BSR set to: 1
 29671                           
 29672                           ; BSR set to: 1
 29673  018238  0E96               	movlw	150
 29674  01823A  6F20               	movwf	___xxtofl@exp& (0+255),b
 29675  01823C  D006               	goto	l2915
 29676  01823E                     
 29677                           ; BSR set to: 1
 29678                           
 29679                           ; BSR set to: 1
 29680  01823E  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29681  018240  90D8               	bcf	status,0,c
 29682  018242  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29683  018244  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29684  018246  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29685  018248  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29686  01824A                     l2915:
 29687                           
 29688                           ; BSR set to: 1
 29689                           
 29690                           ; BSR set to: 1
 29691  01824A  0E00               	movlw	0
 29692  01824C  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29693  01824E  6F1B               	movwf	??___xxtofl& (0+255),b
 29694  018250  0E00               	movlw	0
 29695  018252  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29696  018254  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29697  018256  0E00               	movlw	0
 29698  018258  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29699  01825A  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29700  01825C  0EFE               	movlw	254
 29701  01825E  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29702  018260  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29703  018262  511B               	movf	??___xxtofl& (0+255),w,b
 29704  018264  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29705  018266  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29706  018268  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29707  01826A  B4D8               	btfsc	status,2,c
 29708  01826C  D00D               	goto	l2918
 29709  01826E  D7E7               	goto	l2916
 29710  018270                     
 29711                           ; BSR set to: 1
 29712                           
 29713                           ; BSR set to: 1
 29714  018270  2B20               	incf	___xxtofl@exp& (0+255),f,b
 29715                           
 29716                           ; BSR set to: 1
 29717  018272  0E01               	movlw	1
 29718  018274  2721               	addwf	___xxtofl@arg& (0+255),f,b
 29719  018276  0E00               	movlw	0
 29720  018278  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 29721  01827A  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 29722  01827C  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 29723                           
 29724                           ; BSR set to: 1
 29725  01827E  90D8               	bcf	status,0,c
 29726  018280  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 29727  018282  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 29728  018284  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 29729  018286  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 29730  018288                     l2918:
 29731                           
 29732                           ; BSR set to: 1
 29733  018288  0E00               	movlw	0
 29734  01828A  1521               	andwf	___xxtofl@arg& (0+255),w,b
 29735  01828C  6F1B               	movwf	??___xxtofl& (0+255),b
 29736  01828E  0E00               	movlw	0
 29737  018290  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 29738  018292  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 29739  018294  0E00               	movlw	0
 29740  018296  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 29741  018298  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 29742  01829A  0EFF               	movlw	255
 29743  01829C  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 29744  01829E  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 29745  0182A0  511B               	movf	??___xxtofl& (0+255),w,b
 29746  0182A2  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 29747  0182A4  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 29748  0182A6  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 29749  0182A8  B4D8               	btfsc	status,2,c
 29750  0182AA  D007               	goto	l2921
 29751  0182AC  D7E1               	goto	l2919
 29752  0182AE                     
 29753                           ; BSR set to: 1
 29754                           
 29755                           ; BSR set to: 1
 29756  0182AE  0720               	decf	___xxtofl@exp& (0+255),f,b
 29757  0182B0  90D8               	bcf	status,0,c
 29758  0182B2  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 29759  0182B4  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 29760  0182B6  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 29761  0182B8  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 29762  0182BA                     l2921:
 29763                           
 29764                           ; BSR set to: 1
 29765                           
 29766                           ; BSR set to: 1
 29767  0182BA  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 29768  0182BC  D003               	goto	u18370
 29769                           
 29770                           ; BSR set to: 1
 29771  0182BE  0E02               	movlw	2
 29772  0182C0  6120               	cpfslt	___xxtofl@exp& (0+255),b
 29773  0182C2  D7F5               	goto	l2922
 29774  0182C4                     u18370:
 29775                           
 29776                           ; BSR set to: 1
 29777                           
 29778                           ; BSR set to: 1
 29779  0182C4  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 29780  0182C6  D008               	goto	l2926
 29781                           
 29782                           ; BSR set to: 1
 29783  0182C8  0EFF               	movlw	255
 29784  0182CA  1721               	andwf	___xxtofl@arg& (0+255),f,b
 29785  0182CC  0EFF               	movlw	255
 29786  0182CE  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 29787  0182D0  0E7F               	movlw	127
 29788  0182D2  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 29789  0182D4  0EFF               	movlw	255
 29790  0182D6  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 29791  0182D8                     l2926:
 29792                           
 29793                           ; BSR set to: 1
 29794  0182D8  90D8               	bcf	status,0,c
 29795  0182DA  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 29796  0182DC  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 29797  0182E0  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 29798  0182E2  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 29799  0182E4  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 29800  0182E6  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 29801  0182EA  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 29802  0182EC  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 29803  0182EE  6B1B               	clrf	??___xxtofl& (0+255),b
 29804  0182F0  511B               	movf	??___xxtofl& (0+255),w,b
 29805  0182F2  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 29806  0182F4  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 29807  0182F6  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 29808  0182F8  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 29809  0182FA  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 29810  0182FC  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 29811  0182FE  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 29812                           
 29813                           ; BSR set to: 1
 29814  018300  511F               	movf	___xxtofl@sign& (0+255),w,b
 29815  018302  A4D8               	btfss	status,2,c
 29816                           
 29817                           ; BSR set to: 1
 29818  018304  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 29819  018306  D001               	goto	l2927
 29820                           
 29821                           ; BSR set to: 1
 29822  018308  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 29823  01830A                     l2927:
 29824                           
 29825                           ; BSR set to: 1
 29826                           
 29827                           ; BSR set to: 1
 29828  01830A  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 29829  01830E  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 29830  018312  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 29831  018316  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 29832  01831A  0012               	return	
 29833  01831C                     __end_of___xxtofl:
 29834                           	opt stack 0
 29835                           tosu	equ	0xFFF
 29836                           tosh	equ	0xFFE
 29837                           tosl	equ	0xFFD
 29838                           pclath	equ	0xFFA
 29839                           tblptru	equ	0xFF8
 29840                           tblptrh	equ	0xFF7
 29841                           tblptrl	equ	0xFF6
 29842                           tablat	equ	0xFF5
 29843                           prodh	equ	0xFF4
 29844                           prodl	equ	0xFF3
 29845                           intcon	equ	0xFF2
 29846                           indf0	equ	0xFEF
 29847                           postinc0	equ	0xFEE
 29848                           fsr0h	equ	0xFEA
 29849                           fsr0l	equ	0xFE9
 29850                           wreg	equ	0xFE8
 29851                           indf1	equ	0xFE7
 29852                           postdec1	equ	0xFE5
 29853                           plusw1	equ	0xFE3
 29854                           fsr1h	equ	0xFE2
 29855                           fsr1l	equ	0xFE1
 29856                           indf2	equ	0xFDF
 29857                           postinc2	equ	0xFDE
 29858                           postdec2	equ	0xFDD
 29859                           plusw2	equ	0xFDB
 29860                           fsr2h	equ	0xFDA
 29861                           fsr2l	equ	0xFD9
 29862                           status	equ	0xFD8
 29863                           
 29864 ;; *************** function ___wmul *****************
 29865 ;; Defined at:
 29866 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;  multiplier      2   23[BANK1 ] unsigned int 
 29869 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 29870 ;; Auto vars:     Size  Location     Type
 29871 ;;  product         2   27[BANK1 ] unsigned int 
 29872 ;; Return value:  Size  Location     Type
 29873 ;;                  2   23[BANK1 ] unsigned int 
 29874 ;; Registers used:
 29875 ;;		wreg, status,2, status,0, prodl, prodh
 29876 ;; Tracked objects:
 29877 ;;		On entry : 0/0
 29878 ;;		On exit  : 0/0
 29879 ;;		Unchanged: 0/0
 29880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29881 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29882 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29884 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29885 ;;Total ram usage:        6 bytes
 29886 ;; Hardware stack levels used:    1
 29887 ;; Hardware stack levels required when called:   13
 29888 ;; This function calls:
 29889 ;;		Nothing
 29890 ;; This function is called by:
 29891 ;;		_ringBufferLUT
 29892 ;;		__doprnt
 29893 ;;		_atoi
 29894 ;; This function uses a non-reentrant model
 29895 ;;
 29896                           
 29897                           	psect	text45
 29898  01ADB8                     __ptext45:
 29899                           	opt stack 0
 29900  01ADB8                     ___wmul:
 29901                           	opt stack 13
 29902                           
 29903                           ; BSR set to: 1
 29904                           ;incstack = 0
 29905  01ADB8  0101               	movlb	1	; () banked
 29906  01ADBA  5117               	movf	___wmul@multiplier& (0+255),w,b
 29907  01ADBC  0319               	mulwf	___wmul@multiplicand& (0+255),b
 29908  01ADBE  CFF3 F11B          	movff	prodl,___wmul@product
 29909  01ADC2  CFF4 F11C          	movff	prodh,___wmul@product+1
 29910  01ADC6  5117               	movf	___wmul@multiplier& (0+255),w,b
 29911  01ADC8  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29912  01ADCA  50F3               	movf	prodl,w,c
 29913  01ADCC  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 29914  01ADCE  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29915  01ADD0  0319               	mulwf	___wmul@multiplicand& (0+255),b
 29916  01ADD2  50F3               	movf	prodl,w,c
 29917  01ADD4  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 29918                           
 29919                           ; BSR set to: 1
 29920  01ADD6  C11B  F117         	movff	___wmul@product,?___wmul
 29921  01ADDA  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 29922  01ADDE  0012               	return	
 29923  01ADE0                     __end_of___wmul:
 29924                           	opt stack 0
 29925                           tosu	equ	0xFFF
 29926                           tosh	equ	0xFFE
 29927                           tosl	equ	0xFFD
 29928                           pclath	equ	0xFFA
 29929                           tblptru	equ	0xFF8
 29930                           tblptrh	equ	0xFF7
 29931                           tblptrl	equ	0xFF6
 29932                           tablat	equ	0xFF5
 29933                           prodh	equ	0xFF4
 29934                           prodl	equ	0xFF3
 29935                           intcon	equ	0xFF2
 29936                           indf0	equ	0xFEF
 29937                           postinc0	equ	0xFEE
 29938                           fsr0h	equ	0xFEA
 29939                           fsr0l	equ	0xFE9
 29940                           wreg	equ	0xFE8
 29941                           indf1	equ	0xFE7
 29942                           postdec1	equ	0xFE5
 29943                           plusw1	equ	0xFE3
 29944                           fsr1h	equ	0xFE2
 29945                           fsr1l	equ	0xFE1
 29946                           indf2	equ	0xFDF
 29947                           postinc2	equ	0xFDE
 29948                           postdec2	equ	0xFDD
 29949                           plusw2	equ	0xFDB
 29950                           fsr2h	equ	0xFDA
 29951                           fsr2l	equ	0xFD9
 29952                           status	equ	0xFD8
 29953                           
 29954 ;; *************** function ___llmod *****************
 29955 ;; Defined at:
 29956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 29957 ;; Parameters:    Size  Location     Type
 29958 ;;  dividend        4   36[BANK1 ] unsigned long 
 29959 ;;  divisor         4   40[BANK1 ] unsigned long 
 29960 ;; Auto vars:     Size  Location     Type
 29961 ;;  counter         1   44[BANK1 ] unsigned char 
 29962 ;; Return value:  Size  Location     Type
 29963 ;;                  4   36[BANK1 ] unsigned long 
 29964 ;; Registers used:
 29965 ;;		wreg, status,2, status,0
 29966 ;; Tracked objects:
 29967 ;;		On entry : 0/0
 29968 ;;		On exit  : 0/0
 29969 ;;		Unchanged: 0/0
 29970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29971 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29972 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29974 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29975 ;;Total ram usage:        9 bytes
 29976 ;; Hardware stack levels used:    1
 29977 ;; Hardware stack levels required when called:   13
 29978 ;; This function calls:
 29979 ;;		Nothing
 29980 ;; This function is called by:
 29981 ;;		__doprnt
 29982 ;; This function uses a non-reentrant model
 29983 ;;
 29984                           
 29985                           	psect	text46
 29986  01A062                     __ptext46:
 29987                           	opt stack 0
 29988  01A062                     ___llmod:
 29989                           	opt stack 13
 29990                           
 29991                           ; BSR set to: 1
 29992                           ;incstack = 0
 29993  01A062  0101               	movlb	1	; () banked
 29994  01A064  5128               	movf	___llmod@divisor& (0+255),w,b
 29995  01A066  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 29996  01A068  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 29997  01A06A  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 29998  01A06C  B4D8               	btfsc	status,2,c
 29999  01A06E  D024               	goto	l2610
 30000                           
 30001                           ; BSR set to: 1
 30002  01A070  0E01               	movlw	1
 30003  01A072  6F2C               	movwf	___llmod@counter& (0+255),b
 30004  01A074  D006               	goto	l2605
 30005  01A076                     
 30006                           ; BSR set to: 1
 30007                           
 30008                           ; BSR set to: 1
 30009  01A076  90D8               	bcf	status,0,c
 30010  01A078  3728               	rlcf	___llmod@divisor& (0+255),f,b
 30011  01A07A  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 30012  01A07C  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 30013  01A07E  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 30014  01A080  2B2C               	incf	___llmod@counter& (0+255),f,b
 30015  01A082                     l2605:
 30016                           
 30017                           ; BSR set to: 1
 30018                           
 30019                           ; BSR set to: 1
 30020  01A082  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 30021  01A084  D7F8               	goto	l2606
 30022  01A086                     u18290:
 30023                           
 30024                           ; BSR set to: 1
 30025                           
 30026                           ; BSR set to: 1
 30027                           
 30028                           ; BSR set to: 1
 30029  01A086  5128               	movf	___llmod@divisor& (0+255),w,b
 30030  01A088  5D24               	subwf	___llmod@dividend& (0+255),w,b
 30031  01A08A  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 30032  01A08C  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 30033  01A08E  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 30034  01A090  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 30035  01A092  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 30036  01A094  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 30037  01A096  A0D8               	btfss	status,0,c
 30038  01A098  D008               	goto	l2609
 30039                           
 30040                           ; BSR set to: 1
 30041  01A09A  5128               	movf	___llmod@divisor& (0+255),w,b
 30042  01A09C  5F24               	subwf	___llmod@dividend& (0+255),f,b
 30043  01A09E  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 30044  01A0A0  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 30045  01A0A2  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 30046  01A0A4  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 30047  01A0A6  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 30048  01A0A8  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 30049  01A0AA                     l2609:
 30050                           
 30051                           ; BSR set to: 1
 30052                           
 30053                           ; BSR set to: 1
 30054  01A0AA  90D8               	bcf	status,0,c
 30055  01A0AC  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 30056  01A0AE  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 30057  01A0B0  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 30058  01A0B2  3328               	rrcf	___llmod@divisor& (0+255),f,b
 30059                           
 30060                           ; BSR set to: 1
 30061  01A0B4  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 30062  01A0B6  D7E7               	goto	u18290
 30063  01A0B8                     l2610:
 30064                           
 30065                           ; BSR set to: 1
 30066                           
 30067                           ; BSR set to: 1
 30068  01A0B8  C124  F124         	movff	___llmod@dividend,?___llmod
 30069  01A0BC  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 30070  01A0C0  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 30071  01A0C4  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 30072                           
 30073                           ; BSR set to: 1
 30074  01A0C8  0012               	return		;funcret
 30075  01A0CA                     __end_of___llmod:
 30076                           	opt stack 0
 30077                           tosu	equ	0xFFF
 30078                           tosh	equ	0xFFE
 30079                           tosl	equ	0xFFD
 30080                           pclath	equ	0xFFA
 30081                           tblptru	equ	0xFF8
 30082                           tblptrh	equ	0xFF7
 30083                           tblptrl	equ	0xFF6
 30084                           tablat	equ	0xFF5
 30085                           prodh	equ	0xFF4
 30086                           prodl	equ	0xFF3
 30087                           intcon	equ	0xFF2
 30088                           indf0	equ	0xFEF
 30089                           postinc0	equ	0xFEE
 30090                           fsr0h	equ	0xFEA
 30091                           fsr0l	equ	0xFE9
 30092                           wreg	equ	0xFE8
 30093                           indf1	equ	0xFE7
 30094                           postdec1	equ	0xFE5
 30095                           plusw1	equ	0xFE3
 30096                           fsr1h	equ	0xFE2
 30097                           fsr1l	equ	0xFE1
 30098                           indf2	equ	0xFDF
 30099                           postinc2	equ	0xFDE
 30100                           postdec2	equ	0xFDD
 30101                           plusw2	equ	0xFDB
 30102                           fsr2h	equ	0xFDA
 30103                           fsr2l	equ	0xFD9
 30104                           status	equ	0xFD8
 30105                           
 30106 ;; *************** function ___lldiv *****************
 30107 ;; Defined at:
 30108 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 30109 ;; Parameters:    Size  Location     Type
 30110 ;;  dividend        4   23[BANK1 ] unsigned long 
 30111 ;;  divisor         4   27[BANK1 ] unsigned long 
 30112 ;; Auto vars:     Size  Location     Type
 30113 ;;  quotient        4   31[BANK1 ] unsigned long 
 30114 ;;  counter         1   35[BANK1 ] unsigned char 
 30115 ;; Return value:  Size  Location     Type
 30116 ;;                  4   23[BANK1 ] unsigned long 
 30117 ;; Registers used:
 30118 ;;		wreg, status,2, status,0
 30119 ;; Tracked objects:
 30120 ;;		On entry : 0/0
 30121 ;;		On exit  : 0/0
 30122 ;;		Unchanged: 0/0
 30123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30124 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30125 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30127 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30128 ;;Total ram usage:       13 bytes
 30129 ;; Hardware stack levels used:    1
 30130 ;; Hardware stack levels required when called:   13
 30131 ;; This function calls:
 30132 ;;		Nothing
 30133 ;; This function is called by:
 30134 ;;		__doprnt
 30135 ;; This function uses a non-reentrant model
 30136 ;;
 30137                           
 30138                           	psect	text47
 30139  019AD0                     __ptext47:
 30140                           	opt stack 0
 30141  019AD0                     ___lldiv:
 30142                           	opt stack 13
 30143                           
 30144                           ; BSR set to: 1
 30145                           ;incstack = 0
 30146  019AD0  0E00               	movlw	0
 30147  019AD2  0101               	movlb	1	; () banked
 30148  019AD4  6F1F               	movwf	___lldiv@quotient& (0+255),b
 30149  019AD6  0E00               	movlw	0
 30150  019AD8  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 30151  019ADA  0E00               	movlw	0
 30152  019ADC  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 30153  019ADE  0E00               	movlw	0
 30154  019AE0  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 30155                           
 30156                           ; BSR set to: 1
 30157  019AE2  511B               	movf	___lldiv@divisor& (0+255),w,b
 30158  019AE4  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30159  019AE6  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30160  019AE8  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30161  019AEA  B4D8               	btfsc	status,2,c
 30162  019AEC  D02A               	goto	l2600
 30163                           
 30164                           ; BSR set to: 1
 30165  019AEE  0E01               	movlw	1
 30166  019AF0  6F23               	movwf	___lldiv@counter& (0+255),b
 30167  019AF2  D006               	goto	l2595
 30168  019AF4                     
 30169                           ; BSR set to: 1
 30170                           
 30171                           ; BSR set to: 1
 30172  019AF4  90D8               	bcf	status,0,c
 30173  019AF6  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 30174  019AF8  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30175  019AFA  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30176  019AFC  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30177  019AFE  2B23               	incf	___lldiv@counter& (0+255),f,b
 30178  019B00                     l2595:
 30179                           
 30180                           ; BSR set to: 1
 30181                           
 30182                           ; BSR set to: 1
 30183  019B00  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30184  019B02  D7F8               	goto	l2596
 30185  019B04                     u18260:
 30186                           
 30187                           ; BSR set to: 1
 30188                           
 30189                           ; BSR set to: 1
 30190                           
 30191                           ; BSR set to: 1
 30192  019B04  90D8               	bcf	status,0,c
 30193  019B06  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 30194  019B08  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30195  019B0A  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30196  019B0C  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30197                           
 30198                           ; BSR set to: 1
 30199  019B0E  511B               	movf	___lldiv@divisor& (0+255),w,b
 30200  019B10  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 30201  019B12  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30202  019B14  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30203  019B16  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30204  019B18  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30205  019B1A  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30206  019B1C  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30207  019B1E  A0D8               	btfss	status,0,c
 30208  019B20  D009               	goto	l2599
 30209                           
 30210                           ; BSR set to: 1
 30211  019B22  511B               	movf	___lldiv@divisor& (0+255),w,b
 30212  019B24  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 30213  019B26  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30214  019B28  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30215  019B2A  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30216  019B2C  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30217  019B2E  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30218  019B30  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30219                           
 30220                           ; BSR set to: 1
 30221  019B32  811F               	bsf	___lldiv@quotient& (0+255),0,b
 30222  019B34                     l2599:
 30223                           
 30224                           ; BSR set to: 1
 30225                           
 30226                           ; BSR set to: 1
 30227  019B34  90D8               	bcf	status,0,c
 30228  019B36  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30229  019B38  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30230  019B3A  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30231  019B3C  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 30232                           
 30233                           ; BSR set to: 1
 30234  019B3E  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 30235  019B40  D7E1               	goto	u18260
 30236  019B42                     l2600:
 30237                           
 30238                           ; BSR set to: 1
 30239                           
 30240                           ; BSR set to: 1
 30241  019B42  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 30242  019B46  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 30243  019B4A  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 30244  019B4E  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 30245                           
 30246                           ; BSR set to: 1
 30247  019B52  0012               	return		;funcret
 30248  019B54                     __end_of___lldiv:
 30249                           	opt stack 0
 30250                           tosu	equ	0xFFF
 30251                           tosh	equ	0xFFE
 30252                           tosl	equ	0xFFD
 30253                           pclath	equ	0xFFA
 30254                           tblptru	equ	0xFF8
 30255                           tblptrh	equ	0xFF7
 30256                           tblptrl	equ	0xFF6
 30257                           tablat	equ	0xFF5
 30258                           prodh	equ	0xFF4
 30259                           prodl	equ	0xFF3
 30260                           intcon	equ	0xFF2
 30261                           indf0	equ	0xFEF
 30262                           postinc0	equ	0xFEE
 30263                           fsr0h	equ	0xFEA
 30264                           fsr0l	equ	0xFE9
 30265                           wreg	equ	0xFE8
 30266                           indf1	equ	0xFE7
 30267                           postdec1	equ	0xFE5
 30268                           plusw1	equ	0xFE3
 30269                           fsr1h	equ	0xFE2
 30270                           fsr1l	equ	0xFE1
 30271                           indf2	equ	0xFDF
 30272                           postinc2	equ	0xFDE
 30273                           postdec2	equ	0xFDD
 30274                           plusw2	equ	0xFDB
 30275                           fsr2h	equ	0xFDA
 30276                           fsr2l	equ	0xFD9
 30277                           status	equ	0xFD8
 30278                           
 30279 ;; *************** function ___fltol *****************
 30280 ;; Defined at:
 30281 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;  f1              4  120[BANK1 ] unsigned long 
 30284 ;; Auto vars:     Size  Location     Type
 30285 ;;  exp1            1  129[BANK1 ] unsigned char 
 30286 ;;  sign1           1  128[BANK1 ] unsigned char 
 30287 ;; Return value:  Size  Location     Type
 30288 ;;                  4  120[BANK1 ] long 
 30289 ;; Registers used:
 30290 ;;		wreg, status,2, status,0
 30291 ;; Tracked objects:
 30292 ;;		On entry : 0/0
 30293 ;;		On exit  : 0/0
 30294 ;;		Unchanged: 0/0
 30295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30296 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30297 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30298 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30299 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30300 ;;Total ram usage:       10 bytes
 30301 ;; Hardware stack levels used:    1
 30302 ;; Hardware stack levels required when called:   13
 30303 ;; This function calls:
 30304 ;;		Nothing
 30305 ;; This function is called by:
 30306 ;;		__doprnt
 30307 ;;		_ftoa
 30308 ;; This function uses a non-reentrant model
 30309 ;;
 30310                           
 30311                           	psect	text48
 30312  019200                     __ptext48:
 30313                           	opt stack 0
 30314  019200                     ___fltol:
 30315                           	opt stack 13
 30316                           
 30317                           ; BSR set to: 1
 30318                           ;incstack = 0
 30319  019200  0101               	movlb	1	; () banked
 30320  019202  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 30321  019204  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 30322  019206  6F81               	movwf	___fltol@exp1& (0+255),b
 30323  019208  5181               	movf	___fltol@exp1& (0+255),w,b
 30324  01920A  A4D8               	btfss	status,2,c
 30325  01920C  D009               	goto	l2430
 30326                           
 30327                           ; BSR set to: 1
 30328  01920E  0E00               	movlw	0
 30329  019210  6F78               	movwf	?___fltol& (0+255),b
 30330  019212  0E00               	movlw	0
 30331  019214  6F79               	movwf	(?___fltol+1)& (0+255),b
 30332  019216  0E00               	movlw	0
 30333  019218  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30334  01921A  0E00               	movlw	0
 30335  01921C  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30336                           
 30337                           ; BSR set to: 1
 30338  01921E  0012               	return	
 30339  019220                     l2430:
 30340                           
 30341                           ; BSR set to: 1
 30342                           
 30343                           ; BSR set to: 1
 30344  019220  C178  F17C         	movff	___fltol@f1,??___fltol
 30345  019224  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 30346  019228  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 30347  01922C  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 30348  019230  0E20               	movlw	32
 30349  019232  D005               	goto	u18190
 30350  019234                     u18195:
 30351  019234  90D8               	bcf	status,0,c
 30352  019236  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 30353  019238  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 30354  01923A  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 30355  01923C  337C               	rrcf	??___fltol& (0+255),f,b
 30356  01923E                     u18190:
 30357  01923E  2EE8               	decfsz	wreg,f,c
 30358  019240  D7F9               	goto	u18195
 30359  019242  517C               	movf	??___fltol& (0+255),w,b
 30360  019244  6F80               	movwf	___fltol@sign1& (0+255),b
 30361                           
 30362                           ; BSR set to: 1
 30363  019246  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 30364                           
 30365                           ; BSR set to: 1
 30366  019248  0EFF               	movlw	255
 30367  01924A  1778               	andwf	___fltol@f1& (0+255),f,b
 30368  01924C  0EFF               	movlw	255
 30369  01924E  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 30370  019250  0EFF               	movlw	255
 30371  019252  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 30372  019254  0E00               	movlw	0
 30373  019256  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 30374                           
 30375                           ; BSR set to: 1
 30376  019258  0E96               	movlw	150
 30377  01925A  5F81               	subwf	___fltol@exp1& (0+255),f,b
 30378                           
 30379                           ; BSR set to: 1
 30380  01925C  AF81               	btfss	___fltol@exp1& (0+255),7,b
 30381  01925E  D016               	goto	l2432
 30382                           
 30383                           ; BSR set to: 1
 30384  019260  5181               	movf	___fltol@exp1& (0+255),w,b
 30385  019262  0A80               	xorlw	128
 30386  019264  0F97               	addlw	151
 30387  019266  B0D8               	btfsc	status,0,c
 30388  019268  D009               	goto	l2433
 30389                           
 30390                           ; BSR set to: 1
 30391  01926A  0E00               	movlw	0
 30392  01926C  6F78               	movwf	?___fltol& (0+255),b
 30393  01926E  0E00               	movlw	0
 30394  019270  6F79               	movwf	(?___fltol+1)& (0+255),b
 30395  019272  0E00               	movlw	0
 30396  019274  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30397  019276  0E00               	movlw	0
 30398  019278  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30399                           
 30400                           ; BSR set to: 1
 30401  01927A  0012               	return	
 30402  01927C                     l2433:
 30403                           
 30404                           ; BSR set to: 1
 30405                           
 30406                           ; BSR set to: 1
 30407                           
 30408                           ; BSR set to: 1
 30409  01927C  90D8               	bcf	status,0,c
 30410  01927E  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 30411  019280  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 30412  019282  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 30413  019284  3378               	rrcf	___fltol@f1& (0+255),f,b
 30414                           
 30415                           ; BSR set to: 1
 30416  019286  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 30417  019288  D7F9               	goto	l2433
 30418                           
 30419                           ; BSR set to: 1
 30420  01928A  D015               	goto	u18230
 30421  01928C                     l2432:
 30422                           
 30423                           ; BSR set to: 1
 30424                           
 30425                           ; BSR set to: 1
 30426  01928C  0E1F               	movlw	31
 30427  01928E  6581               	cpfsgt	___fltol@exp1& (0+255),b
 30428  019290  D00F               	goto	l2438
 30429                           
 30430                           ; BSR set to: 1
 30431  019292  0E00               	movlw	0
 30432  019294  6F78               	movwf	?___fltol& (0+255),b
 30433  019296  0E00               	movlw	0
 30434  019298  6F79               	movwf	(?___fltol+1)& (0+255),b
 30435  01929A  0E00               	movlw	0
 30436  01929C  6F7A               	movwf	(?___fltol+2)& (0+255),b
 30437  01929E  0E00               	movlw	0
 30438  0192A0  6F7B               	movwf	(?___fltol+3)& (0+255),b
 30439                           
 30440                           ; BSR set to: 1
 30441  0192A2  0012               	return	
 30442  0192A4                     
 30443                           ; BSR set to: 1
 30444                           
 30445                           ; BSR set to: 1
 30446  0192A4  90D8               	bcf	status,0,c
 30447  0192A6  3778               	rlcf	___fltol@f1& (0+255),f,b
 30448  0192A8  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 30449  0192AA  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 30450  0192AC  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 30451  0192AE  0781               	decf	___fltol@exp1& (0+255),f,b
 30452  0192B0                     l2438:
 30453                           
 30454                           ; BSR set to: 1
 30455                           
 30456                           ; BSR set to: 1
 30457  0192B0  5181               	movf	___fltol@exp1& (0+255),w,b
 30458  0192B2  A4D8               	btfss	status,2,c
 30459  0192B4  D7F7               	goto	l2439
 30460  0192B6                     u18230:
 30461                           
 30462                           ; BSR set to: 1
 30463                           
 30464                           ; BSR set to: 1
 30465                           
 30466                           ; BSR set to: 1
 30467  0192B6  5180               	movf	___fltol@sign1& (0+255),w,b
 30468  0192B8  B4D8               	btfsc	status,2,c
 30469  0192BA  D008               	goto	l2441
 30470                           
 30471                           ; BSR set to: 1
 30472  0192BC  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 30473  0192BE  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 30474  0192C0  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 30475  0192C2  6D78               	negf	___fltol@f1& (0+255),b
 30476  0192C4  0E00               	movlw	0
 30477  0192C6  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 30478  0192C8  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 30479  0192CA  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 30480  0192CC                     l2441:
 30481                           
 30482                           ; BSR set to: 1
 30483                           
 30484                           ; BSR set to: 1
 30485  0192CC  C178  F178         	movff	___fltol@f1,?___fltol
 30486  0192D0  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 30487  0192D4  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 30488  0192D8  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 30489  0192DC  0012               	return	
 30490  0192DE                     __end_of___fltol:
 30491                           	opt stack 0
 30492                           tosu	equ	0xFFF
 30493                           tosh	equ	0xFFE
 30494                           tosl	equ	0xFFD
 30495                           pclath	equ	0xFFA
 30496                           tblptru	equ	0xFF8
 30497                           tblptrh	equ	0xFF7
 30498                           tblptrl	equ	0xFF6
 30499                           tablat	equ	0xFF5
 30500                           prodh	equ	0xFF4
 30501                           prodl	equ	0xFF3
 30502                           intcon	equ	0xFF2
 30503                           indf0	equ	0xFEF
 30504                           postinc0	equ	0xFEE
 30505                           fsr0h	equ	0xFEA
 30506                           fsr0l	equ	0xFE9
 30507                           wreg	equ	0xFE8
 30508                           indf1	equ	0xFE7
 30509                           postdec1	equ	0xFE5
 30510                           plusw1	equ	0xFE3
 30511                           fsr1h	equ	0xFE2
 30512                           fsr1l	equ	0xFE1
 30513                           indf2	equ	0xFDF
 30514                           postinc2	equ	0xFDE
 30515                           postdec2	equ	0xFDD
 30516                           plusw2	equ	0xFDB
 30517                           fsr2h	equ	0xFDA
 30518                           fsr2l	equ	0xFD9
 30519                           status	equ	0xFD8
 30520                           
 30521 ;; *************** function ___flsub *****************
 30522 ;; Defined at:
 30523 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30524 ;; Parameters:    Size  Location     Type
 30525 ;;  b               4   61[BANK1 ] long 
 30526 ;;  a               4   65[BANK1 ] long 
 30527 ;; Auto vars:     Size  Location     Type
 30528 ;;		None
 30529 ;; Return value:  Size  Location     Type
 30530 ;;                  4   61[BANK1 ] long 
 30531 ;; Registers used:
 30532 ;;		wreg, status,2, status,0, cstack
 30533 ;; Tracked objects:
 30534 ;;		On entry : 0/0
 30535 ;;		On exit  : 0/0
 30536 ;;		Unchanged: 0/0
 30537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30538 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30541 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30542 ;;Total ram usage:        8 bytes
 30543 ;; Hardware stack levels used:    1
 30544 ;; Hardware stack levels required when called:   14
 30545 ;; This function calls:
 30546 ;;		___fladd
 30547 ;; This function is called by:
 30548 ;;		__doprnt
 30549 ;; This function uses a non-reentrant model
 30550 ;;
 30551                           
 30552                           	psect	text49
 30553  01A6F6                     __ptext49:
 30554                           	opt stack 0
 30555  01A6F6                     ___flsub:
 30556                           	opt stack 12
 30557                           
 30558                           ; BSR set to: 1
 30559                           ;incstack = 0
 30560  01A6F6  0E00               	movlw	0
 30561  01A6F8  0101               	movlb	1	; () banked
 30562  01A6FA  1B41               	xorwf	___flsub@a& (0+255),f,b
 30563  01A6FC  0E00               	movlw	0
 30564  01A6FE  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 30565  01A700  0E00               	movlw	0
 30566  01A702  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 30567  01A704  0E80               	movlw	128
 30568  01A706  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 30569                           
 30570                           ; BSR set to: 1
 30571  01A708  C13D  F129         	movff	___flsub@b,___fladd@b
 30572  01A70C  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 30573  01A710  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 30574  01A714  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 30575  01A718  C141  F12D         	movff	___flsub@a,___fladd@a
 30576  01A71C  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 30577  01A720  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 30578  01A724  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 30579  01A728  EC35  F0AF         	call	___fladd	;wreg free
 30580  01A72C  C129  F13D         	movff	?___fladd,?___flsub
 30581  01A730  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 30582  01A734  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 30583  01A738  C12C  F140         	movff	?___fladd+3,?___flsub+3
 30584  01A73C  0012               	return	
 30585  01A73E                     __end_of___flsub:
 30586                           	opt stack 0
 30587                           tosu	equ	0xFFF
 30588                           tosh	equ	0xFFE
 30589                           tosl	equ	0xFFD
 30590                           pclath	equ	0xFFA
 30591                           tblptru	equ	0xFF8
 30592                           tblptrh	equ	0xFF7
 30593                           tblptrl	equ	0xFF6
 30594                           tablat	equ	0xFF5
 30595                           prodh	equ	0xFF4
 30596                           prodl	equ	0xFF3
 30597                           intcon	equ	0xFF2
 30598                           indf0	equ	0xFEF
 30599                           postinc0	equ	0xFEE
 30600                           fsr0h	equ	0xFEA
 30601                           fsr0l	equ	0xFE9
 30602                           wreg	equ	0xFE8
 30603                           indf1	equ	0xFE7
 30604                           postdec1	equ	0xFE5
 30605                           plusw1	equ	0xFE3
 30606                           fsr1h	equ	0xFE2
 30607                           fsr1l	equ	0xFE1
 30608                           indf2	equ	0xFDF
 30609                           postinc2	equ	0xFDE
 30610                           postdec2	equ	0xFDD
 30611                           plusw2	equ	0xFDB
 30612                           fsr2h	equ	0xFDA
 30613                           fsr2l	equ	0xFD9
 30614                           status	equ	0xFD8
 30615                           
 30616 ;; *************** function ___fladd *****************
 30617 ;; Defined at:
 30618 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 30619 ;; Parameters:    Size  Location     Type
 30620 ;;  b               4   41[BANK1 ] long 
 30621 ;;  a               4   45[BANK1 ] long 
 30622 ;; Auto vars:     Size  Location     Type
 30623 ;;  grs             1   60[BANK1 ] unsigned char 
 30624 ;;  bexp            1   59[BANK1 ] unsigned char 
 30625 ;;  aexp            1   58[BANK1 ] unsigned char 
 30626 ;;  signs           1   57[BANK1 ] unsigned char 
 30627 ;; Return value:  Size  Location     Type
 30628 ;;                  4   41[BANK1 ] unsigned char 
 30629 ;; Registers used:
 30630 ;;		wreg, status,2, status,0
 30631 ;; Tracked objects:
 30632 ;;		On entry : 0/0
 30633 ;;		On exit  : 0/0
 30634 ;;		Unchanged: 0/0
 30635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30636 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30637 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30638 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30639 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30640 ;;Total ram usage:       20 bytes
 30641 ;; Hardware stack levels used:    1
 30642 ;; Hardware stack levels required when called:   13
 30643 ;; This function calls:
 30644 ;;		Nothing
 30645 ;; This function is called by:
 30646 ;;		_ringBufferLUT
 30647 ;;		__doprnt
 30648 ;;		___flsub
 30649 ;; This function uses a non-reentrant model
 30650 ;;
 30651                           
 30652                           	psect	text50
 30653  015E6A                     __ptext50:
 30654                           	opt stack 0
 30655  015E6A                     ___fladd:
 30656                           	opt stack 12
 30657                           
 30658                           ;incstack = 0
 30659  015E6A  0101               	movlb	1	; () banked
 30660  015E6C  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30661  015E6E  0B80               	andlw	128
 30662  015E70  6F39               	movwf	___fladd@signs& (0+255),b
 30663  015E72  512C               	movf	(___fladd@b+3)& (0+255),w,b
 30664  015E74  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 30665  015E76  6F3B               	movwf	___fladd@bexp& (0+255),b
 30666                           
 30667                           ; BSR set to: 1
 30668  015E78  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 30669                           
 30670                           ; BSR set to: 1
 30671  015E7A  813B               	bsf	___fladd@bexp& (0+255),0,b
 30672                           
 30673                           ; BSR set to: 1
 30674                           
 30675                           ; BSR set to: 1
 30676  015E7C  513B               	movf	___fladd@bexp& (0+255),w,b
 30677  015E7E  B4D8               	btfsc	status,2,c
 30678  015E80  D00D               	goto	l2711
 30679                           
 30680                           ; BSR set to: 1
 30681  015E82  293B               	incf	___fladd@bexp& (0+255),w,b
 30682  015E84  A4D8               	btfss	status,2,c
 30683  015E86  D008               	goto	l2712
 30684                           
 30685                           ; BSR set to: 1
 30686  015E88  0E00               	movlw	0
 30687  015E8A  6F29               	movwf	___fladd@b& (0+255),b
 30688  015E8C  0E00               	movlw	0
 30689  015E8E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30690  015E90  0E00               	movlw	0
 30691  015E92  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30692  015E94  0E00               	movlw	0
 30693  015E96  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30694  015E98                     l2712:
 30695                           
 30696                           ; BSR set to: 1
 30697                           
 30698                           ; BSR set to: 1
 30699  015E98  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 30700  015E9A  D006               	goto	L6
 30701  015E9C                     l2711:
 30702                           
 30703                           ; BSR set to: 1
 30704                           
 30705                           ; BSR set to: 1
 30706  015E9C  0E00               	movlw	0
 30707  015E9E  6F29               	movwf	___fladd@b& (0+255),b
 30708  015EA0  0E00               	movlw	0
 30709  015EA2  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30710  015EA4  0E00               	movlw	0
 30711  015EA6  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30712  015EA8                     L6:
 30713  015EA8  0E00               	movlw	0
 30714  015EAA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30715                           
 30716                           ; BSR set to: 1
 30717                           
 30718                           ; BSR set to: 1
 30719  015EAC  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30720  015EAE  0B80               	andlw	128
 30721  015EB0  6F3A               	movwf	___fladd@aexp& (0+255),b
 30722                           
 30723                           ; BSR set to: 1
 30724  015EB2  5139               	movf	___fladd@signs& (0+255),w,b
 30725  015EB4  193A               	xorwf	___fladd@aexp& (0+255),w,b
 30726  015EB6  A4D8               	btfss	status,2,c
 30727                           
 30728                           ; BSR set to: 1
 30729  015EB8  8D39               	bsf	___fladd@signs& (0+255),6,b
 30730                           
 30731                           ; BSR set to: 1
 30732                           
 30733                           ; BSR set to: 1
 30734  015EBA  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30735  015EBC  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 30736  015EBE  6F3A               	movwf	___fladd@aexp& (0+255),b
 30737                           
 30738                           ; BSR set to: 1
 30739  015EC0  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 30740                           
 30741                           ; BSR set to: 1
 30742  015EC2  813A               	bsf	___fladd@aexp& (0+255),0,b
 30743                           
 30744                           ; BSR set to: 1
 30745                           
 30746                           ; BSR set to: 1
 30747  015EC4  513A               	movf	___fladd@aexp& (0+255),w,b
 30748  015EC6  B4D8               	btfsc	status,2,c
 30749  015EC8  D00D               	goto	l2716
 30750                           
 30751                           ; BSR set to: 1
 30752  015ECA  293A               	incf	___fladd@aexp& (0+255),w,b
 30753  015ECC  A4D8               	btfss	status,2,c
 30754  015ECE  D008               	goto	l2717
 30755                           
 30756                           ; BSR set to: 1
 30757  015ED0  0E00               	movlw	0
 30758  015ED2  6F2D               	movwf	___fladd@a& (0+255),b
 30759  015ED4  0E00               	movlw	0
 30760  015ED6  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 30761  015ED8  0E00               	movlw	0
 30762  015EDA  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 30763  015EDC  0E00               	movlw	0
 30764  015EDE  6F30               	movwf	(___fladd@a+3)& (0+255),b
 30765  015EE0                     l2717:
 30766                           
 30767                           ; BSR set to: 1
 30768                           
 30769                           ; BSR set to: 1
 30770  015EE0  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 30771  015EE2  D006               	goto	L7
 30772  015EE4                     l2716:
 30773                           
 30774                           ; BSR set to: 1
 30775                           
 30776                           ; BSR set to: 1
 30777  015EE4  0E00               	movlw	0
 30778  015EE6  6F2D               	movwf	___fladd@a& (0+255),b
 30779  015EE8  0E00               	movlw	0
 30780  015EEA  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 30781  015EEC  0E00               	movlw	0
 30782  015EEE  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 30783  015EF0                     L7:
 30784  015EF0  0E00               	movlw	0
 30785  015EF2  6F30               	movwf	(___fladd@a+3)& (0+255),b
 30786                           
 30787                           ; BSR set to: 1
 30788                           
 30789                           ; BSR set to: 1
 30790  015EF4  513B               	movf	___fladd@bexp& (0+255),w,b
 30791  015EF6  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 30792  015EF8  B0D8               	btfsc	status,0,c
 30793  015EFA  D022               	goto	l2719
 30794                           
 30795                           ; BSR set to: 1
 30796  015EFC  AD39               	btfss	___fladd@signs& (0+255),6,b
 30797  015EFE  D002               	goto	l2720
 30798                           
 30799                           ; BSR set to: 1
 30800  015F00  0E80               	movlw	128
 30801  015F02  1B39               	xorwf	___fladd@signs& (0+255),f,b
 30802  015F04                     l2720:
 30803                           
 30804                           ; BSR set to: 1
 30805                           
 30806                           ; BSR set to: 1
 30807  015F04  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 30808                           
 30809                           ; BSR set to: 1
 30810  015F08  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 30811                           
 30812                           ; BSR set to: 1
 30813  015F0C  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 30814                           
 30815                           ; BSR set to: 1
 30816  015F10  C129  F13C         	movff	___fladd@b,___fladd@grs
 30817                           
 30818                           ; BSR set to: 1
 30819  015F14  C12D  F129         	movff	___fladd@a,___fladd@b
 30820                           
 30821                           ; BSR set to: 1
 30822  015F18  C13C  F12D         	movff	___fladd@grs,___fladd@a
 30823                           
 30824                           ; BSR set to: 1
 30825  015F1C  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 30826                           
 30827                           ; BSR set to: 1
 30828  015F20  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 30829                           
 30830                           ; BSR set to: 1
 30831  015F24  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 30832                           
 30833                           ; BSR set to: 1
 30834  015F28  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 30835                           
 30836                           ; BSR set to: 1
 30837  015F2C  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 30838                           
 30839                           ; BSR set to: 1
 30840  015F30  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 30841                           
 30842                           ; BSR set to: 1
 30843  015F34  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 30844                           
 30845                           ; BSR set to: 1
 30846  015F38  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 30847                           
 30848                           ; BSR set to: 1
 30849  015F3C  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 30850  015F40                     l2719:
 30851                           
 30852                           ; BSR set to: 1
 30853                           
 30854                           ; BSR set to: 1
 30855  015F40  0E00               	movlw	0
 30856  015F42  6F3C               	movwf	___fladd@grs& (0+255),b
 30857                           
 30858                           ; BSR set to: 1
 30859  015F44  513B               	movf	___fladd@bexp& (0+255),w,b
 30860  015F46  6F31               	movwf	??___fladd& (0+255),b
 30861  015F48  6B32               	clrf	(??___fladd+1)& (0+255),b
 30862  015F4A  1F31               	comf	??___fladd& (0+255),f,b
 30863  015F4C  1F32               	comf	(??___fladd+1)& (0+255),f,b
 30864  015F4E  4B31               	infsnz	??___fladd& (0+255),f,b
 30865  015F50  2B32               	incf	(??___fladd+1)& (0+255),f,b
 30866  015F52  513A               	movf	___fladd@aexp& (0+255),w,b
 30867  015F54  6F33               	movwf	(??___fladd+2)& (0+255),b
 30868  015F56  6B34               	clrf	(??___fladd+3)& (0+255),b
 30869  015F58  5131               	movf	??___fladd& (0+255),w,b
 30870  015F5A  2733               	addwf	(??___fladd+2)& (0+255),f,b
 30871  015F5C  5132               	movf	(??___fladd+1)& (0+255),w,b
 30872  015F5E  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 30873  015F60  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 30874  015F62  D02C               	goto	l2723
 30875  015F64  5134               	movf	(??___fladd+3)& (0+255),w,b
 30876  015F66  E104               	bnz	u16650
 30877  015F68  0E1A               	movlw	26
 30878  015F6A  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 30879  015F6C  A0D8               	btfss	status,0,c
 30880  015F6E  D026               	goto	l2723
 30881  015F70                     u16650:
 30882                           
 30883                           ; BSR set to: 1
 30884  015F70  5129               	movf	___fladd@b& (0+255),w,b
 30885  015F72  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 30886  015F74  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 30887  015F76  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 30888  015F78  B4D8               	btfsc	status,2,c
 30889  015F7A  D002               	goto	u16660
 30890  015F7C  0E01               	movlw	1
 30891  015F7E  D001               	goto	u16670
 30892  015F80                     u16660:
 30893  015F80  0E00               	movlw	0
 30894  015F82                     u16670:
 30895  015F82  6F3C               	movwf	___fladd@grs& (0+255),b
 30896                           
 30897                           ; BSR set to: 1
 30898  015F84  0E00               	movlw	0
 30899  015F86  6F29               	movwf	___fladd@b& (0+255),b
 30900  015F88  0E00               	movlw	0
 30901  015F8A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 30902  015F8C  0E00               	movlw	0
 30903  015F8E  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 30904  015F90  0E00               	movlw	0
 30905  015F92  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 30906                           
 30907                           ; BSR set to: 1
 30908  015F94  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 30909  015F98  D015               	goto	u16700
 30910  015F9A                     l2724:
 30911                           
 30912                           ; BSR set to: 1
 30913  015F9A  A13C               	btfss	___fladd@grs& (0+255),0,b
 30914  015F9C  D005               	goto	l2725
 30915                           
 30916                           ; BSR set to: 1
 30917  015F9E  90D8               	bcf	status,0,c
 30918  015FA0  313C               	rrcf	___fladd@grs& (0+255),w,b
 30919  015FA2  0901               	iorlw	1
 30920  015FA4  6F3C               	movwf	___fladd@grs& (0+255),b
 30921  015FA6  D002               	goto	l2726
 30922  015FA8                     l2725:
 30923                           
 30924                           ; BSR set to: 1
 30925                           
 30926                           ; BSR set to: 1
 30927  015FA8  90D8               	bcf	status,0,c
 30928  015FAA  333C               	rrcf	___fladd@grs& (0+255),f,b
 30929  015FAC                     l2726:
 30930                           
 30931                           ; BSR set to: 1
 30932                           
 30933                           ; BSR set to: 1
 30934  015FAC  B129               	btfsc	___fladd@b& (0+255),0,b
 30935                           
 30936                           ; BSR set to: 1
 30937  015FAE  8F3C               	bsf	___fladd@grs& (0+255),7,b
 30938                           
 30939                           ; BSR set to: 1
 30940                           
 30941                           ; BSR set to: 1
 30942  015FB0  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 30943  015FB2  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 30944  015FB4  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 30945  015FB6  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 30946  015FB8  3329               	rrcf	___fladd@b& (0+255),f,b
 30947                           
 30948                           ; BSR set to: 1
 30949  015FBA  2B3B               	incf	___fladd@bexp& (0+255),f,b
 30950  015FBC                     l2723:
 30951                           
 30952                           ; BSR set to: 1
 30953  015FBC  513A               	movf	___fladd@aexp& (0+255),w,b
 30954  015FBE  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 30955  015FC0  A0D8               	btfss	status,0,c
 30956  015FC2  D7EB               	goto	l2724
 30957  015FC4                     u16700:
 30958                           
 30959                           ; BSR set to: 1
 30960                           
 30961                           ; BSR set to: 1
 30962  015FC4  BD39               	btfsc	___fladd@signs& (0+255),6,b
 30963  015FC6  D029               	goto	l2729
 30964                           
 30965                           ; BSR set to: 1
 30966  015FC8  513B               	movf	___fladd@bexp& (0+255),w,b
 30967  015FCA  A4D8               	btfss	status,2,c
 30968  015FCC  D009               	goto	l2730
 30969                           
 30970                           ; BSR set to: 1
 30971  015FCE  0E00               	movlw	0
 30972  015FD0  6F29               	movwf	?___fladd& (0+255),b
 30973  015FD2  0E00               	movlw	0
 30974  015FD4  6F2A               	movwf	(?___fladd+1)& (0+255),b
 30975  015FD6  0E00               	movlw	0
 30976  015FD8  6F2B               	movwf	(?___fladd+2)& (0+255),b
 30977  015FDA  0E00               	movlw	0
 30978  015FDC  6F2C               	movwf	(?___fladd+3)& (0+255),b
 30979                           
 30980                           ; BSR set to: 1
 30981  015FDE  0012               	return	
 30982  015FE0                     l2730:
 30983                           
 30984                           ; BSR set to: 1
 30985                           
 30986                           ; BSR set to: 1
 30987  015FE0  512D               	movf	___fladd@a& (0+255),w,b
 30988  015FE2  2729               	addwf	___fladd@b& (0+255),f,b
 30989  015FE4  512E               	movf	(___fladd@a+1)& (0+255),w,b
 30990  015FE6  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 30991  015FE8  512F               	movf	(___fladd@a+2)& (0+255),w,b
 30992  015FEA  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 30993  015FEC  5130               	movf	(___fladd@a+3)& (0+255),w,b
 30994  015FEE  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 30995                           
 30996                           ; BSR set to: 1
 30997  015FF0  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 30998  015FF2  D083               	goto	u16830
 30999                           
 31000                           ; BSR set to: 1
 31001  015FF4  A13C               	btfss	___fladd@grs& (0+255),0,b
 31002  015FF6  D006               	goto	l2733
 31003                           
 31004                           ; BSR set to: 1
 31005  015FF8  90D8               	bcf	status,0,c
 31006  015FFA  333C               	rrcf	___fladd@grs& (0+255),f,b
 31007  015FFC  513C               	movf	___fladd@grs& (0+255),w,b
 31008  015FFE  0901               	iorlw	1
 31009  016000  6F3C               	movwf	___fladd@grs& (0+255),b
 31010  016002  D002               	goto	l2734
 31011  016004                     l2733:
 31012                           
 31013                           ; BSR set to: 1
 31014                           
 31015                           ; BSR set to: 1
 31016  016004  90D8               	bcf	status,0,c
 31017  016006  333C               	rrcf	___fladd@grs& (0+255),f,b
 31018  016008                     l2734:
 31019                           
 31020                           ; BSR set to: 1
 31021                           
 31022                           ; BSR set to: 1
 31023  016008  B129               	btfsc	___fladd@b& (0+255),0,b
 31024                           
 31025                           ; BSR set to: 1
 31026  01600A  8F3C               	bsf	___fladd@grs& (0+255),7,b
 31027                           
 31028                           ; BSR set to: 1
 31029                           
 31030                           ; BSR set to: 1
 31031  01600C  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 31032  01600E  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 31033  016010  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 31034  016012  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 31035  016014  3329               	rrcf	___fladd@b& (0+255),f,b
 31036                           
 31037                           ; BSR set to: 1
 31038  016016  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31039                           
 31040                           ; BSR set to: 1
 31041  016018  D070               	goto	u16830
 31042  01601A                     l2729:
 31043                           
 31044                           ; BSR set to: 1
 31045                           
 31046                           ; BSR set to: 1
 31047  01601A  512D               	movf	___fladd@a& (0+255),w,b
 31048  01601C  5D29               	subwf	___fladd@b& (0+255),w,b
 31049  01601E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31050  016020  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 31051  016022  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31052  016024  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 31053  016026  512C               	movf	(___fladd@b+3)& (0+255),w,b
 31054  016028  0A80               	xorlw	128
 31055  01602A  6F31               	movwf	??___fladd& (0+255),b
 31056  01602C  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31057  01602E  0A80               	xorlw	128
 31058  016030  5931               	subwfb	??___fladd& (0+255),w,b
 31059  016032  B0D8               	btfsc	status,0,c
 31060  016034  D036               	goto	l2737
 31061                           
 31062                           ; BSR set to: 1
 31063  016036  C129  F131         	movff	___fladd@b,??___fladd
 31064  01603A  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 31065  01603E  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 31066  016042  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 31067  016046  1F31               	comf	??___fladd& (0+255),f,b
 31068  016048  1F32               	comf	(??___fladd+1)& (0+255),f,b
 31069  01604A  1F33               	comf	(??___fladd+2)& (0+255),f,b
 31070  01604C  1F34               	comf	(??___fladd+3)& (0+255),f,b
 31071  01604E  2B31               	incf	??___fladd& (0+255),f,b
 31072  016050  0E00               	movlw	0
 31073  016052  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 31074  016054  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 31075  016056  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 31076  016058  512D               	movf	___fladd@a& (0+255),w,b
 31077  01605A  2531               	addwf	??___fladd& (0+255),w,b
 31078  01605C  6F35               	movwf	(??___fladd+4)& (0+255),b
 31079  01605E  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31080  016060  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 31081  016062  6F36               	movwf	(??___fladd+5)& (0+255),b
 31082  016064  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31083  016066  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 31084  016068  6F37               	movwf	(??___fladd+6)& (0+255),b
 31085  01606A  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31086  01606C  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 31087  01606E  6F38               	movwf	(??___fladd+7)& (0+255),b
 31088  016070  0EFF               	movlw	255
 31089  016072  2535               	addwf	(??___fladd+4)& (0+255),w,b
 31090  016074  6F29               	movwf	___fladd@b& (0+255),b
 31091  016076  0EFF               	movlw	255
 31092  016078  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 31093  01607A  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31094  01607C  0EFF               	movlw	255
 31095  01607E  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 31096  016080  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31097  016082  0EFF               	movlw	255
 31098  016084  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 31099  016086  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31100  016088  0E80               	movlw	128
 31101  01608A  1B39               	xorwf	___fladd@signs& (0+255),f,b
 31102                           
 31103                           ; BSR set to: 1
 31104  01608C  6D3C               	negf	___fladd@grs& (0+255),b
 31105                           
 31106                           ; BSR set to: 1
 31107  01608E  513C               	movf	___fladd@grs& (0+255),w,b
 31108  016090  A4D8               	btfss	status,2,c
 31109  016092  D00F               	goto	l2739
 31110                           
 31111                           ; BSR set to: 1
 31112  016094  0E01               	movlw	1
 31113  016096  2729               	addwf	___fladd@b& (0+255),f,b
 31114  016098  0E00               	movlw	0
 31115  01609A  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31116  01609C  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31117  01609E  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31118                           
 31119                           ; BSR set to: 1
 31120  0160A0  D008               	goto	l2739
 31121  0160A2                     l2737:
 31122                           
 31123                           ; BSR set to: 1
 31124                           
 31125                           ; BSR set to: 1
 31126  0160A2  512D               	movf	___fladd@a& (0+255),w,b
 31127  0160A4  5F29               	subwf	___fladd@b& (0+255),f,b
 31128  0160A6  512E               	movf	(___fladd@a+1)& (0+255),w,b
 31129  0160A8  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 31130  0160AA  512F               	movf	(___fladd@a+2)& (0+255),w,b
 31131  0160AC  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 31132  0160AE  5130               	movf	(___fladd@a+3)& (0+255),w,b
 31133  0160B0  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 31134  0160B2                     l2739:
 31135                           
 31136                           ; BSR set to: 1
 31137  0160B2  5129               	movf	___fladd@b& (0+255),w,b
 31138  0160B4  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 31139  0160B6  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 31140  0160B8  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 31141  0160BA  A4D8               	btfss	status,2,c
 31142  0160BC  D01C               	goto	l2746
 31143                           
 31144                           ; BSR set to: 1
 31145  0160BE  513C               	movf	___fladd@grs& (0+255),w,b
 31146  0160C0  A4D8               	btfss	status,2,c
 31147  0160C2  D019               	goto	l2746
 31148                           
 31149                           ; BSR set to: 1
 31150  0160C4  0E00               	movlw	0
 31151  0160C6  6F29               	movwf	?___fladd& (0+255),b
 31152  0160C8  0E00               	movlw	0
 31153  0160CA  6F2A               	movwf	(?___fladd+1)& (0+255),b
 31154  0160CC  0E00               	movlw	0
 31155  0160CE  6F2B               	movwf	(?___fladd+2)& (0+255),b
 31156  0160D0  0E00               	movlw	0
 31157  0160D2  6F2C               	movwf	(?___fladd+3)& (0+255),b
 31158                           
 31159                           ; BSR set to: 1
 31160  0160D4  0012               	return	
 31161  0160D6                     
 31162                           ; BSR set to: 1
 31163                           
 31164                           ; BSR set to: 1
 31165  0160D6  90D8               	bcf	status,0,c
 31166  0160D8  3729               	rlcf	___fladd@b& (0+255),f,b
 31167  0160DA  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 31168  0160DC  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 31169  0160DE  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 31170                           
 31171                           ; BSR set to: 1
 31172  0160E0  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 31173                           
 31174                           ; BSR set to: 1
 31175  0160E2  8129               	bsf	___fladd@b& (0+255),0,b
 31176                           
 31177                           ; BSR set to: 1
 31178                           
 31179                           ; BSR set to: 1
 31180  0160E4  A13C               	btfss	___fladd@grs& (0+255),0,b
 31181  0160E6  D002               	goto	l2744
 31182                           
 31183                           ; BSR set to: 1
 31184  0160E8  80D8               	bsf	status,0,c
 31185  0160EA  D001               	goto	L8
 31186  0160EC                     l2744:
 31187                           
 31188                           ; BSR set to: 1
 31189                           
 31190                           ; BSR set to: 1
 31191  0160EC  90D8               	bcf	status,0,c
 31192  0160EE                     L8:
 31193  0160EE  373C               	rlcf	___fladd@grs& (0+255),f,b
 31194                           
 31195                           ; BSR set to: 1
 31196                           
 31197                           ; BSR set to: 1
 31198  0160F0  513B               	movf	___fladd@bexp& (0+255),w,b
 31199  0160F2  A4D8               	btfss	status,2,c
 31200                           
 31201                           ; BSR set to: 1
 31202  0160F4  073B               	decf	___fladd@bexp& (0+255),f,b
 31203  0160F6                     l2746:
 31204                           
 31205                           ; BSR set to: 1
 31206                           
 31207                           ; BSR set to: 1
 31208                           
 31209                           ; BSR set to: 1
 31210  0160F6  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 31211  0160F8  D7EE               	goto	l2742
 31212  0160FA                     u16830:
 31213                           
 31214                           ; BSR set to: 1
 31215                           
 31216                           ; BSR set to: 1
 31217                           
 31218                           ; BSR set to: 1
 31219  0160FA  0E00               	movlw	0
 31220  0160FC  6F3A               	movwf	___fladd@aexp& (0+255),b
 31221                           
 31222                           ; BSR set to: 1
 31223  0160FE  AF3C               	btfss	___fladd@grs& (0+255),7,b
 31224  016100  D00A               	goto	l2751
 31225                           
 31226                           ; BSR set to: 1
 31227  016102  C13C  F131         	movff	___fladd@grs,??___fladd
 31228  016106  0E7F               	movlw	127
 31229  016108  1731               	andwf	??___fladd& (0+255),f,b
 31230  01610A  A4D8               	btfss	status,2,c
 31231  01610C  D002               	goto	u16860
 31232                           
 31233                           ; BSR set to: 1
 31234                           
 31235                           ; BSR set to: 1
 31236  01610E  A129               	btfss	___fladd@b& (0+255),0,b
 31237  016110  D002               	goto	l2751
 31238  016112                     u16860:
 31239                           
 31240                           ; BSR set to: 1
 31241  016112  0E01               	movlw	1
 31242  016114  6F3A               	movwf	___fladd@aexp& (0+255),b
 31243  016116                     l2751:
 31244                           
 31245                           ; BSR set to: 1
 31246                           
 31247                           ; BSR set to: 1
 31248                           
 31249                           ; BSR set to: 1
 31250  016116  513A               	movf	___fladd@aexp& (0+255),w,b
 31251  016118  B4D8               	btfsc	status,2,c
 31252  01611A  D020               	goto	l2754
 31253                           
 31254                           ; BSR set to: 1
 31255  01611C  0E01               	movlw	1
 31256  01611E  2729               	addwf	___fladd@b& (0+255),f,b
 31257  016120  0E00               	movlw	0
 31258  016122  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 31259  016124  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 31260  016126  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 31261                           
 31262                           ; BSR set to: 1
 31263  016128  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 31264  01612A  D018               	goto	l2754
 31265                           
 31266                           ; BSR set to: 1
 31267  01612C  C129  F131         	movff	___fladd@b,??___fladd
 31268  016130  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 31269  016134  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 31270  016138  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 31271  01613C  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 31272  01613E  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 31273  016140  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 31274  016142  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 31275  016144  3331               	rrcf	??___fladd& (0+255),f,b
 31276  016146  C131  F129         	movff	??___fladd,___fladd@b
 31277  01614A  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 31278  01614E  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 31279  016152  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 31280  016156  293B               	incf	___fladd@bexp& (0+255),w,b
 31281  016158  A4D8               	btfss	status,2,c
 31282                           
 31283                           ; BSR set to: 1
 31284  01615A  2B3B               	incf	___fladd@bexp& (0+255),f,b
 31285  01615C                     l2754:
 31286                           
 31287                           ; BSR set to: 1
 31288                           
 31289                           ; BSR set to: 1
 31290                           
 31291                           ; BSR set to: 1
 31292                           
 31293                           ; BSR set to: 1
 31294  01615C  293B               	incf	___fladd@bexp& (0+255),w,b
 31295  01615E  B4D8               	btfsc	status,2,c
 31296  016160  D003               	goto	u16910
 31297                           
 31298                           ; BSR set to: 1
 31299  016162  513B               	movf	___fladd@bexp& (0+255),w,b
 31300  016164  A4D8               	btfss	status,2,c
 31301  016166  D00D               	goto	l2758
 31302  016168                     u16910:
 31303                           
 31304                           ; BSR set to: 1
 31305                           
 31306                           ; BSR set to: 1
 31307  016168  0E00               	movlw	0
 31308  01616A  6F29               	movwf	___fladd@b& (0+255),b
 31309  01616C  0E00               	movlw	0
 31310  01616E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 31311  016170  0E00               	movlw	0
 31312  016172  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 31313  016174  0E00               	movlw	0
 31314  016176  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31315  016178  513B               	movf	___fladd@bexp& (0+255),w,b
 31316  01617A  A4D8               	btfss	status,2,c
 31317  01617C  D002               	goto	l2758
 31318                           
 31319                           ; BSR set to: 1
 31320  01617E  0E00               	movlw	0
 31321  016180  6F39               	movwf	___fladd@signs& (0+255),b
 31322  016182                     l2758:
 31323                           
 31324                           ; BSR set to: 1
 31325                           
 31326                           ; BSR set to: 1
 31327                           
 31328                           ; BSR set to: 1
 31329  016182  A13B               	btfss	___fladd@bexp& (0+255),0,b
 31330  016184  D002               	goto	l2759
 31331                           
 31332                           ; BSR set to: 1
 31333  016186  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 31334  016188  D001               	goto	l2760
 31335  01618A                     l2759:
 31336                           
 31337                           ; BSR set to: 1
 31338                           
 31339                           ; BSR set to: 1
 31340  01618A  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 31341  01618C                     l2760:
 31342                           
 31343                           ; BSR set to: 1
 31344                           
 31345                           ; BSR set to: 1
 31346  01618C  90D8               	bcf	status,0,c
 31347  01618E  313B               	rrcf	___fladd@bexp& (0+255),w,b
 31348  016190  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 31349                           
 31350                           ; BSR set to: 1
 31351  016192  BF39               	btfsc	___fladd@signs& (0+255),7,b
 31352                           
 31353                           ; BSR set to: 1
 31354  016194  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 31355                           
 31356                           ; BSR set to: 1
 31357                           
 31358                           ; BSR set to: 1
 31359  016196  C129  F129         	movff	___fladd@b,?___fladd
 31360  01619A  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 31361  01619E  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 31362  0161A2  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 31363  0161A6  0012               	return	
 31364  0161A8                     __end_of___fladd:
 31365                           	opt stack 0
 31366                           tosu	equ	0xFFF
 31367                           tosh	equ	0xFFE
 31368                           tosl	equ	0xFFD
 31369                           pclath	equ	0xFFA
 31370                           tblptru	equ	0xFF8
 31371                           tblptrh	equ	0xFF7
 31372                           tblptrl	equ	0xFF6
 31373                           tablat	equ	0xFF5
 31374                           prodh	equ	0xFF4
 31375                           prodl	equ	0xFF3
 31376                           intcon	equ	0xFF2
 31377                           indf0	equ	0xFEF
 31378                           postinc0	equ	0xFEE
 31379                           fsr0h	equ	0xFEA
 31380                           fsr0l	equ	0xFE9
 31381                           wreg	equ	0xFE8
 31382                           indf1	equ	0xFE7
 31383                           postdec1	equ	0xFE5
 31384                           plusw1	equ	0xFE3
 31385                           fsr1h	equ	0xFE2
 31386                           fsr1l	equ	0xFE1
 31387                           indf2	equ	0xFDF
 31388                           postinc2	equ	0xFDE
 31389                           postdec2	equ	0xFDD
 31390                           plusw2	equ	0xFDB
 31391                           fsr2h	equ	0xFDA
 31392                           fsr2l	equ	0xFD9
 31393                           status	equ	0xFD8
 31394                           
 31395 ;; *************** function ___flneg *****************
 31396 ;; Defined at:
 31397 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 31398 ;; Parameters:    Size  Location     Type
 31399 ;;  f1              4   37[BANK1 ] unsigned char 
 31400 ;; Auto vars:     Size  Location     Type
 31401 ;;		None
 31402 ;; Return value:  Size  Location     Type
 31403 ;;                  4   37[BANK1 ] unsigned char 
 31404 ;; Registers used:
 31405 ;;		wreg, status,2, status,0
 31406 ;; Tracked objects:
 31407 ;;		On entry : 0/0
 31408 ;;		On exit  : 0/0
 31409 ;;		Unchanged: 0/0
 31410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31411 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31414 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31415 ;;Total ram usage:        4 bytes
 31416 ;; Hardware stack levels used:    1
 31417 ;; Hardware stack levels required when called:   13
 31418 ;; This function calls:
 31419 ;;		Nothing
 31420 ;; This function is called by:
 31421 ;;		_ringBufferLUT
 31422 ;;		__doprnt
 31423 ;; This function uses a non-reentrant model
 31424 ;;
 31425                           
 31426                           	psect	text51
 31427  01AD00                     __ptext51:
 31428                           	opt stack 0
 31429  01AD00                     ___flneg:
 31430                           	opt stack 13
 31431                           
 31432                           ; BSR set to: 1
 31433                           ;incstack = 0
 31434  01AD00  0101               	movlb	1	; () banked
 31435  01AD02  5125               	movf	___flneg@f1& (0+255),w,b
 31436  01AD04  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31437  01AD06  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31438  01AD08  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31439  01AD0A  B4D8               	btfsc	status,2,c
 31440  01AD0C  D008               	goto	l2407
 31441                           
 31442                           ; BSR set to: 1
 31443  01AD0E  0E00               	movlw	0
 31444  01AD10  1B25               	xorwf	___flneg@f1& (0+255),f,b
 31445  01AD12  0E00               	movlw	0
 31446  01AD14  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31447  01AD16  0E00               	movlw	0
 31448  01AD18  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31449  01AD1A  0E80               	movlw	128
 31450  01AD1C  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31451  01AD1E                     l2407:
 31452                           
 31453                           ; BSR set to: 1
 31454                           
 31455                           ; BSR set to: 1
 31456  01AD1E  C125  F125         	movff	___flneg@f1,?___flneg
 31457  01AD22  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 31458  01AD26  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 31459  01AD2A  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 31460  01AD2E  0012               	return	
 31461  01AD30                     __end_of___flneg:
 31462                           	opt stack 0
 31463                           tosu	equ	0xFFF
 31464                           tosh	equ	0xFFE
 31465                           tosl	equ	0xFFD
 31466                           pclath	equ	0xFFA
 31467                           tblptru	equ	0xFF8
 31468                           tblptrh	equ	0xFF7
 31469                           tblptrl	equ	0xFF6
 31470                           tablat	equ	0xFF5
 31471                           prodh	equ	0xFF4
 31472                           prodl	equ	0xFF3
 31473                           intcon	equ	0xFF2
 31474                           indf0	equ	0xFEF
 31475                           postinc0	equ	0xFEE
 31476                           fsr0h	equ	0xFEA
 31477                           fsr0l	equ	0xFE9
 31478                           wreg	equ	0xFE8
 31479                           indf1	equ	0xFE7
 31480                           postdec1	equ	0xFE5
 31481                           plusw1	equ	0xFE3
 31482                           fsr1h	equ	0xFE2
 31483                           fsr1l	equ	0xFE1
 31484                           indf2	equ	0xFDF
 31485                           postinc2	equ	0xFDE
 31486                           postdec2	equ	0xFDD
 31487                           plusw2	equ	0xFDB
 31488                           fsr2h	equ	0xFDA
 31489                           fsr2l	equ	0xFD9
 31490                           status	equ	0xFD8
 31491                           
 31492 ;; *************** function _strcpy *****************
 31493 ;; Defined at:
 31494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 31495 ;; Parameters:    Size  Location     Type
 31496 ;;  to              2   23[BANK1 ] PTR unsigned char 
 31497 ;;		 -> OLED_RAM_Buffer(64), 
 31498 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 31499 ;;		 -> STR_5(14), STR_4(14), STR_3(10), STR_2(15), 
 31500 ;; Auto vars:     Size  Location     Type
 31501 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 31502 ;;		 -> OLED_RAM_Buffer(64), 
 31503 ;; Return value:  Size  Location     Type
 31504 ;;                  2   23[BANK1 ] PTR unsigned char 
 31505 ;; Registers used:
 31506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31507 ;; Tracked objects:
 31508 ;;		On entry : 0/0
 31509 ;;		On exit  : 0/0
 31510 ;;		Unchanged: 0/0
 31511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31512 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31513 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31515 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31516 ;;Total ram usage:        6 bytes
 31517 ;; Hardware stack levels used:    1
 31518 ;; Hardware stack levels required when called:   13
 31519 ;; This function calls:
 31520 ;;		Nothing
 31521 ;; This function is called by:
 31522 ;;		_main
 31523 ;; This function uses a non-reentrant model
 31524 ;;
 31525                           
 31526                           	psect	text52
 31527  01AB60                     __ptext52:
 31528                           	opt stack 0
 31529  01AB60                     _strcpy:
 31530                           	opt stack 17
 31531                           
 31532                           ; BSR set to: 1
 31533                           ;incstack = 0
 31534  01AB60  C117  F11B         	movff	strcpy@to,strcpy@cp
 31535  01AB64  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 31536  01AB68  D005               	goto	l2874
 31537  01AB6A  0101               	movlb	1	; () banked
 31538  01AB6C  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 31539  01AB6E  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 31540  01AB70  4B19               	infsnz	strcpy@from& (0+255),f,b
 31541  01AB72  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 31542  01AB74                     l2874:
 31543                           
 31544                           ; BSR set to: 1
 31545  01AB74  C119  FFF6         	movff	strcpy@from,tblptrl
 31546  01AB78  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 31547  01AB7C                     	if	0	;tblptru may be non-zero
 31548  01AB7C                     	endif
 31549  01AB7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31550  01AB7C  0E00               	movlw	low (__mediumconst shr (0+16))
 31551  01AB7E  6EF8               	movwf	tblptru,c
 31552  01AB80                     	endif
 31553  01AB80  C11B  FFD9         	movff	strcpy@cp,fsr2l
 31554  01AB84  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 31555  01AB88  0008               	tblrd		*
 31556  01AB8A  CFF5 FFDF          	movff	tablat,indf2
 31557  01AB8E  50DF               	movf	indf2,w,c
 31558  01AB90  B4D8               	btfsc	status,2,c
 31559  01AB92  0012               	return	
 31560  01AB94  D7EA               	goto	l2875
 31561  01AB96                     __end_of_strcpy:
 31562                           	opt stack 0
 31563                           tosu	equ	0xFFF
 31564                           tosh	equ	0xFFE
 31565                           tosl	equ	0xFFD
 31566                           pclath	equ	0xFFA
 31567                           tblptru	equ	0xFF8
 31568                           tblptrh	equ	0xFF7
 31569                           tblptrl	equ	0xFF6
 31570                           tablat	equ	0xFF5
 31571                           prodh	equ	0xFF4
 31572                           prodl	equ	0xFF3
 31573                           intcon	equ	0xFF2
 31574                           indf0	equ	0xFEF
 31575                           postinc0	equ	0xFEE
 31576                           fsr0h	equ	0xFEA
 31577                           fsr0l	equ	0xFE9
 31578                           wreg	equ	0xFE8
 31579                           indf1	equ	0xFE7
 31580                           postdec1	equ	0xFE5
 31581                           plusw1	equ	0xFE3
 31582                           fsr1h	equ	0xFE2
 31583                           fsr1l	equ	0xFE1
 31584                           indf2	equ	0xFDF
 31585                           postinc2	equ	0xFDE
 31586                           postdec2	equ	0xFDD
 31587                           plusw2	equ	0xFDB
 31588                           fsr2h	equ	0xFDA
 31589                           fsr2l	equ	0xFD9
 31590                           status	equ	0xFD8
 31591                           
 31592 ;; *************** function _saveSRAMMaxToEEPROM *****************
 31593 ;; Defined at:
 31594 ;;		line 155 in file "main.c"
 31595 ;; Parameters:    Size  Location     Type
 31596 ;;		None
 31597 ;; Auto vars:     Size  Location     Type
 31598 ;;		None
 31599 ;; Return value:  Size  Location     Type
 31600 ;;                  1    wreg      void 
 31601 ;; Registers used:
 31602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31603 ;; Tracked objects:
 31604 ;;		On entry : 0/0
 31605 ;;		On exit  : 0/0
 31606 ;;		Unchanged: 0/0
 31607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31612 ;;Total ram usage:        0 bytes
 31613 ;; Hardware stack levels used:    1
 31614 ;; Hardware stack levels required when called:   15
 31615 ;; This function calls:
 31616 ;;		___flge
 31617 ;;		_writeDoubleToEEPROM
 31618 ;; This function is called by:
 31619 ;;		_main
 31620 ;; This function uses a non-reentrant model
 31621 ;;
 31622                           
 31623                           	psect	text53
 31624  01788A                     __ptext53:
 31625                           	opt stack 0
 31626  01788A                     _saveSRAMMaxToEEPROM:
 31627                           	opt stack 15
 31628                           
 31629                           ;main.c: 159: if (Irms > max_Irms) {
 31630                           
 31631                           ;incstack = 0
 31632  01788A  C224  F117         	movff	_max_Irms,___flge@ff1	;volatile
 31633  01788E  C225  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 31634  017892  C226  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 31635  017896  C227  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 31636  01789A  C1CA  F11B         	movff	_Irms,___flge@ff2	;volatile
 31637  01789E  C1CB  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 31638  0178A2  C1CC  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 31639  0178A6  C1CD  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 31640  0178AA  EC52  F0C6         	call	___flge	;wreg free
 31641  0178AE  0101               	movlb	1	; () banked
 31642  0178B0  B0D8               	btfsc	status,0,c
 31643  0178B2  D01E               	goto	l1172
 31644                           
 31645                           ; BSR set to: 1
 31646                           ;main.c: 160: writeDoubleToEEPROM(Irms, max_Irms_address);
 31647  0178B4  C1CA  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 31648  0178B8  C1CB  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 31649  0178BC  C1CC  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 31650  0178C0  C1CD  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 31651  0178C4  0E5D               	movlw	low _max_Irms_address
 31652  0178C6  6EF6               	movwf	tblptrl,c
 31653  0178C8                     	if	1	;There is more than 1 active tblptr byte
 31654  0178C8  0ECF               	movlw	high _max_Irms_address
 31655  0178CA  6EF7               	movwf	tblptrh,c
 31656  0178CC                     	endif
 31657  0178CC                     	if	1	;There are 3 active tblptr bytes
 31658  0178CC  0E00               	movlw	low (_max_Irms_address shr (0+16))
 31659  0178CE  6EF8               	movwf	tblptru,c
 31660  0178D0                     	endif
 31661  0178D0  0009               	tblrd		*+
 31662  0178D2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31663  0178D6  000A               	tblrd		*-
 31664  0178D8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31665  0178DC  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31666                           
 31667                           ;main.c: 161: max_Irms = Irms;
 31668  0178E0  C1CA  F224         	movff	_Irms,_max_Irms	;volatile
 31669  0178E4  C1CB  F225         	movff	_Irms+1,_max_Irms+1	;volatile
 31670  0178E8  C1CC  F226         	movff	_Irms+2,_max_Irms+2	;volatile
 31671  0178EC  C1CD  F227         	movff	_Irms+3,_max_Irms+3	;volatile
 31672  0178F0                     l1172:
 31673                           
 31674                           ;main.c: 162: }
 31675                           ;main.c: 164: if (Avg_Power > max_Power) {
 31676  0178F0  C220  F117         	movff	_max_Power,___flge@ff1	;volatile
 31677  0178F4  C221  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 31678  0178F8  C222  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 31679  0178FC  C223  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 31680  017900  C1C6  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 31681  017904  C1C7  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 31682  017908  C1C8  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 31683  01790C  C1C9  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 31684  017910  EC52  F0C6         	call	___flge	;wreg free
 31685  017914  0101               	movlb	1	; () banked
 31686  017916  B0D8               	btfsc	status,0,c
 31687  017918  D01E               	goto	l1173
 31688                           
 31689                           ; BSR set to: 1
 31690                           ;main.c: 165: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 31691  01791A  C1C6  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 31692  01791E  C1C7  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 31693  017922  C1C8  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 31694  017926  C1C9  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 31695  01792A  0E5B               	movlw	low _max_Power_address
 31696  01792C  6EF6               	movwf	tblptrl,c
 31697  01792E                     	if	1	;There is more than 1 active tblptr byte
 31698  01792E  0ECF               	movlw	high _max_Power_address
 31699  017930  6EF7               	movwf	tblptrh,c
 31700  017932                     	endif
 31701  017932                     	if	1	;There are 3 active tblptr bytes
 31702  017932  0E00               	movlw	low (_max_Power_address shr (0+16))
 31703  017934  6EF8               	movwf	tblptru,c
 31704  017936                     	endif
 31705  017936  0009               	tblrd		*+
 31706  017938  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31707  01793C  000A               	tblrd		*-
 31708  01793E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31709  017942  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31710                           
 31711                           ;main.c: 166: max_Power = Avg_Power;
 31712  017946  C1C6  F220         	movff	_Avg_Power,_max_Power	;volatile
 31713  01794A  C1C7  F221         	movff	_Avg_Power+1,_max_Power+1	;volatile
 31714  01794E  C1C8  F222         	movff	_Avg_Power+2,_max_Power+2	;volatile
 31715  017952  C1C9  F223         	movff	_Avg_Power+3,_max_Power+3	;volatile
 31716  017956                     l1173:
 31717                           
 31718                           ;main.c: 167: }
 31719                           ;main.c: 169: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 31720  017956  C21C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 31721  01795A  C21D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 31722  01795E  C21E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 31723  017962  C21F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 31724  017966  C1DA  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 31725  01796A  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 31726  01796E  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 31727  017972  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 31728  017976  EC52  F0C6         	call	___flge	;wreg free
 31729  01797A  0101               	movlb	1	; () banked
 31730  01797C  B0D8               	btfsc	status,0,c
 31731  01797E  D01E               	goto	l1174
 31732                           
 31733                           ; BSR set to: 1
 31734                           ;main.c: 170: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 31735  017980  C1DA  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31736  017984  C1DB  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31737  017988  C1DC  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31738  01798C  C1DD  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31739  017990  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 31740  017992  6EF6               	movwf	tblptrl,c
 31741  017994                     	if	1	;There is more than 1 active tblptr byte
 31742  017994  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 31743  017996  6EF7               	movwf	tblptrh,c
 31744  017998                     	endif
 31745  017998                     	if	1	;There are 3 active tblptr bytes
 31746  017998  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 31747  01799A  6EF8               	movwf	tblptru,c
 31748  01799C                     	endif
 31749  01799C  0009               	tblrd		*+
 31750  01799E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31751  0179A2  000A               	tblrd		*-
 31752  0179A4  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31753  0179A8  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31754                           
 31755                           ;main.c: 171: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 31756  0179AC  C1DA  F21C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 31757  0179B0  C1DB  F21D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 31758  0179B4  C1DC  F21E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 31759  0179B8  C1DD  F21F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 31760  0179BC                     l1174:
 31761                           
 31762                           ;main.c: 172: }
 31763                           ;main.c: 174: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 31764  0179BC  C218  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 31765  0179C0  C219  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 31766  0179C4  C21A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 31767  0179C8  C21B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 31768  0179CC  C1D6  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 31769  0179D0  C1D7  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 31770  0179D4  C1D8  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 31771  0179D8  C1D9  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 31772  0179DC  EC52  F0C6         	call	___flge	;wreg free
 31773  0179E0  0101               	movlb	1	; () banked
 31774  0179E2  B0D8               	btfsc	status,0,c
 31775  0179E4  D01E               	goto	l1175
 31776                           
 31777                           ; BSR set to: 1
 31778                           ;main.c: 175: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 31779  0179E6  C1D6  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31780  0179EA  C1D7  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31781  0179EE  C1D8  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31782  0179F2  C1D9  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31783  0179F6  0E57               	movlw	low _max_POS12_ADC_Result_address
 31784  0179F8  6EF6               	movwf	tblptrl,c
 31785  0179FA                     	if	1	;There is more than 1 active tblptr byte
 31786  0179FA  0ECF               	movlw	high _max_POS12_ADC_Result_address
 31787  0179FC  6EF7               	movwf	tblptrh,c
 31788  0179FE                     	endif
 31789  0179FE                     	if	1	;There are 3 active tblptr bytes
 31790  0179FE  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 31791  017A00  6EF8               	movwf	tblptru,c
 31792  017A02                     	endif
 31793  017A02  0009               	tblrd		*+
 31794  017A04  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31795  017A08  000A               	tblrd		*-
 31796  017A0A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31797  017A0E  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31798                           
 31799                           ;main.c: 176: max_POS12_ADC_Result = POS12_ADC_Result;
 31800  017A12  C1D6  F218         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 31801  017A16  C1D7  F219         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 31802  017A1A  C1D8  F21A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 31803  017A1E  C1D9  F21B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 31804  017A22                     l1175:
 31805                           
 31806                           ;main.c: 177: }
 31807                           ;main.c: 179: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 31808  017A22  C214  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 31809  017A26  C215  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 31810  017A2A  C216  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 31811  017A2E  C217  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 31812  017A32  C1D2  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 31813  017A36  C1D3  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 31814  017A3A  C1D4  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 31815  017A3E  C1D5  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 31816  017A42  EC52  F0C6         	call	___flge	;wreg free
 31817  017A46  0101               	movlb	1	; () banked
 31818  017A48  B0D8               	btfsc	status,0,c
 31819  017A4A  D01E               	goto	l1176
 31820                           
 31821                           ; BSR set to: 1
 31822                           ;main.c: 180: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 31823  017A4C  C1D2  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31824  017A50  C1D3  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31825  017A54  C1D4  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31826  017A58  C1D5  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31827  017A5C  0E55               	movlw	low _max_Temp_ADC_Result_address
 31828  017A5E  6EF6               	movwf	tblptrl,c
 31829  017A60                     	if	1	;There is more than 1 active tblptr byte
 31830  017A60  0ECF               	movlw	high _max_Temp_ADC_Result_address
 31831  017A62  6EF7               	movwf	tblptrh,c
 31832  017A64                     	endif
 31833  017A64                     	if	1	;There are 3 active tblptr bytes
 31834  017A64  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 31835  017A66  6EF8               	movwf	tblptru,c
 31836  017A68                     	endif
 31837  017A68  0009               	tblrd		*+
 31838  017A6A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31839  017A6E  000A               	tblrd		*-
 31840  017A70  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31841  017A74  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31842                           
 31843                           ;main.c: 181: max_Temp_ADC_Result = Temp_ADC_Result;
 31844  017A78  C1D2  F214         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 31845  017A7C  C1D3  F215         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 31846  017A80  C1D4  F216         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 31847  017A84  C1D5  F217         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 31848  017A88                     l1176:
 31849                           
 31850                           ;main.c: 182: }
 31851                           ;main.c: 184: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 31852  017A88  C210  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 31853  017A8C  C211  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 31854  017A90  C212  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 31855  017A94  C213  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 31856  017A98  C1E2  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 31857  017A9C  C1E3  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 31858  017AA0  C1E4  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 31859  017AA4  C1E5  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 31860  017AA8  EC52  F0C6         	call	___flge	;wreg free
 31861  017AAC  0101               	movlb	1	; () banked
 31862  017AAE  B0D8               	btfsc	status,0,c
 31863  017AB0  0012               	return	
 31864                           
 31865                           ; BSR set to: 1
 31866                           ;main.c: 185: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 31867  017AB2  C1E2  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 31868  017AB6  C1E3  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 31869  017ABA  C1E4  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 31870  017ABE  C1E5  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 31871  017AC2  0E53               	movlw	low _max_FVR_ADC_Result_address
 31872  017AC4  6EF6               	movwf	tblptrl,c
 31873  017AC6                     	if	1	;There is more than 1 active tblptr byte
 31874  017AC6  0ECF               	movlw	high _max_FVR_ADC_Result_address
 31875  017AC8  6EF7               	movwf	tblptrh,c
 31876  017ACA                     	endif
 31877  017ACA                     	if	1	;There are 3 active tblptr bytes
 31878  017ACA  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 31879  017ACC  6EF8               	movwf	tblptru,c
 31880  017ACE                     	endif
 31881  017ACE  0009               	tblrd		*+
 31882  017AD0  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 31883  017AD4  000A               	tblrd		*-
 31884  017AD6  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 31885  017ADA  ECF8  F0D1         	call	_writeDoubleToEEPROM	;wreg free
 31886                           
 31887                           ;main.c: 186: max_FVR_ADC_Result = FVR_ADC_Result;
 31888  017ADE  C1E2  F210         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 31889  017AE2  C1E3  F211         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 31890  017AE6  C1E4  F212         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 31891  017AEA  C1E5  F213         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 31892  017AEE  0012               	return	
 31893  017AF0                     __end_of_saveSRAMMaxToEEPROM:
 31894                           	opt stack 0
 31895                           tosu	equ	0xFFF
 31896                           tosh	equ	0xFFE
 31897                           tosl	equ	0xFFD
 31898                           pclath	equ	0xFFA
 31899                           tblptru	equ	0xFF8
 31900                           tblptrh	equ	0xFF7
 31901                           tblptrl	equ	0xFF6
 31902                           tablat	equ	0xFF5
 31903                           prodh	equ	0xFF4
 31904                           prodl	equ	0xFF3
 31905                           intcon	equ	0xFF2
 31906                           indf0	equ	0xFEF
 31907                           postinc0	equ	0xFEE
 31908                           fsr0h	equ	0xFEA
 31909                           fsr0l	equ	0xFE9
 31910                           wreg	equ	0xFE8
 31911                           indf1	equ	0xFE7
 31912                           postdec1	equ	0xFE5
 31913                           plusw1	equ	0xFE3
 31914                           fsr1h	equ	0xFE2
 31915                           fsr1l	equ	0xFE1
 31916                           indf2	equ	0xFDF
 31917                           postinc2	equ	0xFDE
 31918                           postdec2	equ	0xFDD
 31919                           plusw2	equ	0xFDB
 31920                           fsr2h	equ	0xFDA
 31921                           fsr2l	equ	0xFD9
 31922                           status	equ	0xFD8
 31923                           
 31924 ;; *************** function _writeDoubleToEEPROM *****************
 31925 ;; Defined at:
 31926 ;;		line 6 in file "double_to_EEPROM.c"
 31927 ;; Parameters:    Size  Location     Type
 31928 ;;  input_double    4   27[BANK1 ] void 
 31929 ;;  starting_add    2   31[BANK1 ] unsigned int 
 31930 ;; Auto vars:     Size  Location     Type
 31931 ;;  byte_index      2   37[BANK1 ] int 
 31932 ;;  input_data      4   33[BANK1 ] struct .
 31933 ;; Return value:  Size  Location     Type
 31934 ;;                  1    wreg      void 
 31935 ;; Registers used:
 31936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31937 ;; Tracked objects:
 31938 ;;		On entry : 0/0
 31939 ;;		On exit  : 0/0
 31940 ;;		Unchanged: 0/0
 31941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31942 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31943 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31945 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31946 ;;Total ram usage:       12 bytes
 31947 ;; Hardware stack levels used:    1
 31948 ;; Hardware stack levels required when called:   14
 31949 ;; This function calls:
 31950 ;;		_DATAEE_WriteByte
 31951 ;; This function is called by:
 31952 ;;		_saveSRAMMaxToEEPROM
 31953 ;;		_ringBufferLUT
 31954 ;; This function uses a non-reentrant model
 31955 ;;
 31956                           
 31957                           	psect	text54
 31958  01A3F0                     __ptext54:
 31959                           	opt stack 0
 31960  01A3F0                     _writeDoubleToEEPROM:
 31961                           	opt stack 14
 31962                           
 31963                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 31964                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 31965                           
 31966                           ;incstack = 0
 31967  01A3F0  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 31968  01A3F4  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 31969  01A3F8  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 31970  01A3FC  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 31971                           
 31972                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 31973  01A400  0E00               	movlw	0
 31974  01A402  0101               	movlb	1	; () banked
 31975  01A404  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 31976  01A406  0E00               	movlw	0
 31977  01A408  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 31978  01A40A                     l16141:
 31979                           
 31980                           ; BSR set to: 1
 31981  01A40A  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31982  01A40C  E118               	bnz	l1642
 31983  01A40E  0E04               	movlw	4
 31984  01A410  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31985  01A412  B0D8               	btfsc	status,0,c
 31986  01A414  0012               	return	
 31987                           
 31988                           ; BSR set to: 1
 31989                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 31990                           
 31991                           ; BSR set to: 1
 31992                           
 31993                           ; BSR set to: 1
 31994  01A416  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 31995  01A418  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 31996  01A41A  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 31997  01A41C  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 31998  01A41E  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 31999  01A420  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 32000  01A422  0E21               	movlw	low writeDoubleToEEPROM@input_data
 32001  01A424  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 32002  01A426  6ED9               	movwf	fsr2l,c
 32003  01A428  0E01               	movlw	high writeDoubleToEEPROM@input_data
 32004  01A42A  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 32005  01A42C  6EDA               	movwf	fsr2h,c
 32006  01A42E  50DF               	movf	indf2,w,c
 32007  01A430  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 32008  01A432  EC89  F0D4         	call	_DATAEE_WriteByte	;wreg free
 32009  01A436  0101               	movlb	1	; () banked
 32010  01A438  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 32011  01A43A  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 32012  01A43C  D7E6               	goto	l16141
 32013  01A43E                     l1642:
 32014                           
 32015                           ; BSR set to: 1
 32016  01A43E  0012               	return		;funcret
 32017  01A440                     __end_of_writeDoubleToEEPROM:
 32018                           	opt stack 0
 32019                           tosu	equ	0xFFF
 32020                           tosh	equ	0xFFE
 32021                           tosl	equ	0xFFD
 32022                           pclath	equ	0xFFA
 32023                           tblptru	equ	0xFF8
 32024                           tblptrh	equ	0xFF7
 32025                           tblptrl	equ	0xFF6
 32026                           tablat	equ	0xFF5
 32027                           prodh	equ	0xFF4
 32028                           prodl	equ	0xFF3
 32029                           intcon	equ	0xFF2
 32030                           indf0	equ	0xFEF
 32031                           postinc0	equ	0xFEE
 32032                           fsr0h	equ	0xFEA
 32033                           fsr0l	equ	0xFE9
 32034                           wreg	equ	0xFE8
 32035                           indf1	equ	0xFE7
 32036                           postdec1	equ	0xFE5
 32037                           plusw1	equ	0xFE3
 32038                           fsr1h	equ	0xFE2
 32039                           fsr1l	equ	0xFE1
 32040                           indf2	equ	0xFDF
 32041                           postinc2	equ	0xFDE
 32042                           postdec2	equ	0xFDD
 32043                           plusw2	equ	0xFDB
 32044                           fsr2h	equ	0xFDA
 32045                           fsr2l	equ	0xFD9
 32046                           status	equ	0xFD8
 32047                           
 32048 ;; *************** function _DATAEE_WriteByte *****************
 32049 ;; Defined at:
 32050 ;;		line 168 in file "mcc_generated_files/memory.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;  bAdd            2   23[BANK1 ] unsigned int 
 32053 ;;  bData           1   25[BANK1 ] unsigned char 
 32054 ;; Auto vars:     Size  Location     Type
 32055 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 32056 ;; Return value:  Size  Location     Type
 32057 ;;                  1    wreg      void 
 32058 ;; Registers used:
 32059 ;;		wreg, status,2, status,0
 32060 ;; Tracked objects:
 32061 ;;		On entry : 0/0
 32062 ;;		On exit  : 0/0
 32063 ;;		Unchanged: 0/0
 32064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32065 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32066 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32068 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32069 ;;Total ram usage:        4 bytes
 32070 ;; Hardware stack levels used:    1
 32071 ;; Hardware stack levels required when called:   13
 32072 ;; This function calls:
 32073 ;;		Nothing
 32074 ;; This function is called by:
 32075 ;;		_writeDoubleToEEPROM
 32076 ;; This function uses a non-reentrant model
 32077 ;;
 32078                           
 32079                           	psect	text55
 32080  01A912                     __ptext55:
 32081                           	opt stack 0
 32082  01A912                     _DATAEE_WriteByte:
 32083                           	opt stack 14
 32084                           
 32085                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 32086                           
 32087                           ; BSR set to: 1
 32088                           ;incstack = 0
 32089  01A912  0E00               	movlw	0
 32090  01A914  BEF2               	btfsc	intcon,7,c	;volatile
 32091  01A916  0E01               	movlw	1
 32092  01A918  0101               	movlb	1	; () banked
 32093  01A91A  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 32094                           
 32095                           ; BSR set to: 1
 32096                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 32097  01A91C  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 32098  01A91E  0B03               	andlw	3
 32099  01A920  6E75               	movwf	3957,c	;volatile
 32100                           
 32101                           ; BSR set to: 1
 32102                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 32103  01A922  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 32104                           
 32105                           ; BSR set to: 1
 32106                           ;memory.c: 174: NVMDAT = bData;
 32107  01A926  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 32108                           
 32109                           ; BSR set to: 1
 32110                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 32111  01A92A  0E3F               	movlw	-193
 32112  01A92C  1677               	andwf	3959,f,c	;volsfr
 32113                           
 32114                           ; BSR set to: 1
 32115                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 32116  01A92E  8477               	bsf	3959,2,c	;volsfr
 32117                           
 32118                           ; BSR set to: 1
 32119                           ;memory.c: 177: INTCONbits.GIE = 0;
 32120  01A930  9EF2               	bcf	intcon,7,c	;volatile
 32121                           
 32122                           ; BSR set to: 1
 32123                           ;memory.c: 178: NVMCON2 = 0x55;
 32124  01A932  0E55               	movlw	85
 32125  01A934  6E78               	movwf	3960,c	;volsfr
 32126                           
 32127                           ; BSR set to: 1
 32128                           ;memory.c: 179: NVMCON2 = 0xAA;
 32129  01A936  0EAA               	movlw	170
 32130  01A938  6E78               	movwf	3960,c	;volsfr
 32131                           
 32132                           ; BSR set to: 1
 32133                           ;memory.c: 180: NVMCON1bits.WR = 1;
 32134  01A93A  8277               	bsf	3959,1,c	;volsfr
 32135  01A93C                     
 32136                           ; BSR set to: 1
 32137                           ;memory.c: 183: {
 32138  01A93C  B277               	btfsc	3959,1,c	;volsfr
 32139  01A93E  D7FE               	goto	l837
 32140                           
 32141                           ;memory.c: 184: }
 32142                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 32143  01A940  9477               	bcf	3959,2,c	;volsfr
 32144                           
 32145                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 32146  01A942  0101               	movlb	1	; () banked
 32147  01A944  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 32148  01A946  D002               	bra	u20175
 32149  01A948  9EF2               	bcf	intcon,7,c	;volatile
 32150  01A94A  D001               	bra	u20176
 32151  01A94C                     u20175:
 32152  01A94C  8EF2               	bsf	intcon,7,c	;volatile
 32153  01A94E                     u20176:
 32154  01A94E  0012               	return		;funcret
 32155  01A950                     __end_of_DATAEE_WriteByte:
 32156                           	opt stack 0
 32157                           tosu	equ	0xFFF
 32158                           tosh	equ	0xFFE
 32159                           tosl	equ	0xFFD
 32160                           pclath	equ	0xFFA
 32161                           tblptru	equ	0xFF8
 32162                           tblptrh	equ	0xFF7
 32163                           tblptrl	equ	0xFF6
 32164                           tablat	equ	0xFF5
 32165                           prodh	equ	0xFF4
 32166                           prodl	equ	0xFF3
 32167                           intcon	equ	0xFF2
 32168                           indf0	equ	0xFEF
 32169                           postinc0	equ	0xFEE
 32170                           fsr0h	equ	0xFEA
 32171                           fsr0l	equ	0xFE9
 32172                           wreg	equ	0xFE8
 32173                           indf1	equ	0xFE7
 32174                           postdec1	equ	0xFE5
 32175                           plusw1	equ	0xFE3
 32176                           fsr1h	equ	0xFE2
 32177                           fsr1l	equ	0xFE1
 32178                           indf2	equ	0xFDF
 32179                           postinc2	equ	0xFDE
 32180                           postdec2	equ	0xFDD
 32181                           plusw2	equ	0xFDB
 32182                           fsr2h	equ	0xFDA
 32183                           fsr2l	equ	0xFD9
 32184                           status	equ	0xFD8
 32185                           
 32186 ;; *************** function ___flge *****************
 32187 ;; Defined at:
 32188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 32189 ;; Parameters:    Size  Location     Type
 32190 ;;  ff1             4   23[BANK1 ] void 
 32191 ;;  ff2             4   27[BANK1 ] void 
 32192 ;; Auto vars:     Size  Location     Type
 32193 ;;		None
 32194 ;; Return value:  Size  Location     Type
 32195 ;;		None               void
 32196 ;; Registers used:
 32197 ;;		wreg, status,2, status,0
 32198 ;; Tracked objects:
 32199 ;;		On entry : 0/0
 32200 ;;		On exit  : 0/0
 32201 ;;		Unchanged: 0/0
 32202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32203 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32205 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32206 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32207 ;;Total ram usage:       12 bytes
 32208 ;; Hardware stack levels used:    1
 32209 ;; Hardware stack levels required when called:   13
 32210 ;; This function calls:
 32211 ;;		Nothing
 32212 ;; This function is called by:
 32213 ;;		_saveSRAMMaxToEEPROM
 32214 ;;		__doprnt
 32215 ;; This function uses a non-reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text56
 32219  018CA4                     __ptext56:
 32220                           	opt stack 0
 32221  018CA4                     ___flge:
 32222                           	opt stack 13
 32223                           
 32224                           ;incstack = 0
 32225  018CA4  0E00               	movlw	0
 32226  018CA6  0101               	movlb	1	; () banked
 32227  018CA8  1517               	andwf	___flge@ff1& (0+255),w,b
 32228  018CAA  6F1F               	movwf	??___flge& (0+255),b
 32229  018CAC  0E00               	movlw	0
 32230  018CAE  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 32231  018CB0  6F20               	movwf	(??___flge+1)& (0+255),b
 32232  018CB2  0E80               	movlw	128
 32233  018CB4  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 32234  018CB6  6F21               	movwf	(??___flge+2)& (0+255),b
 32235  018CB8  0E7F               	movlw	127
 32236  018CBA  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 32237  018CBC  6F22               	movwf	(??___flge+3)& (0+255),b
 32238  018CBE  511F               	movf	??___flge& (0+255),w,b
 32239  018CC0  1120               	iorwf	(??___flge+1)& (0+255),w,b
 32240  018CC2  1121               	iorwf	(??___flge+2)& (0+255),w,b
 32241  018CC4  1122               	iorwf	(??___flge+3)& (0+255),w,b
 32242  018CC6  A4D8               	btfss	status,2,c
 32243  018CC8  D008               	goto	l2400
 32244                           
 32245                           ; BSR set to: 1
 32246  018CCA  0E00               	movlw	0
 32247  018CCC  6F17               	movwf	___flge@ff1& (0+255),b
 32248  018CCE  0E00               	movlw	0
 32249  018CD0  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 32250  018CD2  0E00               	movlw	0
 32251  018CD4  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 32252  018CD6  0E00               	movlw	0
 32253  018CD8  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 32254  018CDA                     l2400:
 32255                           
 32256                           ; BSR set to: 1
 32257                           
 32258                           ; BSR set to: 1
 32259  018CDA  0E00               	movlw	0
 32260  018CDC  151B               	andwf	___flge@ff2& (0+255),w,b
 32261  018CDE  6F1F               	movwf	??___flge& (0+255),b
 32262  018CE0  0E00               	movlw	0
 32263  018CE2  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 32264  018CE4  6F20               	movwf	(??___flge+1)& (0+255),b
 32265  018CE6  0E80               	movlw	128
 32266  018CE8  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 32267  018CEA  6F21               	movwf	(??___flge+2)& (0+255),b
 32268  018CEC  0E7F               	movlw	127
 32269  018CEE  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 32270  018CF0  6F22               	movwf	(??___flge+3)& (0+255),b
 32271  018CF2  511F               	movf	??___flge& (0+255),w,b
 32272  018CF4  1120               	iorwf	(??___flge+1)& (0+255),w,b
 32273  018CF6  1121               	iorwf	(??___flge+2)& (0+255),w,b
 32274  018CF8  1122               	iorwf	(??___flge+3)& (0+255),w,b
 32275  018CFA  A4D8               	btfss	status,2,c
 32276  018CFC  D008               	goto	l2401
 32277                           
 32278                           ; BSR set to: 1
 32279  018CFE  0E00               	movlw	0
 32280  018D00  6F1B               	movwf	___flge@ff2& (0+255),b
 32281  018D02  0E00               	movlw	0
 32282  018D04  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 32283  018D06  0E00               	movlw	0
 32284  018D08  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 32285  018D0A  0E00               	movlw	0
 32286  018D0C  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 32287  018D0E                     l2401:
 32288                           
 32289                           ; BSR set to: 1
 32290                           
 32291                           ; BSR set to: 1
 32292  018D0E  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 32293  018D10  D01D               	goto	l2402
 32294                           
 32295                           ; BSR set to: 1
 32296  018D12  C117  F11F         	movff	___flge@ff1,??___flge
 32297  018D16  C118  F120         	movff	___flge@ff1+1,??___flge+1
 32298  018D1A  C119  F121         	movff	___flge@ff1+2,??___flge+2
 32299  018D1E  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 32300  018D22  1F1F               	comf	??___flge& (0+255),f,b
 32301  018D24  1F20               	comf	(??___flge+1)& (0+255),f,b
 32302  018D26  1F21               	comf	(??___flge+2)& (0+255),f,b
 32303  018D28  1F22               	comf	(??___flge+3)& (0+255),f,b
 32304  018D2A  2B1F               	incf	??___flge& (0+255),f,b
 32305  018D2C  0E00               	movlw	0
 32306  018D2E  2320               	addwfc	(??___flge+1)& (0+255),f,b
 32307  018D30  2321               	addwfc	(??___flge+2)& (0+255),f,b
 32308  018D32  2322               	addwfc	(??___flge+3)& (0+255),f,b
 32309  018D34  0E00               	movlw	0
 32310  018D36  251F               	addwf	??___flge& (0+255),w,b
 32311  018D38  6F17               	movwf	___flge@ff1& (0+255),b
 32312  018D3A  0E00               	movlw	0
 32313  018D3C  2120               	addwfc	(??___flge+1)& (0+255),w,b
 32314  018D3E  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 32315  018D40  0E00               	movlw	0
 32316  018D42  2121               	addwfc	(??___flge+2)& (0+255),w,b
 32317  018D44  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 32318  018D46  0E80               	movlw	128
 32319  018D48  2122               	addwfc	(??___flge+3)& (0+255),w,b
 32320  018D4A  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 32321  018D4C                     l2402:
 32322                           
 32323                           ; BSR set to: 1
 32324                           
 32325                           ; BSR set to: 1
 32326  018D4C  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 32327  018D4E  D01D               	goto	l2403
 32328                           
 32329                           ; BSR set to: 1
 32330  018D50  C11B  F11F         	movff	___flge@ff2,??___flge
 32331  018D54  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 32332  018D58  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 32333  018D5C  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 32334  018D60  1F1F               	comf	??___flge& (0+255),f,b
 32335  018D62  1F20               	comf	(??___flge+1)& (0+255),f,b
 32336  018D64  1F21               	comf	(??___flge+2)& (0+255),f,b
 32337  018D66  1F22               	comf	(??___flge+3)& (0+255),f,b
 32338  018D68  2B1F               	incf	??___flge& (0+255),f,b
 32339  018D6A  0E00               	movlw	0
 32340  018D6C  2320               	addwfc	(??___flge+1)& (0+255),f,b
 32341  018D6E  2321               	addwfc	(??___flge+2)& (0+255),f,b
 32342  018D70  2322               	addwfc	(??___flge+3)& (0+255),f,b
 32343  018D72  0E00               	movlw	0
 32344  018D74  251F               	addwf	??___flge& (0+255),w,b
 32345  018D76  6F1B               	movwf	___flge@ff2& (0+255),b
 32346  018D78  0E00               	movlw	0
 32347  018D7A  2120               	addwfc	(??___flge+1)& (0+255),w,b
 32348  018D7C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 32349  018D7E  0E00               	movlw	0
 32350  018D80  2121               	addwfc	(??___flge+2)& (0+255),w,b
 32351  018D82  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 32352  018D84  0E80               	movlw	128
 32353  018D86  2122               	addwfc	(??___flge+3)& (0+255),w,b
 32354  018D88  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 32355  018D8A                     l2403:
 32356                           
 32357                           ; BSR set to: 1
 32358  018D8A  0E00               	movlw	0
 32359  018D8C  1B17               	xorwf	___flge@ff1& (0+255),f,b
 32360  018D8E  0E00               	movlw	0
 32361  018D90  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 32362  018D92  0E00               	movlw	0
 32363  018D94  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 32364  018D96  0E80               	movlw	128
 32365  018D98  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 32366  018D9A  0E00               	movlw	0
 32367  018D9C  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 32368  018D9E  0E00               	movlw	0
 32369  018DA0  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 32370  018DA2  0E00               	movlw	0
 32371  018DA4  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 32372  018DA6  0E80               	movlw	128
 32373  018DA8  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 32374  018DAA  511B               	movf	___flge@ff2& (0+255),w,b
 32375  018DAC  5D17               	subwf	___flge@ff1& (0+255),w,b
 32376  018DAE  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 32377  018DB0  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 32378  018DB2  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 32379  018DB4  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 32380  018DB6  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 32381  018DB8  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 32382  018DBA  B0D8               	btfsc	status,0,c
 32383  018DBC  D002               	goto	l13649
 32384                           
 32385                           ; BSR set to: 1
 32386  018DBE  90D8               	bcf	status,0,c
 32387  018DC0  0012               	return	
 32388  018DC2                     l13649:
 32389                           
 32390                           ; BSR set to: 1
 32391                           
 32392                           ; BSR set to: 1
 32393  018DC2  80D8               	bsf	status,0,c
 32394                           
 32395                           ; BSR set to: 1
 32396  018DC4  0012               	return	
 32397  018DC6                     __end_of___flge:
 32398                           	opt stack 0
 32399                           tosu	equ	0xFFF
 32400                           tosh	equ	0xFFE
 32401                           tosl	equ	0xFFD
 32402                           pclath	equ	0xFFA
 32403                           tblptru	equ	0xFF8
 32404                           tblptrh	equ	0xFF7
 32405                           tblptrl	equ	0xFF6
 32406                           tablat	equ	0xFF5
 32407                           prodh	equ	0xFF4
 32408                           prodl	equ	0xFF3
 32409                           intcon	equ	0xFF2
 32410                           indf0	equ	0xFEF
 32411                           postinc0	equ	0xFEE
 32412                           fsr0h	equ	0xFEA
 32413                           fsr0l	equ	0xFE9
 32414                           wreg	equ	0xFE8
 32415                           indf1	equ	0xFE7
 32416                           postdec1	equ	0xFE5
 32417                           plusw1	equ	0xFE3
 32418                           fsr1h	equ	0xFE2
 32419                           fsr1l	equ	0xFE1
 32420                           indf2	equ	0xFDF
 32421                           postinc2	equ	0xFDE
 32422                           postdec2	equ	0xFDD
 32423                           plusw2	equ	0xFDB
 32424                           fsr2h	equ	0xFDA
 32425                           fsr2l	equ	0xFD9
 32426                           status	equ	0xFD8
 32427                           
 32428 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 32429 ;; Defined at:
 32430 ;;		line 192 in file "main.c"
 32431 ;; Parameters:    Size  Location     Type
 32432 ;;		None
 32433 ;; Auto vars:     Size  Location     Type
 32434 ;;		None
 32435 ;; Return value:  Size  Location     Type
 32436 ;;                  1    wreg      void 
 32437 ;; Registers used:
 32438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32439 ;; Tracked objects:
 32440 ;;		On entry : 0/0
 32441 ;;		On exit  : 0/0
 32442 ;;		Unchanged: 0/0
 32443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32448 ;;Total ram usage:        0 bytes
 32449 ;; Hardware stack levels used:    1
 32450 ;; Hardware stack levels required when called:   15
 32451 ;; This function calls:
 32452 ;;		_readDoubleFromEEPROM
 32453 ;; This function is called by:
 32454 ;;		_main
 32455 ;; This function uses a non-reentrant model
 32456 ;;
 32457                           
 32458                           	psect	text57
 32459  01846C                     __ptext57:
 32460                           	opt stack 0
 32461  01846C                     _recoverSRAMMaxFromEEPROM:
 32462                           	opt stack 15
 32463                           
 32464                           ;main.c: 194: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 32465                           
 32466                           ; BSR set to: 1
 32467                           ;incstack = 0
 32468  01846C  0E5D               	movlw	low _max_Irms_address
 32469  01846E  6EF6               	movwf	tblptrl,c
 32470  018470                     	if	1	;There is more than 1 active tblptr byte
 32471  018470  0ECF               	movlw	high _max_Irms_address
 32472  018472  6EF7               	movwf	tblptrh,c
 32473  018474                     	endif
 32474  018474                     	if	1	;There are 3 active tblptr bytes
 32475  018474  0E00               	movlw	low (_max_Irms_address shr (0+16))
 32476  018476  6EF8               	movwf	tblptru,c
 32477  018478                     	endif
 32478  018478  0009               	tblrd		*+
 32479  01847A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32480  01847E  000A               	tblrd		*-
 32481  018480  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32482  018484  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32483  018488  C119  F224         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 32484  01848C  C11A  F225         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 32485  018490  C11B  F226         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 32486  018494  C11C  F227         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 32487                           
 32488                           ;main.c: 195: max_Power = readDoubleFromEEPROM(max_Power_address);
 32489  018498  0E5B               	movlw	low _max_Power_address
 32490  01849A  6EF6               	movwf	tblptrl,c
 32491  01849C                     	if	1	;There is more than 1 active tblptr byte
 32492  01849C  0ECF               	movlw	high _max_Power_address
 32493  01849E  6EF7               	movwf	tblptrh,c
 32494  0184A0                     	endif
 32495  0184A0                     	if	1	;There are 3 active tblptr bytes
 32496  0184A0  0E00               	movlw	low (_max_Power_address shr (0+16))
 32497  0184A2  6EF8               	movwf	tblptru,c
 32498  0184A4                     	endif
 32499  0184A4  0009               	tblrd		*+
 32500  0184A6  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32501  0184AA  000A               	tblrd		*-
 32502  0184AC  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32503  0184B0  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32504  0184B4  C119  F220         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 32505  0184B8  C11A  F221         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 32506  0184BC  C11B  F222         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 32507  0184C0  C11C  F223         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 32508                           
 32509                           ;main.c: 196: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 32510  0184C4  0E59               	movlw	low _max_POS3P3_ADC_Result_address
 32511  0184C6  6EF6               	movwf	tblptrl,c
 32512  0184C8                     	if	1	;There is more than 1 active tblptr byte
 32513  0184C8  0ECF               	movlw	high _max_POS3P3_ADC_Result_address
 32514  0184CA  6EF7               	movwf	tblptrh,c
 32515  0184CC                     	endif
 32516  0184CC                     	if	1	;There are 3 active tblptr bytes
 32517  0184CC  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 32518  0184CE  6EF8               	movwf	tblptru,c
 32519  0184D0                     	endif
 32520  0184D0  0009               	tblrd		*+
 32521  0184D2  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32522  0184D6  000A               	tblrd		*-
 32523  0184D8  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32524  0184DC  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32525  0184E0  C119  F21C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 32526  0184E4  C11A  F21D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 32527  0184E8  C11B  F21E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 32528  0184EC  C11C  F21F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 32529                           
 32530                           ;main.c: 197: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 32531  0184F0  0E57               	movlw	low _max_POS12_ADC_Result_address
 32532  0184F2  6EF6               	movwf	tblptrl,c
 32533  0184F4                     	if	1	;There is more than 1 active tblptr byte
 32534  0184F4  0ECF               	movlw	high _max_POS12_ADC_Result_address
 32535  0184F6  6EF7               	movwf	tblptrh,c
 32536  0184F8                     	endif
 32537  0184F8                     	if	1	;There are 3 active tblptr bytes
 32538  0184F8  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 32539  0184FA  6EF8               	movwf	tblptru,c
 32540  0184FC                     	endif
 32541  0184FC  0009               	tblrd		*+
 32542  0184FE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32543  018502  000A               	tblrd		*-
 32544  018504  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32545  018508  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32546  01850C  C119  F218         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 32547  018510  C11A  F219         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 32548  018514  C11B  F21A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 32549  018518  C11C  F21B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 32550                           
 32551                           ;main.c: 198: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 32552  01851C  0E55               	movlw	low _max_Temp_ADC_Result_address
 32553  01851E  6EF6               	movwf	tblptrl,c
 32554  018520                     	if	1	;There is more than 1 active tblptr byte
 32555  018520  0ECF               	movlw	high _max_Temp_ADC_Result_address
 32556  018522  6EF7               	movwf	tblptrh,c
 32557  018524                     	endif
 32558  018524                     	if	1	;There are 3 active tblptr bytes
 32559  018524  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 32560  018526  6EF8               	movwf	tblptru,c
 32561  018528                     	endif
 32562  018528  0009               	tblrd		*+
 32563  01852A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32564  01852E  000A               	tblrd		*-
 32565  018530  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32566  018534  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32567  018538  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 32568  01853C  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 32569  018540  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 32570  018544  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 32571                           
 32572                           ;main.c: 199: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 32573  018548  0E53               	movlw	low _max_FVR_ADC_Result_address
 32574  01854A  6EF6               	movwf	tblptrl,c
 32575  01854C                     	if	1	;There is more than 1 active tblptr byte
 32576  01854C  0ECF               	movlw	high _max_FVR_ADC_Result_address
 32577  01854E  6EF7               	movwf	tblptrh,c
 32578  018550                     	endif
 32579  018550                     	if	1	;There are 3 active tblptr bytes
 32580  018550  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 32581  018552  6EF8               	movwf	tblptru,c
 32582  018554                     	endif
 32583  018554  0009               	tblrd		*+
 32584  018556  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32585  01855A  000A               	tblrd		*-
 32586  01855C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32587  018560  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32588  018564  C119  F210         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 32589  018568  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 32590  01856C  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 32591  018570  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 32592                           
 32593                           ;main.c: 200: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 32594  018574  0E5F               	movlw	low _Total_Energy_address
 32595  018576  6EF6               	movwf	tblptrl,c
 32596  018578                     	if	1	;There is more than 1 active tblptr byte
 32597  018578  0ECF               	movlw	high _Total_Energy_address
 32598  01857A  6EF7               	movwf	tblptrh,c
 32599  01857C                     	endif
 32600  01857C                     	if	1	;There are 3 active tblptr bytes
 32601  01857C  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 32602  01857E  6EF8               	movwf	tblptru,c
 32603  018580                     	endif
 32604  018580  0009               	tblrd		*+
 32605  018582  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 32606  018586  000A               	tblrd		*-
 32607  018588  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 32608  01858C  EC7E  F0D1         	call	_readDoubleFromEEPROM	;wreg free
 32609  018590  C119  F0F6         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 32610  018594  C11A  F0F7         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 32611  018598  C11B  F0F8         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 32612  01859C  C11C  F0F9         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 32613  0185A0  0012               	return		;funcret
 32614  0185A2                     __end_of_recoverSRAMMaxFromEEPROM:
 32615                           	opt stack 0
 32616                           tosu	equ	0xFFF
 32617                           tosh	equ	0xFFE
 32618                           tosl	equ	0xFFD
 32619                           pclath	equ	0xFFA
 32620                           tblptru	equ	0xFF8
 32621                           tblptrh	equ	0xFF7
 32622                           tblptrl	equ	0xFF6
 32623                           tablat	equ	0xFF5
 32624                           prodh	equ	0xFF4
 32625                           prodl	equ	0xFF3
 32626                           intcon	equ	0xFF2
 32627                           indf0	equ	0xFEF
 32628                           postinc0	equ	0xFEE
 32629                           fsr0h	equ	0xFEA
 32630                           fsr0l	equ	0xFE9
 32631                           wreg	equ	0xFE8
 32632                           indf1	equ	0xFE7
 32633                           postdec1	equ	0xFE5
 32634                           plusw1	equ	0xFE3
 32635                           fsr1h	equ	0xFE2
 32636                           fsr1l	equ	0xFE1
 32637                           indf2	equ	0xFDF
 32638                           postinc2	equ	0xFDE
 32639                           postdec2	equ	0xFDD
 32640                           plusw2	equ	0xFDB
 32641                           fsr2h	equ	0xFDA
 32642                           fsr2l	equ	0xFD9
 32643                           status	equ	0xFD8
 32644                           
 32645 ;; *************** function _readDoubleFromEEPROM *****************
 32646 ;; Defined at:
 32647 ;;		line 22 in file "double_to_EEPROM.c"
 32648 ;; Parameters:    Size  Location     Type
 32649 ;;  starting_add    2   25[BANK1 ] unsigned int 
 32650 ;; Auto vars:     Size  Location     Type
 32651 ;;  byte_index      2   33[BANK1 ] int 
 32652 ;;  output_data     4   29[BANK1 ] struct .
 32653 ;; Return value:  Size  Location     Type
 32654 ;;                  4   25[BANK1 ] struct .
 32655 ;; Registers used:
 32656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32657 ;; Tracked objects:
 32658 ;;		On entry : 0/0
 32659 ;;		On exit  : 0/0
 32660 ;;		Unchanged: 0/0
 32661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32662 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32663 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32665 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32666 ;;Total ram usage:       10 bytes
 32667 ;; Hardware stack levels used:    1
 32668 ;; Hardware stack levels required when called:   14
 32669 ;; This function calls:
 32670 ;;		_DATAEE_ReadByte
 32671 ;; This function is called by:
 32672 ;;		_recoverSRAMMaxFromEEPROM
 32673 ;;		_ringBufferLUT
 32674 ;; This function uses a non-reentrant model
 32675 ;;
 32676                           
 32677                           	psect	text58
 32678  01A2FC                     __ptext58:
 32679                           	opt stack 0
 32680  01A2FC                     _readDoubleFromEEPROM:
 32681                           	opt stack 14
 32682                           
 32683                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 32684                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 32685                           
 32686                           ;incstack = 0
 32687  01A2FC  0E00               	movlw	0
 32688  01A2FE  0101               	movlb	1	; () banked
 32689  01A300  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 32690  01A302  0E00               	movlw	0
 32691  01A304  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 32692                           
 32693                           ; BSR set to: 1
 32694  01A306  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32695  01A308  E119               	bnz	l1646
 32696  01A30A  D014               	goto	L9
 32697  01A30C                     
 32698                           ; BSR set to: 1
 32699                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 32700                           
 32701                           ; BSR set to: 1
 32702  01A30C  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 32703  01A30E  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32704  01A310  6ED9               	movwf	fsr2l,c
 32705  01A312  0E01               	movlw	high readDoubleFromEEPROM@output_data
 32706  01A314  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32707  01A316  6EDA               	movwf	fsr2h,c
 32708  01A318  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 32709  01A31A  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32710  01A31C  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 32711  01A31E  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 32712  01A320  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32713  01A322  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 32714  01A324  EC30  F0D8         	call	_DATAEE_ReadByte	;wreg free
 32715  01A328  6EDF               	movwf	indf2,c
 32716  01A32A  0101               	movlb	1	; () banked
 32717  01A32C  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 32718  01A32E  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 32719                           
 32720                           ; BSR set to: 1
 32721  01A330  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 32722  01A332  E104               	bnz	u20710
 32723  01A334                     L9:
 32724  01A334  0E04               	movlw	4
 32725  01A336  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 32726  01A338  A0D8               	btfss	status,0,c
 32727  01A33A  D7E8               	goto	l1645
 32728  01A33C                     u20710:
 32729  01A33C                     l1646:
 32730                           
 32731                           ; BSR set to: 1
 32732                           ;double_to_EEPROM.c: 32: }
 32733                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 32734  01A33C  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 32735  01A340  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 32736  01A344  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 32737  01A348  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 32738                           
 32739                           ; BSR set to: 1
 32740  01A34C  0012               	return		;funcret
 32741  01A34E                     __end_of_readDoubleFromEEPROM:
 32742                           	opt stack 0
 32743                           tosu	equ	0xFFF
 32744                           tosh	equ	0xFFE
 32745                           tosl	equ	0xFFD
 32746                           pclath	equ	0xFFA
 32747                           tblptru	equ	0xFF8
 32748                           tblptrh	equ	0xFF7
 32749                           tblptrl	equ	0xFF6
 32750                           tablat	equ	0xFF5
 32751                           prodh	equ	0xFF4
 32752                           prodl	equ	0xFF3
 32753                           intcon	equ	0xFF2
 32754                           indf0	equ	0xFEF
 32755                           postinc0	equ	0xFEE
 32756                           fsr0h	equ	0xFEA
 32757                           fsr0l	equ	0xFE9
 32758                           wreg	equ	0xFE8
 32759                           indf1	equ	0xFE7
 32760                           postdec1	equ	0xFE5
 32761                           plusw1	equ	0xFE3
 32762                           fsr1h	equ	0xFE2
 32763                           fsr1l	equ	0xFE1
 32764                           indf2	equ	0xFDF
 32765                           postinc2	equ	0xFDE
 32766                           postdec2	equ	0xFDD
 32767                           plusw2	equ	0xFDB
 32768                           fsr2h	equ	0xFDA
 32769                           fsr2l	equ	0xFD9
 32770                           status	equ	0xFD8
 32771                           
 32772 ;; *************** function _DATAEE_ReadByte *****************
 32773 ;; Defined at:
 32774 ;;		line 190 in file "mcc_generated_files/memory.c"
 32775 ;; Parameters:    Size  Location     Type
 32776 ;;  bAdd            2   23[BANK1 ] unsigned int 
 32777 ;; Auto vars:     Size  Location     Type
 32778 ;;		None
 32779 ;; Return value:  Size  Location     Type
 32780 ;;                  1    wreg      unsigned char 
 32781 ;; Registers used:
 32782 ;;		wreg, status,2, status,0
 32783 ;; Tracked objects:
 32784 ;;		On entry : 0/0
 32785 ;;		On exit  : 0/0
 32786 ;;		Unchanged: 0/0
 32787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32788 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32791 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32792 ;;Total ram usage:        2 bytes
 32793 ;; Hardware stack levels used:    1
 32794 ;; Hardware stack levels required when called:   13
 32795 ;; This function calls:
 32796 ;;		Nothing
 32797 ;; This function is called by:
 32798 ;;		_readDoubleFromEEPROM
 32799 ;; This function uses a non-reentrant model
 32800 ;;
 32801                           
 32802                           	psect	text59
 32803  01B060                     __ptext59:
 32804                           	opt stack 0
 32805  01B060                     _DATAEE_ReadByte:
 32806                           	opt stack 14
 32807                           
 32808                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 32809                           
 32810                           ; BSR set to: 1
 32811                           ;incstack = 0
 32812  01B060  0101               	movlb	1	; () banked
 32813  01B062  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 32814  01B064  0B03               	andlw	3
 32815  01B066  6E75               	movwf	3957,c	;volatile
 32816                           
 32817                           ; BSR set to: 1
 32818                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 32819  01B068  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 32820                           
 32821                           ; BSR set to: 1
 32822                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 32823  01B06C  0E3F               	movlw	-193
 32824  01B06E  1677               	andwf	3959,f,c	;volsfr
 32825                           
 32826                           ; BSR set to: 1
 32827                           ;memory.c: 195: NVMCON1bits.RD = 1;
 32828  01B070  8077               	bsf	3959,0,c	;volsfr
 32829                           
 32830                           ; BSR set to: 1
 32831                           ;memory.c: 196: __nop();
 32832  01B072  F000               	nop	
 32833                           
 32834                           ;memory.c: 197: __nop();
 32835  01B074  F000               	nop	
 32836                           
 32837                           ;memory.c: 199: return (NVMDAT);
 32838  01B076  5076               	movf	3958,w,c	;volatile
 32839  01B078  0012               	return	
 32840  01B07A                     __end_of_DATAEE_ReadByte:
 32841                           	opt stack 0
 32842                           tosu	equ	0xFFF
 32843                           tosh	equ	0xFFE
 32844                           tosl	equ	0xFFD
 32845                           pclath	equ	0xFFA
 32846                           tblptru	equ	0xFF8
 32847                           tblptrh	equ	0xFF7
 32848                           tblptrl	equ	0xFF6
 32849                           tablat	equ	0xFF5
 32850                           prodh	equ	0xFF4
 32851                           prodl	equ	0xFF3
 32852                           intcon	equ	0xFF2
 32853                           indf0	equ	0xFEF
 32854                           postinc0	equ	0xFEE
 32855                           fsr0h	equ	0xFEA
 32856                           fsr0l	equ	0xFE9
 32857                           wreg	equ	0xFE8
 32858                           indf1	equ	0xFE7
 32859                           postdec1	equ	0xFE5
 32860                           plusw1	equ	0xFE3
 32861                           fsr1h	equ	0xFE2
 32862                           fsr1l	equ	0xFE1
 32863                           indf2	equ	0xFDF
 32864                           postinc2	equ	0xFDE
 32865                           postdec2	equ	0xFDD
 32866                           plusw2	equ	0xFDB
 32867                           fsr2h	equ	0xFDA
 32868                           fsr2l	equ	0xFD9
 32869                           status	equ	0xFD8
 32870                           
 32871 ;; *************** function _getCauseOfReset *****************
 32872 ;; Defined at:
 32873 ;;		line 11 in file "cause_of_reset.c"
 32874 ;; Parameters:    Size  Location     Type
 32875 ;;		None
 32876 ;; Auto vars:     Size  Location     Type
 32877 ;;  return_reset    1   23[BANK1 ] enum E17455
 32878 ;; Return value:  Size  Location     Type
 32879 ;;                  1    wreg      enum E18124
 32880 ;; Registers used:
 32881 ;;		wreg, status,2
 32882 ;; Tracked objects:
 32883 ;;		On entry : 0/0
 32884 ;;		On exit  : 0/0
 32885 ;;		Unchanged: 0/0
 32886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32888 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32890 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32891 ;;Total ram usage:        1 bytes
 32892 ;; Hardware stack levels used:    1
 32893 ;; Hardware stack levels required when called:   13
 32894 ;; This function calls:
 32895 ;;		Nothing
 32896 ;; This function is called by:
 32897 ;;		_main
 32898 ;; This function uses a non-reentrant model
 32899 ;;
 32900                           
 32901                           	psect	text60
 32902  01A34E                     __ptext60:
 32903                           	opt stack 0
 32904  01A34E                     _getCauseOfReset:
 32905                           	opt stack 17
 32906                           
 32907                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 32908                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 32909                           
 32910                           ;incstack = 0
 32911  01A34E  AED7               	btfss	4055,7,c	;volatile
 32912  01A350  D002               	goto	l1612
 32913                           
 32914                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 32915  01A352  0E07               	movlw	7
 32916  01A354  D019               	goto	L16
 32917  01A356                     l1612:
 32918                           
 32919                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 32920  01A356  ACD7               	btfss	4055,6,c	;volatile
 32921  01A358  D002               	goto	l1614
 32922                           
 32923                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 32924  01A35A  0E08               	movlw	8
 32925  01A35C  D015               	goto	L16
 32926  01A35E                     l1614:
 32927                           
 32928                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 32929  01A35E  BAD7               	btfsc	4055,5,c	;volatile
 32930  01A360  D002               	goto	l1616
 32931                           
 32932                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 32933  01A362  0E05               	movlw	5
 32934  01A364  D011               	goto	L16
 32935  01A366                     l1616:
 32936                           
 32937                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 32938  01A366  B6D7               	btfsc	4055,3,c	;volatile
 32939  01A368  D002               	goto	l1618
 32940                           
 32941                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 32942  01A36A  0E03               	movlw	3
 32943  01A36C  D00D               	goto	L16
 32944  01A36E                     l1618:
 32945                           
 32946                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 32947  01A36E  B4D7               	btfsc	4055,2,c	;volatile
 32948  01A370  D002               	goto	l1620
 32949                           
 32950                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 32951  01A372  0E06               	movlw	6
 32952  01A374  D009               	goto	L16
 32953  01A376                     l1620:
 32954                           
 32955                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 32956  01A376  B2D7               	btfsc	4055,1,c	;volatile
 32957  01A378  D002               	goto	l1622
 32958                           
 32959                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 32960  01A37A  0E01               	movlw	1
 32961  01A37C  D005               	goto	L16
 32962  01A37E                     l1622:
 32963                           
 32964                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 32965  01A37E  B0D7               	btfsc	4055,0,c	;volatile
 32966  01A380  D002               	goto	l1624
 32967                           
 32968                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 32969  01A382  0E02               	movlw	2
 32970  01A384  D001               	goto	L16
 32971  01A386                     l1624:
 32972                           
 32973                           ;cause_of_reset.c: 60: else {
 32974                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 32975                           
 32976                           ; BSR set to: 1
 32977  01A386  0E00               	movlw	0
 32978  01A388                     L16:
 32979  01A388  0101               	movlb	1	; () banked
 32980  01A38A  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 32981                           
 32982                           ; BSR set to: 1
 32983                           ;cause_of_reset.c: 64: }
 32984                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 32985                           
 32986                           ; BSR set to: 1
 32987                           
 32988                           ; BSR set to: 1
 32989                           
 32990                           ; BSR set to: 1
 32991                           
 32992                           ; BSR set to: 1
 32993                           
 32994                           ; BSR set to: 1
 32995                           
 32996                           ; BSR set to: 1
 32997                           
 32998                           ; BSR set to: 1
 32999  01A38C  9ED7               	bcf	4055,7,c	;volatile
 33000                           
 33001                           ; BSR set to: 1
 33002                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 33003  01A38E  9CD7               	bcf	4055,6,c	;volatile
 33004                           
 33005                           ; BSR set to: 1
 33006                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 33007  01A390  8AD7               	bsf	4055,5,c	;volatile
 33008                           
 33009                           ; BSR set to: 1
 33010                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 33011  01A392  88D7               	bsf	4055,4,c	;volatile
 33012                           
 33013                           ; BSR set to: 1
 33014                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 33015  01A394  86D7               	bsf	4055,3,c	;volatile
 33016                           
 33017                           ; BSR set to: 1
 33018                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 33019  01A396  84D7               	bsf	4055,2,c	;volatile
 33020                           
 33021                           ; BSR set to: 1
 33022                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 33023  01A398  82D7               	bsf	4055,1,c	;volatile
 33024                           
 33025                           ; BSR set to: 1
 33026                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 33027  01A39A  80D7               	bsf	4055,0,c	;volatile
 33028                           
 33029                           ;cause_of_reset.c: 76: return return_reset_cause;
 33030  01A39C  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 33031  01A39E  0012               	return	
 33032  01A3A0                     __end_of_getCauseOfReset:
 33033                           	opt stack 0
 33034                           tosu	equ	0xFFF
 33035                           tosh	equ	0xFFE
 33036                           tosl	equ	0xFFD
 33037                           pclath	equ	0xFFA
 33038                           tblptru	equ	0xFF8
 33039                           tblptrh	equ	0xFF7
 33040                           tblptrl	equ	0xFF6
 33041                           tablat	equ	0xFF5
 33042                           prodh	equ	0xFF4
 33043                           prodl	equ	0xFF3
 33044                           intcon	equ	0xFF2
 33045                           indf0	equ	0xFEF
 33046                           postinc0	equ	0xFEE
 33047                           fsr0h	equ	0xFEA
 33048                           fsr0l	equ	0xFE9
 33049                           wreg	equ	0xFE8
 33050                           indf1	equ	0xFE7
 33051                           postdec1	equ	0xFE5
 33052                           plusw1	equ	0xFE3
 33053                           fsr1h	equ	0xFE2
 33054                           fsr1l	equ	0xFE1
 33055                           indf2	equ	0xFDF
 33056                           postinc2	equ	0xFDE
 33057                           postdec2	equ	0xFDD
 33058                           plusw2	equ	0xFDB
 33059                           fsr2h	equ	0xFDA
 33060                           fsr2l	equ	0xFD9
 33061                           status	equ	0xFD8
 33062                           
 33063 ;; *************** function _SYSTEM_Initialize *****************
 33064 ;; Defined at:
 33065 ;;		line 50 in file "mcc_generated_files/mcc.c"
 33066 ;; Parameters:    Size  Location     Type
 33067 ;;		None
 33068 ;; Auto vars:     Size  Location     Type
 33069 ;;		None
 33070 ;; Return value:  Size  Location     Type
 33071 ;;                  1    wreg      void 
 33072 ;; Registers used:
 33073 ;;		wreg, status,2, status,0, cstack
 33074 ;; Tracked objects:
 33075 ;;		On entry : 0/0
 33076 ;;		On exit  : 0/0
 33077 ;;		Unchanged: 0/0
 33078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33083 ;;Total ram usage:        0 bytes
 33084 ;; Hardware stack levels used:    1
 33085 ;; Hardware stack levels required when called:   15
 33086 ;; This function calls:
 33087 ;;		_ADCC_Initialize
 33088 ;;		_EUSART2_Initialize
 33089 ;;		_EXT_INT_Initialize
 33090 ;;		_FVR_Initialize
 33091 ;;		_HLVD_Initialize
 33092 ;;		_I2C1_Initialize
 33093 ;;		_INTERRUPT_Initialize
 33094 ;;		_OSCILLATOR_Initialize
 33095 ;;		_PIN_MANAGER_Initialize
 33096 ;;		_PMD_Initialize
 33097 ;;		_TMR4_Initialize
 33098 ;;		_TMR5_Initialize
 33099 ;;		_TMR6_Initialize
 33100 ;;		_TMR7_Initialize
 33101 ;; This function is called by:
 33102 ;;		_main
 33103 ;; This function uses a non-reentrant model
 33104 ;;
 33105                           
 33106                           	psect	text61
 33107  01AA7C                     __ptext61:
 33108                           	opt stack 0
 33109  01AA7C                     _SYSTEM_Initialize:
 33110                           	opt stack 15
 33111                           
 33112                           ;mcc.c: 52: INTERRUPT_Initialize();
 33113                           
 33114                           ; BSR set to: 1
 33115                           ;incstack = 0
 33116  01AA7C  EC07  F0D8         	call	_INTERRUPT_Initialize	;wreg free
 33117                           
 33118                           ;mcc.c: 53: PMD_Initialize();
 33119  01AA80  ECEB  F0D7         	call	_PMD_Initialize	;wreg free
 33120                           
 33121                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 33122  01AA84  EC4A  F0CA         	call	_PIN_MANAGER_Initialize	;wreg free
 33123                           
 33124                           ;mcc.c: 55: OSCILLATOR_Initialize();
 33125  01AA88  ECF9  F0D7         	call	_OSCILLATOR_Initialize	;wreg free
 33126                           
 33127                           ;mcc.c: 56: I2C1_Initialize();
 33128  01AA8C  ECCB  F0D5         	call	_I2C1_Initialize	;wreg free
 33129                           
 33130                           ;mcc.c: 57: HLVD_Initialize();
 33131  01AA90  ECC1  F0D8         	call	_HLVD_Initialize	;wreg free
 33132                           
 33133                           ;mcc.c: 58: FVR_Initialize();
 33134  01AA94  EC2A  F0D9         	call	_FVR_Initialize	;wreg free
 33135                           
 33136                           ;mcc.c: 59: TMR7_Initialize();
 33137  01AA98  EC54  F0D1         	call	_TMR7_Initialize	;wreg free
 33138                           
 33139                           ;mcc.c: 60: ADCC_Initialize();
 33140  01AA9C  ECC8  F0CF         	call	_ADCC_Initialize	;wreg free
 33141                           
 33142                           ;mcc.c: 61: TMR4_Initialize();
 33143  01AAA0  EC98  F0D6         	call	_TMR4_Initialize	;wreg free
 33144                           
 33145                           ;mcc.c: 62: EXT_INT_Initialize();
 33146  01AAA4  ECCD  F0D7         	call	_EXT_INT_Initialize	;wreg free
 33147                           
 33148                           ;mcc.c: 63: TMR6_Initialize();
 33149  01AAA8  EC4F  F0D6         	call	_TMR6_Initialize	;wreg free
 33150                           
 33151                           ;mcc.c: 64: TMR5_Initialize();
 33152  01AAAC  EC20  F0D2         	call	_TMR5_Initialize	;wreg free
 33153                           
 33154                           ;mcc.c: 65: EUSART2_Initialize();
 33155  01AAB0  EC65  F0D0         	call	_EUSART2_Initialize	;wreg free
 33156  01AAB4  0012               	return		;funcret
 33157  01AAB6                     __end_of_SYSTEM_Initialize:
 33158                           	opt stack 0
 33159                           tosu	equ	0xFFF
 33160                           tosh	equ	0xFFE
 33161                           tosl	equ	0xFFD
 33162                           pclath	equ	0xFFA
 33163                           tblptru	equ	0xFF8
 33164                           tblptrh	equ	0xFF7
 33165                           tblptrl	equ	0xFF6
 33166                           tablat	equ	0xFF5
 33167                           prodh	equ	0xFF4
 33168                           prodl	equ	0xFF3
 33169                           intcon	equ	0xFF2
 33170                           indf0	equ	0xFEF
 33171                           postinc0	equ	0xFEE
 33172                           fsr0h	equ	0xFEA
 33173                           fsr0l	equ	0xFE9
 33174                           wreg	equ	0xFE8
 33175                           indf1	equ	0xFE7
 33176                           postdec1	equ	0xFE5
 33177                           plusw1	equ	0xFE3
 33178                           fsr1h	equ	0xFE2
 33179                           fsr1l	equ	0xFE1
 33180                           indf2	equ	0xFDF
 33181                           postinc2	equ	0xFDE
 33182                           postdec2	equ	0xFDD
 33183                           plusw2	equ	0xFDB
 33184                           fsr2h	equ	0xFDA
 33185                           fsr2l	equ	0xFD9
 33186                           status	equ	0xFD8
 33187                           
 33188 ;; *************** function _TMR7_Initialize *****************
 33189 ;; Defined at:
 33190 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 33191 ;; Parameters:    Size  Location     Type
 33192 ;;		None
 33193 ;; Auto vars:     Size  Location     Type
 33194 ;;		None
 33195 ;; Return value:  Size  Location     Type
 33196 ;;                  1    wreg      void 
 33197 ;; Registers used:
 33198 ;;		wreg, status,2, status,0, cstack
 33199 ;; Tracked objects:
 33200 ;;		On entry : 0/0
 33201 ;;		On exit  : 0/0
 33202 ;;		Unchanged: 0/0
 33203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33206 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33207 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33208 ;;Total ram usage:        2 bytes
 33209 ;; Hardware stack levels used:    1
 33210 ;; Hardware stack levels required when called:   14
 33211 ;; This function calls:
 33212 ;;		_TMR7_SetInterruptHandler
 33213 ;; This function is called by:
 33214 ;;		_SYSTEM_Initialize
 33215 ;; This function uses a non-reentrant model
 33216 ;;
 33217                           
 33218                           	psect	text62
 33219  01A2A8                     __ptext62:
 33220                           	opt stack 0
 33221  01A2A8                     _TMR7_Initialize:
 33222                           	opt stack 15
 33223                           
 33224                           ;tmr7.c: 69: T7GCON = 0x00;
 33225                           
 33226                           ;incstack = 0
 33227  01A2A8  0E00               	movlw	0
 33228  01A2AA  010F               	movlb	15	; () banked
 33229  01A2AC  6F31               	movwf	49,b	;volatile
 33230                           
 33231                           ;tmr7.c: 72: T7GATE = 0x00;
 33232  01A2AE  0E00               	movlw	0
 33233  01A2B0  6F32               	movwf	50,b	;volatile
 33234                           
 33235                           ;tmr7.c: 75: T7CLK = 0x03;
 33236  01A2B2  0E03               	movlw	3
 33237  01A2B4  6F33               	movwf	51,b	;volatile
 33238                           
 33239                           ;tmr7.c: 78: TMR7H = 0xEC;
 33240  01A2B6  0EEC               	movlw	236
 33241  01A2B8  6F2F               	movwf	47,b	;volatile
 33242                           
 33243                           ;tmr7.c: 81: TMR7L = 0x78;
 33244  01A2BA  0E78               	movlw	120
 33245  01A2BC  6F2E               	movwf	46,b	;volatile
 33246                           
 33247                           ; BSR set to: 15
 33248                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 33249  01A2BE  512E               	movf	46,w,b	;volatile
 33250  01A2C0  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 33251  01A2C4  0101               	movlb	1	; () banked
 33252  01A2C6  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 33253  01A2C8  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 33254  01A2CC  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 33255  01A2CE  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 33256  01A2D0  0102               	movlb	2	; () banked
 33257  01A2D2  6F68               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 33258  01A2D4  0101               	movlb	1	; () banked
 33259  01A2D6  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 33260  01A2D8  0102               	movlb	2	; () banked
 33261  01A2DA  6F69               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 33262                           
 33263                           ; BSR set to: 2
 33264                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 33265  01A2DC  010E               	movlb	14	; () banked
 33266  01A2DE  9D38               	bcf	56,6,b	;volatile
 33267                           
 33268                           ; BSR set to: 14
 33269                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 33270  01A2E0  8D2E               	bsf	46,6,b	;volatile
 33271                           
 33272                           ; BSR set to: 14
 33273                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 33274  01A2E2  0E8A               	movlw	low _TMR7_DefaultInterruptHandler
 33275  01A2E4  0101               	movlb	1	; () banked
 33276  01A2E6  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 33277  01A2E8  0EB2               	movlw	high _TMR7_DefaultInterruptHandler
 33278  01A2EA  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33279  01A2EC  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 33280  01A2EE  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33281  01A2F0  ECD0  F0D8         	call	_TMR7_SetInterruptHandler	;wreg free
 33282                           
 33283                           ;tmr7.c: 96: T7CON = 0x31;
 33284  01A2F4  0E31               	movlw	49
 33285  01A2F6  010F               	movlb	15	; () banked
 33286  01A2F8  6F30               	movwf	48,b	;volatile
 33287                           
 33288                           ; BSR set to: 15
 33289  01A2FA  0012               	return		;funcret
 33290  01A2FC                     __end_of_TMR7_Initialize:
 33291                           	opt stack 0
 33292                           tosu	equ	0xFFF
 33293                           tosh	equ	0xFFE
 33294                           tosl	equ	0xFFD
 33295                           pclath	equ	0xFFA
 33296                           tblptru	equ	0xFF8
 33297                           tblptrh	equ	0xFF7
 33298                           tblptrl	equ	0xFF6
 33299                           tablat	equ	0xFF5
 33300                           prodh	equ	0xFF4
 33301                           prodl	equ	0xFF3
 33302                           intcon	equ	0xFF2
 33303                           indf0	equ	0xFEF
 33304                           postinc0	equ	0xFEE
 33305                           fsr0h	equ	0xFEA
 33306                           fsr0l	equ	0xFE9
 33307                           wreg	equ	0xFE8
 33308                           indf1	equ	0xFE7
 33309                           postdec1	equ	0xFE5
 33310                           plusw1	equ	0xFE3
 33311                           fsr1h	equ	0xFE2
 33312                           fsr1l	equ	0xFE1
 33313                           indf2	equ	0xFDF
 33314                           postinc2	equ	0xFDE
 33315                           postdec2	equ	0xFDD
 33316                           plusw2	equ	0xFDB
 33317                           fsr2h	equ	0xFDA
 33318                           fsr2l	equ	0xFD9
 33319                           status	equ	0xFD8
 33320                           
 33321 ;; *************** function _TMR7_SetInterruptHandler *****************
 33322 ;; Defined at:
 33323 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 33324 ;; Parameters:    Size  Location     Type
 33325 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33326 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 33327 ;; Auto vars:     Size  Location     Type
 33328 ;;		None
 33329 ;; Return value:  Size  Location     Type
 33330 ;;                  1    wreg      void 
 33331 ;; Registers used:
 33332 ;;		wreg, status,2, status,0
 33333 ;; Tracked objects:
 33334 ;;		On entry : 0/0
 33335 ;;		On exit  : 0/0
 33336 ;;		Unchanged: 0/0
 33337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33338 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33342 ;;Total ram usage:        3 bytes
 33343 ;; Hardware stack levels used:    1
 33344 ;; Hardware stack levels required when called:   13
 33345 ;; This function calls:
 33346 ;;		Nothing
 33347 ;; This function is called by:
 33348 ;;		_TMR7_Initialize
 33349 ;;		_main
 33350 ;; This function uses a non-reentrant model
 33351 ;;
 33352                           
 33353                           	psect	text63
 33354  01B1A0                     __ptext63:
 33355                           	opt stack 0
 33356  01B1A0                     _TMR7_SetInterruptHandler:
 33357                           	opt stack 17
 33358                           
 33359                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 33360                           
 33361                           ; BSR set to: 15
 33362                           ;incstack = 0
 33363  01B1A0  C117  F24D         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 33364  01B1A4  C118  F24E         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 33365  01B1A8  C119  F24F         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 33366  01B1AC  0012               	return		;funcret
 33367  01B1AE                     __end_of_TMR7_SetInterruptHandler:
 33368                           	opt stack 0
 33369                           tosu	equ	0xFFF
 33370                           tosh	equ	0xFFE
 33371                           tosl	equ	0xFFD
 33372                           pclath	equ	0xFFA
 33373                           tblptru	equ	0xFF8
 33374                           tblptrh	equ	0xFF7
 33375                           tblptrl	equ	0xFF6
 33376                           tablat	equ	0xFF5
 33377                           prodh	equ	0xFF4
 33378                           prodl	equ	0xFF3
 33379                           intcon	equ	0xFF2
 33380                           indf0	equ	0xFEF
 33381                           postinc0	equ	0xFEE
 33382                           fsr0h	equ	0xFEA
 33383                           fsr0l	equ	0xFE9
 33384                           wreg	equ	0xFE8
 33385                           indf1	equ	0xFE7
 33386                           postdec1	equ	0xFE5
 33387                           plusw1	equ	0xFE3
 33388                           fsr1h	equ	0xFE2
 33389                           fsr1l	equ	0xFE1
 33390                           indf2	equ	0xFDF
 33391                           postinc2	equ	0xFDE
 33392                           postdec2	equ	0xFDD
 33393                           plusw2	equ	0xFDB
 33394                           fsr2h	equ	0xFDA
 33395                           fsr2l	equ	0xFD9
 33396                           status	equ	0xFD8
 33397                           
 33398 ;; *************** function _TMR6_Initialize *****************
 33399 ;; Defined at:
 33400 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 33401 ;; Parameters:    Size  Location     Type
 33402 ;;		None
 33403 ;; Auto vars:     Size  Location     Type
 33404 ;;		None
 33405 ;; Return value:  Size  Location     Type
 33406 ;;                  1    wreg      void 
 33407 ;; Registers used:
 33408 ;;		wreg, status,2, status,0, cstack
 33409 ;; Tracked objects:
 33410 ;;		On entry : 0/0
 33411 ;;		On exit  : 0/0
 33412 ;;		Unchanged: 0/0
 33413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33418 ;;Total ram usage:        0 bytes
 33419 ;; Hardware stack levels used:    1
 33420 ;; Hardware stack levels required when called:   14
 33421 ;; This function calls:
 33422 ;;		_TMR6_SetInterruptHandler
 33423 ;; This function is called by:
 33424 ;;		_SYSTEM_Initialize
 33425 ;; This function uses a non-reentrant model
 33426 ;;
 33427                           
 33428                           	psect	text64
 33429  01AC9E                     __ptext64:
 33430                           	opt stack 0
 33431  01AC9E                     _TMR6_Initialize:
 33432                           	opt stack 15
 33433                           
 33434                           ;tmr6.c: 69: T6CLKCON = 0x04;
 33435                           
 33436                           ;incstack = 0
 33437  01AC9E  0E04               	movlw	4
 33438  01ACA0  6EB3               	movwf	4019,c	;volatile
 33439                           
 33440                           ;tmr6.c: 72: T6HLT = 0x20;
 33441  01ACA2  0E20               	movlw	32
 33442  01ACA4  6EB2               	movwf	4018,c	;volatile
 33443                           
 33444                           ;tmr6.c: 75: T6RST = 0x00;
 33445  01ACA6  0E00               	movlw	0
 33446  01ACA8  6EB4               	movwf	4020,c	;volatile
 33447                           
 33448                           ;tmr6.c: 78: T6PR = 0xF1;
 33449  01ACAA  0EF1               	movlw	241
 33450  01ACAC  6EB0               	movwf	4016,c	;volatile
 33451                           
 33452                           ;tmr6.c: 81: T6TMR = 0x00;
 33453  01ACAE  0E00               	movlw	0
 33454  01ACB0  6EAF               	movwf	4015,c	;volatile
 33455                           
 33456                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 33457  01ACB2  010E               	movlb	14	; () banked
 33458  01ACB4  9B38               	bcf	56,5,b	;volatile
 33459                           
 33460                           ; BSR set to: 14
 33461                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 33462  01ACB6  8B2E               	bsf	46,5,b	;volatile
 33463                           
 33464                           ; BSR set to: 14
 33465                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 33466  01ACB8  0E8C               	movlw	low _TMR6_DefaultInterruptHandler
 33467  01ACBA  0101               	movlb	1	; () banked
 33468  01ACBC  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 33469  01ACBE  0EB2               	movlw	high _TMR6_DefaultInterruptHandler
 33470  01ACC0  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33471  01ACC2  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33472  01ACC4  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33473  01ACC6  ECD7  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 33474                           
 33475                           ;tmr6.c: 93: T6CON = 0xBF;
 33476  01ACCA  0EBF               	movlw	191
 33477  01ACCC  6EB1               	movwf	4017,c	;volatile
 33478  01ACCE  0012               	return		;funcret
 33479  01ACD0                     __end_of_TMR6_Initialize:
 33480                           	opt stack 0
 33481                           tosu	equ	0xFFF
 33482                           tosh	equ	0xFFE
 33483                           tosl	equ	0xFFD
 33484                           pclath	equ	0xFFA
 33485                           tblptru	equ	0xFF8
 33486                           tblptrh	equ	0xFF7
 33487                           tblptrl	equ	0xFF6
 33488                           tablat	equ	0xFF5
 33489                           prodh	equ	0xFF4
 33490                           prodl	equ	0xFF3
 33491                           intcon	equ	0xFF2
 33492                           indf0	equ	0xFEF
 33493                           postinc0	equ	0xFEE
 33494                           fsr0h	equ	0xFEA
 33495                           fsr0l	equ	0xFE9
 33496                           wreg	equ	0xFE8
 33497                           indf1	equ	0xFE7
 33498                           postdec1	equ	0xFE5
 33499                           plusw1	equ	0xFE3
 33500                           fsr1h	equ	0xFE2
 33501                           fsr1l	equ	0xFE1
 33502                           indf2	equ	0xFDF
 33503                           postinc2	equ	0xFDE
 33504                           postdec2	equ	0xFDD
 33505                           plusw2	equ	0xFDB
 33506                           fsr2h	equ	0xFDA
 33507                           fsr2l	equ	0xFD9
 33508                           status	equ	0xFD8
 33509                           
 33510 ;; *************** function _TMR6_SetInterruptHandler *****************
 33511 ;; Defined at:
 33512 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 33513 ;; Parameters:    Size  Location     Type
 33514 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33515 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 33516 ;; Auto vars:     Size  Location     Type
 33517 ;;		None
 33518 ;; Return value:  Size  Location     Type
 33519 ;;                  1    wreg      void 
 33520 ;; Registers used:
 33521 ;;		wreg, status,2, status,0
 33522 ;; Tracked objects:
 33523 ;;		On entry : 0/0
 33524 ;;		On exit  : 0/0
 33525 ;;		Unchanged: 0/0
 33526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33527 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33530 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33531 ;;Total ram usage:        3 bytes
 33532 ;; Hardware stack levels used:    1
 33533 ;; Hardware stack levels required when called:   13
 33534 ;; This function calls:
 33535 ;;		Nothing
 33536 ;; This function is called by:
 33537 ;;		_TMR6_Initialize
 33538 ;;		_main
 33539 ;; This function uses a non-reentrant model
 33540 ;;
 33541                           
 33542                           	psect	text65
 33543  01B1AE                     __ptext65:
 33544                           	opt stack 0
 33545  01B1AE                     _TMR6_SetInterruptHandler:
 33546                           	opt stack 17
 33547                           
 33548                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 33549                           
 33550                           ;incstack = 0
 33551  01B1AE  C117  F253         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 33552  01B1B2  C118  F254         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 33553  01B1B6  C119  F255         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 33554  01B1BA  0012               	return		;funcret
 33555  01B1BC                     __end_of_TMR6_SetInterruptHandler:
 33556                           	opt stack 0
 33557                           tosu	equ	0xFFF
 33558                           tosh	equ	0xFFE
 33559                           tosl	equ	0xFFD
 33560                           pclath	equ	0xFFA
 33561                           tblptru	equ	0xFF8
 33562                           tblptrh	equ	0xFF7
 33563                           tblptrl	equ	0xFF6
 33564                           tablat	equ	0xFF5
 33565                           prodh	equ	0xFF4
 33566                           prodl	equ	0xFF3
 33567                           intcon	equ	0xFF2
 33568                           indf0	equ	0xFEF
 33569                           postinc0	equ	0xFEE
 33570                           fsr0h	equ	0xFEA
 33571                           fsr0l	equ	0xFE9
 33572                           wreg	equ	0xFE8
 33573                           indf1	equ	0xFE7
 33574                           postdec1	equ	0xFE5
 33575                           plusw1	equ	0xFE3
 33576                           fsr1h	equ	0xFE2
 33577                           fsr1l	equ	0xFE1
 33578                           indf2	equ	0xFDF
 33579                           postinc2	equ	0xFDE
 33580                           postdec2	equ	0xFDD
 33581                           plusw2	equ	0xFDB
 33582                           fsr2h	equ	0xFDA
 33583                           fsr2l	equ	0xFD9
 33584                           status	equ	0xFD8
 33585                           
 33586 ;; *************** function _TMR5_Initialize *****************
 33587 ;; Defined at:
 33588 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 33589 ;; Parameters:    Size  Location     Type
 33590 ;;		None
 33591 ;; Auto vars:     Size  Location     Type
 33592 ;;		None
 33593 ;; Return value:  Size  Location     Type
 33594 ;;                  1    wreg      void 
 33595 ;; Registers used:
 33596 ;;		wreg, status,2, status,0, cstack
 33597 ;; Tracked objects:
 33598 ;;		On entry : 0/0
 33599 ;;		On exit  : 0/0
 33600 ;;		Unchanged: 0/0
 33601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33604 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33605 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33606 ;;Total ram usage:        2 bytes
 33607 ;; Hardware stack levels used:    1
 33608 ;; Hardware stack levels required when called:   14
 33609 ;; This function calls:
 33610 ;;		_TMR5_SetInterruptHandler
 33611 ;; This function is called by:
 33612 ;;		_SYSTEM_Initialize
 33613 ;; This function uses a non-reentrant model
 33614 ;;
 33615                           
 33616                           	psect	text66
 33617  01A440                     __ptext66:
 33618                           	opt stack 0
 33619  01A440                     _TMR5_Initialize:
 33620                           	opt stack 15
 33621                           
 33622                           ;tmr5.c: 69: T5GCON = 0x00;
 33623                           
 33624                           ;incstack = 0
 33625  01A440  0E00               	movlw	0
 33626  01A442  6EC4               	movwf	4036,c	;volatile
 33627                           
 33628                           ;tmr5.c: 72: T5GATE = 0x00;
 33629  01A444  0E00               	movlw	0
 33630  01A446  6EC5               	movwf	4037,c	;volatile
 33631                           
 33632                           ;tmr5.c: 75: T5CLK = 0x01;
 33633  01A448  0E01               	movlw	1
 33634  01A44A  6EC6               	movwf	4038,c	;volatile
 33635                           
 33636                           ;tmr5.c: 78: TMR5H = 0x00;
 33637  01A44C  0E00               	movlw	0
 33638  01A44E  6EC2               	movwf	4034,c	;volatile
 33639                           
 33640                           ;tmr5.c: 81: TMR5L = 0x00;
 33641  01A450  0E00               	movlw	0
 33642  01A452  6EC1               	movwf	4033,c	;volatile
 33643                           
 33644                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 33645  01A454  50C1               	movf	4033,w,c	;volatile
 33646  01A456  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 33647  01A45A  0101               	movlb	1	; () banked
 33648  01A45C  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 33649  01A45E  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 33650  01A462  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 33651  01A464  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 33652  01A466  0102               	movlb	2	; () banked
 33653  01A468  6F66               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33654  01A46A  0101               	movlb	1	; () banked
 33655  01A46C  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 33656  01A46E  0102               	movlb	2	; () banked
 33657  01A470  6F67               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33658                           
 33659                           ; BSR set to: 2
 33660                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 33661  01A472  010E               	movlb	14	; () banked
 33662  01A474  9938               	bcf	56,4,b	;volatile
 33663                           
 33664                           ; BSR set to: 14
 33665                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 33666  01A476  892E               	bsf	46,4,b	;volatile
 33667                           
 33668                           ; BSR set to: 14
 33669                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 33670  01A478  0E8E               	movlw	low _TMR5_DefaultInterruptHandler
 33671  01A47A  0101               	movlb	1	; () banked
 33672  01A47C  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 33673  01A47E  0EB2               	movlw	high _TMR5_DefaultInterruptHandler
 33674  01A480  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33675  01A482  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33676  01A484  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33677  01A486  ECDE  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 33678                           
 33679                           ;tmr5.c: 96: T5CON = 0x13;
 33680  01A48A  0E13               	movlw	19
 33681  01A48C  6EC3               	movwf	4035,c	;volatile
 33682  01A48E  0012               	return		;funcret
 33683  01A490                     __end_of_TMR5_Initialize:
 33684                           	opt stack 0
 33685                           tosu	equ	0xFFF
 33686                           tosh	equ	0xFFE
 33687                           tosl	equ	0xFFD
 33688                           pclath	equ	0xFFA
 33689                           tblptru	equ	0xFF8
 33690                           tblptrh	equ	0xFF7
 33691                           tblptrl	equ	0xFF6
 33692                           tablat	equ	0xFF5
 33693                           prodh	equ	0xFF4
 33694                           prodl	equ	0xFF3
 33695                           intcon	equ	0xFF2
 33696                           indf0	equ	0xFEF
 33697                           postinc0	equ	0xFEE
 33698                           fsr0h	equ	0xFEA
 33699                           fsr0l	equ	0xFE9
 33700                           wreg	equ	0xFE8
 33701                           indf1	equ	0xFE7
 33702                           postdec1	equ	0xFE5
 33703                           plusw1	equ	0xFE3
 33704                           fsr1h	equ	0xFE2
 33705                           fsr1l	equ	0xFE1
 33706                           indf2	equ	0xFDF
 33707                           postinc2	equ	0xFDE
 33708                           postdec2	equ	0xFDD
 33709                           plusw2	equ	0xFDB
 33710                           fsr2h	equ	0xFDA
 33711                           fsr2l	equ	0xFD9
 33712                           status	equ	0xFD8
 33713                           
 33714 ;; *************** function _TMR5_SetInterruptHandler *****************
 33715 ;; Defined at:
 33716 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 33717 ;; Parameters:    Size  Location     Type
 33718 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33719 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 33720 ;; Auto vars:     Size  Location     Type
 33721 ;;		None
 33722 ;; Return value:  Size  Location     Type
 33723 ;;                  1    wreg      void 
 33724 ;; Registers used:
 33725 ;;		wreg, status,2, status,0
 33726 ;; Tracked objects:
 33727 ;;		On entry : 0/0
 33728 ;;		On exit  : 0/0
 33729 ;;		Unchanged: 0/0
 33730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33731 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33734 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33735 ;;Total ram usage:        3 bytes
 33736 ;; Hardware stack levels used:    1
 33737 ;; Hardware stack levels required when called:   13
 33738 ;; This function calls:
 33739 ;;		Nothing
 33740 ;; This function is called by:
 33741 ;;		_TMR5_Initialize
 33742 ;;		_main
 33743 ;; This function uses a non-reentrant model
 33744 ;;
 33745                           
 33746                           	psect	text67
 33747  01B1BC                     __ptext67:
 33748                           	opt stack 0
 33749  01B1BC                     _TMR5_SetInterruptHandler:
 33750                           	opt stack 17
 33751                           
 33752                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 33753                           
 33754                           ;incstack = 0
 33755  01B1BC  C117  F24A         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 33756  01B1C0  C118  F24B         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 33757  01B1C4  C119  F24C         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 33758  01B1C8  0012               	return		;funcret
 33759  01B1CA                     __end_of_TMR5_SetInterruptHandler:
 33760                           	opt stack 0
 33761                           tosu	equ	0xFFF
 33762                           tosh	equ	0xFFE
 33763                           tosl	equ	0xFFD
 33764                           pclath	equ	0xFFA
 33765                           tblptru	equ	0xFF8
 33766                           tblptrh	equ	0xFF7
 33767                           tblptrl	equ	0xFF6
 33768                           tablat	equ	0xFF5
 33769                           prodh	equ	0xFF4
 33770                           prodl	equ	0xFF3
 33771                           intcon	equ	0xFF2
 33772                           indf0	equ	0xFEF
 33773                           postinc0	equ	0xFEE
 33774                           fsr0h	equ	0xFEA
 33775                           fsr0l	equ	0xFE9
 33776                           wreg	equ	0xFE8
 33777                           indf1	equ	0xFE7
 33778                           postdec1	equ	0xFE5
 33779                           plusw1	equ	0xFE3
 33780                           fsr1h	equ	0xFE2
 33781                           fsr1l	equ	0xFE1
 33782                           indf2	equ	0xFDF
 33783                           postinc2	equ	0xFDE
 33784                           postdec2	equ	0xFDD
 33785                           plusw2	equ	0xFDB
 33786                           fsr2h	equ	0xFDA
 33787                           fsr2l	equ	0xFD9
 33788                           status	equ	0xFD8
 33789                           
 33790 ;; *************** function _TMR4_Initialize *****************
 33791 ;; Defined at:
 33792 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 33793 ;; Parameters:    Size  Location     Type
 33794 ;;		None
 33795 ;; Auto vars:     Size  Location     Type
 33796 ;;		None
 33797 ;; Return value:  Size  Location     Type
 33798 ;;                  1    wreg      void 
 33799 ;; Registers used:
 33800 ;;		wreg, status,2, status,0, cstack
 33801 ;; Tracked objects:
 33802 ;;		On entry : 0/0
 33803 ;;		On exit  : 0/0
 33804 ;;		Unchanged: 0/0
 33805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33810 ;;Total ram usage:        0 bytes
 33811 ;; Hardware stack levels used:    1
 33812 ;; Hardware stack levels required when called:   14
 33813 ;; This function calls:
 33814 ;;		_TMR4_SetInterruptHandler
 33815 ;; This function is called by:
 33816 ;;		_SYSTEM_Initialize
 33817 ;; This function uses a non-reentrant model
 33818 ;;
 33819                           
 33820                           	psect	text68
 33821  01AD30                     __ptext68:
 33822                           	opt stack 0
 33823  01AD30                     _TMR4_Initialize:
 33824                           	opt stack 15
 33825                           
 33826                           ;tmr4.c: 69: T4CLKCON = 0x04;
 33827                           
 33828                           ;incstack = 0
 33829  01AD30  0E04               	movlw	4
 33830  01AD32  6EB9               	movwf	4025,c	;volatile
 33831                           
 33832                           ;tmr4.c: 72: T4HLT = 0xA0;
 33833  01AD34  0EA0               	movlw	160
 33834  01AD36  6EB8               	movwf	4024,c	;volatile
 33835                           
 33836                           ;tmr4.c: 75: T4RST = 0x00;
 33837  01AD38  0E00               	movlw	0
 33838  01AD3A  6EBA               	movwf	4026,c	;volatile
 33839                           
 33840                           ;tmr4.c: 78: T4PR = 0xE2;
 33841  01AD3C  0EE2               	movlw	226
 33842  01AD3E  6EB6               	movwf	4022,c	;volatile
 33843                           
 33844                           ;tmr4.c: 81: T4TMR = 0x00;
 33845  01AD40  0E00               	movlw	0
 33846  01AD42  6EB5               	movwf	4021,c	;volatile
 33847                           
 33848                           ;tmr4.c: 84: PIR5bits.TMR4IF = 0;
 33849  01AD44  010E               	movlb	14	; () banked
 33850  01AD46  9738               	bcf	56,3,b	;volatile
 33851                           
 33852                           ; BSR set to: 14
 33853                           ;tmr4.c: 87: PIE5bits.TMR4IE = 1;
 33854  01AD48  872E               	bsf	46,3,b	;volatile
 33855                           
 33856                           ; BSR set to: 14
 33857                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 33858  01AD4A  0E90               	movlw	low _TMR4_DefaultInterruptHandler
 33859  01AD4C  0101               	movlb	1	; () banked
 33860  01AD4E  6F17               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 33861  01AD50  0EB2               	movlw	high _TMR4_DefaultInterruptHandler
 33862  01AD52  6F18               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 33863  01AD54  0E01               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
 33864  01AD56  6F19               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 33865  01AD58  ECE5  F0D8         	call	_TMR4_SetInterruptHandler	;wreg free
 33866                           
 33867                           ;tmr4.c: 93: T4CON = 0xFF;
 33868  01AD5C  68B7               	setf	4023,c	;volatile
 33869  01AD5E  0012               	return		;funcret
 33870  01AD60                     __end_of_TMR4_Initialize:
 33871                           	opt stack 0
 33872                           tosu	equ	0xFFF
 33873                           tosh	equ	0xFFE
 33874                           tosl	equ	0xFFD
 33875                           pclath	equ	0xFFA
 33876                           tblptru	equ	0xFF8
 33877                           tblptrh	equ	0xFF7
 33878                           tblptrl	equ	0xFF6
 33879                           tablat	equ	0xFF5
 33880                           prodh	equ	0xFF4
 33881                           prodl	equ	0xFF3
 33882                           intcon	equ	0xFF2
 33883                           indf0	equ	0xFEF
 33884                           postinc0	equ	0xFEE
 33885                           fsr0h	equ	0xFEA
 33886                           fsr0l	equ	0xFE9
 33887                           wreg	equ	0xFE8
 33888                           indf1	equ	0xFE7
 33889                           postdec1	equ	0xFE5
 33890                           plusw1	equ	0xFE3
 33891                           fsr1h	equ	0xFE2
 33892                           fsr1l	equ	0xFE1
 33893                           indf2	equ	0xFDF
 33894                           postinc2	equ	0xFDE
 33895                           postdec2	equ	0xFDD
 33896                           plusw2	equ	0xFDB
 33897                           fsr2h	equ	0xFDA
 33898                           fsr2l	equ	0xFD9
 33899                           status	equ	0xFD8
 33900                           
 33901 ;; *************** function _TMR4_SetInterruptHandler *****************
 33902 ;; Defined at:
 33903 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 33904 ;; Parameters:    Size  Location     Type
 33905 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 33906 ;;		 -> writeEnergyToEEPROMCallback(1), TMR4_DefaultInterruptHandler(1), 
 33907 ;; Auto vars:     Size  Location     Type
 33908 ;;		None
 33909 ;; Return value:  Size  Location     Type
 33910 ;;                  1    wreg      void 
 33911 ;; Registers used:
 33912 ;;		wreg, status,2, status,0
 33913 ;; Tracked objects:
 33914 ;;		On entry : 0/0
 33915 ;;		On exit  : 0/0
 33916 ;;		Unchanged: 0/0
 33917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33918 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33921 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33922 ;;Total ram usage:        3 bytes
 33923 ;; Hardware stack levels used:    1
 33924 ;; Hardware stack levels required when called:   13
 33925 ;; This function calls:
 33926 ;;		Nothing
 33927 ;; This function is called by:
 33928 ;;		_TMR4_Initialize
 33929 ;;		_main
 33930 ;; This function uses a non-reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text69
 33934  01B1CA                     __ptext69:
 33935                           	opt stack 0
 33936  01B1CA                     _TMR4_SetInterruptHandler:
 33937                           	opt stack 17
 33938                           
 33939                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
 33940                           
 33941                           ;incstack = 0
 33942  01B1CA  C117  F244         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 33943  01B1CE  C118  F245         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 33944  01B1D2  C119  F246         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
 33945  01B1D6  0012               	return		;funcret
 33946  01B1D8                     __end_of_TMR4_SetInterruptHandler:
 33947                           	opt stack 0
 33948                           tosu	equ	0xFFF
 33949                           tosh	equ	0xFFE
 33950                           tosl	equ	0xFFD
 33951                           pclath	equ	0xFFA
 33952                           tblptru	equ	0xFF8
 33953                           tblptrh	equ	0xFF7
 33954                           tblptrl	equ	0xFF6
 33955                           tablat	equ	0xFF5
 33956                           prodh	equ	0xFF4
 33957                           prodl	equ	0xFF3
 33958                           intcon	equ	0xFF2
 33959                           indf0	equ	0xFEF
 33960                           postinc0	equ	0xFEE
 33961                           fsr0h	equ	0xFEA
 33962                           fsr0l	equ	0xFE9
 33963                           wreg	equ	0xFE8
 33964                           indf1	equ	0xFE7
 33965                           postdec1	equ	0xFE5
 33966                           plusw1	equ	0xFE3
 33967                           fsr1h	equ	0xFE2
 33968                           fsr1l	equ	0xFE1
 33969                           indf2	equ	0xFDF
 33970                           postinc2	equ	0xFDE
 33971                           postdec2	equ	0xFDD
 33972                           plusw2	equ	0xFDB
 33973                           fsr2h	equ	0xFDA
 33974                           fsr2l	equ	0xFD9
 33975                           status	equ	0xFD8
 33976                           
 33977 ;; *************** function _PMD_Initialize *****************
 33978 ;; Defined at:
 33979 ;;		line 86 in file "mcc_generated_files/mcc.c"
 33980 ;; Parameters:    Size  Location     Type
 33981 ;;		None
 33982 ;; Auto vars:     Size  Location     Type
 33983 ;;		None
 33984 ;; Return value:  Size  Location     Type
 33985 ;;                  1    wreg      void 
 33986 ;; Registers used:
 33987 ;;		wreg, status,2
 33988 ;; Tracked objects:
 33989 ;;		On entry : 0/0
 33990 ;;		On exit  : 0/0
 33991 ;;		Unchanged: 0/0
 33992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33997 ;;Total ram usage:        0 bytes
 33998 ;; Hardware stack levels used:    1
 33999 ;; Hardware stack levels required when called:   13
 34000 ;; This function calls:
 34001 ;;		Nothing
 34002 ;; This function is called by:
 34003 ;;		_SYSTEM_Initialize
 34004 ;; This function uses a non-reentrant model
 34005 ;;
 34006                           
 34007                           	psect	text70
 34008  01AFD6                     __ptext70:
 34009                           	opt stack 0
 34010  01AFD6                     _PMD_Initialize:
 34011                           	opt stack 16
 34012                           
 34013                           ;mcc.c: 89: PMD0 = 0x1A;
 34014                           
 34015                           ;incstack = 0
 34016  01AFD6  0E1A               	movlw	26
 34017  01AFD8  010E               	movlb	14	; () banked
 34018  01AFDA  6F4C               	movwf	76,b	;volatile
 34019                           
 34020                           ;mcc.c: 91: PMD1 = 0x00;
 34021  01AFDC  0E00               	movlw	0
 34022  01AFDE  6F4D               	movwf	77,b	;volatile
 34023                           
 34024                           ;mcc.c: 93: PMD2 = 0x2E;
 34025  01AFE0  0E2E               	movlw	46
 34026  01AFE2  6F4E               	movwf	78,b	;volatile
 34027                           
 34028                           ;mcc.c: 95: PMD3 = 0x4F;
 34029  01AFE4  0E4F               	movlw	79
 34030  01AFE6  6F4F               	movwf	79,b	;volatile
 34031                           
 34032                           ;mcc.c: 97: PMD4 = 0x7F;
 34033  01AFE8  0E7F               	movlw	127
 34034  01AFEA  6F50               	movwf	80,b	;volatile
 34035                           
 34036                           ;mcc.c: 99: PMD5 = 0x74;
 34037  01AFEC  0E74               	movlw	116
 34038  01AFEE  6F51               	movwf	81,b	;volatile
 34039                           
 34040                           ; BSR set to: 14
 34041  01AFF0  0012               	return		;funcret
 34042  01AFF2                     __end_of_PMD_Initialize:
 34043                           	opt stack 0
 34044                           tosu	equ	0xFFF
 34045                           tosh	equ	0xFFE
 34046                           tosl	equ	0xFFD
 34047                           pclath	equ	0xFFA
 34048                           tblptru	equ	0xFF8
 34049                           tblptrh	equ	0xFF7
 34050                           tblptrl	equ	0xFF6
 34051                           tablat	equ	0xFF5
 34052                           prodh	equ	0xFF4
 34053                           prodl	equ	0xFF3
 34054                           intcon	equ	0xFF2
 34055                           indf0	equ	0xFEF
 34056                           postinc0	equ	0xFEE
 34057                           fsr0h	equ	0xFEA
 34058                           fsr0l	equ	0xFE9
 34059                           wreg	equ	0xFE8
 34060                           indf1	equ	0xFE7
 34061                           postdec1	equ	0xFE5
 34062                           plusw1	equ	0xFE3
 34063                           fsr1h	equ	0xFE2
 34064                           fsr1l	equ	0xFE1
 34065                           indf2	equ	0xFDF
 34066                           postinc2	equ	0xFDE
 34067                           postdec2	equ	0xFDD
 34068                           plusw2	equ	0xFDB
 34069                           fsr2h	equ	0xFDA
 34070                           fsr2l	equ	0xFD9
 34071                           status	equ	0xFD8
 34072                           
 34073 ;; *************** function _PIN_MANAGER_Initialize *****************
 34074 ;; Defined at:
 34075 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34076 ;; Parameters:    Size  Location     Type
 34077 ;;		None
 34078 ;; Auto vars:     Size  Location     Type
 34079 ;;		None
 34080 ;; Return value:  Size  Location     Type
 34081 ;;                  1    wreg      void 
 34082 ;; Registers used:
 34083 ;;		wreg, status,2
 34084 ;; Tracked objects:
 34085 ;;		On entry : 0/0
 34086 ;;		On exit  : 0/0
 34087 ;;		Unchanged: 0/0
 34088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34093 ;;Total ram usage:        0 bytes
 34094 ;; Hardware stack levels used:    1
 34095 ;; Hardware stack levels required when called:   13
 34096 ;; This function calls:
 34097 ;;		Nothing
 34098 ;; This function is called by:
 34099 ;;		_SYSTEM_Initialize
 34100 ;; This function uses a non-reentrant model
 34101 ;;
 34102                           
 34103                           	psect	text71
 34104  019494                     __ptext71:
 34105                           	opt stack 0
 34106  019494                     _PIN_MANAGER_Initialize:
 34107                           	opt stack 16
 34108                           
 34109                           ;pin_manager.c: 62: LATE = 0x00;
 34110                           
 34111                           ; BSR set to: 14
 34112                           ;incstack = 0
 34113  019494  0E00               	movlw	0
 34114  019496  6E7D               	movwf	3965,c	;volatile
 34115                           
 34116                           ;pin_manager.c: 63: LATD = 0x00;
 34117  019498  0E00               	movlw	0
 34118  01949A  6E7C               	movwf	3964,c	;volatile
 34119                           
 34120                           ;pin_manager.c: 64: LATA = 0x00;
 34121  01949C  0E00               	movlw	0
 34122  01949E  6E79               	movwf	3961,c	;volatile
 34123                           
 34124                           ;pin_manager.c: 65: LATF = 0x00;
 34125  0194A0  0E00               	movlw	0
 34126  0194A2  6E7E               	movwf	3966,c	;volatile
 34127                           
 34128                           ;pin_manager.c: 66: LATB = 0x00;
 34129  0194A4  0E00               	movlw	0
 34130  0194A6  6E7A               	movwf	3962,c	;volatile
 34131                           
 34132                           ;pin_manager.c: 67: LATG = 0x00;
 34133  0194A8  0E00               	movlw	0
 34134  0194AA  6E7F               	movwf	3967,c	;volatile
 34135                           
 34136                           ;pin_manager.c: 68: LATC = 0x00;
 34137  0194AC  0E00               	movlw	0
 34138  0194AE  6E7B               	movwf	3963,c	;volatile
 34139                           
 34140                           ;pin_manager.c: 69: LATH = 0x00;
 34141  0194B0  0E00               	movlw	0
 34142  0194B2  6E80               	movwf	3968,c	;volatile
 34143                           
 34144                           ;pin_manager.c: 74: TRISE = 0x04;
 34145  0194B4  0E04               	movlw	4
 34146  0194B6  6E85               	movwf	3973,c	;volatile
 34147                           
 34148                           ;pin_manager.c: 75: TRISF = 0x00;
 34149  0194B8  0E00               	movlw	0
 34150  0194BA  6E86               	movwf	3974,c	;volatile
 34151                           
 34152                           ;pin_manager.c: 76: TRISA = 0xBD;
 34153  0194BC  0EBD               	movlw	189
 34154  0194BE  6E81               	movwf	3969,c	;volatile
 34155                           
 34156                           ;pin_manager.c: 77: TRISG = 0x40;
 34157  0194C0  0E40               	movlw	64
 34158  0194C2  6E87               	movwf	3975,c	;volatile
 34159                           
 34160                           ;pin_manager.c: 78: TRISB = 0x00;
 34161  0194C4  0E00               	movlw	0
 34162  0194C6  6E82               	movwf	3970,c	;volatile
 34163                           
 34164                           ;pin_manager.c: 79: TRISH = 0x00;
 34165  0194C8  0E00               	movlw	0
 34166  0194CA  6E88               	movwf	3976,c	;volatile
 34167                           
 34168                           ;pin_manager.c: 80: TRISC = 0xC0;
 34169  0194CC  0EC0               	movlw	192
 34170  0194CE  6E83               	movwf	3971,c	;volatile
 34171                           
 34172                           ;pin_manager.c: 81: TRISD = 0x00;
 34173  0194D0  0E00               	movlw	0
 34174  0194D2  6E84               	movwf	3972,c	;volatile
 34175                           
 34176                           ;pin_manager.c: 86: ANSELD = 0x00;
 34177  0194D4  0E00               	movlw	0
 34178  0194D6  010E               	movlb	14	; () banked
 34179  0194D8  6FA7               	movwf	167,b	;volatile
 34180                           
 34181                           ;pin_manager.c: 87: ANSELB = 0x00;
 34182  0194DA  0E00               	movlw	0
 34183  0194DC  6F9A               	movwf	154,b	;volatile
 34184                           
 34185                           ;pin_manager.c: 88: ANSELE = 0x04;
 34186  0194DE  0E04               	movlw	4
 34187  0194E0  6FAF               	movwf	175,b	;volatile
 34188                           
 34189                           ;pin_manager.c: 89: ANSELG = 0x20;
 34190  0194E2  0E20               	movlw	32
 34191  0194E4  6FBC               	movwf	188,b	;volatile
 34192                           
 34193                           ;pin_manager.c: 90: ANSELF = 0x00;
 34194  0194E6  0E00               	movlw	0
 34195  0194E8  6FB4               	movwf	180,b	;volatile
 34196                           
 34197                           ;pin_manager.c: 91: ANSELA = 0x9D;
 34198  0194EA  0E9D               	movlw	157
 34199  0194EC  6F92               	movwf	146,b	;volatile
 34200                           
 34201                           ;pin_manager.c: 96: WPUD = 0x00;
 34202  0194EE  0E00               	movlw	0
 34203  0194F0  6FA6               	movwf	166,b	;volatile
 34204                           
 34205                           ;pin_manager.c: 97: WPUF = 0x00;
 34206  0194F2  0E00               	movlw	0
 34207  0194F4  6FB3               	movwf	179,b	;volatile
 34208                           
 34209                           ;pin_manager.c: 98: WPUE = 0x00;
 34210  0194F6  0E00               	movlw	0
 34211  0194F8  6FAE               	movwf	174,b	;volatile
 34212                           
 34213                           ;pin_manager.c: 99: WPUB = 0x00;
 34214  0194FA  0E00               	movlw	0
 34215  0194FC  6F99               	movwf	153,b	;volatile
 34216                           
 34217                           ;pin_manager.c: 100: WPUG = 0x00;
 34218  0194FE  0E00               	movlw	0
 34219  019500  6FBB               	movwf	187,b	;volatile
 34220                           
 34221                           ;pin_manager.c: 101: WPUA = 0x00;
 34222  019502  0E00               	movlw	0
 34223  019504  6F91               	movwf	145,b	;volatile
 34224                           
 34225                           ;pin_manager.c: 102: WPUC = 0x00;
 34226  019506  0E00               	movlw	0
 34227  019508  6FA1               	movwf	161,b	;volatile
 34228                           
 34229                           ;pin_manager.c: 103: WPUH = 0x00;
 34230  01950A  0E00               	movlw	0
 34231  01950C  6FC0               	movwf	192,b	;volatile
 34232                           
 34233                           ;pin_manager.c: 108: ODCONE = 0x00;
 34234  01950E  0E00               	movlw	0
 34235  019510  6FAD               	movwf	173,b	;volatile
 34236                           
 34237                           ;pin_manager.c: 109: ODCONF = 0x01;
 34238  019512  0E01               	movlw	1
 34239  019514  6FB2               	movwf	178,b	;volatile
 34240                           
 34241                           ;pin_manager.c: 110: ODCONA = 0x00;
 34242  019516  0E00               	movlw	0
 34243  019518  6F90               	movwf	144,b	;volatile
 34244                           
 34245                           ;pin_manager.c: 111: ODCONG = 0x00;
 34246  01951A  0E00               	movlw	0
 34247  01951C  6FBA               	movwf	186,b	;volatile
 34248                           
 34249                           ;pin_manager.c: 112: ODCONB = 0x00;
 34250  01951E  0E00               	movlw	0
 34251  019520  6F98               	movwf	152,b	;volatile
 34252                           
 34253                           ;pin_manager.c: 113: ODCONH = 0x00;
 34254  019522  0E00               	movlw	0
 34255  019524  6FBF               	movwf	191,b	;volatile
 34256                           
 34257                           ;pin_manager.c: 114: ODCONC = 0x00;
 34258  019526  0E00               	movlw	0
 34259  019528  6FA0               	movwf	160,b	;volatile
 34260                           
 34261                           ;pin_manager.c: 115: ODCOND = 0x00;
 34262  01952A  0E00               	movlw	0
 34263  01952C  6FA5               	movwf	165,b	;volatile
 34264                           
 34265                           ; BSR set to: 14
 34266                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 34267  01952E  698F               	setf	143,b	;volatile
 34268                           
 34269                           ; BSR set to: 14
 34270                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 34271  019530  6997               	setf	151,b	;volatile
 34272                           
 34273                           ; BSR set to: 14
 34274                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 34275  019532  699F               	setf	159,b	;volatile
 34276                           
 34277                           ; BSR set to: 14
 34278                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 34279  019534  69A4               	setf	164,b	;volatile
 34280                           
 34281                           ; BSR set to: 14
 34282                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 34283  019536  69AC               	setf	172,b	;volatile
 34284                           
 34285                           ; BSR set to: 14
 34286                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 34287  019538  69B1               	setf	177,b	;volatile
 34288                           
 34289                           ; BSR set to: 14
 34290                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 34291  01953A  69B9               	setf	185,b	;volatile
 34292                           
 34293                           ; BSR set to: 14
 34294                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 34295  01953C  69BE               	setf	190,b	;volatile
 34296                           
 34297                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 34298  01953E  0E0E               	movlw	14
 34299  019540  6F89               	movwf	137,b	;volatile
 34300                           
 34301                           ;pin_manager.c: 137: SSP1CLKPPS = 0x17;
 34302  019542  0E17               	movlw	23
 34303  019544  6F19               	movwf	25,b	;volatile
 34304                           
 34305                           ;pin_manager.c: 138: INT0PPS = 0x05;
 34306  019546  0E05               	movlw	5
 34307  019548  010D               	movlb	13	; () banked
 34308  01954A  6FF0               	movwf	240,b	;volatile
 34309                           
 34310                           ;pin_manager.c: 139: RC6PPS = 0x1A;
 34311  01954C  0E1A               	movlw	26
 34312  01954E  010E               	movlb	14	; () banked
 34313  019550  6F68               	movwf	104,b	;volatile
 34314                           
 34315                           ;pin_manager.c: 140: RX2PPS = 0x36;
 34316  019552  0E36               	movlw	54
 34317  019554  6F11               	movwf	17,b	;volatile
 34318                           
 34319                           ;pin_manager.c: 141: RC7PPS = 0x19;
 34320  019556  0E19               	movlw	25
 34321  019558  6F69               	movwf	105,b	;volatile
 34322                           
 34323                           ;pin_manager.c: 142: SSP1DATPPS = 0x16;
 34324  01955A  0E16               	movlw	22
 34325  01955C  6F1A               	movwf	26,b	;volatile
 34326                           
 34327                           ; BSR set to: 14
 34328  01955E  0012               	return		;funcret
 34329  019560                     __end_of_PIN_MANAGER_Initialize:
 34330                           	opt stack 0
 34331                           tosu	equ	0xFFF
 34332                           tosh	equ	0xFFE
 34333                           tosl	equ	0xFFD
 34334                           pclath	equ	0xFFA
 34335                           tblptru	equ	0xFF8
 34336                           tblptrh	equ	0xFF7
 34337                           tblptrl	equ	0xFF6
 34338                           tablat	equ	0xFF5
 34339                           prodh	equ	0xFF4
 34340                           prodl	equ	0xFF3
 34341                           intcon	equ	0xFF2
 34342                           indf0	equ	0xFEF
 34343                           postinc0	equ	0xFEE
 34344                           fsr0h	equ	0xFEA
 34345                           fsr0l	equ	0xFE9
 34346                           wreg	equ	0xFE8
 34347                           indf1	equ	0xFE7
 34348                           postdec1	equ	0xFE5
 34349                           plusw1	equ	0xFE3
 34350                           fsr1h	equ	0xFE2
 34351                           fsr1l	equ	0xFE1
 34352                           indf2	equ	0xFDF
 34353                           postinc2	equ	0xFDE
 34354                           postdec2	equ	0xFDD
 34355                           plusw2	equ	0xFDB
 34356                           fsr2h	equ	0xFDA
 34357                           fsr2l	equ	0xFD9
 34358                           status	equ	0xFD8
 34359                           
 34360 ;; *************** function _OSCILLATOR_Initialize *****************
 34361 ;; Defined at:
 34362 ;;		line 68 in file "mcc_generated_files/mcc.c"
 34363 ;; Parameters:    Size  Location     Type
 34364 ;;		None
 34365 ;; Auto vars:     Size  Location     Type
 34366 ;;		None
 34367 ;; Return value:  Size  Location     Type
 34368 ;;                  1    wreg      void 
 34369 ;; Registers used:
 34370 ;;		wreg, status,2
 34371 ;; Tracked objects:
 34372 ;;		On entry : 0/0
 34373 ;;		On exit  : 0/0
 34374 ;;		Unchanged: 0/0
 34375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34380 ;;Total ram usage:        0 bytes
 34381 ;; Hardware stack levels used:    1
 34382 ;; Hardware stack levels required when called:   13
 34383 ;; This function calls:
 34384 ;;		Nothing
 34385 ;; This function is called by:
 34386 ;;		_SYSTEM_Initialize
 34387 ;; This function uses a non-reentrant model
 34388 ;;
 34389                           
 34390                           	psect	text72
 34391  01AFF2                     __ptext72:
 34392                           	opt stack 0
 34393  01AFF2                     _OSCILLATOR_Initialize:
 34394                           	opt stack 16
 34395                           
 34396                           ;mcc.c: 71: OSCCON1 = 0x20;
 34397                           
 34398                           ; BSR set to: 14
 34399                           ;incstack = 0
 34400  01AFF2  0E20               	movlw	32
 34401  01AFF4  010E               	movlb	14	; () banked
 34402  01AFF6  6F43               	movwf	67,b	;volatile
 34403                           
 34404                           ;mcc.c: 73: OSCCON3 = 0x00;
 34405  01AFF8  0E00               	movlw	0
 34406  01AFFA  6F45               	movwf	69,b	;volatile
 34407                           
 34408                           ;mcc.c: 75: OSCEN = 0x00;
 34409  01AFFC  0E00               	movlw	0
 34410  01AFFE  6F47               	movwf	71,b	;volatile
 34411                           
 34412                           ;mcc.c: 77: OSCFRQ = 0x02;
 34413  01B000  0E02               	movlw	2
 34414  01B002  6F49               	movwf	73,b	;volatile
 34415                           
 34416                           ;mcc.c: 79: OSCTUNE = 0x00;
 34417  01B004  0E00               	movlw	0
 34418  01B006  6F48               	movwf	72,b	;volatile
 34419  01B008                     
 34420                           ; BSR set to: 14
 34421                           
 34422                           ; BSR set to: 14
 34423                           ;mcc.c: 82: {
 34424  01B008  B146               	btfsc	70,0,b	;volatile
 34425  01B00A  0012               	return	
 34426  01B00C  D7FD               	goto	l65
 34427  01B00E                     __end_of_OSCILLATOR_Initialize:
 34428                           	opt stack 0
 34429                           tosu	equ	0xFFF
 34430                           tosh	equ	0xFFE
 34431                           tosl	equ	0xFFD
 34432                           pclath	equ	0xFFA
 34433                           tblptru	equ	0xFF8
 34434                           tblptrh	equ	0xFF7
 34435                           tblptrl	equ	0xFF6
 34436                           tablat	equ	0xFF5
 34437                           prodh	equ	0xFF4
 34438                           prodl	equ	0xFF3
 34439                           intcon	equ	0xFF2
 34440                           indf0	equ	0xFEF
 34441                           postinc0	equ	0xFEE
 34442                           fsr0h	equ	0xFEA
 34443                           fsr0l	equ	0xFE9
 34444                           wreg	equ	0xFE8
 34445                           indf1	equ	0xFE7
 34446                           postdec1	equ	0xFE5
 34447                           plusw1	equ	0xFE3
 34448                           fsr1h	equ	0xFE2
 34449                           fsr1l	equ	0xFE1
 34450                           indf2	equ	0xFDF
 34451                           postinc2	equ	0xFDE
 34452                           postdec2	equ	0xFDD
 34453                           plusw2	equ	0xFDB
 34454                           fsr2h	equ	0xFDA
 34455                           fsr2l	equ	0xFD9
 34456                           status	equ	0xFD8
 34457                           
 34458 ;; *************** function _INTERRUPT_Initialize *****************
 34459 ;; Defined at:
 34460 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34461 ;; Parameters:    Size  Location     Type
 34462 ;;		None
 34463 ;; Auto vars:     Size  Location     Type
 34464 ;;		None
 34465 ;; Return value:  Size  Location     Type
 34466 ;;                  1    wreg      void 
 34467 ;; Registers used:
 34468 ;;		None
 34469 ;; Tracked objects:
 34470 ;;		On entry : 0/0
 34471 ;;		On exit  : 0/0
 34472 ;;		Unchanged: 0/0
 34473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34478 ;;Total ram usage:        0 bytes
 34479 ;; Hardware stack levels used:    1
 34480 ;; Hardware stack levels required when called:   13
 34481 ;; This function calls:
 34482 ;;		Nothing
 34483 ;; This function is called by:
 34484 ;;		_SYSTEM_Initialize
 34485 ;; This function uses a non-reentrant model
 34486 ;;
 34487                           
 34488                           	psect	text73
 34489  01B00E                     __ptext73:
 34490                           	opt stack 0
 34491  01B00E                     _INTERRUPT_Initialize:
 34492                           	opt stack 16
 34493                           
 34494                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 34495                           
 34496                           ; BSR set to: 14
 34497                           ;incstack = 0
 34498  01B00E  8AF2               	bsf	intcon,5,c	;volatile
 34499                           
 34500                           ;interrupt_manager.c: 60: IPR3bits.BCL1IP = 1;
 34501  01B010  010E               	movlb	14	; () banked
 34502  01B012  8322               	bsf	34,1,b	;volatile
 34503                           
 34504                           ;interrupt_manager.c: 63: IPR3bits.SSP1IP = 1;
 34505  01B014  8122               	bsf	34,0,b	;volatile
 34506                           
 34507                           ;interrupt_manager.c: 66: IPR5bits.TMR4IP = 1;
 34508  01B016  8724               	bsf	36,3,b	;volatile
 34509                           
 34510                           ;interrupt_manager.c: 69: IPR2bits.HLVDIP = 1;
 34511  01B018  8F21               	bsf	33,7,b	;volatile
 34512                           
 34513                           ;interrupt_manager.c: 72: IPR0bits.INT0IP = 1;
 34514  01B01A  811F               	bsf	31,0,b	;volatile
 34515                           
 34516                           ;interrupt_manager.c: 75: IPR3bits.RC2IP = 1;
 34517  01B01C  8F22               	bsf	34,7,b	;volatile
 34518                           
 34519                           ;interrupt_manager.c: 78: IPR5bits.TMR5IP = 1;
 34520  01B01E  8924               	bsf	36,4,b	;volatile
 34521                           
 34522                           ;interrupt_manager.c: 81: IPR1bits.ADTIP = 1;
 34523  01B020  8320               	bsf	32,1,b	;volatile
 34524                           
 34525                           ;interrupt_manager.c: 85: IPR5bits.TMR6IP = 0;
 34526  01B022  9B24               	bcf	36,5,b	;volatile
 34527                           
 34528                           ;interrupt_manager.c: 88: IPR3bits.TX2IP = 0;
 34529  01B024  9D22               	bcf	34,6,b	;volatile
 34530                           
 34531                           ;interrupt_manager.c: 91: IPR5bits.TMR7IP = 0;
 34532  01B026  9D24               	bcf	36,6,b	;volatile
 34533                           
 34534                           ; BSR set to: 14
 34535  01B028  0012               	return		;funcret
 34536  01B02A                     __end_of_INTERRUPT_Initialize:
 34537                           	opt stack 0
 34538                           tosu	equ	0xFFF
 34539                           tosh	equ	0xFFE
 34540                           tosl	equ	0xFFD
 34541                           pclath	equ	0xFFA
 34542                           tblptru	equ	0xFF8
 34543                           tblptrh	equ	0xFF7
 34544                           tblptrl	equ	0xFF6
 34545                           tablat	equ	0xFF5
 34546                           prodh	equ	0xFF4
 34547                           prodl	equ	0xFF3
 34548                           intcon	equ	0xFF2
 34549                           indf0	equ	0xFEF
 34550                           postinc0	equ	0xFEE
 34551                           fsr0h	equ	0xFEA
 34552                           fsr0l	equ	0xFE9
 34553                           wreg	equ	0xFE8
 34554                           indf1	equ	0xFE7
 34555                           postdec1	equ	0xFE5
 34556                           plusw1	equ	0xFE3
 34557                           fsr1h	equ	0xFE2
 34558                           fsr1l	equ	0xFE1
 34559                           indf2	equ	0xFDF
 34560                           postinc2	equ	0xFDE
 34561                           postdec2	equ	0xFDD
 34562                           plusw2	equ	0xFDB
 34563                           fsr2h	equ	0xFDA
 34564                           fsr2l	equ	0xFD9
 34565                           status	equ	0xFD8
 34566                           
 34567 ;; *************** function _I2C1_Initialize *****************
 34568 ;; Defined at:
 34569 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 34570 ;; Parameters:    Size  Location     Type
 34571 ;;		None
 34572 ;; Auto vars:     Size  Location     Type
 34573 ;;		None
 34574 ;; Return value:  Size  Location     Type
 34575 ;;                  1    wreg      void 
 34576 ;; Registers used:
 34577 ;;		wreg, status,2, status,0
 34578 ;; Tracked objects:
 34579 ;;		On entry : 0/0
 34580 ;;		On exit  : 0/0
 34581 ;;		Unchanged: 0/0
 34582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34587 ;;Total ram usage:        0 bytes
 34588 ;; Hardware stack levels used:    1
 34589 ;; Hardware stack levels required when called:   13
 34590 ;; This function calls:
 34591 ;;		Nothing
 34592 ;; This function is called by:
 34593 ;;		_SYSTEM_Initialize
 34594 ;; This function uses a non-reentrant model
 34595 ;;
 34596                           
 34597                           	psect	text74
 34598  01AB96                     __ptext74:
 34599                           	opt stack 0
 34600  01AB96                     _I2C1_Initialize:
 34601                           	opt stack 16
 34602                           
 34603                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
 34604                           
 34605                           ; BSR set to: 14
 34606                           ;incstack = 0
 34607  01AB96  0E8E               	movlw	low _i2c1_tr_queue
 34608  01AB98  0102               	movlb	2	; () banked
 34609  01AB9A  6F0B               	movwf	(_i2c1_object+2)& (0+255),b
 34610  01AB9C  0E02               	movlw	high _i2c1_tr_queue
 34611  01AB9E  6F0C               	movwf	(_i2c1_object+3)& (0+255),b
 34612                           
 34613                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
 34614  01ABA0  0E8E               	movlw	low _i2c1_tr_queue
 34615  01ABA2  6F09               	movwf	_i2c1_object& (0+255),b
 34616  01ABA4  0E02               	movlw	high _i2c1_tr_queue
 34617  01ABA6  6F0A               	movwf	(_i2c1_object+1)& (0+255),b
 34618                           
 34619                           ; BSR set to: 2
 34620                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
 34621  01ABA8  830D               	bsf	(_i2c1_object+4)& (0+255),1,b
 34622                           
 34623                           ; BSR set to: 2
 34624                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
 34625  01ABAA  910D               	bcf	(_i2c1_object+4)& (0+255),0,b
 34626                           
 34627                           ; BSR set to: 2
 34628                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
 34629  01ABAC  0E00               	movlw	0
 34630  01ABAE  6F0F               	movwf	(_i2c1_object+6)& (0+255),b
 34631                           
 34632                           ; BSR set to: 2
 34633                           ;i2c1.c: 208: SSP1STAT = 0x00;
 34634  01ABB0  0E00               	movlw	0
 34635  01ABB2  6E94               	movwf	3988,c	;volatile
 34636                           
 34637                           ; BSR set to: 2
 34638                           ;i2c1.c: 210: SSP1CON1 = 0x28;
 34639  01ABB4  0E28               	movlw	40
 34640  01ABB6  6E95               	movwf	3989,c	;volatile
 34641                           
 34642                           ; BSR set to: 2
 34643                           ;i2c1.c: 212: SSP1CON3 = 0x00;
 34644  01ABB8  0E00               	movlw	0
 34645  01ABBA  6E97               	movwf	3991,c	;volatile
 34646                           
 34647                           ; BSR set to: 2
 34648                           ;i2c1.c: 214: SSP1ADD = 0x3F;
 34649  01ABBC  0E3F               	movlw	63
 34650  01ABBE  6E92               	movwf	3986,c	;volatile
 34651                           
 34652                           ; BSR set to: 2
 34653                           ;i2c1.c: 217: PIR3bits.SSP1IF = 0;
 34654  01ABC0  010E               	movlb	14	; () banked
 34655  01ABC2  9136               	bcf	54,0,b	;volatile
 34656                           
 34657                           ; BSR set to: 14
 34658                           ;i2c1.c: 218: PIR3bits.BCL1IF = 0;
 34659  01ABC4  9336               	bcf	54,1,b	;volatile
 34660                           
 34661                           ; BSR set to: 14
 34662                           ;i2c1.c: 221: PIE3bits.SSP1IE = 1;
 34663  01ABC6  812C               	bsf	44,0,b	;volatile
 34664                           
 34665                           ; BSR set to: 14
 34666                           ;i2c1.c: 222: PIE3bits.BCL1IE = 1;
 34667  01ABC8  832C               	bsf	44,1,b	;volatile
 34668                           
 34669                           ; BSR set to: 14
 34670  01ABCA  0012               	return		;funcret
 34671  01ABCC                     __end_of_I2C1_Initialize:
 34672                           	opt stack 0
 34673                           tosu	equ	0xFFF
 34674                           tosh	equ	0xFFE
 34675                           tosl	equ	0xFFD
 34676                           pclath	equ	0xFFA
 34677                           tblptru	equ	0xFF8
 34678                           tblptrh	equ	0xFF7
 34679                           tblptrl	equ	0xFF6
 34680                           tablat	equ	0xFF5
 34681                           prodh	equ	0xFF4
 34682                           prodl	equ	0xFF3
 34683                           intcon	equ	0xFF2
 34684                           indf0	equ	0xFEF
 34685                           postinc0	equ	0xFEE
 34686                           fsr0h	equ	0xFEA
 34687                           fsr0l	equ	0xFE9
 34688                           wreg	equ	0xFE8
 34689                           indf1	equ	0xFE7
 34690                           postdec1	equ	0xFE5
 34691                           plusw1	equ	0xFE3
 34692                           fsr1h	equ	0xFE2
 34693                           fsr1l	equ	0xFE1
 34694                           indf2	equ	0xFDF
 34695                           postinc2	equ	0xFDE
 34696                           postdec2	equ	0xFDD
 34697                           plusw2	equ	0xFDB
 34698                           fsr2h	equ	0xFDA
 34699                           fsr2l	equ	0xFD9
 34700                           status	equ	0xFD8
 34701                           
 34702 ;; *************** function _HLVD_Initialize *****************
 34703 ;; Defined at:
 34704 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 34705 ;; Parameters:    Size  Location     Type
 34706 ;;		None
 34707 ;; Auto vars:     Size  Location     Type
 34708 ;;		None
 34709 ;; Return value:  Size  Location     Type
 34710 ;;                  1    wreg      void 
 34711 ;; Registers used:
 34712 ;;		wreg, status,2
 34713 ;; Tracked objects:
 34714 ;;		On entry : 0/0
 34715 ;;		On exit  : 0/0
 34716 ;;		Unchanged: 0/0
 34717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34722 ;;Total ram usage:        0 bytes
 34723 ;; Hardware stack levels used:    1
 34724 ;; Hardware stack levels required when called:   13
 34725 ;; This function calls:
 34726 ;;		Nothing
 34727 ;; This function is called by:
 34728 ;;		_SYSTEM_Initialize
 34729 ;; This function uses a non-reentrant model
 34730 ;;
 34731                           
 34732                           	psect	text75
 34733  01B182                     __ptext75:
 34734                           	opt stack 0
 34735  01B182                     _HLVD_Initialize:
 34736                           	opt stack 16
 34737                           
 34738                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 34739                           
 34740                           ; BSR set to: 14
 34741                           ;incstack = 0
 34742  01B182  0E07               	movlw	7
 34743  01B184  010E               	movlb	14	; () banked
 34744  01B186  6FC3               	movwf	195,b	;volatile
 34745                           
 34746                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 34747  01B188  0E81               	movlw	129
 34748  01B18A  6FC2               	movwf	194,b	;volatile
 34749                           
 34750                           ; BSR set to: 14
 34751                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 34752  01B18C  9F35               	bcf	53,7,b	;volatile
 34753                           
 34754                           ; BSR set to: 14
 34755                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 34756  01B18E  8F2B               	bsf	43,7,b	;volatile
 34757                           
 34758                           ; BSR set to: 14
 34759  01B190  0012               	return		;funcret
 34760  01B192                     __end_of_HLVD_Initialize:
 34761                           	opt stack 0
 34762                           tosu	equ	0xFFF
 34763                           tosh	equ	0xFFE
 34764                           tosl	equ	0xFFD
 34765                           pclath	equ	0xFFA
 34766                           tblptru	equ	0xFF8
 34767                           tblptrh	equ	0xFF7
 34768                           tblptrl	equ	0xFF6
 34769                           tablat	equ	0xFF5
 34770                           prodh	equ	0xFF4
 34771                           prodl	equ	0xFF3
 34772                           intcon	equ	0xFF2
 34773                           indf0	equ	0xFEF
 34774                           postinc0	equ	0xFEE
 34775                           fsr0h	equ	0xFEA
 34776                           fsr0l	equ	0xFE9
 34777                           wreg	equ	0xFE8
 34778                           indf1	equ	0xFE7
 34779                           postdec1	equ	0xFE5
 34780                           plusw1	equ	0xFE3
 34781                           fsr1h	equ	0xFE2
 34782                           fsr1l	equ	0xFE1
 34783                           indf2	equ	0xFDF
 34784                           postinc2	equ	0xFDE
 34785                           postdec2	equ	0xFDD
 34786                           plusw2	equ	0xFDB
 34787                           fsr2h	equ	0xFDA
 34788                           fsr2l	equ	0xFD9
 34789                           status	equ	0xFD8
 34790                           
 34791 ;; *************** function _FVR_Initialize *****************
 34792 ;; Defined at:
 34793 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34794 ;; Parameters:    Size  Location     Type
 34795 ;;		None
 34796 ;; Auto vars:     Size  Location     Type
 34797 ;;		None
 34798 ;; Return value:  Size  Location     Type
 34799 ;;                  1    wreg      void 
 34800 ;; Registers used:
 34801 ;;		wreg, status,2
 34802 ;; Tracked objects:
 34803 ;;		On entry : 0/0
 34804 ;;		On exit  : 0/0
 34805 ;;		Unchanged: 0/0
 34806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34811 ;;Total ram usage:        0 bytes
 34812 ;; Hardware stack levels used:    1
 34813 ;; Hardware stack levels required when called:   13
 34814 ;; This function calls:
 34815 ;;		Nothing
 34816 ;; This function is called by:
 34817 ;;		_SYSTEM_Initialize
 34818 ;; This function uses a non-reentrant model
 34819 ;;
 34820                           
 34821                           	psect	text76
 34822  01B254                     __ptext76:
 34823                           	opt stack 0
 34824  01B254                     _FVR_Initialize:
 34825                           	opt stack 16
 34826                           
 34827                           ;fvr.c: 61: FVRCON = 0xA6;
 34828                           
 34829                           ; BSR set to: 14
 34830                           ;incstack = 0
 34831  01B254  0EA6               	movlw	166
 34832  01B256  010E               	movlb	14	; () banked
 34833  01B258  6FC4               	movwf	196,b	;volatile
 34834                           
 34835                           ; BSR set to: 14
 34836  01B25A  0012               	return		;funcret
 34837  01B25C                     __end_of_FVR_Initialize:
 34838                           	opt stack 0
 34839                           tosu	equ	0xFFF
 34840                           tosh	equ	0xFFE
 34841                           tosl	equ	0xFFD
 34842                           pclath	equ	0xFFA
 34843                           tblptru	equ	0xFF8
 34844                           tblptrh	equ	0xFF7
 34845                           tblptrl	equ	0xFF6
 34846                           tablat	equ	0xFF5
 34847                           prodh	equ	0xFF4
 34848                           prodl	equ	0xFF3
 34849                           intcon	equ	0xFF2
 34850                           indf0	equ	0xFEF
 34851                           postinc0	equ	0xFEE
 34852                           fsr0h	equ	0xFEA
 34853                           fsr0l	equ	0xFE9
 34854                           wreg	equ	0xFE8
 34855                           indf1	equ	0xFE7
 34856                           postdec1	equ	0xFE5
 34857                           plusw1	equ	0xFE3
 34858                           fsr1h	equ	0xFE2
 34859                           fsr1l	equ	0xFE1
 34860                           indf2	equ	0xFDF
 34861                           postinc2	equ	0xFDE
 34862                           postdec2	equ	0xFDD
 34863                           plusw2	equ	0xFDB
 34864                           fsr2h	equ	0xFDA
 34865                           fsr2l	equ	0xFD9
 34866                           status	equ	0xFD8
 34867                           
 34868 ;; *************** function _EXT_INT_Initialize *****************
 34869 ;; Defined at:
 34870 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 34871 ;; Parameters:    Size  Location     Type
 34872 ;;		None
 34873 ;; Auto vars:     Size  Location     Type
 34874 ;;		None
 34875 ;; Return value:  Size  Location     Type
 34876 ;;                  1    wreg      void 
 34877 ;; Registers used:
 34878 ;;		wreg, status,2, status,0, cstack
 34879 ;; Tracked objects:
 34880 ;;		On entry : 0/0
 34881 ;;		On exit  : 0/0
 34882 ;;		Unchanged: 0/0
 34883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34888 ;;Total ram usage:        0 bytes
 34889 ;; Hardware stack levels used:    1
 34890 ;; Hardware stack levels required when called:   14
 34891 ;; This function calls:
 34892 ;;		_INT0_SetInterruptHandler
 34893 ;; This function is called by:
 34894 ;;		_SYSTEM_Initialize
 34895 ;; This function uses a non-reentrant model
 34896 ;;
 34897                           
 34898                           	psect	text77
 34899  01AF9A                     __ptext77:
 34900                           	opt stack 0
 34901  01AF9A                     _EXT_INT_Initialize:
 34902                           	opt stack 15
 34903                           
 34904                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 34905                           
 34906                           ; BSR set to: 14
 34907                           ;incstack = 0
 34908  01AF9A  010E               	movlb	14	; () banked
 34909  01AF9C  9133               	bcf	51,0,b	;volatile
 34910                           
 34911                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 34912  01AF9E  80F2               	bsf	intcon,0,c	;volatile
 34913                           
 34914                           ; BSR set to: 14
 34915                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 34916  01AFA0  0E92               	movlw	low _INT0_DefaultInterruptHandler
 34917  01AFA2  0101               	movlb	1	; () banked
 34918  01AFA4  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 34919  01AFA6  0EB2               	movlw	high _INT0_DefaultInterruptHandler
 34920  01AFA8  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 34921  01AFAA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34922  01AFAC  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 34923  01AFAE  ECEC  F0D8         	call	_INT0_SetInterruptHandler	;wreg free
 34924                           
 34925                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 34926  01AFB2  010E               	movlb	14	; () banked
 34927  01AFB4  8129               	bsf	41,0,b	;volatile
 34928                           
 34929                           ; BSR set to: 14
 34930  01AFB6  0012               	return		;funcret
 34931  01AFB8                     __end_of_EXT_INT_Initialize:
 34932                           	opt stack 0
 34933                           tosu	equ	0xFFF
 34934                           tosh	equ	0xFFE
 34935                           tosl	equ	0xFFD
 34936                           pclath	equ	0xFFA
 34937                           tblptru	equ	0xFF8
 34938                           tblptrh	equ	0xFF7
 34939                           tblptrl	equ	0xFF6
 34940                           tablat	equ	0xFF5
 34941                           prodh	equ	0xFF4
 34942                           prodl	equ	0xFF3
 34943                           intcon	equ	0xFF2
 34944                           indf0	equ	0xFEF
 34945                           postinc0	equ	0xFEE
 34946                           fsr0h	equ	0xFEA
 34947                           fsr0l	equ	0xFE9
 34948                           wreg	equ	0xFE8
 34949                           indf1	equ	0xFE7
 34950                           postdec1	equ	0xFE5
 34951                           plusw1	equ	0xFE3
 34952                           fsr1h	equ	0xFE2
 34953                           fsr1l	equ	0xFE1
 34954                           indf2	equ	0xFDF
 34955                           postinc2	equ	0xFDE
 34956                           postdec2	equ	0xFDD
 34957                           plusw2	equ	0xFDB
 34958                           fsr2h	equ	0xFDA
 34959                           fsr2l	equ	0xFD9
 34960                           status	equ	0xFD8
 34961                           
 34962 ;; *************** function _INT0_SetInterruptHandler *****************
 34963 ;; Defined at:
 34964 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 34965 ;; Parameters:    Size  Location     Type
 34966 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 34967 ;;		 -> dimmingOffTimeCallback(1), INT0_DefaultInterruptHandler(1), 
 34968 ;; Auto vars:     Size  Location     Type
 34969 ;;		None
 34970 ;; Return value:  Size  Location     Type
 34971 ;;                  1    wreg      void 
 34972 ;; Registers used:
 34973 ;;		wreg, status,2, status,0
 34974 ;; Tracked objects:
 34975 ;;		On entry : 0/0
 34976 ;;		On exit  : 0/0
 34977 ;;		Unchanged: 0/0
 34978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34979 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34982 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34983 ;;Total ram usage:        3 bytes
 34984 ;; Hardware stack levels used:    1
 34985 ;; Hardware stack levels required when called:   13
 34986 ;; This function calls:
 34987 ;;		Nothing
 34988 ;; This function is called by:
 34989 ;;		_EXT_INT_Initialize
 34990 ;;		_main
 34991 ;; This function uses a non-reentrant model
 34992 ;;
 34993                           
 34994                           	psect	text78
 34995  01B1D8                     __ptext78:
 34996                           	opt stack 0
 34997  01B1D8                     _INT0_SetInterruptHandler:
 34998                           	opt stack 15
 34999                           
 35000                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 35001                           
 35002                           ; BSR set to: 14
 35003                           ;incstack = 0
 35004  01B1D8  C117  F247         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 35005  01B1DC  C118  F248         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 35006  01B1E0  C119  F249         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 35007  01B1E4  0012               	return		;funcret
 35008  01B1E6                     __end_of_INT0_SetInterruptHandler:
 35009                           	opt stack 0
 35010                           tosu	equ	0xFFF
 35011                           tosh	equ	0xFFE
 35012                           tosl	equ	0xFFD
 35013                           pclath	equ	0xFFA
 35014                           tblptru	equ	0xFF8
 35015                           tblptrh	equ	0xFF7
 35016                           tblptrl	equ	0xFF6
 35017                           tablat	equ	0xFF5
 35018                           prodh	equ	0xFF4
 35019                           prodl	equ	0xFF3
 35020                           intcon	equ	0xFF2
 35021                           indf0	equ	0xFEF
 35022                           postinc0	equ	0xFEE
 35023                           fsr0h	equ	0xFEA
 35024                           fsr0l	equ	0xFE9
 35025                           wreg	equ	0xFE8
 35026                           indf1	equ	0xFE7
 35027                           postdec1	equ	0xFE5
 35028                           plusw1	equ	0xFE3
 35029                           fsr1h	equ	0xFE2
 35030                           fsr1l	equ	0xFE1
 35031                           indf2	equ	0xFDF
 35032                           postinc2	equ	0xFDE
 35033                           postdec2	equ	0xFDD
 35034                           plusw2	equ	0xFDB
 35035                           fsr2h	equ	0xFDA
 35036                           fsr2l	equ	0xFD9
 35037                           status	equ	0xFD8
 35038                           
 35039 ;; *************** function _EUSART2_Initialize *****************
 35040 ;; Defined at:
 35041 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 35042 ;; Parameters:    Size  Location     Type
 35043 ;;		None
 35044 ;; Auto vars:     Size  Location     Type
 35045 ;;		None
 35046 ;; Return value:  Size  Location     Type
 35047 ;;                  1    wreg      void 
 35048 ;; Registers used:
 35049 ;;		wreg, status,2, status,0, cstack
 35050 ;; Tracked objects:
 35051 ;;		On entry : 0/0
 35052 ;;		On exit  : 0/0
 35053 ;;		Unchanged: 0/0
 35054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35059 ;;Total ram usage:        0 bytes
 35060 ;; Hardware stack levels used:    1
 35061 ;; Hardware stack levels required when called:   14
 35062 ;; This function calls:
 35063 ;;		_EUSART2_SetRxInterruptHandler
 35064 ;;		_EUSART2_SetTxInterruptHandler
 35065 ;; This function is called by:
 35066 ;;		_SYSTEM_Initialize
 35067 ;; This function uses a non-reentrant model
 35068 ;;
 35069                           
 35070                           	psect	text79
 35071  01A0CA                     __ptext79:
 35072                           	opt stack 0
 35073  01A0CA                     _EUSART2_Initialize:
 35074                           	opt stack 15
 35075                           
 35076                           ;eusart2.c: 83: PIE3bits.RC2IE = 0;
 35077                           
 35078                           ;incstack = 0
 35079  01A0CA  010E               	movlb	14	; () banked
 35080  01A0CC  9F2C               	bcf	44,7,b	;volatile
 35081                           
 35082                           ; BSR set to: 14
 35083                           ;eusart2.c: 84: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 35084  01A0CE  0E60               	movlw	low _EUSART2_Receive_ISR
 35085  01A0D0  0101               	movlb	1	; () banked
 35086  01A0D2  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 35087  01A0D4  0E95               	movlw	high _EUSART2_Receive_ISR
 35088  01A0D6  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 35089  01A0D8  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 35090  01A0DA  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 35091  01A0DC  ECFA  F0D8         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 35092                           
 35093                           ;eusart2.c: 85: PIE3bits.TX2IE = 0;
 35094  01A0E0  010E               	movlb	14	; () banked
 35095  01A0E2  9D2C               	bcf	44,6,b	;volatile
 35096                           
 35097                           ;eusart2.c: 86: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 35098  01A0E4  0ECC               	movlw	low _EUSART2_Transmit_ISR
 35099  01A0E6  0101               	movlb	1	; () banked
 35100  01A0E8  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 35101  01A0EA  0EAB               	movlw	high _EUSART2_Transmit_ISR
 35102  01A0EC  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 35103  01A0EE  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 35104  01A0F0  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 35105  01A0F2  ECF3  F0D8         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 35106                           
 35107                           ;eusart2.c: 90: BAUD2CON = 0x08;
 35108  01A0F6  0E08               	movlw	8
 35109  01A0F8  010E               	movlb	14	; () banked
 35110  01A0FA  6FF7               	movwf	247,b	;volatile
 35111                           
 35112                           ; BSR set to: 14
 35113                           ;eusart2.c: 93: RC2STA = 0x90;
 35114  01A0FC  0E90               	movlw	144
 35115  01A0FE  6FF5               	movwf	245,b	;volatile
 35116                           
 35117                           ; BSR set to: 14
 35118                           ;eusart2.c: 96: TX2STA = 0x24;
 35119  01A100  0E24               	movlw	36
 35120  01A102  6FF6               	movwf	246,b	;volatile
 35121                           
 35122                           ; BSR set to: 14
 35123                           ;eusart2.c: 99: SP2BRGL = 0x8A;
 35124  01A104  0E8A               	movlw	138
 35125  01A106  6FF3               	movwf	243,b	;volatile
 35126                           
 35127                           ; BSR set to: 14
 35128                           ;eusart2.c: 102: SP2BRGH = 0x00;
 35129  01A108  0E00               	movlw	0
 35130  01A10A  6FF4               	movwf	244,b	;volatile
 35131                           
 35132                           ; BSR set to: 14
 35133                           ;eusart2.c: 106: eusart2TxHead = 0;
 35134  01A10C  0E00               	movlw	0
 35135  01A10E  0101               	movlb	1	; () banked
 35136  01A110  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 35137                           
 35138                           ; BSR set to: 1
 35139                           ;eusart2.c: 107: eusart2TxTail = 0;
 35140  01A112  0E00               	movlw	0
 35141  01A114  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 35142                           
 35143                           ; BSR set to: 1
 35144                           ;eusart2.c: 108: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 35145  01A116  0E80               	movlw	128
 35146  01A118  6FDF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 35147                           
 35148                           ; BSR set to: 1
 35149                           ;eusart2.c: 110: eusart2RxHead = 0;
 35150  01A11A  0E00               	movlw	0
 35151  01A11C  0100               	movlb	0	; () banked
 35152  01A11E  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 35153                           
 35154                           ; BSR set to: 0
 35155                           ;eusart2.c: 111: eusart2RxTail = 0;
 35156  01A120  0E00               	movlw	0
 35157  01A122  0101               	movlb	1	; () banked
 35158  01A124  6FDE               	movwf	_eusart2RxTail& (0+255),b	;volatile
 35159                           
 35160                           ; BSR set to: 1
 35161                           ;eusart2.c: 112: eusart2RxCount = 0;
 35162  01A126  0E00               	movlw	0
 35163  01A128  0102               	movlb	2	; () banked
 35164  01A12A  6F72               	movwf	_eusart2RxCount& (0+255),b	;volatile
 35165                           
 35166                           ; BSR set to: 2
 35167                           ;eusart2.c: 115: PIE3bits.RC2IE = 1;
 35168  01A12C  010E               	movlb	14	; () banked
 35169  01A12E  8F2C               	bsf	44,7,b	;volatile
 35170                           
 35171                           ; BSR set to: 14
 35172  01A130  0012               	return		;funcret
 35173  01A132                     __end_of_EUSART2_Initialize:
 35174                           	opt stack 0
 35175                           tosu	equ	0xFFF
 35176                           tosh	equ	0xFFE
 35177                           tosl	equ	0xFFD
 35178                           pclath	equ	0xFFA
 35179                           tblptru	equ	0xFF8
 35180                           tblptrh	equ	0xFF7
 35181                           tblptrl	equ	0xFF6
 35182                           tablat	equ	0xFF5
 35183                           prodh	equ	0xFF4
 35184                           prodl	equ	0xFF3
 35185                           intcon	equ	0xFF2
 35186                           indf0	equ	0xFEF
 35187                           postinc0	equ	0xFEE
 35188                           fsr0h	equ	0xFEA
 35189                           fsr0l	equ	0xFE9
 35190                           wreg	equ	0xFE8
 35191                           indf1	equ	0xFE7
 35192                           postdec1	equ	0xFE5
 35193                           plusw1	equ	0xFE3
 35194                           fsr1h	equ	0xFE2
 35195                           fsr1l	equ	0xFE1
 35196                           indf2	equ	0xFDF
 35197                           postinc2	equ	0xFDE
 35198                           postdec2	equ	0xFDD
 35199                           plusw2	equ	0xFDB
 35200                           fsr2h	equ	0xFDA
 35201                           fsr2l	equ	0xFD9
 35202                           status	equ	0xFD8
 35203                           
 35204 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 35205 ;; Defined at:
 35206 ;;		line 270 in file "mcc_generated_files/eusart2.c"
 35207 ;; Parameters:    Size  Location     Type
 35208 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 35209 ;;		 -> EUSART2_Transmit_ISR(1), 
 35210 ;; Auto vars:     Size  Location     Type
 35211 ;;		None
 35212 ;; Return value:  Size  Location     Type
 35213 ;;                  1    wreg      void 
 35214 ;; Registers used:
 35215 ;;		wreg, status,2, status,0
 35216 ;; Tracked objects:
 35217 ;;		On entry : 0/0
 35218 ;;		On exit  : 0/0
 35219 ;;		Unchanged: 0/0
 35220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35221 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35224 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35225 ;;Total ram usage:        3 bytes
 35226 ;; Hardware stack levels used:    1
 35227 ;; Hardware stack levels required when called:   13
 35228 ;; This function calls:
 35229 ;;		Nothing
 35230 ;; This function is called by:
 35231 ;;		_EUSART2_Initialize
 35232 ;; This function uses a non-reentrant model
 35233 ;;
 35234                           
 35235                           	psect	text80
 35236  01B1E6                     __ptext80:
 35237                           	opt stack 0
 35238  01B1E6                     _EUSART2_SetTxInterruptHandler:
 35239                           	opt stack 15
 35240                           
 35241                           ;eusart2.c: 271: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 35242                           
 35243                           ; BSR set to: 14
 35244                           ;incstack = 0
 35245  01B1E6  C117  F259         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 35246  01B1EA  C118  F25A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 35247  01B1EE  C119  F25B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 35248  01B1F2  0012               	return		;funcret
 35249  01B1F4                     __end_of_EUSART2_SetTxInterruptHandler:
 35250                           	opt stack 0
 35251                           tosu	equ	0xFFF
 35252                           tosh	equ	0xFFE
 35253                           tosl	equ	0xFFD
 35254                           pclath	equ	0xFFA
 35255                           tblptru	equ	0xFF8
 35256                           tblptrh	equ	0xFF7
 35257                           tblptrl	equ	0xFF6
 35258                           tablat	equ	0xFF5
 35259                           prodh	equ	0xFF4
 35260                           prodl	equ	0xFF3
 35261                           intcon	equ	0xFF2
 35262                           indf0	equ	0xFEF
 35263                           postinc0	equ	0xFEE
 35264                           fsr0h	equ	0xFEA
 35265                           fsr0l	equ	0xFE9
 35266                           wreg	equ	0xFE8
 35267                           indf1	equ	0xFE7
 35268                           postdec1	equ	0xFE5
 35269                           plusw1	equ	0xFE3
 35270                           fsr1h	equ	0xFE2
 35271                           fsr1l	equ	0xFE1
 35272                           indf2	equ	0xFDF
 35273                           postinc2	equ	0xFDE
 35274                           postdec2	equ	0xFDD
 35275                           plusw2	equ	0xFDB
 35276                           fsr2h	equ	0xFDA
 35277                           fsr2l	equ	0xFD9
 35278                           status	equ	0xFD8
 35279                           
 35280 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 35281 ;; Defined at:
 35282 ;;		line 274 in file "mcc_generated_files/eusart2.c"
 35283 ;; Parameters:    Size  Location     Type
 35284 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 35285 ;;		 -> EUSART2_Receive_ISR(1), 
 35286 ;; Auto vars:     Size  Location     Type
 35287 ;;		None
 35288 ;; Return value:  Size  Location     Type
 35289 ;;                  1    wreg      void 
 35290 ;; Registers used:
 35291 ;;		wreg, status,2, status,0
 35292 ;; Tracked objects:
 35293 ;;		On entry : 0/0
 35294 ;;		On exit  : 0/0
 35295 ;;		Unchanged: 0/0
 35296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35297 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35300 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35301 ;;Total ram usage:        3 bytes
 35302 ;; Hardware stack levels used:    1
 35303 ;; Hardware stack levels required when called:   13
 35304 ;; This function calls:
 35305 ;;		Nothing
 35306 ;; This function is called by:
 35307 ;;		_EUSART2_Initialize
 35308 ;; This function uses a non-reentrant model
 35309 ;;
 35310                           
 35311                           	psect	text81
 35312  01B1F4                     __ptext81:
 35313                           	opt stack 0
 35314  01B1F4                     _EUSART2_SetRxInterruptHandler:
 35315                           	opt stack 15
 35316                           
 35317                           ;eusart2.c: 275: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 35318                           
 35319                           ;incstack = 0
 35320  01B1F4  C117  F256         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 35321  01B1F8  C118  F257         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 35322  01B1FC  C119  F258         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 35323  01B200  0012               	return		;funcret
 35324  01B202                     __end_of_EUSART2_SetRxInterruptHandler:
 35325                           	opt stack 0
 35326                           tosu	equ	0xFFF
 35327                           tosh	equ	0xFFE
 35328                           tosl	equ	0xFFD
 35329                           pclath	equ	0xFFA
 35330                           tblptru	equ	0xFF8
 35331                           tblptrh	equ	0xFF7
 35332                           tblptrl	equ	0xFF6
 35333                           tablat	equ	0xFF5
 35334                           prodh	equ	0xFF4
 35335                           prodl	equ	0xFF3
 35336                           intcon	equ	0xFF2
 35337                           indf0	equ	0xFEF
 35338                           postinc0	equ	0xFEE
 35339                           fsr0h	equ	0xFEA
 35340                           fsr0l	equ	0xFE9
 35341                           wreg	equ	0xFE8
 35342                           indf1	equ	0xFE7
 35343                           postdec1	equ	0xFE5
 35344                           plusw1	equ	0xFE3
 35345                           fsr1h	equ	0xFE2
 35346                           fsr1l	equ	0xFE1
 35347                           indf2	equ	0xFDF
 35348                           postinc2	equ	0xFDE
 35349                           postdec2	equ	0xFDD
 35350                           plusw2	equ	0xFDB
 35351                           fsr2h	equ	0xFDA
 35352                           fsr2l	equ	0xFD9
 35353                           status	equ	0xFD8
 35354                           
 35355 ;; *************** function _ADCC_Initialize *****************
 35356 ;; Defined at:
 35357 ;;		line 63 in file "mcc_generated_files/adcc.c"
 35358 ;; Parameters:    Size  Location     Type
 35359 ;;		None
 35360 ;; Auto vars:     Size  Location     Type
 35361 ;;		None
 35362 ;; Return value:  Size  Location     Type
 35363 ;;                  1    wreg      void 
 35364 ;; Registers used:
 35365 ;;		wreg, status,2, status,0, cstack
 35366 ;; Tracked objects:
 35367 ;;		On entry : 0/0
 35368 ;;		On exit  : 0/0
 35369 ;;		Unchanged: 0/0
 35370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35375 ;;Total ram usage:        0 bytes
 35376 ;; Hardware stack levels used:    1
 35377 ;; Hardware stack levels required when called:   14
 35378 ;; This function calls:
 35379 ;;		_ADCC_SetADTIInterruptHandler
 35380 ;; This function is called by:
 35381 ;;		_SYSTEM_Initialize
 35382 ;; This function uses a non-reentrant model
 35383 ;;
 35384                           
 35385                           	psect	text82
 35386  019F90                     __ptext82:
 35387                           	opt stack 0
 35388  019F90                     _ADCC_Initialize:
 35389                           	opt stack 15
 35390                           
 35391                           ;adcc.c: 67: ADLTHL = 0x00;
 35392                           
 35393                           ;incstack = 0
 35394  019F90  0E00               	movlw	0
 35395  019F92  6E6A               	movwf	3946,c	;volatile
 35396                           
 35397                           ;adcc.c: 69: ADLTHH = 0x00;
 35398  019F94  0E00               	movlw	0
 35399  019F96  6E6B               	movwf	3947,c	;volatile
 35400                           
 35401                           ;adcc.c: 71: ADUTHL = 0x00;
 35402  019F98  0E00               	movlw	0
 35403  019F9A  6E6C               	movwf	3948,c	;volatile
 35404                           
 35405                           ;adcc.c: 73: ADUTHH = 0x00;
 35406  019F9C  0E00               	movlw	0
 35407  019F9E  6E6D               	movwf	3949,c	;volatile
 35408                           
 35409                           ;adcc.c: 75: ADSTPTL = 0x00;
 35410  019FA0  0E00               	movlw	0
 35411  019FA2  6E68               	movwf	3944,c	;volatile
 35412                           
 35413                           ;adcc.c: 77: ADSTPTH = 0x00;
 35414  019FA4  0E00               	movlw	0
 35415  019FA6  6E69               	movwf	3945,c	;volatile
 35416                           
 35417                           ;adcc.c: 79: ADRPT = 0xFF;
 35418  019FA8  6866               	setf	3942,c	;volatile
 35419                           
 35420                           ;adcc.c: 81: ADPCH = 0x00;
 35421  019FAA  0E00               	movlw	0
 35422  019FAC  010F               	movlb	15	; () banked
 35423  019FAE  6F5F               	movwf	95,b	;volatile
 35424                           
 35425                           ;adcc.c: 83: ADCAP = 0x00;
 35426  019FB0  0E00               	movlw	0
 35427  019FB2  6F5D               	movwf	93,b	;volatile
 35428                           
 35429                           ;adcc.c: 85: ADCON1 = 0x00;
 35430  019FB4  0E00               	movlw	0
 35431  019FB6  6F59               	movwf	89,b	;volatile
 35432                           
 35433                           ;adcc.c: 87: ADCON2 = 0x04;
 35434  019FB8  0E04               	movlw	4
 35435  019FBA  6F5A               	movwf	90,b	;volatile
 35436                           
 35437                           ;adcc.c: 89: ADCON3 = 0x5F;
 35438  019FBC  0E5F               	movlw	95
 35439  019FBE  6F5B               	movwf	91,b	;volatile
 35440                           
 35441                           ;adcc.c: 91: ADSTAT = 0x00;
 35442  019FC0  0E00               	movlw	0
 35443  019FC2  6E65               	movwf	3941,c	;volatile
 35444                           
 35445                           ;adcc.c: 93: ADREF = 0x12;
 35446  019FC4  0E12               	movlw	18
 35447  019FC6  6F58               	movwf	88,b	;volatile
 35448                           
 35449                           ;adcc.c: 95: ADACT = 0x00;
 35450  019FC8  0E00               	movlw	0
 35451  019FCA  6F56               	movwf	86,b	;volatile
 35452                           
 35453                           ;adcc.c: 97: ADCLK = 0x1F;
 35454  019FCC  0E1F               	movlw	31
 35455  019FCE  6F57               	movwf	87,b	;volatile
 35456                           
 35457                           ;adcc.c: 99: ADCON0 = 0xC4;
 35458  019FD0  0EC4               	movlw	196
 35459  019FD2  6E60               	movwf	3936,c	;volatile
 35460                           
 35461                           ; BSR set to: 15
 35462                           ;adcc.c: 101: ADACQ = 0xFF;
 35463  019FD4  695C               	setf	92,b	;volatile
 35464                           
 35465                           ; BSR set to: 15
 35466                           ;adcc.c: 104: ADCON2bits.ADCRS = 7;
 35467  019FD6  895A               	bsf	90,4,b	;volatile
 35468  019FD8  8B5A               	bsf	90,5,b	;volatile
 35469  019FDA  8D5A               	bsf	90,6,b	;volatile
 35470                           
 35471                           ;adcc.c: 105: ADCAP = 20;
 35472  019FDC  0E14               	movlw	20
 35473  019FDE  6F5D               	movwf	93,b	;volatile
 35474                           
 35475                           ; BSR set to: 15
 35476                           ;adcc.c: 108: PIR1bits.ADTIF = 0;
 35477  019FE0  010E               	movlb	14	; () banked
 35478  019FE2  9334               	bcf	52,1,b	;volatile
 35479                           
 35480                           ; BSR set to: 14
 35481                           ;adcc.c: 110: PIE1bits.ADTIE = 1;
 35482  019FE4  832A               	bsf	42,1,b	;volatile
 35483                           
 35484                           ; BSR set to: 14
 35485                           ;adcc.c: 112: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 35486  019FE6  0E94               	movlw	low _ADCC_DefaultInterruptHandler
 35487  019FE8  0101               	movlb	1	; () banked
 35488  019FEA  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 35489  019FEC  0EB2               	movlw	high _ADCC_DefaultInterruptHandler
 35490  019FEE  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 35491  019FF0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35492  019FF2  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 35493  019FF4  EC01  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35494  019FF8  0012               	return		;funcret
 35495  019FFA                     __end_of_ADCC_Initialize:
 35496                           	opt stack 0
 35497                           tosu	equ	0xFFF
 35498                           tosh	equ	0xFFE
 35499                           tosl	equ	0xFFD
 35500                           pclath	equ	0xFFA
 35501                           tblptru	equ	0xFF8
 35502                           tblptrh	equ	0xFF7
 35503                           tblptrl	equ	0xFF6
 35504                           tablat	equ	0xFF5
 35505                           prodh	equ	0xFF4
 35506                           prodl	equ	0xFF3
 35507                           intcon	equ	0xFF2
 35508                           indf0	equ	0xFEF
 35509                           postinc0	equ	0xFEE
 35510                           fsr0h	equ	0xFEA
 35511                           fsr0l	equ	0xFE9
 35512                           wreg	equ	0xFE8
 35513                           indf1	equ	0xFE7
 35514                           postdec1	equ	0xFE5
 35515                           plusw1	equ	0xFE3
 35516                           fsr1h	equ	0xFE2
 35517                           fsr1l	equ	0xFE1
 35518                           indf2	equ	0xFDF
 35519                           postinc2	equ	0xFDE
 35520                           postdec2	equ	0xFDD
 35521                           plusw2	equ	0xFDB
 35522                           fsr2h	equ	0xFDA
 35523                           fsr2l	equ	0xFD9
 35524                           status	equ	0xFD8
 35525                           
 35526 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35527 ;; Defined at:
 35528 ;;		line 310 in file "mcc_generated_files/adcc.c"
 35529 ;; Parameters:    Size  Location     Type
 35530 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 35531 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 35532 ;; Auto vars:     Size  Location     Type
 35533 ;;		None
 35534 ;; Return value:  Size  Location     Type
 35535 ;;                  1    wreg      void 
 35536 ;; Registers used:
 35537 ;;		wreg, status,2, status,0
 35538 ;; Tracked objects:
 35539 ;;		On entry : 0/0
 35540 ;;		On exit  : 0/0
 35541 ;;		Unchanged: 0/0
 35542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35543 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35546 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35547 ;;Total ram usage:        3 bytes
 35548 ;; Hardware stack levels used:    1
 35549 ;; Hardware stack levels required when called:   13
 35550 ;; This function calls:
 35551 ;;		Nothing
 35552 ;; This function is called by:
 35553 ;;		_ADCC_Initialize
 35554 ;;		_main
 35555 ;; This function uses a non-reentrant model
 35556 ;;
 35557                           
 35558                           	psect	text83
 35559  01B202                     __ptext83:
 35560                           	opt stack 0
 35561  01B202                     _ADCC_SetADTIInterruptHandler:
 35562                           	opt stack 15
 35563                           
 35564                           ;adcc.c: 311: ADCC_ADTI_InterruptHandler = InterruptHandler;
 35565                           
 35566                           ;incstack = 0
 35567  01B202  C117  F250         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 35568  01B206  C118  F251         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 35569  01B20A  C119  F252         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 35570  01B20E  0012               	return		;funcret
 35571  01B210                     __end_of_ADCC_SetADTIInterruptHandler:
 35572                           	opt stack 0
 35573                           tosu	equ	0xFFF
 35574                           tosh	equ	0xFFE
 35575                           tosl	equ	0xFFD
 35576                           pclath	equ	0xFFA
 35577                           tblptru	equ	0xFF8
 35578                           tblptrh	equ	0xFF7
 35579                           tblptrl	equ	0xFF6
 35580                           tablat	equ	0xFF5
 35581                           prodh	equ	0xFF4
 35582                           prodl	equ	0xFF3
 35583                           intcon	equ	0xFF2
 35584                           indf0	equ	0xFEF
 35585                           postinc0	equ	0xFEE
 35586                           fsr0h	equ	0xFEA
 35587                           fsr0l	equ	0xFE9
 35588                           wreg	equ	0xFE8
 35589                           indf1	equ	0xFE7
 35590                           postdec1	equ	0xFE5
 35591                           plusw1	equ	0xFE3
 35592                           fsr1h	equ	0xFE2
 35593                           fsr1l	equ	0xFE1
 35594                           indf2	equ	0xFDF
 35595                           postinc2	equ	0xFDE
 35596                           postdec2	equ	0xFDD
 35597                           plusw2	equ	0xFDB
 35598                           fsr2h	equ	0xFDA
 35599                           fsr2l	equ	0xFD9
 35600                           status	equ	0xFD8
 35601                           
 35602 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 35603 ;; Defined at:
 35604 ;;		line 301 in file "oled.c"
 35605 ;; Parameters:    Size  Location     Type
 35606 ;;		None
 35607 ;; Auto vars:     Size  Location     Type
 35608 ;;		None
 35609 ;; Return value:  Size  Location     Type
 35610 ;;                  1    wreg      void 
 35611 ;; Registers used:
 35612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35613 ;; Tracked objects:
 35614 ;;		On entry : 0/0
 35615 ;;		On exit  : 0/0
 35616 ;;		Unchanged: 0/0
 35617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35622 ;;Total ram usage:        0 bytes
 35623 ;; Hardware stack levels used:    1
 35624 ;; Hardware stack levels required when called:   18
 35625 ;; This function calls:
 35626 ;;		_OLED_Clear
 35627 ;;		_OLED_WriteString
 35628 ;;		_OLED_YX
 35629 ;; This function is called by:
 35630 ;;		_main
 35631 ;; This function uses a non-reentrant model
 35632 ;;
 35633                           
 35634                           	psect	text84
 35635  019EB4                     __ptext84:
 35636                           	opt stack 0
 35637  019EB4                     _OLED_UpdateFromRAMBuffer:
 35638                           	opt stack 12
 35639                           
 35640                           ;oled.c: 303: OLED_Clear();
 35641                           
 35642                           ;incstack = 0
 35643  019EB4  EC29  F0D4         	call	_OLED_Clear	;wreg free
 35644                           
 35645                           ;oled.c: 304: OLED_YX(0,0);
 35646  019EB8  0E00               	movlw	0
 35647  019EBA  0101               	movlb	1	; () banked
 35648  019EBC  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35649  019EBE  0E00               	movlw	0
 35650  019EC0  ECE4  F0D4         	call	_OLED_YX
 35651                           
 35652                           ;oled.c: 305: OLED_WriteString(OLED_RAM_Buffer.line0);
 35653  019EC4  0E40               	movlw	low _OLED_RAM_Buffer
 35654  019EC6  0101               	movlb	1	; () banked
 35655  019EC8  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35656  019ECA  0E03               	movlw	high _OLED_RAM_Buffer
 35657  019ECC  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35658  019ECE  EC28  F0D1         	call	_OLED_WriteString	;wreg free
 35659                           
 35660                           ;oled.c: 306: OLED_YX(1,0);
 35661  019ED2  0E00               	movlw	0
 35662  019ED4  0101               	movlb	1	; () banked
 35663  019ED6  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35664  019ED8  0E01               	movlw	1
 35665  019EDA  ECE4  F0D4         	call	_OLED_YX
 35666                           
 35667                           ;oled.c: 307: OLED_WriteString(OLED_RAM_Buffer.line1);
 35668  019EDE  0E50               	movlw	low (_OLED_RAM_Buffer+16)
 35669  019EE0  0101               	movlb	1	; () banked
 35670  019EE2  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35671  019EE4  0E03               	movlw	high (_OLED_RAM_Buffer+16)
 35672  019EE6  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35673  019EE8  EC28  F0D1         	call	_OLED_WriteString	;wreg free
 35674                           
 35675                           ;oled.c: 308: OLED_YX(2,0);
 35676  019EEC  0E00               	movlw	0
 35677  019EEE  0101               	movlb	1	; () banked
 35678  019EF0  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35679  019EF2  0E02               	movlw	2
 35680  019EF4  ECE4  F0D4         	call	_OLED_YX
 35681                           
 35682                           ;oled.c: 309: OLED_WriteString(OLED_RAM_Buffer.line2);
 35683  019EF8  0E60               	movlw	low (_OLED_RAM_Buffer+32)
 35684  019EFA  0101               	movlb	1	; () banked
 35685  019EFC  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35686  019EFE  0E03               	movlw	high (_OLED_RAM_Buffer+32)
 35687  019F00  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35688  019F02  EC28  F0D1         	call	_OLED_WriteString	;wreg free
 35689                           
 35690                           ;oled.c: 310: OLED_YX(3,0);
 35691  019F06  0E00               	movlw	0
 35692  019F08  0101               	movlb	1	; () banked
 35693  019F0A  6F2B               	movwf	OLED_YX@Column& (0+255),b
 35694  019F0C  0E03               	movlw	3
 35695  019F0E  ECE4  F0D4         	call	_OLED_YX
 35696                           
 35697                           ;oled.c: 311: OLED_WriteString(OLED_RAM_Buffer.line3);
 35698  019F12  0E70               	movlw	low (_OLED_RAM_Buffer+48)
 35699  019F14  0101               	movlb	1	; () banked
 35700  019F16  6F38               	movwf	OLED_WriteString@s& (0+255),b
 35701  019F18  0E03               	movlw	high (_OLED_RAM_Buffer+48)
 35702  019F1A  6F39               	movwf	(OLED_WriteString@s+1)& (0+255),b
 35703  019F1C  EC28  F0D1         	call	_OLED_WriteString	;wreg free
 35704  019F20  0012               	return		;funcret
 35705  019F22                     __end_of_OLED_UpdateFromRAMBuffer:
 35706                           	opt stack 0
 35707                           tosu	equ	0xFFF
 35708                           tosh	equ	0xFFE
 35709                           tosl	equ	0xFFD
 35710                           pclath	equ	0xFFA
 35711                           tblptru	equ	0xFF8
 35712                           tblptrh	equ	0xFF7
 35713                           tblptrl	equ	0xFF6
 35714                           tablat	equ	0xFF5
 35715                           prodh	equ	0xFF4
 35716                           prodl	equ	0xFF3
 35717                           intcon	equ	0xFF2
 35718                           indf0	equ	0xFEF
 35719                           postinc0	equ	0xFEE
 35720                           fsr0h	equ	0xFEA
 35721                           fsr0l	equ	0xFE9
 35722                           wreg	equ	0xFE8
 35723                           indf1	equ	0xFE7
 35724                           postdec1	equ	0xFE5
 35725                           plusw1	equ	0xFE3
 35726                           fsr1h	equ	0xFE2
 35727                           fsr1l	equ	0xFE1
 35728                           indf2	equ	0xFDF
 35729                           postinc2	equ	0xFDE
 35730                           postdec2	equ	0xFDD
 35731                           plusw2	equ	0xFDB
 35732                           fsr2h	equ	0xFDA
 35733                           fsr2l	equ	0xFD9
 35734                           status	equ	0xFD8
 35735                           
 35736 ;; *************** function _OLED_YX *****************
 35737 ;; Defined at:
 35738 ;;		line 212 in file "oled.c"
 35739 ;; Parameters:    Size  Location     Type
 35740 ;;  Row             1    wreg     unsigned char 
 35741 ;;  Column          1   43[BANK1 ] unsigned char 
 35742 ;; Auto vars:     Size  Location     Type
 35743 ;;  Row             1   45[BANK1 ] unsigned char 
 35744 ;; Return value:  Size  Location     Type
 35745 ;;                  1    wreg      void 
 35746 ;; Registers used:
 35747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35748 ;; Tracked objects:
 35749 ;;		On entry : 0/0
 35750 ;;		On exit  : 0/0
 35751 ;;		Unchanged: 0/0
 35752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35753 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35754 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35755 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35756 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35757 ;;Total ram usage:        3 bytes
 35758 ;; Hardware stack levels used:    1
 35759 ;; Hardware stack levels required when called:   17
 35760 ;; This function calls:
 35761 ;;		_OLED_Command
 35762 ;; This function is called by:
 35763 ;;		_OLED_UpdateFromRAMBuffer
 35764 ;; This function uses a non-reentrant model
 35765 ;;
 35766                           
 35767                           	psect	text85
 35768  01A9C8                     __ptext85:
 35769                           	opt stack 0
 35770  01A9C8                     _OLED_YX:
 35771                           	opt stack 12
 35772                           
 35773                           ;incstack = 0
 35774                           ;OLED_YX@Row stored from wreg
 35775  01A9C8  0101               	movlb	1	; () banked
 35776  01A9CA  6F2D               	movwf	OLED_YX@Row& (0+255),b
 35777                           
 35778                           ;oled.c: 214: OLED_Command(0xB0 + Row);
 35779  01A9CC  0101               	movlb	1	; () banked
 35780  01A9CE  512D               	movf	OLED_YX@Row& (0+255),w,b
 35781  01A9D0  0FB0               	addlw	176
 35782  01A9D2  EC56  F0D3         	call	_OLED_Command
 35783                           
 35784                           ;oled.c: 216: OLED_Command(0x00 + (8 * Column & 0x0F));
 35785  01A9D6  0101               	movlb	1	; () banked
 35786  01A9D8  512B               	movf	OLED_YX@Column& (0+255),w,b
 35787  01A9DA  0D08               	mullw	8
 35788  01A9DC  50F3               	movf	prodl,w,c
 35789  01A9DE  0B0F               	andlw	15
 35790  01A9E0  EC56  F0D3         	call	_OLED_Command
 35791                           
 35792                           ;oled.c: 218: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 35793  01A9E4  0101               	movlb	1	; () banked
 35794  01A9E6  512B               	movf	OLED_YX@Column& (0+255),w,b
 35795  01A9E8  0D08               	mullw	8
 35796  01A9EA  0E04               	movlw	4
 35797  01A9EC  6F2C               	movwf	??_OLED_YX& (0+255),b
 35798  01A9EE                     u23335:
 35799  01A9EE  34F4               	rlcf	prodh,w,c
 35800  01A9F0  32F4               	rrcf	prodh,f,c
 35801  01A9F2  32F3               	rrcf	prodl,f,c
 35802  01A9F4  2F2C               	decfsz	??_OLED_YX& (0+255),f,b
 35803  01A9F6  D7FB               	goto	u23335
 35804  01A9F8  50F3               	movf	prodl,w,c
 35805  01A9FA  0B0F               	andlw	15
 35806  01A9FC  0F10               	addlw	16
 35807  01A9FE  EC56  F0D3         	call	_OLED_Command
 35808  01AA02  0012               	return		;funcret
 35809  01AA04                     __end_of_OLED_YX:
 35810                           	opt stack 0
 35811                           tosu	equ	0xFFF
 35812                           tosh	equ	0xFFE
 35813                           tosl	equ	0xFFD
 35814                           pclath	equ	0xFFA
 35815                           tblptru	equ	0xFF8
 35816                           tblptrh	equ	0xFF7
 35817                           tblptrl	equ	0xFF6
 35818                           tablat	equ	0xFF5
 35819                           prodh	equ	0xFF4
 35820                           prodl	equ	0xFF3
 35821                           intcon	equ	0xFF2
 35822                           indf0	equ	0xFEF
 35823                           postinc0	equ	0xFEE
 35824                           fsr0h	equ	0xFEA
 35825                           fsr0l	equ	0xFE9
 35826                           wreg	equ	0xFE8
 35827                           indf1	equ	0xFE7
 35828                           postdec1	equ	0xFE5
 35829                           plusw1	equ	0xFE3
 35830                           fsr1h	equ	0xFE2
 35831                           fsr1l	equ	0xFE1
 35832                           indf2	equ	0xFDF
 35833                           postinc2	equ	0xFDE
 35834                           postdec2	equ	0xFDD
 35835                           plusw2	equ	0xFDB
 35836                           fsr2h	equ	0xFDA
 35837                           fsr2l	equ	0xFD9
 35838                           status	equ	0xFD8
 35839                           
 35840 ;; *************** function _OLED_WriteString *****************
 35841 ;; Defined at:
 35842 ;;		line 269 in file "oled.c"
 35843 ;; Parameters:    Size  Location     Type
 35844 ;;  s               2   56[BANK1 ] PTR unsigned char 
 35845 ;;		 -> ftoa@buf(17), STR_190(1), STR_189(1), OLED_WriteInteger@s(20), 
 35846 ;;		 -> OLED_RAM_Buffer(64), 
 35847 ;; Auto vars:     Size  Location     Type
 35848 ;;		None
 35849 ;; Return value:  Size  Location     Type
 35850 ;;                  1    wreg      void 
 35851 ;; Registers used:
 35852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35853 ;; Tracked objects:
 35854 ;;		On entry : 0/0
 35855 ;;		On exit  : 0/0
 35856 ;;		Unchanged: 0/0
 35857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35858 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35861 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35862 ;;Total ram usage:        2 bytes
 35863 ;; Hardware stack levels used:    1
 35864 ;; Hardware stack levels required when called:   17
 35865 ;; This function calls:
 35866 ;;		_OLED_PutChar
 35867 ;; This function is called by:
 35868 ;;		_OLED_UpdateFromRAMBuffer
 35869 ;;		_OLED_WriteInteger
 35870 ;;		_OLED_WriteFloat
 35871 ;; This function uses a non-reentrant model
 35872 ;;
 35873                           
 35874                           	psect	text86
 35875  01A250                     __ptext86:
 35876                           	opt stack 0
 35877  01A250                     _OLED_WriteString:
 35878                           	opt stack 12
 35879                           
 35880                           ;oled.c: 271: while(*s) {
 35881                           
 35882                           ;incstack = 0
 35883  01A250  D016               	goto	l1709
 35884  01A252                     
 35885                           ;oled.c: 273: OLED_PutChar(*s++);
 35886  01A252  C138  FFF6         	movff	OLED_WriteString@s,tblptrl
 35887  01A256  C139  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 35888  01A25A  0E00               	movlw	low (__mediumconst shr (0+16))
 35889  01A25C  6EF8               	movwf	tblptru,c
 35890  01A25E  0E0D               	movlw	(high __ramtop+-1)
 35891  01A260  64F7               	cpfsgt	tblptrh,c
 35892  01A262  D003               	bra	u23387
 35893  01A264  0008               	tblrd		*
 35894  01A266  50F5               	movf	tablat,w,c
 35895  01A268  D005               	bra	u23380
 35896  01A26A                     u23387:
 35897  01A26A  CFF6 FFE9          	movff	tblptrl,fsr0l
 35898  01A26E  CFF7 FFEA          	movff	tblptrh,fsr0h
 35899  01A272  50EF               	movf	indf0,w,c
 35900  01A274                     u23380:
 35901  01A274  EC5F  F0CB         	call	_OLED_PutChar
 35902  01A278  0101               	movlb	1	; () banked
 35903  01A27A  4B38               	infsnz	OLED_WriteString@s& (0+255),f,b
 35904  01A27C  2B39               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 35905  01A27E                     l1709:
 35906                           
 35907                           ; BSR set to: 1
 35908  01A27E  C138  FFF6         	movff	OLED_WriteString@s,tblptrl
 35909  01A282  C139  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 35910  01A286  0E00               	movlw	low (__mediumconst shr (0+16))
 35911  01A288  6EF8               	movwf	tblptru,c
 35912  01A28A  0E0D               	movlw	(high __ramtop+-1)
 35913  01A28C  64F7               	cpfsgt	tblptrh,c
 35914  01A28E  D003               	bra	u23397
 35915  01A290  0008               	tblrd		*
 35916  01A292  50F5               	movf	tablat,w,c
 35917  01A294  D005               	bra	u23390
 35918  01A296                     u23397:
 35919  01A296  CFF6 FFE9          	movff	tblptrl,fsr0l
 35920  01A29A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35921  01A29E  50EF               	movf	indf0,w,c
 35922  01A2A0                     u23390:
 35923  01A2A0  0900               	iorlw	0
 35924  01A2A2  B4D8               	btfsc	status,2,c
 35925  01A2A4  0012               	return	
 35926  01A2A6  D7D5               	goto	l1710
 35927  01A2A8                     __end_of_OLED_WriteString:
 35928                           	opt stack 0
 35929                           tosu	equ	0xFFF
 35930                           tosh	equ	0xFFE
 35931                           tosl	equ	0xFFD
 35932                           pclath	equ	0xFFA
 35933                           tblptru	equ	0xFF8
 35934                           tblptrh	equ	0xFF7
 35935                           tblptrl	equ	0xFF6
 35936                           tablat	equ	0xFF5
 35937                           prodh	equ	0xFF4
 35938                           prodl	equ	0xFF3
 35939                           intcon	equ	0xFF2
 35940                           indf0	equ	0xFEF
 35941                           postinc0	equ	0xFEE
 35942                           fsr0h	equ	0xFEA
 35943                           fsr0l	equ	0xFE9
 35944                           wreg	equ	0xFE8
 35945                           indf1	equ	0xFE7
 35946                           postdec1	equ	0xFE5
 35947                           plusw1	equ	0xFE3
 35948                           fsr1h	equ	0xFE2
 35949                           fsr1l	equ	0xFE1
 35950                           indf2	equ	0xFDF
 35951                           postinc2	equ	0xFDE
 35952                           postdec2	equ	0xFDD
 35953                           plusw2	equ	0xFDB
 35954                           fsr2h	equ	0xFDA
 35955                           fsr2l	equ	0xFD9
 35956                           status	equ	0xFD8
 35957                           
 35958 ;; *************** function _OLED_Clear *****************
 35959 ;; Defined at:
 35960 ;;		line 254 in file "oled.c"
 35961 ;; Parameters:    Size  Location     Type
 35962 ;;		None
 35963 ;; Auto vars:     Size  Location     Type
 35964 ;;  col             2   58[BANK1 ] unsigned int 
 35965 ;;  row             2   56[BANK1 ] unsigned int 
 35966 ;; Return value:  Size  Location     Type
 35967 ;;                  1    wreg      void 
 35968 ;; Registers used:
 35969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35970 ;; Tracked objects:
 35971 ;;		On entry : 0/0
 35972 ;;		On exit  : 0/0
 35973 ;;		Unchanged: 0/0
 35974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35976 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35978 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35979 ;;Total ram usage:        4 bytes
 35980 ;; Hardware stack levels used:    1
 35981 ;; Hardware stack levels required when called:   17
 35982 ;; This function calls:
 35983 ;;		_OLED_PutChar
 35984 ;; This function is called by:
 35985 ;;		_OLED_UpdateFromRAMBuffer
 35986 ;; This function uses a non-reentrant model
 35987 ;;
 35988                           
 35989                           	psect	text87
 35990  01A852                     __ptext87:
 35991                           	opt stack 0
 35992  01A852                     _OLED_Clear:
 35993                           	opt stack 12
 35994                           
 35995                           ;oled.c: 256: for(uint16_t row = 0; row < 8; row++) {
 35996                           
 35997                           ;incstack = 0
 35998  01A852  0E00               	movlw	0
 35999  01A854  0101               	movlb	1	; () banked
 36000  01A856  6F39               	movwf	(OLED_Clear@row+1)& (0+255),b
 36001  01A858  0E00               	movlw	0
 36002  01A85A  6F38               	movwf	OLED_Clear@row& (0+255),b
 36003  01A85C                     l17737:
 36004                           
 36005                           ; BSR set to: 1
 36006  01A85C  5139               	movf	(OLED_Clear@row+1)& (0+255),w,b
 36007  01A85E  E118               	bnz	l1706
 36008  01A860  0E08               	movlw	8
 36009  01A862  5D38               	subwf	OLED_Clear@row& (0+255),w,b
 36010  01A864  B0D8               	btfsc	status,0,c
 36011  01A866  0012               	return	
 36012                           
 36013                           ; BSR set to: 1
 36014                           ;oled.c: 258: for(uint16_t col = 0; col < 16; col++) {
 36015                           
 36016                           ; BSR set to: 1
 36017                           
 36018                           ; BSR set to: 1
 36019  01A868  0E00               	movlw	0
 36020  01A86A  6F3B               	movwf	(OLED_Clear@col+1)& (0+255),b
 36021  01A86C  0E00               	movlw	0
 36022  01A86E  6F3A               	movwf	OLED_Clear@col& (0+255),b
 36023  01A870                     l17743:
 36024                           
 36025                           ; BSR set to: 1
 36026  01A870  513B               	movf	(OLED_Clear@col+1)& (0+255),w,b
 36027  01A872  E10B               	bnz	l17753
 36028  01A874  0E10               	movlw	16
 36029  01A876  5D3A               	subwf	OLED_Clear@col& (0+255),w,b
 36030  01A878  B0D8               	btfsc	status,0,c
 36031  01A87A  D007               	goto	u23360
 36032                           
 36033                           ; BSR set to: 1
 36034                           ;oled.c: 260: OLED_PutChar('\0');
 36035                           
 36036                           ; BSR set to: 1
 36037                           
 36038                           ; BSR set to: 1
 36039  01A87C  0E00               	movlw	0
 36040  01A87E  EC5F  F0CB         	call	_OLED_PutChar
 36041  01A882  0101               	movlb	1	; () banked
 36042  01A884  4B3A               	infsnz	OLED_Clear@col& (0+255),f,b
 36043  01A886  2B3B               	incf	(OLED_Clear@col+1)& (0+255),f,b
 36044  01A888  D7F3               	goto	l17743
 36045  01A88A                     u23360:
 36046  01A88A                     l17753:
 36047                           
 36048                           ; BSR set to: 1
 36049  01A88A  4B38               	infsnz	OLED_Clear@row& (0+255),f,b
 36050  01A88C  2B39               	incf	(OLED_Clear@row+1)& (0+255),f,b
 36051  01A88E  D7E6               	goto	l17737
 36052  01A890                     l1706:
 36053                           
 36054                           ; BSR set to: 1
 36055  01A890  0012               	return		;funcret
 36056  01A892                     __end_of_OLED_Clear:
 36057                           	opt stack 0
 36058                           tosu	equ	0xFFF
 36059                           tosh	equ	0xFFE
 36060                           tosl	equ	0xFFD
 36061                           pclath	equ	0xFFA
 36062                           tblptru	equ	0xFF8
 36063                           tblptrh	equ	0xFF7
 36064                           tblptrl	equ	0xFF6
 36065                           tablat	equ	0xFF5
 36066                           prodh	equ	0xFF4
 36067                           prodl	equ	0xFF3
 36068                           intcon	equ	0xFF2
 36069                           indf0	equ	0xFEF
 36070                           postinc0	equ	0xFEE
 36071                           fsr0h	equ	0xFEA
 36072                           fsr0l	equ	0xFE9
 36073                           wreg	equ	0xFE8
 36074                           indf1	equ	0xFE7
 36075                           postdec1	equ	0xFE5
 36076                           plusw1	equ	0xFE3
 36077                           fsr1h	equ	0xFE2
 36078                           fsr1l	equ	0xFE1
 36079                           indf2	equ	0xFDF
 36080                           postinc2	equ	0xFDE
 36081                           postdec2	equ	0xFDD
 36082                           plusw2	equ	0xFDB
 36083                           fsr2h	equ	0xFDA
 36084                           fsr2l	equ	0xFD9
 36085                           status	equ	0xFD8
 36086                           
 36087 ;; *************** function _OLED_PutChar *****************
 36088 ;; Defined at:
 36089 ;;		line 223 in file "oled.c"
 36090 ;; Parameters:    Size  Location     Type
 36091 ;;  ch              1    wreg     unsigned char 
 36092 ;; Auto vars:     Size  Location     Type
 36093 ;;  ch              1   55[BANK1 ] unsigned char 
 36094 ;;  data_array      9   43[BANK1 ] unsigned char [9]
 36095 ;;  input_base      2   52[BANK1 ] PTR const unsigned char 
 36096 ;;		 -> OledFont(768), 
 36097 ;;  length          1   54[BANK1 ] unsigned char 
 36098 ;; Return value:  Size  Location     Type
 36099 ;;                  1    wreg      void 
 36100 ;; Registers used:
 36101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36102 ;; Tracked objects:
 36103 ;;		On entry : 0/0
 36104 ;;		On exit  : 0/0
 36105 ;;		Unchanged: 0/0
 36106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36108 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36109 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36110 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36111 ;;Total ram usage:       17 bytes
 36112 ;; Hardware stack levels used:    1
 36113 ;; Hardware stack levels required when called:   16
 36114 ;; This function calls:
 36115 ;;		_I2C1_MasterWrite
 36116 ;;		_memmove
 36117 ;; This function is called by:
 36118 ;;		_OLED_Clear
 36119 ;;		_OLED_WriteString
 36120 ;; This function uses a non-reentrant model
 36121 ;;
 36122                           
 36123                           	psect	text88
 36124  0196BE                     __ptext88:
 36125                           	opt stack 0
 36126  0196BE                     _OLED_PutChar:
 36127                           	opt stack 12
 36128                           
 36129                           ; BSR set to: 1
 36130                           ;incstack = 0
 36131                           ;OLED_PutChar@ch stored from wreg
 36132  0196BE  0101               	movlb	1	; () banked
 36133  0196C0  6F37               	movwf	OLED_PutChar@ch& (0+255),b
 36134                           
 36135                           ;oled.c: 225: if((ch < 32) || (ch > 127)) {
 36136  0196C2  0E1F               	movlw	31
 36137  0196C4  0101               	movlb	1	; () banked
 36138  0196C6  6537               	cpfsgt	OLED_PutChar@ch& (0+255),b
 36139  0196C8  D003               	goto	u20990
 36140                           
 36141                           ; BSR set to: 1
 36142  0196CA  0E7F               	movlw	127
 36143  0196CC  6537               	cpfsgt	OLED_PutChar@ch& (0+255),b
 36144  0196CE  D002               	goto	l1692
 36145  0196D0                     u20990:
 36146                           
 36147                           ; BSR set to: 1
 36148                           ;oled.c: 227: ch = ' ';
 36149                           
 36150                           ; BSR set to: 1
 36151  0196D0  0E20               	movlw	32
 36152  0196D2  6F37               	movwf	OLED_PutChar@ch& (0+255),b
 36153  0196D4                     l1692:
 36154                           
 36155                           ; BSR set to: 1
 36156                           ;oled.c: 229: }
 36157                           ;oled.c: 231: uint8_t length;
 36158                           ;oled.c: 233: uint8_t data_array[9];
 36159                           ;oled.c: 235: data_array[0] = 0x40;
 36160  0196D4  0E40               	movlw	64
 36161  0196D6  6F2B               	movwf	OLED_PutChar@data_array& (0+255),b
 36162                           
 36163                           ; BSR set to: 1
 36164                           ;oled.c: 237: const uint8_t *input_base = &OledFont[ch - 32][0];
 36165  0196D8  0E00               	movlw	0
 36166  0196DA  6F27               	movwf	??_OLED_PutChar& (0+255),b
 36167  0196DC  0EFF               	movlw	255
 36168  0196DE  6F28               	movwf	(??_OLED_PutChar+1)& (0+255),b
 36169  0196E0  5137               	movf	OLED_PutChar@ch& (0+255),w,b
 36170  0196E2  6F29               	movwf	(??_OLED_PutChar+2)& (0+255),b
 36171  0196E4  6B2A               	clrf	(??_OLED_PutChar+3)& (0+255),b
 36172  0196E6  90D8               	bcf	status,0,c
 36173  0196E8  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36174  0196EA  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36175  0196EC  90D8               	bcf	status,0,c
 36176  0196EE  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36177  0196F0  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36178  0196F2  90D8               	bcf	status,0,c
 36179  0196F4  3729               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 36180  0196F6  372A               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 36181  0196F8  5127               	movf	??_OLED_PutChar& (0+255),w,b
 36182  0196FA  2729               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 36183  0196FC  5128               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 36184  0196FE  232A               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 36185  019700  0E61               	movlw	low _OledFont
 36186  019702  2529               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 36187  019704  6F34               	movwf	OLED_PutChar@input_base& (0+255),b
 36188  019706  0ECF               	movlw	high _OledFont
 36189  019708  212A               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 36190  01970A  6F35               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 36191                           
 36192                           ; BSR set to: 1
 36193                           ;oled.c: 239: memmove(data_array + 1, input_base, 8);
 36194  01970C  0E2C               	movlw	low (OLED_PutChar@data_array+1)
 36195  01970E  6F17               	movwf	memmove@d1& (0+255),b
 36196  019710  0E01               	movlw	high (OLED_PutChar@data_array+1)
 36197  019712  6F18               	movwf	(memmove@d1+1)& (0+255),b
 36198  019714  C134  F119         	movff	OLED_PutChar@input_base,memmove@s1
 36199  019718  C135  F11A         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 36200  01971C  0E00               	movlw	0
 36201  01971E  6F1C               	movwf	(memmove@n+1)& (0+255),b
 36202  019720  0E08               	movlw	8
 36203  019722  6F1B               	movwf	memmove@n& (0+255),b
 36204  019724  EC08  F0CB         	call	_memmove	;wreg free
 36205                           
 36206                           ;oled.c: 242: length = 9;
 36207  019728  0E09               	movlw	9
 36208  01972A  0101               	movlb	1	; () banked
 36209  01972C  6F36               	movwf	OLED_PutChar@length& (0+255),b
 36210                           
 36211                           ; BSR set to: 1
 36212                           ;oled.c: 244: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 36213  01972E  0E2B               	movlw	low OLED_PutChar@data_array
 36214  019730  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 36215  019732  0E01               	movlw	high OLED_PutChar@data_array
 36216  019734  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 36217  019736  C136  F122         	movff	OLED_PutChar@length,I2C1_MasterWrite@length
 36218  01973A  0E00               	movlw	0
 36219  01973C  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 36220  01973E  0E3C               	movlw	60
 36221  019740  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 36222  019742  0EE8               	movlw	low _OLED_I2C_Status
 36223  019744  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 36224  019746  0E01               	movlw	high _OLED_I2C_Status
 36225  019748  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 36226  01974A  EC48  F0D2         	call	_I2C1_MasterWrite	;wreg free
 36227  01974E  0E02               	movlw	2
 36228  019750  0101               	movlb	1	; () banked
 36229  019752  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36230  019754  B4D8               	btfsc	status,2,c
 36231  019756  D7FB               	goto	l1696
 36232                           
 36233                           ; BSR set to: 1
 36234                           ;oled.c: 248: if (OLED_I2C_Status == I2C1_MESSAGE_FAIL) {
 36235                           
 36236                           ; BSR set to: 1
 36237  019758  05E8               	decf	_OLED_I2C_Status& (0+255),w,b
 36238  01975A  A4D8               	btfss	status,2,c
 36239  01975C  0012               	return	
 36240                           
 36241                           ; BSR set to: 1
 36242                           ;oled.c: 249: error_handler.I2C_COMM_error_flag = 1;
 36243  01975E  0E01               	movlw	1
 36244  019760  0102               	movlb	2	; () banked
 36245  019762  6F07               	movwf	(_error_handler+7)& (0+255),b
 36246  019764  0012               	return	
 36247  019766                     __end_of_OLED_PutChar:
 36248                           	opt stack 0
 36249                           tosu	equ	0xFFF
 36250                           tosh	equ	0xFFE
 36251                           tosl	equ	0xFFD
 36252                           pclath	equ	0xFFA
 36253                           tblptru	equ	0xFF8
 36254                           tblptrh	equ	0xFF7
 36255                           tblptrl	equ	0xFF6
 36256                           tablat	equ	0xFF5
 36257                           prodh	equ	0xFF4
 36258                           prodl	equ	0xFF3
 36259                           intcon	equ	0xFF2
 36260                           indf0	equ	0xFEF
 36261                           postinc0	equ	0xFEE
 36262                           fsr0h	equ	0xFEA
 36263                           fsr0l	equ	0xFE9
 36264                           wreg	equ	0xFE8
 36265                           indf1	equ	0xFE7
 36266                           postdec1	equ	0xFE5
 36267                           plusw1	equ	0xFE3
 36268                           fsr1h	equ	0xFE2
 36269                           fsr1l	equ	0xFE1
 36270                           indf2	equ	0xFDF
 36271                           postinc2	equ	0xFDE
 36272                           postdec2	equ	0xFDD
 36273                           plusw2	equ	0xFDB
 36274                           fsr2h	equ	0xFDA
 36275                           fsr2l	equ	0xFD9
 36276                           status	equ	0xFD8
 36277                           
 36278 ;; *************** function _memmove *****************
 36279 ;; Defined at:
 36280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memmove.c"
 36281 ;; Parameters:    Size  Location     Type
 36282 ;;  d1              2   23[BANK1 ] PTR void 
 36283 ;;		 -> OLED_PutChar@data_array(9), 
 36284 ;;  s1              2   25[BANK1 ] PTR const void 
 36285 ;;		 -> OledFont(768), 
 36286 ;;  n               2   27[BANK1 ] unsigned int 
 36287 ;; Auto vars:     Size  Location     Type
 36288 ;;  s               2   33[BANK1 ] PTR const unsigned char 
 36289 ;;		 -> OledFont(768), 
 36290 ;;  d               2   31[BANK1 ] PTR unsigned char 
 36291 ;;		 -> OLED_PutChar@data_array(9), 
 36292 ;; Return value:  Size  Location     Type
 36293 ;;                  2   23[BANK1 ] PTR void 
 36294 ;; Registers used:
 36295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36296 ;; Tracked objects:
 36297 ;;		On entry : 0/0
 36298 ;;		On exit  : 0/0
 36299 ;;		Unchanged: 0/0
 36300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36301 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36302 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36303 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36304 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36305 ;;Total ram usage:       12 bytes
 36306 ;; Hardware stack levels used:    1
 36307 ;; Hardware stack levels required when called:   13
 36308 ;; This function calls:
 36309 ;;		Nothing
 36310 ;; This function is called by:
 36311 ;;		_OLED_PutChar
 36312 ;; This function uses a non-reentrant model
 36313 ;;
 36314                           
 36315                           	psect	text89
 36316  019610                     __ptext89:
 36317                           	opt stack 0
 36318  019610                     _memmove:
 36319                           	opt stack 14
 36320                           
 36321                           ;incstack = 0
 36322  019610  C119  F121         	movff	memmove@s1,memmove@s
 36323  019614  C11A  F122         	movff	memmove@s1+1,memmove@s+1
 36324  019618  C117  F11F         	movff	memmove@d1,memmove@d
 36325  01961C  C118  F120         	movff	memmove@d1+1,memmove@d+1
 36326  019620  0101               	movlb	1	; () banked
 36327  019622  511F               	movf	memmove@d& (0+255),w,b
 36328  019624  5D21               	subwf	memmove@s& (0+255),w,b
 36329  019626  5120               	movf	(memmove@d+1)& (0+255),w,b
 36330  019628  5922               	subwfb	(memmove@s+1)& (0+255),w,b
 36331  01962A  B0D8               	btfsc	status,0,c
 36332  01962C  D02F               	goto	l2672
 36333                           
 36334                           ; BSR set to: 1
 36335  01962E  511B               	movf	memmove@n& (0+255),w,b
 36336  019630  2521               	addwf	memmove@s& (0+255),w,b
 36337  019632  6F1D               	movwf	??_memmove& (0+255),b
 36338  019634  511C               	movf	(memmove@n+1)& (0+255),w,b
 36339  019636  2122               	addwfc	(memmove@s+1)& (0+255),w,b
 36340  019638  6F1E               	movwf	(??_memmove+1)& (0+255),b
 36341  01963A  511D               	movf	??_memmove& (0+255),w,b
 36342  01963C  5D1F               	subwf	memmove@d& (0+255),w,b
 36343  01963E  511E               	movf	(??_memmove+1)& (0+255),w,b
 36344  019640  5920               	subwfb	(memmove@d+1)& (0+255),w,b
 36345  019642  B0D8               	btfsc	status,0,c
 36346  019644  D023               	goto	l2672
 36347                           
 36348                           ; BSR set to: 1
 36349  019646  511B               	movf	memmove@n& (0+255),w,b
 36350  019648  2721               	addwf	memmove@s& (0+255),f,b
 36351  01964A  511C               	movf	(memmove@n+1)& (0+255),w,b
 36352  01964C  2322               	addwfc	(memmove@s+1)& (0+255),f,b
 36353  01964E  511B               	movf	memmove@n& (0+255),w,b
 36354  019650  271F               	addwf	memmove@d& (0+255),f,b
 36355  019652  511C               	movf	(memmove@n+1)& (0+255),w,b
 36356  019654  2320               	addwfc	(memmove@d+1)& (0+255),f,b
 36357  019656                     
 36358                           ; BSR set to: 1
 36359                           
 36360                           ; BSR set to: 1
 36361  019656  0721               	decf	memmove@s& (0+255),f,b
 36362  019658  A0D8               	btfss	status,0,c
 36363  01965A  0722               	decf	(memmove@s+1)& (0+255),f,b
 36364  01965C  C121  FFF6         	movff	memmove@s,tblptrl
 36365  019660  C122  FFF7         	movff	memmove@s+1,tblptrh
 36366  019664                     	if	0	;tblptru may be non-zero
 36367  019664                     	endif
 36368  019664                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36369  019664  0E00               	movlw	low (__mediumconst shr (0+16))
 36370  019666  6EF8               	movwf	tblptru,c
 36371  019668                     	endif
 36372  019668  071F               	decf	memmove@d& (0+255),f,b
 36373  01966A  A0D8               	btfss	status,0,c
 36374  01966C  0720               	decf	(memmove@d+1)& (0+255),f,b
 36375  01966E  C11F  FFD9         	movff	memmove@d,fsr2l
 36376  019672  C120  FFDA         	movff	memmove@d+1,fsr2h
 36377  019676  0008               	tblrd		*
 36378  019678  CFF5 FFDF          	movff	tablat,indf2
 36379                           
 36380                           ; BSR set to: 1
 36381  01967C  071B               	decf	memmove@n& (0+255),f,b
 36382  01967E  A0D8               	btfss	status,0,c
 36383  019680  071C               	decf	(memmove@n+1)& (0+255),f,b
 36384  019682  511B               	movf	memmove@n& (0+255),w,b
 36385  019684  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36386  019686  B4D8               	btfsc	status,2,c
 36387  019688  0012               	return	
 36388  01968A  D7E5               	goto	l2673
 36389  01968C                     l2672:
 36390                           
 36391                           ; BSR set to: 1
 36392                           
 36393                           ; BSR set to: 1
 36394  01968C  511B               	movf	memmove@n& (0+255),w,b
 36395  01968E  111C               	iorwf	(memmove@n+1)& (0+255),w,b
 36396  019690  B4D8               	btfsc	status,2,c
 36397  019692  0012               	return	
 36398                           
 36399                           ; BSR set to: 1
 36400                           
 36401                           ; BSR set to: 1
 36402  019694  C121  FFF6         	movff	memmove@s,tblptrl
 36403  019698  C122  FFF7         	movff	memmove@s+1,tblptrh
 36404  01969C                     	if	0	;tblptru may be non-zero
 36405  01969C                     	endif
 36406  01969C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36407  01969C  0E00               	movlw	low (__mediumconst shr (0+16))
 36408  01969E  6EF8               	movwf	tblptru,c
 36409  0196A0                     	endif
 36410  0196A0  C11F  FFD9         	movff	memmove@d,fsr2l
 36411  0196A4  C120  FFDA         	movff	memmove@d+1,fsr2h
 36412  0196A8  0008               	tblrd		*
 36413  0196AA  CFF5 FFDF          	movff	tablat,indf2
 36414                           
 36415                           ; BSR set to: 1
 36416  0196AE  4B21               	infsnz	memmove@s& (0+255),f,b
 36417  0196B0  2B22               	incf	(memmove@s+1)& (0+255),f,b
 36418                           
 36419                           ; BSR set to: 1
 36420  0196B2  4B1F               	infsnz	memmove@d& (0+255),f,b
 36421  0196B4  2B20               	incf	(memmove@d+1)& (0+255),f,b
 36422                           
 36423                           ; BSR set to: 1
 36424  0196B6  071B               	decf	memmove@n& (0+255),f,b
 36425  0196B8  A0D8               	btfss	status,0,c
 36426  0196BA  071C               	decf	(memmove@n+1)& (0+255),f,b
 36427  0196BC  D7E7               	goto	l2672
 36428  0196BE                     __end_of_memmove:
 36429                           	opt stack 0
 36430                           tosu	equ	0xFFF
 36431                           tosh	equ	0xFFE
 36432                           tosl	equ	0xFFD
 36433                           pclath	equ	0xFFA
 36434                           tblptru	equ	0xFF8
 36435                           tblptrh	equ	0xFF7
 36436                           tblptrl	equ	0xFF6
 36437                           tablat	equ	0xFF5
 36438                           prodh	equ	0xFF4
 36439                           prodl	equ	0xFF3
 36440                           intcon	equ	0xFF2
 36441                           indf0	equ	0xFEF
 36442                           postinc0	equ	0xFEE
 36443                           fsr0h	equ	0xFEA
 36444                           fsr0l	equ	0xFE9
 36445                           wreg	equ	0xFE8
 36446                           indf1	equ	0xFE7
 36447                           postdec1	equ	0xFE5
 36448                           plusw1	equ	0xFE3
 36449                           fsr1h	equ	0xFE2
 36450                           fsr1l	equ	0xFE1
 36451                           indf2	equ	0xFDF
 36452                           postinc2	equ	0xFDE
 36453                           postdec2	equ	0xFDD
 36454                           plusw2	equ	0xFDB
 36455                           fsr2h	equ	0xFDA
 36456                           fsr2l	equ	0xFD9
 36457                           status	equ	0xFD8
 36458                           
 36459 ;; *************** function _OLED_Init *****************
 36460 ;; Defined at:
 36461 ;;		line 154 in file "oled.c"
 36462 ;; Parameters:    Size  Location     Type
 36463 ;;		None
 36464 ;; Auto vars:     Size  Location     Type
 36465 ;;		None
 36466 ;; Return value:  Size  Location     Type
 36467 ;;                  1    wreg      void 
 36468 ;; Registers used:
 36469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36470 ;; Tracked objects:
 36471 ;;		On entry : 0/0
 36472 ;;		On exit  : 0/0
 36473 ;;		Unchanged: 0/0
 36474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36479 ;;Total ram usage:        0 bytes
 36480 ;; Hardware stack levels used:    1
 36481 ;; Hardware stack levels required when called:   17
 36482 ;; This function calls:
 36483 ;;		_OLED_Command
 36484 ;; This function is called by:
 36485 ;;		_main
 36486 ;; This function uses a non-reentrant model
 36487 ;;
 36488                           
 36489                           	psect	text90
 36490  019808                     __ptext90:
 36491                           	opt stack 0
 36492  019808                     _OLED_Init:
 36493                           	opt stack 13
 36494                           
 36495                           ;oled.c: 156: OLED_Command(0xAE);
 36496                           
 36497                           ; BSR set to: 1
 36498                           ;incstack = 0
 36499  019808  0EAE               	movlw	174
 36500  01980A  EC56  F0D3         	call	_OLED_Command
 36501                           
 36502                           ;oled.c: 158: OLED_Command(0xD5);
 36503  01980E  0ED5               	movlw	213
 36504  019810  EC56  F0D3         	call	_OLED_Command
 36505                           
 36506                           ;oled.c: 160: OLED_Command(0x80);
 36507  019814  0E80               	movlw	128
 36508  019816  EC56  F0D3         	call	_OLED_Command
 36509                           
 36510                           ;oled.c: 162: OLED_Command(0xA8);
 36511  01981A  0EA8               	movlw	168
 36512  01981C  EC56  F0D3         	call	_OLED_Command
 36513                           
 36514                           ;oled.c: 164: OLED_Command(0x1F);
 36515  019820  0E1F               	movlw	31
 36516  019822  EC56  F0D3         	call	_OLED_Command
 36517                           
 36518                           ;oled.c: 166: OLED_Command(0xD3);
 36519  019826  0ED3               	movlw	211
 36520  019828  EC56  F0D3         	call	_OLED_Command
 36521                           
 36522                           ;oled.c: 168: OLED_Command(0x0);
 36523  01982C  0E00               	movlw	0
 36524  01982E  EC56  F0D3         	call	_OLED_Command
 36525                           
 36526                           ;oled.c: 170: OLED_Command(0x40 | 0x0);
 36527  019832  0E40               	movlw	64
 36528  019834  EC56  F0D3         	call	_OLED_Command
 36529                           
 36530                           ;oled.c: 172: OLED_Command(0x8D);
 36531  019838  0E8D               	movlw	141
 36532  01983A  EC56  F0D3         	call	_OLED_Command
 36533                           
 36534                           ;oled.c: 174: OLED_Command(0xAF);
 36535  01983E  0EAF               	movlw	175
 36536  019840  EC56  F0D3         	call	_OLED_Command
 36537                           
 36538                           ;oled.c: 176: OLED_Command(0x20);
 36539  019844  0E20               	movlw	32
 36540  019846  EC56  F0D3         	call	_OLED_Command
 36541                           
 36542                           ;oled.c: 178: OLED_Command(0x00);
 36543  01984A  0E00               	movlw	0
 36544  01984C  EC56  F0D3         	call	_OLED_Command
 36545                           
 36546                           ;oled.c: 180: OLED_Command(0xA0 | 0x1);
 36547  019850  0EA1               	movlw	161
 36548  019852  EC56  F0D3         	call	_OLED_Command
 36549                           
 36550                           ;oled.c: 182: OLED_Command(0xC8);
 36551  019856  0EC8               	movlw	200
 36552  019858  EC56  F0D3         	call	_OLED_Command
 36553                           
 36554                           ;oled.c: 184: OLED_Command(0xDA);
 36555  01985C  0EDA               	movlw	218
 36556  01985E  EC56  F0D3         	call	_OLED_Command
 36557                           
 36558                           ;oled.c: 186: OLED_Command(0x02);
 36559  019862  0E02               	movlw	2
 36560  019864  EC56  F0D3         	call	_OLED_Command
 36561                           
 36562                           ;oled.c: 188: OLED_Command(0x81);
 36563  019868  0E81               	movlw	129
 36564  01986A  EC56  F0D3         	call	_OLED_Command
 36565                           
 36566                           ;oled.c: 190: OLED_Command(0x8F);
 36567  01986E  0E8F               	movlw	143
 36568  019870  EC56  F0D3         	call	_OLED_Command
 36569                           
 36570                           ;oled.c: 192: OLED_Command(0xD9);
 36571  019874  0ED9               	movlw	217
 36572  019876  EC56  F0D3         	call	_OLED_Command
 36573                           
 36574                           ;oled.c: 194: OLED_Command(0xF1);
 36575  01987A  0EF1               	movlw	241
 36576  01987C  EC56  F0D3         	call	_OLED_Command
 36577                           
 36578                           ;oled.c: 196: OLED_Command(0xDB);
 36579  019880  0EDB               	movlw	219
 36580  019882  EC56  F0D3         	call	_OLED_Command
 36581                           
 36582                           ;oled.c: 198: OLED_Command(0x40);
 36583  019886  0E40               	movlw	64
 36584  019888  EC56  F0D3         	call	_OLED_Command
 36585                           
 36586                           ;oled.c: 200: OLED_Command(0xA4);
 36587  01988C  0EA4               	movlw	164
 36588  01988E  EC56  F0D3         	call	_OLED_Command
 36589                           
 36590                           ;oled.c: 202: OLED_Command(0xA6);
 36591  019892  0EA6               	movlw	166
 36592  019894  EC56  F0D3         	call	_OLED_Command
 36593                           
 36594                           ;oled.c: 204: OLED_Command(0xAF);
 36595  019898  0EAF               	movlw	175
 36596  01989A  EC56  F0D3         	call	_OLED_Command
 36597                           
 36598                           ;oled.c: 207: __nop();
 36599  01989E  F000               	nop	
 36600  0198A0  0012               	return		;funcret
 36601  0198A2                     __end_of_OLED_Init:
 36602                           	opt stack 0
 36603                           tosu	equ	0xFFF
 36604                           tosh	equ	0xFFE
 36605                           tosl	equ	0xFFD
 36606                           pclath	equ	0xFFA
 36607                           tblptru	equ	0xFF8
 36608                           tblptrh	equ	0xFF7
 36609                           tblptrl	equ	0xFF6
 36610                           tablat	equ	0xFF5
 36611                           prodh	equ	0xFF4
 36612                           prodl	equ	0xFF3
 36613                           intcon	equ	0xFF2
 36614                           indf0	equ	0xFEF
 36615                           postinc0	equ	0xFEE
 36616                           fsr0h	equ	0xFEA
 36617                           fsr0l	equ	0xFE9
 36618                           wreg	equ	0xFE8
 36619                           indf1	equ	0xFE7
 36620                           postdec1	equ	0xFE5
 36621                           plusw1	equ	0xFE3
 36622                           fsr1h	equ	0xFE2
 36623                           fsr1l	equ	0xFE1
 36624                           indf2	equ	0xFDF
 36625                           postinc2	equ	0xFDE
 36626                           postdec2	equ	0xFDD
 36627                           plusw2	equ	0xFDB
 36628                           fsr2h	equ	0xFDA
 36629                           fsr2l	equ	0xFD9
 36630                           status	equ	0xFD8
 36631                           
 36632 ;; *************** function _OLED_Command *****************
 36633 ;; Defined at:
 36634 ;;		line 110 in file "oled.c"
 36635 ;; Parameters:    Size  Location     Type
 36636 ;;  temp            1    wreg     unsigned char 
 36637 ;; Auto vars:     Size  Location     Type
 36638 ;;  temp            1   39[BANK1 ] unsigned char 
 36639 ;;  data_array      2   41[BANK1 ] unsigned char [2]
 36640 ;;  length          1   40[BANK1 ] unsigned char 
 36641 ;; Return value:  Size  Location     Type
 36642 ;;                  1    wreg      void 
 36643 ;; Registers used:
 36644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36645 ;; Tracked objects:
 36646 ;;		On entry : 0/0
 36647 ;;		On exit  : 0/0
 36648 ;;		Unchanged: 0/0
 36649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36651 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36653 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36654 ;;Total ram usage:        4 bytes
 36655 ;; Hardware stack levels used:    1
 36656 ;; Hardware stack levels required when called:   16
 36657 ;; This function calls:
 36658 ;;		_I2C1_MasterWrite
 36659 ;; This function is called by:
 36660 ;;		_OLED_Init
 36661 ;;		_OLED_YX
 36662 ;; This function uses a non-reentrant model
 36663 ;;
 36664                           
 36665                           	psect	text91
 36666  01A6AC                     __ptext91:
 36667                           	opt stack 0
 36668  01A6AC                     _OLED_Command:
 36669                           	opt stack 12
 36670                           
 36671                           ;incstack = 0
 36672                           ;OLED_Command@temp stored from wreg
 36673  01A6AC  0101               	movlb	1	; () banked
 36674  01A6AE  6F27               	movwf	OLED_Command@temp& (0+255),b
 36675                           
 36676                           ;oled.c: 112: uint8_t length;
 36677                           ;oled.c: 114: uint8_t data_array[2];
 36678                           ;oled.c: 115: data_array[0] = 0x00;
 36679  01A6B0  0E00               	movlw	0
 36680  01A6B2  0101               	movlb	1	; () banked
 36681  01A6B4  6F29               	movwf	OLED_Command@data_array& (0+255),b
 36682                           
 36683                           ; BSR set to: 1
 36684                           ;oled.c: 116: data_array[1] = temp;
 36685  01A6B6  C127  F12A         	movff	OLED_Command@temp,OLED_Command@data_array+1
 36686                           
 36687                           ; BSR set to: 1
 36688                           ;oled.c: 119: length = 2;
 36689  01A6BA  0E02               	movlw	2
 36690  01A6BC  6F28               	movwf	OLED_Command@length& (0+255),b
 36691                           
 36692                           ; BSR set to: 1
 36693                           ;oled.c: 121: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 36694  01A6BE  0E29               	movlw	low OLED_Command@data_array
 36695  01A6C0  6F20               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 36696  01A6C2  0E01               	movlw	high OLED_Command@data_array
 36697  01A6C4  6F21               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 36698  01A6C6  C128  F122         	movff	OLED_Command@length,I2C1_MasterWrite@length
 36699  01A6CA  0E00               	movlw	0
 36700  01A6CC  6F24               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 36701  01A6CE  0E3C               	movlw	60
 36702  01A6D0  6F23               	movwf	I2C1_MasterWrite@address& (0+255),b
 36703  01A6D2  0EE8               	movlw	low _OLED_I2C_Status
 36704  01A6D4  6F25               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 36705  01A6D6  0E01               	movlw	high _OLED_I2C_Status
 36706  01A6D8  6F26               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 36707  01A6DA  EC48  F0D2         	call	_I2C1_MasterWrite	;wreg free
 36708  01A6DE  0E02               	movlw	2
 36709  01A6E0  0101               	movlb	1	; () banked
 36710  01A6E2  19E8               	xorwf	_OLED_I2C_Status& (0+255),w,b
 36711  01A6E4  B4D8               	btfsc	status,2,c
 36712  01A6E6  D7FB               	goto	l1673
 36713                           
 36714                           ; BSR set to: 1
 36715                           ;oled.c: 125: if (OLED_I2C_Status == I2C1_MESSAGE_FAIL) {
 36716                           
 36717                           ; BSR set to: 1
 36718  01A6E8  05E8               	decf	_OLED_I2C_Status& (0+255),w,b
 36719  01A6EA  A4D8               	btfss	status,2,c
 36720  01A6EC  0012               	return	
 36721                           
 36722                           ; BSR set to: 1
 36723                           ;oled.c: 126: error_handler.I2C_COMM_error_flag = 1;
 36724  01A6EE  0E01               	movlw	1
 36725  01A6F0  0102               	movlb	2	; () banked
 36726  01A6F2  6F07               	movwf	(_error_handler+7)& (0+255),b
 36727  01A6F4  0012               	return	
 36728  01A6F6                     __end_of_OLED_Command:
 36729                           	opt stack 0
 36730                           tosu	equ	0xFFF
 36731                           tosh	equ	0xFFE
 36732                           tosl	equ	0xFFD
 36733                           pclath	equ	0xFFA
 36734                           tblptru	equ	0xFF8
 36735                           tblptrh	equ	0xFF7
 36736                           tblptrl	equ	0xFF6
 36737                           tablat	equ	0xFF5
 36738                           prodh	equ	0xFF4
 36739                           prodl	equ	0xFF3
 36740                           intcon	equ	0xFF2
 36741                           indf0	equ	0xFEF
 36742                           postinc0	equ	0xFEE
 36743                           fsr0h	equ	0xFEA
 36744                           fsr0l	equ	0xFE9
 36745                           wreg	equ	0xFE8
 36746                           indf1	equ	0xFE7
 36747                           postdec1	equ	0xFE5
 36748                           plusw1	equ	0xFE3
 36749                           fsr1h	equ	0xFE2
 36750                           fsr1l	equ	0xFE1
 36751                           indf2	equ	0xFDF
 36752                           postinc2	equ	0xFDE
 36753                           postdec2	equ	0xFDD
 36754                           plusw2	equ	0xFDB
 36755                           fsr2h	equ	0xFDA
 36756                           fsr2l	equ	0xFD9
 36757                           status	equ	0xFD8
 36758                           
 36759 ;; *************** function _I2C1_MasterWrite *****************
 36760 ;; Defined at:
 36761 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 36762 ;; Parameters:    Size  Location     Type
 36763 ;;  pdata           2   32[BANK1 ] PTR unsigned char 
 36764 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 36765 ;;  length          1   34[BANK1 ] unsigned char 
 36766 ;;  address         2   35[BANK1 ] unsigned int 
 36767 ;;  pflag           2   37[BANK1 ] PTR enum E17311
 36768 ;;		 -> OLED_I2C_Status(1), 
 36769 ;; Auto vars:     Size  Location     Type
 36770 ;;		None
 36771 ;; Return value:  Size  Location     Type
 36772 ;;                  1    wreg      void 
 36773 ;; Registers used:
 36774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36775 ;; Tracked objects:
 36776 ;;		On entry : 0/0
 36777 ;;		On exit  : 0/0
 36778 ;;		Unchanged: 0/0
 36779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36780 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36783 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36784 ;;Total ram usage:        7 bytes
 36785 ;; Hardware stack levels used:    1
 36786 ;; Hardware stack levels required when called:   15
 36787 ;; This function calls:
 36788 ;;		_I2C1_MasterTRBInsert
 36789 ;;		_I2C1_MasterWriteTRBBuild
 36790 ;; This function is called by:
 36791 ;;		_OLED_Command
 36792 ;;		_OLED_PutChar
 36793 ;;		_OLED_Data
 36794 ;; This function uses a non-reentrant model
 36795 ;;
 36796                           
 36797                           	psect	text92
 36798  01A490                     __ptext92:
 36799                           	opt stack 0
 36800  01A490                     _I2C1_MasterWrite:
 36801                           	opt stack 12
 36802                           
 36803                           ;i2c1.c: 606: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 36804                           ;i2c1.c: 609: if (i2c1_object.trStatus.s.full != 1)
 36805                           
 36806                           ;incstack = 0
 36807  01A490  0102               	movlb	2	; () banked
 36808  01A492  B10D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 36809  01A494  D01E               	goto	l1833
 36810                           
 36811                           ; BSR set to: 2
 36812                           ;i2c1.c: 610: {
 36813                           ;i2c1.c: 611: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 36814  01A496  0E89               	movlw	low I2C1_MasterWrite@trBlock
 36815  01A498  0101               	movlb	1	; () banked
 36816  01A49A  6F17               	movwf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
 36817  01A49C  0E02               	movlw	high I2C1_MasterWrite@trBlock
 36818  01A49E  6F18               	movwf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 36819  01A4A0  C120  F119         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 36820  01A4A4  C121  F11A         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 36821  01A4A8  C122  F11B         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 36822  01A4AC  C123  F11C         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 36823  01A4B0  C124  F11D         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 36824  01A4B4  ECC3  F0D3         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 36825                           
 36826                           ;i2c1.c: 612: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 36827  01A4B8  0E89               	movlw	low I2C1_MasterWrite@trBlock
 36828  01A4BA  0101               	movlb	1	; () banked
 36829  01A4BC  6F17               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
 36830  01A4BE  0E02               	movlw	high I2C1_MasterWrite@trBlock
 36831  01A4C0  6F18               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
 36832  01A4C2  C125  F119         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 36833  01A4C6  C126  F11A         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 36834  01A4CA  0E01               	movlw	1
 36835  01A4CC  ECB3  F0CB         	call	_I2C1_MasterTRBInsert
 36836                           
 36837                           ;i2c1.c: 613: }
 36838  01A4D0  0012               	return	
 36839  01A4D2                     l1833:
 36840                           
 36841                           ;i2c1.c: 614: else
 36842                           ;i2c1.c: 615: {
 36843                           ;i2c1.c: 616: *pflag = I2C1_MESSAGE_FAIL;
 36844  01A4D2  C125  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 36845  01A4D6  C126  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 36846  01A4DA  0E01               	movlw	1
 36847  01A4DC  6EDF               	movwf	indf2,c
 36848  01A4DE  0012               	return	
 36849  01A4E0                     __end_of_I2C1_MasterWrite:
 36850                           	opt stack 0
 36851                           tosu	equ	0xFFF
 36852                           tosh	equ	0xFFE
 36853                           tosl	equ	0xFFD
 36854                           pclath	equ	0xFFA
 36855                           tblptru	equ	0xFF8
 36856                           tblptrh	equ	0xFF7
 36857                           tblptrl	equ	0xFF6
 36858                           tablat	equ	0xFF5
 36859                           prodh	equ	0xFF4
 36860                           prodl	equ	0xFF3
 36861                           intcon	equ	0xFF2
 36862                           indf0	equ	0xFEF
 36863                           postinc0	equ	0xFEE
 36864                           fsr0h	equ	0xFEA
 36865                           fsr0l	equ	0xFE9
 36866                           wreg	equ	0xFE8
 36867                           indf1	equ	0xFE7
 36868                           postdec1	equ	0xFE5
 36869                           plusw1	equ	0xFE3
 36870                           fsr1h	equ	0xFE2
 36871                           fsr1l	equ	0xFE1
 36872                           indf2	equ	0xFDF
 36873                           postinc2	equ	0xFDE
 36874                           postdec2	equ	0xFDD
 36875                           plusw2	equ	0xFDB
 36876                           fsr2h	equ	0xFDA
 36877                           fsr2l	equ	0xFD9
 36878                           status	equ	0xFD8
 36879                           
 36880 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 36881 ;; Defined at:
 36882 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 36883 ;; Parameters:    Size  Location     Type
 36884 ;;  ptrb            2   23[BANK1 ] PTR struct .
 36885 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 36886 ;;  pdata           2   25[BANK1 ] PTR unsigned char 
 36887 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 36888 ;;  length          1   27[BANK1 ] unsigned char 
 36889 ;;  address         2   28[BANK1 ] unsigned int 
 36890 ;; Auto vars:     Size  Location     Type
 36891 ;;		None
 36892 ;; Return value:  Size  Location     Type
 36893 ;;                  1    wreg      void 
 36894 ;; Registers used:
 36895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36896 ;; Tracked objects:
 36897 ;;		On entry : 0/0
 36898 ;;		On exit  : 0/0
 36899 ;;		Unchanged: 0/0
 36900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36901 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36903 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36904 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36905 ;;Total ram usage:        9 bytes
 36906 ;; Hardware stack levels used:    1
 36907 ;; Hardware stack levels required when called:   13
 36908 ;; This function calls:
 36909 ;;		Nothing
 36910 ;; This function is called by:
 36911 ;;		_I2C1_MasterWrite
 36912 ;; This function uses a non-reentrant model
 36913 ;;
 36914                           
 36915                           	psect	text93
 36916  01A786                     __ptext93:
 36917                           	opt stack 0
 36918  01A786                     _I2C1_MasterWriteTRBBuild:
 36919                           	opt stack 13
 36920                           
 36921                           ;i2c1.c: 727: ptrb->address = address << 1;
 36922                           
 36923                           ;incstack = 0
 36924  01A786  C11C  F11E         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 36925  01A78A  C11D  F11F         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 36926  01A78E  90D8               	bcf	status,0,c
 36927  01A790  0101               	movlb	1	; () banked
 36928  01A792  371E               	rlcf	??_I2C1_MasterWriteTRBBuild& (0+255),f,b
 36929  01A794  371F               	rlcf	(??_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
 36930  01A796  C117  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 36931  01A79A  C118  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 36932  01A79E  C11E  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 36933  01A7A2  C11F  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 36934                           
 36935                           ; BSR set to: 1
 36936                           ;i2c1.c: 728: ptrb->length = length;
 36937  01A7A6  EE20 F002          	lfsr	2,2
 36938  01A7AA  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 36939  01A7AC  26D9               	addwf	fsr2l,f,c
 36940  01A7AE  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 36941  01A7B0  22DA               	addwfc	fsr2h,f,c
 36942  01A7B2  C11B  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 36943                           
 36944                           ; BSR set to: 1
 36945                           ;i2c1.c: 729: ptrb->pbuffer = pdata;
 36946  01A7B6  EE20 F003          	lfsr	2,3
 36947  01A7BA  5117               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 36948  01A7BC  26D9               	addwf	fsr2l,f,c
 36949  01A7BE  5118               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 36950  01A7C0  22DA               	addwfc	fsr2h,f,c
 36951  01A7C2  C119  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 36952  01A7C6  C11A  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 36953                           
 36954                           ; BSR set to: 1
 36955  01A7CA  0012               	return		;funcret
 36956  01A7CC                     __end_of_I2C1_MasterWriteTRBBuild:
 36957                           	opt stack 0
 36958                           tosu	equ	0xFFF
 36959                           tosh	equ	0xFFE
 36960                           tosl	equ	0xFFD
 36961                           pclath	equ	0xFFA
 36962                           tblptru	equ	0xFF8
 36963                           tblptrh	equ	0xFF7
 36964                           tblptrl	equ	0xFF6
 36965                           tablat	equ	0xFF5
 36966                           prodh	equ	0xFF4
 36967                           prodl	equ	0xFF3
 36968                           intcon	equ	0xFF2
 36969                           indf0	equ	0xFEF
 36970                           postinc0	equ	0xFEE
 36971                           fsr0h	equ	0xFEA
 36972                           fsr0l	equ	0xFE9
 36973                           wreg	equ	0xFE8
 36974                           indf1	equ	0xFE7
 36975                           postdec1	equ	0xFE5
 36976                           plusw1	equ	0xFE3
 36977                           fsr1h	equ	0xFE2
 36978                           fsr1l	equ	0xFE1
 36979                           indf2	equ	0xFDF
 36980                           postinc2	equ	0xFDE
 36981                           postdec2	equ	0xFDD
 36982                           plusw2	equ	0xFDB
 36983                           fsr2h	equ	0xFDA
 36984                           fsr2l	equ	0xFD9
 36985                           status	equ	0xFD8
 36986                           
 36987 ;; *************** function _I2C1_MasterTRBInsert *****************
 36988 ;; Defined at:
 36989 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 36990 ;; Parameters:    Size  Location     Type
 36991 ;;  count           1    wreg     unsigned char 
 36992 ;;  ptrb_list       2   23[BANK1 ] PTR struct .
 36993 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 36994 ;;  pflag           2   25[BANK1 ] PTR enum E17311
 36995 ;;		 -> OLED_I2C_Status(1), 
 36996 ;; Auto vars:     Size  Location     Type
 36997 ;;  count           1   28[BANK1 ] unsigned char 
 36998 ;; Return value:  Size  Location     Type
 36999 ;;                  1    wreg      void 
 37000 ;; Registers used:
 37001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37002 ;; Tracked objects:
 37003 ;;		On entry : 0/0
 37004 ;;		On exit  : 0/0
 37005 ;;		Unchanged: 0/0
 37006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37007 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37009 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37010 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37011 ;;Total ram usage:        6 bytes
 37012 ;; Hardware stack levels used:    1
 37013 ;; Hardware stack levels required when called:   14
 37014 ;; This function calls:
 37015 ;;		_I2C1_WaitForLastPacketToComplete
 37016 ;; This function is called by:
 37017 ;;		_I2C1_MasterWrite
 37018 ;;		_I2C1_MasterRead
 37019 ;; This function uses a non-reentrant model
 37020 ;;
 37021                           
 37022                           	psect	text94
 37023  019766                     __ptext94:
 37024                           	opt stack 0
 37025  019766                     _I2C1_MasterTRBInsert:
 37026                           	opt stack 12
 37027                           
 37028                           ; BSR set to: 1
 37029                           ;incstack = 0
 37030                           ;I2C1_MasterTRBInsert@count stored from wreg
 37031  019766  0101               	movlb	1	; () banked
 37032  019768  6F1C               	movwf	I2C1_MasterTRBInsert@count& (0+255),b
 37033                           
 37034                           ;i2c1.c: 661: if (i2c1_object.trStatus.s.full != 1)
 37035  01976A  0102               	movlb	2	; () banked
 37036  01976C  B10D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 37037  01976E  D039               	goto	l1851
 37038                           
 37039                           ; BSR set to: 2
 37040                           ;i2c1.c: 662: {
 37041                           ;i2c1.c: 663: *pflag = I2C1_MESSAGE_PENDING;
 37042  019770  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 37043  019774  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 37044  019778  0E02               	movlw	2
 37045  01977A  6EDF               	movwf	indf2,c
 37046                           
 37047                           ; BSR set to: 2
 37048                           ;i2c1.c: 665: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 37049  01977C  EE20 F001          	lfsr	2,1
 37050  019780  5109               	movf	_i2c1_object& (0+255),w,b
 37051  019782  26D9               	addwf	fsr2l,f,c
 37052  019784  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 37053  019786  22DA               	addwfc	fsr2h,f,c
 37054  019788  C117  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 37055  01978C  C118  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 37056                           
 37057                           ; BSR set to: 2
 37058                           ;i2c1.c: 666: i2c1_object.pTrTail->count = count;
 37059  019790  C209  FFD9         	movff	_i2c1_object,fsr2l
 37060  019794  C20A  FFDA         	movff	_i2c1_object+1,fsr2h
 37061  019798  C11C  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 37062                           
 37063                           ; BSR set to: 2
 37064                           ;i2c1.c: 667: i2c1_object.pTrTail->pTrFlag = pflag;
 37065  01979C  EE20 F003          	lfsr	2,3
 37066  0197A0  5109               	movf	_i2c1_object& (0+255),w,b
 37067  0197A2  26D9               	addwf	fsr2l,f,c
 37068  0197A4  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 37069  0197A6  22DA               	addwfc	fsr2h,f,c
 37070  0197A8  C119  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 37071  0197AC  C11A  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 37072                           
 37073                           ; BSR set to: 2
 37074                           ;i2c1.c: 668: i2c1_object.pTrTail++;
 37075  0197B0  0E05               	movlw	5
 37076  0197B2  2709               	addwf	_i2c1_object& (0+255),f,b
 37077  0197B4  0E00               	movlw	0
 37078  0197B6  230A               	addwfc	(_i2c1_object+1)& (0+255),f,b
 37079                           
 37080                           ; BSR set to: 2
 37081                           ;i2c1.c: 671: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 37082  0197B8  0E93               	movlw	low (_i2c1_tr_queue+5)
 37083  0197BA  1909               	xorwf	_i2c1_object& (0+255),w,b
 37084  0197BC  E108               	bnz	l15483
 37085  0197BE  0E02               	movlw	high (_i2c1_tr_queue+5)
 37086  0197C0  190A               	xorwf	(_i2c1_object+1)& (0+255),w,b
 37087  0197C2  A4D8               	btfss	status,2,c
 37088  0197C4  D004               	goto	l1852
 37089                           
 37090                           ; BSR set to: 2
 37091                           ;i2c1.c: 672: {
 37092                           ;i2c1.c: 674: i2c1_object.pTrTail = i2c1_tr_queue;
 37093  0197C6  0E8E               	movlw	low _i2c1_tr_queue
 37094  0197C8  6F09               	movwf	_i2c1_object& (0+255),b
 37095  0197CA  0E02               	movlw	high _i2c1_tr_queue
 37096  0197CC  6F0A               	movwf	(_i2c1_object+1)& (0+255),b
 37097  0197CE                     l1852:
 37098  0197CE                     l15483:
 37099                           
 37100                           ; BSR set to: 2
 37101                           ;i2c1.c: 675: }
 37102                           ;i2c1.c: 679: i2c1_object.trStatus.s.empty = 0;
 37103  0197CE  930D               	bcf	(_i2c1_object+4)& (0+255),1,b
 37104                           
 37105                           ;i2c1.c: 682: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 37106  0197D0  5109               	movf	_i2c1_object& (0+255),w,b
 37107  0197D2  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 37108  0197D4  E10C               	bnz	l15489
 37109  0197D6  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 37110  0197D8  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 37111  0197DA  A4D8               	btfss	status,2,c
 37112  0197DC  D008               	goto	l1854
 37113                           
 37114                           ; BSR set to: 2
 37115                           ;i2c1.c: 683: {
 37116                           ;i2c1.c: 685: i2c1_object.trStatus.s.full = 1;
 37117  0197DE  810D               	bsf	(_i2c1_object+4)& (0+255),0,b
 37118                           
 37119                           ; BSR set to: 2
 37120                           ;i2c1.c: 686: }
 37121                           ;i2c1.c: 688: }
 37122  0197E0  D006               	goto	l1854
 37123  0197E2                     l1851:
 37124                           
 37125                           ; BSR set to: 2
 37126                           ;i2c1.c: 689: else
 37127                           ;i2c1.c: 690: {
 37128                           ;i2c1.c: 691: *pflag = I2C1_MESSAGE_FAIL;
 37129                           
 37130                           ; BSR set to: 2
 37131  0197E2  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 37132  0197E6  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 37133  0197EA  0E01               	movlw	1
 37134  0197EC  6EDF               	movwf	indf2,c
 37135  0197EE                     l1854:
 37136  0197EE                     l15489:
 37137                           
 37138                           ; BSR set to: 2
 37139                           ;i2c1.c: 692: }
 37140                           ;i2c1.c: 695: if (*pflag == I2C1_MESSAGE_PENDING)
 37141  0197EE  C119  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 37142  0197F2  C11A  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 37143  0197F6  0E02               	movlw	2
 37144  0197F8  18DE               	xorwf	postinc2,w,c
 37145  0197FA  A4D8               	btfss	status,2,c
 37146  0197FC  0012               	return	
 37147                           
 37148                           ; BSR set to: 2
 37149                           ;i2c1.c: 696: {
 37150                           ;i2c1.c: 697: I2C1_WaitForLastPacketToComplete();
 37151  0197FE  EC1B  F0D9         	call	_I2C1_WaitForLastPacketToComplete	;wreg free
 37152                           
 37153                           ;i2c1.c: 702: PIR3bits.SSP1IF = 1;
 37154  019802  010E               	movlb	14	; () banked
 37155  019804  8136               	bsf	54,0,b	;volatile
 37156  019806  0012               	return	
 37157  019808                     __end_of_I2C1_MasterTRBInsert:
 37158                           	opt stack 0
 37159                           tosu	equ	0xFFF
 37160                           tosh	equ	0xFFE
 37161                           tosl	equ	0xFFD
 37162                           pclath	equ	0xFFA
 37163                           tblptru	equ	0xFF8
 37164                           tblptrh	equ	0xFF7
 37165                           tblptrl	equ	0xFF6
 37166                           tablat	equ	0xFF5
 37167                           prodh	equ	0xFF4
 37168                           prodl	equ	0xFF3
 37169                           intcon	equ	0xFF2
 37170                           indf0	equ	0xFEF
 37171                           postinc0	equ	0xFEE
 37172                           fsr0h	equ	0xFEA
 37173                           fsr0l	equ	0xFE9
 37174                           wreg	equ	0xFE8
 37175                           indf1	equ	0xFE7
 37176                           postdec1	equ	0xFE5
 37177                           plusw1	equ	0xFE3
 37178                           fsr1h	equ	0xFE2
 37179                           fsr1l	equ	0xFE1
 37180                           indf2	equ	0xFDF
 37181                           postinc2	equ	0xFDE
 37182                           postdec2	equ	0xFDD
 37183                           plusw2	equ	0xFDB
 37184                           fsr2h	equ	0xFDA
 37185                           fsr2l	equ	0xFD9
 37186                           status	equ	0xFD8
 37187                           
 37188 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 37189 ;; Defined at:
 37190 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 37191 ;; Parameters:    Size  Location     Type
 37192 ;;		None
 37193 ;; Auto vars:     Size  Location     Type
 37194 ;;		None
 37195 ;; Return value:  Size  Location     Type
 37196 ;;                  1    wreg      void 
 37197 ;; Registers used:
 37198 ;;		wreg, status,2
 37199 ;; Tracked objects:
 37200 ;;		On entry : 0/0
 37201 ;;		On exit  : 0/0
 37202 ;;		Unchanged: 0/0
 37203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37208 ;;Total ram usage:        0 bytes
 37209 ;; Hardware stack levels used:    1
 37210 ;; Hardware stack levels required when called:   13
 37211 ;; This function calls:
 37212 ;;		Nothing
 37213 ;; This function is called by:
 37214 ;;		_I2C1_MasterTRBInsert
 37215 ;; This function uses a non-reentrant model
 37216 ;;
 37217                           
 37218                           	psect	text95
 37219  01B236                     __ptext95:
 37220                           	opt stack 0
 37221  01B236                     _I2C1_WaitForLastPacketToComplete:
 37222                           	opt stack 12
 37223                           
 37224                           ;i2c1.c: 647: {
 37225                           
 37226                           ;i2c1.c: 646: while(i2c1_state != S_MASTER_IDLE)
 37227                           
 37228                           ;incstack = 0
 37229  01B236  0102               	movlb	2	; () banked
 37230  01B238  516D               	movf	_i2c1_state& (0+255),w,b
 37231  01B23A  B4D8               	btfsc	status,2,c
 37232  01B23C  0012               	return	
 37233  01B23E  D7FB               	goto	_I2C1_WaitForLastPacketToComplete
 37234  01B240                     __end_of_I2C1_WaitForLastPacketToComplete:
 37235                           	opt stack 0
 37236                           tosu	equ	0xFFF
 37237                           tosh	equ	0xFFE
 37238                           tosl	equ	0xFFD
 37239                           pclath	equ	0xFFA
 37240                           tblptru	equ	0xFF8
 37241                           tblptrh	equ	0xFF7
 37242                           tblptrl	equ	0xFF6
 37243                           tablat	equ	0xFF5
 37244                           prodh	equ	0xFF4
 37245                           prodl	equ	0xFF3
 37246                           intcon	equ	0xFF2
 37247                           indf0	equ	0xFEF
 37248                           postinc0	equ	0xFEE
 37249                           fsr0h	equ	0xFEA
 37250                           fsr0l	equ	0xFE9
 37251                           wreg	equ	0xFE8
 37252                           indf1	equ	0xFE7
 37253                           postdec1	equ	0xFE5
 37254                           plusw1	equ	0xFE3
 37255                           fsr1h	equ	0xFE2
 37256                           fsr1l	equ	0xFE1
 37257                           indf2	equ	0xFDF
 37258                           postinc2	equ	0xFDE
 37259                           postdec2	equ	0xFDD
 37260                           plusw2	equ	0xFDB
 37261                           fsr2h	equ	0xFDA
 37262                           fsr2l	equ	0xFD9
 37263                           status	equ	0xFD8
 37264                           
 37265 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 37266 ;; Defined at:
 37267 ;;		line 136 in file "mcc_generated_files/interrupt_manager.c"
 37268 ;; Parameters:    Size  Location     Type
 37269 ;;		None
 37270 ;; Auto vars:     Size  Location     Type
 37271 ;;		None
 37272 ;; Return value:  Size  Location     Type
 37273 ;;                  1    wreg      void 
 37274 ;; Registers used:
 37275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37276 ;; Tracked objects:
 37277 ;;		On entry : 0/0
 37278 ;;		On exit  : 0/0
 37279 ;;		Unchanged: 0/0
 37280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37283 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37284 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37285 ;;Total ram usage:       21 bytes
 37286 ;; Hardware stack levels used:    1
 37287 ;; Hardware stack levels required when called:   12
 37288 ;; This function calls:
 37289 ;;		Absolute function
 37290 ;;		_EUSART2_Transmit_ISR
 37291 ;;		_TMR6_ISR
 37292 ;;		_TMR7_ISR
 37293 ;; This function is called by:
 37294 ;;		Interrupt level 1
 37295 ;; This function uses a non-reentrant model
 37296 ;;
 37297                           
 37298                           	psect	intcodelo
 37299  000018                     __pintcodelo:
 37300                           	opt stack 0
 37301  000018                     _INTERRUPT_InterruptManagerLow:
 37302                           	opt stack 10
 37303                           
 37304                           ; BSR set to: 2
 37305                           ;incstack = 0
 37306  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 37307  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 37308  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 37309  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 37310  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 37311  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 37312  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 37313  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 37314  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 37315  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 37316  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 37317  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 37318  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 37319  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 37320  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 37321  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 37322  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 37323  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 37324  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 37325  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 37326  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 37327  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 37328                           
 37329                           ;interrupt_manager.c: 139: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 37330  00006E  010E               	movlb	14	; () banked
 37331  000070  BB2E               	btfsc	46,5,b	;volatile
 37332                           
 37333                           ; BSR set to: 14
 37334  000072  AB38               	btfss	56,5,b	;volatile
 37335  000074  D003               	goto	i1l267
 37336                           
 37337                           ; BSR set to: 14
 37338                           ;interrupt_manager.c: 140: {
 37339                           ;interrupt_manager.c: 141: TMR6_ISR();
 37340  000076  ECF0  F0D6         	call	_TMR6_ISR	;wreg free
 37341                           
 37342                           ;interrupt_manager.c: 142: }
 37343  00007A  D015               	goto	i1l271
 37344  00007C                     i1l267:
 37345                           
 37346                           ; BSR set to: 14
 37347                           ;interrupt_manager.c: 143: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 37348  00007C  BD2C               	btfsc	44,6,b	;volatile
 37349                           
 37350                           ; BSR set to: 14
 37351  00007E  AD36               	btfss	54,6,b	;volatile
 37352  000080  D00D               	goto	i1l269
 37353                           
 37354                           ; BSR set to: 14
 37355                           ;interrupt_manager.c: 144: {
 37356                           ;interrupt_manager.c: 145: EUSART2_TxDefaultInterruptHandler();
 37357  000082  D801               	call	i1u3447_28
 37358  000084  D010               	goto	i1l271
 37359  000086                     i1u3447_28:
 37360  000086  0005               	push	
 37361  000088  6EFA               	movwf	pclath,c
 37362  00008A  0102               	movlb	2	; () banked
 37363  00008C  5159               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 37364  00008E  6EFD               	movwf	tosl,c
 37365  000090  515A               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 37366  000092  6EFE               	movwf	tosh,c
 37367  000094  515B               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 37368  000096  6EFF               	movwf	tosu,c
 37369  000098  50FA               	movf	pclath,w,c
 37370  00009A  0012               	return		;indir
 37371  00009C                     i1l269:
 37372                           
 37373                           ; BSR set to: 14
 37374                           ;interrupt_manager.c: 147: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 37375  00009C  BD2E               	btfsc	46,6,b	;volatile
 37376                           
 37377                           ; BSR set to: 14
 37378  00009E  AD38               	btfss	56,6,b	;volatile
 37379  0000A0  D002               	goto	i1l271
 37380                           
 37381                           ; BSR set to: 14
 37382                           ;interrupt_manager.c: 148: {
 37383                           ;interrupt_manager.c: 149: TMR7_ISR();
 37384  0000A2  EC1B  F0D6         	call	_TMR7_ISR	;wreg free
 37385  0000A6                     i1l271:
 37386                           
 37387                           ;interrupt_manager.c: 151: else
 37388                           ;interrupt_manager.c: 152: {
 37389  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 37390  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 37391  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 37392  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 37393  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 37394  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 37395  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 37396  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 37397  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 37398  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 37399  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 37400  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 37401  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 37402  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 37403  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 37404  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 37405  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 37406  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 37407  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 37408  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 37409  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 37410  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 37411  0000FC  0010               	retfie	
 37412  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 37413                           	opt stack 0
 37414                           tosu	equ	0xFFF
 37415                           tosh	equ	0xFFE
 37416                           tosl	equ	0xFFD
 37417                           pclatu	equ	0xFFB
 37418                           pclath	equ	0xFFA
 37419                           tblptru	equ	0xFF8
 37420                           tblptrh	equ	0xFF7
 37421                           tblptrl	equ	0xFF6
 37422                           tablat	equ	0xFF5
 37423                           prodh	equ	0xFF4
 37424                           prodl	equ	0xFF3
 37425                           intcon	equ	0xFF2
 37426                           indf0	equ	0xFEF
 37427                           postinc0	equ	0xFEE
 37428                           fsr0h	equ	0xFEA
 37429                           fsr0l	equ	0xFE9
 37430                           wreg	equ	0xFE8
 37431                           indf1	equ	0xFE7
 37432                           postdec1	equ	0xFE5
 37433                           plusw1	equ	0xFE3
 37434                           fsr1h	equ	0xFE2
 37435                           fsr1l	equ	0xFE1
 37436                           bsr	equ	0xFE0
 37437                           indf2	equ	0xFDF
 37438                           postinc2	equ	0xFDE
 37439                           postdec2	equ	0xFDD
 37440                           plusw2	equ	0xFDB
 37441                           fsr2h	equ	0xFDA
 37442                           fsr2l	equ	0xFD9
 37443                           status	equ	0xFD8
 37444                           
 37445 ;; *************** function _TMR7_ISR *****************
 37446 ;; Defined at:
 37447 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 37448 ;; Parameters:    Size  Location     Type
 37449 ;;		None
 37450 ;; Auto vars:     Size  Location     Type
 37451 ;;		None
 37452 ;; Return value:  Size  Location     Type
 37453 ;;                  1    wreg      void 
 37454 ;; Registers used:
 37455 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 37456 ;; Tracked objects:
 37457 ;;		On entry : 0/0
 37458 ;;		On exit  : 0/0
 37459 ;;		Unchanged: 0/0
 37460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37465 ;;Total ram usage:        0 bytes
 37466 ;; Hardware stack levels used:    1
 37467 ;; Hardware stack levels required when called:   11
 37468 ;; This function calls:
 37469 ;;		Absolute function
 37470 ;;		_TMR7_DefaultInterruptHandler
 37471 ;;		_TMR7_WriteTimer
 37472 ;;		_acquisitionTimerCallback
 37473 ;; This function is called by:
 37474 ;;		_INTERRUPT_InterruptManagerLow
 37475 ;; This function uses a non-reentrant model
 37476 ;;
 37477                           
 37478                           	psect	text97
 37479  01AC36                     __ptext97:
 37480                           	opt stack 0
 37481  01AC36                     _TMR7_ISR:
 37482                           	opt stack 10
 37483                           
 37484                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 37485                           
 37486                           ;incstack = 0
 37487  01AC36  010E               	movlb	14	; () banked
 37488  01AC38  9D38               	bcf	56,6,b	;volatile
 37489                           
 37490                           ; BSR set to: 14
 37491                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 37492  01AC3A  C268  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 37493  01AC3E  C269  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 37494  01AC42  EC2B  F0D7         	call	_TMR7_WriteTimer	;wreg free
 37495                           
 37496                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 37497  01AC46  0102               	movlb	2	; () banked
 37498  01AC48  514D               	movf	_TMR7_InterruptHandler& (0+255),w,b
 37499  01AC4A  114E               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 37500  01AC4C  114F               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 37501  01AC4E  B4D8               	btfsc	status,2,c
 37502  01AC50  0012               	return	
 37503                           
 37504                           ; BSR set to: 2
 37505                           ;tmr7.c: 172: {
 37506                           ;tmr7.c: 173: TMR7_InterruptHandler();
 37507  01AC52  D801               	call	i1u3414_28
 37508  01AC54  0012               	return	
 37509  01AC56                     i1u3414_28:
 37510  01AC56  0005               	push	
 37511  01AC58  6EFA               	movwf	pclath,c
 37512  01AC5A  514D               	movf	_TMR7_InterruptHandler& (0+255),w,b
 37513  01AC5C  6EFD               	movwf	tosl,c
 37514  01AC5E  514E               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 37515  01AC60  6EFE               	movwf	tosh,c
 37516  01AC62  514F               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 37517  01AC64  6EFF               	movwf	tosu,c
 37518  01AC66  50FA               	movf	pclath,w,c
 37519  01AC68  0012               	return		;indir
 37520  01AC6A                     __end_of_TMR7_ISR:
 37521                           	opt stack 0
 37522                           tosu	equ	0xFFF
 37523                           tosh	equ	0xFFE
 37524                           tosl	equ	0xFFD
 37525                           pclatu	equ	0xFFB
 37526                           pclath	equ	0xFFA
 37527                           tblptru	equ	0xFF8
 37528                           tblptrh	equ	0xFF7
 37529                           tblptrl	equ	0xFF6
 37530                           tablat	equ	0xFF5
 37531                           prodh	equ	0xFF4
 37532                           prodl	equ	0xFF3
 37533                           intcon	equ	0xFF2
 37534                           indf0	equ	0xFEF
 37535                           postinc0	equ	0xFEE
 37536                           fsr0h	equ	0xFEA
 37537                           fsr0l	equ	0xFE9
 37538                           wreg	equ	0xFE8
 37539                           indf1	equ	0xFE7
 37540                           postdec1	equ	0xFE5
 37541                           plusw1	equ	0xFE3
 37542                           fsr1h	equ	0xFE2
 37543                           fsr1l	equ	0xFE1
 37544                           bsr	equ	0xFE0
 37545                           indf2	equ	0xFDF
 37546                           postinc2	equ	0xFDE
 37547                           postdec2	equ	0xFDD
 37548                           plusw2	equ	0xFDB
 37549                           fsr2h	equ	0xFDA
 37550                           fsr2l	equ	0xFD9
 37551                           status	equ	0xFD8
 37552                           
 37553 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 37554 ;; Defined at:
 37555 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 37556 ;; Parameters:    Size  Location     Type
 37557 ;;		None
 37558 ;; Auto vars:     Size  Location     Type
 37559 ;;		None
 37560 ;; Return value:  Size  Location     Type
 37561 ;;                  1    wreg      void 
 37562 ;; Registers used:
 37563 ;;		None
 37564 ;; Tracked objects:
 37565 ;;		On entry : 0/0
 37566 ;;		On exit  : 0/0
 37567 ;;		Unchanged: 0/0
 37568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37573 ;;Total ram usage:        0 bytes
 37574 ;; Hardware stack levels used:    1
 37575 ;; Hardware stack levels required when called:    9
 37576 ;; This function calls:
 37577 ;;		Nothing
 37578 ;; This function is called by:
 37579 ;;		_TMR7_Initialize
 37580 ;;		_TMR7_ISR
 37581 ;; This function uses a non-reentrant model
 37582 ;;
 37583                           
 37584                           	psect	text98
 37585  01B28A                     __ptext98:
 37586                           	opt stack 0
 37587  01B28A                     _TMR7_DefaultInterruptHandler:
 37588                           	opt stack 11
 37589                           
 37590                           ;incstack = 0
 37591  01B28A  0012               	return		;funcret
 37592  01B28C                     __end_of_TMR7_DefaultInterruptHandler:
 37593                           	opt stack 0
 37594                           tosu	equ	0xFFF
 37595                           tosh	equ	0xFFE
 37596                           tosl	equ	0xFFD
 37597                           pclatu	equ	0xFFB
 37598                           pclath	equ	0xFFA
 37599                           tblptru	equ	0xFF8
 37600                           tblptrh	equ	0xFF7
 37601                           tblptrl	equ	0xFF6
 37602                           tablat	equ	0xFF5
 37603                           prodh	equ	0xFF4
 37604                           prodl	equ	0xFF3
 37605                           intcon	equ	0xFF2
 37606                           indf0	equ	0xFEF
 37607                           postinc0	equ	0xFEE
 37608                           fsr0h	equ	0xFEA
 37609                           fsr0l	equ	0xFE9
 37610                           wreg	equ	0xFE8
 37611                           indf1	equ	0xFE7
 37612                           postdec1	equ	0xFE5
 37613                           plusw1	equ	0xFE3
 37614                           fsr1h	equ	0xFE2
 37615                           fsr1l	equ	0xFE1
 37616                           bsr	equ	0xFE0
 37617                           indf2	equ	0xFDF
 37618                           postinc2	equ	0xFDE
 37619                           postdec2	equ	0xFDD
 37620                           plusw2	equ	0xFDB
 37621                           fsr2h	equ	0xFDA
 37622                           fsr2l	equ	0xFD9
 37623                           status	equ	0xFD8
 37624                           
 37625 ;; *************** function _acquisitionTimerCallback *****************
 37626 ;; Defined at:
 37627 ;;		line 411 in file "main.c"
 37628 ;; Parameters:    Size  Location     Type
 37629 ;;		None
 37630 ;; Auto vars:     Size  Location     Type
 37631 ;;		None
 37632 ;; Return value:  Size  Location     Type
 37633 ;;                  1    wreg      void 
 37634 ;; Registers used:
 37635 ;;		wreg, status,2, cstack
 37636 ;; Tracked objects:
 37637 ;;		On entry : 0/0
 37638 ;;		On exit  : 0/0
 37639 ;;		Unchanged: 0/0
 37640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37645 ;;Total ram usage:        0 bytes
 37646 ;; Hardware stack levels used:    1
 37647 ;; Hardware stack levels required when called:   10
 37648 ;; This function calls:
 37649 ;;		_ADCC_ClearAccumulator
 37650 ;;		_ADCC_DischargeSampleCapacitor
 37651 ;;		_ADCC_StartConversion
 37652 ;; This function is called by:
 37653 ;;		_main
 37654 ;;		_TMR7_ISR
 37655 ;; This function uses a non-reentrant model
 37656 ;;
 37657                           
 37658                           	psect	text99
 37659  01B140                     __ptext99:
 37660                           	opt stack 0
 37661  01B140                     _acquisitionTimerCallback:
 37662                           	opt stack 10
 37663                           
 37664                           ;main.c: 414: ADCC_DischargeSampleCapacitor();
 37665                           
 37666                           ;incstack = 0
 37667  01B140  EC2E  F0D9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 37668                           
 37669                           ;main.c: 417: ADCC_ClearAccumulator();
 37670  01B144  EC35  F0D9         	call	_ADCC_ClearAccumulator	;wreg free
 37671                           
 37672                           ;main.c: 420: ADCC_StartConversion(next_channel);
 37673  01B148  0102               	movlb	2	; () banked
 37674  01B14A  51F4               	movf	_next_channel& (0+255),w,b
 37675  01B14C  EC08  F0D9         	call	_ADCC_StartConversion
 37676  01B150  0012               	return		;funcret
 37677  01B152                     __end_of_acquisitionTimerCallback:
 37678                           	opt stack 0
 37679                           tosu	equ	0xFFF
 37680                           tosh	equ	0xFFE
 37681                           tosl	equ	0xFFD
 37682                           pclatu	equ	0xFFB
 37683                           pclath	equ	0xFFA
 37684                           tblptru	equ	0xFF8
 37685                           tblptrh	equ	0xFF7
 37686                           tblptrl	equ	0xFF6
 37687                           tablat	equ	0xFF5
 37688                           prodh	equ	0xFF4
 37689                           prodl	equ	0xFF3
 37690                           intcon	equ	0xFF2
 37691                           indf0	equ	0xFEF
 37692                           postinc0	equ	0xFEE
 37693                           fsr0h	equ	0xFEA
 37694                           fsr0l	equ	0xFE9
 37695                           wreg	equ	0xFE8
 37696                           indf1	equ	0xFE7
 37697                           postdec1	equ	0xFE5
 37698                           plusw1	equ	0xFE3
 37699                           fsr1h	equ	0xFE2
 37700                           fsr1l	equ	0xFE1
 37701                           bsr	equ	0xFE0
 37702                           indf2	equ	0xFDF
 37703                           postinc2	equ	0xFDE
 37704                           postdec2	equ	0xFDD
 37705                           plusw2	equ	0xFDB
 37706                           fsr2h	equ	0xFDA
 37707                           fsr2l	equ	0xFD9
 37708                           status	equ	0xFD8
 37709                           
 37710 ;; *************** function _ADCC_StartConversion *****************
 37711 ;; Defined at:
 37712 ;;		line 115 in file "mcc_generated_files/adcc.c"
 37713 ;; Parameters:    Size  Location     Type
 37714 ;;  channel         1    wreg     enum E17782
 37715 ;; Auto vars:     Size  Location     Type
 37716 ;;  channel         1    0[BANK1 ] enum E17782
 37717 ;; Return value:  Size  Location     Type
 37718 ;;                  1    wreg      void 
 37719 ;; Registers used:
 37720 ;;		wreg
 37721 ;; Tracked objects:
 37722 ;;		On entry : 0/0
 37723 ;;		On exit  : 0/0
 37724 ;;		Unchanged: 0/0
 37725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37727 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37729 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37730 ;;Total ram usage:        1 bytes
 37731 ;; Hardware stack levels used:    1
 37732 ;; Hardware stack levels required when called:    9
 37733 ;; This function calls:
 37734 ;;		Nothing
 37735 ;; This function is called by:
 37736 ;;		_acquisitionTimerCallback
 37737 ;; This function uses a non-reentrant model
 37738 ;;
 37739                           
 37740                           	psect	text100
 37741  01B210                     __ptext100:
 37742                           	opt stack 0
 37743  01B210                     _ADCC_StartConversion:
 37744                           	opt stack 10
 37745                           
 37746                           ;incstack = 0
 37747                           ;ADCC_StartConversion@channel stored from wreg
 37748  01B210  0101               	movlb	1	; () banked
 37749  01B212  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 37750                           
 37751                           ;adcc.c: 118: ADPCH = channel;
 37752  01B214  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 37753                           
 37754                           ;adcc.c: 121: ADCON0bits.ADON = 1;
 37755  01B218  8E60               	bsf	3936,7,c	;volatile
 37756                           
 37757                           ;adcc.c: 124: ADCON0bits.ADGO = 1;
 37758  01B21A  8060               	bsf	3936,0,c	;volatile
 37759  01B21C  0012               	return		;funcret
 37760  01B21E                     __end_of_ADCC_StartConversion:
 37761                           	opt stack 0
 37762                           tosu	equ	0xFFF
 37763                           tosh	equ	0xFFE
 37764                           tosl	equ	0xFFD
 37765                           pclatu	equ	0xFFB
 37766                           pclath	equ	0xFFA
 37767                           tblptru	equ	0xFF8
 37768                           tblptrh	equ	0xFF7
 37769                           tblptrl	equ	0xFF6
 37770                           tablat	equ	0xFF5
 37771                           prodh	equ	0xFF4
 37772                           prodl	equ	0xFF3
 37773                           intcon	equ	0xFF2
 37774                           indf0	equ	0xFEF
 37775                           postinc0	equ	0xFEE
 37776                           fsr0h	equ	0xFEA
 37777                           fsr0l	equ	0xFE9
 37778                           wreg	equ	0xFE8
 37779                           indf1	equ	0xFE7
 37780                           postdec1	equ	0xFE5
 37781                           plusw1	equ	0xFE3
 37782                           fsr1h	equ	0xFE2
 37783                           fsr1l	equ	0xFE1
 37784                           bsr	equ	0xFE0
 37785                           indf2	equ	0xFDF
 37786                           postinc2	equ	0xFDE
 37787                           postdec2	equ	0xFDD
 37788                           plusw2	equ	0xFDB
 37789                           fsr2h	equ	0xFDA
 37790                           fsr2l	equ	0xFD9
 37791                           status	equ	0xFD8
 37792                           
 37793 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 37794 ;; Defined at:
 37795 ;;		line 177 in file "mcc_generated_files/adcc.c"
 37796 ;; Parameters:    Size  Location     Type
 37797 ;;		None
 37798 ;; Auto vars:     Size  Location     Type
 37799 ;;		None
 37800 ;; Return value:  Size  Location     Type
 37801 ;;                  1    wreg      void 
 37802 ;; Registers used:
 37803 ;;		wreg, status,2
 37804 ;; Tracked objects:
 37805 ;;		On entry : 0/0
 37806 ;;		On exit  : 0/0
 37807 ;;		Unchanged: 0/0
 37808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37813 ;;Total ram usage:        0 bytes
 37814 ;; Hardware stack levels used:    1
 37815 ;; Hardware stack levels required when called:    9
 37816 ;; This function calls:
 37817 ;;		Nothing
 37818 ;; This function is called by:
 37819 ;;		_acquisitionTimerCallback
 37820 ;; This function uses a non-reentrant model
 37821 ;;
 37822                           
 37823                           	psect	text101
 37824  01B25C                     __ptext101:
 37825                           	opt stack 0
 37826  01B25C                     _ADCC_DischargeSampleCapacitor:
 37827                           	opt stack 10
 37828                           
 37829                           ;adcc.c: 180: ADPCH = 0x3c;
 37830                           
 37831                           ;incstack = 0
 37832  01B25C  0E3C               	movlw	60
 37833  01B25E  010F               	movlb	15	; () banked
 37834  01B260  6F5F               	movwf	95,b	;volatile
 37835                           
 37836                           ; BSR set to: 15
 37837  01B262  0012               	return		;funcret
 37838  01B264                     __end_of_ADCC_DischargeSampleCapacitor:
 37839                           	opt stack 0
 37840                           tosu	equ	0xFFF
 37841                           tosh	equ	0xFFE
 37842                           tosl	equ	0xFFD
 37843                           pclatu	equ	0xFFB
 37844                           pclath	equ	0xFFA
 37845                           tblptru	equ	0xFF8
 37846                           tblptrh	equ	0xFF7
 37847                           tblptrl	equ	0xFF6
 37848                           tablat	equ	0xFF5
 37849                           prodh	equ	0xFF4
 37850                           prodl	equ	0xFF3
 37851                           intcon	equ	0xFF2
 37852                           indf0	equ	0xFEF
 37853                           postinc0	equ	0xFEE
 37854                           fsr0h	equ	0xFEA
 37855                           fsr0l	equ	0xFE9
 37856                           wreg	equ	0xFE8
 37857                           indf1	equ	0xFE7
 37858                           postdec1	equ	0xFE5
 37859                           plusw1	equ	0xFE3
 37860                           fsr1h	equ	0xFE2
 37861                           fsr1l	equ	0xFE1
 37862                           bsr	equ	0xFE0
 37863                           indf2	equ	0xFDF
 37864                           postinc2	equ	0xFDE
 37865                           postdec2	equ	0xFDD
 37866                           plusw2	equ	0xFDB
 37867                           fsr2h	equ	0xFDA
 37868                           fsr2l	equ	0xFD9
 37869                           status	equ	0xFD8
 37870                           
 37871 ;; *************** function _ADCC_ClearAccumulator *****************
 37872 ;; Defined at:
 37873 ;;		line 207 in file "mcc_generated_files/adcc.c"
 37874 ;; Parameters:    Size  Location     Type
 37875 ;;		None
 37876 ;; Auto vars:     Size  Location     Type
 37877 ;;		None
 37878 ;; Return value:  Size  Location     Type
 37879 ;;                  1    wreg      void 
 37880 ;; Registers used:
 37881 ;;		None
 37882 ;; Tracked objects:
 37883 ;;		On entry : 0/0
 37884 ;;		On exit  : 0/0
 37885 ;;		Unchanged: 0/0
 37886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37891 ;;Total ram usage:        0 bytes
 37892 ;; Hardware stack levels used:    1
 37893 ;; Hardware stack levels required when called:    9
 37894 ;; This function calls:
 37895 ;;		Nothing
 37896 ;; This function is called by:
 37897 ;;		_acquisitionTimerCallback
 37898 ;; This function uses a non-reentrant model
 37899 ;;
 37900                           
 37901                           	psect	text102
 37902  01B26A                     __ptext102:
 37903                           	opt stack 0
 37904  01B26A                     _ADCC_ClearAccumulator:
 37905                           	opt stack 10
 37906                           
 37907                           ;adcc.c: 210: ADCON2bits.ADACLR = 1;
 37908                           
 37909                           ; BSR set to: 15
 37910                           ;incstack = 0
 37911  01B26A  010F               	movlb	15	; () banked
 37912  01B26C  875A               	bsf	90,3,b	;volatile
 37913                           
 37914                           ; BSR set to: 15
 37915  01B26E  0012               	return		;funcret
 37916  01B270                     __end_of_ADCC_ClearAccumulator:
 37917                           	opt stack 0
 37918                           tosu	equ	0xFFF
 37919                           tosh	equ	0xFFE
 37920                           tosl	equ	0xFFD
 37921                           pclatu	equ	0xFFB
 37922                           pclath	equ	0xFFA
 37923                           tblptru	equ	0xFF8
 37924                           tblptrh	equ	0xFF7
 37925                           tblptrl	equ	0xFF6
 37926                           tablat	equ	0xFF5
 37927                           prodh	equ	0xFF4
 37928                           prodl	equ	0xFF3
 37929                           intcon	equ	0xFF2
 37930                           indf0	equ	0xFEF
 37931                           postinc0	equ	0xFEE
 37932                           fsr0h	equ	0xFEA
 37933                           fsr0l	equ	0xFE9
 37934                           wreg	equ	0xFE8
 37935                           indf1	equ	0xFE7
 37936                           postdec1	equ	0xFE5
 37937                           plusw1	equ	0xFE3
 37938                           fsr1h	equ	0xFE2
 37939                           fsr1l	equ	0xFE1
 37940                           bsr	equ	0xFE0
 37941                           indf2	equ	0xFDF
 37942                           postinc2	equ	0xFDE
 37943                           postdec2	equ	0xFDD
 37944                           plusw2	equ	0xFDB
 37945                           fsr2h	equ	0xFDA
 37946                           fsr2l	equ	0xFD9
 37947                           status	equ	0xFD8
 37948                           
 37949 ;; *************** function _TMR7_WriteTimer *****************
 37950 ;; Defined at:
 37951 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 37952 ;; Parameters:    Size  Location     Type
 37953 ;;  timerVal        2    0[BANK1 ] unsigned int 
 37954 ;; Auto vars:     Size  Location     Type
 37955 ;;		None
 37956 ;; Return value:  Size  Location     Type
 37957 ;;                  1    wreg      void 
 37958 ;; Registers used:
 37959 ;;		wreg, status,2
 37960 ;; Tracked objects:
 37961 ;;		On entry : 0/0
 37962 ;;		On exit  : 0/0
 37963 ;;		Unchanged: 0/0
 37964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37965 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37968 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37969 ;;Total ram usage:        2 bytes
 37970 ;; Hardware stack levels used:    1
 37971 ;; Hardware stack levels required when called:    9
 37972 ;; This function calls:
 37973 ;;		Nothing
 37974 ;; This function is called by:
 37975 ;;		_TMR7_ISR
 37976 ;;		_TMR7_Reload
 37977 ;; This function uses a non-reentrant model
 37978 ;;
 37979                           
 37980                           	psect	text103
 37981  01AE56                     __ptext103:
 37982                           	opt stack 0
 37983  01AE56                     _TMR7_WriteTimer:
 37984                           	opt stack 11
 37985                           
 37986                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 37987                           
 37988                           ; BSR set to: 15
 37989                           ;incstack = 0
 37990  01AE56  010F               	movlb	15	; () banked
 37991  01AE58  A530               	btfss	48,2,b	;volatile
 37992  01AE5A  D009               	goto	i1l688
 37993                           
 37994                           ; BSR set to: 15
 37995                           ;tmr7.c: 130: {
 37996                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 37997  01AE5C  9130               	bcf	48,0,b	;volatile
 37998                           
 37999                           ; BSR set to: 15
 38000                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 38001  01AE5E  0101               	movlb	1	; () banked
 38002  01AE60  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 38003  01AE62  010F               	movlb	15	; () banked
 38004  01AE64  6F2F               	movwf	47,b	;volatile
 38005                           
 38006                           ; BSR set to: 15
 38007                           ;tmr7.c: 136: TMR7L = timerVal;
 38008  01AE66  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 38009                           
 38010                           ; BSR set to: 15
 38011                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 38012  01AE6A  8130               	bsf	48,0,b	;volatile
 38013                           
 38014                           ;tmr7.c: 140: }
 38015  01AE6C  0012               	return	
 38016  01AE6E                     i1l688:
 38017                           
 38018                           ; BSR set to: 15
 38019                           ;tmr7.c: 141: else
 38020                           ;tmr7.c: 142: {
 38021                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 38022                           
 38023                           ; BSR set to: 15
 38024  01AE6E  0101               	movlb	1	; () banked
 38025  01AE70  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 38026  01AE72  010F               	movlb	15	; () banked
 38027  01AE74  6F2F               	movwf	47,b	;volatile
 38028                           
 38029                           ; BSR set to: 15
 38030                           ;tmr7.c: 145: TMR7L = timerVal;
 38031  01AE76  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 38032  01AE7A  0012               	return	
 38033  01AE7C                     __end_of_TMR7_WriteTimer:
 38034                           	opt stack 0
 38035                           tosu	equ	0xFFF
 38036                           tosh	equ	0xFFE
 38037                           tosl	equ	0xFFD
 38038                           pclatu	equ	0xFFB
 38039                           pclath	equ	0xFFA
 38040                           tblptru	equ	0xFF8
 38041                           tblptrh	equ	0xFF7
 38042                           tblptrl	equ	0xFF6
 38043                           tablat	equ	0xFF5
 38044                           prodh	equ	0xFF4
 38045                           prodl	equ	0xFF3
 38046                           intcon	equ	0xFF2
 38047                           indf0	equ	0xFEF
 38048                           postinc0	equ	0xFEE
 38049                           fsr0h	equ	0xFEA
 38050                           fsr0l	equ	0xFE9
 38051                           wreg	equ	0xFE8
 38052                           indf1	equ	0xFE7
 38053                           postdec1	equ	0xFE5
 38054                           plusw1	equ	0xFE3
 38055                           fsr1h	equ	0xFE2
 38056                           fsr1l	equ	0xFE1
 38057                           bsr	equ	0xFE0
 38058                           indf2	equ	0xFDF
 38059                           postinc2	equ	0xFDE
 38060                           postdec2	equ	0xFDD
 38061                           plusw2	equ	0xFDB
 38062                           fsr2h	equ	0xFDA
 38063                           fsr2l	equ	0xFD9
 38064                           status	equ	0xFD8
 38065                           
 38066 ;; *************** function _TMR6_ISR *****************
 38067 ;; Defined at:
 38068 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 38069 ;; Parameters:    Size  Location     Type
 38070 ;;		None
 38071 ;; Auto vars:     Size  Location     Type
 38072 ;;		None
 38073 ;; Return value:  Size  Location     Type
 38074 ;;                  1    wreg      void 
 38075 ;; Registers used:
 38076 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38077 ;; Tracked objects:
 38078 ;;		On entry : 0/0
 38079 ;;		On exit  : 0/0
 38080 ;;		Unchanged: 0/0
 38081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38086 ;;Total ram usage:        0 bytes
 38087 ;; Hardware stack levels used:    1
 38088 ;; Hardware stack levels required when called:   10
 38089 ;; This function calls:
 38090 ;;		Absolute function
 38091 ;;		_TMR6_DefaultInterruptHandler
 38092 ;;		_heartbeatTimerCallback
 38093 ;; This function is called by:
 38094 ;;		_INTERRUPT_InterruptManagerLow
 38095 ;; This function uses a non-reentrant model
 38096 ;;
 38097                           
 38098                           	psect	text104
 38099  01ADE0                     __ptext104:
 38100                           	opt stack 0
 38101  01ADE0                     _TMR6_ISR:
 38102                           	opt stack 11
 38103                           
 38104                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 38105                           
 38106                           ; BSR set to: 15
 38107                           ;incstack = 0
 38108  01ADE0  010E               	movlb	14	; () banked
 38109  01ADE2  9B38               	bcf	56,5,b	;volatile
 38110                           
 38111                           ; BSR set to: 14
 38112                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 38113  01ADE4  0102               	movlb	2	; () banked
 38114  01ADE6  5153               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38115  01ADE8  1154               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38116  01ADEA  1155               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38117  01ADEC  B4D8               	btfsc	status,2,c
 38118  01ADEE  0012               	return	
 38119                           
 38120                           ; BSR set to: 2
 38121                           ;tmr6.c: 172: {
 38122                           ;tmr6.c: 173: TMR6_InterruptHandler();
 38123  01ADF0  D801               	call	i1u3412_28
 38124  01ADF2  0012               	return	
 38125  01ADF4                     i1u3412_28:
 38126  01ADF4  0005               	push	
 38127  01ADF6  6EFA               	movwf	pclath,c
 38128  01ADF8  5153               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38129  01ADFA  6EFD               	movwf	tosl,c
 38130  01ADFC  5154               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38131  01ADFE  6EFE               	movwf	tosh,c
 38132  01AE00  5155               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38133  01AE02  6EFF               	movwf	tosu,c
 38134  01AE04  50FA               	movf	pclath,w,c
 38135  01AE06  0012               	return		;indir
 38136  01AE08                     __end_of_TMR6_ISR:
 38137                           	opt stack 0
 38138                           tosu	equ	0xFFF
 38139                           tosh	equ	0xFFE
 38140                           tosl	equ	0xFFD
 38141                           pclatu	equ	0xFFB
 38142                           pclath	equ	0xFFA
 38143                           tblptru	equ	0xFF8
 38144                           tblptrh	equ	0xFF7
 38145                           tblptrl	equ	0xFF6
 38146                           tablat	equ	0xFF5
 38147                           prodh	equ	0xFF4
 38148                           prodl	equ	0xFF3
 38149                           intcon	equ	0xFF2
 38150                           indf0	equ	0xFEF
 38151                           postinc0	equ	0xFEE
 38152                           fsr0h	equ	0xFEA
 38153                           fsr0l	equ	0xFE9
 38154                           wreg	equ	0xFE8
 38155                           indf1	equ	0xFE7
 38156                           postdec1	equ	0xFE5
 38157                           plusw1	equ	0xFE3
 38158                           fsr1h	equ	0xFE2
 38159                           fsr1l	equ	0xFE1
 38160                           bsr	equ	0xFE0
 38161                           indf2	equ	0xFDF
 38162                           postinc2	equ	0xFDE
 38163                           postdec2	equ	0xFDD
 38164                           plusw2	equ	0xFDB
 38165                           fsr2h	equ	0xFDA
 38166                           fsr2l	equ	0xFD9
 38167                           status	equ	0xFD8
 38168                           
 38169 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 38170 ;; Defined at:
 38171 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 38172 ;; Parameters:    Size  Location     Type
 38173 ;;		None
 38174 ;; Auto vars:     Size  Location     Type
 38175 ;;		None
 38176 ;; Return value:  Size  Location     Type
 38177 ;;                  1    wreg      void 
 38178 ;; Registers used:
 38179 ;;		None
 38180 ;; Tracked objects:
 38181 ;;		On entry : 0/0
 38182 ;;		On exit  : 0/0
 38183 ;;		Unchanged: 0/0
 38184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38189 ;;Total ram usage:        0 bytes
 38190 ;; Hardware stack levels used:    1
 38191 ;; Hardware stack levels required when called:    9
 38192 ;; This function calls:
 38193 ;;		Nothing
 38194 ;; This function is called by:
 38195 ;;		_TMR6_Initialize
 38196 ;;		_TMR6_ISR
 38197 ;; This function uses a non-reentrant model
 38198 ;;
 38199                           
 38200                           	psect	text105
 38201  01B28C                     __ptext105:
 38202                           	opt stack 0
 38203  01B28C                     _TMR6_DefaultInterruptHandler:
 38204                           	opt stack 11
 38205                           
 38206                           ;incstack = 0
 38207  01B28C  0012               	return		;funcret
 38208  01B28E                     __end_of_TMR6_DefaultInterruptHandler:
 38209                           	opt stack 0
 38210                           tosu	equ	0xFFF
 38211                           tosh	equ	0xFFE
 38212                           tosl	equ	0xFFD
 38213                           pclatu	equ	0xFFB
 38214                           pclath	equ	0xFFA
 38215                           tblptru	equ	0xFF8
 38216                           tblptrh	equ	0xFF7
 38217                           tblptrl	equ	0xFF6
 38218                           tablat	equ	0xFF5
 38219                           prodh	equ	0xFF4
 38220                           prodl	equ	0xFF3
 38221                           intcon	equ	0xFF2
 38222                           indf0	equ	0xFEF
 38223                           postinc0	equ	0xFEE
 38224                           fsr0h	equ	0xFEA
 38225                           fsr0l	equ	0xFE9
 38226                           wreg	equ	0xFE8
 38227                           indf1	equ	0xFE7
 38228                           postdec1	equ	0xFE5
 38229                           plusw1	equ	0xFE3
 38230                           fsr1h	equ	0xFE2
 38231                           fsr1l	equ	0xFE1
 38232                           bsr	equ	0xFE0
 38233                           indf2	equ	0xFDF
 38234                           postinc2	equ	0xFDE
 38235                           postdec2	equ	0xFDD
 38236                           plusw2	equ	0xFDB
 38237                           fsr2h	equ	0xFDA
 38238                           fsr2l	equ	0xFD9
 38239                           status	equ	0xFD8
 38240                           
 38241 ;; *************** function _heartbeatTimerCallback *****************
 38242 ;; Defined at:
 38243 ;;		line 210 in file "main.c"
 38244 ;; Parameters:    Size  Location     Type
 38245 ;;		None
 38246 ;; Auto vars:     Size  Location     Type
 38247 ;;		None
 38248 ;; Return value:  Size  Location     Type
 38249 ;;                  1    wreg      void 
 38250 ;; Registers used:
 38251 ;;		wreg, status,2, status,0
 38252 ;; Tracked objects:
 38253 ;;		On entry : 0/0
 38254 ;;		On exit  : 0/0
 38255 ;;		Unchanged: 0/0
 38256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38259 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38260 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38261 ;;Total ram usage:        1 bytes
 38262 ;; Hardware stack levels used:    1
 38263 ;; Hardware stack levels required when called:    9
 38264 ;; This function calls:
 38265 ;;		Nothing
 38266 ;; This function is called by:
 38267 ;;		_main
 38268 ;;		_TMR6_ISR
 38269 ;; This function uses a non-reentrant model
 38270 ;;
 38271                           
 38272                           	psect	text106
 38273  01A892                     __ptext106:
 38274                           	opt stack 0
 38275  01A892                     _heartbeatTimerCallback:
 38276                           	opt stack 11
 38277                           
 38278                           ;main.c: 213: LATFbits.LATF2 = !LATFbits.LATF2;
 38279                           
 38280                           ;incstack = 0
 38281  01A892  B47E               	btfsc	3966,2,c	;volatile
 38282  01A894  D004               	goto	i1u1471_20
 38283  01A896  0101               	movlb	1	; () banked
 38284  01A898  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 38285  01A89A  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 38286  01A89C  D002               	goto	i1u1472_28
 38287  01A89E                     i1u1471_20:
 38288  01A89E  0101               	movlb	1	; () banked
 38289  01A8A0  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 38290  01A8A2                     i1u1472_28:
 38291  01A8A2  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 38292  01A8A4  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 38293  01A8A6  507E               	movf	3966,w,c	;volatile
 38294  01A8A8  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 38295  01A8AA  0BFB               	andlw	-5
 38296  01A8AC  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 38297  01A8AE  6E7E               	movwf	3966,c	;volatile
 38298                           
 38299                           ;main.c: 216: dev_on_time++;
 38300  01A8B0  0E01               	movlw	1
 38301  01A8B2  0102               	movlb	2	; () banked
 38302  01A8B4  272C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 38303  01A8B6  0E00               	movlw	0
 38304  01A8B8  232D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 38305  01A8BA  232E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 38306  01A8BC  232F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 38307                           
 38308                           ; BSR set to: 2
 38309                           ;main.c: 219: if (load_enable) {
 38310  01A8BE  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 38311  01A8C0  D006               	goto	i1l1184
 38312                           
 38313                           ; BSR set to: 2
 38314                           ;main.c: 221: load_on_time++;
 38315  01A8C2  0E01               	movlw	1
 38316  01A8C4  2728               	addwf	_load_on_time& (0+255),f,b	;volatile
 38317  01A8C6  0E00               	movlw	0
 38318  01A8C8  2329               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 38319  01A8CA  232A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 38320  01A8CC  232B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 38321  01A8CE                     i1l1184:
 38322                           
 38323                           ; BSR set to: 2
 38324  01A8CE  0004               	clrwdt		;# 
 38325  01A8D0  0012               	return		;funcret
 38326  01A8D2                     __end_of_heartbeatTimerCallback:
 38327                           	opt stack 0
 38328                           tosu	equ	0xFFF
 38329                           tosh	equ	0xFFE
 38330                           tosl	equ	0xFFD
 38331                           pclatu	equ	0xFFB
 38332                           pclath	equ	0xFFA
 38333                           tblptru	equ	0xFF8
 38334                           tblptrh	equ	0xFF7
 38335                           tblptrl	equ	0xFF6
 38336                           tablat	equ	0xFF5
 38337                           prodh	equ	0xFF4
 38338                           prodl	equ	0xFF3
 38339                           intcon	equ	0xFF2
 38340                           indf0	equ	0xFEF
 38341                           postinc0	equ	0xFEE
 38342                           fsr0h	equ	0xFEA
 38343                           fsr0l	equ	0xFE9
 38344                           wreg	equ	0xFE8
 38345                           indf1	equ	0xFE7
 38346                           postdec1	equ	0xFE5
 38347                           plusw1	equ	0xFE3
 38348                           fsr1h	equ	0xFE2
 38349                           fsr1l	equ	0xFE1
 38350                           bsr	equ	0xFE0
 38351                           indf2	equ	0xFDF
 38352                           postinc2	equ	0xFDE
 38353                           postdec2	equ	0xFDD
 38354                           plusw2	equ	0xFDB
 38355                           fsr2h	equ	0xFDA
 38356                           fsr2l	equ	0xFD9
 38357                           status	equ	0xFD8
 38358                           
 38359 ;; *************** function _EUSART2_Transmit_ISR *****************
 38360 ;; Defined at:
 38361 ;;		line 190 in file "mcc_generated_files/eusart2.c"
 38362 ;; Parameters:    Size  Location     Type
 38363 ;;		None
 38364 ;; Auto vars:     Size  Location     Type
 38365 ;;		None
 38366 ;; Return value:  Size  Location     Type
 38367 ;;                  1    wreg      void 
 38368 ;; Registers used:
 38369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38370 ;; Tracked objects:
 38371 ;;		On entry : 0/0
 38372 ;;		On exit  : 0/0
 38373 ;;		Unchanged: 0/0
 38374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38379 ;;Total ram usage:        0 bytes
 38380 ;; Hardware stack levels used:    1
 38381 ;; Hardware stack levels required when called:    9
 38382 ;; This function calls:
 38383 ;;		Nothing
 38384 ;; This function is called by:
 38385 ;;		_EUSART2_Initialize
 38386 ;;		_INTERRUPT_InterruptManagerLow
 38387 ;; This function uses a non-reentrant model
 38388 ;;
 38389                           
 38390                           	psect	text107
 38391  01ABCC                     __ptext107:
 38392                           	opt stack 0
 38393  01ABCC                     _EUSART2_Transmit_ISR:
 38394                           	opt stack 12
 38395                           
 38396                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 38397                           
 38398                           ;incstack = 0
 38399  01ABCC  0E80               	movlw	128
 38400  01ABCE  0101               	movlb	1	; () banked
 38401  01ABD0  61DF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 38402  01ABD2  D014               	goto	i1l445
 38403                           
 38404                           ; BSR set to: 1
 38405                           ;eusart2.c: 195: {
 38406                           ;eusart2.c: 196: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 38407  01ABD4  51E0               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 38408  01ABD6  0D01               	mullw	1
 38409  01ABD8  0E00               	movlw	low _eusart2TxBuffer
 38410  01ABDA  24F3               	addwf	prodl,w,c
 38411  01ABDC  6ED9               	movwf	fsr2l,c
 38412  01ABDE  0E04               	movlw	high _eusart2TxBuffer
 38413  01ABE0  20F4               	addwfc	prodh,w,c
 38414  01ABE2  6EDA               	movwf	fsr2h,c
 38415  01ABE4  50DF               	movf	indf2,w,c
 38416  01ABE6  010E               	movlb	14	; () banked
 38417  01ABE8  6FF2               	movwf	242,b	;volatile
 38418                           
 38419                           ; BSR set to: 14
 38420  01ABEA  0101               	movlb	1	; () banked
 38421  01ABEC  2BE0               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 38422                           
 38423                           ; BSR set to: 1
 38424                           ;eusart2.c: 197: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 38425  01ABEE  0E7F               	movlw	127
 38426  01ABF0  65E0               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 38427  01ABF2  D002               	goto	i1l446
 38428                           
 38429                           ; BSR set to: 1
 38430                           ;eusart2.c: 198: {
 38431                           ;eusart2.c: 199: eusart2TxTail = 0;
 38432  01ABF4  0E00               	movlw	0
 38433  01ABF6  6FE0               	movwf	_eusart2TxTail& (0+255),b	;volatile
 38434  01ABF8                     i1l446:
 38435                           
 38436                           ; BSR set to: 1
 38437                           ;eusart2.c: 200: }
 38438                           ;eusart2.c: 201: eusart2TxBufferRemaining++;
 38439                           
 38440                           ; BSR set to: 1
 38441  01ABF8  2BDF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 38442                           
 38443                           ;eusart2.c: 202: }
 38444  01ABFA  0012               	return	
 38445  01ABFC                     i1l445:
 38446                           
 38447                           ; BSR set to: 1
 38448                           ;eusart2.c: 203: else
 38449                           ;eusart2.c: 204: {
 38450                           ;eusart2.c: 205: PIE3bits.TX2IE = 0;
 38451  01ABFC  010E               	movlb	14	; () banked
 38452  01ABFE  9D2C               	bcf	44,6,b	;volatile
 38453  01AC00  0012               	return	
 38454  01AC02                     __end_of_EUSART2_Transmit_ISR:
 38455                           	opt stack 0
 38456                           tosu	equ	0xFFF
 38457                           tosh	equ	0xFFE
 38458                           tosl	equ	0xFFD
 38459                           pclatu	equ	0xFFB
 38460                           pclath	equ	0xFFA
 38461                           tblptru	equ	0xFF8
 38462                           tblptrh	equ	0xFF7
 38463                           tblptrl	equ	0xFF6
 38464                           tablat	equ	0xFF5
 38465                           prodh	equ	0xFF4
 38466                           prodl	equ	0xFF3
 38467                           intcon	equ	0xFF2
 38468                           indf0	equ	0xFEF
 38469                           postinc0	equ	0xFEE
 38470                           fsr0h	equ	0xFEA
 38471                           fsr0l	equ	0xFE9
 38472                           wreg	equ	0xFE8
 38473                           indf1	equ	0xFE7
 38474                           postdec1	equ	0xFE5
 38475                           plusw1	equ	0xFE3
 38476                           fsr1h	equ	0xFE2
 38477                           fsr1l	equ	0xFE1
 38478                           bsr	equ	0xFE0
 38479                           indf2	equ	0xFDF
 38480                           postinc2	equ	0xFDE
 38481                           postdec2	equ	0xFDD
 38482                           plusw2	equ	0xFDB
 38483                           fsr2h	equ	0xFDA
 38484                           fsr2l	equ	0xFD9
 38485                           status	equ	0xFD8
 38486                           
 38487 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 38488 ;; Defined at:
 38489 ;;		line 95 in file "mcc_generated_files/interrupt_manager.c"
 38490 ;; Parameters:    Size  Location     Type
 38491 ;;		None
 38492 ;; Auto vars:     Size  Location     Type
 38493 ;;		None
 38494 ;; Return value:  Size  Location     Type
 38495 ;;                  1    wreg      void 
 38496 ;; Registers used:
 38497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38498 ;; Tracked objects:
 38499 ;;		On entry : 0/0
 38500 ;;		On exit  : 0/0
 38501 ;;		Unchanged: 0/0
 38502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38505 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38506 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38507 ;;Total ram usage:       18 bytes
 38508 ;; Hardware stack levels used:    1
 38509 ;; Hardware stack levels required when called:    8
 38510 ;; This function calls:
 38511 ;;		Absolute function
 38512 ;;		_ADCC_ThresholdISR
 38513 ;;		_EUSART2_Receive_ISR
 38514 ;;		_HLVD_ISR
 38515 ;;		_I2C1_BusCollisionISR
 38516 ;;		_I2C1_ISR
 38517 ;;		_INT0_ISR
 38518 ;;		_TMR4_ISR
 38519 ;;		_TMR5_ISR
 38520 ;; This function is called by:
 38521 ;;		Interrupt level 2
 38522 ;; This function uses a non-reentrant model
 38523 ;;
 38524                           
 38525                           	psect	intcode
 38526  000008                     __pintcode:
 38527                           	opt stack 0
 38528  000008                     _INTERRUPT_InterruptManagerHigh:
 38529                           	opt stack 10
 38530                           
 38531                           ;incstack = 0
 38532  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38533  00000A  EFFC  F0C7         	goto	int_func
 38534                           tosu	equ	0xFFF
 38535                           tosh	equ	0xFFE
 38536                           tosl	equ	0xFFD
 38537                           pclatu	equ	0xFFB
 38538                           pclath	equ	0xFFA
 38539                           tblptru	equ	0xFF8
 38540                           tblptrh	equ	0xFF7
 38541                           tblptrl	equ	0xFF6
 38542                           tablat	equ	0xFF5
 38543                           prodh	equ	0xFF4
 38544                           prodl	equ	0xFF3
 38545                           intcon	equ	0xFF2
 38546                           indf0	equ	0xFEF
 38547                           postinc0	equ	0xFEE
 38548                           fsr0h	equ	0xFEA
 38549                           fsr0l	equ	0xFE9
 38550                           wreg	equ	0xFE8
 38551                           indf1	equ	0xFE7
 38552                           postdec1	equ	0xFE5
 38553                           plusw1	equ	0xFE3
 38554                           fsr1h	equ	0xFE2
 38555                           fsr1l	equ	0xFE1
 38556                           bsr	equ	0xFE0
 38557                           indf2	equ	0xFDF
 38558                           postinc2	equ	0xFDE
 38559                           postdec2	equ	0xFDD
 38560                           plusw2	equ	0xFDB
 38561                           fsr2h	equ	0xFDA
 38562                           fsr2l	equ	0xFD9
 38563                           status	equ	0xFD8
 38564                           
 38565                           	psect	intcode_body
 38566  018FF8                     __pintcode_body:
 38567                           	opt stack 10
 38568  018FF8                     int_func:
 38569                           	opt stack 10
 38570  018FF8  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 38571  018FFC  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 38572  019000  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 38573  019004  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 38574  019008  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 38575  01900C  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 38576  019010  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 38577  019014  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 38578  019018  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 38579  01901C  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 38580  019020  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 38581  019024  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 38582  019028  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 38583  01902C  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 38584  019030  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 38585  019034  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 38586  019038  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 38587  01903C  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 38588                           
 38589                           ;interrupt_manager.c: 98: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 38590  019040  010E               	movlb	14	; () banked
 38591  019042  B32C               	btfsc	44,1,b	;volatile
 38592                           
 38593                           ; BSR set to: 14
 38594  019044  A336               	btfss	54,1,b	;volatile
 38595  019046  D003               	goto	i2l246
 38596                           
 38597                           ; BSR set to: 14
 38598                           ;interrupt_manager.c: 99: {
 38599                           ;interrupt_manager.c: 100: I2C1_BusCollisionISR();
 38600  019048  EC38  F0D9         	call	_I2C1_BusCollisionISR	;wreg free
 38601                           
 38602                           ;interrupt_manager.c: 101: }
 38603  01904C  D033               	goto	i2l260
 38604  01904E                     i2l246:
 38605                           
 38606                           ; BSR set to: 14
 38607                           ;interrupt_manager.c: 102: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 38608  01904E  B12C               	btfsc	44,0,b	;volatile
 38609                           
 38610                           ; BSR set to: 14
 38611  019050  A136               	btfss	54,0,b	;volatile
 38612  019052  D003               	goto	i2l248
 38613                           
 38614                           ; BSR set to: 14
 38615                           ;interrupt_manager.c: 103: {
 38616                           ;interrupt_manager.c: 104: I2C1_ISR();
 38617  019054  EC78  F0BD         	call	_I2C1_ISR	;wreg free
 38618                           
 38619                           ;interrupt_manager.c: 105: }
 38620  019058  D02D               	goto	i2l260
 38621  01905A                     i2l248:
 38622                           
 38623                           ; BSR set to: 14
 38624                           ;interrupt_manager.c: 106: else if(PIE5bits.TMR4IE == 1 && PIR5bits.TMR4IF == 1)
 38625  01905A  B72E               	btfsc	46,3,b	;volatile
 38626                           
 38627                           ; BSR set to: 14
 38628  01905C  A738               	btfss	56,3,b	;volatile
 38629  01905E  D003               	goto	i2l250
 38630                           
 38631                           ; BSR set to: 14
 38632                           ;interrupt_manager.c: 107: {
 38633                           ;interrupt_manager.c: 108: TMR4_ISR();
 38634  019060  EC3E  F0D7         	call	_TMR4_ISR	;wreg free
 38635                           
 38636                           ;interrupt_manager.c: 109: }
 38637  019064  D027               	goto	i2l260
 38638  019066                     i2l250:
 38639                           
 38640                           ; BSR set to: 14
 38641                           ;interrupt_manager.c: 110: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 38642  019066  BF2B               	btfsc	43,7,b	;volatile
 38643                           
 38644                           ; BSR set to: 14
 38645  019068  AF35               	btfss	53,7,b	;volatile
 38646  01906A  D003               	goto	i2l252
 38647                           
 38648                           ; BSR set to: 14
 38649                           ;interrupt_manager.c: 111: {
 38650                           ;interrupt_manager.c: 112: HLVD_ISR();
 38651  01906C  EC94  F0D5         	call	_HLVD_ISR	;wreg free
 38652                           
 38653                           ;interrupt_manager.c: 113: }
 38654  019070  D021               	goto	i2l260
 38655  019072                     i2l252:
 38656                           
 38657                           ; BSR set to: 14
 38658                           ;interrupt_manager.c: 114: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 38659  019072  B129               	btfsc	41,0,b	;volatile
 38660                           
 38661                           ; BSR set to: 14
 38662  019074  A133               	btfss	51,0,b	;volatile
 38663  019076  D003               	goto	i2l254
 38664                           
 38665                           ; BSR set to: 14
 38666                           ;interrupt_manager.c: 115: {
 38667                           ;interrupt_manager.c: 116: INT0_ISR();
 38668  019078  EC20  F0D9         	call	_INT0_ISR	;wreg free
 38669                           
 38670                           ;interrupt_manager.c: 117: }
 38671  01907C  D01B               	goto	i2l260
 38672  01907E                     i2l254:
 38673                           
 38674                           ; BSR set to: 14
 38675                           ;interrupt_manager.c: 118: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 38676  01907E  BF2C               	btfsc	44,7,b	;volatile
 38677                           
 38678                           ; BSR set to: 14
 38679  019080  AF36               	btfss	54,7,b	;volatile
 38680  019082  D00D               	goto	i2l256
 38681                           
 38682                           ; BSR set to: 14
 38683                           ;interrupt_manager.c: 119: {
 38684                           ;interrupt_manager.c: 120: EUSART2_RxDefaultInterruptHandler();
 38685  019084  D801               	call	i2u3438_48
 38686  019086  D016               	goto	i2l260
 38687  019088                     i2u3438_48:
 38688  019088  0005               	push	
 38689  01908A  6EFA               	movwf	pclath,c
 38690  01908C  0102               	movlb	2	; () banked
 38691  01908E  5156               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 38692  019090  6EFD               	movwf	tosl,c
 38693  019092  5157               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 38694  019094  6EFE               	movwf	tosh,c
 38695  019096  5158               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 38696  019098  6EFF               	movwf	tosu,c
 38697  01909A  50FA               	movf	pclath,w,c
 38698  01909C  0012               	return		;indir
 38699  01909E                     i2l256:
 38700                           
 38701                           ; BSR set to: 14
 38702                           ;interrupt_manager.c: 122: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 38703  01909E  B92E               	btfsc	46,4,b	;volatile
 38704                           
 38705                           ; BSR set to: 14
 38706  0190A0  A938               	btfss	56,4,b	;volatile
 38707  0190A2  D003               	goto	i2l258
 38708                           
 38709                           ; BSR set to: 14
 38710                           ;interrupt_manager.c: 123: {
 38711                           ;interrupt_manager.c: 124: TMR5_ISR();
 38712  0190A4  EC35  F0D6         	call	_TMR5_ISR	;wreg free
 38713                           
 38714                           ;interrupt_manager.c: 125: }
 38715  0190A8  D005               	goto	i2l260
 38716  0190AA                     i2l258:
 38717                           
 38718                           ; BSR set to: 14
 38719                           ;interrupt_manager.c: 126: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 38720  0190AA  B32A               	btfsc	42,1,b	;volatile
 38721                           
 38722                           ; BSR set to: 14
 38723  0190AC  A334               	btfss	52,1,b	;volatile
 38724  0190AE  D002               	goto	i2l260
 38725                           
 38726                           ; BSR set to: 14
 38727                           ;interrupt_manager.c: 127: {
 38728                           ;interrupt_manager.c: 128: ADCC_ThresholdISR();
 38729  0190B0  EC04  F0D7         	call	_ADCC_ThresholdISR	;wreg free
 38730  0190B4                     i2l260:
 38731                           
 38732                           ;interrupt_manager.c: 130: else
 38733                           ;interrupt_manager.c: 131: {
 38734  0190B4  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 38735  0190B8  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 38736  0190BC  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 38737  0190C0  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 38738  0190C4  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 38739  0190C8  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 38740  0190CC  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 38741  0190D0  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 38742  0190D4  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 38743  0190D8  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 38744  0190DC  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 38745  0190E0  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 38746  0190E4  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 38747  0190E8  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 38748  0190EC  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 38749  0190F0  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 38750  0190F4  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 38751  0190F8  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 38752  0190FC  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38753  0190FE  0011               	retfie		f
 38754  019100                     __end_of_INTERRUPT_InterruptManagerHigh:
 38755                           	opt stack 0
 38756                           tosu	equ	0xFFF
 38757                           tosh	equ	0xFFE
 38758                           tosl	equ	0xFFD
 38759                           pclatu	equ	0xFFB
 38760                           pclath	equ	0xFFA
 38761                           tblptru	equ	0xFF8
 38762                           tblptrh	equ	0xFF7
 38763                           tblptrl	equ	0xFF6
 38764                           tablat	equ	0xFF5
 38765                           prodh	equ	0xFF4
 38766                           prodl	equ	0xFF3
 38767                           intcon	equ	0xFF2
 38768                           indf0	equ	0xFEF
 38769                           postinc0	equ	0xFEE
 38770                           fsr0h	equ	0xFEA
 38771                           fsr0l	equ	0xFE9
 38772                           wreg	equ	0xFE8
 38773                           indf1	equ	0xFE7
 38774                           postdec1	equ	0xFE5
 38775                           plusw1	equ	0xFE3
 38776                           fsr1h	equ	0xFE2
 38777                           fsr1l	equ	0xFE1
 38778                           bsr	equ	0xFE0
 38779                           indf2	equ	0xFDF
 38780                           postinc2	equ	0xFDE
 38781                           postdec2	equ	0xFDD
 38782                           plusw2	equ	0xFDB
 38783                           fsr2h	equ	0xFDA
 38784                           fsr2l	equ	0xFD9
 38785                           status	equ	0xFD8
 38786                           
 38787 ;; *************** function _TMR5_ISR *****************
 38788 ;; Defined at:
 38789 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 38790 ;; Parameters:    Size  Location     Type
 38791 ;;		None
 38792 ;; Auto vars:     Size  Location     Type
 38793 ;;		None
 38794 ;; Return value:  Size  Location     Type
 38795 ;;                  1    wreg      void 
 38796 ;; Registers used:
 38797 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 38798 ;; Tracked objects:
 38799 ;;		On entry : 0/0
 38800 ;;		On exit  : 0/0
 38801 ;;		Unchanged: 0/0
 38802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38807 ;;Total ram usage:        0 bytes
 38808 ;; Hardware stack levels used:    1
 38809 ;; Hardware stack levels required when called:    2
 38810 ;; This function calls:
 38811 ;;		Absolute function
 38812 ;;		_TMR5_DefaultInterruptHandler
 38813 ;;		_TMR5_WriteTimer
 38814 ;;		_dimmingOnTimeCallback
 38815 ;; This function is called by:
 38816 ;;		_INTERRUPT_InterruptManagerHigh
 38817 ;; This function uses a non-reentrant model
 38818 ;;
 38819                           
 38820                           	psect	text109
 38821  01AC6A                     __ptext109:
 38822                           	opt stack 0
 38823  01AC6A                     _TMR5_ISR:
 38824                           	opt stack 15
 38825                           
 38826                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 38827                           
 38828                           ;incstack = 0
 38829  01AC6A  010E               	movlb	14	; () banked
 38830  01AC6C  9938               	bcf	56,4,b	;volatile
 38831                           
 38832                           ; BSR set to: 14
 38833                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 38834  01AC6E  C266  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 38835  01AC72  C267  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 38836  01AC76  EC15  F0D8         	call	_TMR5_WriteTimer	;wreg free
 38837                           
 38838                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 38839  01AC7A  0102               	movlb	2	; () banked
 38840  01AC7C  514A               	movf	_TMR5_InterruptHandler& (0+255),w,b
 38841  01AC7E  114B               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 38842  01AC80  114C               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 38843  01AC82  B4D8               	btfsc	status,2,c
 38844  01AC84  0012               	return	
 38845                           
 38846                           ; BSR set to: 2
 38847                           ;tmr5.c: 172: {
 38848                           ;tmr5.c: 173: TMR5_InterruptHandler();
 38849  01AC86  D801               	call	i2u3408_48
 38850  01AC88  0012               	return	
 38851  01AC8A                     i2u3408_48:
 38852  01AC8A  0005               	push	
 38853  01AC8C  6EFA               	movwf	pclath,c
 38854  01AC8E  514A               	movf	_TMR5_InterruptHandler& (0+255),w,b
 38855  01AC90  6EFD               	movwf	tosl,c
 38856  01AC92  514B               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 38857  01AC94  6EFE               	movwf	tosh,c
 38858  01AC96  514C               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 38859  01AC98  6EFF               	movwf	tosu,c
 38860  01AC9A  50FA               	movf	pclath,w,c
 38861  01AC9C  0012               	return		;indir
 38862  01AC9E                     __end_of_TMR5_ISR:
 38863                           	opt stack 0
 38864                           tosu	equ	0xFFF
 38865                           tosh	equ	0xFFE
 38866                           tosl	equ	0xFFD
 38867                           pclatu	equ	0xFFB
 38868                           pclath	equ	0xFFA
 38869                           tblptru	equ	0xFF8
 38870                           tblptrh	equ	0xFF7
 38871                           tblptrl	equ	0xFF6
 38872                           tablat	equ	0xFF5
 38873                           prodh	equ	0xFF4
 38874                           prodl	equ	0xFF3
 38875                           intcon	equ	0xFF2
 38876                           indf0	equ	0xFEF
 38877                           postinc0	equ	0xFEE
 38878                           fsr0h	equ	0xFEA
 38879                           fsr0l	equ	0xFE9
 38880                           wreg	equ	0xFE8
 38881                           indf1	equ	0xFE7
 38882                           postdec1	equ	0xFE5
 38883                           plusw1	equ	0xFE3
 38884                           fsr1h	equ	0xFE2
 38885                           fsr1l	equ	0xFE1
 38886                           bsr	equ	0xFE0
 38887                           indf2	equ	0xFDF
 38888                           postinc2	equ	0xFDE
 38889                           postdec2	equ	0xFDD
 38890                           plusw2	equ	0xFDB
 38891                           fsr2h	equ	0xFDA
 38892                           fsr2l	equ	0xFD9
 38893                           status	equ	0xFD8
 38894                           
 38895 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 38896 ;; Defined at:
 38897 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 38898 ;; Parameters:    Size  Location     Type
 38899 ;;		None
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;		None
 38902 ;; Return value:  Size  Location     Type
 38903 ;;                  1    wreg      void 
 38904 ;; Registers used:
 38905 ;;		None
 38906 ;; Tracked objects:
 38907 ;;		On entry : 0/0
 38908 ;;		On exit  : 0/0
 38909 ;;		Unchanged: 0/0
 38910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38915 ;;Total ram usage:        0 bytes
 38916 ;; Hardware stack levels used:    1
 38917 ;; This function calls:
 38918 ;;		Nothing
 38919 ;; This function is called by:
 38920 ;;		_TMR5_Initialize
 38921 ;;		_TMR5_ISR
 38922 ;; This function uses a non-reentrant model
 38923 ;;
 38924                           
 38925                           	psect	text110
 38926  01B28E                     __ptext110:
 38927                           	opt stack 0
 38928  01B28E                     _TMR5_DefaultInterruptHandler:
 38929                           	opt stack 16
 38930                           
 38931                           ;incstack = 0
 38932  01B28E  0012               	return		;funcret
 38933  01B290                     __end_of_TMR5_DefaultInterruptHandler:
 38934                           	opt stack 0
 38935                           tosu	equ	0xFFF
 38936                           tosh	equ	0xFFE
 38937                           tosl	equ	0xFFD
 38938                           pclatu	equ	0xFFB
 38939                           pclath	equ	0xFFA
 38940                           tblptru	equ	0xFF8
 38941                           tblptrh	equ	0xFF7
 38942                           tblptrl	equ	0xFF6
 38943                           tablat	equ	0xFF5
 38944                           prodh	equ	0xFF4
 38945                           prodl	equ	0xFF3
 38946                           intcon	equ	0xFF2
 38947                           indf0	equ	0xFEF
 38948                           postinc0	equ	0xFEE
 38949                           fsr0h	equ	0xFEA
 38950                           fsr0l	equ	0xFE9
 38951                           wreg	equ	0xFE8
 38952                           indf1	equ	0xFE7
 38953                           postdec1	equ	0xFE5
 38954                           plusw1	equ	0xFE3
 38955                           fsr1h	equ	0xFE2
 38956                           fsr1l	equ	0xFE1
 38957                           bsr	equ	0xFE0
 38958                           indf2	equ	0xFDF
 38959                           postinc2	equ	0xFDE
 38960                           postdec2	equ	0xFDD
 38961                           plusw2	equ	0xFDB
 38962                           fsr2h	equ	0xFDA
 38963                           fsr2l	equ	0xFD9
 38964                           status	equ	0xFD8
 38965                           
 38966 ;; *************** function _dimmingOnTimeCallback *****************
 38967 ;; Defined at:
 38968 ;;		line 440 in file "main.c"
 38969 ;; Parameters:    Size  Location     Type
 38970 ;;		None
 38971 ;; Auto vars:     Size  Location     Type
 38972 ;;		None
 38973 ;; Return value:  Size  Location     Type
 38974 ;;                  1    wreg      void 
 38975 ;; Registers used:
 38976 ;;		cstack
 38977 ;; Tracked objects:
 38978 ;;		On entry : 0/0
 38979 ;;		On exit  : 0/0
 38980 ;;		Unchanged: 0/0
 38981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38986 ;;Total ram usage:        0 bytes
 38987 ;; Hardware stack levels used:    1
 38988 ;; Hardware stack levels required when called:    1
 38989 ;; This function calls:
 38990 ;;		i2_TMR5_StopTimer
 38991 ;; This function is called by:
 38992 ;;		_main
 38993 ;;		_TMR5_ISR
 38994 ;; This function uses a non-reentrant model
 38995 ;;
 38996                           
 38997                           	psect	text111
 38998  01B21E                     __ptext111:
 38999                           	opt stack 0
 39000  01B21E                     _dimmingOnTimeCallback:
 39001                           	opt stack 15
 39002                           
 39003                           ;main.c: 443: LATGbits.LATG1 = 1;
 39004                           
 39005                           ;incstack = 0
 39006  01B21E  827F               	bsf	3967,1,c	;volatile
 39007                           
 39008                           ;main.c: 446: TMR5_StopTimer();
 39009  01B220  EC3D  F0D9         	call	i2_TMR5_StopTimer	;wreg free
 39010                           
 39011                           ;main.c: 449: PIE5bits.TMR5IE = 0;
 39012  01B224  010E               	movlb	14	; () banked
 39013  01B226  992E               	bcf	46,4,b	;volatile
 39014                           
 39015                           ; BSR set to: 14
 39016  01B228  0012               	return		;funcret
 39017  01B22A                     __end_of_dimmingOnTimeCallback:
 39018                           	opt stack 0
 39019                           tosu	equ	0xFFF
 39020                           tosh	equ	0xFFE
 39021                           tosl	equ	0xFFD
 39022                           pclatu	equ	0xFFB
 39023                           pclath	equ	0xFFA
 39024                           tblptru	equ	0xFF8
 39025                           tblptrh	equ	0xFF7
 39026                           tblptrl	equ	0xFF6
 39027                           tablat	equ	0xFF5
 39028                           prodh	equ	0xFF4
 39029                           prodl	equ	0xFF3
 39030                           intcon	equ	0xFF2
 39031                           indf0	equ	0xFEF
 39032                           postinc0	equ	0xFEE
 39033                           fsr0h	equ	0xFEA
 39034                           fsr0l	equ	0xFE9
 39035                           wreg	equ	0xFE8
 39036                           indf1	equ	0xFE7
 39037                           postdec1	equ	0xFE5
 39038                           plusw1	equ	0xFE3
 39039                           fsr1h	equ	0xFE2
 39040                           fsr1l	equ	0xFE1
 39041                           bsr	equ	0xFE0
 39042                           indf2	equ	0xFDF
 39043                           postinc2	equ	0xFDE
 39044                           postdec2	equ	0xFDD
 39045                           plusw2	equ	0xFDB
 39046                           fsr2h	equ	0xFDA
 39047                           fsr2l	equ	0xFD9
 39048                           status	equ	0xFD8
 39049                           
 39050 ;; *************** function i2_TMR5_StopTimer *****************
 39051 ;; Defined at:
 39052 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 39053 ;; Parameters:    Size  Location     Type
 39054 ;;		None
 39055 ;; Auto vars:     Size  Location     Type
 39056 ;;		None
 39057 ;; Return value:  Size  Location     Type
 39058 ;;                  1    wreg      void 
 39059 ;; Registers used:
 39060 ;;		None
 39061 ;; Tracked objects:
 39062 ;;		On entry : 0/0
 39063 ;;		On exit  : 0/0
 39064 ;;		Unchanged: 0/0
 39065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39070 ;;Total ram usage:        0 bytes
 39071 ;; Hardware stack levels used:    1
 39072 ;; This function calls:
 39073 ;;		Nothing
 39074 ;; This function is called by:
 39075 ;;		_dimmingOnTimeCallback
 39076 ;; This function uses a non-reentrant model
 39077 ;;
 39078                           
 39079                           	psect	text112
 39080  01B27A                     __ptext112:
 39081                           	opt stack 0
 39082  01B27A                     i2_TMR5_StopTimer:
 39083                           	opt stack 15
 39084                           
 39085                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 39086                           
 39087                           ; BSR set to: 14
 39088                           ;incstack = 0
 39089  01B27A  90C3               	bcf	4035,0,c	;volatile
 39090  01B27C  0012               	return		;funcret
 39091  01B27E                     __end_ofi2_TMR5_StopTimer:
 39092                           	opt stack 0
 39093                           tosu	equ	0xFFF
 39094                           tosh	equ	0xFFE
 39095                           tosl	equ	0xFFD
 39096                           pclatu	equ	0xFFB
 39097                           pclath	equ	0xFFA
 39098                           tblptru	equ	0xFF8
 39099                           tblptrh	equ	0xFF7
 39100                           tblptrl	equ	0xFF6
 39101                           tablat	equ	0xFF5
 39102                           prodh	equ	0xFF4
 39103                           prodl	equ	0xFF3
 39104                           intcon	equ	0xFF2
 39105                           indf0	equ	0xFEF
 39106                           postinc0	equ	0xFEE
 39107                           fsr0h	equ	0xFEA
 39108                           fsr0l	equ	0xFE9
 39109                           wreg	equ	0xFE8
 39110                           indf1	equ	0xFE7
 39111                           postdec1	equ	0xFE5
 39112                           plusw1	equ	0xFE3
 39113                           fsr1h	equ	0xFE2
 39114                           fsr1l	equ	0xFE1
 39115                           bsr	equ	0xFE0
 39116                           indf2	equ	0xFDF
 39117                           postinc2	equ	0xFDE
 39118                           postdec2	equ	0xFDD
 39119                           plusw2	equ	0xFDB
 39120                           fsr2h	equ	0xFDA
 39121                           fsr2l	equ	0xFD9
 39122                           status	equ	0xFD8
 39123                           
 39124 ;; *************** function _TMR4_ISR *****************
 39125 ;; Defined at:
 39126 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 39127 ;; Parameters:    Size  Location     Type
 39128 ;;		None
 39129 ;; Auto vars:     Size  Location     Type
 39130 ;;		None
 39131 ;; Return value:  Size  Location     Type
 39132 ;;                  1    wreg      void 
 39133 ;; Registers used:
 39134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 39135 ;; Tracked objects:
 39136 ;;		On entry : 0/0
 39137 ;;		On exit  : 0/0
 39138 ;;		Unchanged: 0/0
 39139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39144 ;;Total ram usage:        0 bytes
 39145 ;; Hardware stack levels used:    1
 39146 ;; Hardware stack levels required when called:    4
 39147 ;; This function calls:
 39148 ;;		_TMR4_CallBack
 39149 ;; This function is called by:
 39150 ;;		_INTERRUPT_InterruptManagerHigh
 39151 ;; This function uses a non-reentrant model
 39152 ;;
 39153                           
 39154                           	psect	text113
 39155  01AE7C                     __ptext113:
 39156                           	opt stack 0
 39157  01AE7C                     _TMR4_ISR:
 39158                           	opt stack 13
 39159                           
 39160                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;
 39161                           ;tmr4.c: 170: PIR5bits.TMR4IF = 0;
 39162                           
 39163                           ;incstack = 0
 39164  01AE7C  010E               	movlb	14	; () banked
 39165  01AE7E  9738               	bcf	56,3,b	;volatile
 39166                           
 39167                           ; BSR set to: 14
 39168                           ;tmr4.c: 173: if (++CountCallBack >= 8)
 39169  01AE80  0102               	movlb	2	; () banked
 39170  01AE82  4B64               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 39171  01AE84  2B65               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 39172  01AE86  5165               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 39173  01AE88  E104               	bnz	i2u3406_40
 39174  01AE8A  0E08               	movlw	8
 39175  01AE8C  5D64               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 39176  01AE8E  A0D8               	btfss	status,0,c
 39177  01AE90  0012               	return	
 39178  01AE92                     i2u3406_40:
 39179                           
 39180                           ; BSR set to: 2
 39181                           ;tmr4.c: 174: {
 39182                           ;tmr4.c: 176: TMR4_CallBack();
 39183  01AE92  EC77  F0D7         	call	_TMR4_CallBack	;wreg free
 39184                           
 39185                           ;tmr4.c: 179: CountCallBack = 0;
 39186  01AE96  0E00               	movlw	0
 39187  01AE98  0102               	movlb	2	; () banked
 39188  01AE9A  6F65               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 39189  01AE9C  0E00               	movlw	0
 39190  01AE9E  6F64               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 39191  01AEA0  0012               	return	
 39192  01AEA2                     __end_of_TMR4_ISR:
 39193                           	opt stack 0
 39194                           tosu	equ	0xFFF
 39195                           tosh	equ	0xFFE
 39196                           tosl	equ	0xFFD
 39197                           pclatu	equ	0xFFB
 39198                           pclath	equ	0xFFA
 39199                           tblptru	equ	0xFF8
 39200                           tblptrh	equ	0xFF7
 39201                           tblptrl	equ	0xFF6
 39202                           tablat	equ	0xFF5
 39203                           prodh	equ	0xFF4
 39204                           prodl	equ	0xFF3
 39205                           intcon	equ	0xFF2
 39206                           indf0	equ	0xFEF
 39207                           postinc0	equ	0xFEE
 39208                           fsr0h	equ	0xFEA
 39209                           fsr0l	equ	0xFE9
 39210                           wreg	equ	0xFE8
 39211                           indf1	equ	0xFE7
 39212                           postdec1	equ	0xFE5
 39213                           plusw1	equ	0xFE3
 39214                           fsr1h	equ	0xFE2
 39215                           fsr1l	equ	0xFE1
 39216                           bsr	equ	0xFE0
 39217                           indf2	equ	0xFDF
 39218                           postinc2	equ	0xFDE
 39219                           postdec2	equ	0xFDD
 39220                           plusw2	equ	0xFDB
 39221                           fsr2h	equ	0xFDA
 39222                           fsr2l	equ	0xFD9
 39223                           status	equ	0xFD8
 39224                           
 39225 ;; *************** function _TMR4_CallBack *****************
 39226 ;; Defined at:
 39227 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 39228 ;; Parameters:    Size  Location     Type
 39229 ;;		None
 39230 ;; Auto vars:     Size  Location     Type
 39231 ;;		None
 39232 ;; Return value:  Size  Location     Type
 39233 ;;                  1    wreg      void 
 39234 ;; Registers used:
 39235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 39236 ;; Tracked objects:
 39237 ;;		On entry : 0/0
 39238 ;;		On exit  : 0/0
 39239 ;;		Unchanged: 0/0
 39240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39245 ;;Total ram usage:        0 bytes
 39246 ;; Hardware stack levels used:    1
 39247 ;; Hardware stack levels required when called:    3
 39248 ;; This function calls:
 39249 ;;		Absolute function
 39250 ;;		_TMR4_DefaultInterruptHandler
 39251 ;;		_writeEnergyToEEPROMCallback
 39252 ;; This function is called by:
 39253 ;;		_TMR4_ISR
 39254 ;; This function uses a non-reentrant model
 39255 ;;
 39256                           
 39257                           	psect	text114
 39258  01AEEE                     __ptext114:
 39259                           	opt stack 0
 39260  01AEEE                     _TMR4_CallBack:
 39261                           	opt stack 13
 39262                           
 39263                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
 39264                           
 39265                           ; BSR set to: 2
 39266                           ;incstack = 0
 39267  01AEEE  0102               	movlb	2	; () banked
 39268  01AEF0  5144               	movf	_TMR4_InterruptHandler& (0+255),w,b
 39269  01AEF2  1145               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 39270  01AEF4  1146               	iorwf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 39271  01AEF6  B4D8               	btfsc	status,2,c
 39272  01AEF8  0012               	return	
 39273                           
 39274                           ; BSR set to: 2
 39275                           ;tmr4.c: 188: {
 39276                           ;tmr4.c: 189: TMR4_InterruptHandler();
 39277  01AEFA  D801               	call	i2u3337_48
 39278  01AEFC  0012               	return	
 39279  01AEFE                     i2u3337_48:
 39280  01AEFE  0005               	push	
 39281  01AF00  6EFA               	movwf	pclath,c
 39282  01AF02  5144               	movf	_TMR4_InterruptHandler& (0+255),w,b
 39283  01AF04  6EFD               	movwf	tosl,c
 39284  01AF06  5145               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 39285  01AF08  6EFE               	movwf	tosh,c
 39286  01AF0A  5146               	movf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 39287  01AF0C  6EFF               	movwf	tosu,c
 39288  01AF0E  50FA               	movf	pclath,w,c
 39289  01AF10  0012               	return		;indir
 39290  01AF12                     __end_of_TMR4_CallBack:
 39291                           	opt stack 0
 39292                           tosu	equ	0xFFF
 39293                           tosh	equ	0xFFE
 39294                           tosl	equ	0xFFD
 39295                           pclatu	equ	0xFFB
 39296                           pclath	equ	0xFFA
 39297                           tblptru	equ	0xFF8
 39298                           tblptrh	equ	0xFF7
 39299                           tblptrl	equ	0xFF6
 39300                           tablat	equ	0xFF5
 39301                           prodh	equ	0xFF4
 39302                           prodl	equ	0xFF3
 39303                           intcon	equ	0xFF2
 39304                           indf0	equ	0xFEF
 39305                           postinc0	equ	0xFEE
 39306                           fsr0h	equ	0xFEA
 39307                           fsr0l	equ	0xFE9
 39308                           wreg	equ	0xFE8
 39309                           indf1	equ	0xFE7
 39310                           postdec1	equ	0xFE5
 39311                           plusw1	equ	0xFE3
 39312                           fsr1h	equ	0xFE2
 39313                           fsr1l	equ	0xFE1
 39314                           bsr	equ	0xFE0
 39315                           indf2	equ	0xFDF
 39316                           postinc2	equ	0xFDE
 39317                           postdec2	equ	0xFDD
 39318                           plusw2	equ	0xFDB
 39319                           fsr2h	equ	0xFDA
 39320                           fsr2l	equ	0xFD9
 39321                           status	equ	0xFD8
 39322                           
 39323 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 39324 ;; Defined at:
 39325 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 39326 ;; Parameters:    Size  Location     Type
 39327 ;;		None
 39328 ;; Auto vars:     Size  Location     Type
 39329 ;;		None
 39330 ;; Return value:  Size  Location     Type
 39331 ;;                  1    wreg      void 
 39332 ;; Registers used:
 39333 ;;		None
 39334 ;; Tracked objects:
 39335 ;;		On entry : 0/0
 39336 ;;		On exit  : 0/0
 39337 ;;		Unchanged: 0/0
 39338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39343 ;;Total ram usage:        0 bytes
 39344 ;; Hardware stack levels used:    1
 39345 ;; This function calls:
 39346 ;;		Nothing
 39347 ;; This function is called by:
 39348 ;;		_TMR4_Initialize
 39349 ;;		_TMR4_CallBack
 39350 ;; This function uses a non-reentrant model
 39351 ;;
 39352                           
 39353                           	psect	text115
 39354  01B290                     __ptext115:
 39355                           	opt stack 0
 39356  01B290                     _TMR4_DefaultInterruptHandler:
 39357                           	opt stack 15
 39358                           
 39359                           ;incstack = 0
 39360  01B290  0012               	return		;funcret
 39361  01B292                     __end_of_TMR4_DefaultInterruptHandler:
 39362                           	opt stack 0
 39363                           tosu	equ	0xFFF
 39364                           tosh	equ	0xFFE
 39365                           tosl	equ	0xFFD
 39366                           pclatu	equ	0xFFB
 39367                           pclath	equ	0xFFA
 39368                           tblptru	equ	0xFF8
 39369                           tblptrh	equ	0xFF7
 39370                           tblptrl	equ	0xFF6
 39371                           tablat	equ	0xFF5
 39372                           prodh	equ	0xFF4
 39373                           prodl	equ	0xFF3
 39374                           intcon	equ	0xFF2
 39375                           indf0	equ	0xFEF
 39376                           postinc0	equ	0xFEE
 39377                           fsr0h	equ	0xFEA
 39378                           fsr0l	equ	0xFE9
 39379                           wreg	equ	0xFE8
 39380                           indf1	equ	0xFE7
 39381                           postdec1	equ	0xFE5
 39382                           plusw1	equ	0xFE3
 39383                           fsr1h	equ	0xFE2
 39384                           fsr1l	equ	0xFE1
 39385                           bsr	equ	0xFE0
 39386                           indf2	equ	0xFDF
 39387                           postinc2	equ	0xFDE
 39388                           postdec2	equ	0xFDD
 39389                           plusw2	equ	0xFDB
 39390                           fsr2h	equ	0xFDA
 39391                           fsr2l	equ	0xFD9
 39392                           status	equ	0xFD8
 39393                           
 39394 ;; *************** function _writeEnergyToEEPROMCallback *****************
 39395 ;; Defined at:
 39396 ;;		line 457 in file "main.c"
 39397 ;; Parameters:    Size  Location     Type
 39398 ;;		None
 39399 ;; Auto vars:     Size  Location     Type
 39400 ;;  current_valu    4   63[COMRAM] void 
 39401 ;; Return value:  Size  Location     Type
 39402 ;;                  1    wreg      void 
 39403 ;; Registers used:
 39404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39405 ;; Tracked objects:
 39406 ;;		On entry : 0/0
 39407 ;;		On exit  : 0/0
 39408 ;;		Unchanged: 0/0
 39409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39413 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39414 ;;Total ram usage:        4 bytes
 39415 ;; Hardware stack levels used:    1
 39416 ;; Hardware stack levels required when called:    2
 39417 ;; This function calls:
 39418 ;;		i2___flge
 39419 ;;		i2_readDoubleFromEEPROM
 39420 ;;		i2_writeDoubleToEEPROM
 39421 ;; This function is called by:
 39422 ;;		_main
 39423 ;;		_TMR4_CallBack
 39424 ;; This function uses a non-reentrant model
 39425 ;;
 39426                           
 39427                           	psect	text116
 39428  019BD8                     __ptext116:
 39429                           	opt stack 0
 39430  019BD8                     _writeEnergyToEEPROMCallback:
 39431                           	opt stack 13
 39432                           
 39433                           ;main.c: 459: double current_value = readDoubleFromEEPROM(Total_Energy_address);
 39434                           
 39435                           ;incstack = 0
 39436  019BD8  0E5F               	movlw	low _Total_Energy_address
 39437  019BDA  6EF6               	movwf	tblptrl,c
 39438  019BDC                     	if	1	;There is more than 1 active tblptr byte
 39439  019BDC  0ECF               	movlw	high _Total_Energy_address
 39440  019BDE  6EF7               	movwf	tblptrh,c
 39441  019BE0                     	endif
 39442  019BE0                     	if	1	;There are 3 active tblptr bytes
 39443  019BE0  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 39444  019BE2  6EF8               	movwf	tblptru,c
 39445  019BE4                     	endif
 39446  019BE4  0009               	tblrd		*+
 39447  019BE6  CFF5 F003          	movff	tablat,i2readDoubleFromEEPROM@starting_address
 39448  019BEA  000A               	tblrd		*-
 39449  019BEC  CFF5 F004          	movff	tablat,i2readDoubleFromEEPROM@starting_address+1
 39450  019BF0  EC97  F0D2         	call	i2_readDoubleFromEEPROM	;wreg free
 39451  019BF4  C003  F040         	movff	?i2_readDoubleFromEEPROM,writeEnergyToEEPROMCallback@current_value
 39452  019BF8  C004  F041         	movff	?i2_readDoubleFromEEPROM+1,writeEnergyToEEPROMCallback@current_value+1
 39453  019BFC  C005  F042         	movff	?i2_readDoubleFromEEPROM+2,writeEnergyToEEPROMCallback@current_value+2
 39454  019C00  C006  F043         	movff	?i2_readDoubleFromEEPROM+3,writeEnergyToEEPROMCallback@current_value+3
 39455                           
 39456                           ;main.c: 461: if (Total_Energy > current_value) {
 39457  019C04  C040  F034         	movff	writeEnergyToEEPROMCallback@current_value,i2___flge@ff1
 39458  019C08  C041  F035         	movff	writeEnergyToEEPROMCallback@current_value+1,i2___flge@ff1+1
 39459  019C0C  C042  F036         	movff	writeEnergyToEEPROMCallback@current_value+2,i2___flge@ff1+2
 39460  019C10  C043  F037         	movff	writeEnergyToEEPROMCallback@current_value+3,i2___flge@ff1+3
 39461  019C14  C0F6  F038         	movff	_Total_Energy,i2___flge@ff2	;volatile
 39462  019C18  C0F7  F039         	movff	_Total_Energy+1,i2___flge@ff2+1	;volatile
 39463  019C1C  C0F8  F03A         	movff	_Total_Energy+2,i2___flge@ff2+2	;volatile
 39464  019C20  C0F9  F03B         	movff	_Total_Energy+3,i2___flge@ff2+3	;volatile
 39465  019C24  ECE3  F0C6         	call	i2___flge	;wreg free
 39466  019C28  B0D8               	btfsc	status,0,c
 39467  019C2A  0012               	return	
 39468                           
 39469                           ;main.c: 463: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 39470  019C2C  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 39471  019C30  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 39472  019C34  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 39473  019C38  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 39474  019C3C  0E5F               	movlw	low _Total_Energy_address
 39475  019C3E  6EF6               	movwf	tblptrl,c
 39476  019C40                     	if	1	;There is more than 1 active tblptr byte
 39477  019C40  0ECF               	movlw	high _Total_Energy_address
 39478  019C42  6EF7               	movwf	tblptrh,c
 39479  019C44                     	endif
 39480  019C44                     	if	1	;There are 3 active tblptr bytes
 39481  019C44  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 39482  019C46  6EF8               	movwf	tblptru,c
 39483  019C48                     	endif
 39484  019C48  0009               	tblrd		*+
 39485  019C4A  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 39486  019C4E  000A               	tblrd		*-
 39487  019C50  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 39488  019C54  EC0A  F0D3         	call	i2_writeDoubleToEEPROM	;wreg free
 39489  019C58  0012               	return	
 39490  019C5A                     __end_of_writeEnergyToEEPROMCallback:
 39491                           	opt stack 0
 39492                           tosu	equ	0xFFF
 39493                           tosh	equ	0xFFE
 39494                           tosl	equ	0xFFD
 39495                           pclatu	equ	0xFFB
 39496                           pclath	equ	0xFFA
 39497                           tblptru	equ	0xFF8
 39498                           tblptrh	equ	0xFF7
 39499                           tblptrl	equ	0xFF6
 39500                           tablat	equ	0xFF5
 39501                           prodh	equ	0xFF4
 39502                           prodl	equ	0xFF3
 39503                           intcon	equ	0xFF2
 39504                           indf0	equ	0xFEF
 39505                           postinc0	equ	0xFEE
 39506                           fsr0h	equ	0xFEA
 39507                           fsr0l	equ	0xFE9
 39508                           wreg	equ	0xFE8
 39509                           indf1	equ	0xFE7
 39510                           postdec1	equ	0xFE5
 39511                           plusw1	equ	0xFE3
 39512                           fsr1h	equ	0xFE2
 39513                           fsr1l	equ	0xFE1
 39514                           bsr	equ	0xFE0
 39515                           indf2	equ	0xFDF
 39516                           postinc2	equ	0xFDE
 39517                           postdec2	equ	0xFDD
 39518                           plusw2	equ	0xFDB
 39519                           fsr2h	equ	0xFDA
 39520                           fsr2l	equ	0xFD9
 39521                           status	equ	0xFD8
 39522                           
 39523 ;; *************** function i2_readDoubleFromEEPROM *****************
 39524 ;; Defined at:
 39525 ;;		line 22 in file "double_to_EEPROM.c"
 39526 ;; Parameters:    Size  Location     Type
 39527 ;;  starting_add    2    2[COMRAM] unsigned int 
 39528 ;; Auto vars:     Size  Location     Type
 39529 ;;  readDoubleFr    4    6[COMRAM] struct .
 39530 ;;  readDoubleFr    2   10[COMRAM] int 
 39531 ;; Return value:  Size  Location     Type
 39532 ;;                  4    2[COMRAM] int 
 39533 ;; Registers used:
 39534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39535 ;; Tracked objects:
 39536 ;;		On entry : 0/0
 39537 ;;		On exit  : 0/0
 39538 ;;		Unchanged: 0/0
 39539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39541 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39543 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39544 ;;Total ram usage:       10 bytes
 39545 ;; Hardware stack levels used:    1
 39546 ;; Hardware stack levels required when called:    1
 39547 ;; This function calls:
 39548 ;;		i2_DATAEE_ReadByte
 39549 ;; This function is called by:
 39550 ;;		_writeEnergyToEEPROMCallback
 39551 ;; This function uses a non-reentrant model
 39552 ;;
 39553                           
 39554                           	psect	text117
 39555  01A52E                     __ptext117:
 39556                           	opt stack 0
 39557  01A52E                     i2_readDoubleFromEEPROM:
 39558                           	opt stack 13
 39559                           
 39560                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 39561                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 39562                           
 39563                           ;incstack = 0
 39564  01A52E  0E00               	movlw	0
 39565  01A530  6E0C               	movwf	i2readDoubleFromEEPROM@byte_index+1,c
 39566  01A532  0E00               	movlw	0
 39567  01A534  6E0B               	movwf	i2readDoubleFromEEPROM@byte_index,c
 39568  01A536  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 39569  01A538  E118               	bnz	i2l1646
 39570  01A53A  D013               	goto	L17
 39571  01A53C                     
 39572                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 39573  01A53C  0E07               	movlw	low i2readDoubleFromEEPROM@output_data
 39574  01A53E  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 39575  01A540  6ED9               	movwf	fsr2l,c
 39576  01A542  0E00               	movlw	high i2readDoubleFromEEPROM@output_data
 39577  01A544  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 39578  01A546  6EDA               	movwf	fsr2h,c
 39579  01A548  5003               	movf	i2readDoubleFromEEPROM@starting_address,w,c
 39580  01A54A  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 39581  01A54C  6E01               	movwf	i2DATAEE_ReadByte@bAdd,c
 39582  01A54E  5004               	movf	i2readDoubleFromEEPROM@starting_address+1,w,c
 39583  01A550  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 39584  01A552  6E02               	movwf	i2DATAEE_ReadByte@bAdd+1,c
 39585  01A554  EC56  F0D8         	call	i2_DATAEE_ReadByte	;wreg free
 39586  01A558  6EDF               	movwf	indf2,c
 39587  01A55A  4A0B               	infsnz	i2readDoubleFromEEPROM@byte_index,f,c
 39588  01A55C  2A0C               	incf	i2readDoubleFromEEPROM@byte_index+1,f,c
 39589  01A55E  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 39590  01A560  E104               	bnz	i2u1257_40
 39591  01A562                     L17:
 39592  01A562  0E04               	movlw	4
 39593  01A564  5C0B               	subwf	i2readDoubleFromEEPROM@byte_index,w,c
 39594  01A566  A0D8               	btfss	status,0,c
 39595  01A568  D7E9               	goto	i2l1645
 39596  01A56A                     i2u1257_40:
 39597  01A56A                     i2l1646:
 39598                           
 39599                           ;double_to_EEPROM.c: 32: }
 39600                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 39601  01A56A  C007  F003         	movff	i2readDoubleFromEEPROM@output_data,?i2_readDoubleFromEEPROM
 39602  01A56E  C008  F004         	movff	i2readDoubleFromEEPROM@output_data+1,?i2_readDoubleFromEEPROM+1
 39603  01A572  C009  F005         	movff	i2readDoubleFromEEPROM@output_data+2,?i2_readDoubleFromEEPROM+2
 39604  01A576  C00A  F006         	movff	i2readDoubleFromEEPROM@output_data+3,?i2_readDoubleFromEEPROM+3
 39605  01A57A  0012               	return		;funcret
 39606  01A57C                     __end_ofi2_readDoubleFromEEPROM:
 39607                           	opt stack 0
 39608                           tosu	equ	0xFFF
 39609                           tosh	equ	0xFFE
 39610                           tosl	equ	0xFFD
 39611                           pclatu	equ	0xFFB
 39612                           pclath	equ	0xFFA
 39613                           tblptru	equ	0xFF8
 39614                           tblptrh	equ	0xFF7
 39615                           tblptrl	equ	0xFF6
 39616                           tablat	equ	0xFF5
 39617                           prodh	equ	0xFF4
 39618                           prodl	equ	0xFF3
 39619                           intcon	equ	0xFF2
 39620                           indf0	equ	0xFEF
 39621                           postinc0	equ	0xFEE
 39622                           fsr0h	equ	0xFEA
 39623                           fsr0l	equ	0xFE9
 39624                           wreg	equ	0xFE8
 39625                           indf1	equ	0xFE7
 39626                           postdec1	equ	0xFE5
 39627                           plusw1	equ	0xFE3
 39628                           fsr1h	equ	0xFE2
 39629                           fsr1l	equ	0xFE1
 39630                           bsr	equ	0xFE0
 39631                           indf2	equ	0xFDF
 39632                           postinc2	equ	0xFDE
 39633                           postdec2	equ	0xFDD
 39634                           plusw2	equ	0xFDB
 39635                           fsr2h	equ	0xFDA
 39636                           fsr2l	equ	0xFD9
 39637                           status	equ	0xFD8
 39638                           
 39639 ;; *************** function i2_DATAEE_ReadByte *****************
 39640 ;; Defined at:
 39641 ;;		line 190 in file "mcc_generated_files/memory.c"
 39642 ;; Parameters:    Size  Location     Type
 39643 ;;  bAdd            2    0[COMRAM] unsigned int 
 39644 ;; Auto vars:     Size  Location     Type
 39645 ;;		None
 39646 ;; Return value:  Size  Location     Type
 39647 ;;                  1    wreg      unsigned char 
 39648 ;; Registers used:
 39649 ;;		wreg, status,2, status,0
 39650 ;; Tracked objects:
 39651 ;;		On entry : 0/0
 39652 ;;		On exit  : 0/0
 39653 ;;		Unchanged: 0/0
 39654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39659 ;;Total ram usage:        2 bytes
 39660 ;; Hardware stack levels used:    1
 39661 ;; This function calls:
 39662 ;;		Nothing
 39663 ;; This function is called by:
 39664 ;;		i2_readDoubleFromEEPROM
 39665 ;; This function uses a non-reentrant model
 39666 ;;
 39667                           
 39668                           	psect	text118
 39669  01B0AC                     __ptext118:
 39670                           	opt stack 0
 39671  01B0AC                     i2_DATAEE_ReadByte:
 39672                           	opt stack 13
 39673                           
 39674                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 39675                           
 39676                           ;incstack = 0
 39677  01B0AC  5002               	movf	i2DATAEE_ReadByte@bAdd+1,w,c
 39678  01B0AE  0B03               	andlw	3
 39679  01B0B0  6E75               	movwf	3957,c	;volatile
 39680                           
 39681                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 39682  01B0B2  C001  FF74         	movff	i2DATAEE_ReadByte@bAdd,3956	;volatile
 39683                           
 39684                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 39685  01B0B6  0E3F               	movlw	-193
 39686  01B0B8  1677               	andwf	3959,f,c	;volsfr
 39687                           
 39688                           ;memory.c: 195: NVMCON1bits.RD = 1;
 39689  01B0BA  8077               	bsf	3959,0,c	;volsfr
 39690                           
 39691                           ;memory.c: 196: __nop();
 39692  01B0BC  F000               	nop	
 39693                           
 39694                           ;memory.c: 197: __nop();
 39695  01B0BE  F000               	nop	
 39696                           
 39697                           ;memory.c: 199: return (NVMDAT);
 39698  01B0C0  5076               	movf	3958,w,c	;volatile
 39699  01B0C2  0012               	return	
 39700  01B0C4                     __end_ofi2_DATAEE_ReadByte:
 39701                           	opt stack 0
 39702                           tosu	equ	0xFFF
 39703                           tosh	equ	0xFFE
 39704                           tosl	equ	0xFFD
 39705                           pclatu	equ	0xFFB
 39706                           pclath	equ	0xFFA
 39707                           tblptru	equ	0xFF8
 39708                           tblptrh	equ	0xFF7
 39709                           tblptrl	equ	0xFF6
 39710                           tablat	equ	0xFF5
 39711                           prodh	equ	0xFF4
 39712                           prodl	equ	0xFF3
 39713                           intcon	equ	0xFF2
 39714                           indf0	equ	0xFEF
 39715                           postinc0	equ	0xFEE
 39716                           fsr0h	equ	0xFEA
 39717                           fsr0l	equ	0xFE9
 39718                           wreg	equ	0xFE8
 39719                           indf1	equ	0xFE7
 39720                           postdec1	equ	0xFE5
 39721                           plusw1	equ	0xFE3
 39722                           fsr1h	equ	0xFE2
 39723                           fsr1l	equ	0xFE1
 39724                           bsr	equ	0xFE0
 39725                           indf2	equ	0xFDF
 39726                           postinc2	equ	0xFDE
 39727                           postdec2	equ	0xFDD
 39728                           plusw2	equ	0xFDB
 39729                           fsr2h	equ	0xFDA
 39730                           fsr2l	equ	0xFD9
 39731                           status	equ	0xFD8
 39732                           
 39733 ;; *************** function _INT0_ISR *****************
 39734 ;; Defined at:
 39735 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 39736 ;; Parameters:    Size  Location     Type
 39737 ;;		None
 39738 ;; Auto vars:     Size  Location     Type
 39739 ;;		None
 39740 ;; Return value:  Size  Location     Type
 39741 ;;                  1    wreg      void 
 39742 ;; Registers used:
 39743 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39744 ;; Tracked objects:
 39745 ;;		On entry : 0/0
 39746 ;;		On exit  : 0/0
 39747 ;;		Unchanged: 0/0
 39748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39753 ;;Total ram usage:        0 bytes
 39754 ;; Hardware stack levels used:    1
 39755 ;; Hardware stack levels required when called:    3
 39756 ;; This function calls:
 39757 ;;		_INT0_CallBack
 39758 ;; This function is called by:
 39759 ;;		_INTERRUPT_InterruptManagerHigh
 39760 ;; This function uses a non-reentrant model
 39761 ;;
 39762                           
 39763                           	psect	text119
 39764  01B240                     __ptext119:
 39765                           	opt stack 0
 39766  01B240                     _INT0_ISR:
 39767                           	opt stack 14
 39768                           
 39769                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 39770                           
 39771                           ;incstack = 0
 39772  01B240  010E               	movlb	14	; () banked
 39773  01B242  9133               	bcf	51,0,b	;volatile
 39774                           
 39775                           ; BSR set to: 14
 39776                           ;ext_int.c: 37: INT0_CallBack();
 39777  01B244  EC89  F0D7         	call	_INT0_CallBack	;wreg free
 39778  01B248  0012               	return		;funcret
 39779  01B24A                     __end_of_INT0_ISR:
 39780                           	opt stack 0
 39781                           tosu	equ	0xFFF
 39782                           tosh	equ	0xFFE
 39783                           tosl	equ	0xFFD
 39784                           pclatu	equ	0xFFB
 39785                           pclath	equ	0xFFA
 39786                           tblptru	equ	0xFF8
 39787                           tblptrh	equ	0xFF7
 39788                           tblptrl	equ	0xFF6
 39789                           tablat	equ	0xFF5
 39790                           prodh	equ	0xFF4
 39791                           prodl	equ	0xFF3
 39792                           intcon	equ	0xFF2
 39793                           indf0	equ	0xFEF
 39794                           postinc0	equ	0xFEE
 39795                           fsr0h	equ	0xFEA
 39796                           fsr0l	equ	0xFE9
 39797                           wreg	equ	0xFE8
 39798                           indf1	equ	0xFE7
 39799                           postdec1	equ	0xFE5
 39800                           plusw1	equ	0xFE3
 39801                           fsr1h	equ	0xFE2
 39802                           fsr1l	equ	0xFE1
 39803                           bsr	equ	0xFE0
 39804                           indf2	equ	0xFDF
 39805                           postinc2	equ	0xFDE
 39806                           postdec2	equ	0xFDD
 39807                           plusw2	equ	0xFDB
 39808                           fsr2h	equ	0xFDA
 39809                           fsr2l	equ	0xFD9
 39810                           status	equ	0xFD8
 39811                           
 39812 ;; *************** function _INT0_CallBack *****************
 39813 ;; Defined at:
 39814 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 39815 ;; Parameters:    Size  Location     Type
 39816 ;;		None
 39817 ;; Auto vars:     Size  Location     Type
 39818 ;;		None
 39819 ;; Return value:  Size  Location     Type
 39820 ;;                  1    wreg      void 
 39821 ;; Registers used:
 39822 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39823 ;; Tracked objects:
 39824 ;;		On entry : 0/0
 39825 ;;		On exit  : 0/0
 39826 ;;		Unchanged: 0/0
 39827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39832 ;;Total ram usage:        0 bytes
 39833 ;; Hardware stack levels used:    1
 39834 ;; Hardware stack levels required when called:    2
 39835 ;; This function calls:
 39836 ;;		Absolute function
 39837 ;;		_INT0_DefaultInterruptHandler
 39838 ;;		_dimmingOffTimeCallback
 39839 ;; This function is called by:
 39840 ;;		_INT0_ISR
 39841 ;; This function uses a non-reentrant model
 39842 ;;
 39843                           
 39844                           	psect	text120
 39845  01AF12                     __ptext120:
 39846                           	opt stack 0
 39847  01AF12                     _INT0_CallBack:
 39848                           	opt stack 14
 39849                           
 39850                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 39851                           
 39852                           ;incstack = 0
 39853  01AF12  0102               	movlb	2	; () banked
 39854  01AF14  5147               	movf	_INT0_InterruptHandler& (0+255),w,b
 39855  01AF16  1148               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39856  01AF18  1149               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39857  01AF1A  B4D8               	btfsc	status,2,c
 39858  01AF1C  0012               	return	
 39859                           
 39860                           ; BSR set to: 2
 39861                           ;ext_int.c: 45: {
 39862                           ;ext_int.c: 46: INT0_InterruptHandler();
 39863  01AF1E  D801               	call	i2u3335_48
 39864  01AF20  0012               	return	
 39865  01AF22                     i2u3335_48:
 39866  01AF22  0005               	push	
 39867  01AF24  6EFA               	movwf	pclath,c
 39868  01AF26  5147               	movf	_INT0_InterruptHandler& (0+255),w,b
 39869  01AF28  6EFD               	movwf	tosl,c
 39870  01AF2A  5148               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 39871  01AF2C  6EFE               	movwf	tosh,c
 39872  01AF2E  5149               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 39873  01AF30  6EFF               	movwf	tosu,c
 39874  01AF32  50FA               	movf	pclath,w,c
 39875  01AF34  0012               	return		;indir
 39876  01AF36                     __end_of_INT0_CallBack:
 39877                           	opt stack 0
 39878                           tosu	equ	0xFFF
 39879                           tosh	equ	0xFFE
 39880                           tosl	equ	0xFFD
 39881                           pclatu	equ	0xFFB
 39882                           pclath	equ	0xFFA
 39883                           tblptru	equ	0xFF8
 39884                           tblptrh	equ	0xFF7
 39885                           tblptrl	equ	0xFF6
 39886                           tablat	equ	0xFF5
 39887                           prodh	equ	0xFF4
 39888                           prodl	equ	0xFF3
 39889                           intcon	equ	0xFF2
 39890                           indf0	equ	0xFEF
 39891                           postinc0	equ	0xFEE
 39892                           fsr0h	equ	0xFEA
 39893                           fsr0l	equ	0xFE9
 39894                           wreg	equ	0xFE8
 39895                           indf1	equ	0xFE7
 39896                           postdec1	equ	0xFE5
 39897                           plusw1	equ	0xFE3
 39898                           fsr1h	equ	0xFE2
 39899                           fsr1l	equ	0xFE1
 39900                           bsr	equ	0xFE0
 39901                           indf2	equ	0xFDF
 39902                           postinc2	equ	0xFDE
 39903                           postdec2	equ	0xFDD
 39904                           plusw2	equ	0xFDB
 39905                           fsr2h	equ	0xFDA
 39906                           fsr2l	equ	0xFD9
 39907                           status	equ	0xFD8
 39908                           
 39909 ;; *************** function _INT0_DefaultInterruptHandler *****************
 39910 ;; Defined at:
 39911 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 39912 ;; Parameters:    Size  Location     Type
 39913 ;;		None
 39914 ;; Auto vars:     Size  Location     Type
 39915 ;;		None
 39916 ;; Return value:  Size  Location     Type
 39917 ;;                  1    wreg      void 
 39918 ;; Registers used:
 39919 ;;		None
 39920 ;; Tracked objects:
 39921 ;;		On entry : 0/0
 39922 ;;		On exit  : 0/0
 39923 ;;		Unchanged: 0/0
 39924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39929 ;;Total ram usage:        0 bytes
 39930 ;; Hardware stack levels used:    1
 39931 ;; This function calls:
 39932 ;;		Nothing
 39933 ;; This function is called by:
 39934 ;;		_EXT_INT_Initialize
 39935 ;;		_INT0_CallBack
 39936 ;; This function uses a non-reentrant model
 39937 ;;
 39938                           
 39939                           	psect	text121
 39940  01B292                     __ptext121:
 39941                           	opt stack 0
 39942  01B292                     _INT0_DefaultInterruptHandler:
 39943                           	opt stack 15
 39944                           
 39945                           ;incstack = 0
 39946  01B292  0012               	return		;funcret
 39947  01B294                     __end_of_INT0_DefaultInterruptHandler:
 39948                           	opt stack 0
 39949                           tosu	equ	0xFFF
 39950                           tosh	equ	0xFFE
 39951                           tosl	equ	0xFFD
 39952                           pclatu	equ	0xFFB
 39953                           pclath	equ	0xFFA
 39954                           tblptru	equ	0xFF8
 39955                           tblptrh	equ	0xFF7
 39956                           tblptrl	equ	0xFF6
 39957                           tablat	equ	0xFF5
 39958                           prodh	equ	0xFF4
 39959                           prodl	equ	0xFF3
 39960                           intcon	equ	0xFF2
 39961                           indf0	equ	0xFEF
 39962                           postinc0	equ	0xFEE
 39963                           fsr0h	equ	0xFEA
 39964                           fsr0l	equ	0xFE9
 39965                           wreg	equ	0xFE8
 39966                           indf1	equ	0xFE7
 39967                           postdec1	equ	0xFE5
 39968                           plusw1	equ	0xFE3
 39969                           fsr1h	equ	0xFE2
 39970                           fsr1l	equ	0xFE1
 39971                           bsr	equ	0xFE0
 39972                           indf2	equ	0xFDF
 39973                           postinc2	equ	0xFDE
 39974                           postdec2	equ	0xFDD
 39975                           plusw2	equ	0xFDB
 39976                           fsr2h	equ	0xFDA
 39977                           fsr2l	equ	0xFD9
 39978                           status	equ	0xFD8
 39979                           
 39980 ;; *************** function _dimmingOffTimeCallback *****************
 39981 ;; Defined at:
 39982 ;;		line 425 in file "main.c"
 39983 ;; Parameters:    Size  Location     Type
 39984 ;;		None
 39985 ;; Auto vars:     Size  Location     Type
 39986 ;;		None
 39987 ;; Return value:  Size  Location     Type
 39988 ;;                  1    wreg      void 
 39989 ;; Registers used:
 39990 ;;		wreg, status,2, cstack
 39991 ;; Tracked objects:
 39992 ;;		On entry : 0/0
 39993 ;;		On exit  : 0/0
 39994 ;;		Unchanged: 0/0
 39995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40000 ;;Total ram usage:        0 bytes
 40001 ;; Hardware stack levels used:    1
 40002 ;; Hardware stack levels required when called:    1
 40003 ;; This function calls:
 40004 ;;		_TMR5_StartTimer
 40005 ;;		_TMR5_WriteTimer
 40006 ;; This function is called by:
 40007 ;;		_main
 40008 ;;		_INT0_CallBack
 40009 ;; This function uses a non-reentrant model
 40010 ;;
 40011                           
 40012                           	psect	text122
 40013  01B0C4                     __ptext122:
 40014                           	opt stack 0
 40015  01B0C4                     _dimmingOffTimeCallback:
 40016                           	opt stack 14
 40017                           
 40018                           ;main.c: 428: LATGbits.LATG1 = 0;
 40019                           
 40020                           ;incstack = 0
 40021  01B0C4  927F               	bcf	3967,1,c	;volatile
 40022                           
 40023                           ;main.c: 431: TMR5_WriteTimer(dimming_period);
 40024  01B0C6  C0F0  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 40025  01B0CA  C0F1  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 40026  01B0CE  EC15  F0D8         	call	_TMR5_WriteTimer	;wreg free
 40027                           
 40028                           ;main.c: 432: TMR5_StartTimer();
 40029  01B0D2  EC3F  F0D9         	call	_TMR5_StartTimer	;wreg free
 40030                           
 40031                           ;main.c: 435: PIE5bits.TMR5IE = 1;
 40032  01B0D6  010E               	movlb	14	; () banked
 40033  01B0D8  892E               	bsf	46,4,b	;volatile
 40034                           
 40035                           ; BSR set to: 14
 40036  01B0DA  0012               	return		;funcret
 40037  01B0DC                     __end_of_dimmingOffTimeCallback:
 40038                           	opt stack 0
 40039                           tosu	equ	0xFFF
 40040                           tosh	equ	0xFFE
 40041                           tosl	equ	0xFFD
 40042                           pclatu	equ	0xFFB
 40043                           pclath	equ	0xFFA
 40044                           tblptru	equ	0xFF8
 40045                           tblptrh	equ	0xFF7
 40046                           tblptrl	equ	0xFF6
 40047                           tablat	equ	0xFF5
 40048                           prodh	equ	0xFF4
 40049                           prodl	equ	0xFF3
 40050                           intcon	equ	0xFF2
 40051                           indf0	equ	0xFEF
 40052                           postinc0	equ	0xFEE
 40053                           fsr0h	equ	0xFEA
 40054                           fsr0l	equ	0xFE9
 40055                           wreg	equ	0xFE8
 40056                           indf1	equ	0xFE7
 40057                           postdec1	equ	0xFE5
 40058                           plusw1	equ	0xFE3
 40059                           fsr1h	equ	0xFE2
 40060                           fsr1l	equ	0xFE1
 40061                           bsr	equ	0xFE0
 40062                           indf2	equ	0xFDF
 40063                           postinc2	equ	0xFDE
 40064                           postdec2	equ	0xFDD
 40065                           plusw2	equ	0xFDB
 40066                           fsr2h	equ	0xFDA
 40067                           fsr2l	equ	0xFD9
 40068                           status	equ	0xFD8
 40069                           
 40070 ;; *************** function _TMR5_WriteTimer *****************
 40071 ;; Defined at:
 40072 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 40073 ;; Parameters:    Size  Location     Type
 40074 ;;  timerVal        2    0[COMRAM] unsigned int 
 40075 ;; Auto vars:     Size  Location     Type
 40076 ;;		None
 40077 ;; Return value:  Size  Location     Type
 40078 ;;                  1    wreg      void 
 40079 ;; Registers used:
 40080 ;;		wreg, status,2
 40081 ;; Tracked objects:
 40082 ;;		On entry : 0/0
 40083 ;;		On exit  : 0/0
 40084 ;;		Unchanged: 0/0
 40085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40090 ;;Total ram usage:        2 bytes
 40091 ;; Hardware stack levels used:    1
 40092 ;; This function calls:
 40093 ;;		Nothing
 40094 ;; This function is called by:
 40095 ;;		_TMR5_ISR
 40096 ;;		_dimmingOffTimeCallback
 40097 ;;		_TMR5_Reload
 40098 ;; This function uses a non-reentrant model
 40099 ;;
 40100                           
 40101                           	psect	text123
 40102  01B02A                     __ptext123:
 40103                           	opt stack 0
 40104  01B02A                     _TMR5_WriteTimer:
 40105                           	opt stack 16
 40106                           
 40107                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 40108                           
 40109                           ; BSR set to: 14
 40110                           ;incstack = 0
 40111  01B02A  A4C3               	btfss	4035,2,c	;volatile
 40112  01B02C  D007               	goto	i2l762
 40113                           
 40114                           ;tmr5.c: 130: {
 40115                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 40116  01B02E  90C3               	bcf	4035,0,c	;volatile
 40117                           
 40118                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 40119  01B030  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40120  01B032  6EC2               	movwf	4034,c	;volatile
 40121                           
 40122                           ;tmr5.c: 136: TMR5L = timerVal;
 40123  01B034  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 40124                           
 40125                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 40126  01B038  80C3               	bsf	4035,0,c	;volatile
 40127                           
 40128                           ;tmr5.c: 140: }
 40129  01B03A  0012               	return	
 40130  01B03C                     i2l762:
 40131                           
 40132                           ;tmr5.c: 141: else
 40133                           ;tmr5.c: 142: {
 40134                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 40135  01B03C  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40136  01B03E  6EC2               	movwf	4034,c	;volatile
 40137                           
 40138                           ;tmr5.c: 145: TMR5L = timerVal;
 40139  01B040  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 40140  01B044  0012               	return	
 40141  01B046                     __end_of_TMR5_WriteTimer:
 40142                           	opt stack 0
 40143                           tosu	equ	0xFFF
 40144                           tosh	equ	0xFFE
 40145                           tosl	equ	0xFFD
 40146                           pclatu	equ	0xFFB
 40147                           pclath	equ	0xFFA
 40148                           tblptru	equ	0xFF8
 40149                           tblptrh	equ	0xFF7
 40150                           tblptrl	equ	0xFF6
 40151                           tablat	equ	0xFF5
 40152                           prodh	equ	0xFF4
 40153                           prodl	equ	0xFF3
 40154                           intcon	equ	0xFF2
 40155                           indf0	equ	0xFEF
 40156                           postinc0	equ	0xFEE
 40157                           fsr0h	equ	0xFEA
 40158                           fsr0l	equ	0xFE9
 40159                           wreg	equ	0xFE8
 40160                           indf1	equ	0xFE7
 40161                           postdec1	equ	0xFE5
 40162                           plusw1	equ	0xFE3
 40163                           fsr1h	equ	0xFE2
 40164                           fsr1l	equ	0xFE1
 40165                           bsr	equ	0xFE0
 40166                           indf2	equ	0xFDF
 40167                           postinc2	equ	0xFDE
 40168                           postdec2	equ	0xFDD
 40169                           plusw2	equ	0xFDB
 40170                           fsr2h	equ	0xFDA
 40171                           fsr2l	equ	0xFD9
 40172                           status	equ	0xFD8
 40173                           
 40174 ;; *************** function _TMR5_StartTimer *****************
 40175 ;; Defined at:
 40176 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 40177 ;; Parameters:    Size  Location     Type
 40178 ;;		None
 40179 ;; Auto vars:     Size  Location     Type
 40180 ;;		None
 40181 ;; Return value:  Size  Location     Type
 40182 ;;                  1    wreg      void 
 40183 ;; Registers used:
 40184 ;;		None
 40185 ;; Tracked objects:
 40186 ;;		On entry : 0/0
 40187 ;;		On exit  : 0/0
 40188 ;;		Unchanged: 0/0
 40189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40194 ;;Total ram usage:        0 bytes
 40195 ;; Hardware stack levels used:    1
 40196 ;; This function calls:
 40197 ;;		Nothing
 40198 ;; This function is called by:
 40199 ;;		_dimmingOffTimeCallback
 40200 ;; This function uses a non-reentrant model
 40201 ;;
 40202                           
 40203                           	psect	text124
 40204  01B27E                     __ptext124:
 40205                           	opt stack 0
 40206  01B27E                     _TMR5_StartTimer:
 40207                           	opt stack 14
 40208                           
 40209                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 40210                           
 40211                           ;incstack = 0
 40212  01B27E  80C3               	bsf	4035,0,c	;volatile
 40213  01B280  0012               	return		;funcret
 40214  01B282                     __end_of_TMR5_StartTimer:
 40215                           	opt stack 0
 40216                           tosu	equ	0xFFF
 40217                           tosh	equ	0xFFE
 40218                           tosl	equ	0xFFD
 40219                           pclatu	equ	0xFFB
 40220                           pclath	equ	0xFFA
 40221                           tblptru	equ	0xFF8
 40222                           tblptrh	equ	0xFF7
 40223                           tblptrl	equ	0xFF6
 40224                           tablat	equ	0xFF5
 40225                           prodh	equ	0xFF4
 40226                           prodl	equ	0xFF3
 40227                           intcon	equ	0xFF2
 40228                           indf0	equ	0xFEF
 40229                           postinc0	equ	0xFEE
 40230                           fsr0h	equ	0xFEA
 40231                           fsr0l	equ	0xFE9
 40232                           wreg	equ	0xFE8
 40233                           indf1	equ	0xFE7
 40234                           postdec1	equ	0xFE5
 40235                           plusw1	equ	0xFE3
 40236                           fsr1h	equ	0xFE2
 40237                           fsr1l	equ	0xFE1
 40238                           bsr	equ	0xFE0
 40239                           indf2	equ	0xFDF
 40240                           postinc2	equ	0xFDE
 40241                           postdec2	equ	0xFDD
 40242                           plusw2	equ	0xFDB
 40243                           fsr2h	equ	0xFDA
 40244                           fsr2l	equ	0xFD9
 40245                           status	equ	0xFD8
 40246                           
 40247 ;; *************** function _I2C1_ISR *****************
 40248 ;; Defined at:
 40249 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 40250 ;; Parameters:    Size  Location     Type
 40251 ;;		None
 40252 ;; Auto vars:     Size  Location     Type
 40253 ;;		None
 40254 ;; Return value:  Size  Location     Type
 40255 ;;                  1    wreg      void 
 40256 ;; Registers used:
 40257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40258 ;; Tracked objects:
 40259 ;;		On entry : 0/0
 40260 ;;		On exit  : 0/0
 40261 ;;		Unchanged: 0/0
 40262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40267 ;;Total ram usage:        2 bytes
 40268 ;; Hardware stack levels used:    1
 40269 ;; Hardware stack levels required when called:    1
 40270 ;; This function calls:
 40271 ;;		_I2C1_FunctionComplete
 40272 ;;		_I2C1_Stop
 40273 ;; This function is called by:
 40274 ;;		_INTERRUPT_InterruptManagerHigh
 40275 ;; This function uses a non-reentrant model
 40276 ;;
 40277                           
 40278                           	psect	text125
 40279  017AF0                     __ptext125:
 40280                           	opt stack 0
 40281  017AF0                     _I2C1_ISR:
 40282                           	opt stack 16
 40283                           
 40284                           ;i2c1.c: 238: static uint8_t *pi2c_buf_ptr;
 40285                           ;i2c1.c: 239: static uint16_t i2c_address = 0;
 40286                           ;i2c1.c: 240: static uint8_t i2c_bytes_left = 0;
 40287                           ;i2c1.c: 241: static uint8_t i2c_10bit_address_restart = 0;
 40288                           ;i2c1.c: 243: PIR3bits.SSP1IF = 0;
 40289                           
 40290                           ;incstack = 0
 40291  017AF0  010E               	movlb	14	; () banked
 40292  017AF2  9136               	bcf	54,0,b	;volatile
 40293                           
 40294                           ;i2c1.c: 247: if(SSP1CON1bits.WCOL)
 40295  017AF4  AE95               	btfss	3989,7,c	;volatile
 40296  017AF6  D104               	goto	i2l1780
 40297                           
 40298                           ; BSR set to: 14
 40299                           ;i2c1.c: 248: {
 40300                           ;i2c1.c: 250: SSP1CON1bits.WCOL = 0;
 40301  017AF8  9E95               	bcf	3989,7,c	;volatile
 40302                           
 40303                           ; BSR set to: 14
 40304                           ;i2c1.c: 251: i2c1_state = S_MASTER_IDLE;
 40305  017AFA  0E00               	movlw	0
 40306  017AFC  0102               	movlb	2	; () banked
 40307  017AFE  6F6D               	movwf	_i2c1_state& (0+255),b
 40308                           
 40309                           ; BSR set to: 2
 40310                           ;i2c1.c: 252: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 40311  017B00  EE20 F003          	lfsr	2,3
 40312  017B04  5160               	movf	_p_i2c1_current& (0+255),w,b
 40313  017B06  26D9               	addwf	fsr2l,f,c
 40314  017B08  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40315  017B0A  22DA               	addwfc	fsr2h,f,c
 40316  017B0C  CFDE F004          	movff	postinc2,??_I2C1_ISR
 40317  017B10  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 40318  017B14  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 40319  017B18  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 40320  017B1C  0E01               	movlw	1
 40321  017B1E  6EDF               	movwf	indf2,c
 40322                           
 40323                           ; BSR set to: 2
 40324                           ;i2c1.c: 255: p_i2c1_current = (0);
 40325  017B20  0E00               	movlw	0
 40326  017B22  6F60               	movwf	_p_i2c1_current& (0+255),b
 40327  017B24  0E00               	movlw	0
 40328  017B26  6F61               	movwf	(_p_i2c1_current+1)& (0+255),b
 40329                           
 40330                           ; BSR set to: 2
 40331                           ;i2c1.c: 257: return;
 40332  017B28  0012               	return	
 40333  017B2A                     i2l1781:
 40334                           
 40335                           ; BSR set to: 2
 40336                           ;i2c1.c: 265: if(i2c1_object.trStatus.s.empty != 1)
 40337  017B2A  B30D               	btfsc	(_i2c1_object+4)& (0+255),1,b
 40338  017B2C  0012               	return	
 40339                           
 40340                           ; BSR set to: 2
 40341                           ;i2c1.c: 266: {
 40342                           ;i2c1.c: 268: p_i2c1_current = i2c1_object.pTrHead;
 40343  017B2E  C20B  F260         	movff	_i2c1_object+2,_p_i2c1_current
 40344  017B32  C20C  F261         	movff	_i2c1_object+3,_p_i2c1_current+1
 40345                           
 40346                           ; BSR set to: 2
 40347                           ;i2c1.c: 269: i2c1_trb_count = i2c1_object.pTrHead->count;
 40348  017B36  C20B  FFD9         	movff	_i2c1_object+2,fsr2l
 40349  017B3A  C20C  FFDA         	movff	_i2c1_object+3,fsr2h
 40350  017B3E  50DF               	movf	indf2,w,c
 40351  017B40  6F6C               	movwf	_i2c1_trb_count& (0+255),b
 40352                           
 40353                           ; BSR set to: 2
 40354                           ;i2c1.c: 270: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 40355  017B42  EE20 F001          	lfsr	2,1
 40356  017B46  510B               	movf	(_i2c1_object+2)& (0+255),w,b
 40357  017B48  26D9               	addwf	fsr2l,f,c
 40358  017B4A  510C               	movf	(_i2c1_object+3)& (0+255),w,b
 40359  017B4C  22DA               	addwfc	fsr2h,f,c
 40360  017B4E  CFDE F262          	movff	postinc2,_p_i2c1_trb_current
 40361  017B52  CFDD F263          	movff	postdec2,_p_i2c1_trb_current+1
 40362                           
 40363                           ; BSR set to: 2
 40364                           ;i2c1.c: 272: i2c1_object.pTrHead++;
 40365  017B56  0E05               	movlw	5
 40366  017B58  270B               	addwf	(_i2c1_object+2)& (0+255),f,b
 40367  017B5A  0E00               	movlw	0
 40368  017B5C  230C               	addwfc	(_i2c1_object+3)& (0+255),f,b
 40369                           
 40370                           ; BSR set to: 2
 40371                           ;i2c1.c: 275: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 40372  017B5E  0E93               	movlw	low (_i2c1_tr_queue+5)
 40373  017B60  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 40374  017B62  E108               	bnz	i2l13061
 40375  017B64  0E02               	movlw	high (_i2c1_tr_queue+5)
 40376  017B66  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 40377  017B68  A4D8               	btfss	status,2,c
 40378  017B6A  D004               	goto	i2l1783
 40379                           
 40380                           ; BSR set to: 2
 40381                           ;i2c1.c: 276: {
 40382                           ;i2c1.c: 278: i2c1_object.pTrHead = i2c1_tr_queue;
 40383  017B6C  0E8E               	movlw	low _i2c1_tr_queue
 40384  017B6E  6F0B               	movwf	(_i2c1_object+2)& (0+255),b
 40385  017B70  0E02               	movlw	high _i2c1_tr_queue
 40386  017B72  6F0C               	movwf	(_i2c1_object+3)& (0+255),b
 40387  017B74                     i2l1783:
 40388  017B74                     i2l13061:
 40389                           
 40390                           ; BSR set to: 2
 40391                           ;i2c1.c: 279: }
 40392                           ;i2c1.c: 283: i2c1_object.trStatus.s.full = 0;
 40393  017B74  910D               	bcf	(_i2c1_object+4)& (0+255),0,b
 40394                           
 40395                           ;i2c1.c: 286: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 40396  017B76  5109               	movf	_i2c1_object& (0+255),w,b
 40397  017B78  190B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 40398  017B7A  E104               	bnz	i2l1784
 40399  017B7C  510A               	movf	(_i2c1_object+1)& (0+255),w,b
 40400  017B7E  190C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 40401  017B80  B4D8               	btfsc	status,2,c
 40402                           
 40403                           ; BSR set to: 2
 40404                           ;i2c1.c: 287: {
 40405                           ;i2c1.c: 289: i2c1_object.trStatus.s.empty = 1;
 40406  017B82  830D               	bsf	(_i2c1_object+4)& (0+255),1,b
 40407  017B84                     i2l1784:
 40408                           
 40409                           ; BSR set to: 2
 40410                           ;i2c1.c: 290: }
 40411                           ;i2c1.c: 293: SSP1CON2bits.SEN = 1;
 40412  017B84  8096               	bsf	3990,0,c	;volatile
 40413                           
 40414                           ; BSR set to: 2
 40415                           ;i2c1.c: 296: i2c1_state = S_MASTER_SEND_ADDR;
 40416  017B86  0E02               	movlw	2
 40417  017B88  6F6D               	movwf	_i2c1_state& (0+255),b
 40418                           
 40419                           ; BSR set to: 2
 40420                           ;i2c1.c: 297: }
 40421                           ;i2c1.c: 299: break;
 40422  017B8A  0012               	return	
 40423  017B8C                     i2l1786:
 40424                           
 40425                           ; BSR set to: 2
 40426                           ;i2c1.c: 306: SSP1CON2bits.RSEN = 1;
 40427  017B8C  8296               	bsf	3990,1,c	;volatile
 40428                           
 40429                           ; BSR set to: 2
 40430                           ;i2c1.c: 309: i2c1_state = S_MASTER_SEND_ADDR;
 40431  017B8E  0E02               	movlw	2
 40432  017B90  6F6D               	movwf	_i2c1_state& (0+255),b
 40433                           
 40434                           ;i2c1.c: 311: break;
 40435  017B92  0012               	return	
 40436  017B94                     i2l1787:
 40437                           
 40438                           ; BSR set to: 2
 40439                           ;i2c1.c: 315: if(SSP1CON2bits.ACKSTAT)
 40440  017B94  AC96               	btfss	3990,6,c	;volatile
 40441  017B96  D005               	goto	i2l1788
 40442                           
 40443                           ; BSR set to: 2
 40444                           ;i2c1.c: 316: {
 40445                           ;i2c1.c: 317: i2c1_object.i2cErrors++;
 40446  017B98  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40447                           
 40448                           ; BSR set to: 2
 40449                           ;i2c1.c: 318: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40450  017B9A  0E04               	movlw	4
 40451  017B9C  EC69  F0D4         	call	_I2C1_Stop
 40452                           
 40453                           ;i2c1.c: 319: }
 40454  017BA0  0012               	return	
 40455  017BA2                     i2l1788:
 40456                           
 40457                           ;i2c1.c: 320: else
 40458                           ;i2c1.c: 321: {
 40459                           ;i2c1.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 40460  017BA2  90D8               	bcf	status,0,c
 40461  017BA4  0101               	movlb	1	; () banked
 40462  017BA6  31E7               	rrcf	(I2C1_ISR@i2c_address+1)& (0+255),w,b
 40463  017BA8  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 40464  017BAA  31E6               	rrcf	I2C1_ISR@i2c_address& (0+255),w,b
 40465  017BAC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 40466  017BAE  5004               	movf	??_I2C1_ISR,w,c
 40467  017BB0  6E91               	movwf	3985,c	;volatile
 40468                           
 40469                           ; BSR set to: 1
 40470                           ;i2c1.c: 326: if(i2c_address & 0x01)
 40471  017BB2  A1E6               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40472  017BB4  D004               	goto	i2l1790
 40473                           
 40474                           ; BSR set to: 1
 40475                           ;i2c1.c: 327: {
 40476                           ;i2c1.c: 330: i2c1_state = S_MASTER_10BIT_RESTART;
 40477  017BB6  0E0B               	movlw	11
 40478  017BB8  0102               	movlb	2	; () banked
 40479  017BBA  6F6D               	movwf	_i2c1_state& (0+255),b
 40480                           
 40481                           ;i2c1.c: 331: }
 40482  017BBC  0012               	return	
 40483  017BBE                     i2l1790:
 40484                           
 40485                           ;i2c1.c: 332: else
 40486                           ;i2c1.c: 333: {
 40487                           ;i2c1.c: 335: i2c1_state = S_MASTER_SEND_DATA;
 40488                           
 40489                           ; BSR set to: 2
 40490  017BBE  0E03               	movlw	3
 40491  017BC0  0102               	movlb	2	; () banked
 40492  017BC2  6F6D               	movwf	_i2c1_state& (0+255),b
 40493                           
 40494                           ; BSR set to: 2
 40495                           ;i2c1.c: 336: }
 40496                           ;i2c1.c: 337: }
 40497                           ;i2c1.c: 339: break;
 40498                           
 40499                           ; BSR set to: 2
 40500  017BC4  0012               	return	
 40501  017BC6                     i2l1792:
 40502                           
 40503                           ; BSR set to: 2
 40504                           ;i2c1.c: 343: if(SSP1CON2bits.ACKSTAT)
 40505  017BC6  AC96               	btfss	3990,6,c	;volatile
 40506  017BC8  D005               	goto	i2l1793
 40507                           
 40508                           ; BSR set to: 2
 40509                           ;i2c1.c: 344: {
 40510                           ;i2c1.c: 345: i2c1_object.i2cErrors++;
 40511  017BCA  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40512                           
 40513                           ; BSR set to: 2
 40514                           ;i2c1.c: 346: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40515  017BCC  0E04               	movlw	4
 40516  017BCE  EC69  F0D4         	call	_I2C1_Stop
 40517                           
 40518                           ;i2c1.c: 347: }
 40519  017BD2  0012               	return	
 40520  017BD4                     i2l1793:
 40521                           
 40522                           ; BSR set to: 2
 40523                           ;i2c1.c: 348: else
 40524                           ;i2c1.c: 349: {
 40525                           ;i2c1.c: 352: SSP1CON2bits.RSEN = 1;
 40526  017BD4  8296               	bsf	3990,1,c	;volatile
 40527                           
 40528                           ; BSR set to: 2
 40529                           ;i2c1.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 40530  017BD6  C1E6  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 40531  017BDA  C1E7  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 40532  017BDE  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 40533  017BE2  6A05               	clrf	??_I2C1_ISR+1,c
 40534  017BE4  0E06               	movlw	6
 40535  017BE6  1604               	andwf	??_I2C1_ISR,f,c
 40536  017BE8  0E00               	movlw	0
 40537  017BEA  1605               	andwf	??_I2C1_ISR+1,f,c
 40538  017BEC  0EF0               	movlw	240
 40539  017BEE  1004               	iorwf	??_I2C1_ISR,w,c
 40540  017BF0  0101               	movlb	1	; () banked
 40541  017BF2  6FE6               	movwf	I2C1_ISR@i2c_address& (0+255),b
 40542  017BF4  5005               	movf	??_I2C1_ISR+1,w,c
 40543  017BF6  6FE7               	movwf	(I2C1_ISR@i2c_address+1)& (0+255),b
 40544                           
 40545                           ; BSR set to: 1
 40546                           ;i2c1.c: 359: i2c_address |= 0x0001;
 40547  017BF8  81E6               	bsf	I2C1_ISR@i2c_address& (0+255),0,b
 40548                           
 40549                           ; BSR set to: 1
 40550                           ;i2c1.c: 362: i2c_10bit_address_restart = 1;
 40551  017BFA  0E01               	movlw	1
 40552  017BFC  0102               	movlb	2	; () banked
 40553  017BFE  6F6A               	movwf	I2C1_ISR@i2c_10bit_address_restart& (0+255),b
 40554                           
 40555                           ; BSR set to: 2
 40556                           ;i2c1.c: 365: i2c1_state = S_MASTER_SEND_ADDR;
 40557  017C00  0E02               	movlw	2
 40558  017C02  6F6D               	movwf	_i2c1_state& (0+255),b
 40559                           
 40560                           ; BSR set to: 2
 40561                           ;i2c1.c: 366: }
 40562                           ;i2c1.c: 368: break;
 40563  017C04  0012               	return	
 40564  017C06                     
 40565                           ; BSR set to: 2
 40566                           ;i2c1.c: 383: if(i2c_10bit_address_restart != 1)
 40567                           
 40568                           ; BSR set to: 2
 40569  017C06  056A               	decf	I2C1_ISR@i2c_10bit_address_restart& (0+255),w,b
 40570  017C08  B4D8               	btfsc	status,2,c
 40571  017C0A  D01A               	goto	i2l1797
 40572                           
 40573                           ; BSR set to: 2
 40574                           ;i2c1.c: 384: {
 40575                           ;i2c1.c: 386: i2c_address = p_i2c1_trb_current->address;
 40576  017C0C  C262  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 40577  017C10  C263  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 40578  017C14  CFDE F1E6          	movff	postinc2,I2C1_ISR@i2c_address
 40579  017C18  CFDD F1E7          	movff	postdec2,I2C1_ISR@i2c_address+1
 40580                           
 40581                           ; BSR set to: 2
 40582                           ;i2c1.c: 387: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 40583  017C1C  EE20 F003          	lfsr	2,3
 40584  017C20  5162               	movf	_p_i2c1_trb_current& (0+255),w,b
 40585  017C22  26D9               	addwf	fsr2l,f,c
 40586  017C24  5163               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40587  017C26  22DA               	addwfc	fsr2h,f,c
 40588  017C28  CFDE F25E          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 40589  017C2C  CFDD F25F          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 40590                           
 40591                           ; BSR set to: 2
 40592                           ;i2c1.c: 388: i2c_bytes_left = p_i2c1_trb_current->length;
 40593  017C30  EE20 F002          	lfsr	2,2
 40594  017C34  5162               	movf	_p_i2c1_trb_current& (0+255),w,b
 40595  017C36  26D9               	addwf	fsr2l,f,c
 40596  017C38  5163               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 40597  017C3A  22DA               	addwfc	fsr2h,f,c
 40598  017C3C  50DF               	movf	indf2,w,c
 40599  017C3E  6F6B               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 40600  017C40                     i2l1797:
 40601                           
 40602                           ;i2c1.c: 411: else
 40603                           ;i2c1.c: 412: {
 40604                           ;i2c1.c: 414: SSP1BUF = i2c_address;
 40605  017C40  C1E6  FF91         	movff	I2C1_ISR@i2c_address,3985	;volatile
 40606                           
 40607                           ;i2c1.c: 415: if(i2c_address & 0x01)
 40608  017C44  0101               	movlb	1	; () banked
 40609  017C46  A1E6               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 40610  017C48  D004               	goto	i2l1801
 40611                           
 40612                           ; BSR set to: 1
 40613                           ;i2c1.c: 416: {
 40614                           ;i2c1.c: 418: i2c1_state = S_MASTER_ACK_ADDR;
 40615  017C4A  0E05               	movlw	5
 40616  017C4C  0102               	movlb	2	; () banked
 40617  017C4E  6F6D               	movwf	_i2c1_state& (0+255),b
 40618                           
 40619                           ;i2c1.c: 419: }
 40620  017C50  0012               	return	
 40621  017C52                     i2l1801:
 40622                           
 40623                           ;i2c1.c: 420: else
 40624                           ;i2c1.c: 421: {
 40625                           ;i2c1.c: 423: i2c1_state = S_MASTER_SEND_DATA;
 40626                           
 40627                           ; BSR set to: 2
 40628  017C52  0E03               	movlw	3
 40629  017C54  0102               	movlb	2	; () banked
 40630  017C56  6F6D               	movwf	_i2c1_state& (0+255),b
 40631                           
 40632                           ; BSR set to: 2
 40633                           ;i2c1.c: 424: }
 40634                           ;i2c1.c: 425: }
 40635                           ;i2c1.c: 426: break;
 40636                           
 40637                           ; BSR set to: 2
 40638  017C58  0012               	return	
 40639  017C5A                     i2l1803:
 40640                           
 40641                           ; BSR set to: 2
 40642                           ;i2c1.c: 431: if(SSP1CON2bits.ACKSTAT)
 40643  017C5A  AC96               	btfss	3990,6,c	;volatile
 40644  017C5C  D006               	goto	i2l1804
 40645                           
 40646                           ; BSR set to: 2
 40647                           ;i2c1.c: 432: {
 40648                           ;i2c1.c: 434: i2c1_object.i2cErrors++;
 40649  017C5E  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40650                           
 40651                           ; BSR set to: 2
 40652                           ;i2c1.c: 437: SSP1CON2bits.ACKSTAT = 0;
 40653  017C60  9C96               	bcf	3990,6,c	;volatile
 40654                           
 40655                           ; BSR set to: 2
 40656                           ;i2c1.c: 440: I2C1_Stop(I2C1_DATA_NO_ACK);
 40657  017C62  0E05               	movlw	5
 40658  017C64  EC69  F0D4         	call	_I2C1_Stop
 40659                           
 40660                           ;i2c1.c: 442: }
 40661  017C68  0012               	return	
 40662  017C6A                     i2l1804:
 40663                           
 40664                           ;i2c1.c: 443: else
 40665                           ;i2c1.c: 444: {
 40666                           ;i2c1.c: 446: if(i2c_bytes_left-- == 0U)
 40667  017C6A  0102               	movlb	2	; () banked
 40668  017C6C  076B               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40669  017C6E  296B               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 40670  017C70  A4D8               	btfss	status,2,c
 40671  017C72  D00E               	goto	i2l1806
 40672                           
 40673                           ; BSR set to: 2
 40674                           ;i2c1.c: 447: {
 40675                           ;i2c1.c: 451: p_i2c1_trb_current++;
 40676  017C74  0E05               	movlw	5
 40677  017C76  2762               	addwf	_p_i2c1_trb_current& (0+255),f,b
 40678  017C78  0E00               	movlw	0
 40679  017C7A  2363               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 40680                           
 40681                           ; BSR set to: 2
 40682                           ;i2c1.c: 454: if(--i2c1_trb_count == 0)
 40683  017C7C  2F6C               	decfsz	_i2c1_trb_count& (0+255),f,b
 40684  017C7E  D004               	goto	i2l1807
 40685                           
 40686                           ; BSR set to: 2
 40687                           ;i2c1.c: 455: {
 40688                           ;i2c1.c: 456: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40689  017C80  0E00               	movlw	0
 40690  017C82  EC69  F0D4         	call	_I2C1_Stop
 40691                           
 40692                           ;i2c1.c: 457: }
 40693  017C86  0012               	return	
 40694  017C88                     i2l1807:
 40695                           
 40696                           ; BSR set to: 2
 40697                           ;i2c1.c: 458: else
 40698                           ;i2c1.c: 459: {
 40699                           ;i2c1.c: 466: SSP1CON2bits.RSEN = 1;
 40700  017C88  8296               	bsf	3990,1,c	;volatile
 40701                           
 40702                           ; BSR set to: 2
 40703                           ;i2c1.c: 469: i2c1_state = S_MASTER_SEND_ADDR;
 40704  017C8A  0E02               	movlw	2
 40705  017C8C  6F6D               	movwf	_i2c1_state& (0+255),b
 40706                           
 40707                           ; BSR set to: 2
 40708                           ;i2c1.c: 471: }
 40709                           ;i2c1.c: 472: }
 40710  017C8E  0012               	return	
 40711  017C90                     i2l1806:
 40712                           
 40713                           ; BSR set to: 2
 40714                           ;i2c1.c: 473: else
 40715                           ;i2c1.c: 474: {
 40716                           ;i2c1.c: 476: SSP1BUF = *pi2c_buf_ptr++;
 40717                           
 40718                           ; BSR set to: 2
 40719  017C90  C25E  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 40720  017C94  C25F  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 40721  017C98  50DF               	movf	indf2,w,c
 40722  017C9A  6E91               	movwf	3985,c	;volatile
 40723                           
 40724                           ; BSR set to: 2
 40725  017C9C  4B5E               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 40726  017C9E  2B5F               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 40727                           
 40728                           ; BSR set to: 2
 40729                           ;i2c1.c: 477: }
 40730                           ;i2c1.c: 478: }
 40731                           ;i2c1.c: 479: break;
 40732                           
 40733                           ; BSR set to: 2
 40734  017CA0  0012               	return	
 40735  017CA2                     i2l1810:
 40736                           
 40737                           ; BSR set to: 2
 40738                           ;i2c1.c: 484: if(SSP1CON2bits.ACKSTAT)
 40739  017CA2  AC96               	btfss	3990,6,c	;volatile
 40740  017CA4  D006               	goto	i2l1811
 40741                           
 40742                           ; BSR set to: 2
 40743                           ;i2c1.c: 485: {
 40744                           ;i2c1.c: 488: i2c1_object.i2cErrors++;
 40745  017CA6  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40746                           
 40747                           ; BSR set to: 2
 40748                           ;i2c1.c: 491: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 40749  017CA8  0E04               	movlw	4
 40750  017CAA  EC69  F0D4         	call	_I2C1_Stop
 40751                           
 40752                           ;i2c1.c: 494: SSP1CON2bits.ACKSTAT = 0;
 40753  017CAE  9C96               	bcf	3990,6,c	;volatile
 40754                           
 40755                           ;i2c1.c: 495: }
 40756  017CB0  0012               	return	
 40757  017CB2                     i2l1811:
 40758                           
 40759                           ; BSR set to: 2
 40760                           ;i2c1.c: 496: else
 40761                           ;i2c1.c: 497: {
 40762                           ;i2c1.c: 498: SSP1CON2bits.RCEN = 1;
 40763  017CB2  8696               	bsf	3990,3,c	;volatile
 40764                           
 40765                           ; BSR set to: 2
 40766                           ;i2c1.c: 499: i2c1_state = S_MASTER_ACK_RCV_DATA;
 40767  017CB4  0E08               	movlw	8
 40768  017CB6  6F6D               	movwf	_i2c1_state& (0+255),b
 40769                           
 40770                           ; BSR set to: 2
 40771                           ;i2c1.c: 500: }
 40772                           ;i2c1.c: 501: break;
 40773  017CB8  0012               	return	
 40774  017CBA                     
 40775                           ; BSR set to: 2
 40776                           ;i2c1.c: 508: i2c1_state = S_MASTER_ACK_RCV_DATA;
 40777                           
 40778                           ; BSR set to: 2
 40779  017CBA  0E08               	movlw	8
 40780  017CBC  6F6D               	movwf	_i2c1_state& (0+255),b
 40781                           
 40782                           ; BSR set to: 2
 40783                           ;i2c1.c: 511: SSP1CON2bits.RCEN = 1;
 40784  017CBE  8696               	bsf	3990,3,c	;volatile
 40785                           
 40786                           ;i2c1.c: 513: break;
 40787  017CC0  0012               	return	
 40788  017CC2                     
 40789                           ; BSR set to: 2
 40790                           ;i2c1.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
 40791                           
 40792                           ; BSR set to: 2
 40793  017CC2  C25E  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 40794  017CC6  C25F  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 40795  017CCA  CF91 FFDF          	movff	3985,indf2	;volatile
 40796                           
 40797                           ; BSR set to: 2
 40798  017CCE  4B5E               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 40799  017CD0  2B5F               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 40800                           
 40801                           ; BSR set to: 2
 40802                           ;i2c1.c: 521: if(--i2c_bytes_left)
 40803  017CD2  0E01               	movlw	1
 40804  017CD4  5F6B               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 40805  017CD6  B4D8               	btfsc	status,2,c
 40806  017CD8  D004               	goto	i2l1815
 40807                           
 40808                           ; BSR set to: 2
 40809                           ;i2c1.c: 522: {
 40810                           ;i2c1.c: 528: SSP1CON2bits.ACKDT = 0;
 40811  017CDA  9A96               	bcf	3990,5,c	;volatile
 40812                           
 40813                           ; BSR set to: 2
 40814                           ;i2c1.c: 531: i2c1_state = S_MASTER_RCV_DATA;
 40815  017CDC  0E06               	movlw	6
 40816  017CDE  6F6D               	movwf	_i2c1_state& (0+255),b
 40817                           
 40818                           ;i2c1.c: 532: }
 40819  017CE0  D003               	goto	i2l1816
 40820  017CE2                     i2l1815:
 40821                           
 40822                           ; BSR set to: 2
 40823                           ;i2c1.c: 533: else
 40824                           ;i2c1.c: 534: {
 40825                           ;i2c1.c: 538: SSP1CON2bits.ACKDT = 1;
 40826  017CE2  8A96               	bsf	3990,5,c	;volatile
 40827                           
 40828                           ; BSR set to: 2
 40829                           ;i2c1.c: 540: I2C1_FunctionComplete();
 40830  017CE4  EC3D  F0D8         	call	_I2C1_FunctionComplete	;wreg free
 40831  017CE8                     i2l1816:
 40832                           
 40833                           ;i2c1.c: 541: }
 40834                           ;i2c1.c: 544: SSP1CON2bits.ACKEN = 1;
 40835  017CE8  8896               	bsf	3990,4,c	;volatile
 40836                           
 40837                           ;i2c1.c: 545: break;
 40838  017CEA  0012               	return	
 40839  017CEC                     
 40840                           ;i2c1.c: 548: case S_MASTER_SEND_STOP:
 40841                           ;i2c1.c: 551: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 40842  017CEC  0E00               	movlw	0
 40843  017CEE  EC69  F0D4         	call	_I2C1_Stop
 40844                           
 40845                           ;i2c1.c: 552: break;
 40846  017CF2  0012               	return	
 40847  017CF4                     
 40848                           ;i2c1.c: 558: i2c1_object.i2cErrors++;
 40849  017CF4  0102               	movlb	2	; () banked
 40850  017CF6  2B0F               	incf	(_i2c1_object+6)& (0+255),f,b
 40851                           
 40852                           ; BSR set to: 2
 40853                           ;i2c1.c: 559: I2C1_Stop(I2C1_LOST_STATE);
 40854  017CF8  0E06               	movlw	6
 40855  017CFA  EC69  F0D4         	call	_I2C1_Stop
 40856                           
 40857                           ;i2c1.c: 562: }
 40858                           
 40859                           ;i2c1.c: 560: break;
 40860  017CFE  0012               	return	
 40861  017D00                     i2l1780:
 40862  017D00  0102               	movlb	2	; () banked
 40863  017D02  516D               	movf	_i2c1_state& (0+255),w,b
 40864                           
 40865                           ; Switch size 1, requested type "space"
 40866                           ; Number of cases is 11, Range of values is 0 to 11
 40867                           ; switch strategies available:
 40868                           ; Name         Instructions Cycles
 40869                           ; simple_byte           34    18 (average)
 40870                           ;	Chosen strategy is simple_byte
 40871  017D04  0A00               	xorlw	0	; case 0
 40872  017D06  B4D8               	btfsc	status,2,c
 40873  017D08  D710               	goto	i2l1781
 40874  017D0A  0A01               	xorlw	1	; case 1
 40875  017D0C  B4D8               	btfsc	status,2,c
 40876  017D0E  D73E               	goto	i2l1786
 40877  017D10  0A03               	xorlw	3	; case 2
 40878  017D12  B4D8               	btfsc	status,2,c
 40879  017D14  D778               	goto	i2l1795
 40880  017D16  0A01               	xorlw	1	; case 3
 40881  017D18  B4D8               	btfsc	status,2,c
 40882  017D1A  D79F               	goto	i2l1803
 40883  017D1C  0A07               	xorlw	7	; case 4
 40884  017D1E  B4D8               	btfsc	status,2,c
 40885  017D20  D7E5               	goto	i2l1817
 40886  017D22  0A01               	xorlw	1	; case 5
 40887  017D24  B4D8               	btfsc	status,2,c
 40888  017D26  D7BD               	goto	i2l1810
 40889  017D28  0A03               	xorlw	3	; case 6
 40890  017D2A  B4D8               	btfsc	status,2,c
 40891  017D2C  D7C6               	goto	i2l1813
 40892  017D2E  0A01               	xorlw	1	; case 7
 40893  017D30  B4D8               	btfsc	status,2,c
 40894  017D32  D7DC               	goto	i2l1817
 40895  017D34  0A0F               	xorlw	15	; case 8
 40896  017D36  B4D8               	btfsc	status,2,c
 40897  017D38  D7C4               	goto	i2l1814
 40898  017D3A  0A02               	xorlw	2	; case 10
 40899  017D3C  B4D8               	btfsc	status,2,c
 40900  017D3E  D72A               	goto	i2l1787
 40901  017D40  0A01               	xorlw	1	; case 11
 40902  017D42  B4D8               	btfsc	status,2,c
 40903  017D44  D740               	goto	i2l1792
 40904  017D46  D7D6               	goto	i2l1819
 40905  017D48                     __end_of_I2C1_ISR:
 40906                           	opt stack 0
 40907                           tosu	equ	0xFFF
 40908                           tosh	equ	0xFFE
 40909                           tosl	equ	0xFFD
 40910                           pclatu	equ	0xFFB
 40911                           pclath	equ	0xFFA
 40912                           tblptru	equ	0xFF8
 40913                           tblptrh	equ	0xFF7
 40914                           tblptrl	equ	0xFF6
 40915                           tablat	equ	0xFF5
 40916                           prodh	equ	0xFF4
 40917                           prodl	equ	0xFF3
 40918                           intcon	equ	0xFF2
 40919                           indf0	equ	0xFEF
 40920                           postinc0	equ	0xFEE
 40921                           fsr0h	equ	0xFEA
 40922                           fsr0l	equ	0xFE9
 40923                           wreg	equ	0xFE8
 40924                           indf1	equ	0xFE7
 40925                           postdec1	equ	0xFE5
 40926                           plusw1	equ	0xFE3
 40927                           fsr1h	equ	0xFE2
 40928                           fsr1l	equ	0xFE1
 40929                           bsr	equ	0xFE0
 40930                           indf2	equ	0xFDF
 40931                           postinc2	equ	0xFDE
 40932                           postdec2	equ	0xFDD
 40933                           plusw2	equ	0xFDB
 40934                           fsr2h	equ	0xFDA
 40935                           fsr2l	equ	0xFD9
 40936                           status	equ	0xFD8
 40937                           
 40938 ;; *************** function _I2C1_Stop *****************
 40939 ;; Defined at:
 40940 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 40941 ;; Parameters:    Size  Location     Type
 40942 ;;  completion_c    1    wreg     enum E17311
 40943 ;; Auto vars:     Size  Location     Type
 40944 ;;  completion_c    1    2[COMRAM] enum E17311
 40945 ;; Return value:  Size  Location     Type
 40946 ;;                  1    wreg      void 
 40947 ;; Registers used:
 40948 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40949 ;; Tracked objects:
 40950 ;;		On entry : 0/0
 40951 ;;		On exit  : 0/0
 40952 ;;		Unchanged: 0/0
 40953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40957 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40958 ;;Total ram usage:        3 bytes
 40959 ;; Hardware stack levels used:    1
 40960 ;; This function calls:
 40961 ;;		Nothing
 40962 ;; This function is called by:
 40963 ;;		_I2C1_ISR
 40964 ;; This function uses a non-reentrant model
 40965 ;;
 40966                           
 40967                           	psect	text126
 40968  01A8D2                     __ptext126:
 40969                           	opt stack 0
 40970  01A8D2                     _I2C1_Stop:
 40971                           	opt stack 16
 40972                           
 40973                           ;incstack = 0
 40974                           ;I2C1_Stop@completion_code stored from wreg
 40975  01A8D2  6E03               	movwf	I2C1_Stop@completion_code,c
 40976                           
 40977                           ;i2c1.c: 586: SSP1CON2bits.PEN = 1;
 40978  01A8D4  8496               	bsf	3990,2,c	;volatile
 40979                           
 40980                           ;i2c1.c: 589: if (p_i2c1_current->pTrFlag != (0))
 40981  01A8D6  0102               	movlb	2	; () banked
 40982  01A8D8  EE20 F003          	lfsr	2,3
 40983  01A8DC  5160               	movf	_p_i2c1_current& (0+255),w,b
 40984  01A8DE  26D9               	addwf	fsr2l,f,c
 40985  01A8E0  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40986  01A8E2  22DA               	addwfc	fsr2h,f,c
 40987  01A8E4  50DE               	movf	postinc2,w,c
 40988  01A8E6  10DE               	iorwf	postinc2,w,c
 40989  01A8E8  B4D8               	btfsc	status,2,c
 40990  01A8EA  D010               	goto	i2l1827
 40991                           
 40992                           ; BSR set to: 2
 40993                           ;i2c1.c: 590: {
 40994                           ;i2c1.c: 592: *(p_i2c1_current->pTrFlag) = completion_code;
 40995  01A8EC  EE20 F003          	lfsr	2,3
 40996  01A8F0  5160               	movf	_p_i2c1_current& (0+255),w,b
 40997  01A8F2  26D9               	addwf	fsr2l,f,c
 40998  01A8F4  5161               	movf	(_p_i2c1_current+1)& (0+255),w,b
 40999  01A8F6  22DA               	addwfc	fsr2h,f,c
 41000  01A8F8  CFDE F001          	movff	postinc2,??_I2C1_Stop
 41001  01A8FC  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 41002  01A900  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 41003  01A904  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 41004  01A908  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 41005  01A90C                     i2l1827:
 41006                           
 41007                           ; BSR set to: 2
 41008                           ;i2c1.c: 593: }
 41009                           ;i2c1.c: 596: i2c1_state = S_MASTER_IDLE;
 41010                           
 41011                           ; BSR set to: 2
 41012  01A90C  0E00               	movlw	0
 41013  01A90E  6F6D               	movwf	_i2c1_state& (0+255),b
 41014                           
 41015                           ; BSR set to: 2
 41016  01A910  0012               	return		;funcret
 41017  01A912                     __end_of_I2C1_Stop:
 41018                           	opt stack 0
 41019                           tosu	equ	0xFFF
 41020                           tosh	equ	0xFFE
 41021                           tosl	equ	0xFFD
 41022                           pclatu	equ	0xFFB
 41023                           pclath	equ	0xFFA
 41024                           tblptru	equ	0xFF8
 41025                           tblptrh	equ	0xFF7
 41026                           tblptrl	equ	0xFF6
 41027                           tablat	equ	0xFF5
 41028                           prodh	equ	0xFF4
 41029                           prodl	equ	0xFF3
 41030                           intcon	equ	0xFF2
 41031                           indf0	equ	0xFEF
 41032                           postinc0	equ	0xFEE
 41033                           fsr0h	equ	0xFEA
 41034                           fsr0l	equ	0xFE9
 41035                           wreg	equ	0xFE8
 41036                           indf1	equ	0xFE7
 41037                           postdec1	equ	0xFE5
 41038                           plusw1	equ	0xFE3
 41039                           fsr1h	equ	0xFE2
 41040                           fsr1l	equ	0xFE1
 41041                           bsr	equ	0xFE0
 41042                           indf2	equ	0xFDF
 41043                           postinc2	equ	0xFDE
 41044                           postdec2	equ	0xFDD
 41045                           plusw2	equ	0xFDB
 41046                           fsr2h	equ	0xFDA
 41047                           fsr2l	equ	0xFD9
 41048                           status	equ	0xFD8
 41049                           
 41050 ;; *************** function _I2C1_FunctionComplete *****************
 41051 ;; Defined at:
 41052 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 41053 ;; Parameters:    Size  Location     Type
 41054 ;;		None
 41055 ;; Auto vars:     Size  Location     Type
 41056 ;;		None
 41057 ;; Return value:  Size  Location     Type
 41058 ;;                  1    wreg      void 
 41059 ;; Registers used:
 41060 ;;		wreg, status,2, status,0
 41061 ;; Tracked objects:
 41062 ;;		On entry : 0/0
 41063 ;;		On exit  : 0/0
 41064 ;;		Unchanged: 0/0
 41065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41070 ;;Total ram usage:        0 bytes
 41071 ;; Hardware stack levels used:    1
 41072 ;; This function calls:
 41073 ;;		Nothing
 41074 ;; This function is called by:
 41075 ;;		_I2C1_ISR
 41076 ;; This function uses a non-reentrant model
 41077 ;;
 41078                           
 41079                           	psect	text127
 41080  01B07A                     __ptext127:
 41081                           	opt stack 0
 41082  01B07A                     _I2C1_FunctionComplete:
 41083                           	opt stack 16
 41084                           
 41085                           ;i2c1.c: 569: p_i2c1_trb_current++;
 41086                           
 41087                           ; BSR set to: 2
 41088                           ;incstack = 0
 41089  01B07A  0E05               	movlw	5
 41090  01B07C  0102               	movlb	2	; () banked
 41091  01B07E  2762               	addwf	_p_i2c1_trb_current& (0+255),f,b
 41092  01B080  0E00               	movlw	0
 41093  01B082  2363               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 41094                           
 41095                           ; BSR set to: 2
 41096                           ;i2c1.c: 572: if(--i2c1_trb_count == 0)
 41097  01B084  2F6C               	decfsz	_i2c1_trb_count& (0+255),f,b
 41098  01B086  D003               	goto	i2l1822
 41099                           
 41100                           ; BSR set to: 2
 41101                           ;i2c1.c: 573: {
 41102                           ;i2c1.c: 574: i2c1_state = S_MASTER_SEND_STOP;
 41103  01B088  0E04               	movlw	4
 41104  01B08A  6F6D               	movwf	_i2c1_state& (0+255),b
 41105                           
 41106                           ;i2c1.c: 575: }
 41107  01B08C  0012               	return	
 41108  01B08E                     i2l1822:
 41109                           
 41110                           ; BSR set to: 2
 41111                           ;i2c1.c: 576: else
 41112                           ;i2c1.c: 577: {
 41113                           ;i2c1.c: 578: i2c1_state = S_MASTER_RESTART;
 41114                           
 41115                           ; BSR set to: 2
 41116  01B08E  0E01               	movlw	1
 41117  01B090  6F6D               	movwf	_i2c1_state& (0+255),b
 41118  01B092  0012               	return	
 41119  01B094                     __end_of_I2C1_FunctionComplete:
 41120                           	opt stack 0
 41121                           tosu	equ	0xFFF
 41122                           tosh	equ	0xFFE
 41123                           tosl	equ	0xFFD
 41124                           pclatu	equ	0xFFB
 41125                           pclath	equ	0xFFA
 41126                           tblptru	equ	0xFF8
 41127                           tblptrh	equ	0xFF7
 41128                           tblptrl	equ	0xFF6
 41129                           tablat	equ	0xFF5
 41130                           prodh	equ	0xFF4
 41131                           prodl	equ	0xFF3
 41132                           intcon	equ	0xFF2
 41133                           indf0	equ	0xFEF
 41134                           postinc0	equ	0xFEE
 41135                           fsr0h	equ	0xFEA
 41136                           fsr0l	equ	0xFE9
 41137                           wreg	equ	0xFE8
 41138                           indf1	equ	0xFE7
 41139                           postdec1	equ	0xFE5
 41140                           plusw1	equ	0xFE3
 41141                           fsr1h	equ	0xFE2
 41142                           fsr1l	equ	0xFE1
 41143                           bsr	equ	0xFE0
 41144                           indf2	equ	0xFDF
 41145                           postinc2	equ	0xFDE
 41146                           postdec2	equ	0xFDD
 41147                           plusw2	equ	0xFDB
 41148                           fsr2h	equ	0xFDA
 41149                           fsr2l	equ	0xFD9
 41150                           status	equ	0xFD8
 41151                           
 41152 ;; *************** function _I2C1_BusCollisionISR *****************
 41153 ;; Defined at:
 41154 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 41155 ;; Parameters:    Size  Location     Type
 41156 ;;		None
 41157 ;; Auto vars:     Size  Location     Type
 41158 ;;		None
 41159 ;; Return value:  Size  Location     Type
 41160 ;;                  1    wreg      void 
 41161 ;; Registers used:
 41162 ;;		None
 41163 ;; Tracked objects:
 41164 ;;		On entry : 0/0
 41165 ;;		On exit  : 0/0
 41166 ;;		Unchanged: 0/0
 41167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41172 ;;Total ram usage:        0 bytes
 41173 ;; Hardware stack levels used:    1
 41174 ;; This function calls:
 41175 ;;		Nothing
 41176 ;; This function is called by:
 41177 ;;		_INTERRUPT_InterruptManagerHigh
 41178 ;; This function uses a non-reentrant model
 41179 ;;
 41180                           
 41181                           	psect	text128
 41182  01B270                     __ptext128:
 41183                           	opt stack 0
 41184  01B270                     _I2C1_BusCollisionISR:
 41185                           	opt stack 17
 41186                           
 41187                           ;i2c1.c: 745: PIR3bits.BCL1IF = 0;
 41188                           
 41189                           ; BSR set to: 2
 41190                           ;incstack = 0
 41191  01B270  010E               	movlb	14	; () banked
 41192  01B272  9336               	bcf	54,1,b	;volatile
 41193                           
 41194                           ; BSR set to: 14
 41195  01B274  0012               	return		;funcret
 41196  01B276                     __end_of_I2C1_BusCollisionISR:
 41197                           	opt stack 0
 41198                           tosu	equ	0xFFF
 41199                           tosh	equ	0xFFE
 41200                           tosl	equ	0xFFD
 41201                           pclatu	equ	0xFFB
 41202                           pclath	equ	0xFFA
 41203                           tblptru	equ	0xFF8
 41204                           tblptrh	equ	0xFF7
 41205                           tblptrl	equ	0xFF6
 41206                           tablat	equ	0xFF5
 41207                           prodh	equ	0xFF4
 41208                           prodl	equ	0xFF3
 41209                           intcon	equ	0xFF2
 41210                           indf0	equ	0xFEF
 41211                           postinc0	equ	0xFEE
 41212                           fsr0h	equ	0xFEA
 41213                           fsr0l	equ	0xFE9
 41214                           wreg	equ	0xFE8
 41215                           indf1	equ	0xFE7
 41216                           postdec1	equ	0xFE5
 41217                           plusw1	equ	0xFE3
 41218                           fsr1h	equ	0xFE2
 41219                           fsr1l	equ	0xFE1
 41220                           bsr	equ	0xFE0
 41221                           indf2	equ	0xFDF
 41222                           postinc2	equ	0xFDE
 41223                           postdec2	equ	0xFDD
 41224                           plusw2	equ	0xFDB
 41225                           fsr2h	equ	0xFDA
 41226                           fsr2l	equ	0xFD9
 41227                           status	equ	0xFD8
 41228                           
 41229 ;; *************** function _HLVD_ISR *****************
 41230 ;; Defined at:
 41231 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 41232 ;; Parameters:    Size  Location     Type
 41233 ;;		None
 41234 ;; Auto vars:     Size  Location     Type
 41235 ;;		None
 41236 ;; Return value:  Size  Location     Type
 41237 ;;                  1    wreg      void 
 41238 ;; Registers used:
 41239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41240 ;; Tracked objects:
 41241 ;;		On entry : 0/0
 41242 ;;		On exit  : 0/0
 41243 ;;		Unchanged: 0/0
 41244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41249 ;;Total ram usage:        0 bytes
 41250 ;; Hardware stack levels used:    1
 41251 ;; Hardware stack levels required when called:    2
 41252 ;; This function calls:
 41253 ;;		i2_writeDoubleToEEPROM
 41254 ;; This function is called by:
 41255 ;;		_INTERRUPT_InterruptManagerHigh
 41256 ;; This function uses a non-reentrant model
 41257 ;;
 41258                           
 41259                           	psect	text129
 41260  01AB28                     __ptext129:
 41261                           	opt stack 0
 41262  01AB28                     _HLVD_ISR:
 41263                           	opt stack 15
 41264                           
 41265                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 41266                           
 41267                           ; BSR set to: 14
 41268                           ;incstack = 0
 41269  01AB28  010E               	movlb	14	; () banked
 41270  01AB2A  9F35               	bcf	53,7,b	;volatile
 41271                           
 41272                           ;hlvd.c: 127: SBOREN = 0;
 41273  01AB2C  9F4B               	bcf	75,7,b	;volatile
 41274                           
 41275                           ; BSR set to: 14
 41276                           ;hlvd.c: 130: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 41277  01AB2E  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 41278  01AB32  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 41279  01AB36  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 41280  01AB3A  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 41281  01AB3E  0E5F               	movlw	low _Total_Energy_address
 41282  01AB40  6EF6               	movwf	tblptrl,c
 41283  01AB42                     	if	1	;There is more than 1 active tblptr byte
 41284  01AB42  0ECF               	movlw	high _Total_Energy_address
 41285  01AB44  6EF7               	movwf	tblptrh,c
 41286  01AB46                     	endif
 41287  01AB46                     	if	1	;There are 3 active tblptr bytes
 41288  01AB46  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 41289  01AB48  6EF8               	movwf	tblptru,c
 41290  01AB4A                     	endif
 41291  01AB4A  0009               	tblrd		*+
 41292  01AB4C  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 41293  01AB50  000A               	tblrd		*-
 41294  01AB52  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 41295  01AB56  EC0A  F0D3         	call	i2_writeDoubleToEEPROM	;wreg free
 41296                           
 41297                           ;hlvd.c: 133: SBOREN = 1;
 41298  01AB5A  010E               	movlb	14	; () banked
 41299  01AB5C  8F4B               	bsf	75,7,b	;volatile
 41300                           
 41301                           ; BSR set to: 14
 41302  01AB5E  0012               	return		;funcret
 41303  01AB60                     __end_of_HLVD_ISR:
 41304                           	opt stack 0
 41305                           tosu	equ	0xFFF
 41306                           tosh	equ	0xFFE
 41307                           tosl	equ	0xFFD
 41308                           pclatu	equ	0xFFB
 41309                           pclath	equ	0xFFA
 41310                           tblptru	equ	0xFF8
 41311                           tblptrh	equ	0xFF7
 41312                           tblptrl	equ	0xFF6
 41313                           tablat	equ	0xFF5
 41314                           prodh	equ	0xFF4
 41315                           prodl	equ	0xFF3
 41316                           intcon	equ	0xFF2
 41317                           indf0	equ	0xFEF
 41318                           postinc0	equ	0xFEE
 41319                           fsr0h	equ	0xFEA
 41320                           fsr0l	equ	0xFE9
 41321                           wreg	equ	0xFE8
 41322                           indf1	equ	0xFE7
 41323                           postdec1	equ	0xFE5
 41324                           plusw1	equ	0xFE3
 41325                           fsr1h	equ	0xFE2
 41326                           fsr1l	equ	0xFE1
 41327                           bsr	equ	0xFE0
 41328                           indf2	equ	0xFDF
 41329                           postinc2	equ	0xFDE
 41330                           postdec2	equ	0xFDD
 41331                           plusw2	equ	0xFDB
 41332                           fsr2h	equ	0xFDA
 41333                           fsr2l	equ	0xFD9
 41334                           status	equ	0xFD8
 41335                           
 41336 ;; *************** function i2_writeDoubleToEEPROM *****************
 41337 ;; Defined at:
 41338 ;;		line 6 in file "double_to_EEPROM.c"
 41339 ;; Parameters:    Size  Location     Type
 41340 ;;  input_double    4    4[COMRAM] void 
 41341 ;;  starting_add    2    8[COMRAM] unsigned int 
 41342 ;; Auto vars:     Size  Location     Type
 41343 ;;  writeDoubleT    4   10[COMRAM] struct .
 41344 ;;  writeDoubleT    2   14[COMRAM] int 
 41345 ;; Return value:  Size  Location     Type
 41346 ;;                  1    wreg      void 
 41347 ;; Registers used:
 41348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41349 ;; Tracked objects:
 41350 ;;		On entry : 0/0
 41351 ;;		On exit  : 0/0
 41352 ;;		Unchanged: 0/0
 41353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41354 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41355 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41357 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41358 ;;Total ram usage:       12 bytes
 41359 ;; Hardware stack levels used:    1
 41360 ;; Hardware stack levels required when called:    1
 41361 ;; This function calls:
 41362 ;;		i2_DATAEE_WriteByte
 41363 ;; This function is called by:
 41364 ;;		_HLVD_ISR
 41365 ;;		_writeEnergyToEEPROMCallback
 41366 ;; This function uses a non-reentrant model
 41367 ;;
 41368                           
 41369                           	psect	text130
 41370  01A614                     __ptext130:
 41371                           	opt stack 0
 41372  01A614                     i2_writeDoubleToEEPROM:
 41373                           	opt stack 13
 41374                           
 41375                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 41376                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 41377                           
 41378                           ; BSR set to: 14
 41379                           ;incstack = 0
 41380  01A614  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 41381  01A618  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 41382  01A61C  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 41383  01A620  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 41384                           
 41385                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 41386  01A624  0E00               	movlw	0
 41387  01A626  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 41388  01A628  0E00               	movlw	0
 41389  01A62A  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 41390  01A62C                     i2l11011:
 41391  01A62C  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 41392  01A62E  E117               	bnz	i2l1642
 41393  01A630  0E04               	movlw	4
 41394  01A632  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 41395  01A634  B0D8               	btfsc	status,0,c
 41396  01A636  0012               	return	
 41397                           
 41398                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 41399  01A638  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 41400  01A63A  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 41401  01A63C  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 41402  01A63E  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 41403  01A640  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 41404  01A642  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 41405  01A644  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 41406  01A646  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 41407  01A648  6ED9               	movwf	fsr2l,c
 41408  01A64A  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 41409  01A64C  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 41410  01A64E  6EDA               	movwf	fsr2h,c
 41411  01A650  50DF               	movf	indf2,w,c
 41412  01A652  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 41413  01A654  EC5B  F0D5         	call	i2_DATAEE_WriteByte	;wreg free
 41414  01A658  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 41415  01A65A  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 41416  01A65C  D7E7               	goto	i2l11011
 41417  01A65E                     i2l1642:
 41418  01A65E  0012               	return		;funcret
 41419  01A660                     __end_ofi2_writeDoubleToEEPROM:
 41420                           	opt stack 0
 41421                           tosu	equ	0xFFF
 41422                           tosh	equ	0xFFE
 41423                           tosl	equ	0xFFD
 41424                           pclatu	equ	0xFFB
 41425                           pclath	equ	0xFFA
 41426                           tblptru	equ	0xFF8
 41427                           tblptrh	equ	0xFF7
 41428                           tblptrl	equ	0xFF6
 41429                           tablat	equ	0xFF5
 41430                           prodh	equ	0xFF4
 41431                           prodl	equ	0xFF3
 41432                           intcon	equ	0xFF2
 41433                           indf0	equ	0xFEF
 41434                           postinc0	equ	0xFEE
 41435                           fsr0h	equ	0xFEA
 41436                           fsr0l	equ	0xFE9
 41437                           wreg	equ	0xFE8
 41438                           indf1	equ	0xFE7
 41439                           postdec1	equ	0xFE5
 41440                           plusw1	equ	0xFE3
 41441                           fsr1h	equ	0xFE2
 41442                           fsr1l	equ	0xFE1
 41443                           bsr	equ	0xFE0
 41444                           indf2	equ	0xFDF
 41445                           postinc2	equ	0xFDE
 41446                           postdec2	equ	0xFDD
 41447                           plusw2	equ	0xFDB
 41448                           fsr2h	equ	0xFDA
 41449                           fsr2l	equ	0xFD9
 41450                           status	equ	0xFD8
 41451                           
 41452 ;; *************** function i2_DATAEE_WriteByte *****************
 41453 ;; Defined at:
 41454 ;;		line 168 in file "mcc_generated_files/memory.c"
 41455 ;; Parameters:    Size  Location     Type
 41456 ;;  bAdd            2    0[COMRAM] unsigned int 
 41457 ;;  bData           1    2[COMRAM] unsigned char 
 41458 ;; Auto vars:     Size  Location     Type
 41459 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 41460 ;; Return value:  Size  Location     Type
 41461 ;;                  1    wreg      void 
 41462 ;; Registers used:
 41463 ;;		wreg, status,2, status,0
 41464 ;; Tracked objects:
 41465 ;;		On entry : 0/0
 41466 ;;		On exit  : 0/0
 41467 ;;		Unchanged: 0/0
 41468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41469 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41473 ;;Total ram usage:        4 bytes
 41474 ;; Hardware stack levels used:    1
 41475 ;; This function calls:
 41476 ;;		Nothing
 41477 ;; This function is called by:
 41478 ;;		i2_writeDoubleToEEPROM
 41479 ;; This function uses a non-reentrant model
 41480 ;;
 41481                           
 41482                           	psect	text131
 41483  01AAB6                     __ptext131:
 41484                           	opt stack 0
 41485  01AAB6                     i2_DATAEE_WriteByte:
 41486                           	opt stack 13
 41487                           
 41488                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 41489                           
 41490                           ;incstack = 0
 41491  01AAB6  0E00               	movlw	0
 41492  01AAB8  BEF2               	btfsc	intcon,7,c	;volatile
 41493  01AABA  0E01               	movlw	1
 41494  01AABC  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 41495                           
 41496                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 41497  01AABE  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 41498  01AAC0  0B03               	andlw	3
 41499  01AAC2  6E75               	movwf	3957,c	;volatile
 41500                           
 41501                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 41502  01AAC4  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 41503                           
 41504                           ;memory.c: 174: NVMDAT = bData;
 41505  01AAC8  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 41506                           
 41507                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 41508  01AACC  0E3F               	movlw	-193
 41509  01AACE  1677               	andwf	3959,f,c	;volsfr
 41510                           
 41511                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 41512  01AAD0  8477               	bsf	3959,2,c	;volsfr
 41513                           
 41514                           ;memory.c: 177: INTCONbits.GIE = 0;
 41515  01AAD2  9EF2               	bcf	intcon,7,c	;volatile
 41516                           
 41517                           ;memory.c: 178: NVMCON2 = 0x55;
 41518  01AAD4  0E55               	movlw	85
 41519  01AAD6  6E78               	movwf	3960,c	;volsfr
 41520                           
 41521                           ;memory.c: 179: NVMCON2 = 0xAA;
 41522  01AAD8  0EAA               	movlw	170
 41523  01AADA  6E78               	movwf	3960,c	;volsfr
 41524                           
 41525                           ;memory.c: 180: NVMCON1bits.WR = 1;
 41526  01AADC  8277               	bsf	3959,1,c	;volsfr
 41527  01AADE                     
 41528                           ;memory.c: 183: {
 41529  01AADE  B277               	btfsc	3959,1,c	;volsfr
 41530  01AAE0  D7FE               	goto	i2l837
 41531                           
 41532                           ;memory.c: 184: }
 41533                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 41534  01AAE2  9477               	bcf	3959,2,c	;volsfr
 41535                           
 41536                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 41537  01AAE4  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 41538  01AAE6  D002               	bra	i2u1219_45
 41539  01AAE8  9EF2               	bcf	intcon,7,c	;volatile
 41540  01AAEA  D001               	bra	i2u1219_46
 41541  01AAEC                     i2u1219_45:
 41542  01AAEC  8EF2               	bsf	intcon,7,c	;volatile
 41543  01AAEE                     i2u1219_46:
 41544  01AAEE  0012               	return		;funcret
 41545  01AAF0                     __end_ofi2_DATAEE_WriteByte:
 41546                           	opt stack 0
 41547                           tosu	equ	0xFFF
 41548                           tosh	equ	0xFFE
 41549                           tosl	equ	0xFFD
 41550                           pclatu	equ	0xFFB
 41551                           pclath	equ	0xFFA
 41552                           tblptru	equ	0xFF8
 41553                           tblptrh	equ	0xFF7
 41554                           tblptrl	equ	0xFF6
 41555                           tablat	equ	0xFF5
 41556                           prodh	equ	0xFF4
 41557                           prodl	equ	0xFF3
 41558                           intcon	equ	0xFF2
 41559                           indf0	equ	0xFEF
 41560                           postinc0	equ	0xFEE
 41561                           fsr0h	equ	0xFEA
 41562                           fsr0l	equ	0xFE9
 41563                           wreg	equ	0xFE8
 41564                           indf1	equ	0xFE7
 41565                           postdec1	equ	0xFE5
 41566                           plusw1	equ	0xFE3
 41567                           fsr1h	equ	0xFE2
 41568                           fsr1l	equ	0xFE1
 41569                           bsr	equ	0xFE0
 41570                           indf2	equ	0xFDF
 41571                           postinc2	equ	0xFDE
 41572                           postdec2	equ	0xFDD
 41573                           plusw2	equ	0xFDB
 41574                           fsr2h	equ	0xFDA
 41575                           fsr2l	equ	0xFD9
 41576                           status	equ	0xFD8
 41577                           
 41578 ;; *************** function _EUSART2_Receive_ISR *****************
 41579 ;; Defined at:
 41580 ;;		line 209 in file "mcc_generated_files/eusart2.c"
 41581 ;; Parameters:    Size  Location     Type
 41582 ;;		None
 41583 ;; Auto vars:     Size  Location     Type
 41584 ;;		None
 41585 ;; Return value:  Size  Location     Type
 41586 ;;                  1    wreg      void 
 41587 ;; Registers used:
 41588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41589 ;; Tracked objects:
 41590 ;;		On entry : 0/0
 41591 ;;		On exit  : 0/0
 41592 ;;		Unchanged: 0/0
 41593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41598 ;;Total ram usage:        0 bytes
 41599 ;; Hardware stack levels used:    1
 41600 ;; Hardware stack levels required when called:    4
 41601 ;; This function calls:
 41602 ;;		i2_printf
 41603 ;; This function is called by:
 41604 ;;		_EUSART2_Initialize
 41605 ;;		_INTERRUPT_InterruptManagerHigh
 41606 ;; This function uses a non-reentrant model
 41607 ;;
 41608                           
 41609                           	psect	text132
 41610  019560                     __ptext132:
 41611                           	opt stack 0
 41612  019560                     _EUSART2_Receive_ISR:
 41613                           	opt stack 13
 41614                           
 41615                           ;eusart2.c: 212: if(1 == RC2STAbits.OERR)
 41616                           
 41617                           ;incstack = 0
 41618  019560  010E               	movlb	14	; () banked
 41619  019562  A3F5               	btfss	245,1,b	;volatile
 41620  019564  D005               	goto	i2l451
 41621                           
 41622                           ; BSR set to: 14
 41623                           ;eusart2.c: 213: {
 41624                           ;eusart2.c: 216: RC2STAbits.CREN = 0;
 41625  019566  99F5               	bcf	245,4,b	;volatile
 41626                           
 41627                           ;eusart2.c: 217: RC2STAbits.CREN = 1;
 41628  019568  89F5               	bsf	245,4,b	;volatile
 41629                           
 41630                           ; BSR set to: 14
 41631                           ;eusart2.c: 218: error_handler.USB_UART_COMM_error_flag = 1;
 41632  01956A  0E01               	movlw	1
 41633  01956C  0102               	movlb	2	; () banked
 41634  01956E  6F08               	movwf	(_error_handler+8)& (0+255),b
 41635  019570                     i2l451:
 41636                           
 41637                           ;eusart2.c: 219: }
 41638                           ;eusart2.c: 222: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 41639                           
 41640                           ; BSR set to: 2
 41641  019570  0100               	movlb	0	; () banked
 41642  019572  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41643  019574  0D01               	mullw	1
 41644  019576  0E00               	movlw	low _eusart2RxBuffer
 41645  019578  24F3               	addwf	prodl,w,c
 41646  01957A  6ED9               	movwf	fsr2l,c
 41647  01957C  0E03               	movlw	high _eusart2RxBuffer
 41648  01957E  20F4               	addwfc	prodh,w,c
 41649  019580  6EDA               	movwf	fsr2h,c
 41650  019582  CEF1 FFDF          	movff	3825,indf2	;volatile
 41651                           
 41652                           ; BSR set to: 0
 41653  019586  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 41654                           
 41655                           ; BSR set to: 0
 41656                           ;eusart2.c: 223: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 41657  019588  0E3F               	movlw	63
 41658  01958A  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 41659  01958C  D002               	goto	i2l452
 41660                           
 41661                           ; BSR set to: 0
 41662                           ;eusart2.c: 224: {
 41663                           ;eusart2.c: 225: eusart2RxHead = 0;
 41664  01958E  0E00               	movlw	0
 41665  019590  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 41666  019592                     i2l452:
 41667                           
 41668                           ; BSR set to: 0
 41669                           ;eusart2.c: 226: }
 41670                           ;eusart2.c: 227: eusart2RxCount++;
 41671                           
 41672                           ; BSR set to: 0
 41673  019592  0102               	movlb	2	; () banked
 41674  019594  2B72               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 41675                           
 41676                           ; BSR set to: 2
 41677                           ;eusart2.c: 233: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 41678  019596  0E0A               	movlw	10
 41679  019598  010E               	movlb	14	; () banked
 41680  01959A  19F1               	xorwf	241,w,b	;volatile
 41681  01959C  B4D8               	btfsc	status,2,c
 41682  01959E  D004               	goto	i2u3418_40
 41683                           
 41684                           ; BSR set to: 14
 41685  0195A0  0E0D               	movlw	13
 41686  0195A2  19F1               	xorwf	241,w,b	;volatile
 41687  0195A4  A4D8               	btfss	status,2,c
 41688  0195A6  D006               	goto	i2l453
 41689  0195A8                     i2u3418_40:
 41690                           
 41691                           ; BSR set to: 14
 41692                           ;eusart2.c: 235: eusart2RxStringReady = 1;
 41693  0195A8  0100               	movlb	0	; () banked
 41694  0195AA  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 41695                           
 41696                           ; BSR set to: 0
 41697                           ;eusart2.c: 238: RC2REG = 0;
 41698  0195AC  0E00               	movlw	0
 41699  0195AE  010E               	movlb	14	; () banked
 41700  0195B0  6FF1               	movwf	241,b	;volatile
 41701                           
 41702                           ;eusart2.c: 240: }
 41703  0195B2  D002               	goto	i2l456
 41704  0195B4                     i2l453:
 41705                           
 41706                           ; BSR set to: 14
 41707                           ;eusart2.c: 242: else {
 41708                           ;eusart2.c: 244: eusart2RxStringReady = 0;
 41709  0195B4  0100               	movlb	0	; () banked
 41710  0195B6  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 41711  0195B8                     i2l456:
 41712                           
 41713                           ;eusart2.c: 246: }
 41714                           ;eusart2.c: 249: if((RC2REG == (int) '\b')) {
 41715                           
 41716                           ; BSR set to: 0
 41717  0195B8  0E08               	movlw	8
 41718  0195BA  010E               	movlb	14	; () banked
 41719  0195BC  19F1               	xorwf	241,w,b	;volatile
 41720  0195BE  A4D8               	btfss	status,2,c
 41721  0195C0  0012               	return	
 41722                           
 41723                           ; BSR set to: 14
 41724                           ;eusart2.c: 251: eusart2RxBuffer[eusart2RxHead] = '\0';
 41725  0195C2  0100               	movlb	0	; () banked
 41726  0195C4  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41727  0195C6  0D01               	mullw	1
 41728  0195C8  0E00               	movlw	low _eusart2RxBuffer
 41729  0195CA  24F3               	addwf	prodl,w,c
 41730  0195CC  6ED9               	movwf	fsr2l,c
 41731  0195CE  0E03               	movlw	high _eusart2RxBuffer
 41732  0195D0  20F4               	addwfc	prodh,w,c
 41733  0195D2  6EDA               	movwf	fsr2h,c
 41734  0195D4  0E00               	movlw	0
 41735  0195D6  6EDF               	movwf	indf2,c
 41736                           
 41737                           ; BSR set to: 0
 41738                           ;eusart2.c: 252: eusart2RxHead--;
 41739  0195D8  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 41740                           
 41741                           ; BSR set to: 0
 41742                           ;eusart2.c: 255: printf("\033[K");
 41743  0195DA  0EC7               	movlw	low STR_1
 41744  0195DC  6FB2               	movwf	i2printf@f& (0+255),b
 41745  0195DE  0EFF               	movlw	high STR_1
 41746  0195E0  6FB3               	movwf	(i2printf@f+1)& (0+255),b
 41747  0195E2  EC02  F0D5         	call	i2_printf	;wreg free
 41748                           
 41749                           ;eusart2.c: 257: if(eusart2RxHead != eusart2RxTail) {
 41750  0195E6  0101               	movlb	1	; () banked
 41751  0195E8  51DE               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 41752  0195EA  0100               	movlb	0	; () banked
 41753  0195EC  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 41754  0195EE  B4D8               	btfsc	status,2,c
 41755  0195F0  D00B               	goto	i2l458
 41756                           
 41757                           ; BSR set to: 0
 41758                           ;eusart2.c: 259: eusart2RxBuffer[eusart2RxHead] = '\0';
 41759  0195F2  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 41760  0195F4  0D01               	mullw	1
 41761  0195F6  0E00               	movlw	low _eusart2RxBuffer
 41762  0195F8  24F3               	addwf	prodl,w,c
 41763  0195FA  6ED9               	movwf	fsr2l,c
 41764  0195FC  0E03               	movlw	high _eusart2RxBuffer
 41765  0195FE  20F4               	addwfc	prodh,w,c
 41766  019600  6EDA               	movwf	fsr2h,c
 41767  019602  0E00               	movlw	0
 41768  019604  6EDF               	movwf	indf2,c
 41769                           
 41770                           ; BSR set to: 0
 41771                           ;eusart2.c: 260: eusart2RxHead--;
 41772  019606  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 41773  019608                     i2l458:
 41774                           
 41775                           ; BSR set to: 0
 41776                           ;eusart2.c: 262: }
 41777                           ;eusart2.c: 264: RC2REG = 0;
 41778                           
 41779                           ; BSR set to: 0
 41780  019608  0E00               	movlw	0
 41781  01960A  010E               	movlb	14	; () banked
 41782  01960C  6FF1               	movwf	241,b	;volatile
 41783  01960E  0012               	return	
 41784  019610                     __end_of_EUSART2_Receive_ISR:
 41785                           	opt stack 0
 41786                           tosu	equ	0xFFF
 41787                           tosh	equ	0xFFE
 41788                           tosl	equ	0xFFD
 41789                           pclatu	equ	0xFFB
 41790                           pclath	equ	0xFFA
 41791                           tblptru	equ	0xFF8
 41792                           tblptrh	equ	0xFF7
 41793                           tblptrl	equ	0xFF6
 41794                           tablat	equ	0xFF5
 41795                           prodh	equ	0xFF4
 41796                           prodl	equ	0xFF3
 41797                           intcon	equ	0xFF2
 41798                           indf0	equ	0xFEF
 41799                           postinc0	equ	0xFEE
 41800                           fsr0h	equ	0xFEA
 41801                           fsr0l	equ	0xFE9
 41802                           wreg	equ	0xFE8
 41803                           indf1	equ	0xFE7
 41804                           postdec1	equ	0xFE5
 41805                           plusw1	equ	0xFE3
 41806                           fsr1h	equ	0xFE2
 41807                           fsr1l	equ	0xFE1
 41808                           bsr	equ	0xFE0
 41809                           indf2	equ	0xFDF
 41810                           postinc2	equ	0xFDE
 41811                           postdec2	equ	0xFDD
 41812                           plusw2	equ	0xFDB
 41813                           fsr2h	equ	0xFDA
 41814                           fsr2l	equ	0xFD9
 41815                           status	equ	0xFD8
 41816                           
 41817 ;; *************** function i2_printf *****************
 41818 ;; Defined at:
 41819 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 41820 ;; Parameters:    Size  Location     Type
 41821 ;;  f               2   82[BANK0 ] PTR const unsigned char 
 41822 ;;		 -> STR_175(13), STR_174(31), STR_173(26), STR_172(28), 
 41823 ;;		 -> STR_171(426), STR_169(30), STR_168(46), STR_167(39), 
 41824 ;;		 -> STR_166(62), STR_165(55), STR_164(470), STR_162(3086), 
 41825 ;;		 -> STR_160(492), STR_158(748), STR_156(720), STR_154(974), 
 41826 ;;		 -> STR_152(54), STR_150(54), STR_148(45), STR_146(51), 
 41827 ;;		 -> STR_144(52), STR_142(46), STR_140(51), STR_138(53), 
 41828 ;;		 -> STR_136(58), STR_134(71), STR_133(63), STR_132(37), 
 41829 ;;		 -> STR_131(46), STR_130(102), STR_129(86), STR_127(25), 
 41830 ;;		 -> STR_125(42), STR_124(53), STR_123(31), STR_121(29), 
 41831 ;;		 -> STR_120(28), STR_118(42), STR_116(41), STR_114(34), 
 41832 ;;		 -> STR_112(53), STR_111(52), STR_110(105), STR_109(105), 
 41833 ;;		 -> STR_107(59), STR_105(73), STR_103(56), STR_101(34), 
 41834 ;;		 -> STR_99(34), STR_97(32), STR_95(37), STR_93(58), 
 41835 ;;		 -> STR_91(36), STR_89(36), STR_87(37), STR_85(34), 
 41836 ;;		 -> STR_83(38), STR_82(60), STR_81(31), STR_80(23), 
 41837 ;;		 -> STR_79(65), STR_77(23), STR_75(27), STR_74(48), 
 41838 ;;		 -> STR_73(15), STR_72(13), STR_71(12), STR_70(11), 
 41839 ;;		 -> STR_69(10), STR_68(11), STR_67(24), STR_66(46), 
 41840 ;;		 -> STR_65(25), STR_63(54), STR_62(64), STR_60(59), 
 41841 ;;		 -> STR_58(85), STR_56(47), STR_55(17), STR_52(52), 
 41842 ;;		 -> STR_50(4), STR_49(5), STR_47(4), STR_46(5), 
 41843 ;;		 -> STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), STR_13(4), 
 41844 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(3), 
 41845 ;;		 -> STR_8(372), STR_7(4), STR_6(5), STR_1(4), 
 41846 ;; Auto vars:     Size  Location     Type
 41847 ;;  printf          5   86[BANK0 ] struct __prbuf
 41848 ;;  printf          2   84[BANK0 ] PTR void [1]
 41849 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 41850 ;; Return value:  Size  Location     Type
 41851 ;;                  2   82[BANK0 ] int 
 41852 ;; Registers used:
 41853 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41854 ;; Tracked objects:
 41855 ;;		On entry : 0/0
 41856 ;;		On exit  : 0/0
 41857 ;;		Unchanged: 0/0
 41858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41860 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41862 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41863 ;;Total ram usage:        9 bytes
 41864 ;; Hardware stack levels used:    1
 41865 ;; Hardware stack levels required when called:    3
 41866 ;; This function calls:
 41867 ;;		i2__doprnt
 41868 ;; This function is called by:
 41869 ;;		_EUSART2_Receive_ISR
 41870 ;; This function uses a non-reentrant model
 41871 ;;
 41872                           
 41873                           	psect	text133
 41874  01AA04                     __ptext133:
 41875                           	opt stack 0
 41876  01AA04                     i2_printf:
 41877                           	opt stack 13
 41878                           
 41879                           ; BSR set to: 14
 41880                           ;incstack = 0
 41881  01AA04  0E00               	movlw	0
 41882  01AA06  0100               	movlb	0	; () banked
 41883  01AA08  6FB6               	movwf	i2printf@pb& (0+255),b
 41884  01AA0A  0E00               	movlw	0
 41885  01AA0C  6FB7               	movwf	(i2printf@pb+1)& (0+255),b
 41886  01AA0E  0E4A               	movlw	low i2_putch
 41887  01AA10  6FB8               	movwf	(i2printf@pb+2)& (0+255),b
 41888  01AA12  0EB2               	movlw	high i2_putch
 41889  01AA14  6FB9               	movwf	(i2printf@pb+3)& (0+255),b
 41890  01AA16  0E01               	movlw	low (i2_putch shr (0+16))
 41891  01AA18  6FBA               	movwf	(i2printf@pb+4)& (0+255),b
 41892  01AA1A  0EB4               	movlw	low (?i2_printf+2)
 41893  01AA1C  6FB4               	movwf	i2printf@ap& (0+255),b
 41894  01AA1E  0E00               	movlw	high (?i2_printf+2)
 41895  01AA20  6FB5               	movwf	(i2printf@ap+1)& (0+255),b
 41896                           
 41897                           ; BSR set to: 0
 41898                           ;	Return value of i2_printf is never used
 41899  01AA22  0EB6               	movlw	low i2printf@pb
 41900  01AA24  6F88               	movwf	i2__doprnt@pb& (0+255),b
 41901  01AA26  0E00               	movlw	high i2printf@pb
 41902  01AA28  6F89               	movwf	(i2__doprnt@pb+1)& (0+255),b
 41903  01AA2A  C0B2  F08A         	movff	i2printf@f,i2__doprnt@f
 41904  01AA2E  C0B3  F08B         	movff	i2printf@f+1,i2__doprnt@f+1
 41905  01AA32  0EB4               	movlw	low i2printf@ap
 41906  01AA34  6F8C               	movwf	i2__doprnt@ap& (0+255),b
 41907  01AA36  0E00               	movlw	high i2printf@ap
 41908  01AA38  6F8D               	movwf	(i2__doprnt@ap+1)& (0+255),b
 41909  01AA3A  ECBA  F095         	call	i2__doprnt	;wreg free
 41910  01AA3E  0012               	return	
 41911  01AA40                     __end_ofi2_printf:
 41912                           	opt stack 0
 41913                           tosu	equ	0xFFF
 41914                           tosh	equ	0xFFE
 41915                           tosl	equ	0xFFD
 41916                           pclatu	equ	0xFFB
 41917                           pclath	equ	0xFFA
 41918                           tblptru	equ	0xFF8
 41919                           tblptrh	equ	0xFF7
 41920                           tblptrl	equ	0xFF6
 41921                           tablat	equ	0xFF5
 41922                           prodh	equ	0xFF4
 41923                           prodl	equ	0xFF3
 41924                           intcon	equ	0xFF2
 41925                           indf0	equ	0xFEF
 41926                           postinc0	equ	0xFEE
 41927                           fsr0h	equ	0xFEA
 41928                           fsr0l	equ	0xFE9
 41929                           wreg	equ	0xFE8
 41930                           indf1	equ	0xFE7
 41931                           postdec1	equ	0xFE5
 41932                           plusw1	equ	0xFE3
 41933                           fsr1h	equ	0xFE2
 41934                           fsr1l	equ	0xFE1
 41935                           bsr	equ	0xFE0
 41936                           indf2	equ	0xFDF
 41937                           postinc2	equ	0xFDE
 41938                           postdec2	equ	0xFDD
 41939                           plusw2	equ	0xFDB
 41940                           fsr2h	equ	0xFDA
 41941                           fsr2l	equ	0xFD9
 41942                           status	equ	0xFD8
 41943                           
 41944 ;; *************** function i2__doprnt *****************
 41945 ;; Defined at:
 41946 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 41947 ;; Parameters:    Size  Location     Type
 41948 ;;  pb              2   40[BANK0 ] PTR struct __prbuf
 41949 ;;		 -> sprintf@pb(5), printf@pb(5), 
 41950 ;;  f               2   42[BANK0 ] PTR const unsigned char 
 41951 ;;		 -> STR_193(11), STR_175(13), STR_174(31), STR_173(26), 
 41952 ;;		 -> STR_172(28), STR_171(426), STR_169(30), STR_168(46), 
 41953 ;;		 -> STR_167(39), STR_166(62), STR_165(55), STR_164(470), 
 41954 ;;		 -> STR_162(3086), STR_160(492), STR_158(748), STR_156(720), 
 41955 ;;		 -> STR_154(974), STR_152(54), STR_150(54), STR_148(45), 
 41956 ;;		 -> STR_146(51), STR_144(52), STR_142(46), STR_140(51), 
 41957 ;;		 -> STR_138(53), STR_136(58), STR_134(71), STR_133(63), 
 41958 ;;		 -> STR_132(37), STR_131(46), STR_130(102), STR_129(86), 
 41959 ;;		 -> STR_127(25), STR_125(42), STR_124(53), STR_123(31), 
 41960 ;;		 -> STR_121(29), STR_120(28), STR_118(42), STR_116(41), 
 41961 ;;		 -> STR_114(34), STR_112(53), STR_111(52), STR_110(105), 
 41962 ;;		 -> STR_109(105), STR_107(59), STR_105(73), STR_103(56), 
 41963 ;;		 -> STR_101(34), STR_99(34), STR_97(32), STR_95(37), 
 41964 ;;		 -> STR_93(58), STR_91(36), STR_89(36), STR_87(37), 
 41965 ;;		 -> STR_85(34), STR_83(38), STR_82(60), STR_81(31), 
 41966 ;;		 -> STR_80(23), STR_79(65), STR_77(23), STR_75(27), 
 41967 ;;		 -> STR_74(48), STR_73(15), STR_72(13), STR_71(12), 
 41968 ;;		 -> STR_70(11), STR_69(10), STR_68(11), STR_67(24), 
 41969 ;;		 -> STR_66(46), STR_65(25), STR_63(54), STR_62(64), 
 41970 ;;		 -> STR_60(59), STR_58(85), STR_56(47), STR_55(17), 
 41971 ;;		 -> STR_52(52), STR_50(4), STR_49(5), STR_47(4), 
 41972 ;;		 -> STR_46(5), STR_44(3), terminal_textAttributes@output_buff(15), STR_14(4), 
 41973 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(5), 
 41974 ;;		 -> STR_9(3), STR_8(372), STR_7(4), STR_6(5), 
 41975 ;;		 -> STR_1(4), 
 41976 ;;  ap              2   44[BANK0 ] PTR PTR void 
 41977 ;;		 -> sprintf@ap(2), printf@ap(2), 
 41978 ;; Auto vars:     Size  Location     Type
 41979 ;;  _doprnt         4   71[BANK0 ] unsigned long 
 41980 ;;  _doprnt         4   67[BANK0 ] unsigned long 
 41981 ;;  _doprnt         4   63[BANK0 ] struct .
 41982 ;;  _doprnt         2   79[BANK0 ] int 
 41983 ;;  _doprnt         2   77[BANK0 ] unsigned short 
 41984 ;;  _doprnt         2   75[BANK0 ] int 
 41985 ;;  _doprnt         2   61[BANK0 ] int 
 41986 ;;  _doprnt         2   59[BANK0 ] unsigned int 
 41987 ;;  _doprnt         2   57[BANK0 ] PTR const unsigned char 
 41988 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_191(7), 
 41989 ;;		 -> _doprnt@c(1), STR_188(16), STR_187(22), STR_186(21), 
 41990 ;;		 -> STR_185(27), STR_184(41), STR_183(32), STR_182(19), 
 41991 ;;		 -> STR_181(16), STR_180(15), STR_179(16), STR_178(10), 
 41992 ;;		 -> STR_177(13), STR_176(12), NULL(0), TRIAC_Firing_Angle(4), 
 41993 ;;  _doprnt         1   81[BANK0 ] char 
 41994 ;;  _doprnt         1   56[BANK0 ] unsigned char 
 41995 ;;  _doprnt         1    0        unsigned char 
 41996 ;; Return value:  Size  Location     Type
 41997 ;;                  2   40[BANK0 ] int 
 41998 ;; Registers used:
 41999 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42000 ;; Tracked objects:
 42001 ;;		On entry : 0/0
 42002 ;;		On exit  : 0/0
 42003 ;;		Unchanged: 0/0
 42004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42005 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42006 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42007 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42008 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42009 ;;Total ram usage:       42 bytes
 42010 ;; Hardware stack levels used:    1
 42011 ;; Hardware stack levels required when called:    2
 42012 ;; This function calls:
 42013 ;;		Absolute function
 42014 ;;		i2___awdiv
 42015 ;;		i2___fladd
 42016 ;;		i2___flge
 42017 ;;		i2___flmul
 42018 ;;		i2___flneg
 42019 ;;		i2___flsub
 42020 ;;		i2___fltol
 42021 ;;		i2___lldiv
 42022 ;;		i2___llmod
 42023 ;;		i2___wmul
 42024 ;;		i2___xxtofl
 42025 ;;		i2__div_to_l_
 42026 ;;		i2__tdiv_to_l_
 42027 ;;		i2_fround
 42028 ;;		i2_isdigit
 42029 ;;		i2_putch
 42030 ;;		i2_scale
 42031 ;; This function is called by:
 42032 ;;		i2_printf
 42033 ;; This function uses a non-reentrant model
 42034 ;;
 42035                           
 42036                           	psect	text134
 42037  012B74                     __ptext134:
 42038                           	opt stack 0
 42039  012B74                     i2__doprnt:
 42040                           	opt stack 13
 42041                           
 42042                           ;doprnt.c: 499: signed char c;
 42043                           ;doprnt.c: 501: int width;
 42044                           ;doprnt.c: 504: int prec;
 42045                           ;doprnt.c: 508: unsigned short flag;
 42046                           ;doprnt.c: 515: char d;
 42047                           ;doprnt.c: 516: double fval;
 42048                           ;doprnt.c: 517: int exp;
 42049                           ;doprnt.c: 523: union {
 42050                           ;doprnt.c: 524: unsigned long vd;
 42051                           ;doprnt.c: 525: double integ;
 42052                           ;doprnt.c: 526: } tmpval;
 42053                           ;doprnt.c: 528: unsigned long val;
 42054                           ;doprnt.c: 529: unsigned len;
 42055                           ;doprnt.c: 530: const char * cp;
 42056                           ;doprnt.c: 536: while(c = *f++) {
 42057                           
 42058                           ;incstack = 0
 42059  012B74  EF19  F0A0         	goto	i2u3331_40
 42060  012B78                     
 42061                           ;doprnt.c: 538: if(c != '%')
 42062  012B78  0E25               	movlw	37
 42063  012B7A  0100               	movlb	0	; () banked
 42064  012B7C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 42065  012B7E  B4D8               	btfsc	status,2,c
 42066  012B80  D036               	goto	i2l1941
 42067                           
 42068                           ; BSR set to: 0
 42069                           ;doprnt.c: 540: {
 42070                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 42071  012B82  EE20 F002          	lfsr	2,2
 42072  012B86  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42073  012B88  26D9               	addwf	fsr2l,f,c
 42074  012B8A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42075  012B8C  22DA               	addwfc	fsr2h,f,c
 42076  012B8E  50DE               	movf	postinc2,w,c
 42077  012B90  10DE               	iorwf	postinc2,w,c
 42078  012B92  10DE               	iorwf	postinc2,w,c
 42079  012B94  B4D8               	btfsc	status,2,c
 42080  012B96  D014               	goto	i2l1942
 42081                           
 42082                           ; BSR set to: 0
 42083  012B98  EE20 F002          	lfsr	2,2
 42084  012B9C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42085  012B9E  26D9               	addwf	fsr2l,f,c
 42086  012BA0  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42087  012BA2  22DA               	addwfc	fsr2h,f,c
 42088  012BA4  D802               	call	i2u3221_48
 42089  012BA6  EF19  F0A0         	goto	i2u3331_40
 42090  012BAA                     i2u3221_48:
 42091  012BAA  0005               	push	
 42092  012BAC  6EFA               	movwf	pclath,c
 42093  012BAE  50DE               	movf	postinc2,w,c
 42094  012BB0  6EFD               	movwf	tosl,c
 42095  012BB2  50DE               	movf	postinc2,w,c
 42096  012BB4  6EFE               	movwf	tosh,c
 42097  012BB6  50DE               	movf	postinc2,w,c
 42098  012BB8  6EFF               	movwf	tosu,c
 42099  012BBA  50FA               	movf	pclath,w,c
 42100  012BBC  51B1               	movf	i2__doprnt@c& (0+255),w,b
 42101  012BBE  0012               	return		;indir
 42102  012BC0                     i2l1942:
 42103  012BC0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42104  012BC4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42105  012BC8  CFDE F08E          	movff	postinc2,??i2__doprnt
 42106  012BCC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42107  012BD0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42108  012BD4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42109  012BD8  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 42110  012BDC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42111  012BE0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42112  012BE4  2ADE               	incf	postinc2,f,c
 42113  012BE6  0E00               	movlw	0
 42114  012BE8  22DD               	addwfc	postdec2,f,c
 42115                           
 42116                           ;doprnt.c: 542: continue;
 42117  012BEA  EF19  F0A0         	goto	i2u3331_40
 42118  012BEE                     i2l1941:
 42119                           
 42120                           ;doprnt.c: 543: }
 42121                           ;doprnt.c: 546: width = 0;
 42122  012BEE  0E00               	movlw	0
 42123  012BF0  0100               	movlb	0	; () banked
 42124  012BF2  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42125  012BF4  0E00               	movlw	0
 42126  012BF6  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42127                           
 42128                           ;doprnt.c: 548: flag = 0;
 42129  012BF8  0E00               	movlw	0
 42130  012BFA  6FAE               	movwf	(i2__doprnt@flag+1)& (0+255),b
 42131  012BFC  0E00               	movlw	0
 42132  012BFE  6FAD               	movwf	i2__doprnt@flag& (0+255),b
 42133                           
 42134                           ; BSR set to: 0
 42135                           ;doprnt.c: 551: switch(*f) {
 42136                           
 42137                           ;doprnt.c: 550: for(;;) {
 42138  012C00  D004               	goto	i2l1945
 42139  012C02                     
 42140                           ;doprnt.c: 580: flag |= 0x04;
 42141                           
 42142                           ; BSR set to: 0
 42143  012C02  0100               	movlb	0	; () banked
 42144  012C04  85AD               	bsf	i2__doprnt@flag& (0+255),2,b
 42145                           
 42146                           ;doprnt.c: 581: f++;
 42147  012C06  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42148  012C08  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42149  012C0A                     i2l1945:
 42150                           
 42151                           ; BSR set to: 0
 42152  012C0A  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42153  012C0E  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42154  012C12  0E00               	movlw	low (__mediumconst shr (0+16))
 42155  012C14  6EF8               	movwf	tblptru,c
 42156  012C16  0E0D               	movlw	(high __ramtop+-1)
 42157  012C18  64F7               	cpfsgt	tblptrh,c
 42158  012C1A  D003               	bra	i2u3222_47
 42159  012C1C  0008               	tblrd		*
 42160  012C1E  50F5               	movf	tablat,w,c
 42161  012C20  D005               	bra	i2u3222_40
 42162  012C22                     i2u3222_47:
 42163  012C22  CFF6 FFE9          	movff	tblptrl,fsr0l
 42164  012C26  CFF7 FFEA          	movff	tblptrh,fsr0h
 42165  012C2A  50EF               	movf	indf0,w,c
 42166  012C2C                     i2u3222_40:
 42167                           
 42168                           ; Switch size 1, requested type "space"
 42169                           ; Number of cases is 1, Range of values is 48 to 48
 42170                           ; switch strategies available:
 42171                           ; Name         Instructions Cycles
 42172                           ; simple_byte            4     3 (average)
 42173                           ;	Chosen strategy is simple_byte
 42174  012C2C  0A30               	xorlw	48	; case 48
 42175  012C2E  B4D8               	btfsc	status,2,c
 42176  012C30  D7E8               	goto	i2l1946
 42177                           
 42178                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 42179                           
 42180                           ;doprnt.c: 586: }
 42181                           
 42182                           ;doprnt.c: 585: break;
 42183  012C32  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42184  012C36  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42185  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
 42186  012C3C  6EF8               	movwf	tblptru,c
 42187  012C3E  0E0D               	movlw	(high __ramtop+-1)
 42188  012C40  64F7               	cpfsgt	tblptrh,c
 42189  012C42  D003               	bra	i2u3223_47
 42190  012C44  0008               	tblrd		*
 42191  012C46  50F5               	movf	tablat,w,c
 42192  012C48  D005               	bra	i2u3223_40
 42193  012C4A                     i2u3223_47:
 42194  012C4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 42195  012C4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 42196  012C52  50EF               	movf	indf0,w,c
 42197  012C54                     i2u3223_40:
 42198  012C54  ECDC  F0D7         	call	i2_isdigit
 42199  012C58  A0D8               	btfss	status,0,c
 42200  012C5A  D04B               	goto	i2u3227_40
 42201                           
 42202                           ;doprnt.c: 598: width = 0;
 42203  012C5C  0E00               	movlw	0
 42204  012C5E  0100               	movlb	0	; () banked
 42205  012C60  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42206  012C62  0E00               	movlw	0
 42207  012C64  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42208  012C66                     
 42209                           ;doprnt.c: 600: width *= 10;
 42210                           
 42211                           ; BSR set to: 0
 42212  012C66  C0AB  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 42213  012C6A  C0AC  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 42214  012C6E  0E00               	movlw	0
 42215  012C70  6E04               	movwf	i2___wmul@multiplicand+1,c
 42216  012C72  0E0A               	movlw	10
 42217  012C74  6E03               	movwf	i2___wmul@multiplicand,c
 42218  012C76  EC51  F0D7         	call	i2___wmul	;wreg free
 42219  012C7A  C001  F0AB         	movff	?i2___wmul,i2__doprnt@width
 42220  012C7E  C002  F0AC         	movff	?i2___wmul+1,i2__doprnt@width+1
 42221                           
 42222                           ;doprnt.c: 601: width += *f++ - '0';
 42223  012C82  0ED0               	movlw	208
 42224  012C84  0100               	movlb	0	; () banked
 42225  012C86  6F8E               	movwf	??i2__doprnt& (0+255),b
 42226  012C88  0EFF               	movlw	255
 42227  012C8A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42228  012C8C  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42229  012C90  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42230  012C94  0E00               	movlw	low (__mediumconst shr (0+16))
 42231  012C96  6EF8               	movwf	tblptru,c
 42232  012C98  0E0D               	movlw	(high __ramtop+-1)
 42233  012C9A  64F7               	cpfsgt	tblptrh,c
 42234  012C9C  D003               	bra	i2u3225_47
 42235  012C9E  0008               	tblrd		*
 42236  012CA0  50F5               	movf	tablat,w,c
 42237  012CA2  D005               	bra	i2u3225_40
 42238  012CA4                     i2u3225_47:
 42239  012CA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 42240  012CA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 42241  012CAC  50EF               	movf	indf0,w,c
 42242  012CAE                     i2u3225_40:
 42243  012CAE  0100               	movlb	0	; () banked
 42244  012CB0  6F90               	movwf	(??i2__doprnt+2)& (0+255),b
 42245  012CB2  6B91               	clrf	(??i2__doprnt+3)& (0+255),b
 42246  012CB4  518E               	movf	??i2__doprnt& (0+255),w,b
 42247  012CB6  2790               	addwf	(??i2__doprnt+2)& (0+255),f,b
 42248  012CB8  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 42249  012CBA  2391               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 42250  012CBC  5190               	movf	(??i2__doprnt+2)& (0+255),w,b
 42251  012CBE  27AB               	addwf	i2__doprnt@width& (0+255),f,b
 42252  012CC0  5191               	movf	(??i2__doprnt+3)& (0+255),w,b
 42253  012CC2  23AC               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 42254                           
 42255                           ; BSR set to: 0
 42256  012CC4  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42257  012CC6  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42258                           
 42259                           ; BSR set to: 0
 42260                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 42261  012CC8  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42262  012CCC  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42263  012CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 42264  012CD2  6EF8               	movwf	tblptru,c
 42265  012CD4  0E0D               	movlw	(high __ramtop+-1)
 42266  012CD6  64F7               	cpfsgt	tblptrh,c
 42267  012CD8  D003               	bra	i2u3226_47
 42268  012CDA  0008               	tblrd		*
 42269  012CDC  50F5               	movf	tablat,w,c
 42270  012CDE  D005               	bra	i2u3226_40
 42271  012CE0                     i2u3226_47:
 42272  012CE0  CFF6 FFE9          	movff	tblptrl,fsr0l
 42273  012CE4  CFF7 FFEA          	movff	tblptrh,fsr0h
 42274  012CE8  50EF               	movf	indf0,w,c
 42275  012CEA                     i2u3226_40:
 42276  012CEA  ECDC  F0D7         	call	i2_isdigit
 42277  012CEE  B0D8               	btfsc	status,0,c
 42278  012CF0  D7BA               	goto	i2l1951
 42279  012CF2                     i2u3227_40:
 42280                           
 42281                           ;doprnt.c: 608: }
 42282                           ;doprnt.c: 611: if(*f == '.') {
 42283  012CF2  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42284  012CF6  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42285  012CFA  0E00               	movlw	low (__mediumconst shr (0+16))
 42286  012CFC  6EF8               	movwf	tblptru,c
 42287  012CFE  0E0D               	movlw	(high __ramtop+-1)
 42288  012D00  64F7               	cpfsgt	tblptrh,c
 42289  012D02  D003               	bra	i2u3228_47
 42290  012D04  0008               	tblrd		*
 42291  012D06  50F5               	movf	tablat,w,c
 42292  012D08  D005               	bra	i2u3228_40
 42293  012D0A                     i2u3228_47:
 42294  012D0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 42295  012D0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 42296  012D12  50EF               	movf	indf0,w,c
 42297  012D14                     i2u3228_40:
 42298  012D14  0A2E               	xorlw	46
 42299  012D16  A4D8               	btfss	status,2,c
 42300  012D18  D048               	goto	i2l1953
 42301                           
 42302                           ;doprnt.c: 612: flag |= 0x4000;
 42303  012D1A  0100               	movlb	0	; () banked
 42304  012D1C  8DAE               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 42305                           
 42306                           ;doprnt.c: 613: f++;
 42307  012D1E  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42308  012D20  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42309                           
 42310                           ; BSR set to: 0
 42311                           ;doprnt.c: 620: {
 42312                           ;doprnt.c: 621: prec = 0;
 42313  012D22  0E00               	movlw	0
 42314  012D24  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42315  012D26  0E00               	movlw	0
 42316  012D28  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42317                           
 42318                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 42319  012D2A  D029               	goto	i2l1954
 42320  012D2C                     
 42321                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 42322                           
 42323                           ; BSR set to: 0
 42324  012D2C  C0AF  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 42325  012D30  C0B0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 42326  012D34  0E00               	movlw	0
 42327  012D36  6E04               	movwf	i2___wmul@multiplicand+1,c
 42328  012D38  0E0A               	movlw	10
 42329  012D3A  6E03               	movwf	i2___wmul@multiplicand,c
 42330  012D3C  EC51  F0D7         	call	i2___wmul	;wreg free
 42331  012D40  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42332  012D44  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42333  012D48  0E00               	movlw	low (__mediumconst shr (0+16))
 42334  012D4A  6EF8               	movwf	tblptru,c
 42335  012D4C  0E0D               	movlw	(high __ramtop+-1)
 42336  012D4E  64F7               	cpfsgt	tblptrh,c
 42337  012D50  D003               	bra	i2u3230_47
 42338  012D52  0008               	tblrd		*
 42339  012D54  50F5               	movf	tablat,w,c
 42340  012D56  D005               	bra	i2u3230_40
 42341  012D58                     i2u3230_47:
 42342  012D58  CFF6 FFE9          	movff	tblptrl,fsr0l
 42343  012D5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 42344  012D60  50EF               	movf	indf0,w,c
 42345  012D62                     i2u3230_40:
 42346  012D62  0100               	movlb	0	; () banked
 42347  012D64  6F8E               	movwf	??i2__doprnt& (0+255),b
 42348  012D66  518E               	movf	??i2__doprnt& (0+255),w,b
 42349  012D68  2601               	addwf	?i2___wmul,f,c
 42350  012D6A  0E00               	movlw	0
 42351  012D6C  2202               	addwfc	?i2___wmul+1,f,c
 42352  012D6E  0ED0               	movlw	208
 42353  012D70  2401               	addwf	?i2___wmul,w,c
 42354  012D72  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42355  012D74  0EFF               	movlw	255
 42356  012D76  2002               	addwfc	?i2___wmul+1,w,c
 42357  012D78  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42358                           
 42359                           ; BSR set to: 0
 42360  012D7A  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42361  012D7C  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42362  012D7E                     i2l1954:
 42363                           
 42364                           ; BSR set to: 0
 42365                           
 42366                           ; BSR set to: 0
 42367  012D7E  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 42368  012D82  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 42369  012D86  0E00               	movlw	low (__mediumconst shr (0+16))
 42370  012D88  6EF8               	movwf	tblptru,c
 42371  012D8A  0E0D               	movlw	(high __ramtop+-1)
 42372  012D8C  64F7               	cpfsgt	tblptrh,c
 42373  012D8E  D003               	bra	i2u3231_47
 42374  012D90  0008               	tblrd		*
 42375  012D92  50F5               	movf	tablat,w,c
 42376  012D94  D005               	bra	i2u3231_40
 42377  012D96                     i2u3231_47:
 42378  012D96  CFF6 FFE9          	movff	tblptrl,fsr0l
 42379  012D9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 42380  012D9E  50EF               	movf	indf0,w,c
 42381  012DA0                     i2u3231_40:
 42382  012DA0  ECDC  F0D7         	call	i2_isdigit
 42383  012DA4  A0D8               	btfss	status,0,c
 42384  012DA6  D12A               	goto	i2l1959
 42385  012DA8  D7C1               	goto	i2l1955
 42386  012DAA                     i2l1953:
 42387                           
 42388                           ;doprnt.c: 626: prec = 0;
 42389  012DAA  0E00               	movlw	0
 42390  012DAC  0100               	movlb	0	; () banked
 42391  012DAE  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42392  012DB0  0E00               	movlw	0
 42393  012DB2  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42394                           
 42395                           ; BSR set to: 0
 42396                           ;doprnt.c: 628: flag |= 0x1000;
 42397  012DB4  89AE               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 42398                           
 42399                           ; BSR set to: 0
 42400                           ;doprnt.c: 635: switch(c = *f++) {
 42401                           
 42402                           ;doprnt.c: 630: }
 42403                           ;doprnt.c: 633: loop:
 42404                           
 42405                           ; BSR set to: 0
 42406  012DB6  D122               	goto	i2l1959
 42407  012DB8                     
 42408                           ; BSR set to: 0
 42409                           ;doprnt.c: 643: flag |= 0x10;
 42410                           
 42411                           ; BSR set to: 0
 42412  012DB8  89AD               	bsf	i2__doprnt@flag& (0+255),4,b
 42413                           
 42414                           ;doprnt.c: 644: goto loop;
 42415  012DBA  D120               	goto	i2l1959
 42416  012DBC                     
 42417                           ; BSR set to: 0
 42418                           ;doprnt.c: 663: flag |= 0x400;
 42419                           
 42420                           ; BSR set to: 0
 42421  012DBC  85AE               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 42422                           
 42423                           ; BSR set to: 0
 42424                           ;doprnt.c: 698: case 'i':
 42425                           ;doprnt.c: 699: break;
 42426                           
 42427                           ; BSR set to: 0
 42428                           
 42429                           ;doprnt.c: 697: case 'd':
 42430                           
 42431                           ;doprnt.c: 664: break;
 42432  012DBE  D159               	goto	i2l1964
 42433  012DC0                     
 42434                           ; BSR set to: 0
 42435                           ;doprnt.c: 718: case 'x':
 42436                           ;doprnt.c: 721: flag |= 0x80;
 42437                           
 42438                           ; BSR set to: 0
 42439                           
 42440                           ; BSR set to: 0
 42441  012DC0  8FAD               	bsf	i2__doprnt@flag& (0+255),7,b
 42442                           
 42443                           ;doprnt.c: 723: break;
 42444  012DC2  D157               	goto	i2l1964
 42445  012DC4                     
 42446                           ; BSR set to: 0
 42447                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 42448                           
 42449                           ; BSR set to: 0
 42450  012DC4  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42451  012DC8  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42452  012DCC  CFDF F08E          	movff	indf2,??i2__doprnt
 42453  012DD0  0E02               	movlw	2
 42454  012DD2  26DE               	addwf	postinc2,f,c
 42455  012DD4  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42456  012DD8  0E00               	movlw	0
 42457  012DDA  22DD               	addwfc	postdec2,f,c
 42458  012DDC  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42459  012DE0  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42460  012DE4  CFDE F099          	movff	postinc2,i2__doprnt@cp
 42461  012DE8  CFDD F09A          	movff	postdec2,i2__doprnt@cp+1
 42462                           
 42463                           ; BSR set to: 0
 42464                           ;doprnt.c: 740: if(!cp)
 42465  012DEC  5199               	movf	i2__doprnt@cp& (0+255),w,b
 42466  012DEE  119A               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 42467  012DF0  A4D8               	btfss	status,2,c
 42468  012DF2  D004               	goto	i2l1970
 42469                           
 42470                           ; BSR set to: 0
 42471                           ;doprnt.c: 741: cp = "(null)";
 42472  012DF4  0E9A               	movlw	low STR_191
 42473  012DF6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 42474  012DF8  0EFF               	movlw	high STR_191
 42475  012DFA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 42476  012DFC                     i2l1970:
 42477                           
 42478                           ; BSR set to: 0
 42479                           ;doprnt.c: 745: len = 0;
 42480                           
 42481                           ; BSR set to: 0
 42482  012DFC  0E00               	movlw	0
 42483  012DFE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 42484  012E00  0E00               	movlw	0
 42485  012E02  6F9B               	movwf	i2__doprnt@len& (0+255),b
 42486                           
 42487                           ;doprnt.c: 746: while(cp[len])
 42488  012E04  D003               	goto	i2l1971
 42489  012E06                     
 42490                           ;doprnt.c: 747: len++;
 42491                           
 42492                           ; BSR set to: 0
 42493  012E06  0100               	movlb	0	; () banked
 42494  012E08  4B9B               	infsnz	i2__doprnt@len& (0+255),f,b
 42495  012E0A  2B9C               	incf	(i2__doprnt@len+1)& (0+255),f,b
 42496  012E0C                     i2l1971:
 42497                           
 42498                           ; BSR set to: 0
 42499                           
 42500                           ; BSR set to: 0
 42501  012E0C  519B               	movf	i2__doprnt@len& (0+255),w,b
 42502  012E0E  2599               	addwf	i2__doprnt@cp& (0+255),w,b
 42503  012E10  6F8E               	movwf	??i2__doprnt& (0+255),b
 42504  012E12  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42505  012E14  219A               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 42506  012E16  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42507  012E18  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 42508  012E1C  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 42509  012E20  0E00               	movlw	low (__mediumconst shr (0+16))
 42510  012E22  6EF8               	movwf	tblptru,c
 42511  012E24  0E0D               	movlw	(high __ramtop+-1)
 42512  012E26  64F7               	cpfsgt	tblptrh,c
 42513  012E28  D003               	bra	i2u3234_47
 42514  012E2A  0008               	tblrd		*
 42515  012E2C  50F5               	movf	tablat,w,c
 42516  012E2E  D005               	bra	i2u3234_40
 42517  012E30                     i2u3234_47:
 42518  012E30  CFF6 FFE9          	movff	tblptrl,fsr0l
 42519  012E34  CFF7 FFEA          	movff	tblptrh,fsr0h
 42520  012E38  50EF               	movf	indf0,w,c
 42521  012E3A                     i2u3234_40:
 42522  012E3A  0900               	iorlw	0
 42523  012E3C  A4D8               	btfss	status,2,c
 42524  012E3E  D7E3               	goto	i2l1972
 42525  012E40                     i2u3235_40:
 42526                           
 42527                           ;doprnt.c: 753: if(prec && prec < len)
 42528                           
 42529                           ;doprnt.c: 750: dostring:
 42530  012E40  0100               	movlb	0	; () banked
 42531  012E42  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 42532  012E44  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 42533  012E46  B4D8               	btfsc	status,2,c
 42534  012E48  D00A               	goto	i2l1975
 42535                           
 42536                           ; BSR set to: 0
 42537  012E4A  519B               	movf	i2__doprnt@len& (0+255),w,b
 42538  012E4C  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 42539  012E4E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42540  012E50  59B0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 42541  012E52  B0D8               	btfsc	status,0,c
 42542  012E54  D004               	goto	i2l1975
 42543                           
 42544                           ; BSR set to: 0
 42545                           ;doprnt.c: 754: len = prec;
 42546  012E56  C0AF  F09B         	movff	i2__doprnt@prec,i2__doprnt@len
 42547  012E5A  C0B0  F09C         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 42548  012E5E                     i2l1975:
 42549                           
 42550                           ; BSR set to: 0
 42551                           ;doprnt.c: 757: if(width > len)
 42552                           
 42553                           ; BSR set to: 0
 42554  012E5E  51AB               	movf	i2__doprnt@width& (0+255),w,b
 42555  012E60  5D9B               	subwf	i2__doprnt@len& (0+255),w,b
 42556  012E62  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 42557  012E64  599C               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 42558  012E66  B0D8               	btfsc	status,0,c
 42559  012E68  D005               	goto	i2l1976
 42560                           
 42561                           ; BSR set to: 0
 42562                           ;doprnt.c: 758: width -= len;
 42563  012E6A  519B               	movf	i2__doprnt@len& (0+255),w,b
 42564  012E6C  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 42565  012E6E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 42566  012E70  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 42567  012E72  D038               	goto	i2l1981
 42568  012E74                     i2l1976:
 42569                           
 42570                           ; BSR set to: 0
 42571                           ;doprnt.c: 759: else
 42572                           ;doprnt.c: 760: width = 0;
 42573                           
 42574                           ; BSR set to: 0
 42575  012E74  0E00               	movlw	0
 42576  012E76  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 42577  012E78  0E00               	movlw	0
 42578  012E7A  6FAB               	movwf	i2__doprnt@width& (0+255),b
 42579                           
 42580                           ; BSR set to: 0
 42581                           ;doprnt.c: 764: while(width--)
 42582  012E7C  D033               	goto	i2l1981
 42583  012E7E                     i2l22421:
 42584                           
 42585                           ; BSR set to: 0
 42586                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 42587  012E7E  EE20 F002          	lfsr	2,2
 42588  012E82  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42589  012E84  26D9               	addwf	fsr2l,f,c
 42590  012E86  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42591  012E88  22DA               	addwfc	fsr2h,f,c
 42592  012E8A  50DE               	movf	postinc2,w,c
 42593  012E8C  10DE               	iorwf	postinc2,w,c
 42594  012E8E  10DE               	iorwf	postinc2,w,c
 42595  012E90  B4D8               	btfsc	status,2,c
 42596  012E92  D013               	goto	i2l1980
 42597                           
 42598                           ; BSR set to: 0
 42599  012E94  EE20 F002          	lfsr	2,2
 42600  012E98  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42601  012E9A  26D9               	addwf	fsr2l,f,c
 42602  012E9C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42603  012E9E  22DA               	addwfc	fsr2h,f,c
 42604  012EA0  D801               	call	i2u3240_48
 42605  012EA2  D020               	goto	i2l1981
 42606  012EA4                     i2u3240_48:
 42607  012EA4  0005               	push	
 42608  012EA6  6EFA               	movwf	pclath,c
 42609  012EA8  50DE               	movf	postinc2,w,c
 42610  012EAA  6EFD               	movwf	tosl,c
 42611  012EAC  50DE               	movf	postinc2,w,c
 42612  012EAE  6EFE               	movwf	tosh,c
 42613  012EB0  50DE               	movf	postinc2,w,c
 42614  012EB2  6EFF               	movwf	tosu,c
 42615  012EB4  50FA               	movf	pclath,w,c
 42616  012EB6  0E20               	movlw	32
 42617  012EB8  0012               	return		;indir
 42618  012EBA                     i2l1980:
 42619  012EBA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42620  012EBE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42621  012EC2  CFDE F08E          	movff	postinc2,??i2__doprnt
 42622  012EC6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42623  012ECA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42624  012ECE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42625  012ED2  0E20               	movlw	32
 42626  012ED4  6EDF               	movwf	indf2,c
 42627  012ED6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42628  012EDA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42629  012EDE  2ADE               	incf	postinc2,f,c
 42630  012EE0  0E00               	movlw	0
 42631  012EE2  22DD               	addwfc	postdec2,f,c
 42632  012EE4                     i2l1981:
 42633  012EE4  0100               	movlb	0	; () banked
 42634  012EE6  07AB               	decf	i2__doprnt@width& (0+255),f,b
 42635  012EE8  A0D8               	btfss	status,0,c
 42636  012EEA  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 42637  012EEC  29AB               	incf	i2__doprnt@width& (0+255),w,b
 42638  012EEE  E1C7               	bnz	i2l22421
 42639  012EF0  29AC               	incf	(i2__doprnt@width+1)& (0+255),w,b
 42640  012EF2  B4D8               	btfsc	status,2,c
 42641  012EF4  D05B               	goto	i2l1986
 42642  012EF6  D7C3               	goto	i2l1979
 42643  012EF8                     i2l22431:
 42644                           
 42645                           ; BSR set to: 0
 42646                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 42647  012EF8  EE20 F002          	lfsr	2,2
 42648  012EFC  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42649  012EFE  26D9               	addwf	fsr2l,f,c
 42650  012F00  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42651  012F02  22DA               	addwfc	fsr2h,f,c
 42652  012F04  50DE               	movf	postinc2,w,c
 42653  012F06  10DE               	iorwf	postinc2,w,c
 42654  012F08  10DE               	iorwf	postinc2,w,c
 42655  012F0A  B4D8               	btfsc	status,2,c
 42656  012F0C  D027               	goto	i2l1985
 42657                           
 42658                           ; BSR set to: 0
 42659  012F0E  EE20 F002          	lfsr	2,2
 42660  012F12  5188               	movf	i2__doprnt@pb& (0+255),w,b
 42661  012F14  26D9               	addwf	fsr2l,f,c
 42662  012F16  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 42663  012F18  22DA               	addwfc	fsr2h,f,c
 42664  012F1A  D801               	call	i2u3243_48
 42665  012F1C  D01B               	goto	i2u3243_49
 42666  012F1E                     i2u3243_48:
 42667  012F1E  0005               	push	
 42668  012F20  6EFA               	movwf	pclath,c
 42669  012F22  50DE               	movf	postinc2,w,c
 42670  012F24  6EFD               	movwf	tosl,c
 42671  012F26  50DE               	movf	postinc2,w,c
 42672  012F28  6EFE               	movwf	tosh,c
 42673  012F2A  50DE               	movf	postinc2,w,c
 42674  012F2C  6EFF               	movwf	tosu,c
 42675  012F2E  50FA               	movf	pclath,w,c
 42676  012F30  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42677  012F34  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42678  012F38  0E00               	movlw	low (__mediumconst shr (0+16))
 42679  012F3A  6EF8               	movwf	tblptru,c
 42680  012F3C  0E0D               	movlw	(high __ramtop+-1)
 42681  012F3E  64F7               	cpfsgt	tblptrh,c
 42682  012F40  D003               	bra	i2u3244_47
 42683  012F42  0008               	tblrd		*
 42684  012F44  50F5               	movf	tablat,w,c
 42685  012F46  D005               	bra	i2u3244_40
 42686  012F48                     i2u3244_47:
 42687  012F48  CFF6 FFE9          	movff	tblptrl,fsr0l
 42688  012F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 42689  012F50  50EF               	movf	indf0,w,c
 42690  012F52                     i2u3244_40:
 42691  012F52  0012               	return		;indir
 42692  012F54                     i2u3243_49:
 42693  012F54  0100               	movlb	0	; () banked
 42694  012F56  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 42695  012F58  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 42696  012F5A  D028               	goto	i2l1986
 42697  012F5C                     i2l1985:
 42698                           
 42699                           ; BSR set to: 0
 42700                           
 42701                           ; BSR set to: 0
 42702  012F5C  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 42703  012F60  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 42704  012F64  0E00               	movlw	low (__mediumconst shr (0+16))
 42705  012F66  6EF8               	movwf	tblptru,c
 42706  012F68  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42707  012F6C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42708  012F70  CFDE F08E          	movff	postinc2,??i2__doprnt
 42709  012F74  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 42710  012F78  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42711  012F7C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42712  012F80  0E0D               	movlw	(high __ramtop+-1)
 42713  012F82  64F7               	cpfsgt	tblptrh,c
 42714  012F84  D003               	bra	i2u3245_47
 42715  012F86  0008               	tblrd		*
 42716  012F88  50F5               	movf	tablat,w,c
 42717  012F8A  D005               	bra	i2u3245_40
 42718  012F8C                     i2u3245_47:
 42719  012F8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 42720  012F90  CFF7 FFEA          	movff	tblptrh,fsr0h
 42721  012F94  50EF               	movf	indf0,w,c
 42722  012F96                     i2u3245_40:
 42723  012F96  6EDF               	movwf	indf2,c
 42724  012F98  0100               	movlb	0	; () banked
 42725  012F9A  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 42726  012F9C  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 42727                           
 42728                           ; BSR set to: 0
 42729  012F9E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 42730  012FA2  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 42731  012FA6  2ADE               	incf	postinc2,f,c
 42732  012FA8  0E00               	movlw	0
 42733  012FAA  22DD               	addwfc	postdec2,f,c
 42734  012FAC                     i2l1986:
 42735                           
 42736                           ; BSR set to: 0
 42737                           
 42738                           ; BSR set to: 0
 42739                           
 42740                           ; BSR set to: 0
 42741  012FAC  079B               	decf	i2__doprnt@len& (0+255),f,b
 42742  012FAE  A0D8               	btfss	status,0,c
 42743  012FB0  079C               	decf	(i2__doprnt@len+1)& (0+255),f,b
 42744  012FB2  299B               	incf	i2__doprnt@len& (0+255),w,b
 42745  012FB4  E1A1               	bnz	i2l22431
 42746  012FB6  299C               	incf	(i2__doprnt@len+1)& (0+255),w,b
 42747  012FB8  B4D8               	btfsc	status,2,c
 42748  012FBA  EF19  F0A0         	goto	i2u3331_40
 42749  012FBE  D79C               	goto	i2l1984
 42750  012FC0                     
 42751                           ; BSR set to: 0
 42752                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 42753                           
 42754                           ; BSR set to: 0
 42755  012FC0  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42756  012FC4  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42757  012FC8  CFDF F08E          	movff	indf2,??i2__doprnt
 42758  012FCC  0E02               	movlw	2
 42759  012FCE  26DE               	addwf	postinc2,f,c
 42760  012FD0  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42761  012FD4  0E00               	movlw	0
 42762  012FD6  22DD               	addwfc	postdec2,f,c
 42763  012FD8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42764  012FDC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42765  012FE0  50DF               	movf	indf2,w,c
 42766  012FE2  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42767  012FE4                     
 42768                           ; BSR set to: 0
 42769                           ;doprnt.c: 805: cp = (char *)&c;
 42770                           
 42771                           ; BSR set to: 0
 42772  012FE4  0EB1               	movlw	low i2__doprnt@c
 42773  012FE6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 42774  012FE8  0E00               	movlw	high i2__doprnt@c
 42775  012FEA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 42776                           
 42777                           ; BSR set to: 0
 42778                           ;doprnt.c: 806: len = 1;
 42779  012FEC  0E00               	movlw	0
 42780  012FEE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 42781  012FF0  0E01               	movlw	1
 42782  012FF2  6F9B               	movwf	i2__doprnt@len& (0+255),b
 42783                           
 42784                           ;doprnt.c: 807: goto dostring;
 42785  012FF4  D725               	goto	i2u3235_40
 42786  012FF6                     
 42787                           ; BSR set to: 0
 42788                           ;doprnt.c: 818: flag |= 0xC0;
 42789                           
 42790                           ; BSR set to: 0
 42791  012FF6  0EC0               	movlw	192
 42792  012FF8  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 42793                           
 42794                           ; BSR set to: 0
 42795                           ;doprnt.c: 822: }
 42796                           
 42797                           ;doprnt.c: 819: break;
 42798  012FFA  D03B               	goto	i2l1964
 42799  012FFC                     i2l1959:
 42800                           
 42801                           ; BSR set to: 0
 42802  012FFC  0100               	movlb	0	; () banked
 42803  012FFE  518A               	movf	i2__doprnt@f& (0+255),w,b
 42804  013000  6F8E               	movwf	??i2__doprnt& (0+255),b
 42805  013002  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 42806  013004  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 42807  013006  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 42808  013008  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 42809  01300A  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 42810  01300E  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 42811  013012  0E00               	movlw	low (__mediumconst shr (0+16))
 42812  013014  6EF8               	movwf	tblptru,c
 42813  013016  0E0D               	movlw	(high __ramtop+-1)
 42814  013018  64F7               	cpfsgt	tblptrh,c
 42815  01301A  D003               	bra	i2u3247_47
 42816  01301C  0008               	tblrd		*
 42817  01301E  50F5               	movf	tablat,w,c
 42818  013020  D005               	bra	i2u3247_40
 42819  013022                     i2u3247_47:
 42820  013022  CFF6 FFE9          	movff	tblptrl,fsr0l
 42821  013026  CFF7 FFEA          	movff	tblptrh,fsr0h
 42822  01302A  50EF               	movf	indf0,w,c
 42823  01302C                     i2u3247_40:
 42824  01302C  0100               	movlb	0	; () banked
 42825  01302E  6FB1               	movwf	i2__doprnt@c& (0+255),b
 42826  013030  51B1               	movf	i2__doprnt@c& (0+255),w,b
 42827                           
 42828                           ; Switch size 1, requested type "space"
 42829                           ; Number of cases is 10, Range of values is 0 to 120
 42830                           ; switch strategies available:
 42831                           ; Name         Instructions Cycles
 42832                           ; simple_byte           31    16 (average)
 42833                           ;	Chosen strategy is simple_byte
 42834  013032  0A00               	xorlw	0	; case 0
 42835  013034  B4D8               	btfsc	status,2,c
 42836  013036  EF37  F0A0         	goto	i2u3333_40
 42837  01303A  0A58               	xorlw	88	; case 88
 42838  01303C  B4D8               	btfsc	status,2,c
 42839  01303E  D6C0               	goto	i2l1967
 42840  013040  0A3B               	xorlw	59	; case 99
 42841  013042  B4D8               	btfsc	status,2,c
 42842  013044  D7BD               	goto	i2l1988
 42843  013046  0A07               	xorlw	7	; case 100
 42844  013048  B4D8               	btfsc	status,2,c
 42845  01304A  D013               	goto	i2l1964
 42846  01304C  0A02               	xorlw	2	; case 102
 42847  01304E  B4D8               	btfsc	status,2,c
 42848  013050  D6B5               	goto	i2l1963
 42849  013052  0A0F               	xorlw	15	; case 105
 42850  013054  B4D8               	btfsc	status,2,c
 42851  013056  D00D               	goto	i2l1964
 42852  013058  0A05               	xorlw	5	; case 108
 42853  01305A  B4D8               	btfsc	status,2,c
 42854  01305C  D6AD               	goto	i2l1962
 42855  01305E  0A1F               	xorlw	31	; case 115
 42856  013060  B4D8               	btfsc	status,2,c
 42857  013062  D6B0               	goto	i2l1969
 42858  013064  0A06               	xorlw	6	; case 117
 42859  013066  B4D8               	btfsc	status,2,c
 42860  013068  D7C6               	goto	i2l1990
 42861  01306A  0A0D               	xorlw	13	; case 120
 42862  01306C  B4D8               	btfsc	status,2,c
 42863  01306E  D6A8               	goto	i2l1967
 42864  013070  D7B9               	goto	i2l1989
 42865  013072                     i2l1964:
 42866                           
 42867                           ; BSR set to: 0
 42868                           ;doprnt.c: 825: if(flag & (0x700)) {
 42869                           
 42870                           ; BSR set to: 0
 42871  013072  0E07               	movlw	7
 42872  013074  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 42873  013076  B4D8               	btfsc	status,2,c
 42874  013078  EF2E  F09D         	goto	i2l1991
 42875                           
 42876                           ; BSR set to: 0
 42877                           ;doprnt.c: 827: if(flag & 0x1000)
 42878  01307C  A9AE               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 42879  01307E  D004               	goto	i2l1992
 42880                           
 42881                           ; BSR set to: 0
 42882                           ;doprnt.c: 829: prec = 6;
 42883  013080  0E00               	movlw	0
 42884  013082  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 42885  013084  0E06               	movlw	6
 42886  013086  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 42887  013088                     i2l1992:
 42888                           
 42889                           ; BSR set to: 0
 42890                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 42891                           
 42892                           ; BSR set to: 0
 42893  013088  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 42894  01308C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 42895  013090  CFDF F08E          	movff	indf2,??i2__doprnt
 42896  013094  0E04               	movlw	4
 42897  013096  26DE               	addwf	postinc2,f,c
 42898  013098  CFDF F08F          	movff	indf2,??i2__doprnt+1
 42899  01309C  0E00               	movlw	0
 42900  01309E  22DD               	addwfc	postdec2,f,c
 42901  0130A0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 42902  0130A4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 42903  0130A8  CFDE F0A3          	movff	postinc2,i2__doprnt@fval
 42904  0130AC  CFDE F0A4          	movff	postinc2,i2__doprnt@fval+1
 42905  0130B0  CFDE F0A5          	movff	postinc2,i2__doprnt@fval+2
 42906  0130B4  CFDE F0A6          	movff	postinc2,i2__doprnt@fval+3
 42907                           
 42908                           ; BSR set to: 0
 42909                           ;doprnt.c: 831: if(fval < 0.0) {
 42910  0130B8  AFA6               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 42911  0130BA  D015               	goto	i2l1993
 42912                           
 42913                           ; BSR set to: 0
 42914                           ;doprnt.c: 832: fval = -fval;
 42915  0130BC  C0A3  F02C         	movff	i2__doprnt@fval,i2___flneg@f1
 42916  0130C0  C0A4  F02D         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 42917  0130C4  C0A5  F02E         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 42918  0130C8  C0A6  F02F         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 42919  0130CC  ECB0  F0D6         	call	i2___flneg
 42920  0130D0  C02C  F0A3         	movff	?i2___flneg,i2__doprnt@fval
 42921  0130D4  C02D  F0A4         	movff	?i2___flneg+1,i2__doprnt@fval+1
 42922  0130D8  C02E  F0A5         	movff	?i2___flneg+2,i2__doprnt@fval+2
 42923  0130DC  C02F  F0A6         	movff	?i2___flneg+3,i2__doprnt@fval+3
 42924                           
 42925                           ;doprnt.c: 833: flag |= 0x03;
 42926  0130E0  0E03               	movlw	3
 42927  0130E2  0100               	movlb	0	; () banked
 42928  0130E4  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 42929  0130E6                     i2l1993:
 42930                           
 42931                           ; BSR set to: 0
 42932                           ;doprnt.c: 834: }
 42933                           ;doprnt.c: 835: exp = 0;
 42934                           
 42935                           ; BSR set to: 0
 42936  0130E6  0E00               	movlw	0
 42937  0130E8  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 42938  0130EA  0E00               	movlw	0
 42939  0130EC  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42940                           
 42941                           ; BSR set to: 0
 42942                           ;doprnt.c: 836: if( fval!=0) {
 42943  0130EE  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 42944  0130F0  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 42945  0130F2  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 42946  0130F4  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 42947  0130F6  B4D8               	btfsc	status,2,c
 42948  0130F8  D082               	goto	i2l1998
 42949                           
 42950                           ; BSR set to: 0
 42951                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 42952  0130FA  35A5               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 42953  0130FC  35A6               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 42954  0130FE  0F82               	addlw	130
 42955  013100  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 42956  013102  6B9E               	clrf	(i2__doprnt@exp+1)& (0+255),b
 42957  013104  0EFF               	movlw	255
 42958  013106  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 42959                           
 42960                           ; BSR set to: 0
 42961                           ;doprnt.c: 838: exp--;
 42962  013108  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42963  01310A  A0D8               	btfss	status,0,c
 42964  01310C  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42965                           
 42966                           ; BSR set to: 0
 42967                           ;doprnt.c: 839: exp *= 3;
 42968  01310E  C09D  F001         	movff	i2__doprnt@exp,i2___wmul@multiplier
 42969  013112  C09E  F002         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 42970  013116  0E00               	movlw	0
 42971  013118  6E04               	movwf	i2___wmul@multiplicand+1,c
 42972  01311A  0E03               	movlw	3
 42973  01311C  6E03               	movwf	i2___wmul@multiplicand,c
 42974  01311E  EC51  F0D7         	call	i2___wmul	;wreg free
 42975  013122  C001  F09D         	movff	?i2___wmul,i2__doprnt@exp
 42976  013126  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@exp+1
 42977                           
 42978                           ;doprnt.c: 840: exp /= 10;
 42979  01312A  C09D  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 42980  01312E  C09E  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 42981  013132  0E00               	movlw	0
 42982  013134  6E0A               	movwf	i2___awdiv@divisor+1,c
 42983  013136  0E0A               	movlw	10
 42984  013138  6E09               	movwf	i2___awdiv@divisor,c
 42985  01313A  ECAA  F0CD         	call	i2___awdiv	;wreg free
 42986  01313E  C007  F09D         	movff	?i2___awdiv,i2__doprnt@exp
 42987  013142  C008  F09E         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 42988                           
 42989                           ;doprnt.c: 841: if(exp < 0)
 42990  013146  0100               	movlb	0	; () banked
 42991  013148  AF9E               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 42992  01314A  D003               	goto	i2l1995
 42993                           
 42994                           ; BSR set to: 0
 42995                           ;doprnt.c: 842: exp--;
 42996  01314C  079D               	decf	i2__doprnt@exp& (0+255),f,b
 42997  01314E  A0D8               	btfss	status,0,c
 42998  013150  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 42999  013152                     i2l1995:
 43000                           
 43001                           ; BSR set to: 0
 43002                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 43003                           
 43004                           ; BSR set to: 0
 43005  013152  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43006  013154  0800               	sublw	0
 43007  013156  ECF0  F0A7         	call	i2_scale
 43008  01315A  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 43009  01315E  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 43010  013162  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 43011  013166  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 43012                           
 43013                           ;doprnt.c: 847: tmpval.integ *= fval;
 43014  01316A  C09F  F030         	movff	i2__doprnt@tmpval,i2___flmul@b
 43015  01316E  C0A0  F031         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 43016  013172  C0A1  F032         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 43017  013176  C0A2  F033         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 43018  01317A  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 43019  01317E  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 43020  013182  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 43021  013186  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 43022  01318A  EC8D  F0AD         	call	i2___flmul	;wreg free
 43023  01318E  C030  F09F         	movff	?i2___flmul,i2__doprnt@tmpval
 43024  013192  C031  F0A0         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 43025  013196  C032  F0A1         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 43026  01319A  C033  F0A2         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 43027                           
 43028                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 43029  01319E  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 43030  0131A2  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 43031  0131A6  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 43032  0131AA  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 43033  0131AE  0E00               	movlw	0
 43034  0131B0  6E38               	movwf	i2___flge@ff2,c
 43035  0131B2  0E00               	movlw	0
 43036  0131B4  6E39               	movwf	i2___flge@ff2+1,c
 43037  0131B6  0E80               	movlw	128
 43038  0131B8  6E3A               	movwf	i2___flge@ff2+2,c
 43039  0131BA  0E3F               	movlw	63
 43040  0131BC  6E3B               	movwf	i2___flge@ff2+3,c
 43041  0131BE  ECE3  F0C6         	call	i2___flge	;wreg free
 43042  0131C2  B0D8               	btfsc	status,0,c
 43043  0131C4  D005               	goto	i2l1996
 43044                           
 43045                           ;doprnt.c: 849: exp--;
 43046  0131C6  0100               	movlb	0	; () banked
 43047  0131C8  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43048  0131CA  A0D8               	btfss	status,0,c
 43049  0131CC  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43050  0131CE  D017               	goto	i2l1998
 43051  0131D0                     i2l1996:
 43052                           
 43053                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 43054                           
 43055                           ; BSR set to: 0
 43056  0131D0  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 43057  0131D4  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 43058  0131D8  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 43059  0131DC  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 43060  0131E0  0E00               	movlw	0
 43061  0131E2  6E38               	movwf	i2___flge@ff2,c
 43062  0131E4  0E00               	movlw	0
 43063  0131E6  6E39               	movwf	i2___flge@ff2+1,c
 43064  0131E8  0E20               	movlw	32
 43065  0131EA  6E3A               	movwf	i2___flge@ff2+2,c
 43066  0131EC  0E41               	movlw	65
 43067  0131EE  6E3B               	movwf	i2___flge@ff2+3,c
 43068  0131F0  ECE3  F0C6         	call	i2___flge	;wreg free
 43069  0131F4  A0D8               	btfss	status,0,c
 43070  0131F6  D003               	goto	i2l1998
 43071                           
 43072                           ;doprnt.c: 851: exp++;
 43073  0131F8  0100               	movlb	0	; () banked
 43074  0131FA  4B9D               	infsnz	i2__doprnt@exp& (0+255),f,b
 43075  0131FC  2B9E               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 43076  0131FE                     i2l1998:
 43077                           
 43078                           ;doprnt.c: 852: }
 43079                           ;doprnt.c: 1112: if(prec <= 12)
 43080                           
 43081                           ; BSR set to: 0
 43082                           
 43083                           ; BSR set to: 0
 43084                           
 43085                           ; BSR set to: 0
 43086  0131FE  0100               	movlb	0	; () banked
 43087  013200  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 43088  013202  D006               	goto	i2u3255_40
 43089  013204  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43090  013206  E121               	bnz	i2l22503
 43091  013208  0E0D               	movlw	13
 43092  01320A  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43093  01320C  B0D8               	btfsc	status,0,c
 43094  01320E  D01D               	goto	i2l1999
 43095  013210                     i2u3255_40:
 43096                           
 43097                           ; BSR set to: 0
 43098                           ;doprnt.c: 1113: fval += fround(prec);
 43099  013210  C0A3  F056         	movff	i2__doprnt@fval,i2___fladd@b
 43100  013214  C0A4  F057         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 43101  013218  C0A5  F058         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 43102  01321C  C0A6  F059         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 43103  013220  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43104  013222  ECEE  F0BA         	call	i2_fround
 43105  013226  C049  F05A         	movff	?i2_fround,i2___fladd@a
 43106  01322A  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 43107  01322E  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 43108  013232  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 43109  013236  ECD4  F0B0         	call	i2___fladd	;wreg free
 43110  01323A  C056  F0A3         	movff	?i2___fladd,i2__doprnt@fval
 43111  01323E  C057  F0A4         	movff	?i2___fladd+1,i2__doprnt@fval+1
 43112  013242  C058  F0A5         	movff	?i2___fladd+2,i2__doprnt@fval+2
 43113  013246  C059  F0A6         	movff	?i2___fladd+3,i2__doprnt@fval+3
 43114  01324A                     i2l1999:
 43115  01324A                     i2l22503:
 43116                           
 43117                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 43118  01324A  0100               	movlb	0	; () banked
 43119  01324C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43120  01324E  D006               	goto	i2u3256_40
 43121  013250  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43122  013252  E122               	bnz	i2l22511
 43123  013254  0E0A               	movlw	10
 43124  013256  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 43125  013258  B0D8               	btfsc	status,0,c
 43126  01325A  D01E               	goto	i2u3259_40
 43127  01325C                     i2u3256_40:
 43128                           
 43129                           ; BSR set to: 0
 43130  01325C  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 43131  01325E  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 43132  013260  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 43133  013262  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 43134  013264  B4D8               	btfsc	status,2,c
 43135  013266  D063               	goto	i2l2000
 43136                           
 43137                           ; BSR set to: 0
 43138  013268  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 43139  01326C  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 43140  013270  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 43141  013274  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 43142  013278  EC6F  F0C9         	call	i2___fltol	;wreg free
 43143  01327C  0100               	movlb	0	; () banked
 43144  01327E  516C               	movf	?i2___fltol& (0+255),w,b
 43145  013280  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 43146  013282  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 43147  013284  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 43148  013286  B4D8               	btfsc	status,2,c
 43149                           
 43150                           ; BSR set to: 0
 43151  013288  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43152  01328A  D051               	goto	i2l2000
 43153  01328C  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43154  01328E  E104               	bnz	i2l22511
 43155  013290  0E02               	movlw	2
 43156  013292  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 43157  013294  A0D8               	btfss	status,0,c
 43158  013296  D04B               	goto	i2l2000
 43159  013298                     i2u3259_40:
 43160  013298                     i2l22511:
 43161                           
 43162                           ; BSR set to: 0
 43163                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 43164  013298  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 43165  01329C  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 43166  0132A0  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 43167  0132A4  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 43168  0132A8  0E5F               	movlw	95
 43169  0132AA  6E38               	movwf	i2___flge@ff2,c
 43170  0132AC  0E70               	movlw	112
 43171  0132AE  6E39               	movwf	i2___flge@ff2+1,c
 43172  0132B0  0E89               	movlw	137
 43173  0132B2  6E3A               	movwf	i2___flge@ff2+2,c
 43174  0132B4  0E40               	movlw	64
 43175  0132B6  6E3B               	movwf	i2___flge@ff2+3,c
 43176  0132B8  ECE3  F0C6         	call	i2___flge	;wreg free
 43177  0132BC  B0D8               	btfsc	status,0,c
 43178  0132BE  D003               	goto	i2l2003
 43179                           
 43180                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 43181  0132C0  0100               	movlb	0	; () banked
 43182  0132C2  0EF7               	movlw	247
 43183  0132C4  D002               	goto	L18
 43184  0132C6                     i2l2003:
 43185                           
 43186                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 43187                           
 43188                           ; BSR set to: 0
 43189  0132C6  0100               	movlb	0	; () banked
 43190  0132C8  0EF8               	movlw	248
 43191  0132CA                     L18:
 43192  0132CA  279D               	addwf	i2__doprnt@exp& (0+255),f,b
 43193  0132CC  0EFF               	movlw	255
 43194  0132CE  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 43195                           
 43196                           ; BSR set to: 0
 43197                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 43198                           
 43199                           ; BSR set to: 0
 43200  0132D0  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43201  0132D2  ECF0  F0A7         	call	i2_scale
 43202  0132D6  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 43203  0132DA  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 43204  0132DE  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 43205  0132E2  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 43206  0132E6  C0A3  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 43207  0132EA  C0A4  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 43208  0132EE  C0A5  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 43209  0132F2  C0A6  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 43210  0132F6  C09F  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 43211  0132FA  C0A0  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 43212  0132FE  C0A1  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 43213  013302  C0A2  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 43214  013306  EC99  F0C4         	call	i2__div_to_l_	;wreg free
 43215  01330A  C001  F0A7         	movff	?i2__div_to_l_,i2__doprnt@val
 43216  01330E  C002  F0A8         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 43217  013312  C003  F0A9         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 43218  013316  C004  F0AA         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 43219                           
 43220                           ;doprnt.c: 1129: fval = 0.0;
 43221  01331A  0E00               	movlw	0
 43222  01331C  0100               	movlb	0	; () banked
 43223  01331E  6FA3               	movwf	i2__doprnt@fval& (0+255),b
 43224  013320  0E00               	movlw	0
 43225  013322  6FA4               	movwf	(i2__doprnt@fval+1)& (0+255),b
 43226  013324  0E00               	movlw	0
 43227  013326  6FA5               	movwf	(i2__doprnt@fval+2)& (0+255),b
 43228  013328  0E00               	movlw	0
 43229  01332A  6FA6               	movwf	(i2__doprnt@fval+3)& (0+255),b
 43230                           
 43231                           ;doprnt.c: 1130: } else {
 43232  01332C  D03C               	goto	i2l2009
 43233  01332E                     i2l2000:
 43234                           
 43235                           ; BSR set to: 0
 43236                           ;doprnt.c: 1131: val = (unsigned long)fval;
 43237                           
 43238                           ; BSR set to: 0
 43239  01332E  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 43240  013332  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 43241  013336  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 43242  01333A  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 43243  01333E  EC6F  F0C9         	call	i2___fltol	;wreg free
 43244  013342  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 43245  013346  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 43246  01334A  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 43247  01334E  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 43248                           
 43249                           ;doprnt.c: 1132: fval -= (double)val;
 43250  013352  C0A3  F080         	movff	i2__doprnt@fval,i2___flsub@b
 43251  013356  C0A4  F081         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 43252  01335A  C0A5  F082         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 43253  01335E  C0A6  F083         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 43254  013362  C0A7  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 43255  013366  C0A8  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 43256  01336A  C0A9  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 43257  01336E  C0AA  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 43258  013372  0E00               	movlw	0
 43259  013374  EC8E  F0C1         	call	i2___xxtofl
 43260  013378  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 43261  01337C  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 43262  013380  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 43263  013384  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 43264  013388  EC9F  F0D3         	call	i2___flsub	;wreg free
 43265  01338C  C080  F0A3         	movff	?i2___flsub,i2__doprnt@fval
 43266  013390  C081  F0A4         	movff	?i2___flsub+1,i2__doprnt@fval+1
 43267  013394  C082  F0A5         	movff	?i2___flsub+2,i2__doprnt@fval+2
 43268  013398  C083  F0A6         	movff	?i2___flsub+3,i2__doprnt@fval+3
 43269                           
 43270                           ;doprnt.c: 1133: exp = 0;
 43271  01339C  0E00               	movlw	0
 43272  01339E  0100               	movlb	0	; () banked
 43273  0133A0  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 43274  0133A2  0E00               	movlw	0
 43275  0133A4  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 43276  0133A6                     i2l2009:
 43277                           
 43278                           ; BSR set to: 0
 43279                           ;doprnt.c: 1134: }
 43280                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 43281                           
 43282                           ; BSR set to: 0
 43283  0133A6  0E01               	movlw	1
 43284  0133A8  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43285  0133AA                     i2l22531:
 43286                           
 43287                           ; BSR set to: 0
 43288  0133AA  0E0A               	movlw	10
 43289  0133AC  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 43290  0133AE  B4D8               	btfsc	status,2,c
 43291  0133B0  D01B               	goto	i2u3263_40
 43292                           
 43293                           ; BSR set to: 0
 43294                           ;doprnt.c: 1137: if(val < dpowers[c])
 43295                           
 43296                           ; BSR set to: 0
 43297                           
 43298                           ; BSR set to: 0
 43299  0133B2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43300  0133B4  0D04               	mullw	4
 43301  0133B6  0E0B               	movlw	low _dpowers
 43302  0133B8  24F3               	addwf	prodl,w,c
 43303  0133BA  6EF6               	movwf	tblptrl,c
 43304  0133BC  0ECF               	movlw	high _dpowers
 43305  0133BE  20F4               	addwfc	prodh,w,c
 43306  0133C0  6EF7               	movwf	tblptrh,c
 43307  0133C2                     	if	1	;There are 3 active tblptr bytes
 43308  0133C2  6AF8               	clrf	tblptru,c
 43309  0133C4  0E00               	movlw	low (__mediumconst shr (0+16))
 43310  0133C6  22F8               	addwfc	tblptru,f,c
 43311  0133C8                     	endif
 43312  0133C8  0009               	tblrd		*+
 43313  0133CA  50F5               	movf	tablat,w,c
 43314  0133CC  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 43315  0133CE  0009               	tblrd		*+
 43316  0133D0  50F5               	movf	tablat,w,c
 43317  0133D2  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 43318  0133D4  0009               	tblrd		*+
 43319  0133D6  50F5               	movf	tablat,w,c
 43320  0133D8  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 43321  0133DA  0009               	tblrd		*+
 43322  0133DC  50F5               	movf	tablat,w,c
 43323  0133DE  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 43324  0133E0  A0D8               	btfss	status,0,c
 43325  0133E2  D002               	goto	i2u3263_40
 43326                           
 43327                           ; BSR set to: 0
 43328                           
 43329                           ; BSR set to: 0
 43330                           
 43331                           ; BSR set to: 0
 43332                           ;doprnt.c: 1138: break;
 43333  0133E4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 43334  0133E6  D7E1               	goto	i2l22531
 43335  0133E8                     i2u3263_40:
 43336                           
 43337                           ; BSR set to: 0
 43338                           ;doprnt.c: 1142: width -= prec + c + exp;
 43339                           
 43340                           ; BSR set to: 0
 43341  0133E8  C0B1  F08E         	movff	i2__doprnt@c,??i2__doprnt
 43342  0133EC  6B8F               	clrf	(??i2__doprnt+1)& (0+255),b
 43343  0133EE  BF8E               	btfsc	??i2__doprnt& (0+255),7,b
 43344  0133F0  078F               	decf	(??i2__doprnt+1)& (0+255),f,b
 43345  0133F2  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43346  0133F4  278E               	addwf	??i2__doprnt& (0+255),f,b
 43347  0133F6  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43348  0133F8  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 43349  0133FA  519D               	movf	i2__doprnt@exp& (0+255),w,b
 43350  0133FC  278E               	addwf	??i2__doprnt& (0+255),f,b
 43351  0133FE  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43352  013400  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 43353  013402  518E               	movf	??i2__doprnt& (0+255),w,b
 43354  013404  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 43355  013406  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 43356  013408  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 43357                           
 43358                           ;doprnt.c: 1143: if(
 43359                           ;doprnt.c: 1147: prec)
 43360  01340A  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 43361  01340C  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 43362  01340E  B4D8               	btfsc	status,2,c
 43363  013410  D003               	goto	i2l2013
 43364                           
 43365                           ; BSR set to: 0
 43366                           ;doprnt.c: 1148: width--;
 43367  013412  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43368  013414  A0D8               	btfss	status,0,c
 43369  013416  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43370  013418                     i2l2013:
 43371                           
 43372                           ; BSR set to: 0
 43373                           ;doprnt.c: 1149: if(flag & 0x03)
 43374                           
 43375                           ; BSR set to: 0
 43376  013418  0E03               	movlw	3
 43377  01341A  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43378  01341C  6F8E               	movwf	??i2__doprnt& (0+255),b
 43379  01341E  0E00               	movlw	0
 43380  013420  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43381  013422  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43382  013424  518E               	movf	??i2__doprnt& (0+255),w,b
 43383  013426  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43384  013428  B4D8               	btfsc	status,2,c
 43385  01342A  D003               	goto	i2l2014
 43386                           
 43387                           ; BSR set to: 0
 43388                           ;doprnt.c: 1150: width--;
 43389  01342C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43390  01342E  A0D8               	btfss	status,0,c
 43391  013430  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43392  013432                     i2l2014:
 43393                           
 43394                           ; BSR set to: 0
 43395                           ;doprnt.c: 1153: if(flag & 0x04) {
 43396                           
 43397                           ; BSR set to: 0
 43398  013432  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 43399  013434  D0B6               	goto	i2l2025
 43400                           
 43401                           ; BSR set to: 0
 43402                           ;doprnt.c: 1157: if(flag & 0x03)
 43403  013436  0E03               	movlw	3
 43404  013438  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43405  01343A  6F8E               	movwf	??i2__doprnt& (0+255),b
 43406  01343C  0E00               	movlw	0
 43407  01343E  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43408  013440  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43409  013442  518E               	movf	??i2__doprnt& (0+255),w,b
 43410  013444  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43411  013446  B4D8               	btfsc	status,2,c
 43412  013448  D06C               	goto	i2l2019
 43413                           
 43414                           ; BSR set to: 0
 43415                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43416  01344A  EE20 F002          	lfsr	2,2
 43417  01344E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43418  013450  26D9               	addwf	fsr2l,f,c
 43419  013452  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43420  013454  22DA               	addwfc	fsr2h,f,c
 43421  013456  50DE               	movf	postinc2,w,c
 43422  013458  10DE               	iorwf	postinc2,w,c
 43423  01345A  10DE               	iorwf	postinc2,w,c
 43424  01345C  B4D8               	btfsc	status,2,c
 43425  01345E  D013               	goto	i2l2017
 43426                           
 43427                           ; BSR set to: 0
 43428  013460  EE20 F002          	lfsr	2,2
 43429  013464  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43430  013466  26D9               	addwf	fsr2l,f,c
 43431  013468  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43432  01346A  22DA               	addwfc	fsr2h,f,c
 43433  01346C  D801               	call	i2u3269_48
 43434  01346E  D059               	goto	i2l2019
 43435  013470                     i2u3269_48:
 43436  013470  0005               	push	
 43437  013472  6EFA               	movwf	pclath,c
 43438  013474  50DE               	movf	postinc2,w,c
 43439  013476  6EFD               	movwf	tosl,c
 43440  013478  50DE               	movf	postinc2,w,c
 43441  01347A  6EFE               	movwf	tosh,c
 43442  01347C  50DE               	movf	postinc2,w,c
 43443  01347E  6EFF               	movwf	tosu,c
 43444  013480  50FA               	movf	pclath,w,c
 43445  013482  0E2D               	movlw	45
 43446  013484  0012               	return		;indir
 43447  013486                     i2l2017:
 43448  013486  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43449  01348A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43450  01348E  CFDE F08E          	movff	postinc2,??i2__doprnt
 43451  013492  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43452  013496  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43453  01349A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43454  01349E  0E2D               	movlw	45
 43455  0134A0  6EDF               	movwf	indf2,c
 43456  0134A2  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43457  0134A6  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43458  0134AA  2ADE               	incf	postinc2,f,c
 43459  0134AC  0E00               	movlw	0
 43460  0134AE  22DD               	addwfc	postdec2,f,c
 43461                           
 43462                           ;doprnt.c: 1168: while(width > 0) {
 43463  0134B0  D038               	goto	i2l2019
 43464  0134B2                     i2l22563:
 43465                           
 43466                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43467  0134B2  0100               	movlb	0	; () banked
 43468  0134B4  EE20 F002          	lfsr	2,2
 43469  0134B8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43470  0134BA  26D9               	addwf	fsr2l,f,c
 43471  0134BC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43472  0134BE  22DA               	addwfc	fsr2h,f,c
 43473  0134C0  50DE               	movf	postinc2,w,c
 43474  0134C2  10DE               	iorwf	postinc2,w,c
 43475  0134C4  10DE               	iorwf	postinc2,w,c
 43476  0134C6  B4D8               	btfsc	status,2,c
 43477  0134C8  D013               	goto	i2l2021
 43478                           
 43479                           ; BSR set to: 0
 43480  0134CA  EE20 F002          	lfsr	2,2
 43481  0134CE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43482  0134D0  26D9               	addwf	fsr2l,f,c
 43483  0134D2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43484  0134D4  22DA               	addwfc	fsr2h,f,c
 43485  0134D6  D801               	call	i2u3271_48
 43486  0134D8  D020               	goto	i2l2022
 43487  0134DA                     i2u3271_48:
 43488  0134DA  0005               	push	
 43489  0134DC  6EFA               	movwf	pclath,c
 43490  0134DE  50DE               	movf	postinc2,w,c
 43491  0134E0  6EFD               	movwf	tosl,c
 43492  0134E2  50DE               	movf	postinc2,w,c
 43493  0134E4  6EFE               	movwf	tosh,c
 43494  0134E6  50DE               	movf	postinc2,w,c
 43495  0134E8  6EFF               	movwf	tosu,c
 43496  0134EA  50FA               	movf	pclath,w,c
 43497  0134EC  0E30               	movlw	48
 43498  0134EE  0012               	return		;indir
 43499  0134F0                     i2l2021:
 43500  0134F0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43501  0134F4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43502  0134F8  CFDE F08E          	movff	postinc2,??i2__doprnt
 43503  0134FC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43504  013500  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43505  013504  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43506  013508  0E30               	movlw	48
 43507  01350A  6EDF               	movwf	indf2,c
 43508  01350C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43509  013510  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43510  013514  2ADE               	incf	postinc2,f,c
 43511  013516  0E00               	movlw	0
 43512  013518  22DD               	addwfc	postdec2,f,c
 43513  01351A                     i2l2022:
 43514                           
 43515                           ;doprnt.c: 1170: width--;
 43516  01351A  0100               	movlb	0	; () banked
 43517  01351C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43518  01351E  A0D8               	btfss	status,0,c
 43519  013520  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43520  013522                     i2l2019:
 43521                           
 43522                           ; BSR set to: 0
 43523  013522  0100               	movlb	0	; () banked
 43524  013524  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 43525  013526  D0F5               	goto	i2l2036
 43526  013528  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43527  01352A  E1C3               	bnz	i2l22563
 43528  01352C  05AB               	decf	i2__doprnt@width& (0+255),w,b
 43529  01352E  A0D8               	btfss	status,0,c
 43530  013530  D0F0               	goto	i2l2036
 43531  013532  D7BF               	goto	i2l2020
 43532  013534                     i2l22575:
 43533                           
 43534                           ; BSR set to: 0
 43535                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 43536  013534  EE20 F002          	lfsr	2,2
 43537  013538  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43538  01353A  26D9               	addwf	fsr2l,f,c
 43539  01353C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43540  01353E  22DA               	addwfc	fsr2h,f,c
 43541  013540  50DE               	movf	postinc2,w,c
 43542  013542  10DE               	iorwf	postinc2,w,c
 43543  013544  10DE               	iorwf	postinc2,w,c
 43544  013546  B4D8               	btfsc	status,2,c
 43545  013548  D013               	goto	i2l2027
 43546                           
 43547                           ; BSR set to: 0
 43548  01354A  EE20 F002          	lfsr	2,2
 43549  01354E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43550  013550  26D9               	addwf	fsr2l,f,c
 43551  013552  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43552  013554  22DA               	addwfc	fsr2h,f,c
 43553  013556  D801               	call	i2u3274_48
 43554  013558  D020               	goto	i2l2028
 43555  01355A                     i2u3274_48:
 43556  01355A  0005               	push	
 43557  01355C  6EFA               	movwf	pclath,c
 43558  01355E  50DE               	movf	postinc2,w,c
 43559  013560  6EFD               	movwf	tosl,c
 43560  013562  50DE               	movf	postinc2,w,c
 43561  013564  6EFE               	movwf	tosh,c
 43562  013566  50DE               	movf	postinc2,w,c
 43563  013568  6EFF               	movwf	tosu,c
 43564  01356A  50FA               	movf	pclath,w,c
 43565  01356C  0E20               	movlw	32
 43566  01356E  0012               	return		;indir
 43567  013570                     i2l2027:
 43568  013570  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43569  013574  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43570  013578  CFDE F08E          	movff	postinc2,??i2__doprnt
 43571  01357C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43572  013580  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43573  013584  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43574  013588  0E20               	movlw	32
 43575  01358A  6EDF               	movwf	indf2,c
 43576  01358C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43577  013590  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43578  013594  2ADE               	incf	postinc2,f,c
 43579  013596  0E00               	movlw	0
 43580  013598  22DD               	addwfc	postdec2,f,c
 43581  01359A                     i2l2028:
 43582                           
 43583                           ;doprnt.c: 1182: width--;
 43584  01359A  0100               	movlb	0	; () banked
 43585  01359C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 43586  01359E  A0D8               	btfss	status,0,c
 43587  0135A0  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 43588  0135A2                     i2l2025:
 43589                           
 43590                           ; BSR set to: 0
 43591                           
 43592                           ; BSR set to: 0
 43593  0135A2  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 43594  0135A4  D005               	goto	i2u3275_40
 43595  0135A6  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 43596  0135A8  E1C5               	bnz	i2l22575
 43597  0135AA  05AB               	decf	i2__doprnt@width& (0+255),w,b
 43598  0135AC  B0D8               	btfsc	status,0,c
 43599  0135AE  D7C2               	goto	i2l2026
 43600  0135B0                     i2u3275_40:
 43601                           
 43602                           ; BSR set to: 0
 43603                           ;doprnt.c: 1183: }
 43604                           ;doprnt.c: 1188: if(flag & 0x03)
 43605                           
 43606                           ; BSR set to: 0
 43607  0135B0  0E03               	movlw	3
 43608  0135B2  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 43609  0135B4  6F8E               	movwf	??i2__doprnt& (0+255),b
 43610  0135B6  0E00               	movlw	0
 43611  0135B8  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 43612  0135BA  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 43613  0135BC  518E               	movf	??i2__doprnt& (0+255),w,b
 43614  0135BE  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 43615  0135C0  B4D8               	btfsc	status,2,c
 43616  0135C2  D0A7               	goto	i2l2036
 43617                           
 43618                           ; BSR set to: 0
 43619                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 43620  0135C4  EE20 F002          	lfsr	2,2
 43621  0135C8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43622  0135CA  26D9               	addwf	fsr2l,f,c
 43623  0135CC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43624  0135CE  22DA               	addwfc	fsr2h,f,c
 43625  0135D0  50DE               	movf	postinc2,w,c
 43626  0135D2  10DE               	iorwf	postinc2,w,c
 43627  0135D4  10DE               	iorwf	postinc2,w,c
 43628  0135D6  B4D8               	btfsc	status,2,c
 43629  0135D8  D013               	goto	i2l2031
 43630                           
 43631                           ; BSR set to: 0
 43632  0135DA  EE20 F002          	lfsr	2,2
 43633  0135DE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43634  0135E0  26D9               	addwf	fsr2l,f,c
 43635  0135E2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43636  0135E4  22DA               	addwfc	fsr2h,f,c
 43637  0135E6  D801               	call	i2u3278_48
 43638  0135E8  D094               	goto	i2l2036
 43639  0135EA                     i2u3278_48:
 43640  0135EA  0005               	push	
 43641  0135EC  6EFA               	movwf	pclath,c
 43642  0135EE  50DE               	movf	postinc2,w,c
 43643  0135F0  6EFD               	movwf	tosl,c
 43644  0135F2  50DE               	movf	postinc2,w,c
 43645  0135F4  6EFE               	movwf	tosh,c
 43646  0135F6  50DE               	movf	postinc2,w,c
 43647  0135F8  6EFF               	movwf	tosu,c
 43648  0135FA  50FA               	movf	pclath,w,c
 43649  0135FC  0E2D               	movlw	45
 43650  0135FE  0012               	return		;indir
 43651  013600                     i2l2031:
 43652  013600  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43653  013604  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43654  013608  CFDE F08E          	movff	postinc2,??i2__doprnt
 43655  01360C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43656  013610  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43657  013614  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43658  013618  0E2D               	movlw	45
 43659  01361A  D073               	goto	L19
 43660  01361C                     
 43661                           ;doprnt.c: 1200: {
 43662                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 43663  01361C  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43664  013620  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43665  013624  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43666  013628  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43667  01362C  0100               	movlb	0	; () banked
 43668  01362E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43669  013630  0D04               	mullw	4
 43670  013632  0E0B               	movlw	low _dpowers
 43671  013634  24F3               	addwf	prodl,w,c
 43672  013636  6EF6               	movwf	tblptrl,c
 43673  013638  0ECF               	movlw	high _dpowers
 43674  01363A  20F4               	addwfc	prodh,w,c
 43675  01363C  6EF7               	movwf	tblptrh,c
 43676  01363E                     	if	1	;There are 3 active tblptr bytes
 43677  01363E  6AF8               	clrf	tblptru,c
 43678  013640  0E00               	movlw	low (__mediumconst shr (0+16))
 43679  013642  22F8               	addwfc	tblptru,f,c
 43680  013644                     	endif
 43681  013644  0009               	tblrd		*+
 43682  013646  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43683  01364A  0009               	tblrd		*+
 43684  01364C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43685  013650  0009               	tblrd		*+
 43686  013652  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43687  013656  000A               	tblrd		*-
 43688  013658  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43689  01365C  EC2D  F0CE         	call	i2___lldiv
 43690  013660  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 43691  013664  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 43692  013668  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 43693  01366C  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 43694                           
 43695                           ;doprnt.c: 1202: tmpval.vd %= 10;
 43696  013670  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 43697  013674  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 43698  013678  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 43699  01367C  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 43700  013680  0E0A               	movlw	10
 43701  013682  6E12               	movwf	i2___llmod@divisor,c
 43702  013684  0E00               	movlw	0
 43703  013686  6E13               	movwf	i2___llmod@divisor+1,c
 43704  013688  0E00               	movlw	0
 43705  01368A  6E14               	movwf	i2___llmod@divisor+2,c
 43706  01368C  0E00               	movlw	0
 43707  01368E  6E15               	movwf	i2___llmod@divisor+3,c
 43708  013690  EC99  F0D0         	call	i2___llmod	;wreg free
 43709  013694  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 43710  013698  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 43711  01369C  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 43712  0136A0  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 43713                           
 43714                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 43715  0136A4  0100               	movlb	0	; () banked
 43716  0136A6  EE20 F002          	lfsr	2,2
 43717  0136AA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43718  0136AC  26D9               	addwf	fsr2l,f,c
 43719  0136AE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43720  0136B0  22DA               	addwfc	fsr2h,f,c
 43721  0136B2  50DE               	movf	postinc2,w,c
 43722  0136B4  10DE               	iorwf	postinc2,w,c
 43723  0136B6  10DE               	iorwf	postinc2,w,c
 43724  0136B8  B4D8               	btfsc	status,2,c
 43725  0136BA  D014               	goto	i2l2035
 43726                           
 43727                           ; BSR set to: 0
 43728  0136BC  EE20 F002          	lfsr	2,2
 43729  0136C0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43730  0136C2  26D9               	addwf	fsr2l,f,c
 43731  0136C4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43732  0136C6  22DA               	addwfc	fsr2h,f,c
 43733  0136C8  D801               	call	i2u3280_48
 43734  0136CA  D023               	goto	i2l2036
 43735  0136CC                     i2u3280_48:
 43736  0136CC  0005               	push	
 43737  0136CE  6EFA               	movwf	pclath,c
 43738  0136D0  50DE               	movf	postinc2,w,c
 43739  0136D2  6EFD               	movwf	tosl,c
 43740  0136D4  50DE               	movf	postinc2,w,c
 43741  0136D6  6EFE               	movwf	tosh,c
 43742  0136D8  50DE               	movf	postinc2,w,c
 43743  0136DA  6EFF               	movwf	tosu,c
 43744  0136DC  50FA               	movf	pclath,w,c
 43745  0136DE  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43746  0136E0  0F30               	addlw	48
 43747  0136E2  0012               	return		;indir
 43748  0136E4                     i2l2035:
 43749  0136E4  0100               	movlb	0	; () banked
 43750  0136E6  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 43751  0136E8  0F30               	addlw	48
 43752  0136EA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43753  0136EE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43754  0136F2  CFDE F08E          	movff	postinc2,??i2__doprnt
 43755  0136F6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43756  0136FA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43757  0136FE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43758  013702                     L19:
 43759  013702  6EDF               	movwf	indf2,c
 43760  013704  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43761  013708  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43762  01370C  2ADE               	incf	postinc2,f,c
 43763  01370E  0E00               	movlw	0
 43764  013710  22DD               	addwfc	postdec2,f,c
 43765  013712                     i2l2036:
 43766                           
 43767                           ; BSR set to: 0
 43768                           
 43769                           ; BSR set to: 0
 43770  013712  0100               	movlb	0	; () banked
 43771  013714  07B1               	decf	i2__doprnt@c& (0+255),f,b
 43772  013716  29B1               	incf	i2__doprnt@c& (0+255),w,b
 43773  013718  B4D8               	btfsc	status,2,c
 43774  01371A  D038               	goto	i2l2038
 43775  01371C  D77F               	goto	i2l2034
 43776  01371E                     i2l22609:
 43777                           
 43778                           ; BSR set to: 0
 43779                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 43780  01371E  EE20 F002          	lfsr	2,2
 43781  013722  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43782  013724  26D9               	addwf	fsr2l,f,c
 43783  013726  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43784  013728  22DA               	addwfc	fsr2h,f,c
 43785  01372A  50DE               	movf	postinc2,w,c
 43786  01372C  10DE               	iorwf	postinc2,w,c
 43787  01372E  10DE               	iorwf	postinc2,w,c
 43788  013730  B4D8               	btfsc	status,2,c
 43789  013732  D013               	goto	i2l2040
 43790                           
 43791                           ; BSR set to: 0
 43792  013734  EE20 F002          	lfsr	2,2
 43793  013738  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43794  01373A  26D9               	addwf	fsr2l,f,c
 43795  01373C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43796  01373E  22DA               	addwfc	fsr2h,f,c
 43797  013740  D801               	call	i2u3283_48
 43798  013742  D020               	goto	i2l2041
 43799  013744                     i2u3283_48:
 43800  013744  0005               	push	
 43801  013746  6EFA               	movwf	pclath,c
 43802  013748  50DE               	movf	postinc2,w,c
 43803  01374A  6EFD               	movwf	tosl,c
 43804  01374C  50DE               	movf	postinc2,w,c
 43805  01374E  6EFE               	movwf	tosh,c
 43806  013750  50DE               	movf	postinc2,w,c
 43807  013752  6EFF               	movwf	tosu,c
 43808  013754  50FA               	movf	pclath,w,c
 43809  013756  0E30               	movlw	48
 43810  013758  0012               	return		;indir
 43811  01375A                     i2l2040:
 43812  01375A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43813  01375E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43814  013762  CFDE F08E          	movff	postinc2,??i2__doprnt
 43815  013766  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43816  01376A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43817  01376E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43818  013772  0E30               	movlw	48
 43819  013774  6EDF               	movwf	indf2,c
 43820  013776  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43821  01377A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43822  01377E  2ADE               	incf	postinc2,f,c
 43823  013780  0E00               	movlw	0
 43824  013782  22DD               	addwfc	postdec2,f,c
 43825  013784                     i2l2041:
 43826                           
 43827                           ;doprnt.c: 1209: exp--;
 43828  013784  0100               	movlb	0	; () banked
 43829  013786  079D               	decf	i2__doprnt@exp& (0+255),f,b
 43830  013788  A0D8               	btfss	status,0,c
 43831  01378A  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 43832  01378C                     i2l2038:
 43833                           
 43834                           ; BSR set to: 0
 43835                           
 43836                           ; BSR set to: 0
 43837  01378C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 43838  01378E  D005               	goto	i2u3284_40
 43839  013790  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 43840  013792  E1C5               	bnz	i2l22609
 43841  013794  059D               	decf	i2__doprnt@exp& (0+255),w,b
 43842  013796  B0D8               	btfsc	status,0,c
 43843  013798  D7C2               	goto	i2l2039
 43844  01379A                     i2u3284_40:
 43845                           
 43846                           ; BSR set to: 0
 43847                           ;doprnt.c: 1210: }
 43848                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 43849                           
 43850                           ; BSR set to: 0
 43851  01379A  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 43852  01379C  D009               	goto	i2l2043
 43853  01379E  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 43854  0137A0  E104               	bnz	i2u3285_40
 43855  0137A2  0E09               	movlw	9
 43856  0137A4  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 43857  0137A6  A0D8               	btfss	status,0,c
 43858  0137A8  D003               	goto	i2l2043
 43859  0137AA                     i2u3285_40:
 43860                           
 43861                           ; BSR set to: 0
 43862                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 43863  0137AA  0E08               	movlw	8
 43864  0137AC  6FB1               	movwf	i2__doprnt@c& (0+255),b
 43865  0137AE  D002               	goto	i2l2044
 43866  0137B0                     i2l2043:
 43867                           
 43868                           ; BSR set to: 0
 43869                           ;doprnt.c: 1213: else
 43870                           ;doprnt.c: 1214: c = prec;
 43871  0137B0  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 43872  0137B4                     i2l2044:
 43873                           
 43874                           ; BSR set to: 0
 43875                           ;doprnt.c: 1215: prec -= c;
 43876                           
 43877                           ; BSR set to: 0
 43878  0137B4  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43879  0137B6  5FAF               	subwf	i2__doprnt@prec& (0+255),f,b
 43880  0137B8  0E00               	movlw	0
 43881  0137BA  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 43882  0137BC  0EFF               	movlw	255
 43883  0137BE  5BB0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 43884                           
 43885                           ; BSR set to: 0
 43886                           ;doprnt.c: 1219: if(c)
 43887  0137C0  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43888  0137C2  B4D8               	btfsc	status,2,c
 43889  0137C4  D033               	goto	i2l2047
 43890                           
 43891                           ; BSR set to: 0
 43892                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 43893  0137C6  EE20 F002          	lfsr	2,2
 43894  0137CA  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43895  0137CC  26D9               	addwf	fsr2l,f,c
 43896  0137CE  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43897  0137D0  22DA               	addwfc	fsr2h,f,c
 43898  0137D2  50DE               	movf	postinc2,w,c
 43899  0137D4  10DE               	iorwf	postinc2,w,c
 43900  0137D6  10DE               	iorwf	postinc2,w,c
 43901  0137D8  B4D8               	btfsc	status,2,c
 43902  0137DA  D013               	goto	i2l2046
 43903                           
 43904                           ; BSR set to: 0
 43905  0137DC  EE20 F002          	lfsr	2,2
 43906  0137E0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 43907  0137E2  26D9               	addwf	fsr2l,f,c
 43908  0137E4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 43909  0137E6  22DA               	addwfc	fsr2h,f,c
 43910  0137E8  D801               	call	i2u3288_48
 43911  0137EA  D020               	goto	i2l2047
 43912  0137EC                     i2u3288_48:
 43913  0137EC  0005               	push	
 43914  0137EE  6EFA               	movwf	pclath,c
 43915  0137F0  50DE               	movf	postinc2,w,c
 43916  0137F2  6EFD               	movwf	tosl,c
 43917  0137F4  50DE               	movf	postinc2,w,c
 43918  0137F6  6EFE               	movwf	tosh,c
 43919  0137F8  50DE               	movf	postinc2,w,c
 43920  0137FA  6EFF               	movwf	tosu,c
 43921  0137FC  50FA               	movf	pclath,w,c
 43922  0137FE  0E2E               	movlw	46
 43923  013800  0012               	return		;indir
 43924  013802                     i2l2046:
 43925  013802  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43926  013806  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43927  01380A  CFDE F08E          	movff	postinc2,??i2__doprnt
 43928  01380E  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 43929  013812  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 43930  013816  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 43931  01381A  0E2E               	movlw	46
 43932  01381C  6EDF               	movwf	indf2,c
 43933  01381E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 43934  013822  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 43935  013826  2ADE               	incf	postinc2,f,c
 43936  013828  0E00               	movlw	0
 43937  01382A  22DD               	addwfc	postdec2,f,c
 43938  01382C                     i2l2047:
 43939                           
 43940                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 43941  01382C  0100               	movlb	0	; () banked
 43942  01382E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43943  013830  ECF0  F0A7         	call	i2_scale
 43944  013834  C049  F094         	movff	?i2_scale,i2__doprnt$5434
 43945  013838  C04A  F095         	movff	?i2_scale+1,i2__doprnt$5434+1
 43946  01383C  C04B  F096         	movff	?i2_scale+2,i2__doprnt$5434+2
 43947  013840  C04C  F097         	movff	?i2_scale+3,i2__doprnt$5434+3
 43948                           
 43949                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 43950  013844  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 43951  013848  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 43952  01384C  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 43953  013850  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 43954  013854  C094  F030         	movff	i2__doprnt$5434,i2___flmul@b
 43955  013858  C095  F031         	movff	i2__doprnt$5434+1,i2___flmul@b+1
 43956  01385C  C096  F032         	movff	i2__doprnt$5434+2,i2___flmul@b+2
 43957  013860  C097  F033         	movff	i2__doprnt$5434+3,i2___flmul@b+3
 43958  013864  EC8D  F0AD         	call	i2___flmul	;wreg free
 43959  013868  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 43960  01386C  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 43961  013870  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 43962  013874  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 43963  013878  EC6F  F0C9         	call	i2___fltol	;wreg free
 43964  01387C  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 43965  013880  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 43966  013884  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 43967  013888  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 43968                           
 43969                           ;doprnt.c: 1228: while(c--) {
 43970  01388C  D0A5               	goto	i2l2048
 43971  01388E                     
 43972                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 43973  01388E  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 43974  013892  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 43975  013896  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 43976  01389A  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 43977  01389E  0100               	movlb	0	; () banked
 43978  0138A0  51B1               	movf	i2__doprnt@c& (0+255),w,b
 43979  0138A2  0D04               	mullw	4
 43980  0138A4  0E0B               	movlw	low _dpowers
 43981  0138A6  24F3               	addwf	prodl,w,c
 43982  0138A8  6EF6               	movwf	tblptrl,c
 43983  0138AA  0ECF               	movlw	high _dpowers
 43984  0138AC  20F4               	addwfc	prodh,w,c
 43985  0138AE  6EF7               	movwf	tblptrh,c
 43986  0138B0                     	if	1	;There are 3 active tblptr bytes
 43987  0138B0  6AF8               	clrf	tblptru,c
 43988  0138B2  0E00               	movlw	low (__mediumconst shr (0+16))
 43989  0138B4  22F8               	addwfc	tblptru,f,c
 43990  0138B6                     	endif
 43991  0138B6  0009               	tblrd		*+
 43992  0138B8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 43993  0138BC  0009               	tblrd		*+
 43994  0138BE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 43995  0138C2  0009               	tblrd		*+
 43996  0138C4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 43997  0138C8  000A               	tblrd		*-
 43998  0138CA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 43999  0138CE  EC2D  F0CE         	call	i2___lldiv	;wreg free
 44000  0138D2  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 44001  0138D6  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 44002  0138DA  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 44003  0138DE  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 44004                           
 44005                           ;doprnt.c: 1230: tmpval.vd %= 10;
 44006  0138E2  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 44007  0138E6  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 44008  0138EA  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 44009  0138EE  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 44010  0138F2  0E0A               	movlw	10
 44011  0138F4  6E12               	movwf	i2___llmod@divisor,c
 44012  0138F6  0E00               	movlw	0
 44013  0138F8  6E13               	movwf	i2___llmod@divisor+1,c
 44014  0138FA  0E00               	movlw	0
 44015  0138FC  6E14               	movwf	i2___llmod@divisor+2,c
 44016  0138FE  0E00               	movlw	0
 44017  013900  6E15               	movwf	i2___llmod@divisor+3,c
 44018  013902  EC99  F0D0         	call	i2___llmod	;wreg free
 44019  013906  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 44020  01390A  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 44021  01390E  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 44022  013912  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 44023                           
 44024                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 44025  013916  0100               	movlb	0	; () banked
 44026  013918  EE20 F002          	lfsr	2,2
 44027  01391C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44028  01391E  26D9               	addwf	fsr2l,f,c
 44029  013920  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44030  013922  22DA               	addwfc	fsr2h,f,c
 44031  013924  50DE               	movf	postinc2,w,c
 44032  013926  10DE               	iorwf	postinc2,w,c
 44033  013928  10DE               	iorwf	postinc2,w,c
 44034  01392A  B4D8               	btfsc	status,2,c
 44035  01392C  D014               	goto	i2l2050
 44036                           
 44037                           ; BSR set to: 0
 44038  01392E  EE20 F002          	lfsr	2,2
 44039  013932  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44040  013934  26D9               	addwf	fsr2l,f,c
 44041  013936  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44042  013938  22DA               	addwfc	fsr2h,f,c
 44043  01393A  D801               	call	i2u3290_48
 44044  01393C  D023               	goto	i2l2051
 44045  01393E                     i2u3290_48:
 44046  01393E  0005               	push	
 44047  013940  6EFA               	movwf	pclath,c
 44048  013942  50DE               	movf	postinc2,w,c
 44049  013944  6EFD               	movwf	tosl,c
 44050  013946  50DE               	movf	postinc2,w,c
 44051  013948  6EFE               	movwf	tosh,c
 44052  01394A  50DE               	movf	postinc2,w,c
 44053  01394C  6EFF               	movwf	tosu,c
 44054  01394E  50FA               	movf	pclath,w,c
 44055  013950  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 44056  013952  0F30               	addlw	48
 44057  013954  0012               	return		;indir
 44058  013956                     i2l2050:
 44059  013956  0100               	movlb	0	; () banked
 44060  013958  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 44061  01395A  0F30               	addlw	48
 44062  01395C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44063  013960  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44064  013964  CFDE F08E          	movff	postinc2,??i2__doprnt
 44065  013968  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44066  01396C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44067  013970  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44068  013974  6EDF               	movwf	indf2,c
 44069  013976  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44070  01397A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44071  01397E  2ADE               	incf	postinc2,f,c
 44072  013980  0E00               	movlw	0
 44073  013982  22DD               	addwfc	postdec2,f,c
 44074  013984                     i2l2051:
 44075                           
 44076                           ;doprnt.c: 1232: val %= dpowers[c];
 44077                           
 44078                           ; BSR set to: 0
 44079  013984  C0A7  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 44080  013988  C0A8  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 44081  01398C  C0A9  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 44082  013990  C0AA  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 44083  013994  0100               	movlb	0	; () banked
 44084  013996  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44085  013998  0D04               	mullw	4
 44086  01399A  0E0B               	movlw	low _dpowers
 44087  01399C  24F3               	addwf	prodl,w,c
 44088  01399E  6EF6               	movwf	tblptrl,c
 44089  0139A0  0ECF               	movlw	high _dpowers
 44090  0139A2  20F4               	addwfc	prodh,w,c
 44091  0139A4  6EF7               	movwf	tblptrh,c
 44092  0139A6                     	if	1	;There are 3 active tblptr bytes
 44093  0139A6  6AF8               	clrf	tblptru,c
 44094  0139A8  0E00               	movlw	low (__mediumconst shr (0+16))
 44095  0139AA  22F8               	addwfc	tblptru,f,c
 44096  0139AC                     	endif
 44097  0139AC  0009               	tblrd		*+
 44098  0139AE  CFF5 F012          	movff	tablat,i2___llmod@divisor
 44099  0139B2  0009               	tblrd		*+
 44100  0139B4  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 44101  0139B8  0009               	tblrd		*+
 44102  0139BA  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 44103  0139BE  000A               	tblrd		*-
 44104  0139C0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 44105  0139C4  EC99  F0D0         	call	i2___llmod
 44106  0139C8  C00E  F0A7         	movff	?i2___llmod,i2__doprnt@val
 44107  0139CC  C00F  F0A8         	movff	?i2___llmod+1,i2__doprnt@val+1
 44108  0139D0  C010  F0A9         	movff	?i2___llmod+2,i2__doprnt@val+2
 44109  0139D4  C011  F0AA         	movff	?i2___llmod+3,i2__doprnt@val+3
 44110  0139D8                     i2l2048:
 44111  0139D8  0100               	movlb	0	; () banked
 44112  0139DA  07B1               	decf	i2__doprnt@c& (0+255),f,b
 44113  0139DC  29B1               	incf	i2__doprnt@c& (0+255),w,b
 44114  0139DE  B4D8               	btfsc	status,2,c
 44115  0139E0  D038               	goto	i2l2053
 44116  0139E2  D755               	goto	i2l2049
 44117  0139E4                     
 44118                           ; BSR set to: 0
 44119                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 44120                           
 44121                           ; BSR set to: 0
 44122  0139E4  EE20 F002          	lfsr	2,2
 44123  0139E8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44124  0139EA  26D9               	addwf	fsr2l,f,c
 44125  0139EC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44126  0139EE  22DA               	addwfc	fsr2h,f,c
 44127  0139F0  50DE               	movf	postinc2,w,c
 44128  0139F2  10DE               	iorwf	postinc2,w,c
 44129  0139F4  10DE               	iorwf	postinc2,w,c
 44130  0139F6  B4D8               	btfsc	status,2,c
 44131  0139F8  D013               	goto	i2l2055
 44132                           
 44133                           ; BSR set to: 0
 44134  0139FA  EE20 F002          	lfsr	2,2
 44135  0139FE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44136  013A00  26D9               	addwf	fsr2l,f,c
 44137  013A02  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44138  013A04  22DA               	addwfc	fsr2h,f,c
 44139  013A06  D801               	call	i2u3293_48
 44140  013A08  D020               	goto	i2l2056
 44141  013A0A                     i2u3293_48:
 44142  013A0A  0005               	push	
 44143  013A0C  6EFA               	movwf	pclath,c
 44144  013A0E  50DE               	movf	postinc2,w,c
 44145  013A10  6EFD               	movwf	tosl,c
 44146  013A12  50DE               	movf	postinc2,w,c
 44147  013A14  6EFE               	movwf	tosh,c
 44148  013A16  50DE               	movf	postinc2,w,c
 44149  013A18  6EFF               	movwf	tosu,c
 44150  013A1A  50FA               	movf	pclath,w,c
 44151  013A1C  0E30               	movlw	48
 44152  013A1E  0012               	return		;indir
 44153  013A20                     i2l2055:
 44154  013A20  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44155  013A24  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44156  013A28  CFDE F08E          	movff	postinc2,??i2__doprnt
 44157  013A2C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44158  013A30  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44159  013A34  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44160  013A38  0E30               	movlw	48
 44161  013A3A  6EDF               	movwf	indf2,c
 44162  013A3C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44163  013A40  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44164  013A44  2ADE               	incf	postinc2,f,c
 44165  013A46  0E00               	movlw	0
 44166  013A48  22DD               	addwfc	postdec2,f,c
 44167  013A4A                     i2l2056:
 44168                           
 44169                           ;doprnt.c: 1237: prec--;
 44170  013A4A  0100               	movlb	0	; () banked
 44171  013A4C  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 44172  013A4E  A0D8               	btfss	status,0,c
 44173  013A50  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44174  013A52                     i2l2053:
 44175                           
 44176                           ; BSR set to: 0
 44177                           
 44178                           ; BSR set to: 0
 44179  013A52  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44180  013A54  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 44181  013A56  B4D8               	btfsc	status,2,c
 44182  013A58  D2EC               	goto	i2u3331_40
 44183  013A5A  D7C4               	goto	i2l2054
 44184  013A5C                     i2l1991:
 44185                           
 44186                           ; BSR set to: 0
 44187                           ;doprnt.c: 1246: }
 44188                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 44189                           
 44190                           ; BSR set to: 0
 44191  013A5C  0EC0               	movlw	192
 44192  013A5E  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44193  013A60  6F8E               	movwf	??i2__doprnt& (0+255),b
 44194  013A62  0E00               	movlw	0
 44195  013A64  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44196  013A66  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44197  013A68  518E               	movf	??i2__doprnt& (0+255),w,b
 44198  013A6A  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44199  013A6C  A4D8               	btfss	status,2,c
 44200  013A6E  D041               	goto	i2l2058
 44201                           
 44202                           ; BSR set to: 0
 44203                           ;doprnt.c: 1253: {
 44204                           ;doprnt.c: 1255: if(flag & 0x10)
 44205  013A70  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 44206  013A72  D019               	goto	i2l2059
 44207                           
 44208                           ; BSR set to: 0
 44209                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 44210  013A74  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44211  013A78  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44212  013A7C  CFDF F08E          	movff	indf2,??i2__doprnt
 44213  013A80  0E04               	movlw	4
 44214  013A82  26DE               	addwf	postinc2,f,c
 44215  013A84  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44216  013A88  0E00               	movlw	0
 44217  013A8A  22DD               	addwfc	postdec2,f,c
 44218  013A8C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44219  013A90  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44220  013A94  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44221  013A98  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 44222  013A9C  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 44223  013AA0  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 44224  013AA4  D019               	goto	i2l2060
 44225  013AA6                     i2l2059:
 44226                           
 44227                           ; BSR set to: 0
 44228                           ;doprnt.c: 1257: else
 44229                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 44230                           
 44231                           ; BSR set to: 0
 44232  013AA6  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44233  013AAA  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44234  013AAE  CFDF F08E          	movff	indf2,??i2__doprnt
 44235  013AB2  0E02               	movlw	2
 44236  013AB4  26DE               	addwf	postinc2,f,c
 44237  013AB6  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44238  013ABA  0E00               	movlw	0
 44239  013ABC  22DD               	addwfc	postdec2,f,c
 44240  013ABE  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44241  013AC2  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44242  013AC6  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44243  013ACA  CFDD F0A8          	movff	postdec2,i2__doprnt@val+1
 44244  013ACE  0E00               	movlw	0
 44245  013AD0  BFA8               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 44246  013AD2  0EFF               	movlw	-1
 44247  013AD4  6FA9               	movwf	(i2__doprnt@val+2)& (0+255),b
 44248  013AD6  6FAA               	movwf	(i2__doprnt@val+3)& (0+255),b
 44249  013AD8                     i2l2060:
 44250                           
 44251                           ; BSR set to: 0
 44252                           ;doprnt.c: 1261: if((long)val < 0) {
 44253                           
 44254                           ; BSR set to: 0
 44255  013AD8  AFAA               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 44256  013ADA  D040               	goto	i2l2064
 44257                           
 44258                           ; BSR set to: 0
 44259                           ;doprnt.c: 1262: flag |= 0x03;
 44260  013ADC  0E03               	movlw	3
 44261  013ADE  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 44262                           
 44263                           ; BSR set to: 0
 44264                           ;doprnt.c: 1263: val = -val;
 44265  013AE0  1FAA               	comf	(i2__doprnt@val+3)& (0+255),f,b
 44266  013AE2  1FA9               	comf	(i2__doprnt@val+2)& (0+255),f,b
 44267  013AE4  1FA8               	comf	(i2__doprnt@val+1)& (0+255),f,b
 44268  013AE6  6DA7               	negf	i2__doprnt@val& (0+255),b
 44269  013AE8  0E00               	movlw	0
 44270  013AEA  23A8               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 44271  013AEC  23A9               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 44272  013AEE  23AA               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 44273                           
 44274                           ; BSR set to: 0
 44275                           ;doprnt.c: 1264: }
 44276                           ;doprnt.c: 1266: }
 44277  013AF0  D035               	goto	i2l2064
 44278  013AF2                     i2l2058:
 44279                           
 44280                           ; BSR set to: 0
 44281                           ;doprnt.c: 1268: else
 44282                           ;doprnt.c: 1273: {
 44283                           ;doprnt.c: 1281: if(flag & 0x10)
 44284  013AF2  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 44285  013AF4  D019               	goto	i2l2063
 44286                           
 44287                           ; BSR set to: 0
 44288                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 44289  013AF6  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44290  013AFA  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44291  013AFE  CFDF F08E          	movff	indf2,??i2__doprnt
 44292  013B02  0E04               	movlw	4
 44293  013B04  26DE               	addwf	postinc2,f,c
 44294  013B06  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44295  013B0A  0E00               	movlw	0
 44296  013B0C  22DD               	addwfc	postdec2,f,c
 44297  013B0E  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44298  013B12  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44299  013B16  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 44300  013B1A  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 44301  013B1E  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 44302  013B22  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 44303  013B26  D01A               	goto	i2l2064
 44304  013B28                     i2l2063:
 44305                           
 44306                           ; BSR set to: 0
 44307                           ;doprnt.c: 1283: else
 44308                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 44309                           
 44310                           ; BSR set to: 0
 44311  013B28  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 44312  013B2C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 44313  013B30  CFDF F08E          	movff	indf2,??i2__doprnt
 44314  013B34  0E02               	movlw	2
 44315  013B36  26DE               	addwf	postinc2,f,c
 44316  013B38  CFDF F08F          	movff	indf2,??i2__doprnt+1
 44317  013B3C  0E00               	movlw	0
 44318  013B3E  22DD               	addwfc	postdec2,f,c
 44319  013B40  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44320  013B44  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44321  013B48  CFDE F090          	movff	postinc2,??i2__doprnt+2
 44322  013B4C  CFDD F091          	movff	postdec2,??i2__doprnt+3
 44323  013B50  C090  F0A7         	movff	??i2__doprnt+2,i2__doprnt@val
 44324  013B54  C091  F0A8         	movff	??i2__doprnt+3,i2__doprnt@val+1
 44325  013B58  6BA9               	clrf	(i2__doprnt@val+2)& (0+255),b
 44326  013B5A  6BAA               	clrf	(i2__doprnt@val+3)& (0+255),b
 44327  013B5C                     i2l2064:
 44328                           
 44329                           ; BSR set to: 0
 44330                           ;doprnt.c: 1287: }
 44331                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 44332                           
 44333                           ; BSR set to: 0
 44334                           
 44335                           ; BSR set to: 0
 44336  013B5C  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44337  013B5E  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 44338  013B60  A4D8               	btfss	status,2,c
 44339  013B62  D04B               	goto	i2l2066
 44340                           
 44341                           ; BSR set to: 0
 44342  013B64  51A7               	movf	i2__doprnt@val& (0+255),w,b
 44343  013B66  11A8               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 44344  013B68  11A9               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 44345  013B6A  11AA               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 44346  013B6C  A4D8               	btfss	status,2,c
 44347  013B6E  D045               	goto	i2l2066
 44348                           
 44349                           ; BSR set to: 0
 44350                           ;doprnt.c: 1291: prec++;
 44351  013B70  4BAF               	infsnz	i2__doprnt@prec& (0+255),f,b
 44352  013B72  2BB0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 44353                           
 44354                           ; BSR set to: 0
 44355                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 44356  013B74  D042               	goto	i2l2066
 44357  013B76                     
 44358                           ; BSR set to: 0
 44359                           ;doprnt.c: 1302: case 0xC0:
 44360                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 44361                           
 44362                           ; BSR set to: 0
 44363                           
 44364                           ; BSR set to: 0
 44365  013B76  0E01               	movlw	1
 44366  013B78  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44367  013B7A                     i2l22693:
 44368                           
 44369                           ; BSR set to: 0
 44370  013B7A  0E0A               	movlw	10
 44371  013B7C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 44372  013B7E  B4D8               	btfsc	status,2,c
 44373  013B80  D047               	goto	i2l2072
 44374                           
 44375                           ; BSR set to: 0
 44376                           ;doprnt.c: 1306: if(val < dpowers[c])
 44377                           
 44378                           ; BSR set to: 0
 44379                           
 44380                           ; BSR set to: 0
 44381  013B82  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44382  013B84  0D04               	mullw	4
 44383  013B86  0E0B               	movlw	low _dpowers
 44384  013B88  24F3               	addwf	prodl,w,c
 44385  013B8A  6EF6               	movwf	tblptrl,c
 44386  013B8C  0ECF               	movlw	high _dpowers
 44387  013B8E  20F4               	addwfc	prodh,w,c
 44388  013B90  6EF7               	movwf	tblptrh,c
 44389  013B92                     	if	1	;There are 3 active tblptr bytes
 44390  013B92  6AF8               	clrf	tblptru,c
 44391  013B94  0E00               	movlw	low (__mediumconst shr (0+16))
 44392  013B96  22F8               	addwfc	tblptru,f,c
 44393  013B98                     	endif
 44394  013B98  0009               	tblrd		*+
 44395  013B9A  50F5               	movf	tablat,w,c
 44396  013B9C  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 44397  013B9E  0009               	tblrd		*+
 44398  013BA0  50F5               	movf	tablat,w,c
 44399  013BA2  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 44400  013BA4  0009               	tblrd		*+
 44401  013BA6  50F5               	movf	tablat,w,c
 44402  013BA8  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 44403  013BAA  0009               	tblrd		*+
 44404  013BAC  50F5               	movf	tablat,w,c
 44405  013BAE  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 44406  013BB0  A0D8               	btfss	status,0,c
 44407  013BB2  D02E               	goto	i2l2072
 44408                           
 44409                           ; BSR set to: 0
 44410                           
 44411                           ; BSR set to: 0
 44412                           
 44413                           ; BSR set to: 0
 44414                           ;doprnt.c: 1307: break;
 44415  013BB4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 44416  013BB6  D7E1               	goto	i2l22693
 44417  013BB8                     
 44418                           ; BSR set to: 0
 44419                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 44420                           
 44421                           ; BSR set to: 0
 44422  013BB8  0E01               	movlw	1
 44423  013BBA  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44424  013BBC                     i2l22707:
 44425                           
 44426                           ; BSR set to: 0
 44427  013BBC  0E08               	movlw	8
 44428  013BBE  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 44429  013BC0  B4D8               	btfsc	status,2,c
 44430  013BC2  D026               	goto	i2l2072
 44431                           
 44432                           ; BSR set to: 0
 44433                           ;doprnt.c: 1317: if(val < hexpowers[c])
 44434                           
 44435                           ; BSR set to: 0
 44436                           
 44437                           ; BSR set to: 0
 44438  013BC4  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44439  013BC6  0D04               	mullw	4
 44440  013BC8  0E33               	movlw	low _hexpowers
 44441  013BCA  24F3               	addwf	prodl,w,c
 44442  013BCC  6EF6               	movwf	tblptrl,c
 44443  013BCE  0ECF               	movlw	high _hexpowers
 44444  013BD0  20F4               	addwfc	prodh,w,c
 44445  013BD2  6EF7               	movwf	tblptrh,c
 44446  013BD4                     	if	1	;There are 3 active tblptr bytes
 44447  013BD4  6AF8               	clrf	tblptru,c
 44448  013BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 44449  013BD8  22F8               	addwfc	tblptru,f,c
 44450  013BDA                     	endif
 44451  013BDA  0009               	tblrd		*+
 44452  013BDC  50F5               	movf	tablat,w,c
 44453  013BDE  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 44454  013BE0  0009               	tblrd		*+
 44455  013BE2  50F5               	movf	tablat,w,c
 44456  013BE4  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 44457  013BE6  0009               	tblrd		*+
 44458  013BE8  50F5               	movf	tablat,w,c
 44459  013BEA  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 44460  013BEC  0009               	tblrd		*+
 44461  013BEE  50F5               	movf	tablat,w,c
 44462  013BF0  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 44463  013BF2  A0D8               	btfss	status,0,c
 44464  013BF4  D00D               	goto	i2l2072
 44465                           
 44466                           ; BSR set to: 0
 44467                           
 44468                           ; BSR set to: 0
 44469                           
 44470                           ; BSR set to: 0
 44471                           ;doprnt.c: 1318: break;
 44472  013BF6  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 44473  013BF8  D7E1               	goto	i2l22707
 44474  013BFA                     i2l2066:
 44475                           
 44476                           ; BSR set to: 0
 44477                           
 44478                           ; BSR set to: 0
 44479  013BFA  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 44480  013BFC  0BC0               	andlw	192
 44481                           
 44482                           ; Switch size 1, requested type "space"
 44483                           ; Number of cases is 3, Range of values is 0 to 192
 44484                           ; switch strategies available:
 44485                           ; Name         Instructions Cycles
 44486                           ; simple_byte           10     6 (average)
 44487                           ;	Chosen strategy is simple_byte
 44488  013BFE  0A00               	xorlw	0	; case 0
 44489  013C00  B4D8               	btfsc	status,2,c
 44490  013C02  D7B9               	goto	i2l2067
 44491  013C04  0A80               	xorlw	128	; case 128
 44492  013C06  B4D8               	btfsc	status,2,c
 44493  013C08  D7D7               	goto	i2l2073
 44494  013C0A  0A40               	xorlw	64	; case 192
 44495  013C0C  B4D8               	btfsc	status,2,c
 44496  013C0E  D7B3               	goto	i2l2067
 44497  013C10                     i2l2072:
 44498                           
 44499                           ; BSR set to: 0
 44500                           ;doprnt.c: 1339: if(c < prec)
 44501                           
 44502                           ; BSR set to: 0
 44503  013C10  0E80               	movlw	128
 44504  013C12  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44505  013C14  0E7F               	movlw	127
 44506  013C16  6F8E               	movwf	??i2__doprnt& (0+255),b
 44507  013C18  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44508  013C1A  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44509  013C1C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44510  013C1E  0A80               	xorlw	128
 44511  013C20  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44512  013C22  B0D8               	btfsc	status,0,c
 44513  013C24  D003               	goto	i2l2077
 44514                           
 44515                           ; BSR set to: 0
 44516                           ;doprnt.c: 1340: c = prec;
 44517  013C26  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 44518  013C2A  D010               	goto	i2l2079
 44519  013C2C                     i2l2077:
 44520                           
 44521                           ; BSR set to: 0
 44522                           ;doprnt.c: 1341: else if(prec < c)
 44523                           
 44524                           ; BSR set to: 0
 44525  013C2C  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44526  013C2E  0A80               	xorlw	128
 44527  013C30  6F8E               	movwf	??i2__doprnt& (0+255),b
 44528  013C32  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44529  013C34  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44530  013C36  0E80               	movlw	128
 44531  013C38  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44532  013C3A  0E7F               	movlw	127
 44533  013C3C  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44534  013C3E  B0D8               	btfsc	status,0,c
 44535  013C40  D005               	goto	i2l2079
 44536                           
 44537                           ; BSR set to: 0
 44538                           ;doprnt.c: 1342: prec = c;
 44539  013C42  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44540  013C44  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 44541  013C46  6BB0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 44542  013C48  BFAF               	btfsc	i2__doprnt@prec& (0+255),7,b
 44543  013C4A  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 44544  013C4C                     i2l2079:
 44545                           
 44546                           ; BSR set to: 0
 44547                           ;doprnt.c: 1345: if(width && flag & 0x03)
 44548                           
 44549                           ; BSR set to: 0
 44550                           
 44551                           ; BSR set to: 0
 44552  013C4C  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44553  013C4E  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44554  013C50  B4D8               	btfsc	status,2,c
 44555  013C52  D00D               	goto	i2l2080
 44556                           
 44557                           ; BSR set to: 0
 44558  013C54  0E03               	movlw	3
 44559  013C56  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44560  013C58  6F8E               	movwf	??i2__doprnt& (0+255),b
 44561  013C5A  0E00               	movlw	0
 44562  013C5C  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44563  013C5E  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44564  013C60  518E               	movf	??i2__doprnt& (0+255),w,b
 44565  013C62  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44566  013C64  B4D8               	btfsc	status,2,c
 44567  013C66  D003               	goto	i2l2080
 44568                           
 44569                           ; BSR set to: 0
 44570                           ;doprnt.c: 1346: width--;
 44571  013C68  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44572  013C6A  A0D8               	btfss	status,0,c
 44573  013C6C  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44574  013C6E                     i2l2080:
 44575                           
 44576                           ; BSR set to: 0
 44577                           ;doprnt.c: 1348: if(flag & 0x4000) {
 44578                           
 44579                           ; BSR set to: 0
 44580  013C6E  ADAE               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 44581  013C70  D013               	goto	i2l2083
 44582                           
 44583                           ; BSR set to: 0
 44584                           ;doprnt.c: 1349: if(width > prec)
 44585  013C72  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44586  013C74  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 44587  013C76  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44588  013C78  0A80               	xorlw	128
 44589  013C7A  6F8E               	movwf	??i2__doprnt& (0+255),b
 44590  013C7C  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44591  013C7E  0A80               	xorlw	128
 44592  013C80  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44593  013C82  B0D8               	btfsc	status,0,c
 44594  013C84  D005               	goto	i2l2082
 44595                           
 44596                           ; BSR set to: 0
 44597                           ;doprnt.c: 1350: width -= prec;
 44598  013C86  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 44599  013C88  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44600  013C8A  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 44601  013C8C  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44602  013C8E  D004               	goto	i2l2083
 44603  013C90                     i2l2082:
 44604                           
 44605                           ; BSR set to: 0
 44606                           ;doprnt.c: 1351: else
 44607                           ;doprnt.c: 1352: width = 0;
 44608                           
 44609                           ; BSR set to: 0
 44610  013C90  0E00               	movlw	0
 44611  013C92  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44612  013C94  0E00               	movlw	0
 44613  013C96  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44614  013C98                     i2l2083:
 44615                           
 44616                           ; BSR set to: 0
 44617                           ;doprnt.c: 1353: }
 44618                           ;doprnt.c: 1381: if(width > c)
 44619                           
 44620                           ; BSR set to: 0
 44621                           
 44622                           ; BSR set to: 0
 44623  013C98  0E80               	movlw	128
 44624  013C9A  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44625  013C9C  0E7F               	movlw	127
 44626  013C9E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44627  013CA0  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44628  013CA2  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 44629  013CA4  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 44630  013CA6  0A80               	xorlw	128
 44631  013CA8  598E               	subwfb	??i2__doprnt& (0+255),w,b
 44632  013CAA  B0D8               	btfsc	status,0,c
 44633  013CAC  D007               	goto	i2l2084
 44634                           
 44635                           ; BSR set to: 0
 44636                           ;doprnt.c: 1382: width -= c;
 44637  013CAE  51B1               	movf	i2__doprnt@c& (0+255),w,b
 44638  013CB0  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 44639  013CB2  0E00               	movlw	0
 44640  013CB4  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 44641  013CB6  0EFF               	movlw	255
 44642  013CB8  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 44643  013CBA  D004               	goto	i2l2085
 44644  013CBC                     i2l2084:
 44645                           
 44646                           ; BSR set to: 0
 44647                           ;doprnt.c: 1383: else
 44648                           ;doprnt.c: 1384: width = 0;
 44649                           
 44650                           ; BSR set to: 0
 44651  013CBC  0E00               	movlw	0
 44652  013CBE  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 44653  013CC0  0E00               	movlw	0
 44654  013CC2  6FAB               	movwf	i2__doprnt@width& (0+255),b
 44655  013CC4                     i2l2085:
 44656                           
 44657                           ; BSR set to: 0
 44658                           ;doprnt.c: 1387: if(flag & 0x04) {
 44659                           
 44660                           ; BSR set to: 0
 44661  013CC4  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 44662  013CC6  D07A               	goto	i2l2086
 44663                           
 44664                           ; BSR set to: 0
 44665                           ;doprnt.c: 1392: if(flag & 0x03)
 44666  013CC8  0E03               	movlw	3
 44667  013CCA  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44668  013CCC  6F8E               	movwf	??i2__doprnt& (0+255),b
 44669  013CCE  0E00               	movlw	0
 44670  013CD0  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44671  013CD2  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44672  013CD4  518E               	movf	??i2__doprnt& (0+255),w,b
 44673  013CD6  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44674  013CD8  B4D8               	btfsc	status,2,c
 44675  013CDA  D033               	goto	i2l2089
 44676                           
 44677                           ; BSR set to: 0
 44678                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44679  013CDC  EE20 F002          	lfsr	2,2
 44680  013CE0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44681  013CE2  26D9               	addwf	fsr2l,f,c
 44682  013CE4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44683  013CE6  22DA               	addwfc	fsr2h,f,c
 44684  013CE8  50DE               	movf	postinc2,w,c
 44685  013CEA  10DE               	iorwf	postinc2,w,c
 44686  013CEC  10DE               	iorwf	postinc2,w,c
 44687  013CEE  B4D8               	btfsc	status,2,c
 44688  013CF0  D013               	goto	i2l2088
 44689                           
 44690                           ; BSR set to: 0
 44691  013CF2  EE20 F002          	lfsr	2,2
 44692  013CF6  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44693  013CF8  26D9               	addwf	fsr2l,f,c
 44694  013CFA  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44695  013CFC  22DA               	addwfc	fsr2h,f,c
 44696  013CFE  D801               	call	i2u3317_48
 44697  013D00  D020               	goto	i2l2089
 44698  013D02                     i2u3317_48:
 44699  013D02  0005               	push	
 44700  013D04  6EFA               	movwf	pclath,c
 44701  013D06  50DE               	movf	postinc2,w,c
 44702  013D08  6EFD               	movwf	tosl,c
 44703  013D0A  50DE               	movf	postinc2,w,c
 44704  013D0C  6EFE               	movwf	tosh,c
 44705  013D0E  50DE               	movf	postinc2,w,c
 44706  013D10  6EFF               	movwf	tosu,c
 44707  013D12  50FA               	movf	pclath,w,c
 44708  013D14  0E2D               	movlw	45
 44709  013D16  0012               	return		;indir
 44710  013D18                     i2l2088:
 44711  013D18  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44712  013D1C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44713  013D20  CFDE F08E          	movff	postinc2,??i2__doprnt
 44714  013D24  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44715  013D28  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44716  013D2C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44717  013D30  0E2D               	movlw	45
 44718  013D32  6EDF               	movwf	indf2,c
 44719  013D34  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44720  013D38  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44721  013D3C  2ADE               	incf	postinc2,f,c
 44722  013D3E  0E00               	movlw	0
 44723  013D40  22DD               	addwfc	postdec2,f,c
 44724  013D42                     i2l2089:
 44725                           
 44726                           ;doprnt.c: 1415: if(width)
 44727  013D42  0100               	movlb	0	; () banked
 44728  013D44  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44729  013D46  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44730  013D48  B4D8               	btfsc	status,2,c
 44731  013D4A  D16A               	goto	i2l2112
 44732                           
 44733                           ; BSR set to: 0
 44734                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 44735                           
 44736                           ; BSR set to: 0
 44737                           
 44738                           ;doprnt.c: 1416: do
 44739  013D4C  EE20 F002          	lfsr	2,2
 44740  013D50  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44741  013D52  26D9               	addwf	fsr2l,f,c
 44742  013D54  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44743  013D56  22DA               	addwfc	fsr2h,f,c
 44744  013D58  50DE               	movf	postinc2,w,c
 44745  013D5A  10DE               	iorwf	postinc2,w,c
 44746  013D5C  10DE               	iorwf	postinc2,w,c
 44747  013D5E  B4D8               	btfsc	status,2,c
 44748  013D60  D013               	goto	i2l2092
 44749                           
 44750                           ; BSR set to: 0
 44751  013D62  EE20 F002          	lfsr	2,2
 44752  013D66  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44753  013D68  26D9               	addwf	fsr2l,f,c
 44754  013D6A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44755  013D6C  22DA               	addwfc	fsr2h,f,c
 44756  013D6E  D801               	call	i2u3320_48
 44757  013D70  D020               	goto	i2l2093
 44758  013D72                     i2u3320_48:
 44759  013D72  0005               	push	
 44760  013D74  6EFA               	movwf	pclath,c
 44761  013D76  50DE               	movf	postinc2,w,c
 44762  013D78  6EFD               	movwf	tosl,c
 44763  013D7A  50DE               	movf	postinc2,w,c
 44764  013D7C  6EFE               	movwf	tosh,c
 44765  013D7E  50DE               	movf	postinc2,w,c
 44766  013D80  6EFF               	movwf	tosu,c
 44767  013D82  50FA               	movf	pclath,w,c
 44768  013D84  0E30               	movlw	48
 44769  013D86  0012               	return		;indir
 44770  013D88                     i2l2092:
 44771  013D88  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44772  013D8C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44773  013D90  CFDE F08E          	movff	postinc2,??i2__doprnt
 44774  013D94  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44775  013D98  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44776  013D9C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44777  013DA0  0E30               	movlw	48
 44778  013DA2  6EDF               	movwf	indf2,c
 44779  013DA4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44780  013DA8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44781  013DAC  2ADE               	incf	postinc2,f,c
 44782  013DAE  0E00               	movlw	0
 44783  013DB0  22DD               	addwfc	postdec2,f,c
 44784  013DB2                     i2l2093:
 44785                           
 44786                           ;doprnt.c: 1418: while(--width);
 44787  013DB2  0100               	movlb	0	; () banked
 44788  013DB4  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44789  013DB6  A0D8               	btfss	status,0,c
 44790  013DB8  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44791  013DBA  D7C4               	goto	L34
 44792  013DBC                     i2l2086:
 44793                           
 44794                           ; BSR set to: 0
 44795                           ;doprnt.c: 1422: {
 44796                           ;doprnt.c: 1424: if(width
 44797                           ;doprnt.c: 1428: )
 44798                           
 44799                           ; BSR set to: 0
 44800  013DBC  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44801  013DBE  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44802  013DC0  B4D8               	btfsc	status,2,c
 44803  013DC2  D03B               	goto	i2u3325_40
 44804  013DC4                     i2u3322_40:
 44805                           
 44806                           ; BSR set to: 0
 44807                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 44808                           
 44809                           ; BSR set to: 0
 44810                           
 44811                           ;doprnt.c: 1429: do
 44812  013DC4  EE20 F002          	lfsr	2,2
 44813  013DC8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44814  013DCA  26D9               	addwf	fsr2l,f,c
 44815  013DCC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44816  013DCE  22DA               	addwfc	fsr2h,f,c
 44817  013DD0  50DE               	movf	postinc2,w,c
 44818  013DD2  10DE               	iorwf	postinc2,w,c
 44819  013DD4  10DE               	iorwf	postinc2,w,c
 44820  013DD6  B4D8               	btfsc	status,2,c
 44821  013DD8  D013               	goto	i2l2098
 44822                           
 44823                           ; BSR set to: 0
 44824  013DDA  EE20 F002          	lfsr	2,2
 44825  013DDE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44826  013DE0  26D9               	addwf	fsr2l,f,c
 44827  013DE2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44828  013DE4  22DA               	addwfc	fsr2h,f,c
 44829  013DE6  D801               	call	i2u3324_48
 44830  013DE8  D020               	goto	i2l2099
 44831  013DEA                     i2u3324_48:
 44832  013DEA  0005               	push	
 44833  013DEC  6EFA               	movwf	pclath,c
 44834  013DEE  50DE               	movf	postinc2,w,c
 44835  013DF0  6EFD               	movwf	tosl,c
 44836  013DF2  50DE               	movf	postinc2,w,c
 44837  013DF4  6EFE               	movwf	tosh,c
 44838  013DF6  50DE               	movf	postinc2,w,c
 44839  013DF8  6EFF               	movwf	tosu,c
 44840  013DFA  50FA               	movf	pclath,w,c
 44841  013DFC  0E20               	movlw	32
 44842  013DFE  0012               	return		;indir
 44843  013E00                     i2l2098:
 44844  013E00  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44845  013E04  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44846  013E08  CFDE F08E          	movff	postinc2,??i2__doprnt
 44847  013E0C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44848  013E10  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44849  013E14  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44850  013E18  0E20               	movlw	32
 44851  013E1A  6EDF               	movwf	indf2,c
 44852  013E1C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44853  013E20  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44854  013E24  2ADE               	incf	postinc2,f,c
 44855  013E26  0E00               	movlw	0
 44856  013E28  22DD               	addwfc	postdec2,f,c
 44857  013E2A                     i2l2099:
 44858                           
 44859                           ;doprnt.c: 1431: while(--width);
 44860  013E2A  0100               	movlb	0	; () banked
 44861  013E2C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 44862  013E2E  A0D8               	btfss	status,0,c
 44863  013E30  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 44864  013E32  51AB               	movf	i2__doprnt@width& (0+255),w,b
 44865  013E34  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 44866  013E36  A4D8               	btfss	status,2,c
 44867  013E38  D7C5               	goto	i2u3322_40
 44868  013E3A                     i2u3325_40:
 44869                           
 44870                           ; BSR set to: 0
 44871                           ;doprnt.c: 1438: if(flag & 0x03)
 44872                           
 44873                           ; BSR set to: 0
 44874                           
 44875                           ; BSR set to: 0
 44876  013E3A  0E03               	movlw	3
 44877  013E3C  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 44878  013E3E  6F8E               	movwf	??i2__doprnt& (0+255),b
 44879  013E40  0E00               	movlw	0
 44880  013E42  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 44881  013E44  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 44882  013E46  518E               	movf	??i2__doprnt& (0+255),w,b
 44883  013E48  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 44884  013E4A  B4D8               	btfsc	status,2,c
 44885  013E4C  D0E9               	goto	i2l2112
 44886                           
 44887                           ; BSR set to: 0
 44888                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 44889  013E4E  EE20 F002          	lfsr	2,2
 44890  013E52  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44891  013E54  26D9               	addwf	fsr2l,f,c
 44892  013E56  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44893  013E58  22DA               	addwfc	fsr2h,f,c
 44894  013E5A  50DE               	movf	postinc2,w,c
 44895  013E5C  10DE               	iorwf	postinc2,w,c
 44896  013E5E  10DE               	iorwf	postinc2,w,c
 44897  013E60  B4D8               	btfsc	status,2,c
 44898  013E62  D013               	goto	i2l2102
 44899                           
 44900                           ; BSR set to: 0
 44901  013E64  EE20 F002          	lfsr	2,2
 44902  013E68  5188               	movf	i2__doprnt@pb& (0+255),w,b
 44903  013E6A  26D9               	addwf	fsr2l,f,c
 44904  013E6C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 44905  013E6E  22DA               	addwfc	fsr2h,f,c
 44906  013E70  D801               	call	i2u3328_48
 44907  013E72  D0D6               	goto	i2l2112
 44908  013E74                     i2u3328_48:
 44909  013E74  0005               	push	
 44910  013E76  6EFA               	movwf	pclath,c
 44911  013E78  50DE               	movf	postinc2,w,c
 44912  013E7A  6EFD               	movwf	tosl,c
 44913  013E7C  50DE               	movf	postinc2,w,c
 44914  013E7E  6EFE               	movwf	tosh,c
 44915  013E80  50DE               	movf	postinc2,w,c
 44916  013E82  6EFF               	movwf	tosu,c
 44917  013E84  50FA               	movf	pclath,w,c
 44918  013E86  0E2D               	movlw	45
 44919  013E88  0012               	return		;indir
 44920  013E8A                     i2l2102:
 44921  013E8A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 44922  013E8E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 44923  013E92  CFDE F08E          	movff	postinc2,??i2__doprnt
 44924  013E96  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 44925  013E9A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 44926  013E9E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 44927  013EA2  0E2D               	movlw	45
 44928  013EA4  6EDF               	movwf	indf2,c
 44929  013EA6  D0B5               	goto	i2l22813
 44930  013EA8                     
 44931                           ;doprnt.c: 1486: case 0xC0:
 44932                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 44933  013EA8  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 44934  013EAC  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 44935  013EB0  0100               	movlb	0	; () banked
 44936  013EB2  90D8               	bcf	status,0,c
 44937  013EB4  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44938  013EB6  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44939  013EB8  90D8               	bcf	status,0,c
 44940  013EBA  378E               	rlcf	??i2__doprnt& (0+255),f,b
 44941  013EBC  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 44942  013EBE  0E0B               	movlw	low _dpowers
 44943  013EC0  258E               	addwf	??i2__doprnt& (0+255),w,b
 44944  013EC2  6EF6               	movwf	tblptrl,c
 44945  013EC4  0ECF               	movlw	high _dpowers
 44946  013EC6  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 44947  013EC8  6EF7               	movwf	tblptrh,c
 44948  013ECA                     	if	1	;There are 3 active tblptr bytes
 44949  013ECA  6AF8               	clrf	tblptru,c
 44950  013ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 44951  013ECE  22F8               	addwfc	tblptru,f,c
 44952  013ED0                     	endif
 44953  013ED0  0009               	tblrd		*+
 44954  013ED2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 44955  013ED6  0009               	tblrd		*+
 44956  013ED8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 44957  013EDC  0009               	tblrd		*+
 44958  013EDE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 44959  013EE2  000A               	tblrd		*-
 44960  013EE4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 44961  013EE8  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44962  013EEC  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44963  013EF0  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44964  013EF4  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44965  013EF8  EC2D  F0CE         	call	i2___lldiv
 44966  013EFC  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 44967  013F00  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 44968  013F04  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 44969  013F08  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 44970  013F0C  0E0A               	movlw	10
 44971  013F0E  6E12               	movwf	i2___llmod@divisor,c
 44972  013F10  0E00               	movlw	0
 44973  013F12  6E13               	movwf	i2___llmod@divisor+1,c
 44974  013F14  0E00               	movlw	0
 44975  013F16  6E14               	movwf	i2___llmod@divisor+2,c
 44976  013F18  0E00               	movlw	0
 44977  013F1A  6E15               	movwf	i2___llmod@divisor+3,c
 44978  013F1C  EC99  F0D0         	call	i2___llmod	;wreg free
 44979  013F20  500E               	movf	?i2___llmod,w,c
 44980  013F22  0F30               	addlw	48
 44981  013F24  0100               	movlb	0	; () banked
 44982  013F26  6FB1               	movwf	i2__doprnt@c& (0+255),b
 44983                           
 44984                           ;doprnt.c: 1491: break;
 44985  013F28  D048               	goto	i2l2109
 44986  013F2A                     
 44987                           ; BSR set to: 0
 44988                           ;doprnt.c: 1499: {
 44989                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 44990                           
 44991                           ; BSR set to: 0
 44992  013F2A  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 44993  013F2E  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 44994  013F32  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 44995  013F36  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 44996  013F3A  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 44997  013F3E  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 44998  013F42  90D8               	bcf	status,0,c
 44999  013F44  378E               	rlcf	??i2__doprnt& (0+255),f,b
 45000  013F46  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 45001  013F48  90D8               	bcf	status,0,c
 45002  013F4A  378E               	rlcf	??i2__doprnt& (0+255),f,b
 45003  013F4C  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 45004  013F4E  0E33               	movlw	low _hexpowers
 45005  013F50  258E               	addwf	??i2__doprnt& (0+255),w,b
 45006  013F52  6EF6               	movwf	tblptrl,c
 45007  013F54  0ECF               	movlw	high _hexpowers
 45008  013F56  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 45009  013F58  6EF7               	movwf	tblptrh,c
 45010  013F5A                     	if	1	;There are 3 active tblptr bytes
 45011  013F5A  6AF8               	clrf	tblptru,c
 45012  013F5C  0E00               	movlw	low (__mediumconst shr (0+16))
 45013  013F5E  22F8               	addwfc	tblptru,f,c
 45014  013F60                     	endif
 45015  013F60  0009               	tblrd		*+
 45016  013F62  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 45017  013F66  0009               	tblrd		*+
 45018  013F68  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 45019  013F6C  0009               	tblrd		*+
 45020  013F6E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 45021  013F72  000A               	tblrd		*-
 45022  013F74  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 45023  013F78  EC2D  F0CE         	call	i2___lldiv	;wreg free
 45024  013F7C  5001               	movf	?i2___lldiv,w,c
 45025  013F7E  0B0F               	andlw	15
 45026  013F80  0100               	movlb	0	; () banked
 45027  013F82  6F98               	movwf	i2__doprnt@idx& (0+255),b
 45028                           
 45029                           ; BSR set to: 0
 45030                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 45031  013F84  5198               	movf	i2__doprnt@idx& (0+255),w,b
 45032  013F86  0D01               	mullw	1
 45033  013F88  0EE9               	movlw	low STR_192
 45034  013F8A  24F3               	addwf	prodl,w,c
 45035  013F8C  6EF6               	movwf	tblptrl,c
 45036  013F8E  0EFC               	movlw	high STR_192
 45037  013F90  20F4               	addwfc	prodh,w,c
 45038  013F92  6EF7               	movwf	tblptrh,c
 45039  013F94                     	if	1	;There are 3 active tblptr bytes
 45040  013F94  6AF8               	clrf	tblptru,c
 45041  013F96  0E00               	movlw	low (__mediumconst shr (0+16))
 45042  013F98  22F8               	addwfc	tblptru,f,c
 45043  013F9A                     	endif
 45044  013F9A  0008               	tblrd		*
 45045  013F9C  CFF5 F0B1          	movff	tablat,i2__doprnt@c
 45046                           
 45047                           ; BSR set to: 0
 45048                           ;doprnt.c: 1523: }
 45049                           
 45050                           ;doprnt.c: 1508: }
 45051                           ;doprnt.c: 1510: break;
 45052  013FA0  D00C               	goto	i2l2109
 45053  013FA2                     i2l22805:
 45054  013FA2  0100               	movlb	0	; () banked
 45055  013FA4  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 45056  013FA6  0BC0               	andlw	192
 45057                           
 45058                           ; Switch size 1, requested type "space"
 45059                           ; Number of cases is 3, Range of values is 0 to 192
 45060                           ; switch strategies available:
 45061                           ; Name         Instructions Cycles
 45062                           ; simple_byte           10     6 (average)
 45063                           ;	Chosen strategy is simple_byte
 45064  013FA8  0A00               	xorlw	0	; case 0
 45065  013FAA  B4D8               	btfsc	status,2,c
 45066  013FAC  D77D               	goto	i2l2107
 45067  013FAE  0A80               	xorlw	128	; case 128
 45068  013FB0  B4D8               	btfsc	status,2,c
 45069  013FB2  D7BB               	goto	i2l2110
 45070  013FB4  0A40               	xorlw	64	; case 192
 45071  013FB6  B4D8               	btfsc	status,2,c
 45072  013FB8  D777               	goto	i2l2107
 45073  013FBA                     i2l2109:
 45074                           
 45075                           ; BSR set to: 0
 45076                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 45077                           
 45078                           ; BSR set to: 0
 45079  013FBA  EE20 F002          	lfsr	2,2
 45080  013FBE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45081  013FC0  26D9               	addwf	fsr2l,f,c
 45082  013FC2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45083  013FC4  22DA               	addwfc	fsr2h,f,c
 45084  013FC6  50DE               	movf	postinc2,w,c
 45085  013FC8  10DE               	iorwf	postinc2,w,c
 45086  013FCA  10DE               	iorwf	postinc2,w,c
 45087  013FCC  B4D8               	btfsc	status,2,c
 45088  013FCE  D013               	goto	i2l2111
 45089                           
 45090                           ; BSR set to: 0
 45091  013FD0  EE20 F002          	lfsr	2,2
 45092  013FD4  5188               	movf	i2__doprnt@pb& (0+255),w,b
 45093  013FD6  26D9               	addwf	fsr2l,f,c
 45094  013FD8  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 45095  013FDA  22DA               	addwfc	fsr2h,f,c
 45096  013FDC  D801               	call	i2u3330_48
 45097  013FDE  D020               	goto	i2l2112
 45098  013FE0                     i2u3330_48:
 45099  013FE0  0005               	push	
 45100  013FE2  6EFA               	movwf	pclath,c
 45101  013FE4  50DE               	movf	postinc2,w,c
 45102  013FE6  6EFD               	movwf	tosl,c
 45103  013FE8  50DE               	movf	postinc2,w,c
 45104  013FEA  6EFE               	movwf	tosh,c
 45105  013FEC  50DE               	movf	postinc2,w,c
 45106  013FEE  6EFF               	movwf	tosu,c
 45107  013FF0  50FA               	movf	pclath,w,c
 45108  013FF2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 45109  013FF4  0012               	return		;indir
 45110  013FF6                     i2l2111:
 45111  013FF6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45112  013FFA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45113  013FFE  CFDE F08E          	movff	postinc2,??i2__doprnt
 45114  014002  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 45115  014006  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 45116  01400A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 45117  01400E  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 45118  014012                     i2l22813:
 45119  014012  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 45120  014016  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 45121  01401A  2ADE               	incf	postinc2,f,c
 45122  01401C  0E00               	movlw	0
 45123  01401E  22DD               	addwfc	postdec2,f,c
 45124  014020                     i2l2112:
 45125  014020  0100               	movlb	0	; () banked
 45126  014022  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 45127  014024  A0D8               	btfss	status,0,c
 45128  014026  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 45129  014028  29AF               	incf	i2__doprnt@prec& (0+255),w,b
 45130  01402A  E1BB               	bnz	i2l22805
 45131  01402C  29B0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 45132  01402E  A4D8               	btfss	status,2,c
 45133  014030  D7B8               	goto	i2l2106
 45134  014032                     i2u3331_40:
 45135                           
 45136                           ; BSR set to: 0
 45137                           
 45138                           ; BSR set to: 0
 45139  014032  0100               	movlb	0	; () banked
 45140  014034  518A               	movf	i2__doprnt@f& (0+255),w,b
 45141  014036  6F8E               	movwf	??i2__doprnt& (0+255),b
 45142  014038  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 45143  01403A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 45144  01403C  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 45145  01403E  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 45146  014040  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 45147  014044  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 45148  014048  0E00               	movlw	low (__mediumconst shr (0+16))
 45149  01404A  6EF8               	movwf	tblptru,c
 45150  01404C  0E0D               	movlw	(high __ramtop+-1)
 45151  01404E  64F7               	cpfsgt	tblptrh,c
 45152  014050  D003               	bra	i2u3332_47
 45153  014052  0008               	tblrd		*
 45154  014054  50F5               	movf	tablat,w,c
 45155  014056  D005               	bra	i2u3332_40
 45156  014058                     i2u3332_47:
 45157  014058  CFF6 FFE9          	movff	tblptrl,fsr0l
 45158  01405C  CFF7 FFEA          	movff	tblptrh,fsr0h
 45159  014060  50EF               	movf	indf0,w,c
 45160  014062                     i2u3332_40:
 45161  014062  0100               	movlb	0	; () banked
 45162  014064  6FB1               	movwf	i2__doprnt@c& (0+255),b
 45163  014066  51B1               	movf	i2__doprnt@c& (0+255),w,b
 45164  014068  A4D8               	btfss	status,2,c
 45165  01406A  EFBC  F095         	goto	i2l1940
 45166  01406E                     i2u3333_40:
 45167                           
 45168                           ; BSR set to: 0
 45169                           ;doprnt.c: 1540: return 0;
 45170                           
 45171                           ; BSR set to: 0
 45172                           
 45173                           ;doprnt.c: 1525: }
 45174                           ;doprnt.c: 1533: }
 45175                           ;doprnt.c: 1535: alldone:
 45176                           
 45177                           ; BSR set to: 0
 45178  01406E  0E00               	movlw	0
 45179  014070  6F89               	movwf	(?i2__doprnt+1)& (0+255),b
 45180  014072  0E00               	movlw	0
 45181  014074  6F88               	movwf	?i2__doprnt& (0+255),b
 45182  014076  0012               	return	
 45183  014078                     __end_ofi2__doprnt:
 45184                           	opt stack 0
 45185                           tosu	equ	0xFFF
 45186                           tosh	equ	0xFFE
 45187                           tosl	equ	0xFFD
 45188                           pclatu	equ	0xFFB
 45189                           pclath	equ	0xFFA
 45190                           tblptru	equ	0xFF8
 45191                           tblptrh	equ	0xFF7
 45192                           tblptrl	equ	0xFF6
 45193                           tablat	equ	0xFF5
 45194                           prodh	equ	0xFF4
 45195                           prodl	equ	0xFF3
 45196                           intcon	equ	0xFF2
 45197                           indf0	equ	0xFEF
 45198                           postinc0	equ	0xFEE
 45199                           fsr0h	equ	0xFEA
 45200                           fsr0l	equ	0xFE9
 45201                           wreg	equ	0xFE8
 45202                           indf1	equ	0xFE7
 45203                           postdec1	equ	0xFE5
 45204                           plusw1	equ	0xFE3
 45205                           fsr1h	equ	0xFE2
 45206                           fsr1l	equ	0xFE1
 45207                           bsr	equ	0xFE0
 45208                           indf2	equ	0xFDF
 45209                           postinc2	equ	0xFDE
 45210                           postdec2	equ	0xFDD
 45211                           plusw2	equ	0xFDB
 45212                           fsr2h	equ	0xFDA
 45213                           fsr2l	equ	0xFD9
 45214                           status	equ	0xFD8
 45215                           
 45216 ;; *************** function i2_scale *****************
 45217 ;; Defined at:
 45218 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 45219 ;; Parameters:    Size  Location     Type
 45220 ;;  scl             1    wreg     char 
 45221 ;; Auto vars:     Size  Location     Type
 45222 ;;  scl             1   80[COMRAM] char 
 45223 ;; Return value:  Size  Location     Type
 45224 ;;                  4   72[COMRAM] char 
 45225 ;; Registers used:
 45226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45227 ;; Tracked objects:
 45228 ;;		On entry : 0/0
 45229 ;;		On exit  : 0/0
 45230 ;;		Unchanged: 0/0
 45231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45233 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45235 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45236 ;;Total ram usage:        9 bytes
 45237 ;; Hardware stack levels used:    1
 45238 ;; Hardware stack levels required when called:    1
 45239 ;; This function calls:
 45240 ;;		i2___awdiv
 45241 ;;		i2___awmod
 45242 ;;		i2___flmul
 45243 ;; This function is called by:
 45244 ;;		i2__doprnt
 45245 ;; This function uses a non-reentrant model
 45246 ;;
 45247                           
 45248                           	psect	text135
 45249  014FE0                     __ptext135:
 45250                           	opt stack 0
 45251  014FE0                     i2_scale:
 45252                           	opt stack 13
 45253                           
 45254                           ; BSR set to: 0
 45255                           ;incstack = 0
 45256                           ;i2scale@scl stored from wreg
 45257  014FE0  6E51               	movwf	i2scale@scl,c
 45258                           
 45259                           ;doprnt.c: 428: if(scl < 0) {
 45260  014FE2  AE51               	btfss	i2scale@scl,7,c
 45261  014FE4  D11F               	goto	i2l1929
 45262                           
 45263                           ;doprnt.c: 429: scl = -scl;
 45264  014FE6  6C51               	negf	i2scale@scl,c
 45265                           
 45266                           ;doprnt.c: 430: if(scl>=110)
 45267  014FE8  5051               	movf	i2scale@scl,w,c
 45268  014FEA  0A80               	xorlw	128
 45269  014FEC  0F12               	addlw	-238
 45270  014FEE  A0D8               	btfss	status,0,c
 45271  014FF0  D0A1               	goto	i2l1930
 45272                           
 45273                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 45274  014FF2  0E00               	movlw	0
 45275  014FF4  6E0A               	movwf	i2___awdiv@divisor+1,c
 45276  014FF6  0E0A               	movlw	10
 45277  014FF8  6E09               	movwf	i2___awdiv@divisor,c
 45278  014FFA  0E00               	movlw	0
 45279  014FFC  6E04               	movwf	i2___awmod@divisor+1,c
 45280  014FFE  0E64               	movlw	100
 45281  015000  6E03               	movwf	i2___awmod@divisor,c
 45282  015002  5051               	movf	i2scale@scl,w,c
 45283  015004  6E01               	movwf	i2___awmod@dividend,c
 45284  015006  6A02               	clrf	i2___awmod@dividend+1,c
 45285  015008  BE01               	btfsc	i2___awmod@dividend,7,c
 45286  01500A  0602               	decf	i2___awmod@dividend+1,f,c
 45287  01500C  EC22  F0CF         	call	i2___awmod
 45288  015010  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45289  015014  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45290  015018  ECAA  F0CD         	call	i2___awdiv	;wreg free
 45291  01501C  90D8               	bcf	status,0,c
 45292  01501E  3607               	rlcf	?i2___awdiv,f,c
 45293  015020  3608               	rlcf	?i2___awdiv+1,f,c
 45294  015022  90D8               	bcf	status,0,c
 45295  015024  3607               	rlcf	?i2___awdiv,f,c
 45296  015026  3608               	rlcf	?i2___awdiv+1,f,c
 45297  015028  0E24               	movlw	36
 45298  01502A  2607               	addwf	?i2___awdiv,f,c
 45299  01502C  0E00               	movlw	0
 45300  01502E  2208               	addwfc	?i2___awdiv+1,f,c
 45301  015030  0ED7               	movlw	low __npowers_
 45302  015032  2407               	addwf	?i2___awdiv,w,c
 45303  015034  6EF6               	movwf	tblptrl,c
 45304  015036  0ECE               	movlw	high __npowers_
 45305  015038  2008               	addwfc	?i2___awdiv+1,w,c
 45306  01503A  6EF7               	movwf	tblptrh,c
 45307  01503C                     	if	1	;There are 3 active tblptr bytes
 45308  01503C  6AF8               	clrf	tblptru,c
 45309  01503E  0E00               	movlw	low (__mediumconst shr (0+16))
 45310  015040  22F8               	addwfc	tblptru,f,c
 45311  015042                     	endif
 45312  015042  0009               	tblrd		*+
 45313  015044  CFF5 F034          	movff	tablat,i2___flmul@a
 45314  015048  0009               	tblrd		*+
 45315  01504A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45316  01504E  0009               	tblrd		*+
 45317  015050  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45318  015054  000A               	tblrd		*-
 45319  015056  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45320  01505A  0E00               	movlw	0
 45321  01505C  6E0A               	movwf	i2___awdiv@divisor+1,c
 45322  01505E  0E64               	movlw	100
 45323  015060  6E09               	movwf	i2___awdiv@divisor,c
 45324  015062  5051               	movf	i2scale@scl,w,c
 45325  015064  6E07               	movwf	i2___awdiv@dividend,c
 45326  015066  6A08               	clrf	i2___awdiv@dividend+1,c
 45327  015068  BE07               	btfsc	i2___awdiv@dividend,7,c
 45328  01506A  0608               	decf	i2___awdiv@dividend+1,f,c
 45329  01506C  ECAA  F0CD         	call	i2___awdiv	;wreg free
 45330  015070  90D8               	bcf	status,0,c
 45331  015072  3607               	rlcf	?i2___awdiv,f,c
 45332  015074  3608               	rlcf	?i2___awdiv+1,f,c
 45333  015076  90D8               	bcf	status,0,c
 45334  015078  3607               	rlcf	?i2___awdiv,f,c
 45335  01507A  3608               	rlcf	?i2___awdiv+1,f,c
 45336  01507C  0E48               	movlw	72
 45337  01507E  2607               	addwf	?i2___awdiv,f,c
 45338  015080  0E00               	movlw	0
 45339  015082  2208               	addwfc	?i2___awdiv+1,f,c
 45340  015084  0ED7               	movlw	low __npowers_
 45341  015086  2407               	addwf	?i2___awdiv,w,c
 45342  015088  6EF6               	movwf	tblptrl,c
 45343  01508A  0ECE               	movlw	high __npowers_
 45344  01508C  2008               	addwfc	?i2___awdiv+1,w,c
 45345  01508E  6EF7               	movwf	tblptrh,c
 45346  015090                     	if	1	;There are 3 active tblptr bytes
 45347  015090  6AF8               	clrf	tblptru,c
 45348  015092  0E00               	movlw	low (__mediumconst shr (0+16))
 45349  015094  22F8               	addwfc	tblptru,f,c
 45350  015096                     	endif
 45351  015096  0009               	tblrd		*+
 45352  015098  CFF5 F030          	movff	tablat,i2___flmul@b
 45353  01509C  0009               	tblrd		*+
 45354  01509E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45355  0150A2  0009               	tblrd		*+
 45356  0150A4  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45357  0150A8  000A               	tblrd		*-
 45358  0150AA  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45359  0150AE  EC8D  F0AD         	call	i2___flmul	;wreg free
 45360  0150B2  C030  F04D         	movff	?i2___flmul,i2_scale$5433
 45361  0150B6  C031  F04E         	movff	?i2___flmul+1,i2_scale$5433+1
 45362  0150BA  C032  F04F         	movff	?i2___flmul+2,i2_scale$5433+2
 45363  0150BE  C033  F050         	movff	?i2___flmul+3,i2_scale$5433+3
 45364                           
 45365                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 45366  0150C2  C04D  F030         	movff	i2_scale$5433,i2___flmul@b
 45367  0150C6  C04E  F031         	movff	i2_scale$5433+1,i2___flmul@b+1
 45368  0150CA  C04F  F032         	movff	i2_scale$5433+2,i2___flmul@b+2
 45369  0150CE  C050  F033         	movff	i2_scale$5433+3,i2___flmul@b+3
 45370  0150D2  0E00               	movlw	0
 45371  0150D4  6E04               	movwf	i2___awmod@divisor+1,c
 45372  0150D6  0E0A               	movlw	10
 45373  0150D8  6E03               	movwf	i2___awmod@divisor,c
 45374  0150DA  5051               	movf	i2scale@scl,w,c
 45375  0150DC  6E01               	movwf	i2___awmod@dividend,c
 45376  0150DE  6A02               	clrf	i2___awmod@dividend+1,c
 45377  0150E0  BE01               	btfsc	i2___awmod@dividend,7,c
 45378  0150E2  0602               	decf	i2___awmod@dividend+1,f,c
 45379  0150E4  EC22  F0CF         	call	i2___awmod	;wreg free
 45380  0150E8  90D8               	bcf	status,0,c
 45381  0150EA  3601               	rlcf	?i2___awmod,f,c
 45382  0150EC  3602               	rlcf	?i2___awmod+1,f,c
 45383  0150EE  90D8               	bcf	status,0,c
 45384  0150F0  3601               	rlcf	?i2___awmod,f,c
 45385  0150F2  3602               	rlcf	?i2___awmod+1,f,c
 45386  0150F4  0ED7               	movlw	low __npowers_
 45387  0150F6  2401               	addwf	?i2___awmod,w,c
 45388  0150F8  6EF6               	movwf	tblptrl,c
 45389  0150FA  0ECE               	movlw	high __npowers_
 45390  0150FC  2002               	addwfc	?i2___awmod+1,w,c
 45391  0150FE  6EF7               	movwf	tblptrh,c
 45392  015100                     	if	1	;There are 3 active tblptr bytes
 45393  015100  6AF8               	clrf	tblptru,c
 45394  015102  0E00               	movlw	low (__mediumconst shr (0+16))
 45395  015104  22F8               	addwfc	tblptru,f,c
 45396  015106                     	endif
 45397  015106  0009               	tblrd		*+
 45398  015108  CFF5 F034          	movff	tablat,i2___flmul@a
 45399  01510C  0009               	tblrd		*+
 45400  01510E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45401  015112  0009               	tblrd		*+
 45402  015114  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45403  015118  000A               	tblrd		*-
 45404  01511A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45405  01511E  EC8D  F0AD         	call	i2___flmul	;wreg free
 45406  015122  C030  F049         	movff	?i2___flmul,?i2_scale
 45407  015126  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45408  01512A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45409  01512E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45410  015132  0012               	return	
 45411  015134                     i2l1930:
 45412                           
 45413                           ;doprnt.c: 432: else if(scl > 10)
 45414  015134  5051               	movf	i2scale@scl,w,c
 45415  015136  0A80               	xorlw	128
 45416  015138  0F75               	addlw	-139
 45417  01513A  A0D8               	btfss	status,0,c
 45418  01513C  D05B               	goto	i2l1933
 45419                           
 45420                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 45421  01513E  0E00               	movlw	0
 45422  015140  6E0A               	movwf	i2___awdiv@divisor+1,c
 45423  015142  0E0A               	movlw	10
 45424  015144  6E09               	movwf	i2___awdiv@divisor,c
 45425  015146  5051               	movf	i2scale@scl,w,c
 45426  015148  6E07               	movwf	i2___awdiv@dividend,c
 45427  01514A  6A08               	clrf	i2___awdiv@dividend+1,c
 45428  01514C  BE07               	btfsc	i2___awdiv@dividend,7,c
 45429  01514E  0608               	decf	i2___awdiv@dividend+1,f,c
 45430  015150  ECAA  F0CD         	call	i2___awdiv	;wreg free
 45431  015154  90D8               	bcf	status,0,c
 45432  015156  3607               	rlcf	?i2___awdiv,f,c
 45433  015158  3608               	rlcf	?i2___awdiv+1,f,c
 45434  01515A  90D8               	bcf	status,0,c
 45435  01515C  3607               	rlcf	?i2___awdiv,f,c
 45436  01515E  3608               	rlcf	?i2___awdiv+1,f,c
 45437  015160  0E24               	movlw	36
 45438  015162  2607               	addwf	?i2___awdiv,f,c
 45439  015164  0E00               	movlw	0
 45440  015166  2208               	addwfc	?i2___awdiv+1,f,c
 45441  015168  0ED7               	movlw	low __npowers_
 45442  01516A  2407               	addwf	?i2___awdiv,w,c
 45443  01516C  6EF6               	movwf	tblptrl,c
 45444  01516E  0ECE               	movlw	high __npowers_
 45445  015170  2008               	addwfc	?i2___awdiv+1,w,c
 45446  015172  6EF7               	movwf	tblptrh,c
 45447  015174                     	if	1	;There are 3 active tblptr bytes
 45448  015174  6AF8               	clrf	tblptru,c
 45449  015176  0E00               	movlw	low (__mediumconst shr (0+16))
 45450  015178  22F8               	addwfc	tblptru,f,c
 45451  01517A                     	endif
 45452  01517A  0009               	tblrd		*+
 45453  01517C  CFF5 F030          	movff	tablat,i2___flmul@b
 45454  015180  0009               	tblrd		*+
 45455  015182  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45456  015186  0009               	tblrd		*+
 45457  015188  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45458  01518C  000A               	tblrd		*-
 45459  01518E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45460  015192  0E00               	movlw	0
 45461  015194  6E04               	movwf	i2___awmod@divisor+1,c
 45462  015196  0E0A               	movlw	10
 45463  015198  6E03               	movwf	i2___awmod@divisor,c
 45464  01519A  5051               	movf	i2scale@scl,w,c
 45465  01519C  6E01               	movwf	i2___awmod@dividend,c
 45466  01519E  6A02               	clrf	i2___awmod@dividend+1,c
 45467  0151A0  BE01               	btfsc	i2___awmod@dividend,7,c
 45468  0151A2  0602               	decf	i2___awmod@dividend+1,f,c
 45469  0151A4  EC22  F0CF         	call	i2___awmod	;wreg free
 45470  0151A8  90D8               	bcf	status,0,c
 45471  0151AA  3601               	rlcf	?i2___awmod,f,c
 45472  0151AC  3602               	rlcf	?i2___awmod+1,f,c
 45473  0151AE  90D8               	bcf	status,0,c
 45474  0151B0  3601               	rlcf	?i2___awmod,f,c
 45475  0151B2  3602               	rlcf	?i2___awmod+1,f,c
 45476  0151B4  0ED7               	movlw	low __npowers_
 45477  0151B6  2401               	addwf	?i2___awmod,w,c
 45478  0151B8  6EF6               	movwf	tblptrl,c
 45479  0151BA  0ECE               	movlw	high __npowers_
 45480  0151BC  2002               	addwfc	?i2___awmod+1,w,c
 45481  0151BE  6EF7               	movwf	tblptrh,c
 45482  0151C0                     	if	1	;There are 3 active tblptr bytes
 45483  0151C0  6AF8               	clrf	tblptru,c
 45484  0151C2  0E00               	movlw	low (__mediumconst shr (0+16))
 45485  0151C4  22F8               	addwfc	tblptru,f,c
 45486  0151C6                     	endif
 45487  0151C6  0009               	tblrd		*+
 45488  0151C8  CFF5 F034          	movff	tablat,i2___flmul@a
 45489  0151CC  0009               	tblrd		*+
 45490  0151CE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45491  0151D2  0009               	tblrd		*+
 45492  0151D4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45493  0151D8  000A               	tblrd		*-
 45494  0151DA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45495  0151DE  EC8D  F0AD         	call	i2___flmul	;wreg free
 45496  0151E2  C030  F049         	movff	?i2___flmul,?i2_scale
 45497  0151E6  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45498  0151EA  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45499  0151EE  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45500  0151F2  0012               	return	
 45501  0151F4                     i2l1933:
 45502                           
 45503                           ;doprnt.c: 434: return _npowers_[scl];
 45504  0151F4  5051               	movf	i2scale@scl,w,c
 45505  0151F6  0D04               	mullw	4
 45506  0151F8  0ED7               	movlw	low __npowers_
 45507  0151FA  24F3               	addwf	prodl,w,c
 45508  0151FC  6EF6               	movwf	tblptrl,c
 45509  0151FE  0ECE               	movlw	high __npowers_
 45510  015200  20F4               	addwfc	prodh,w,c
 45511  015202  6EF7               	movwf	tblptrh,c
 45512  015204                     	if	1	;There are 3 active tblptr bytes
 45513  015204  6AF8               	clrf	tblptru,c
 45514  015206  0E00               	movlw	low (__mediumconst shr (0+16))
 45515  015208  22F8               	addwfc	tblptru,f,c
 45516  01520A                     	endif
 45517  01520A  0009               	tblrd		*+
 45518  01520C  CFF5 F049          	movff	tablat,?i2_scale
 45519  015210  0009               	tblrd		*+
 45520  015212  CFF5 F04A          	movff	tablat,?i2_scale+1
 45521  015216  0009               	tblrd		*+
 45522  015218  CFF5 F04B          	movff	tablat,?i2_scale+2
 45523  01521C  000A               	tblrd		*-
 45524  01521E  CFF5 F04C          	movff	tablat,?i2_scale+3
 45525  015222  0012               	return	
 45526  015224                     i2l1929:
 45527                           
 45528                           ;doprnt.c: 435: }
 45529                           ;doprnt.c: 436: if(scl>=110)
 45530  015224  5051               	movf	i2scale@scl,w,c
 45531  015226  0A80               	xorlw	128
 45532  015228  0F12               	addlw	-238
 45533  01522A  A0D8               	btfss	status,0,c
 45534  01522C  D0A1               	goto	i2l1934
 45535                           
 45536                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45537  01522E  0E00               	movlw	0
 45538  015230  6E0A               	movwf	i2___awdiv@divisor+1,c
 45539  015232  0E0A               	movlw	10
 45540  015234  6E09               	movwf	i2___awdiv@divisor,c
 45541  015236  0E00               	movlw	0
 45542  015238  6E04               	movwf	i2___awmod@divisor+1,c
 45543  01523A  0E64               	movlw	100
 45544  01523C  6E03               	movwf	i2___awmod@divisor,c
 45545  01523E  5051               	movf	i2scale@scl,w,c
 45546  015240  6E01               	movwf	i2___awmod@dividend,c
 45547  015242  6A02               	clrf	i2___awmod@dividend+1,c
 45548  015244  BE01               	btfsc	i2___awmod@dividend,7,c
 45549  015246  0602               	decf	i2___awmod@dividend+1,f,c
 45550  015248  EC22  F0CF         	call	i2___awmod	;wreg free
 45551  01524C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 45552  015250  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 45553  015254  ECAA  F0CD         	call	i2___awdiv	;wreg free
 45554  015258  90D8               	bcf	status,0,c
 45555  01525A  3607               	rlcf	?i2___awdiv,f,c
 45556  01525C  3608               	rlcf	?i2___awdiv+1,f,c
 45557  01525E  90D8               	bcf	status,0,c
 45558  015260  3607               	rlcf	?i2___awdiv,f,c
 45559  015262  3608               	rlcf	?i2___awdiv+1,f,c
 45560  015264  0E24               	movlw	36
 45561  015266  2607               	addwf	?i2___awdiv,f,c
 45562  015268  0E00               	movlw	0
 45563  01526A  2208               	addwfc	?i2___awdiv+1,f,c
 45564  01526C  0EA3               	movlw	low __powers_
 45565  01526E  2407               	addwf	?i2___awdiv,w,c
 45566  015270  6EF6               	movwf	tblptrl,c
 45567  015272  0ECE               	movlw	high __powers_
 45568  015274  2008               	addwfc	?i2___awdiv+1,w,c
 45569  015276  6EF7               	movwf	tblptrh,c
 45570  015278                     	if	1	;There are 3 active tblptr bytes
 45571  015278  6AF8               	clrf	tblptru,c
 45572  01527A  0E00               	movlw	low (__mediumconst shr (0+16))
 45573  01527C  22F8               	addwfc	tblptru,f,c
 45574  01527E                     	endif
 45575  01527E  0009               	tblrd		*+
 45576  015280  CFF5 F034          	movff	tablat,i2___flmul@a
 45577  015284  0009               	tblrd		*+
 45578  015286  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45579  01528A  0009               	tblrd		*+
 45580  01528C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45581  015290  000A               	tblrd		*-
 45582  015292  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45583  015296  0E00               	movlw	0
 45584  015298  6E0A               	movwf	i2___awdiv@divisor+1,c
 45585  01529A  0E64               	movlw	100
 45586  01529C  6E09               	movwf	i2___awdiv@divisor,c
 45587  01529E  5051               	movf	i2scale@scl,w,c
 45588  0152A0  6E07               	movwf	i2___awdiv@dividend,c
 45589  0152A2  6A08               	clrf	i2___awdiv@dividend+1,c
 45590  0152A4  BE07               	btfsc	i2___awdiv@dividend,7,c
 45591  0152A6  0608               	decf	i2___awdiv@dividend+1,f,c
 45592  0152A8  ECAA  F0CD         	call	i2___awdiv	;wreg free
 45593  0152AC  90D8               	bcf	status,0,c
 45594  0152AE  3607               	rlcf	?i2___awdiv,f,c
 45595  0152B0  3608               	rlcf	?i2___awdiv+1,f,c
 45596  0152B2  90D8               	bcf	status,0,c
 45597  0152B4  3607               	rlcf	?i2___awdiv,f,c
 45598  0152B6  3608               	rlcf	?i2___awdiv+1,f,c
 45599  0152B8  0E48               	movlw	72
 45600  0152BA  2607               	addwf	?i2___awdiv,f,c
 45601  0152BC  0E00               	movlw	0
 45602  0152BE  2208               	addwfc	?i2___awdiv+1,f,c
 45603  0152C0  0EA3               	movlw	low __powers_
 45604  0152C2  2407               	addwf	?i2___awdiv,w,c
 45605  0152C4  6EF6               	movwf	tblptrl,c
 45606  0152C6  0ECE               	movlw	high __powers_
 45607  0152C8  2008               	addwfc	?i2___awdiv+1,w,c
 45608  0152CA  6EF7               	movwf	tblptrh,c
 45609  0152CC                     	if	1	;There are 3 active tblptr bytes
 45610  0152CC  6AF8               	clrf	tblptru,c
 45611  0152CE  0E00               	movlw	low (__mediumconst shr (0+16))
 45612  0152D0  22F8               	addwfc	tblptru,f,c
 45613  0152D2                     	endif
 45614  0152D2  0009               	tblrd		*+
 45615  0152D4  CFF5 F030          	movff	tablat,i2___flmul@b
 45616  0152D8  0009               	tblrd		*+
 45617  0152DA  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45618  0152DE  0009               	tblrd		*+
 45619  0152E0  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45620  0152E4  000A               	tblrd		*-
 45621  0152E6  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45622  0152EA  EC8D  F0AD         	call	i2___flmul	;wreg free
 45623  0152EE  C030  F04D         	movff	?i2___flmul,i2_scale$5433
 45624  0152F2  C031  F04E         	movff	?i2___flmul+1,i2_scale$5433+1
 45625  0152F6  C032  F04F         	movff	?i2___flmul+2,i2_scale$5433+2
 45626  0152FA  C033  F050         	movff	?i2___flmul+3,i2_scale$5433+3
 45627                           
 45628                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 45629  0152FE  C04D  F030         	movff	i2_scale$5433,i2___flmul@b
 45630  015302  C04E  F031         	movff	i2_scale$5433+1,i2___flmul@b+1
 45631  015306  C04F  F032         	movff	i2_scale$5433+2,i2___flmul@b+2
 45632  01530A  C050  F033         	movff	i2_scale$5433+3,i2___flmul@b+3
 45633  01530E  0E00               	movlw	0
 45634  015310  6E04               	movwf	i2___awmod@divisor+1,c
 45635  015312  0E0A               	movlw	10
 45636  015314  6E03               	movwf	i2___awmod@divisor,c
 45637  015316  5051               	movf	i2scale@scl,w,c
 45638  015318  6E01               	movwf	i2___awmod@dividend,c
 45639  01531A  6A02               	clrf	i2___awmod@dividend+1,c
 45640  01531C  BE01               	btfsc	i2___awmod@dividend,7,c
 45641  01531E  0602               	decf	i2___awmod@dividend+1,f,c
 45642  015320  EC22  F0CF         	call	i2___awmod	;wreg free
 45643  015324  90D8               	bcf	status,0,c
 45644  015326  3601               	rlcf	?i2___awmod,f,c
 45645  015328  3602               	rlcf	?i2___awmod+1,f,c
 45646  01532A  90D8               	bcf	status,0,c
 45647  01532C  3601               	rlcf	?i2___awmod,f,c
 45648  01532E  3602               	rlcf	?i2___awmod+1,f,c
 45649  015330  0EA3               	movlw	low __powers_
 45650  015332  2401               	addwf	?i2___awmod,w,c
 45651  015334  6EF6               	movwf	tblptrl,c
 45652  015336  0ECE               	movlw	high __powers_
 45653  015338  2002               	addwfc	?i2___awmod+1,w,c
 45654  01533A  6EF7               	movwf	tblptrh,c
 45655  01533C                     	if	1	;There are 3 active tblptr bytes
 45656  01533C  6AF8               	clrf	tblptru,c
 45657  01533E  0E00               	movlw	low (__mediumconst shr (0+16))
 45658  015340  22F8               	addwfc	tblptru,f,c
 45659  015342                     	endif
 45660  015342  0009               	tblrd		*+
 45661  015344  CFF5 F034          	movff	tablat,i2___flmul@a
 45662  015348  0009               	tblrd		*+
 45663  01534A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45664  01534E  0009               	tblrd		*+
 45665  015350  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45666  015354  000A               	tblrd		*-
 45667  015356  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45668  01535A  EC8D  F0AD         	call	i2___flmul	;wreg free
 45669  01535E  C030  F049         	movff	?i2___flmul,?i2_scale
 45670  015362  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45671  015366  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45672  01536A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45673  01536E  0012               	return	
 45674  015370                     i2l1934:
 45675                           
 45676                           ;doprnt.c: 438: else if(scl > 10)
 45677  015370  5051               	movf	i2scale@scl,w,c
 45678  015372  0A80               	xorlw	128
 45679  015374  0F75               	addlw	-139
 45680  015376  A0D8               	btfss	status,0,c
 45681  015378  D05B               	goto	i2l1936
 45682                           
 45683                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 45684  01537A  0E00               	movlw	0
 45685  01537C  6E0A               	movwf	i2___awdiv@divisor+1,c
 45686  01537E  0E0A               	movlw	10
 45687  015380  6E09               	movwf	i2___awdiv@divisor,c
 45688  015382  5051               	movf	i2scale@scl,w,c
 45689  015384  6E07               	movwf	i2___awdiv@dividend,c
 45690  015386  6A08               	clrf	i2___awdiv@dividend+1,c
 45691  015388  BE07               	btfsc	i2___awdiv@dividend,7,c
 45692  01538A  0608               	decf	i2___awdiv@dividend+1,f,c
 45693  01538C  ECAA  F0CD         	call	i2___awdiv	;wreg free
 45694  015390  90D8               	bcf	status,0,c
 45695  015392  3607               	rlcf	?i2___awdiv,f,c
 45696  015394  3608               	rlcf	?i2___awdiv+1,f,c
 45697  015396  90D8               	bcf	status,0,c
 45698  015398  3607               	rlcf	?i2___awdiv,f,c
 45699  01539A  3608               	rlcf	?i2___awdiv+1,f,c
 45700  01539C  0E24               	movlw	36
 45701  01539E  2607               	addwf	?i2___awdiv,f,c
 45702  0153A0  0E00               	movlw	0
 45703  0153A2  2208               	addwfc	?i2___awdiv+1,f,c
 45704  0153A4  0EA3               	movlw	low __powers_
 45705  0153A6  2407               	addwf	?i2___awdiv,w,c
 45706  0153A8  6EF6               	movwf	tblptrl,c
 45707  0153AA  0ECE               	movlw	high __powers_
 45708  0153AC  2008               	addwfc	?i2___awdiv+1,w,c
 45709  0153AE  6EF7               	movwf	tblptrh,c
 45710  0153B0                     	if	1	;There are 3 active tblptr bytes
 45711  0153B0  6AF8               	clrf	tblptru,c
 45712  0153B2  0E00               	movlw	low (__mediumconst shr (0+16))
 45713  0153B4  22F8               	addwfc	tblptru,f,c
 45714  0153B6                     	endif
 45715  0153B6  0009               	tblrd		*+
 45716  0153B8  CFF5 F030          	movff	tablat,i2___flmul@b
 45717  0153BC  0009               	tblrd		*+
 45718  0153BE  CFF5 F031          	movff	tablat,i2___flmul@b+1
 45719  0153C2  0009               	tblrd		*+
 45720  0153C4  CFF5 F032          	movff	tablat,i2___flmul@b+2
 45721  0153C8  000A               	tblrd		*-
 45722  0153CA  CFF5 F033          	movff	tablat,i2___flmul@b+3
 45723  0153CE  0E00               	movlw	0
 45724  0153D0  6E04               	movwf	i2___awmod@divisor+1,c
 45725  0153D2  0E0A               	movlw	10
 45726  0153D4  6E03               	movwf	i2___awmod@divisor,c
 45727  0153D6  5051               	movf	i2scale@scl,w,c
 45728  0153D8  6E01               	movwf	i2___awmod@dividend,c
 45729  0153DA  6A02               	clrf	i2___awmod@dividend+1,c
 45730  0153DC  BE01               	btfsc	i2___awmod@dividend,7,c
 45731  0153DE  0602               	decf	i2___awmod@dividend+1,f,c
 45732  0153E0  EC22  F0CF         	call	i2___awmod	;wreg free
 45733  0153E4  90D8               	bcf	status,0,c
 45734  0153E6  3601               	rlcf	?i2___awmod,f,c
 45735  0153E8  3602               	rlcf	?i2___awmod+1,f,c
 45736  0153EA  90D8               	bcf	status,0,c
 45737  0153EC  3601               	rlcf	?i2___awmod,f,c
 45738  0153EE  3602               	rlcf	?i2___awmod+1,f,c
 45739  0153F0  0EA3               	movlw	low __powers_
 45740  0153F2  2401               	addwf	?i2___awmod,w,c
 45741  0153F4  6EF6               	movwf	tblptrl,c
 45742  0153F6  0ECE               	movlw	high __powers_
 45743  0153F8  2002               	addwfc	?i2___awmod+1,w,c
 45744  0153FA  6EF7               	movwf	tblptrh,c
 45745  0153FC                     	if	1	;There are 3 active tblptr bytes
 45746  0153FC  6AF8               	clrf	tblptru,c
 45747  0153FE  0E00               	movlw	low (__mediumconst shr (0+16))
 45748  015400  22F8               	addwfc	tblptru,f,c
 45749  015402                     	endif
 45750  015402  0009               	tblrd		*+
 45751  015404  CFF5 F034          	movff	tablat,i2___flmul@a
 45752  015408  0009               	tblrd		*+
 45753  01540A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 45754  01540E  0009               	tblrd		*+
 45755  015410  CFF5 F036          	movff	tablat,i2___flmul@a+2
 45756  015414  000A               	tblrd		*-
 45757  015416  CFF5 F037          	movff	tablat,i2___flmul@a+3
 45758  01541A  EC8D  F0AD         	call	i2___flmul	;wreg free
 45759  01541E  C030  F049         	movff	?i2___flmul,?i2_scale
 45760  015422  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 45761  015426  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 45762  01542A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 45763  01542E  0012               	return	
 45764  015430                     i2l1936:
 45765                           
 45766                           ;doprnt.c: 440: return _powers_[scl];
 45767  015430  5051               	movf	i2scale@scl,w,c
 45768  015432  0D04               	mullw	4
 45769  015434  0EA3               	movlw	low __powers_
 45770  015436  24F3               	addwf	prodl,w,c
 45771  015438  6EF6               	movwf	tblptrl,c
 45772  01543A  0ECE               	movlw	high __powers_
 45773  01543C  20F4               	addwfc	prodh,w,c
 45774  01543E  6EF7               	movwf	tblptrh,c
 45775  015440                     	if	1	;There are 3 active tblptr bytes
 45776  015440  6AF8               	clrf	tblptru,c
 45777  015442  0E00               	movlw	low (__mediumconst shr (0+16))
 45778  015444  22F8               	addwfc	tblptru,f,c
 45779  015446                     	endif
 45780  015446  0009               	tblrd		*+
 45781  015448  CFF5 F049          	movff	tablat,?i2_scale
 45782  01544C  0009               	tblrd		*+
 45783  01544E  CFF5 F04A          	movff	tablat,?i2_scale+1
 45784  015452  0009               	tblrd		*+
 45785  015454  CFF5 F04B          	movff	tablat,?i2_scale+2
 45786  015458  000A               	tblrd		*-
 45787  01545A  CFF5 F04C          	movff	tablat,?i2_scale+3
 45788  01545E  0012               	return	
 45789  015460                     __end_ofi2_scale:
 45790                           	opt stack 0
 45791                           tosu	equ	0xFFF
 45792                           tosh	equ	0xFFE
 45793                           tosl	equ	0xFFD
 45794                           pclatu	equ	0xFFB
 45795                           pclath	equ	0xFFA
 45796                           tblptru	equ	0xFF8
 45797                           tblptrh	equ	0xFF7
 45798                           tblptrl	equ	0xFF6
 45799                           tablat	equ	0xFF5
 45800                           prodh	equ	0xFF4
 45801                           prodl	equ	0xFF3
 45802                           intcon	equ	0xFF2
 45803                           indf0	equ	0xFEF
 45804                           postinc0	equ	0xFEE
 45805                           fsr0h	equ	0xFEA
 45806                           fsr0l	equ	0xFE9
 45807                           wreg	equ	0xFE8
 45808                           indf1	equ	0xFE7
 45809                           postdec1	equ	0xFE5
 45810                           plusw1	equ	0xFE3
 45811                           fsr1h	equ	0xFE2
 45812                           fsr1l	equ	0xFE1
 45813                           bsr	equ	0xFE0
 45814                           indf2	equ	0xFDF
 45815                           postinc2	equ	0xFDE
 45816                           postdec2	equ	0xFDD
 45817                           plusw2	equ	0xFDB
 45818                           fsr2h	equ	0xFDA
 45819                           fsr2l	equ	0xFD9
 45820                           status	equ	0xFD8
 45821                           
 45822 ;; *************** function i2_putch *****************
 45823 ;; Defined at:
 45824 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 45825 ;; Parameters:    Size  Location     Type
 45826 ;;  txData          1    wreg     unsigned char 
 45827 ;; Auto vars:     Size  Location     Type
 45828 ;;  txData          1    1[COMRAM] unsigned char 
 45829 ;; Return value:  Size  Location     Type
 45830 ;;                  1    wreg      void 
 45831 ;; Registers used:
 45832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45833 ;; Tracked objects:
 45834 ;;		On entry : 0/0
 45835 ;;		On exit  : 0/0
 45836 ;;		Unchanged: 0/0
 45837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45842 ;;Total ram usage:        1 bytes
 45843 ;; Hardware stack levels used:    1
 45844 ;; Hardware stack levels required when called:    1
 45845 ;; This function calls:
 45846 ;;		i2_EUSART2_Write
 45847 ;; This function is called by:
 45848 ;;		i2_printf
 45849 ;; This function uses a non-reentrant model
 45850 ;;
 45851                           
 45852                           	psect	text136
 45853  01B24A                     __ptext136:
 45854                           	opt stack 0
 45855  01B24A                     i2_putch:
 45856                           	opt stack 13
 45857                           
 45858                           ;incstack = 0
 45859                           ;i2putch@txData stored from wreg
 45860  01B24A  6E02               	movwf	i2putch@txData,c
 45861                           
 45862                           ;eusart2.c: 187: EUSART2_Write(txData);
 45863  01B24C  5002               	movf	i2putch@txData,w,c
 45864  01B24E  EC30  F0D3         	call	i2_EUSART2_Write
 45865  01B252  0012               	return		;funcret
 45866  01B254                     __end_ofi2_putch:
 45867                           	opt stack 0
 45868                           tosu	equ	0xFFF
 45869                           tosh	equ	0xFFE
 45870                           tosl	equ	0xFFD
 45871                           pclatu	equ	0xFFB
 45872                           pclath	equ	0xFFA
 45873                           tblptru	equ	0xFF8
 45874                           tblptrh	equ	0xFF7
 45875                           tblptrl	equ	0xFF6
 45876                           tablat	equ	0xFF5
 45877                           prodh	equ	0xFF4
 45878                           prodl	equ	0xFF3
 45879                           intcon	equ	0xFF2
 45880                           indf0	equ	0xFEF
 45881                           postinc0	equ	0xFEE
 45882                           fsr0h	equ	0xFEA
 45883                           fsr0l	equ	0xFE9
 45884                           wreg	equ	0xFE8
 45885                           indf1	equ	0xFE7
 45886                           postdec1	equ	0xFE5
 45887                           plusw1	equ	0xFE3
 45888                           fsr1h	equ	0xFE2
 45889                           fsr1l	equ	0xFE1
 45890                           bsr	equ	0xFE0
 45891                           indf2	equ	0xFDF
 45892                           postinc2	equ	0xFDE
 45893                           postdec2	equ	0xFDD
 45894                           plusw2	equ	0xFDB
 45895                           fsr2h	equ	0xFDA
 45896                           fsr2l	equ	0xFD9
 45897                           status	equ	0xFD8
 45898                           
 45899 ;; *************** function i2_EUSART2_Write *****************
 45900 ;; Defined at:
 45901 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 45902 ;; Parameters:    Size  Location     Type
 45903 ;;  txData          1    wreg     unsigned char 
 45904 ;; Auto vars:     Size  Location     Type
 45905 ;;  txData          1    0[COMRAM] unsigned char 
 45906 ;; Return value:  Size  Location     Type
 45907 ;;                  1    wreg      void 
 45908 ;; Registers used:
 45909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45910 ;; Tracked objects:
 45911 ;;		On entry : 0/0
 45912 ;;		On exit  : 0/0
 45913 ;;		Unchanged: 0/0
 45914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45919 ;;Total ram usage:        1 bytes
 45920 ;; Hardware stack levels used:    1
 45921 ;; This function calls:
 45922 ;;		Nothing
 45923 ;; This function is called by:
 45924 ;;		i2_putch
 45925 ;; This function uses a non-reentrant model
 45926 ;;
 45927                           
 45928                           	psect	text137
 45929  01A660                     __ptext137:
 45930                           	opt stack 0
 45931  01A660                     i2_EUSART2_Write:
 45932                           	opt stack 13
 45933                           
 45934                           ;incstack = 0
 45935                           ;i2EUSART2_Write@txData stored from wreg
 45936  01A660  6E01               	movwf	i2EUSART2_Write@txData,c
 45937                           
 45938                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 45939  01A662  D004               	goto	i2l430
 45940  01A664                     i2l431:
 45941                           
 45942                           ; BSR set to: 1
 45943  01A664  0004               	clrwdt		;# 
 45944                           
 45945                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 45946  01A666  0E01               	movlw	1
 45947  01A668  0102               	movlb	2	; () banked
 45948  01A66A  6F08               	movwf	(_error_handler+8)& (0+255),b
 45949  01A66C                     i2l430:
 45950                           
 45951                           ; BSR set to: 2
 45952  01A66C  0101               	movlb	1	; () banked
 45953  01A66E  51DF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 45954  01A670  B4D8               	btfsc	status,2,c
 45955  01A672  D7F8               	goto	i2l431
 45956                           
 45957                           ; BSR set to: 1
 45958                           ;eusart2.c: 161: }
 45959                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 45960  01A674  010E               	movlb	14	; () banked
 45961  01A676  BD2C               	btfsc	44,6,b	;volatile
 45962  01A678  D003               	goto	i2l433
 45963                           
 45964                           ; BSR set to: 14
 45965                           ;eusart2.c: 164: {
 45966                           ;eusart2.c: 165: TX2REG = txData;
 45967  01A67A  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 45968                           
 45969                           ;eusart2.c: 166: }
 45970  01A67E  D013               	goto	i2l434
 45971  01A680                     i2l433:
 45972                           
 45973                           ; BSR set to: 14
 45974                           ;eusart2.c: 167: else
 45975                           ;eusart2.c: 168: {
 45976                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 45977  01A680  9D2C               	bcf	44,6,b	;volatile
 45978                           
 45979                           ; BSR set to: 14
 45980                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 45981  01A682  0101               	movlb	1	; () banked
 45982  01A684  51E1               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 45983  01A686  0D01               	mullw	1
 45984  01A688  0E00               	movlw	low _eusart2TxBuffer
 45985  01A68A  24F3               	addwf	prodl,w,c
 45986  01A68C  6ED9               	movwf	fsr2l,c
 45987  01A68E  0E04               	movlw	high _eusart2TxBuffer
 45988  01A690  20F4               	addwfc	prodh,w,c
 45989  01A692  6EDA               	movwf	fsr2h,c
 45990  01A694  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 45991                           
 45992                           ; BSR set to: 1
 45993  01A698  2BE1               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 45994                           
 45995                           ; BSR set to: 1
 45996                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 45997  01A69A  0E7F               	movlw	127
 45998  01A69C  65E1               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 45999  01A69E  D002               	goto	i2l435
 46000                           
 46001                           ; BSR set to: 1
 46002                           ;eusart2.c: 172: {
 46003                           ;eusart2.c: 173: eusart2TxHead = 0;
 46004  01A6A0  0E00               	movlw	0
 46005  01A6A2  6FE1               	movwf	_eusart2TxHead& (0+255),b	;volatile
 46006  01A6A4                     i2l435:
 46007                           
 46008                           ; BSR set to: 1
 46009                           ;eusart2.c: 174: }
 46010                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 46011                           
 46012                           ; BSR set to: 1
 46013  01A6A4  07DF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 46014  01A6A6                     i2l434:
 46015                           
 46016                           ;eusart2.c: 176: }
 46017                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 46018                           
 46019                           ; BSR set to: 1
 46020  01A6A6  010E               	movlb	14	; () banked
 46021  01A6A8  8D2C               	bsf	44,6,b	;volatile
 46022                           
 46023                           ; BSR set to: 14
 46024  01A6AA  0012               	return		;funcret
 46025  01A6AC                     __end_ofi2_EUSART2_Write:
 46026                           	opt stack 0
 46027                           tosu	equ	0xFFF
 46028                           tosh	equ	0xFFE
 46029                           tosl	equ	0xFFD
 46030                           pclatu	equ	0xFFB
 46031                           pclath	equ	0xFFA
 46032                           tblptru	equ	0xFF8
 46033                           tblptrh	equ	0xFF7
 46034                           tblptrl	equ	0xFF6
 46035                           tablat	equ	0xFF5
 46036                           prodh	equ	0xFF4
 46037                           prodl	equ	0xFF3
 46038                           intcon	equ	0xFF2
 46039                           indf0	equ	0xFEF
 46040                           postinc0	equ	0xFEE
 46041                           fsr0h	equ	0xFEA
 46042                           fsr0l	equ	0xFE9
 46043                           wreg	equ	0xFE8
 46044                           indf1	equ	0xFE7
 46045                           postdec1	equ	0xFE5
 46046                           plusw1	equ	0xFE3
 46047                           fsr1h	equ	0xFE2
 46048                           fsr1l	equ	0xFE1
 46049                           bsr	equ	0xFE0
 46050                           indf2	equ	0xFDF
 46051                           postinc2	equ	0xFDE
 46052                           postdec2	equ	0xFDD
 46053                           plusw2	equ	0xFDB
 46054                           fsr2h	equ	0xFDA
 46055                           fsr2l	equ	0xFD9
 46056                           status	equ	0xFD8
 46057                           
 46058 ;; *************** function i2_isdigit *****************
 46059 ;; Defined at:
 46060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 46061 ;; Parameters:    Size  Location     Type
 46062 ;;  c               1    wreg     unsigned char 
 46063 ;; Auto vars:     Size  Location     Type
 46064 ;;  c               1    2[COMRAM] unsigned char 
 46065 ;; Return value:  Size  Location     Type
 46066 ;;		None               void
 46067 ;; Registers used:
 46068 ;;		wreg, status,2, status,0
 46069 ;; Tracked objects:
 46070 ;;		On entry : 0/0
 46071 ;;		On exit  : 0/0
 46072 ;;		Unchanged: 0/0
 46073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46078 ;;Total ram usage:        3 bytes
 46079 ;; Hardware stack levels used:    1
 46080 ;; This function calls:
 46081 ;;		Nothing
 46082 ;; This function is called by:
 46083 ;;		i2__doprnt
 46084 ;; This function uses a non-reentrant model
 46085 ;;
 46086                           
 46087                           	psect	text138
 46088  01AFB8                     __ptext138:
 46089                           	opt stack 0
 46090  01AFB8                     i2_isdigit:
 46091                           	opt stack 14
 46092                           
 46093                           ; BSR set to: 14
 46094                           ;incstack = 0
 46095                           ;i2isdigit@c stored from wreg
 46096  01AFB8  6E03               	movwf	i2isdigit@c,c
 46097  01AFBA  0E00               	movlw	0
 46098  01AFBC  6E02               	movwf	i2_isdigit$4329,c
 46099  01AFBE  0E3A               	movlw	58
 46100  01AFC0  6003               	cpfslt	i2isdigit@c,c
 46101  01AFC2  D005               	goto	i2l2555
 46102  01AFC4  0E2F               	movlw	47
 46103  01AFC6  6403               	cpfsgt	i2isdigit@c,c
 46104  01AFC8  D002               	goto	i2l2555
 46105  01AFCA  0E01               	movlw	1
 46106  01AFCC  6E02               	movwf	i2_isdigit$4329,c
 46107  01AFCE                     i2l2555:
 46108  01AFCE  C002  F001         	movff	i2_isdigit$4329,??i2_isdigit
 46109  01AFD2  3001               	rrcf	??i2_isdigit,w,c
 46110  01AFD4  0012               	return	
 46111  01AFD6                     __end_ofi2_isdigit:
 46112                           	opt stack 0
 46113                           tosu	equ	0xFFF
 46114                           tosh	equ	0xFFE
 46115                           tosl	equ	0xFFD
 46116                           pclatu	equ	0xFFB
 46117                           pclath	equ	0xFFA
 46118                           tblptru	equ	0xFF8
 46119                           tblptrh	equ	0xFF7
 46120                           tblptrl	equ	0xFF6
 46121                           tablat	equ	0xFF5
 46122                           prodh	equ	0xFF4
 46123                           prodl	equ	0xFF3
 46124                           intcon	equ	0xFF2
 46125                           indf0	equ	0xFEF
 46126                           postinc0	equ	0xFEE
 46127                           fsr0h	equ	0xFEA
 46128                           fsr0l	equ	0xFE9
 46129                           wreg	equ	0xFE8
 46130                           indf1	equ	0xFE7
 46131                           postdec1	equ	0xFE5
 46132                           plusw1	equ	0xFE3
 46133                           fsr1h	equ	0xFE2
 46134                           fsr1l	equ	0xFE1
 46135                           bsr	equ	0xFE0
 46136                           indf2	equ	0xFDF
 46137                           postinc2	equ	0xFDE
 46138                           postdec2	equ	0xFDD
 46139                           plusw2	equ	0xFDB
 46140                           fsr2h	equ	0xFDA
 46141                           fsr2l	equ	0xFD9
 46142                           status	equ	0xFD8
 46143                           
 46144 ;; *************** function i2_fround *****************
 46145 ;; Defined at:
 46146 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 46147 ;; Parameters:    Size  Location     Type
 46148 ;;  prec            1    wreg     unsigned char 
 46149 ;; Auto vars:     Size  Location     Type
 46150 ;;  prec            1   84[COMRAM] unsigned char 
 46151 ;; Return value:  Size  Location     Type
 46152 ;;                  4   72[COMRAM] unsigned char 
 46153 ;; Registers used:
 46154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46155 ;; Tracked objects:
 46156 ;;		On entry : 0/0
 46157 ;;		On exit  : 0/0
 46158 ;;		Unchanged: 0/0
 46159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46161 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46163 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46164 ;;Total ram usage:       13 bytes
 46165 ;; Hardware stack levels used:    1
 46166 ;; Hardware stack levels required when called:    1
 46167 ;; This function calls:
 46168 ;;		i2___awdiv
 46169 ;;		i2___awmod
 46170 ;;		i2___flmul
 46171 ;; This function is called by:
 46172 ;;		i2__doprnt
 46173 ;; This function uses a non-reentrant model
 46174 ;;
 46175                           
 46176                           	psect	text139
 46177  0175DC                     __ptext139:
 46178                           	opt stack 0
 46179  0175DC                     i2_fround:
 46180                           	opt stack 13
 46181                           
 46182                           ;incstack = 0
 46183                           ;i2fround@prec stored from wreg
 46184  0175DC  6E55               	movwf	i2fround@prec,c
 46185                           
 46186                           ;doprnt.c: 413: if(prec>=110)
 46187  0175DE  0E6D               	movlw	109
 46188  0175E0  6455               	cpfsgt	i2fround@prec,c
 46189  0175E2  D0B5               	goto	i2l1923
 46190                           
 46191                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46192  0175E4  0E00               	movlw	0
 46193  0175E6  6E0A               	movwf	i2___awdiv@divisor+1,c
 46194  0175E8  0E0A               	movlw	10
 46195  0175EA  6E09               	movwf	i2___awdiv@divisor,c
 46196  0175EC  0E00               	movlw	0
 46197  0175EE  6E04               	movwf	i2___awmod@divisor+1,c
 46198  0175F0  0E64               	movlw	100
 46199  0175F2  6E03               	movwf	i2___awmod@divisor,c
 46200  0175F4  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46201  0175F8  6A02               	clrf	i2___awmod@dividend+1,c
 46202  0175FA  EC22  F0CF         	call	i2___awmod	;wreg free
 46203  0175FE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 46204  017602  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 46205  017606  ECAA  F0CD         	call	i2___awdiv	;wreg free
 46206  01760A  90D8               	bcf	status,0,c
 46207  01760C  3607               	rlcf	?i2___awdiv,f,c
 46208  01760E  3608               	rlcf	?i2___awdiv+1,f,c
 46209  017610  90D8               	bcf	status,0,c
 46210  017612  3607               	rlcf	?i2___awdiv,f,c
 46211  017614  3608               	rlcf	?i2___awdiv+1,f,c
 46212  017616  0E24               	movlw	36
 46213  017618  2607               	addwf	?i2___awdiv,f,c
 46214  01761A  0E00               	movlw	0
 46215  01761C  2208               	addwfc	?i2___awdiv+1,f,c
 46216  01761E  0ED7               	movlw	low __npowers_
 46217  017620  2407               	addwf	?i2___awdiv,w,c
 46218  017622  6EF6               	movwf	tblptrl,c
 46219  017624  0ECE               	movlw	high __npowers_
 46220  017626  2008               	addwfc	?i2___awdiv+1,w,c
 46221  017628  6EF7               	movwf	tblptrh,c
 46222  01762A                     	if	1	;There are 3 active tblptr bytes
 46223  01762A  6AF8               	clrf	tblptru,c
 46224  01762C  0E00               	movlw	low (__mediumconst shr (0+16))
 46225  01762E  22F8               	addwfc	tblptru,f,c
 46226  017630                     	endif
 46227  017630  0009               	tblrd		*+
 46228  017632  CFF5 F034          	movff	tablat,i2___flmul@a
 46229  017636  0009               	tblrd		*+
 46230  017638  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46231  01763C  0009               	tblrd		*+
 46232  01763E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46233  017642  000A               	tblrd		*-
 46234  017644  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46235  017648  0E00               	movlw	0
 46236  01764A  6E0A               	movwf	i2___awdiv@divisor+1,c
 46237  01764C  0E64               	movlw	100
 46238  01764E  6E09               	movwf	i2___awdiv@divisor,c
 46239  017650  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 46240  017654  6A08               	clrf	i2___awdiv@dividend+1,c
 46241  017656  ECAA  F0CD         	call	i2___awdiv	;wreg free
 46242  01765A  90D8               	bcf	status,0,c
 46243  01765C  3607               	rlcf	?i2___awdiv,f,c
 46244  01765E  3608               	rlcf	?i2___awdiv+1,f,c
 46245  017660  90D8               	bcf	status,0,c
 46246  017662  3607               	rlcf	?i2___awdiv,f,c
 46247  017664  3608               	rlcf	?i2___awdiv+1,f,c
 46248  017666  0E48               	movlw	72
 46249  017668  2607               	addwf	?i2___awdiv,f,c
 46250  01766A  0E00               	movlw	0
 46251  01766C  2208               	addwfc	?i2___awdiv+1,f,c
 46252  01766E  0ED7               	movlw	low __npowers_
 46253  017670  2407               	addwf	?i2___awdiv,w,c
 46254  017672  6EF6               	movwf	tblptrl,c
 46255  017674  0ECE               	movlw	high __npowers_
 46256  017676  2008               	addwfc	?i2___awdiv+1,w,c
 46257  017678  6EF7               	movwf	tblptrh,c
 46258  01767A                     	if	1	;There are 3 active tblptr bytes
 46259  01767A  6AF8               	clrf	tblptru,c
 46260  01767C  0E00               	movlw	low (__mediumconst shr (0+16))
 46261  01767E  22F8               	addwfc	tblptru,f,c
 46262  017680                     	endif
 46263  017680  0009               	tblrd		*+
 46264  017682  CFF5 F030          	movff	tablat,i2___flmul@b
 46265  017686  0009               	tblrd		*+
 46266  017688  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46267  01768C  0009               	tblrd		*+
 46268  01768E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46269  017692  000A               	tblrd		*-
 46270  017694  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46271  017698  EC8D  F0AD         	call	i2___flmul	;wreg free
 46272  01769C  C030  F051         	movff	?i2___flmul,i2_fround$5431
 46273  0176A0  C031  F052         	movff	?i2___flmul+1,i2_fround$5431+1
 46274  0176A4  C032  F053         	movff	?i2___flmul+2,i2_fround$5431+2
 46275  0176A8  C033  F054         	movff	?i2___flmul+3,i2_fround$5431+3
 46276                           
 46277                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46278  0176AC  0E00               	movlw	0
 46279  0176AE  6E04               	movwf	i2___awmod@divisor+1,c
 46280  0176B0  0E0A               	movlw	10
 46281  0176B2  6E03               	movwf	i2___awmod@divisor,c
 46282  0176B4  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46283  0176B8  6A02               	clrf	i2___awmod@dividend+1,c
 46284  0176BA  EC22  F0CF         	call	i2___awmod	;wreg free
 46285  0176BE  90D8               	bcf	status,0,c
 46286  0176C0  3601               	rlcf	?i2___awmod,f,c
 46287  0176C2  3602               	rlcf	?i2___awmod+1,f,c
 46288  0176C4  90D8               	bcf	status,0,c
 46289  0176C6  3601               	rlcf	?i2___awmod,f,c
 46290  0176C8  3602               	rlcf	?i2___awmod+1,f,c
 46291  0176CA  0ED7               	movlw	low __npowers_
 46292  0176CC  2401               	addwf	?i2___awmod,w,c
 46293  0176CE  6EF6               	movwf	tblptrl,c
 46294  0176D0  0ECE               	movlw	high __npowers_
 46295  0176D2  2002               	addwfc	?i2___awmod+1,w,c
 46296  0176D4  6EF7               	movwf	tblptrh,c
 46297  0176D6                     	if	1	;There are 3 active tblptr bytes
 46298  0176D6  6AF8               	clrf	tblptru,c
 46299  0176D8  0E00               	movlw	low (__mediumconst shr (0+16))
 46300  0176DA  22F8               	addwfc	tblptru,f,c
 46301  0176DC                     	endif
 46302  0176DC  0009               	tblrd		*+
 46303  0176DE  CFF5 F034          	movff	tablat,i2___flmul@a
 46304  0176E2  0009               	tblrd		*+
 46305  0176E4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46306  0176E8  0009               	tblrd		*+
 46307  0176EA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46308  0176EE  000A               	tblrd		*-
 46309  0176F0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46310  0176F4  C051  F030         	movff	i2_fround$5431,i2___flmul@b
 46311  0176F8  C052  F031         	movff	i2_fround$5431+1,i2___flmul@b+1
 46312  0176FC  C053  F032         	movff	i2_fround$5431+2,i2___flmul@b+2
 46313  017700  C054  F033         	movff	i2_fround$5431+3,i2___flmul@b+3
 46314  017704  EC8D  F0AD         	call	i2___flmul	;wreg free
 46315  017708  C030  F04D         	movff	?i2___flmul,i2_fround$5432
 46316  01770C  C031  F04E         	movff	?i2___flmul+1,i2_fround$5432+1
 46317  017710  C032  F04F         	movff	?i2___flmul+2,i2_fround$5432+2
 46318  017714  C033  F050         	movff	?i2___flmul+3,i2_fround$5432+3
 46319                           
 46320                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 46321  017718  C04D  F030         	movff	i2_fround$5432,i2___flmul@b
 46322  01771C  C04E  F031         	movff	i2_fround$5432+1,i2___flmul@b+1
 46323  017720  C04F  F032         	movff	i2_fround$5432+2,i2___flmul@b+2
 46324  017724  C050  F033         	movff	i2_fround$5432+3,i2___flmul@b+3
 46325  017728  0E00               	movlw	0
 46326  01772A  6E34               	movwf	i2___flmul@a,c
 46327  01772C  0E00               	movlw	0
 46328  01772E  6E35               	movwf	i2___flmul@a+1,c
 46329  017730  0E00               	movlw	0
 46330  017732  6E36               	movwf	i2___flmul@a+2,c
 46331  017734  0E3F               	movlw	63
 46332  017736  6E37               	movwf	i2___flmul@a+3,c
 46333  017738  EC8D  F0AD         	call	i2___flmul	;wreg free
 46334  01773C  C030  F049         	movff	?i2___flmul,?i2_fround
 46335  017740  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46336  017744  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46337  017748  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46338  01774C  0012               	return	
 46339  01774E                     i2l1923:
 46340                           
 46341                           ;doprnt.c: 415: else if(prec > 10)
 46342  01774E  0E0A               	movlw	10
 46343  017750  6455               	cpfsgt	i2fround@prec,c
 46344  017752  D071               	goto	i2l1926
 46345                           
 46346                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 46347  017754  0E00               	movlw	0
 46348  017756  6E04               	movwf	i2___awmod@divisor+1,c
 46349  017758  0E0A               	movlw	10
 46350  01775A  6E03               	movwf	i2___awmod@divisor,c
 46351  01775C  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 46352  017760  6A02               	clrf	i2___awmod@dividend+1,c
 46353  017762  EC22  F0CF         	call	i2___awmod	;wreg free
 46354  017766  90D8               	bcf	status,0,c
 46355  017768  3601               	rlcf	?i2___awmod,f,c
 46356  01776A  3602               	rlcf	?i2___awmod+1,f,c
 46357  01776C  90D8               	bcf	status,0,c
 46358  01776E  3601               	rlcf	?i2___awmod,f,c
 46359  017770  3602               	rlcf	?i2___awmod+1,f,c
 46360  017772  0ED7               	movlw	low __npowers_
 46361  017774  2401               	addwf	?i2___awmod,w,c
 46362  017776  6EF6               	movwf	tblptrl,c
 46363  017778  0ECE               	movlw	high __npowers_
 46364  01777A  2002               	addwfc	?i2___awmod+1,w,c
 46365  01777C  6EF7               	movwf	tblptrh,c
 46366  01777E                     	if	1	;There are 3 active tblptr bytes
 46367  01777E  6AF8               	clrf	tblptru,c
 46368  017780  0E00               	movlw	low (__mediumconst shr (0+16))
 46369  017782  22F8               	addwfc	tblptru,f,c
 46370  017784                     	endif
 46371  017784  0009               	tblrd		*+
 46372  017786  CFF5 F034          	movff	tablat,i2___flmul@a
 46373  01778A  0009               	tblrd		*+
 46374  01778C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 46375  017790  0009               	tblrd		*+
 46376  017792  CFF5 F036          	movff	tablat,i2___flmul@a+2
 46377  017796  000A               	tblrd		*-
 46378  017798  CFF5 F037          	movff	tablat,i2___flmul@a+3
 46379  01779C  0E00               	movlw	0
 46380  01779E  6E0A               	movwf	i2___awdiv@divisor+1,c
 46381  0177A0  0E0A               	movlw	10
 46382  0177A2  6E09               	movwf	i2___awdiv@divisor,c
 46383  0177A4  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 46384  0177A8  6A08               	clrf	i2___awdiv@dividend+1,c
 46385  0177AA  ECAA  F0CD         	call	i2___awdiv	;wreg free
 46386  0177AE  90D8               	bcf	status,0,c
 46387  0177B0  3607               	rlcf	?i2___awdiv,f,c
 46388  0177B2  3608               	rlcf	?i2___awdiv+1,f,c
 46389  0177B4  90D8               	bcf	status,0,c
 46390  0177B6  3607               	rlcf	?i2___awdiv,f,c
 46391  0177B8  3608               	rlcf	?i2___awdiv+1,f,c
 46392  0177BA  0E24               	movlw	36
 46393  0177BC  2607               	addwf	?i2___awdiv,f,c
 46394  0177BE  0E00               	movlw	0
 46395  0177C0  2208               	addwfc	?i2___awdiv+1,f,c
 46396  0177C2  0ED7               	movlw	low __npowers_
 46397  0177C4  2407               	addwf	?i2___awdiv,w,c
 46398  0177C6  6EF6               	movwf	tblptrl,c
 46399  0177C8  0ECE               	movlw	high __npowers_
 46400  0177CA  2008               	addwfc	?i2___awdiv+1,w,c
 46401  0177CC  6EF7               	movwf	tblptrh,c
 46402  0177CE                     	if	1	;There are 3 active tblptr bytes
 46403  0177CE  6AF8               	clrf	tblptru,c
 46404  0177D0  0E00               	movlw	low (__mediumconst shr (0+16))
 46405  0177D2  22F8               	addwfc	tblptru,f,c
 46406  0177D4                     	endif
 46407  0177D4  0009               	tblrd		*+
 46408  0177D6  CFF5 F030          	movff	tablat,i2___flmul@b
 46409  0177DA  0009               	tblrd		*+
 46410  0177DC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46411  0177E0  0009               	tblrd		*+
 46412  0177E2  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46413  0177E6  000A               	tblrd		*-
 46414  0177E8  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46415  0177EC  EC8D  F0AD         	call	i2___flmul	;wreg free
 46416  0177F0  C030  F051         	movff	?i2___flmul,i2_fround$5431
 46417  0177F4  C031  F052         	movff	?i2___flmul+1,i2_fround$5431+1
 46418  0177F8  C032  F053         	movff	?i2___flmul+2,i2_fround$5431+2
 46419  0177FC  C033  F054         	movff	?i2___flmul+3,i2_fround$5431+3
 46420                           
 46421                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 46422  017800  C051  F030         	movff	i2_fround$5431,i2___flmul@b
 46423  017804  C052  F031         	movff	i2_fround$5431+1,i2___flmul@b+1
 46424  017808  C053  F032         	movff	i2_fround$5431+2,i2___flmul@b+2
 46425  01780C  C054  F033         	movff	i2_fround$5431+3,i2___flmul@b+3
 46426  017810  0E00               	movlw	0
 46427  017812  6E34               	movwf	i2___flmul@a,c
 46428  017814  0E00               	movlw	0
 46429  017816  6E35               	movwf	i2___flmul@a+1,c
 46430  017818  0E00               	movlw	0
 46431  01781A  6E36               	movwf	i2___flmul@a+2,c
 46432  01781C  0E3F               	movlw	63
 46433  01781E  6E37               	movwf	i2___flmul@a+3,c
 46434  017820  EC8D  F0AD         	call	i2___flmul	;wreg free
 46435  017824  C030  F049         	movff	?i2___flmul,?i2_fround
 46436  017828  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46437  01782C  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46438  017830  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46439  017834  0012               	return	
 46440  017836                     i2l1926:
 46441                           
 46442                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 46443  017836  5055               	movf	i2fround@prec,w,c
 46444  017838  0D04               	mullw	4
 46445  01783A  0ED7               	movlw	low __npowers_
 46446  01783C  24F3               	addwf	prodl,w,c
 46447  01783E  6EF6               	movwf	tblptrl,c
 46448  017840  0ECE               	movlw	high __npowers_
 46449  017842  20F4               	addwfc	prodh,w,c
 46450  017844  6EF7               	movwf	tblptrh,c
 46451  017846                     	if	1	;There are 3 active tblptr bytes
 46452  017846  6AF8               	clrf	tblptru,c
 46453  017848  0E00               	movlw	low (__mediumconst shr (0+16))
 46454  01784A  22F8               	addwfc	tblptru,f,c
 46455  01784C                     	endif
 46456  01784C  0009               	tblrd		*+
 46457  01784E  CFF5 F030          	movff	tablat,i2___flmul@b
 46458  017852  0009               	tblrd		*+
 46459  017854  CFF5 F031          	movff	tablat,i2___flmul@b+1
 46460  017858  0009               	tblrd		*+
 46461  01785A  CFF5 F032          	movff	tablat,i2___flmul@b+2
 46462  01785E  000A               	tblrd		*-
 46463  017860  CFF5 F033          	movff	tablat,i2___flmul@b+3
 46464  017864  0E00               	movlw	0
 46465  017866  6E34               	movwf	i2___flmul@a,c
 46466  017868  0E00               	movlw	0
 46467  01786A  6E35               	movwf	i2___flmul@a+1,c
 46468  01786C  0E00               	movlw	0
 46469  01786E  6E36               	movwf	i2___flmul@a+2,c
 46470  017870  0E3F               	movlw	63
 46471  017872  6E37               	movwf	i2___flmul@a+3,c
 46472  017874  EC8D  F0AD         	call	i2___flmul	;wreg free
 46473  017878  C030  F049         	movff	?i2___flmul,?i2_fround
 46474  01787C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 46475  017880  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 46476  017884  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 46477  017888  0012               	return	
 46478  01788A                     __end_ofi2_fround:
 46479                           	opt stack 0
 46480                           tosu	equ	0xFFF
 46481                           tosh	equ	0xFFE
 46482                           tosl	equ	0xFFD
 46483                           pclatu	equ	0xFFB
 46484                           pclath	equ	0xFFA
 46485                           tblptru	equ	0xFF8
 46486                           tblptrh	equ	0xFF7
 46487                           tblptrl	equ	0xFF6
 46488                           tablat	equ	0xFF5
 46489                           prodh	equ	0xFF4
 46490                           prodl	equ	0xFF3
 46491                           intcon	equ	0xFF2
 46492                           indf0	equ	0xFEF
 46493                           postinc0	equ	0xFEE
 46494                           fsr0h	equ	0xFEA
 46495                           fsr0l	equ	0xFE9
 46496                           wreg	equ	0xFE8
 46497                           indf1	equ	0xFE7
 46498                           postdec1	equ	0xFE5
 46499                           plusw1	equ	0xFE3
 46500                           fsr1h	equ	0xFE2
 46501                           fsr1l	equ	0xFE1
 46502                           bsr	equ	0xFE0
 46503                           indf2	equ	0xFDF
 46504                           postinc2	equ	0xFDE
 46505                           postdec2	equ	0xFDD
 46506                           plusw2	equ	0xFDB
 46507                           fsr2h	equ	0xFDA
 46508                           fsr2l	equ	0xFD9
 46509                           status	equ	0xFD8
 46510                           
 46511 ;; *************** function i2___awmod *****************
 46512 ;; Defined at:
 46513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 46514 ;; Parameters:    Size  Location     Type
 46515 ;;  dividend        2    0[COMRAM] int 
 46516 ;;  divisor         2    2[COMRAM] int 
 46517 ;; Auto vars:     Size  Location     Type
 46518 ;;  __awmod         1    5[COMRAM] unsigned char 
 46519 ;;  __awmod         1    4[COMRAM] unsigned char 
 46520 ;; Return value:  Size  Location     Type
 46521 ;;                  2    0[COMRAM] int 
 46522 ;; Registers used:
 46523 ;;		wreg, status,2, status,0
 46524 ;; Tracked objects:
 46525 ;;		On entry : 0/0
 46526 ;;		On exit  : 0/0
 46527 ;;		Unchanged: 0/0
 46528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46533 ;;Total ram usage:        6 bytes
 46534 ;; Hardware stack levels used:    1
 46535 ;; This function calls:
 46536 ;;		Nothing
 46537 ;; This function is called by:
 46538 ;;		i2_fround
 46539 ;;		i2_scale
 46540 ;; This function uses a non-reentrant model
 46541 ;;
 46542                           
 46543                           	psect	text140
 46544  019E44                     __ptext140:
 46545                           	opt stack 0
 46546  019E44                     i2___awmod:
 46547                           	opt stack 13
 46548                           
 46549                           ;incstack = 0
 46550  019E44  0E00               	movlw	0
 46551  019E46  6E06               	movwf	i2___awmod@sign,c
 46552  019E48  AE02               	btfss	i2___awmod@dividend+1,7,c
 46553  019E4A  D006               	goto	i2l2352
 46554  019E4C  6C01               	negf	i2___awmod@dividend,c
 46555  019E4E  1E02               	comf	i2___awmod@dividend+1,f,c
 46556  019E50  B0D8               	btfsc	status,0,c
 46557  019E52  2A02               	incf	i2___awmod@dividend+1,f,c
 46558  019E54  0E01               	movlw	1
 46559  019E56  6E06               	movwf	i2___awmod@sign,c
 46560  019E58                     i2l2352:
 46561  019E58  AE04               	btfss	i2___awmod@divisor+1,7,c
 46562  019E5A  D004               	goto	i2l2353
 46563  019E5C  6C03               	negf	i2___awmod@divisor,c
 46564  019E5E  1E04               	comf	i2___awmod@divisor+1,f,c
 46565  019E60  B0D8               	btfsc	status,0,c
 46566  019E62  2A04               	incf	i2___awmod@divisor+1,f,c
 46567  019E64                     i2l2353:
 46568  019E64  5003               	movf	i2___awmod@divisor,w,c
 46569  019E66  1004               	iorwf	i2___awmod@divisor+1,w,c
 46570  019E68  B4D8               	btfsc	status,2,c
 46571  019E6A  D018               	goto	i2l2360
 46572  019E6C  0E01               	movlw	1
 46573  019E6E  6E05               	movwf	i2___awmod@counter,c
 46574  019E70  D004               	goto	i2l2355
 46575  019E72  90D8               	bcf	status,0,c
 46576  019E74  3603               	rlcf	i2___awmod@divisor,f,c
 46577  019E76  3604               	rlcf	i2___awmod@divisor+1,f,c
 46578  019E78  2A05               	incf	i2___awmod@counter,f,c
 46579  019E7A                     i2l2355:
 46580  019E7A  AE04               	btfss	i2___awmod@divisor+1,7,c
 46581  019E7C  D7FA               	goto	i2l2356
 46582  019E7E                     i2u2013_40:
 46583  019E7E  5003               	movf	i2___awmod@divisor,w,c
 46584  019E80  5C01               	subwf	i2___awmod@dividend,w,c
 46585  019E82  5004               	movf	i2___awmod@divisor+1,w,c
 46586  019E84  5802               	subwfb	i2___awmod@dividend+1,w,c
 46587  019E86  A0D8               	btfss	status,0,c
 46588  019E88  D004               	goto	i2l2359
 46589  019E8A  5003               	movf	i2___awmod@divisor,w,c
 46590  019E8C  5E01               	subwf	i2___awmod@dividend,f,c
 46591  019E8E  5004               	movf	i2___awmod@divisor+1,w,c
 46592  019E90  5A02               	subwfb	i2___awmod@dividend+1,f,c
 46593  019E92                     i2l2359:
 46594  019E92  90D8               	bcf	status,0,c
 46595  019E94  3204               	rrcf	i2___awmod@divisor+1,f,c
 46596  019E96  3203               	rrcf	i2___awmod@divisor,f,c
 46597  019E98  2E05               	decfsz	i2___awmod@counter,f,c
 46598  019E9A  D7F1               	goto	i2u2013_40
 46599  019E9C                     i2l2360:
 46600  019E9C  5006               	movf	i2___awmod@sign,w,c
 46601  019E9E  B4D8               	btfsc	status,2,c
 46602  019EA0  D004               	goto	i2l2361
 46603  019EA2  6C01               	negf	i2___awmod@dividend,c
 46604  019EA4  1E02               	comf	i2___awmod@dividend+1,f,c
 46605  019EA6  B0D8               	btfsc	status,0,c
 46606  019EA8  2A02               	incf	i2___awmod@dividend+1,f,c
 46607  019EAA                     i2l2361:
 46608  019EAA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 46609  019EAE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 46610  019EB2  0012               	return	
 46611  019EB4                     __end_ofi2___awmod:
 46612                           	opt stack 0
 46613                           tosu	equ	0xFFF
 46614                           tosh	equ	0xFFE
 46615                           tosl	equ	0xFFD
 46616                           pclatu	equ	0xFFB
 46617                           pclath	equ	0xFFA
 46618                           tblptru	equ	0xFF8
 46619                           tblptrh	equ	0xFF7
 46620                           tblptrl	equ	0xFF6
 46621                           tablat	equ	0xFF5
 46622                           prodh	equ	0xFF4
 46623                           prodl	equ	0xFF3
 46624                           intcon	equ	0xFF2
 46625                           indf0	equ	0xFEF
 46626                           postinc0	equ	0xFEE
 46627                           fsr0h	equ	0xFEA
 46628                           fsr0l	equ	0xFE9
 46629                           wreg	equ	0xFE8
 46630                           indf1	equ	0xFE7
 46631                           postdec1	equ	0xFE5
 46632                           plusw1	equ	0xFE3
 46633                           fsr1h	equ	0xFE2
 46634                           fsr1l	equ	0xFE1
 46635                           bsr	equ	0xFE0
 46636                           indf2	equ	0xFDF
 46637                           postinc2	equ	0xFDE
 46638                           postdec2	equ	0xFDD
 46639                           plusw2	equ	0xFDB
 46640                           fsr2h	equ	0xFDA
 46641                           fsr2l	equ	0xFD9
 46642                           status	equ	0xFD8
 46643                           
 46644 ;; *************** function i2___awdiv *****************
 46645 ;; Defined at:
 46646 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 46647 ;; Parameters:    Size  Location     Type
 46648 ;;  dividend        2    6[COMRAM] int 
 46649 ;;  divisor         2    8[COMRAM] int 
 46650 ;; Auto vars:     Size  Location     Type
 46651 ;;  __awdiv         2   12[COMRAM] int 
 46652 ;;  __awdiv         1   11[COMRAM] unsigned char 
 46653 ;;  __awdiv         1   10[COMRAM] unsigned char 
 46654 ;; Return value:  Size  Location     Type
 46655 ;;                  2    6[COMRAM] int 
 46656 ;; Registers used:
 46657 ;;		wreg, status,2, status,0
 46658 ;; Tracked objects:
 46659 ;;		On entry : 0/0
 46660 ;;		On exit  : 0/0
 46661 ;;		Unchanged: 0/0
 46662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46664 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46666 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46667 ;;Total ram usage:        8 bytes
 46668 ;; Hardware stack levels used:    1
 46669 ;; This function calls:
 46670 ;;		Nothing
 46671 ;; This function is called by:
 46672 ;;		i2_fround
 46673 ;;		i2_scale
 46674 ;;		i2__doprnt
 46675 ;; This function uses a non-reentrant model
 46676 ;;
 46677                           
 46678                           	psect	text141
 46679  019B54                     __ptext141:
 46680                           	opt stack 0
 46681  019B54                     i2___awdiv:
 46682                           	opt stack 13
 46683                           
 46684                           ;incstack = 0
 46685  019B54  0E00               	movlw	0
 46686  019B56  6E0C               	movwf	i2___awdiv@sign,c
 46687  019B58  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46688  019B5A  D006               	goto	i2l2339
 46689  019B5C  6C09               	negf	i2___awdiv@divisor,c
 46690  019B5E  1E0A               	comf	i2___awdiv@divisor+1,f,c
 46691  019B60  B0D8               	btfsc	status,0,c
 46692  019B62  2A0A               	incf	i2___awdiv@divisor+1,f,c
 46693  019B64  0E01               	movlw	1
 46694  019B66  6E0C               	movwf	i2___awdiv@sign,c
 46695  019B68                     i2l2339:
 46696  019B68  AE08               	btfss	i2___awdiv@dividend+1,7,c
 46697  019B6A  D006               	goto	i2l2340
 46698  019B6C  6C07               	negf	i2___awdiv@dividend,c
 46699  019B6E  1E08               	comf	i2___awdiv@dividend+1,f,c
 46700  019B70  B0D8               	btfsc	status,0,c
 46701  019B72  2A08               	incf	i2___awdiv@dividend+1,f,c
 46702  019B74  0E01               	movlw	1
 46703  019B76  1A0C               	xorwf	i2___awdiv@sign,f,c
 46704  019B78                     i2l2340:
 46705  019B78  0E00               	movlw	0
 46706  019B7A  6E0E               	movwf	i2___awdiv@quotient+1,c
 46707  019B7C  0E00               	movlw	0
 46708  019B7E  6E0D               	movwf	i2___awdiv@quotient,c
 46709  019B80  5009               	movf	i2___awdiv@divisor,w,c
 46710  019B82  100A               	iorwf	i2___awdiv@divisor+1,w,c
 46711  019B84  B4D8               	btfsc	status,2,c
 46712  019B86  D01C               	goto	i2l2347
 46713  019B88  0E01               	movlw	1
 46714  019B8A  6E0B               	movwf	i2___awdiv@counter,c
 46715  019B8C  D004               	goto	i2l2342
 46716  019B8E  90D8               	bcf	status,0,c
 46717  019B90  3609               	rlcf	i2___awdiv@divisor,f,c
 46718  019B92  360A               	rlcf	i2___awdiv@divisor+1,f,c
 46719  019B94  2A0B               	incf	i2___awdiv@counter,f,c
 46720  019B96                     i2l2342:
 46721  019B96  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 46722  019B98  D7FA               	goto	i2l2343
 46723  019B9A                     i2u2007_40:
 46724  019B9A  90D8               	bcf	status,0,c
 46725  019B9C  360D               	rlcf	i2___awdiv@quotient,f,c
 46726  019B9E  360E               	rlcf	i2___awdiv@quotient+1,f,c
 46727  019BA0  5009               	movf	i2___awdiv@divisor,w,c
 46728  019BA2  5C07               	subwf	i2___awdiv@dividend,w,c
 46729  019BA4  500A               	movf	i2___awdiv@divisor+1,w,c
 46730  019BA6  5808               	subwfb	i2___awdiv@dividend+1,w,c
 46731  019BA8  A0D8               	btfss	status,0,c
 46732  019BAA  D005               	goto	i2l2346
 46733  019BAC  5009               	movf	i2___awdiv@divisor,w,c
 46734  019BAE  5E07               	subwf	i2___awdiv@dividend,f,c
 46735  019BB0  500A               	movf	i2___awdiv@divisor+1,w,c
 46736  019BB2  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 46737  019BB4  800D               	bsf	i2___awdiv@quotient,0,c
 46738  019BB6                     i2l2346:
 46739  019BB6  90D8               	bcf	status,0,c
 46740  019BB8  320A               	rrcf	i2___awdiv@divisor+1,f,c
 46741  019BBA  3209               	rrcf	i2___awdiv@divisor,f,c
 46742  019BBC  2E0B               	decfsz	i2___awdiv@counter,f,c
 46743  019BBE  D7ED               	goto	i2u2007_40
 46744  019BC0                     i2l2347:
 46745  019BC0  500C               	movf	i2___awdiv@sign,w,c
 46746  019BC2  B4D8               	btfsc	status,2,c
 46747  019BC4  D004               	goto	i2l2348
 46748  019BC6  6C0D               	negf	i2___awdiv@quotient,c
 46749  019BC8  1E0E               	comf	i2___awdiv@quotient+1,f,c
 46750  019BCA  B0D8               	btfsc	status,0,c
 46751  019BCC  2A0E               	incf	i2___awdiv@quotient+1,f,c
 46752  019BCE                     i2l2348:
 46753  019BCE  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 46754  019BD2  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 46755  019BD6  0012               	return	
 46756  019BD8                     __end_ofi2___awdiv:
 46757                           	opt stack 0
 46758                           tosu	equ	0xFFF
 46759                           tosh	equ	0xFFE
 46760                           tosl	equ	0xFFD
 46761                           pclatu	equ	0xFFB
 46762                           pclath	equ	0xFFA
 46763                           tblptru	equ	0xFF8
 46764                           tblptrh	equ	0xFF7
 46765                           tblptrl	equ	0xFF6
 46766                           tablat	equ	0xFF5
 46767                           prodh	equ	0xFF4
 46768                           prodl	equ	0xFF3
 46769                           intcon	equ	0xFF2
 46770                           indf0	equ	0xFEF
 46771                           postinc0	equ	0xFEE
 46772                           fsr0h	equ	0xFEA
 46773                           fsr0l	equ	0xFE9
 46774                           wreg	equ	0xFE8
 46775                           indf1	equ	0xFE7
 46776                           postdec1	equ	0xFE5
 46777                           plusw1	equ	0xFE3
 46778                           fsr1h	equ	0xFE2
 46779                           fsr1l	equ	0xFE1
 46780                           bsr	equ	0xFE0
 46781                           indf2	equ	0xFDF
 46782                           postinc2	equ	0xFDE
 46783                           postdec2	equ	0xFDD
 46784                           plusw2	equ	0xFDB
 46785                           fsr2h	equ	0xFDA
 46786                           fsr2l	equ	0xFD9
 46787                           status	equ	0xFD8
 46788                           
 46789 ;; *************** function i2__tdiv_to_l_ *****************
 46790 ;; Defined at:
 46791 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 46792 ;; Parameters:    Size  Location     Type
 46793 ;;  f1              3    0[COMRAM] float 
 46794 ;;  f2              3    3[COMRAM] float 
 46795 ;; Auto vars:     Size  Location     Type
 46796 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 46797 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 46798 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 46799 ;; Return value:  Size  Location     Type
 46800 ;;                  4    0[COMRAM] unsigned long 
 46801 ;; Registers used:
 46802 ;;		wreg, status,2, status,0
 46803 ;; Tracked objects:
 46804 ;;		On entry : 0/0
 46805 ;;		On exit  : 0/0
 46806 ;;		Unchanged: 0/0
 46807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46808 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46810 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46811 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46812 ;;Total ram usage:       15 bytes
 46813 ;; Hardware stack levels used:    1
 46814 ;; This function calls:
 46815 ;;		Nothing
 46816 ;; This function is called by:
 46817 ;;		i2__doprnt
 46818 ;; This function uses a non-reentrant model
 46819 ;;
 46820                           
 46821                           	psect	text142
 46822  0186D6                     __ptext142:
 46823                           	opt stack 0
 46824  0186D6                     i2__tdiv_to_l_:
 46825                           	opt stack 14
 46826                           
 46827                           ;incstack = 0
 46828  0186D6  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 46829  0186DA  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 46830  0186DC  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 46831  0186DE  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 46832  0186E0  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 46833  0186E2  E301               	bnc	u2051_41
 46834  0186E4  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 46835  0186E6                     u2051_41:
 46836  0186E6  5007               	movf	??i2__tdiv_to_l_,w,c
 46837  0186E8  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 46838  0186EA  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46839  0186EC  A4D8               	btfss	status,2,c
 46840  0186EE  D009               	goto	i2l2487
 46841  0186F0  0E00               	movlw	0
 46842  0186F2  6E01               	movwf	?i2__tdiv_to_l_,c
 46843  0186F4  0E00               	movlw	0
 46844  0186F6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46845  0186F8  0E00               	movlw	0
 46846  0186FA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46847  0186FC  0E00               	movlw	0
 46848  0186FE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46849  018700  0012               	return	
 46850  018702                     i2l2487:
 46851  018702  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 46852  018706  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 46853  018708  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 46854  01870A  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 46855  01870C  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 46856  01870E  E301               	bnc	u2053_41
 46857  018710  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 46858  018712                     u2053_41:
 46859  018712  5007               	movf	??i2__tdiv_to_l_,w,c
 46860  018714  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 46861  018716  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 46862  018718  A4D8               	btfss	status,2,c
 46863  01871A  D009               	goto	i2l2489
 46864  01871C  0E00               	movlw	0
 46865  01871E  6E01               	movwf	?i2__tdiv_to_l_,c
 46866  018720  0E00               	movlw	0
 46867  018722  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46868  018724  0E00               	movlw	0
 46869  018726  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46870  018728  0E00               	movlw	0
 46871  01872A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46872  01872C  0012               	return	
 46873  01872E                     i2l2489:
 46874  01872E  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 46875  018730  0EFF               	movlw	255
 46876  018732  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 46877  018734  0EFF               	movlw	255
 46878  018736  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 46879  018738  0E00               	movlw	0
 46880  01873A  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 46881  01873C  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 46882  01873E  0EFF               	movlw	255
 46883  018740  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 46884  018742  0EFF               	movlw	255
 46885  018744  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 46886  018746  0E00               	movlw	0
 46887  018748  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 46888  01874A  0E00               	movlw	0
 46889  01874C  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 46890  01874E  0E00               	movlw	0
 46891  018750  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 46892  018752  0E00               	movlw	0
 46893  018754  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 46894  018756  0E00               	movlw	0
 46895  018758  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 46896  01875A  0E7F               	movlw	127
 46897  01875C  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 46898  01875E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 46899  018760  0F98               	addlw	152
 46900  018762  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 46901  018764  0E18               	movlw	24
 46902  018766  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 46903  018768                     i2l2490:
 46904  018768  90D8               	bcf	status,0,c
 46905  01876A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 46906  01876C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 46907  01876E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 46908  018770  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 46909  018772  5004               	movf	i2__tdiv_to_l_@f2,w,c
 46910  018774  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 46911  018776  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 46912  018778  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 46913  01877A  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 46914  01877C  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 46915  01877E  A0D8               	btfss	status,0,c
 46916  018780  D007               	goto	i2l2491
 46917  018782  5004               	movf	i2__tdiv_to_l_@f2,w,c
 46918  018784  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 46919  018786  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 46920  018788  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 46921  01878A  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 46922  01878C  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 46923  01878E  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 46924  018790                     i2l2491:
 46925  018790  90D8               	bcf	status,0,c
 46926  018792  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 46927  018794  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 46928  018796  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 46929  018798  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 46930  01879A  D7E6               	goto	i2l2490
 46931  01879C  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 46932  01879E  D016               	goto	i2l2493
 46933  0187A0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46934  0187A2  0A80               	xorlw	128
 46935  0187A4  0F97               	addlw	151
 46936  0187A6  B0D8               	btfsc	status,0,c
 46937  0187A8  D009               	goto	i2l2494
 46938  0187AA  0E00               	movlw	0
 46939  0187AC  6E01               	movwf	?i2__tdiv_to_l_,c
 46940  0187AE  0E00               	movlw	0
 46941  0187B0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46942  0187B2  0E00               	movlw	0
 46943  0187B4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46944  0187B6  0E00               	movlw	0
 46945  0187B8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46946  0187BA  0012               	return	
 46947  0187BC                     i2l2494:
 46948  0187BC  90D8               	bcf	status,0,c
 46949  0187BE  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 46950  0187C0  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 46951  0187C2  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 46952  0187C4  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 46953  0187C6  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 46954  0187C8  D7F9               	goto	i2l2494
 46955  0187CA  D015               	goto	i2u2059_40
 46956  0187CC                     i2l2493:
 46957  0187CC  0E17               	movlw	23
 46958  0187CE  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 46959  0187D0  D00F               	goto	i2l2499
 46960  0187D2  0E00               	movlw	0
 46961  0187D4  6E01               	movwf	?i2__tdiv_to_l_,c
 46962  0187D6  0E00               	movlw	0
 46963  0187D8  6E02               	movwf	?i2__tdiv_to_l_+1,c
 46964  0187DA  0E00               	movlw	0
 46965  0187DC  6E03               	movwf	?i2__tdiv_to_l_+2,c
 46966  0187DE  0E00               	movlw	0
 46967  0187E0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 46968  0187E2  0012               	return	
 46969  0187E4  90D8               	bcf	status,0,c
 46970  0187E6  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 46971  0187E8  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 46972  0187EA  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 46973  0187EC  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 46974  0187EE  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 46975  0187F0                     i2l2499:
 46976  0187F0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 46977  0187F2  A4D8               	btfss	status,2,c
 46978  0187F4  D7F7               	goto	i2l2500
 46979  0187F6                     i2u2059_40:
 46980  0187F6  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 46981  0187FA  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 46982  0187FE  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 46983  018802  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 46984  018806  0012               	return		;funcret
 46985  018808                     __end_ofi2__tdiv_to_l_:
 46986                           	opt stack 0
 46987                           tosu	equ	0xFFF
 46988                           tosh	equ	0xFFE
 46989                           tosl	equ	0xFFD
 46990                           pclatu	equ	0xFFB
 46991                           pclath	equ	0xFFA
 46992                           tblptru	equ	0xFF8
 46993                           tblptrh	equ	0xFF7
 46994                           tblptrl	equ	0xFF6
 46995                           tablat	equ	0xFF5
 46996                           prodh	equ	0xFF4
 46997                           prodl	equ	0xFF3
 46998                           intcon	equ	0xFF2
 46999                           indf0	equ	0xFEF
 47000                           postinc0	equ	0xFEE
 47001                           fsr0h	equ	0xFEA
 47002                           fsr0l	equ	0xFE9
 47003                           wreg	equ	0xFE8
 47004                           indf1	equ	0xFE7
 47005                           postdec1	equ	0xFE5
 47006                           plusw1	equ	0xFE3
 47007                           fsr1h	equ	0xFE2
 47008                           fsr1l	equ	0xFE1
 47009                           bsr	equ	0xFE0
 47010                           indf2	equ	0xFDF
 47011                           postinc2	equ	0xFDE
 47012                           postdec2	equ	0xFDD
 47013                           plusw2	equ	0xFDB
 47014                           fsr2h	equ	0xFDA
 47015                           fsr2l	equ	0xFD9
 47016                           status	equ	0xFD8
 47017                           
 47018 ;; *************** function i2__div_to_l_ *****************
 47019 ;; Defined at:
 47020 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 47021 ;; Parameters:    Size  Location     Type
 47022 ;;  f1              4    0[COMRAM] unsigned long 
 47023 ;;  f2              4    4[COMRAM] unsigned long 
 47024 ;; Auto vars:     Size  Location     Type
 47025 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 47026 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 47027 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 47028 ;; Return value:  Size  Location     Type
 47029 ;;                  4    0[COMRAM] unsigned long 
 47030 ;; Registers used:
 47031 ;;		wreg, status,2, status,0
 47032 ;; Tracked objects:
 47033 ;;		On entry : 0/0
 47034 ;;		On exit  : 0/0
 47035 ;;		Unchanged: 0/0
 47036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47037 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47038 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47040 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47041 ;;Total ram usage:       14 bytes
 47042 ;; Hardware stack levels used:    1
 47043 ;; This function calls:
 47044 ;;		Nothing
 47045 ;; This function is called by:
 47046 ;;		i2__doprnt
 47047 ;; This function uses a non-reentrant model
 47048 ;;
 47049                           
 47050                           	psect	text143
 47051  018932                     __ptext143:
 47052                           	opt stack 0
 47053  018932                     i2__div_to_l_:
 47054                           	opt stack 14
 47055                           
 47056                           ;incstack = 0
 47057  018932  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 47058  018934  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 47059  018936  6E0E               	movwf	i2__div_to_l_@exp1,c
 47060  018938  500E               	movf	i2__div_to_l_@exp1,w,c
 47061  01893A  A4D8               	btfss	status,2,c
 47062  01893C  D009               	goto	i2l2383
 47063  01893E  0E00               	movlw	0
 47064  018940  6E01               	movwf	?i2__div_to_l_,c
 47065  018942  0E00               	movlw	0
 47066  018944  6E02               	movwf	?i2__div_to_l_+1,c
 47067  018946  0E00               	movlw	0
 47068  018948  6E03               	movwf	?i2__div_to_l_+2,c
 47069  01894A  0E00               	movlw	0
 47070  01894C  6E04               	movwf	?i2__div_to_l_+3,c
 47071  01894E  0012               	return	
 47072  018950                     i2l2383:
 47073  018950  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 47074  018952  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 47075  018954  6E0D               	movwf	i2__div_to_l_@cntr,c
 47076  018956  500D               	movf	i2__div_to_l_@cntr,w,c
 47077  018958  A4D8               	btfss	status,2,c
 47078  01895A  D009               	goto	i2l2385
 47079  01895C  0E00               	movlw	0
 47080  01895E  6E01               	movwf	?i2__div_to_l_,c
 47081  018960  0E00               	movlw	0
 47082  018962  6E02               	movwf	?i2__div_to_l_+1,c
 47083  018964  0E00               	movlw	0
 47084  018966  6E03               	movwf	?i2__div_to_l_+2,c
 47085  018968  0E00               	movlw	0
 47086  01896A  6E04               	movwf	?i2__div_to_l_+3,c
 47087  01896C  0012               	return	
 47088  01896E                     i2l2385:
 47089  01896E  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 47090  018970  0EFF               	movlw	255
 47091  018972  1601               	andwf	i2__div_to_l_@f1,f,c
 47092  018974  0EFF               	movlw	255
 47093  018976  1602               	andwf	i2__div_to_l_@f1+1,f,c
 47094  018978  0EFF               	movlw	255
 47095  01897A  1603               	andwf	i2__div_to_l_@f1+2,f,c
 47096  01897C  0E00               	movlw	0
 47097  01897E  1604               	andwf	i2__div_to_l_@f1+3,f,c
 47098  018980  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 47099  018982  0EFF               	movlw	255
 47100  018984  1605               	andwf	i2__div_to_l_@f2,f,c
 47101  018986  0EFF               	movlw	255
 47102  018988  1606               	andwf	i2__div_to_l_@f2+1,f,c
 47103  01898A  0EFF               	movlw	255
 47104  01898C  1607               	andwf	i2__div_to_l_@f2+2,f,c
 47105  01898E  0E00               	movlw	0
 47106  018990  1608               	andwf	i2__div_to_l_@f2+3,f,c
 47107  018992  0E00               	movlw	0
 47108  018994  6E09               	movwf	i2__div_to_l_@quot,c
 47109  018996  0E00               	movlw	0
 47110  018998  6E0A               	movwf	i2__div_to_l_@quot+1,c
 47111  01899A  0E00               	movlw	0
 47112  01899C  6E0B               	movwf	i2__div_to_l_@quot+2,c
 47113  01899E  0E00               	movlw	0
 47114  0189A0  6E0C               	movwf	i2__div_to_l_@quot+3,c
 47115  0189A2  0E7F               	movlw	127
 47116  0189A4  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 47117  0189A6  500D               	movf	i2__div_to_l_@cntr,w,c
 47118  0189A8  0FA0               	addlw	160
 47119  0189AA  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 47120  0189AC  0E20               	movlw	32
 47121  0189AE  6E0D               	movwf	i2__div_to_l_@cntr,c
 47122  0189B0  90D8               	bcf	status,0,c
 47123  0189B2  3609               	rlcf	i2__div_to_l_@quot,f,c
 47124  0189B4  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 47125  0189B6  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 47126  0189B8  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 47127  0189BA  5005               	movf	i2__div_to_l_@f2,w,c
 47128  0189BC  5C01               	subwf	i2__div_to_l_@f1,w,c
 47129  0189BE  5006               	movf	i2__div_to_l_@f2+1,w,c
 47130  0189C0  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 47131  0189C2  5007               	movf	i2__div_to_l_@f2+2,w,c
 47132  0189C4  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 47133  0189C6  5008               	movf	i2__div_to_l_@f2+3,w,c
 47134  0189C8  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 47135  0189CA  A0D8               	btfss	status,0,c
 47136  0189CC  D009               	goto	i2l2387
 47137  0189CE  5005               	movf	i2__div_to_l_@f2,w,c
 47138  0189D0  5E01               	subwf	i2__div_to_l_@f1,f,c
 47139  0189D2  5006               	movf	i2__div_to_l_@f2+1,w,c
 47140  0189D4  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 47141  0189D6  5007               	movf	i2__div_to_l_@f2+2,w,c
 47142  0189D8  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 47143  0189DA  5008               	movf	i2__div_to_l_@f2+3,w,c
 47144  0189DC  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 47145  0189DE  8009               	bsf	i2__div_to_l_@quot,0,c
 47146  0189E0                     i2l2387:
 47147  0189E0  90D8               	bcf	status,0,c
 47148  0189E2  3601               	rlcf	i2__div_to_l_@f1,f,c
 47149  0189E4  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 47150  0189E6  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 47151  0189E8  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 47152  0189EA  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 47153  0189EC  D7E1               	goto	i2l2386
 47154  0189EE  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 47155  0189F0  D016               	goto	i2l2389
 47156  0189F2  500E               	movf	i2__div_to_l_@exp1,w,c
 47157  0189F4  0A80               	xorlw	128
 47158  0189F6  0F9F               	addlw	159
 47159  0189F8  B0D8               	btfsc	status,0,c
 47160  0189FA  D009               	goto	i2l2390
 47161  0189FC  0E00               	movlw	0
 47162  0189FE  6E01               	movwf	?i2__div_to_l_,c
 47163  018A00  0E00               	movlw	0
 47164  018A02  6E02               	movwf	?i2__div_to_l_+1,c
 47165  018A04  0E00               	movlw	0
 47166  018A06  6E03               	movwf	?i2__div_to_l_+2,c
 47167  018A08  0E00               	movlw	0
 47168  018A0A  6E04               	movwf	?i2__div_to_l_+3,c
 47169  018A0C  0012               	return	
 47170  018A0E                     i2l2390:
 47171  018A0E  90D8               	bcf	status,0,c
 47172  018A10  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 47173  018A12  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 47174  018A14  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 47175  018A16  3209               	rrcf	i2__div_to_l_@quot,f,c
 47176  018A18  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 47177  018A1A  D7F9               	goto	i2l2390
 47178  018A1C  D015               	goto	i2u2050_40
 47179  018A1E                     i2l2389:
 47180  018A1E  0E1F               	movlw	31
 47181  018A20  640E               	cpfsgt	i2__div_to_l_@exp1,c
 47182  018A22  D00F               	goto	i2l2395
 47183  018A24  0E00               	movlw	0
 47184  018A26  6E01               	movwf	?i2__div_to_l_,c
 47185  018A28  0E00               	movlw	0
 47186  018A2A  6E02               	movwf	?i2__div_to_l_+1,c
 47187  018A2C  0E00               	movlw	0
 47188  018A2E  6E03               	movwf	?i2__div_to_l_+2,c
 47189  018A30  0E00               	movlw	0
 47190  018A32  6E04               	movwf	?i2__div_to_l_+3,c
 47191  018A34  0012               	return	
 47192  018A36  90D8               	bcf	status,0,c
 47193  018A38  3609               	rlcf	i2__div_to_l_@quot,f,c
 47194  018A3A  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 47195  018A3C  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 47196  018A3E  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 47197  018A40  060E               	decf	i2__div_to_l_@exp1,f,c
 47198  018A42                     i2l2395:
 47199  018A42  500E               	movf	i2__div_to_l_@exp1,w,c
 47200  018A44  A4D8               	btfss	status,2,c
 47201  018A46  D7F7               	goto	i2l2396
 47202  018A48                     i2u2050_40:
 47203  018A48  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 47204  018A4C  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 47205  018A50  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 47206  018A54  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 47207  018A58  0012               	return		;funcret
 47208  018A5A                     __end_ofi2__div_to_l_:
 47209                           	opt stack 0
 47210                           tosu	equ	0xFFF
 47211                           tosh	equ	0xFFE
 47212                           tosl	equ	0xFFD
 47213                           pclatu	equ	0xFFB
 47214                           pclath	equ	0xFFA
 47215                           tblptru	equ	0xFF8
 47216                           tblptrh	equ	0xFF7
 47217                           tblptrl	equ	0xFF6
 47218                           tablat	equ	0xFF5
 47219                           prodh	equ	0xFF4
 47220                           prodl	equ	0xFF3
 47221                           intcon	equ	0xFF2
 47222                           indf0	equ	0xFEF
 47223                           postinc0	equ	0xFEE
 47224                           fsr0h	equ	0xFEA
 47225                           fsr0l	equ	0xFE9
 47226                           wreg	equ	0xFE8
 47227                           indf1	equ	0xFE7
 47228                           postdec1	equ	0xFE5
 47229                           plusw1	equ	0xFE3
 47230                           fsr1h	equ	0xFE2
 47231                           fsr1l	equ	0xFE1
 47232                           bsr	equ	0xFE0
 47233                           indf2	equ	0xFDF
 47234                           postinc2	equ	0xFDE
 47235                           postdec2	equ	0xFDD
 47236                           plusw2	equ	0xFDB
 47237                           fsr2h	equ	0xFDA
 47238                           fsr2l	equ	0xFD9
 47239                           status	equ	0xFD8
 47240                           
 47241 ;; *************** function i2___wmul *****************
 47242 ;; Defined at:
 47243 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 47244 ;; Parameters:    Size  Location     Type
 47245 ;;  multiplier      2    0[COMRAM] unsigned int 
 47246 ;;  multiplicand    2    2[COMRAM] unsigned int 
 47247 ;; Auto vars:     Size  Location     Type
 47248 ;;  __wmul          2    4[COMRAM] unsigned int 
 47249 ;; Return value:  Size  Location     Type
 47250 ;;                  2    0[COMRAM] unsigned int 
 47251 ;; Registers used:
 47252 ;;		wreg, status,2, status,0, prodl, prodh
 47253 ;; Tracked objects:
 47254 ;;		On entry : 0/0
 47255 ;;		On exit  : 0/0
 47256 ;;		Unchanged: 0/0
 47257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47262 ;;Total ram usage:        6 bytes
 47263 ;; Hardware stack levels used:    1
 47264 ;; This function calls:
 47265 ;;		Nothing
 47266 ;; This function is called by:
 47267 ;;		i2__doprnt
 47268 ;; This function uses a non-reentrant model
 47269 ;;
 47270                           
 47271                           	psect	text144
 47272  01AEA2                     __ptext144:
 47273                           	opt stack 0
 47274  01AEA2                     i2___wmul:
 47275                           	opt stack 14
 47276                           
 47277                           ;incstack = 0
 47278  01AEA2  5001               	movf	i2___wmul@multiplier,w,c
 47279  01AEA4  0203               	mulwf	i2___wmul@multiplicand,c
 47280  01AEA6  CFF3 F005          	movff	prodl,i2___wmul@product
 47281  01AEAA  CFF4 F006          	movff	prodh,i2___wmul@product+1
 47282  01AEAE  5001               	movf	i2___wmul@multiplier,w,c
 47283  01AEB0  0204               	mulwf	i2___wmul@multiplicand+1,c
 47284  01AEB2  50F3               	movf	prodl,w,c
 47285  01AEB4  2606               	addwf	i2___wmul@product+1,f,c
 47286  01AEB6  5002               	movf	i2___wmul@multiplier+1,w,c
 47287  01AEB8  0203               	mulwf	i2___wmul@multiplicand,c
 47288  01AEBA  50F3               	movf	prodl,w,c
 47289  01AEBC  2606               	addwf	i2___wmul@product+1,f,c
 47290  01AEBE  C005  F001         	movff	i2___wmul@product,?i2___wmul
 47291  01AEC2  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 47292  01AEC6  0012               	return	
 47293  01AEC8                     __end_ofi2___wmul:
 47294                           	opt stack 0
 47295                           tosu	equ	0xFFF
 47296                           tosh	equ	0xFFE
 47297                           tosl	equ	0xFFD
 47298                           pclatu	equ	0xFFB
 47299                           pclath	equ	0xFFA
 47300                           tblptru	equ	0xFF8
 47301                           tblptrh	equ	0xFF7
 47302                           tblptrl	equ	0xFF6
 47303                           tablat	equ	0xFF5
 47304                           prodh	equ	0xFF4
 47305                           prodl	equ	0xFF3
 47306                           intcon	equ	0xFF2
 47307                           indf0	equ	0xFEF
 47308                           postinc0	equ	0xFEE
 47309                           fsr0h	equ	0xFEA
 47310                           fsr0l	equ	0xFE9
 47311                           wreg	equ	0xFE8
 47312                           indf1	equ	0xFE7
 47313                           postdec1	equ	0xFE5
 47314                           plusw1	equ	0xFE3
 47315                           fsr1h	equ	0xFE2
 47316                           fsr1l	equ	0xFE1
 47317                           bsr	equ	0xFE0
 47318                           indf2	equ	0xFDF
 47319                           postinc2	equ	0xFDE
 47320                           postdec2	equ	0xFDD
 47321                           plusw2	equ	0xFDB
 47322                           fsr2h	equ	0xFDA
 47323                           fsr2l	equ	0xFD9
 47324                           status	equ	0xFD8
 47325                           
 47326 ;; *************** function i2___llmod *****************
 47327 ;; Defined at:
 47328 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 47329 ;; Parameters:    Size  Location     Type
 47330 ;;  dividend        4   13[COMRAM] unsigned long 
 47331 ;;  divisor         4   17[COMRAM] unsigned long 
 47332 ;; Auto vars:     Size  Location     Type
 47333 ;;  __llmod         1   21[COMRAM] unsigned char 
 47334 ;; Return value:  Size  Location     Type
 47335 ;;                  4   13[COMRAM] unsigned long 
 47336 ;; Registers used:
 47337 ;;		wreg, status,2, status,0
 47338 ;; Tracked objects:
 47339 ;;		On entry : 0/0
 47340 ;;		On exit  : 0/0
 47341 ;;		Unchanged: 0/0
 47342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47343 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47346 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47347 ;;Total ram usage:        9 bytes
 47348 ;; Hardware stack levels used:    1
 47349 ;; This function calls:
 47350 ;;		Nothing
 47351 ;; This function is called by:
 47352 ;;		i2__doprnt
 47353 ;; This function uses a non-reentrant model
 47354 ;;
 47355                           
 47356                           	psect	text145
 47357  01A132                     __ptext145:
 47358                           	opt stack 0
 47359  01A132                     i2___llmod:
 47360                           	opt stack 14
 47361                           
 47362                           ;incstack = 0
 47363  01A132  5012               	movf	i2___llmod@divisor,w,c
 47364  01A134  1013               	iorwf	i2___llmod@divisor+1,w,c
 47365  01A136  1014               	iorwf	i2___llmod@divisor+2,w,c
 47366  01A138  1015               	iorwf	i2___llmod@divisor+3,w,c
 47367  01A13A  B4D8               	btfsc	status,2,c
 47368  01A13C  D024               	goto	i2l2610
 47369  01A13E  0E01               	movlw	1
 47370  01A140  6E16               	movwf	i2___llmod@counter,c
 47371  01A142  D006               	goto	i2l2605
 47372  01A144  90D8               	bcf	status,0,c
 47373  01A146  3612               	rlcf	i2___llmod@divisor,f,c
 47374  01A148  3613               	rlcf	i2___llmod@divisor+1,f,c
 47375  01A14A  3614               	rlcf	i2___llmod@divisor+2,f,c
 47376  01A14C  3615               	rlcf	i2___llmod@divisor+3,f,c
 47377  01A14E  2A16               	incf	i2___llmod@counter,f,c
 47378  01A150                     i2l2605:
 47379  01A150  AE15               	btfss	i2___llmod@divisor+3,7,c
 47380  01A152  D7F8               	goto	i2l2606
 47381  01A154                     i2u2066_40:
 47382  01A154  5012               	movf	i2___llmod@divisor,w,c
 47383  01A156  5C0E               	subwf	i2___llmod@dividend,w,c
 47384  01A158  5013               	movf	i2___llmod@divisor+1,w,c
 47385  01A15A  580F               	subwfb	i2___llmod@dividend+1,w,c
 47386  01A15C  5014               	movf	i2___llmod@divisor+2,w,c
 47387  01A15E  5810               	subwfb	i2___llmod@dividend+2,w,c
 47388  01A160  5015               	movf	i2___llmod@divisor+3,w,c
 47389  01A162  5811               	subwfb	i2___llmod@dividend+3,w,c
 47390  01A164  A0D8               	btfss	status,0,c
 47391  01A166  D008               	goto	i2l2609
 47392  01A168  5012               	movf	i2___llmod@divisor,w,c
 47393  01A16A  5E0E               	subwf	i2___llmod@dividend,f,c
 47394  01A16C  5013               	movf	i2___llmod@divisor+1,w,c
 47395  01A16E  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 47396  01A170  5014               	movf	i2___llmod@divisor+2,w,c
 47397  01A172  5A10               	subwfb	i2___llmod@dividend+2,f,c
 47398  01A174  5015               	movf	i2___llmod@divisor+3,w,c
 47399  01A176  5A11               	subwfb	i2___llmod@dividend+3,f,c
 47400  01A178                     i2l2609:
 47401  01A178  90D8               	bcf	status,0,c
 47402  01A17A  3215               	rrcf	i2___llmod@divisor+3,f,c
 47403  01A17C  3214               	rrcf	i2___llmod@divisor+2,f,c
 47404  01A17E  3213               	rrcf	i2___llmod@divisor+1,f,c
 47405  01A180  3212               	rrcf	i2___llmod@divisor,f,c
 47406  01A182  2E16               	decfsz	i2___llmod@counter,f,c
 47407  01A184  D7E7               	goto	i2u2066_40
 47408  01A186                     i2l2610:
 47409  01A186  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 47410  01A18A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 47411  01A18E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 47412  01A192  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 47413  01A196  0012               	return		;funcret
 47414  01A198                     __end_ofi2___llmod:
 47415                           	opt stack 0
 47416                           tosu	equ	0xFFF
 47417                           tosh	equ	0xFFE
 47418                           tosl	equ	0xFFD
 47419                           pclatu	equ	0xFFB
 47420                           pclath	equ	0xFFA
 47421                           tblptru	equ	0xFF8
 47422                           tblptrh	equ	0xFF7
 47423                           tblptrl	equ	0xFF6
 47424                           tablat	equ	0xFF5
 47425                           prodh	equ	0xFF4
 47426                           prodl	equ	0xFF3
 47427                           intcon	equ	0xFF2
 47428                           indf0	equ	0xFEF
 47429                           postinc0	equ	0xFEE
 47430                           fsr0h	equ	0xFEA
 47431                           fsr0l	equ	0xFE9
 47432                           wreg	equ	0xFE8
 47433                           indf1	equ	0xFE7
 47434                           postdec1	equ	0xFE5
 47435                           plusw1	equ	0xFE3
 47436                           fsr1h	equ	0xFE2
 47437                           fsr1l	equ	0xFE1
 47438                           bsr	equ	0xFE0
 47439                           indf2	equ	0xFDF
 47440                           postinc2	equ	0xFDE
 47441                           postdec2	equ	0xFDD
 47442                           plusw2	equ	0xFDB
 47443                           fsr2h	equ	0xFDA
 47444                           fsr2l	equ	0xFD9
 47445                           status	equ	0xFD8
 47446                           
 47447 ;; *************** function i2___lldiv *****************
 47448 ;; Defined at:
 47449 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 47450 ;; Parameters:    Size  Location     Type
 47451 ;;  dividend        4    0[COMRAM] unsigned long 
 47452 ;;  divisor         4    4[COMRAM] unsigned long 
 47453 ;; Auto vars:     Size  Location     Type
 47454 ;;  __lldiv         4    8[COMRAM] unsigned long 
 47455 ;;  __lldiv         1   12[COMRAM] unsigned char 
 47456 ;; Return value:  Size  Location     Type
 47457 ;;                  4    0[COMRAM] unsigned long 
 47458 ;; Registers used:
 47459 ;;		wreg, status,2, status,0
 47460 ;; Tracked objects:
 47461 ;;		On entry : 0/0
 47462 ;;		On exit  : 0/0
 47463 ;;		Unchanged: 0/0
 47464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47465 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47466 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47468 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47469 ;;Total ram usage:       13 bytes
 47470 ;; Hardware stack levels used:    1
 47471 ;; This function calls:
 47472 ;;		Nothing
 47473 ;; This function is called by:
 47474 ;;		i2__doprnt
 47475 ;; This function uses a non-reentrant model
 47476 ;;
 47477                           
 47478                           	psect	text146
 47479  019C5A                     __ptext146:
 47480                           	opt stack 0
 47481  019C5A                     i2___lldiv:
 47482                           	opt stack 14
 47483                           
 47484                           ;incstack = 0
 47485  019C5A  0E00               	movlw	0
 47486  019C5C  6E09               	movwf	i2___lldiv@quotient,c
 47487  019C5E  0E00               	movlw	0
 47488  019C60  6E0A               	movwf	i2___lldiv@quotient+1,c
 47489  019C62  0E00               	movlw	0
 47490  019C64  6E0B               	movwf	i2___lldiv@quotient+2,c
 47491  019C66  0E00               	movlw	0
 47492  019C68  6E0C               	movwf	i2___lldiv@quotient+3,c
 47493  019C6A  5005               	movf	i2___lldiv@divisor,w,c
 47494  019C6C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 47495  019C6E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 47496  019C70  1008               	iorwf	i2___lldiv@divisor+3,w,c
 47497  019C72  B4D8               	btfsc	status,2,c
 47498  019C74  D02A               	goto	i2l2600
 47499  019C76  0E01               	movlw	1
 47500  019C78  6E0D               	movwf	i2___lldiv@counter,c
 47501  019C7A  D006               	goto	i2l2595
 47502  019C7C  90D8               	bcf	status,0,c
 47503  019C7E  3605               	rlcf	i2___lldiv@divisor,f,c
 47504  019C80  3606               	rlcf	i2___lldiv@divisor+1,f,c
 47505  019C82  3607               	rlcf	i2___lldiv@divisor+2,f,c
 47506  019C84  3608               	rlcf	i2___lldiv@divisor+3,f,c
 47507  019C86  2A0D               	incf	i2___lldiv@counter,f,c
 47508  019C88                     i2l2595:
 47509  019C88  AE08               	btfss	i2___lldiv@divisor+3,7,c
 47510  019C8A  D7F8               	goto	i2l2596
 47511  019C8C                     i2u2063_40:
 47512  019C8C  90D8               	bcf	status,0,c
 47513  019C8E  3609               	rlcf	i2___lldiv@quotient,f,c
 47514  019C90  360A               	rlcf	i2___lldiv@quotient+1,f,c
 47515  019C92  360B               	rlcf	i2___lldiv@quotient+2,f,c
 47516  019C94  360C               	rlcf	i2___lldiv@quotient+3,f,c
 47517  019C96  5005               	movf	i2___lldiv@divisor,w,c
 47518  019C98  5C01               	subwf	i2___lldiv@dividend,w,c
 47519  019C9A  5006               	movf	i2___lldiv@divisor+1,w,c
 47520  019C9C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 47521  019C9E  5007               	movf	i2___lldiv@divisor+2,w,c
 47522  019CA0  5803               	subwfb	i2___lldiv@dividend+2,w,c
 47523  019CA2  5008               	movf	i2___lldiv@divisor+3,w,c
 47524  019CA4  5804               	subwfb	i2___lldiv@dividend+3,w,c
 47525  019CA6  A0D8               	btfss	status,0,c
 47526  019CA8  D009               	goto	i2l2599
 47527  019CAA  5005               	movf	i2___lldiv@divisor,w,c
 47528  019CAC  5E01               	subwf	i2___lldiv@dividend,f,c
 47529  019CAE  5006               	movf	i2___lldiv@divisor+1,w,c
 47530  019CB0  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 47531  019CB2  5007               	movf	i2___lldiv@divisor+2,w,c
 47532  019CB4  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 47533  019CB6  5008               	movf	i2___lldiv@divisor+3,w,c
 47534  019CB8  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 47535  019CBA  8009               	bsf	i2___lldiv@quotient,0,c
 47536  019CBC                     i2l2599:
 47537  019CBC  90D8               	bcf	status,0,c
 47538  019CBE  3208               	rrcf	i2___lldiv@divisor+3,f,c
 47539  019CC0  3207               	rrcf	i2___lldiv@divisor+2,f,c
 47540  019CC2  3206               	rrcf	i2___lldiv@divisor+1,f,c
 47541  019CC4  3205               	rrcf	i2___lldiv@divisor,f,c
 47542  019CC6  2E0D               	decfsz	i2___lldiv@counter,f,c
 47543  019CC8  D7E1               	goto	i2u2063_40
 47544  019CCA                     i2l2600:
 47545  019CCA  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 47546  019CCE  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 47547  019CD2  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 47548  019CD6  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 47549  019CDA  0012               	return		;funcret
 47550  019CDC                     __end_ofi2___lldiv:
 47551                           	opt stack 0
 47552                           tosu	equ	0xFFF
 47553                           tosh	equ	0xFFE
 47554                           tosl	equ	0xFFD
 47555                           pclatu	equ	0xFFB
 47556                           pclath	equ	0xFFA
 47557                           tblptru	equ	0xFF8
 47558                           tblptrh	equ	0xFF7
 47559                           tblptrl	equ	0xFF6
 47560                           tablat	equ	0xFF5
 47561                           prodh	equ	0xFF4
 47562                           prodl	equ	0xFF3
 47563                           intcon	equ	0xFF2
 47564                           indf0	equ	0xFEF
 47565                           postinc0	equ	0xFEE
 47566                           fsr0h	equ	0xFEA
 47567                           fsr0l	equ	0xFE9
 47568                           wreg	equ	0xFE8
 47569                           indf1	equ	0xFE7
 47570                           postdec1	equ	0xFE5
 47571                           plusw1	equ	0xFE3
 47572                           fsr1h	equ	0xFE2
 47573                           fsr1l	equ	0xFE1
 47574                           bsr	equ	0xFE0
 47575                           indf2	equ	0xFDF
 47576                           postinc2	equ	0xFDE
 47577                           postdec2	equ	0xFDD
 47578                           plusw2	equ	0xFDB
 47579                           fsr2h	equ	0xFDA
 47580                           fsr2l	equ	0xFD9
 47581                           status	equ	0xFD8
 47582                           
 47583 ;; *************** function _ADCC_ThresholdISR *****************
 47584 ;; Defined at:
 47585 ;;		line 301 in file "mcc_generated_files/adcc.c"
 47586 ;; Parameters:    Size  Location     Type
 47587 ;;		None
 47588 ;; Auto vars:     Size  Location     Type
 47589 ;;		None
 47590 ;; Return value:  Size  Location     Type
 47591 ;;                  1    wreg      void 
 47592 ;; Registers used:
 47593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47594 ;; Tracked objects:
 47595 ;;		On entry : 0/0
 47596 ;;		On exit  : 0/0
 47597 ;;		Unchanged: 0/0
 47598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47603 ;;Total ram usage:        0 bytes
 47604 ;; Hardware stack levels used:    1
 47605 ;; Hardware stack levels required when called:    7
 47606 ;; This function calls:
 47607 ;;		Absolute function
 47608 ;;		_ADCC_DefaultInterruptHandler
 47609 ;;		_ADCPostProcessingCallback
 47610 ;; This function is called by:
 47611 ;;		_INTERRUPT_InterruptManagerHigh
 47612 ;; This function uses a non-reentrant model
 47613 ;;
 47614                           
 47615                           	psect	text147
 47616  01AE08                     __ptext147:
 47617                           	opt stack 0
 47618  01AE08                     _ADCC_ThresholdISR:
 47619                           	opt stack 10
 47620                           
 47621                           ;adcc.c: 304: PIR1bits.ADTIF = 0;
 47622                           
 47623                           ;incstack = 0
 47624  01AE08  010E               	movlb	14	; () banked
 47625  01AE0A  9334               	bcf	52,1,b	;volatile
 47626                           
 47627                           ; BSR set to: 14
 47628                           ;adcc.c: 306: if (ADCC_ADTI_InterruptHandler)
 47629  01AE0C  0102               	movlb	2	; () banked
 47630  01AE0E  5150               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47631  01AE10  1151               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47632  01AE12  1152               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47633  01AE14  B4D8               	btfsc	status,2,c
 47634  01AE16  0012               	return	
 47635                           
 47636                           ; BSR set to: 2
 47637                           ;adcc.c: 307: ADCC_ADTI_InterruptHandler();
 47638  01AE18  D801               	call	i2u3410_48
 47639  01AE1A  0012               	return	
 47640  01AE1C                     i2u3410_48:
 47641  01AE1C  0005               	push	
 47642  01AE1E  6EFA               	movwf	pclath,c
 47643  01AE20  5150               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 47644  01AE22  6EFD               	movwf	tosl,c
 47645  01AE24  5151               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 47646  01AE26  6EFE               	movwf	tosh,c
 47647  01AE28  5152               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 47648  01AE2A  6EFF               	movwf	tosu,c
 47649  01AE2C  50FA               	movf	pclath,w,c
 47650  01AE2E  0012               	return		;indir
 47651  01AE30                     __end_of_ADCC_ThresholdISR:
 47652                           	opt stack 0
 47653                           tosu	equ	0xFFF
 47654                           tosh	equ	0xFFE
 47655                           tosl	equ	0xFFD
 47656                           pclatu	equ	0xFFB
 47657                           pclath	equ	0xFFA
 47658                           tblptru	equ	0xFF8
 47659                           tblptrh	equ	0xFF7
 47660                           tblptrl	equ	0xFF6
 47661                           tablat	equ	0xFF5
 47662                           prodh	equ	0xFF4
 47663                           prodl	equ	0xFF3
 47664                           intcon	equ	0xFF2
 47665                           indf0	equ	0xFEF
 47666                           postinc0	equ	0xFEE
 47667                           fsr0h	equ	0xFEA
 47668                           fsr0l	equ	0xFE9
 47669                           wreg	equ	0xFE8
 47670                           indf1	equ	0xFE7
 47671                           postdec1	equ	0xFE5
 47672                           plusw1	equ	0xFE3
 47673                           fsr1h	equ	0xFE2
 47674                           fsr1l	equ	0xFE1
 47675                           bsr	equ	0xFE0
 47676                           indf2	equ	0xFDF
 47677                           postinc2	equ	0xFDE
 47678                           postdec2	equ	0xFDD
 47679                           plusw2	equ	0xFDB
 47680                           fsr2h	equ	0xFDA
 47681                           fsr2l	equ	0xFD9
 47682                           status	equ	0xFD8
 47683                           
 47684 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 47685 ;; Defined at:
 47686 ;;		line 313 in file "mcc_generated_files/adcc.c"
 47687 ;; Parameters:    Size  Location     Type
 47688 ;;		None
 47689 ;; Auto vars:     Size  Location     Type
 47690 ;;		None
 47691 ;; Return value:  Size  Location     Type
 47692 ;;                  1    wreg      void 
 47693 ;; Registers used:
 47694 ;;		None
 47695 ;; Tracked objects:
 47696 ;;		On entry : 0/0
 47697 ;;		On exit  : 0/0
 47698 ;;		Unchanged: 0/0
 47699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47704 ;;Total ram usage:        0 bytes
 47705 ;; Hardware stack levels used:    1
 47706 ;; This function calls:
 47707 ;;		Nothing
 47708 ;; This function is called by:
 47709 ;;		_ADCC_Initialize
 47710 ;;		_ADCC_ThresholdISR
 47711 ;; This function uses a non-reentrant model
 47712 ;;
 47713                           
 47714                           	psect	text148
 47715  01B294                     __ptext148:
 47716                           	opt stack 0
 47717  01B294                     _ADCC_DefaultInterruptHandler:
 47718                           	opt stack 16
 47719                           
 47720                           ;incstack = 0
 47721  01B294  0012               	return		;funcret
 47722  01B296                     __end_of_ADCC_DefaultInterruptHandler:
 47723                           	opt stack 0
 47724                           tosu	equ	0xFFF
 47725                           tosh	equ	0xFFE
 47726                           tosl	equ	0xFFD
 47727                           pclatu	equ	0xFFB
 47728                           pclath	equ	0xFFA
 47729                           tblptru	equ	0xFF8
 47730                           tblptrh	equ	0xFF7
 47731                           tblptrl	equ	0xFF6
 47732                           tablat	equ	0xFF5
 47733                           prodh	equ	0xFF4
 47734                           prodl	equ	0xFF3
 47735                           intcon	equ	0xFF2
 47736                           indf0	equ	0xFEF
 47737                           postinc0	equ	0xFEE
 47738                           fsr0h	equ	0xFEA
 47739                           fsr0l	equ	0xFE9
 47740                           wreg	equ	0xFE8
 47741                           indf1	equ	0xFE7
 47742                           postdec1	equ	0xFE5
 47743                           plusw1	equ	0xFE3
 47744                           fsr1h	equ	0xFE2
 47745                           fsr1l	equ	0xFE1
 47746                           bsr	equ	0xFE0
 47747                           indf2	equ	0xFDF
 47748                           postinc2	equ	0xFDE
 47749                           postdec2	equ	0xFDD
 47750                           plusw2	equ	0xFDB
 47751                           fsr2h	equ	0xFDA
 47752                           fsr2l	equ	0xFD9
 47753                           status	equ	0xFD8
 47754                           
 47755 ;; *************** function _ADCPostProcessingCallback *****************
 47756 ;; Defined at:
 47757 ;;		line 231 in file "main.c"
 47758 ;; Parameters:    Size  Location     Type
 47759 ;;		None
 47760 ;; Auto vars:     Size  Location     Type
 47761 ;;  current_adc_    1  117[BANK0 ] enum E17572
 47762 ;; Return value:  Size  Location     Type
 47763 ;;                  1    wreg      void 
 47764 ;; Registers used:
 47765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47766 ;; Tracked objects:
 47767 ;;		On entry : 0/0
 47768 ;;		On exit  : 0/0
 47769 ;;		Unchanged: 0/0
 47770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47772 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47774 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47775 ;;Total ram usage:       21 bytes
 47776 ;; Hardware stack levels used:    1
 47777 ;; Hardware stack levels required when called:    6
 47778 ;; This function calls:
 47779 ;;		_ADCC_GetConversionResult
 47780 ;;		_ADCC_GetCurrentCountofConversions
 47781 ;;		_ADCC_GetFilterValue
 47782 ;;		_ADCC_HasAccumulatorOverflowed
 47783 ;;		_ADCC_StopConversion
 47784 ;;		_abs
 47785 ;;		_currentMeasuredToPeak
 47786 ;;		_peakToRMS
 47787 ;;		i2___fladd
 47788 ;;		i2___fldiv
 47789 ;;		i2___flge
 47790 ;;		i2___flmul
 47791 ;;		i2___flneg
 47792 ;;		i2___fltol
 47793 ;;		i2___xxtofl
 47794 ;; This function is called by:
 47795 ;;		_main
 47796 ;;		_ADCC_ThresholdISR
 47797 ;; This function uses a non-reentrant model
 47798 ;;
 47799                           
 47800                           	psect	text149
 47801  014078                     __ptext149:
 47802                           	opt stack 0
 47803  014078                     _ADCPostProcessingCallback:
 47804                           	opt stack 10
 47805                           
 47806                           ;main.c: 234: ADCC_StopConversion();
 47807                           
 47808                           ;incstack = 0
 47809  014078  EC41  F0D9         	call	_ADCC_StopConversion	;wreg free
 47810                           
 47811                           ;main.c: 237: adcc_channel_t current_adc_channel = ADPCH;
 47812  01407C  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 47813                           
 47814                           ;main.c: 240: switch (current_adc_channel) {
 47815  014080  EF74  F0A5         	goto	i2l1188
 47816  014084                     
 47817                           ;main.c: 244: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 47818  014084  EC8D  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 47819  014088  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 47820  01408C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 47821  014090  6A07               	clrf	i2___xxtofl@val+2,c
 47822  014092  6A08               	clrf	i2___xxtofl@val+3,c
 47823  014094  0E00               	movlw	0
 47824  014096  EC8E  F0C1         	call	i2___xxtofl
 47825  01409A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47826  01409E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47827  0140A2  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47828  0140A6  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47829  0140AA  0E0D               	movlw	13
 47830  0140AC  6E34               	movwf	i2___flmul@a,c
 47831  0140AE  0E68               	movlw	104
 47832  0140B0  6E35               	movwf	i2___flmul@a+1,c
 47833  0140B2  0E53               	movlw	83
 47834  0140B4  6E36               	movwf	i2___flmul@a+2,c
 47835  0140B6  0E3B               	movlw	59
 47836  0140B8  6E37               	movwf	i2___flmul@a+3,c
 47837  0140BA  EC8D  F0AD         	call	i2___flmul	;wreg free
 47838  0140BE  C030  F240         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 47839  0140C2  C031  F241         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 47840  0140C6  C032  F242         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 47841  0140CA  C033  F243         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 47842                           
 47843                           ;main.c: 246: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 47844  0140CE  0E0A               	movlw	10
 47845  0140D0  6E34               	movwf	i2___flge@ff1,c
 47846  0140D2  0ED7               	movlw	215
 47847  0140D4  6E35               	movwf	i2___flge@ff1+1,c
 47848  0140D6  0E23               	movlw	35
 47849  0140D8  6E36               	movwf	i2___flge@ff1+2,c
 47850  0140DA  0E3C               	movlw	60
 47851  0140DC  6E37               	movwf	i2___flge@ff1+3,c
 47852  0140DE  C240  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 47853  0140E2  C241  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 47854  0140E6  C242  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 47855  0140EA  C243  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 47856  0140EE  ECE3  F0C6         	call	i2___flge	;wreg free
 47857  0140F2  A0D8               	btfss	status,0,c
 47858  0140F4  D005               	goto	i2u2248_40
 47859  0140F6  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47860  0140FA  0900               	iorlw	0
 47861  0140FC  B4D8               	btfsc	status,2,c
 47862  0140FE  D004               	goto	i2l1190
 47863  014100                     i2u2248_40:
 47864                           
 47865                           ;main.c: 248: error_handler.AVSS_ADC_error_flag = 1;
 47866  014100  0E01               	movlw	1
 47867  014102  0102               	movlb	2	; () banked
 47868  014104  6F03               	movwf	(_error_handler+3)& (0+255),b
 47869                           
 47870                           ; BSR set to: 2
 47871                           ;main.c: 249: return;
 47872  014106  0012               	return	
 47873  014108                     i2l1190:
 47874                           
 47875                           ;main.c: 251: }
 47876                           ;main.c: 253: next_channel = channel_FVR_buf1;
 47877                           
 47878                           ; BSR set to: 2
 47879  014108  0E3F               	movlw	63
 47880  01410A  EF6D  F0A5         	goto	L26
 47881  01410E                     
 47882                           ;main.c: 260: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 47883                           
 47884                           ; BSR set to: 2
 47885  01410E  0E0D               	movlw	13
 47886  014110  6E34               	movwf	i2___flmul@a,c
 47887  014112  0E68               	movlw	104
 47888  014114  6E35               	movwf	i2___flmul@a+1,c
 47889  014116  0E53               	movlw	83
 47890  014118  6E36               	movwf	i2___flmul@a+2,c
 47891  01411A  0E3B               	movlw	59
 47892  01411C  6E37               	movwf	i2___flmul@a+3,c
 47893  01411E  EC8D  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 47894  014122  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 47895  014126  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 47896  01412A  6A07               	clrf	i2___xxtofl@val+2,c
 47897  01412C  6A08               	clrf	i2___xxtofl@val+3,c
 47898  01412E  0E00               	movlw	0
 47899  014130  EC8E  F0C1         	call	i2___xxtofl
 47900  014134  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 47901  014138  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 47902  01413C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 47903  014140  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 47904  014144  EC8D  F0AD         	call	i2___flmul	;wreg free
 47905  014148  C030  F056         	movff	?i2___flmul,i2___fladd@b
 47906  01414C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 47907  014150  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 47908  014154  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 47909  014158  C240  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 47910  01415C  C241  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 47911  014160  C242  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 47912  014164  C243  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 47913  014168  ECD4  F0B0         	call	i2___fladd	;wreg free
 47914  01416C  C056  F1E2         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 47915  014170  C057  F1E3         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 47916  014174  C058  F1E4         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 47917  014178  C059  F1E5         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 47918                           
 47919                           ;main.c: 261: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 47920  01417C  0E6F               	movlw	111
 47921  01417E  6E13               	movwf	i2___fldiv@b,c
 47922  014180  0E12               	movlw	18
 47923  014182  6E14               	movwf	i2___fldiv@b+1,c
 47924  014184  0E03               	movlw	3
 47925  014186  6E15               	movwf	i2___fldiv@b+2,c
 47926  014188  0E40               	movlw	64
 47927  01418A  6E16               	movwf	i2___fldiv@b+3,c
 47928  01418C  C1E2  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 47929  014190  C1E3  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 47930  014194  C1E4  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 47931  014198  C1E5  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 47932  01419C  EC94  F0B9         	call	i2___fldiv	;wreg free
 47933  0141A0  C013  F23C         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 47934  0141A4  C014  F23D         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 47935  0141A8  C015  F23E         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 47936  0141AC  C016  F23F         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 47937                           
 47938                           ;main.c: 263: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 47939  0141B0  0E00               	movlw	0
 47940  0141B2  6E34               	movwf	i2___flge@ff1,c
 47941  0141B4  0E00               	movlw	0
 47942  0141B6  6E35               	movwf	i2___flge@ff1+1,c
 47943  0141B8  0E20               	movlw	32
 47944  0141BA  6E36               	movwf	i2___flge@ff1+2,c
 47945  0141BC  0E40               	movlw	64
 47946  0141BE  6E37               	movwf	i2___flge@ff1+3,c
 47947  0141C0  C1E2  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 47948  0141C4  C1E3  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 47949  0141C8  C1E4  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 47950  0141CC  C1E5  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 47951  0141D0  ECE3  F0C6         	call	i2___flge	;wreg free
 47952  0141D4  A0D8               	btfss	status,0,c
 47953  0141D6  D019               	goto	i2u2251_40
 47954  0141D8  C1E2  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 47955  0141DC  C1E3  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 47956  0141E0  C1E4  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 47957  0141E4  C1E5  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 47958  0141E8  0E00               	movlw	0
 47959  0141EA  6E38               	movwf	i2___flge@ff2,c
 47960  0141EC  0E00               	movlw	0
 47961  0141EE  6E39               	movwf	i2___flge@ff2+1,c
 47962  0141F0  0E00               	movlw	0
 47963  0141F2  6E3A               	movwf	i2___flge@ff2+2,c
 47964  0141F4  0E40               	movlw	64
 47965  0141F6  6E3B               	movwf	i2___flge@ff2+3,c
 47966  0141F8  ECE3  F0C6         	call	i2___flge	;wreg free
 47967  0141FC  A0D8               	btfss	status,0,c
 47968  0141FE  D005               	goto	i2u2251_40
 47969  014200  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 47970  014204  0900               	iorlw	0
 47971  014206  B4D8               	btfsc	status,2,c
 47972  014208  D004               	goto	i2l1196
 47973  01420A                     i2u2251_40:
 47974                           
 47975                           ;main.c: 265: error_handler.FVR_ADC_error_flag = 1;
 47976  01420A  0E01               	movlw	1
 47977  01420C  0102               	movlb	2	; () banked
 47978  01420E  6F05               	movwf	(_error_handler+5)& (0+255),b
 47979                           
 47980                           ; BSR set to: 2
 47981                           ;main.c: 266: return;
 47982  014210  0012               	return	
 47983  014212                     i2l1196:
 47984                           
 47985                           ;main.c: 268: }
 47986                           ;main.c: 270: next_channel = POS3P3_ADC;
 47987                           
 47988                           ; BSR set to: 2
 47989  014212  0E22               	movlw	34
 47990  014214  EF6D  F0A5         	goto	L26
 47991  014218                     
 47992                           ;main.c: 277: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 47993                           
 47994                           ; BSR set to: 2
 47995  014218  C23C  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 47996  01421C  C23D  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 47997  014220  C23E  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 47998  014224  C23F  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 47999  014228  EC83  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48000  01422C  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48001  014230  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48002  014234  6A07               	clrf	i2___xxtofl@val+2,c
 48003  014236  6A08               	clrf	i2___xxtofl@val+3,c
 48004  014238  0E00               	movlw	0
 48005  01423A  EC8E  F0C1         	call	i2___xxtofl
 48006  01423E  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48007  014242  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48008  014246  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48009  01424A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48010  01424E  EC8D  F0AD         	call	i2___flmul	;wreg free
 48011  014252  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5421
 48012  014256  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5421+1
 48013  01425A  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5421+2
 48014  01425E  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5421+3
 48015                           
 48016                           ;main.c: 277: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 48017  014262  C0D6  F030         	movff	_ADCPostProcessingCallback$5421,i2___flmul@b
 48018  014266  C0D7  F031         	movff	_ADCPostProcessingCallback$5421+1,i2___flmul@b+1
 48019  01426A  C0D8  F032         	movff	_ADCPostProcessingCallback$5421+2,i2___flmul@b+2
 48020  01426E  C0D9  F033         	movff	_ADCPostProcessingCallback$5421+3,i2___flmul@b+3
 48021  014272  0E0D               	movlw	13
 48022  014274  6E34               	movwf	i2___flmul@a,c
 48023  014276  0E68               	movlw	104
 48024  014278  6E35               	movwf	i2___flmul@a+1,c
 48025  01427A  0ED3               	movlw	211
 48026  01427C  6E36               	movwf	i2___flmul@a+2,c
 48027  01427E  0E3B               	movlw	59
 48028  014280  6E37               	movwf	i2___flmul@a+3,c
 48029  014282  EC8D  F0AD         	call	i2___flmul	;wreg free
 48030  014286  C030  F1DA         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 48031  01428A  C031  F1DB         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 48032  01428E  C032  F1DC         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 48033  014292  C033  F1DD         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 48034                           
 48035                           ;main.c: 279: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 48036  014296  0E00               	movlw	0
 48037  014298  6E34               	movwf	i2___flge@ff1,c
 48038  01429A  0E00               	movlw	0
 48039  01429C  6E35               	movwf	i2___flge@ff1+1,c
 48040  01429E  0E60               	movlw	96
 48041  0142A0  6E36               	movwf	i2___flge@ff1+2,c
 48042  0142A2  0E40               	movlw	64
 48043  0142A4  6E37               	movwf	i2___flge@ff1+3,c
 48044  0142A6  C1DA  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 48045  0142AA  C1DB  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 48046  0142AE  C1DC  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 48047  0142B2  C1DD  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 48048  0142B6  ECE3  F0C6         	call	i2___flge	;wreg free
 48049  0142BA  A0D8               	btfss	status,0,c
 48050  0142BC  D005               	goto	i2u2253_40
 48051  0142BE  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48052  0142C2  0900               	iorlw	0
 48053  0142C4  B4D8               	btfsc	status,2,c
 48054  0142C6  D004               	goto	i2l1200
 48055  0142C8                     i2u2253_40:
 48056                           
 48057                           ;main.c: 281: error_handler.POS3P3_ADC_error_flag = 1;
 48058  0142C8  0E01               	movlw	1
 48059  0142CA  0102               	movlb	2	; () banked
 48060  0142CC  6F02               	movwf	(_error_handler+2)& (0+255),b
 48061                           
 48062                           ; BSR set to: 2
 48063                           ;main.c: 282: return;
 48064  0142CE  0012               	return	
 48065  0142D0                     i2l1200:
 48066                           
 48067                           ;main.c: 284: }
 48068                           ;main.c: 286: next_channel = ISNS_ADC;
 48069                           
 48070                           ; BSR set to: 2
 48071  0142D0  0E00               	movlw	0
 48072  0142D2  EF6D  F0A5         	goto	L26
 48073  0142D6                     
 48074                           ;main.c: 293: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 48075                           
 48076                           ; BSR set to: 2
 48077  0142D6  0E00               	movlw	0
 48078  0142D8  6E17               	movwf	i2___fldiv@a,c
 48079  0142DA  0EC0               	movlw	192
 48080  0142DC  6E18               	movwf	i2___fldiv@a+1,c
 48081  0142DE  0E7F               	movlw	127
 48082  0142E0  6E19               	movwf	i2___fldiv@a+2,c
 48083  0142E2  0E44               	movlw	68
 48084  0142E4  6E1A               	movwf	i2___fldiv@a+3,c
 48085  0142E6  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48086  0142EA  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48087  0142EE  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48088  0142F2  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48089  0142F6  EC94  F0B9         	call	i2___fldiv	;wreg free
 48090  0142FA  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48091  0142FE  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48092  014302  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48093  014306  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48094  01430A  EC83  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48095  01430E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48096  014312  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48097  014316  6A07               	clrf	i2___xxtofl@val+2,c
 48098  014318  6A08               	clrf	i2___xxtofl@val+3,c
 48099  01431A  0E00               	movlw	0
 48100  01431C  EC8E  F0C1         	call	i2___xxtofl
 48101  014320  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48102  014324  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48103  014328  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48104  01432C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48105  014330  EC8D  F0AD         	call	i2___flmul	;wreg free
 48106  014334  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5421
 48107  014338  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5421+1
 48108  01433C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5421+2
 48109  014340  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5421+3
 48110                           
 48111                           ;main.c: 293: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 48112  014344  C0D6  F030         	movff	_ADCPostProcessingCallback$5421,i2___flmul@b
 48113  014348  C0D7  F031         	movff	_ADCPostProcessingCallback$5421+1,i2___flmul@b+1
 48114  01434C  C0D8  F032         	movff	_ADCPostProcessingCallback$5421+2,i2___flmul@b+2
 48115  014350  C0D9  F033         	movff	_ADCPostProcessingCallback$5421+3,i2___flmul@b+3
 48116  014354  0E35               	movlw	53
 48117  014356  6E34               	movwf	i2___flmul@a,c
 48118  014358  0E5E               	movlw	94
 48119  01435A  6E35               	movwf	i2___flmul@a+1,c
 48120  01435C  0EF2               	movlw	242
 48121  01435E  6E36               	movwf	i2___flmul@a+2,c
 48122  014360  0E3F               	movlw	63
 48123  014362  6E37               	movwf	i2___flmul@a+3,c
 48124  014364  EC8D  F0AD         	call	i2___flmul	;wreg free
 48125  014368  C030  F234         	movff	?i2___flmul,_Imeas	;volatile
 48126  01436C  C031  F235         	movff	?i2___flmul+1,_Imeas+1	;volatile
 48127  014370  C032  F236         	movff	?i2___flmul+2,_Imeas+2	;volatile
 48128  014374  C033  F237         	movff	?i2___flmul+3,_Imeas+3	;volatile
 48129                           
 48130                           ;main.c: 297: if (LATGbits.LATG0 != 1) {
 48131  014378  B07F               	btfsc	3967,0,c	;volatile
 48132  01437A  D166               	goto	i2l1204
 48133                           
 48134                           ;main.c: 302: if (load_enable) {
 48135  01437C  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 48136  01437E  D0CD               	goto	i2l1205
 48137                           
 48138                           ;main.c: 305: if (dimming_period < 0x7FEE) {
 48139  014380  0EEE               	movlw	238
 48140  014382  0100               	movlb	0	; () banked
 48141  014384  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 48142  014386  0E7F               	movlw	127
 48143  014388  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 48144  01438A  B0D8               	btfsc	status,0,c
 48145  01438C  D052               	goto	i2l1206
 48146                           
 48147                           ; BSR set to: 0
 48148                           ;main.c: 307: Ipk = Imeas;
 48149  01438E  C234  F1CE         	movff	_Imeas,_Ipk	;volatile
 48150  014392  C235  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 48151  014396  C236  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 48152  01439A  C237  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 48153                           
 48154                           ; BSR set to: 0
 48155                           ;main.c: 308: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48156  01439E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48157  0143A2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48158  0143A6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48159  0143AA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48160  0143AE  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48161  0143B2  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48162  0143B6  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48163  0143BA  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48164  0143BE  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48165  0143C2  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5422
 48166  0143C6  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5422+1
 48167  0143CA  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5422+2
 48168  0143CE  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5422+3
 48169                           
 48170                           ;main.c: 308: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48171  0143D2  C2E8  F05A         	movff	_Irms_offset,i2___fladd@a
 48172  0143D6  C2E9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48173  0143DA  C2EA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48174  0143DE  C2EB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48175  0143E2  C0DA  F056         	movff	_ADCPostProcessingCallback$5422,i2___fladd@b
 48176  0143E6  C0DB  F057         	movff	_ADCPostProcessingCallback$5422+1,i2___fladd@b+1
 48177  0143EA  C0DC  F058         	movff	_ADCPostProcessingCallback$5422+2,i2___fladd@b+2
 48178  0143EE  C0DD  F059         	movff	_ADCPostProcessingCallback$5422+3,i2___fladd@b+3
 48179  0143F2  ECD4  F0B0         	call	i2___fladd	;wreg free
 48180  0143F6  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48181  0143FA  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48182  0143FE  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48183  014402  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48184  014406  EC6F  F0C9         	call	i2___fltol	;wreg free
 48185  01440A  C06C  F076         	movff	?i2___fltol,abs@a
 48186  01440E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48187  014412  ECC7  F0D6         	call	_abs	;wreg free
 48188  014416  0100               	movlb	0	; () banked
 48189  014418  C076  F005         	movff	?_abs,i2___xxtofl@val
 48190  01441C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48191  014420  0E00               	movlw	0
 48192  014422  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48193  014424  0EFF               	movlw	-1
 48194  014426  6E07               	movwf	i2___xxtofl@val+2,c
 48195  014428  6E08               	movwf	i2___xxtofl@val+3,c
 48196  01442A  0E01               	movlw	1
 48197  01442C  EC8E  F0C1         	call	i2___xxtofl
 48198  014430  D063               	goto	L24
 48199  014432                     i2l1206:
 48200                           
 48201                           ;main.c: 313: else {
 48202                           ;main.c: 315: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 48203  014432  C234  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 48204  014436  C235  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 48205  01443A  C236  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 48206  01443E  C237  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 48207  014442  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 48208  014446  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 48209  01444A  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 48210  01444E  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 48211  014452  EC6E  F0CE         	call	_currentMeasuredToPeak	;wreg free
 48212  014456  C099  F1CE         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 48213  01445A  C09A  F1CF         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 48214  01445E  C09B  F1D0         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 48215  014462  C09C  F1D1         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 48216                           
 48217                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48218  014466  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48219  01446A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48220  01446E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48221  014472  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48222  014476  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48223  01447A  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48224  01447E  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48225  014482  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48226  014486  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48227  01448A  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5422
 48228  01448E  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5422+1
 48229  014492  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5422+2
 48230  014496  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5422+3
 48231                           
 48232                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 48233  01449A  C2E8  F05A         	movff	_Irms_offset,i2___fladd@a
 48234  01449E  C2E9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48235  0144A2  C2EA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48236  0144A6  C2EB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48237  0144AA  C0DA  F056         	movff	_ADCPostProcessingCallback$5422,i2___fladd@b
 48238  0144AE  C0DB  F057         	movff	_ADCPostProcessingCallback$5422+1,i2___fladd@b+1
 48239  0144B2  C0DC  F058         	movff	_ADCPostProcessingCallback$5422+2,i2___fladd@b+2
 48240  0144B6  C0DD  F059         	movff	_ADCPostProcessingCallback$5422+3,i2___fladd@b+3
 48241  0144BA  ECD4  F0B0         	call	i2___fladd	;wreg free
 48242  0144BE  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48243  0144C2  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48244  0144C6  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48245  0144CA  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48246  0144CE  EC6F  F0C9         	call	i2___fltol	;wreg free
 48247  0144D2  C06C  F076         	movff	?i2___fltol,abs@a
 48248  0144D6  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48249  0144DA  ECC7  F0D6         	call	_abs	;wreg free
 48250  0144DE  0100               	movlb	0	; () banked
 48251  0144E0  C076  F005         	movff	?_abs,i2___xxtofl@val
 48252  0144E4  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48253  0144E8  0E00               	movlw	0
 48254  0144EA  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48255  0144EC  0EFF               	movlw	-1
 48256  0144EE  6E07               	movwf	i2___xxtofl@val+2,c
 48257  0144F0  6E08               	movwf	i2___xxtofl@val+3,c
 48258  0144F2  0E01               	movlw	1
 48259  0144F4  EC8E  F0C1         	call	i2___xxtofl
 48260  0144F8                     L24:
 48261  0144F8  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 48262  0144FC  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 48263  014500  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 48264  014504  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 48265                           
 48266                           ;main.c: 318: }
 48267                           ;main.c: 320: Vpk = Vpk_const;
 48268  014508  C2EC  F238         	movff	_Vpk_const,_Vpk	;volatile
 48269  01450C  C2ED  F239         	movff	_Vpk_const+1,_Vpk+1	;volatile
 48270  014510  C2EE  F23A         	movff	_Vpk_const+2,_Vpk+2	;volatile
 48271  014514  C2EF  F23B         	movff	_Vpk_const+3,_Vpk+3	;volatile
 48272                           
 48273                           ;main.c: 322: }
 48274  014518  D02C               	goto	i2l1208
 48275  01451A                     i2l1205:
 48276                           
 48277                           ;main.c: 324: else {
 48278                           ;main.c: 326: Ipk = 0.0;
 48279  01451A  0E00               	movlw	0
 48280  01451C  0101               	movlb	1	; () banked
 48281  01451E  6FCE               	movwf	_Ipk& (0+255),b	;volatile
 48282  014520  0E00               	movlw	0
 48283  014522  6FCF               	movwf	(_Ipk+1)& (0+255),b	;volatile
 48284  014524  0E00               	movlw	0
 48285  014526  6FD0               	movwf	(_Ipk+2)& (0+255),b	;volatile
 48286  014528  0E00               	movlw	0
 48287  01452A  6FD1               	movwf	(_Ipk+3)& (0+255),b	;volatile
 48288                           
 48289                           ;main.c: 327: Vpk = 0.0;
 48290  01452C  0E00               	movlw	0
 48291  01452E  0102               	movlb	2	; () banked
 48292  014530  6F38               	movwf	_Vpk& (0+255),b	;volatile
 48293  014532  0E00               	movlw	0
 48294  014534  6F39               	movwf	(_Vpk+1)& (0+255),b	;volatile
 48295  014536  0E00               	movlw	0
 48296  014538  6F3A               	movwf	(_Vpk+2)& (0+255),b	;volatile
 48297  01453A  0E00               	movlw	0
 48298  01453C  6F3B               	movwf	(_Vpk+3)& (0+255),b	;volatile
 48299                           
 48300                           ; BSR set to: 2
 48301                           ;main.c: 328: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 48302  01453E  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48303  014542  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48304  014546  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48305  01454A  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48306  01454E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48307  014552  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48308  014556  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48309  01455A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48310  01455E  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48311  014562  C0B1  F1CA         	movff	?_peakToRMS,_Irms	;volatile
 48312  014566  C0B2  F1CB         	movff	?_peakToRMS+1,_Irms+1	;volatile
 48313  01456A  C0B3  F1CC         	movff	?_peakToRMS+2,_Irms+2	;volatile
 48314  01456E  C0B4  F1CD         	movff	?_peakToRMS+3,_Irms+3	;volatile
 48315  014572                     i2l1208:
 48316                           
 48317                           ;main.c: 330: }
 48318                           ;main.c: 332: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 48319  014572  C238  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 48320  014576  C239  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 48321  01457A  C23A  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 48322  01457E  C23B  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 48323  014582  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 48324  014586  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 48325  01458A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 48326  01458E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 48327  014592  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48328  014596  C0B1  F230         	movff	?_peakToRMS,_Vrms	;volatile
 48329  01459A  C0B2  F231         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 48330  01459E  C0B3  F232         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 48331  0145A2  C0B4  F233         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 48332                           
 48333                           ;main.c: 333: Avg_Power = Vrms * Irms;
 48334  0145A6  C230  F030         	movff	_Vrms,i2___flmul@b	;volatile
 48335  0145AA  C231  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 48336  0145AE  C232  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 48337  0145B2  C233  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 48338  0145B6  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 48339  0145BA  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 48340  0145BE  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 48341  0145C2  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 48342  0145C6  EC8D  F0AD         	call	i2___flmul	;wreg free
 48343  0145CA  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 48344  0145CE  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 48345  0145D2  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 48346  0145D6  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 48347                           
 48348                           ;main.c: 334: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 48349  0145DA  0E00               	movlw	0
 48350  0145DC  6E17               	movwf	i2___fldiv@a,c
 48351  0145DE  0E00               	movlw	0
 48352  0145E0  6E18               	movwf	i2___fldiv@a+1,c
 48353  0145E2  0E61               	movlw	97
 48354  0145E4  6E19               	movwf	i2___fldiv@a+2,c
 48355  0145E6  0E45               	movlw	69
 48356  0145E8  6E1A               	movwf	i2___fldiv@a+3,c
 48357  0145EA  0E29               	movlw	41
 48358  0145EC  6E34               	movwf	i2___flmul@a,c
 48359  0145EE  0E5C               	movlw	92
 48360  0145F0  6E35               	movwf	i2___flmul@a+1,c
 48361  0145F2  0E8F               	movlw	143
 48362  0145F4  6E36               	movwf	i2___flmul@a+2,c
 48363  0145F6  0E3D               	movlw	61
 48364  0145F8  6E37               	movwf	i2___flmul@a+3,c
 48365  0145FA  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 48366  0145FE  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 48367  014602  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 48368  014606  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 48369  01460A  EC8D  F0AD         	call	i2___flmul	;wreg free
 48370  01460E  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 48371  014612  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 48372  014616  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 48373  01461A  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 48374  01461E  EC94  F0B9         	call	i2___fldiv	;wreg free
 48375  014622  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 48376  014626  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 48377  01462A  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 48378  01462E  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 48379  014632  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 48380  014636  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 48381  01463A  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 48382  01463E  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 48383  014642  ECD4  F0B0         	call	i2___fladd	;wreg free
 48384  014646  D0C5               	goto	L20
 48385  014648                     i2l1204:
 48386                           
 48387                           ;main.c: 339: else {
 48388                           ;main.c: 341: Ipk = Imeas;
 48389  014648  C234  F1CE         	movff	_Imeas,_Ipk	;volatile
 48390  01464C  C235  F1CF         	movff	_Imeas+1,_Ipk+1	;volatile
 48391  014650  C236  F1D0         	movff	_Imeas+2,_Ipk+2	;volatile
 48392  014654  C237  F1D1         	movff	_Imeas+3,_Ipk+3	;volatile
 48393                           
 48394                           ;main.c: 342: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 48395  014658  0E00               	movlw	0
 48396  01465A  0100               	movlb	0	; () banked
 48397  01465C  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 48398  01465E  0E00               	movlw	0
 48399  014660  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 48400  014662  0E00               	movlw	0
 48401  014664  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 48402  014666  0E00               	movlw	0
 48403  014668  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 48404  01466A  C1CE  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 48405  01466E  C1CF  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 48406  014672  C1D0  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 48407  014676  C1D1  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 48408  01467A  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48409  01467E  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$5422
 48410  014682  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$5422+1
 48411  014686  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$5422+2
 48412  01468A  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$5422+3
 48413                           
 48414                           ;main.c: 342: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 48415  01468E  C2E8  F05A         	movff	_Irms_offset,i2___fladd@a
 48416  014692  C2E9  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 48417  014696  C2EA  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 48418  01469A  C2EB  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 48419  01469E  C0DA  F056         	movff	_ADCPostProcessingCallback$5422,i2___fladd@b
 48420  0146A2  C0DB  F057         	movff	_ADCPostProcessingCallback$5422+1,i2___fladd@b+1
 48421  0146A6  C0DC  F058         	movff	_ADCPostProcessingCallback$5422+2,i2___fladd@b+2
 48422  0146AA  C0DD  F059         	movff	_ADCPostProcessingCallback$5422+3,i2___fladd@b+3
 48423  0146AE  ECD4  F0B0         	call	i2___fladd	;wreg free
 48424  0146B2  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 48425  0146B6  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 48426  0146BA  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 48427  0146BE  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 48428  0146C2  EC6F  F0C9         	call	i2___fltol	;wreg free
 48429  0146C6  C06C  F076         	movff	?i2___fltol,abs@a
 48430  0146CA  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 48431  0146CE  ECC7  F0D6         	call	_abs	;wreg free
 48432  0146D2  0100               	movlb	0	; () banked
 48433  0146D4  C076  F005         	movff	?_abs,i2___xxtofl@val
 48434  0146D8  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 48435  0146DC  0E00               	movlw	0
 48436  0146DE  BE06               	btfsc	i2___xxtofl@val+1,7,c
 48437  0146E0  0EFF               	movlw	-1
 48438  0146E2  6E07               	movwf	i2___xxtofl@val+2,c
 48439  0146E4  6E08               	movwf	i2___xxtofl@val+3,c
 48440  0146E6  0E01               	movlw	1
 48441  0146E8  EC8E  F0C1         	call	i2___xxtofl
 48442  0146EC  C005  F1CA         	movff	?i2___xxtofl,_Irms	;volatile
 48443  0146F0  C006  F1CB         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 48444  0146F4  C007  F1CC         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 48445  0146F8  C008  F1CD         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 48446                           
 48447                           ;main.c: 343: Vrms = peakToRMS(Vpk_const, 0.0);
 48448  0146FC  C2EC  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 48449  014700  C2ED  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 48450  014704  C2EE  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 48451  014708  C2EF  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 48452  01470C  0E00               	movlw	0
 48453  01470E  0100               	movlb	0	; () banked
 48454  014710  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 48455  014712  0E00               	movlw	0
 48456  014714  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 48457  014716  0E00               	movlw	0
 48458  014718  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 48459  01471A  0E00               	movlw	0
 48460  01471C  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 48461  01471E  ECA4  F0BE         	call	_peakToRMS	;wreg free
 48462  014722  C0B1  F230         	movff	?_peakToRMS,_Vrms	;volatile
 48463  014726  C0B2  F231         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 48464  01472A  C0B3  F232         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 48465  01472E  C0B4  F233         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 48466                           
 48467                           ;main.c: 344: Avg_Power = Vrms * Irms;
 48468  014732  C230  F030         	movff	_Vrms,i2___flmul@b	;volatile
 48469  014736  C231  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 48470  01473A  C232  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 48471  01473E  C233  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 48472  014742  C1CA  F034         	movff	_Irms,i2___flmul@a	;volatile
 48473  014746  C1CB  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 48474  01474A  C1CC  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 48475  01474E  C1CD  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 48476  014752  EC8D  F0AD         	call	i2___flmul	;wreg free
 48477  014756  C030  F1C6         	movff	?i2___flmul,_Avg_Power	;volatile
 48478  01475A  C031  F1C7         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 48479  01475E  C032  F1C8         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 48480  014762  C033  F1C9         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 48481                           
 48482                           ;main.c: 345: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 48483  014766  0E00               	movlw	0
 48484  014768  6E17               	movwf	i2___fldiv@a,c
 48485  01476A  0E00               	movlw	0
 48486  01476C  6E18               	movwf	i2___fldiv@a+1,c
 48487  01476E  0E61               	movlw	97
 48488  014770  6E19               	movwf	i2___fldiv@a+2,c
 48489  014772  0E45               	movlw	69
 48490  014774  6E1A               	movwf	i2___fldiv@a+3,c
 48491  014776  0E29               	movlw	41
 48492  014778  6E34               	movwf	i2___flmul@a,c
 48493  01477A  0E5C               	movlw	92
 48494  01477C  6E35               	movwf	i2___flmul@a+1,c
 48495  01477E  0E8F               	movlw	143
 48496  014780  6E36               	movwf	i2___flmul@a+2,c
 48497  014782  0E3D               	movlw	61
 48498  014784  6E37               	movwf	i2___flmul@a+3,c
 48499  014786  C1C6  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 48500  01478A  C1C7  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 48501  01478E  C1C8  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 48502  014792  C1C9  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 48503  014796  EC8D  F0AD         	call	i2___flmul	;wreg free
 48504  01479A  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 48505  01479E  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 48506  0147A2  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 48507  0147A6  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 48508  0147AA  EC94  F0B9         	call	i2___fldiv	;wreg free
 48509  0147AE  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 48510  0147B2  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 48511  0147B6  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 48512  0147BA  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 48513  0147BE  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 48514  0147C2  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 48515  0147C6  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 48516  0147CA  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 48517  0147CE  ECD4  F0B0         	call	i2___fladd	;wreg free
 48518  0147D2                     L20:
 48519  0147D2  C056  F0F6         	movff	?i2___fladd,_Total_Energy	;volatile
 48520  0147D6  C057  F0F7         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 48521  0147DA  C058  F0F8         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 48522  0147DE  C059  F0F9         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 48523                           
 48524                           ;main.c: 347: }
 48525                           ;main.c: 349: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 48526  0147E2  0E00               	movlw	0
 48527  0147E4  6E34               	movwf	i2___flge@ff1,c
 48528  0147E6  0E00               	movlw	0
 48529  0147E8  6E35               	movwf	i2___flge@ff1+1,c
 48530  0147EA  0EA0               	movlw	160
 48531  0147EC  6E36               	movwf	i2___flge@ff1+2,c
 48532  0147EE  0E40               	movlw	64
 48533  0147F0  6E37               	movwf	i2___flge@ff1+3,c
 48534  0147F2  C1CA  F038         	movff	_Irms,i2___flge@ff2	;volatile
 48535  0147F6  C1CB  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 48536  0147FA  C1CC  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 48537  0147FE  C1CD  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 48538  014802  ECE3  F0C6         	call	i2___flge	;wreg free
 48539  014806  A0D8               	btfss	status,0,c
 48540  014808  D005               	goto	i2u2258_40
 48541  01480A  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48542  01480E  0900               	iorlw	0
 48543  014810  B4D8               	btfsc	status,2,c
 48544  014812  D004               	goto	i2l1210
 48545  014814                     i2u2258_40:
 48546                           
 48547                           ;main.c: 351: error_handler.ISNS_ADC_error_flag = 1;
 48548  014814  0E01               	movlw	1
 48549  014816  0102               	movlb	2	; () banked
 48550  014818  6F00               	movwf	_error_handler& (0+255),b
 48551                           
 48552                           ; BSR set to: 2
 48553                           ;main.c: 352: return;
 48554  01481A  0012               	return	
 48555  01481C                     i2l1210:
 48556                           
 48557                           ;main.c: 354: }
 48558                           ;main.c: 356: next_channel = POS12_ADC;
 48559                           
 48560                           ; BSR set to: 2
 48561  01481C  0E04               	movlw	4
 48562  01481E  D15D               	goto	L26
 48563  014820                     
 48564                           ;main.c: 363: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48565                           
 48566                           ; BSR set to: 2
 48567  014820  0E00               	movlw	0
 48568  014822  6E17               	movwf	i2___fldiv@a,c
 48569  014824  0EC0               	movlw	192
 48570  014826  6E18               	movwf	i2___fldiv@a+1,c
 48571  014828  0E7F               	movlw	127
 48572  01482A  6E19               	movwf	i2___fldiv@a+2,c
 48573  01482C  0E44               	movlw	68
 48574  01482E  6E1A               	movwf	i2___fldiv@a+3,c
 48575  014830  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48576  014834  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48577  014838  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48578  01483C  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48579  014840  EC94  F0B9         	call	i2___fldiv	;wreg free
 48580  014844  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48581  014848  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48582  01484C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48583  014850  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48584  014854  EC83  F0D8         	call	_ADCC_GetFilterValue	;wreg free
 48585  014858  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 48586  01485C  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 48587  014860  6A07               	clrf	i2___xxtofl@val+2,c
 48588  014862  6A08               	clrf	i2___xxtofl@val+3,c
 48589  014864  0E00               	movlw	0
 48590  014866  EC8E  F0C1         	call	i2___xxtofl
 48591  01486A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 48592  01486E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 48593  014872  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 48594  014876  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 48595  01487A  EC8D  F0AD         	call	i2___flmul	;wreg free
 48596  01487E  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$5421
 48597  014882  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5421+1
 48598  014886  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5421+2
 48599  01488A  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5421+3
 48600                           
 48601                           ;main.c: 363: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 48602  01488E  C0D6  F030         	movff	_ADCPostProcessingCallback$5421,i2___flmul@b
 48603  014892  C0D7  F031         	movff	_ADCPostProcessingCallback$5421+1,i2___flmul@b+1
 48604  014896  C0D8  F032         	movff	_ADCPostProcessingCallback$5421+2,i2___flmul@b+2
 48605  01489A  C0D9  F033         	movff	_ADCPostProcessingCallback$5421+3,i2___flmul@b+3
 48606  01489E  0E3E               	movlw	62
 48607  0148A0  6E34               	movwf	i2___flmul@a,c
 48608  0148A2  0EF8               	movlw	248
 48609  0148A4  6E35               	movwf	i2___flmul@a+1,c
 48610  0148A6  0E80               	movlw	128
 48611  0148A8  6E36               	movwf	i2___flmul@a+2,c
 48612  0148AA  0E40               	movlw	64
 48613  0148AC  6E37               	movwf	i2___flmul@a+3,c
 48614  0148AE  EC8D  F0AD         	call	i2___flmul	;wreg free
 48615  0148B2  C030  F1D6         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 48616  0148B6  C031  F1D7         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 48617  0148BA  C032  F1D8         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 48618  0148BE  C033  F1D9         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 48619                           
 48620                           ;main.c: 365: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 48621  0148C2  0E9A               	movlw	154
 48622  0148C4  6E34               	movwf	i2___flge@ff1,c
 48623  0148C6  0E99               	movlw	153
 48624  0148C8  6E35               	movwf	i2___flge@ff1+1,c
 48625  0148CA  0E59               	movlw	89
 48626  0148CC  6E36               	movwf	i2___flge@ff1+2,c
 48627  0148CE  0E41               	movlw	65
 48628  0148D0  6E37               	movwf	i2___flge@ff1+3,c
 48629  0148D2  C1D6  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 48630  0148D6  C1D7  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 48631  0148DA  C1D8  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 48632  0148DE  C1D9  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 48633  0148E2  ECE3  F0C6         	call	i2___flge	;wreg free
 48634  0148E6  A0D8               	btfss	status,0,c
 48635  0148E8  D005               	goto	i2u2260_40
 48636  0148EA  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48637  0148EE  0900               	iorlw	0
 48638  0148F0  B4D8               	btfsc	status,2,c
 48639  0148F2  D004               	goto	i2l1214
 48640  0148F4                     i2u2260_40:
 48641                           
 48642                           ;main.c: 367: error_handler.POS12_ADC_error_flag = 1;
 48643  0148F4  0E01               	movlw	1
 48644  0148F6  0102               	movlb	2	; () banked
 48645  0148F8  6F01               	movwf	(_error_handler+1)& (0+255),b
 48646                           
 48647                           ; BSR set to: 2
 48648                           ;main.c: 368: return;
 48649  0148FA  0012               	return	
 48650  0148FC                     i2l1214:
 48651                           
 48652                           ;main.c: 370: }
 48653                           ;main.c: 372: next_channel = channel_Temp;
 48654                           
 48655                           ; BSR set to: 2
 48656  0148FC  0E3D               	movlw	61
 48657  0148FE  D0ED               	goto	L26
 48658  014900                     
 48659                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48660                           
 48661                           ; BSR set to: 2
 48662  014900  0E00               	movlw	0
 48663  014902  6E17               	movwf	i2___fldiv@a,c
 48664  014904  0E00               	movlw	0
 48665  014906  6E18               	movwf	i2___fldiv@a+1,c
 48666  014908  0E00               	movlw	0
 48667  01490A  6E19               	movwf	i2___fldiv@a+2,c
 48668  01490C  0E40               	movlw	64
 48669  01490E  6E1A               	movwf	i2___fldiv@a+3,c
 48670  014910  C1DA  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 48671  014914  C1DB  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 48672  014918  C1DC  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 48673  01491C  C1DD  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 48674  014920  EC94  F0B9         	call	i2___fldiv	;wreg free
 48675  014924  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 48676  014928  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 48677  01492C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 48678  014930  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 48679  014934  0E00               	movlw	0
 48680  014936  6E5A               	movwf	i2___fladd@a,c
 48681  014938  0E00               	movlw	0
 48682  01493A  6E5B               	movwf	i2___fladd@a+1,c
 48683  01493C  0E80               	movlw	128
 48684  01493E  6E5C               	movwf	i2___fladd@a+2,c
 48685  014940  0E3F               	movlw	63
 48686  014942  6E5D               	movwf	i2___fladd@a+3,c
 48687  014944  0E00               	movlw	0
 48688  014946  6E17               	movwf	i2___fldiv@a,c
 48689  014948  0EC0               	movlw	192
 48690  01494A  6E18               	movwf	i2___fldiv@a+1,c
 48691  01494C  0E7F               	movlw	127
 48692  01494E  6E19               	movwf	i2___fldiv@a+2,c
 48693  014950  0E44               	movlw	68
 48694  014952  6E1A               	movwf	i2___fldiv@a+3,c
 48695  014954  EC8D  F0D8         	call	_ADCC_GetConversionResult	;wreg free
 48696  014958  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 48697  01495C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 48698  014960  6A07               	clrf	i2___xxtofl@val+2,c
 48699  014962  6A08               	clrf	i2___xxtofl@val+3,c
 48700  014964  0E00               	movlw	0
 48701  014966  EC8E  F0C1         	call	i2___xxtofl
 48702  01496A  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 48703  01496E  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 48704  014972  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 48705  014976  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 48706  01497A  EC94  F0B9         	call	i2___fldiv	;wreg free
 48707  01497E  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 48708  014982  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 48709  014986  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 48710  01498A  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 48711  01498E  ECB0  F0D6         	call	i2___flneg	;wreg free
 48712  014992  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48713  014996  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48714  01499A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48715  01499E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48716  0149A2  ECD4  F0B0         	call	i2___fladd	;wreg free
 48717  0149A6  C056  F030         	movff	?i2___fladd,i2___flmul@b
 48718  0149AA  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 48719  0149AE  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 48720  0149B2  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 48721  0149B6  EC8D  F0AD         	call	i2___flmul	;wreg free
 48722  0149BA  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$5423
 48723  0149BE  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$5423+1
 48724  0149C2  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$5423+2
 48725  0149C6  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$5423+3
 48726                           
 48727                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48728  0149CA  0EDA               	movlw	218
 48729  0149CC  6E17               	movwf	i2___fldiv@a,c
 48730  0149CE  0E03               	movlw	3
 48731  0149D0  6E18               	movwf	i2___fldiv@a+1,c
 48732  0149D2  0EAD               	movlw	173
 48733  0149D4  6E19               	movwf	i2___fldiv@a+2,c
 48734  0149D6  0E3A               	movlw	58
 48735  0149D8  6E1A               	movwf	i2___fldiv@a+3,c
 48736  0149DA  0E39               	movlw	57
 48737  0149DC  6E5A               	movwf	i2___fladd@a,c
 48738  0149DE  0EB4               	movlw	180
 48739  0149E0  6E5B               	movwf	i2___fladd@a+1,c
 48740  0149E2  0E28               	movlw	40
 48741  0149E4  6E5C               	movwf	i2___fladd@a+2,c
 48742  0149E6  0E3F               	movlw	63
 48743  0149E8  6E5D               	movwf	i2___fladd@a+3,c
 48744  0149EA  C0C9  F02C         	movff	_ADCPostProcessingCallback$5423,i2___flneg@f1
 48745  0149EE  C0CA  F02D         	movff	_ADCPostProcessingCallback$5423+1,i2___flneg@f1+1
 48746  0149F2  C0CB  F02E         	movff	_ADCPostProcessingCallback$5423+2,i2___flneg@f1+2
 48747  0149F6  C0CC  F02F         	movff	_ADCPostProcessingCallback$5423+3,i2___flneg@f1+3
 48748  0149FA  ECB0  F0D6         	call	i2___flneg	;wreg free
 48749  0149FE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 48750  014A02  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 48751  014A06  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 48752  014A0A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 48753  014A0E  ECD4  F0B0         	call	i2___fladd	;wreg free
 48754  014A12  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 48755  014A16  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 48756  014A1A  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 48757  014A1E  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 48758  014A22  EC94  F0B9         	call	i2___fldiv	;wreg free
 48759  014A26  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$5424
 48760  014A2A  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$5424+1
 48761  014A2E  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$5424+2
 48762  014A32  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$5424+3
 48763                           
 48764                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48765  014A36  C2F0  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 48766  014A3A  C2F1  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 48767  014A3E  C2F2  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 48768  014A42  C2F3  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 48769  014A46  C0CD  F056         	movff	_ADCPostProcessingCallback$5424,i2___fladd@b
 48770  014A4A  C0CE  F057         	movff	_ADCPostProcessingCallback$5424+1,i2___fladd@b+1
 48771  014A4E  C0CF  F058         	movff	_ADCPostProcessingCallback$5424+2,i2___fladd@b+2
 48772  014A52  C0D0  F059         	movff	_ADCPostProcessingCallback$5424+3,i2___fladd@b+3
 48773  014A56  ECD4  F0B0         	call	i2___fladd	;wreg free
 48774  014A5A  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$5425
 48775  014A5E  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$5425+1
 48776  014A62  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$5425+2
 48777  014A66  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$5425+3
 48778                           
 48779                           ;main.c: 379: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 48780  014A6A  C0D1  F056         	movff	_ADCPostProcessingCallback$5425,i2___fladd@b
 48781  014A6E  C0D2  F057         	movff	_ADCPostProcessingCallback$5425+1,i2___fladd@b+1
 48782  014A72  C0D3  F058         	movff	_ADCPostProcessingCallback$5425+2,i2___fladd@b+2
 48783  014A76  C0D4  F059         	movff	_ADCPostProcessingCallback$5425+3,i2___fladd@b+3
 48784  014A7A  0E00               	movlw	0
 48785  014A7C  6E5A               	movwf	i2___fladd@a,c
 48786  014A7E  0E00               	movlw	0
 48787  014A80  6E5B               	movwf	i2___fladd@a+1,c
 48788  014A82  0E20               	movlw	32
 48789  014A84  6E5C               	movwf	i2___fladd@a+2,c
 48790  014A86  0EC2               	movlw	194
 48791  014A88  6E5D               	movwf	i2___fladd@a+3,c
 48792  014A8A  ECD4  F0B0         	call	i2___fladd	;wreg free
 48793  014A8E  C056  F1D2         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 48794  014A92  C057  F1D3         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 48795  014A96  C058  F1D4         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 48796  014A9A  C059  F1D5         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 48797                           
 48798                           ;main.c: 381: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 48799  014A9E  0E00               	movlw	0
 48800  014AA0  6E34               	movwf	i2___flge@ff1,c
 48801  014AA2  0E00               	movlw	0
 48802  014AA4  6E35               	movwf	i2___flge@ff1+1,c
 48803  014AA6  0E20               	movlw	32
 48804  014AA8  6E36               	movwf	i2___flge@ff1+2,c
 48805  014AAA  0E42               	movlw	66
 48806  014AAC  6E37               	movwf	i2___flge@ff1+3,c
 48807  014AAE  C1D2  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 48808  014AB2  C1D3  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 48809  014AB6  C1D4  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 48810  014ABA  C1D5  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 48811  014ABE  ECE3  F0C6         	call	i2___flge	;wreg free
 48812  014AC2  A0D8               	btfss	status,0,c
 48813  014AC4  D005               	goto	i2u2262_40
 48814  014AC6  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48815  014ACA  0900               	iorlw	0
 48816  014ACC  B4D8               	btfsc	status,2,c
 48817  014ACE  D004               	goto	i2l1218
 48818  014AD0                     i2u2262_40:
 48819                           
 48820                           ;main.c: 383: error_handler.Temp_ADC_error_flag = 1;
 48821  014AD0  0E01               	movlw	1
 48822  014AD2  0102               	movlb	2	; () banked
 48823  014AD4  6F04               	movwf	(_error_handler+4)& (0+255),b
 48824                           
 48825                           ; BSR set to: 2
 48826                           ;main.c: 384: return;
 48827  014AD6  0012               	return	
 48828  014AD8                     i2l1218:
 48829                           
 48830                           ;main.c: 386: }
 48831                           ;main.c: 388: next_channel = channel_VSS;
 48832                           
 48833                           ; BSR set to: 2
 48834  014AD8  0E3C               	movlw	60
 48835  014ADA                     L26:
 48836  014ADA  0102               	movlb	2	; () banked
 48837  014ADC  6FF4               	movwf	_next_channel& (0+255),b
 48838                           
 48839                           ;main.c: 390: break;
 48840  014ADE  D01D               	goto	i2l1194
 48841  014AE0                     
 48842                           ;main.c: 395: error_handler.ADC_general_error_flag = 1;
 48843                           
 48844                           ; BSR set to: 2
 48845  014AE0  0E01               	movlw	1
 48846  014AE2  0102               	movlb	2	; () banked
 48847  014AE4  6F06               	movwf	(_error_handler+6)& (0+255),b
 48848                           
 48849                           ; BSR set to: 2
 48850                           ;main.c: 398: }
 48851                           
 48852                           ;main.c: 396: break;
 48853  014AE6  D019               	goto	i2l1194
 48854  014AE8                     i2l1188:
 48855                           
 48856                           ; BSR set to: 2
 48857  014AE8  0100               	movlb	0	; () banked
 48858  014AEA  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 48859                           
 48860                           ; Switch size 1, requested type "space"
 48861                           ; Number of cases is 6, Range of values is 0 to 63
 48862                           ; switch strategies available:
 48863                           ; Name         Instructions Cycles
 48864                           ; simple_byte           19    10 (average)
 48865                           ;	Chosen strategy is simple_byte
 48866  014AEC  0A00               	xorlw	0	; case 0
 48867  014AEE  B4D8               	btfsc	status,2,c
 48868  014AF0  EF6B  F0A1         	goto	i2l1203
 48869  014AF4  0A04               	xorlw	4	; case 4
 48870  014AF6  B4D8               	btfsc	status,2,c
 48871  014AF8  D693               	goto	i2l1213
 48872  014AFA  0A26               	xorlw	38	; case 34
 48873  014AFC  B4D8               	btfsc	status,2,c
 48874  014AFE  EF0C  F0A1         	goto	i2l1199
 48875  014B02  0A1E               	xorlw	30	; case 60
 48876  014B04  B4D8               	btfsc	status,2,c
 48877  014B06  EF42  F0A0         	goto	i2l1189
 48878  014B0A  0A01               	xorlw	1	; case 61
 48879  014B0C  B4D8               	btfsc	status,2,c
 48880  014B0E  D6F8               	goto	i2l1217
 48881  014B10  0A02               	xorlw	2	; case 63
 48882  014B12  B4D8               	btfsc	status,2,c
 48883  014B14  EF87  F0A0         	goto	i2l1195
 48884  014B18  D7E3               	goto	i2l1221
 48885  014B1A                     i2l1194:
 48886                           
 48887                           ;main.c: 400: if (ADCC_GetCurrentCountofConversions() != 255) {
 48888                           
 48889                           ; BSR set to: 0
 48890  014B1A  EC43  F0D9         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 48891  014B1E  0AFF               	xorlw	255
 48892  014B20  B4D8               	btfsc	status,2,c
 48893  014B22  D003               	goto	i2l1222
 48894                           
 48895                           ;main.c: 401: error_handler.ADC_general_error_flag = 1;
 48896  014B24  0E01               	movlw	1
 48897  014B26  0102               	movlb	2	; () banked
 48898  014B28  6F06               	movwf	(_error_handler+6)& (0+255),b
 48899  014B2A                     i2l1222:
 48900                           
 48901                           ;main.c: 402: }
 48902                           ;main.c: 404: if (ADCC_HasAccumulatorOverflowed()) {
 48903                           
 48904                           ; BSR set to: 2
 48905  014B2A  EC15  F0D9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 48906  014B2E  0900               	iorlw	0
 48907  014B30  B4D8               	btfsc	status,2,c
 48908  014B32  0012               	return	
 48909                           
 48910                           ;main.c: 405: error_handler.ADC_general_error_flag = 1;
 48911  014B34  0E01               	movlw	1
 48912  014B36  0102               	movlb	2	; () banked
 48913  014B38  6F06               	movwf	(_error_handler+6)& (0+255),b
 48914  014B3A  0012               	return	
 48915  014B3C                     __end_of_ADCPostProcessingCallback:
 48916                           	opt stack 0
 48917                           tosu	equ	0xFFF
 48918                           tosh	equ	0xFFE
 48919                           tosl	equ	0xFFD
 48920                           pclatu	equ	0xFFB
 48921                           pclath	equ	0xFFA
 48922                           tblptru	equ	0xFF8
 48923                           tblptrh	equ	0xFF7
 48924                           tblptrl	equ	0xFF6
 48925                           tablat	equ	0xFF5
 48926                           prodh	equ	0xFF4
 48927                           prodl	equ	0xFF3
 48928                           intcon	equ	0xFF2
 48929                           indf0	equ	0xFEF
 48930                           postinc0	equ	0xFEE
 48931                           fsr0h	equ	0xFEA
 48932                           fsr0l	equ	0xFE9
 48933                           wreg	equ	0xFE8
 48934                           indf1	equ	0xFE7
 48935                           postdec1	equ	0xFE5
 48936                           plusw1	equ	0xFE3
 48937                           fsr1h	equ	0xFE2
 48938                           fsr1l	equ	0xFE1
 48939                           bsr	equ	0xFE0
 48940                           indf2	equ	0xFDF
 48941                           postinc2	equ	0xFDE
 48942                           postdec2	equ	0xFDD
 48943                           plusw2	equ	0xFDB
 48944                           fsr2h	equ	0xFDA
 48945                           fsr2l	equ	0xFD9
 48946                           status	equ	0xFD8
 48947                           
 48948 ;; *************** function _peakToRMS *****************
 48949 ;; Defined at:
 48950 ;;		line 125 in file "main.c"
 48951 ;; Parameters:    Size  Location     Type
 48952 ;;  Peak            4   81[BANK0 ] void 
 48953 ;;  Angle           4   85[BANK0 ] void 
 48954 ;; Auto vars:     Size  Location     Type
 48955 ;;  RMS             4  101[BANK0 ] void 
 48956 ;; Return value:  Size  Location     Type
 48957 ;;                  4   81[BANK0 ] void 
 48958 ;; Registers used:
 48959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48960 ;; Tracked objects:
 48961 ;;		On entry : 0/0
 48962 ;;		On exit  : 0/0
 48963 ;;		Unchanged: 0/0
 48964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 48965 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48966 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48968 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48969 ;;Total ram usage:       24 bytes
 48970 ;; Hardware stack levels used:    1
 48971 ;; Hardware stack levels required when called:    5
 48972 ;; This function calls:
 48973 ;;		_acos
 48974 ;;		_sin
 48975 ;;		_sqrt
 48976 ;;		i2___fladd
 48977 ;;		i2___fldiv
 48978 ;;		i2___flmul
 48979 ;;		i2___flneg
 48980 ;; This function is called by:
 48981 ;;		_ADCPostProcessingCallback
 48982 ;; This function uses a non-reentrant model
 48983 ;;
 48984                           
 48985                           	psect	text150
 48986  017D48                     __ptext150:
 48987                           	opt stack 0
 48988  017D48                     _peakToRMS:
 48989                           	opt stack 10
 48990                           
 48991                           ;main.c: 128: double RMS = 0.0;
 48992                           
 48993                           ;incstack = 0
 48994  017D48  0E00               	movlw	0
 48995  017D4A  0100               	movlb	0	; () banked
 48996  017D4C  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 48997  017D4E  0E00               	movlw	0
 48998  017D50  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 48999  017D52  0E00               	movlw	0
 49000  017D54  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 49001  017D56  0E00               	movlw	0
 49002  017D58  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 49003                           
 49004                           ; BSR set to: 0
 49005                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 49006  017D5A  0E00               	movlw	0
 49007  017D5C  6FA9               	movwf	acos@x& (0+255),b
 49008  017D5E  0E00               	movlw	0
 49009  017D60  6FAA               	movwf	(acos@x+1)& (0+255),b
 49010  017D62  0E80               	movlw	128
 49011  017D64  6FAB               	movwf	(acos@x+2)& (0+255),b
 49012  017D66  0EBF               	movlw	191
 49013  017D68  6FAC               	movwf	(acos@x+3)& (0+255),b
 49014  017D6A  EC91  F0CF         	call	_acos	;wreg free
 49015  017D6E  C0A9  F0C1         	movff	?_acos,_peakToRMS$5418
 49016  017D72  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5418+1
 49017  017D76  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5418+2
 49018  017D7A  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5418+3
 49019                           
 49020                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 49021  017D7E  C0C1  F030         	movff	_peakToRMS$5418,i2___flmul@b
 49022  017D82  C0C2  F031         	movff	_peakToRMS$5418+1,i2___flmul@b+1
 49023  017D86  C0C3  F032         	movff	_peakToRMS$5418+2,i2___flmul@b+2
 49024  017D8A  C0C4  F033         	movff	_peakToRMS$5418+3,i2___flmul@b+3
 49025  017D8E  0E00               	movlw	0
 49026  017D90  6E34               	movwf	i2___flmul@a,c
 49027  017D92  0E00               	movlw	0
 49028  017D94  6E35               	movwf	i2___flmul@a+1,c
 49029  017D96  0E00               	movlw	0
 49030  017D98  6E36               	movwf	i2___flmul@a+2,c
 49031  017D9A  0E40               	movlw	64
 49032  017D9C  6E37               	movwf	i2___flmul@a+3,c
 49033  017D9E  EC8D  F0AD         	call	i2___flmul	;wreg free
 49034  017DA2  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 49035  017DA6  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 49036  017DAA  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 49037  017DAE  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 49038                           
 49039                           ;main.c: 132: RMS = RMS - (2.0 * Angle);
 49040  017DB2  0E00               	movlw	0
 49041  017DB4  6E34               	movwf	i2___flmul@a,c
 49042  017DB6  0E00               	movlw	0
 49043  017DB8  6E35               	movwf	i2___flmul@a+1,c
 49044  017DBA  0E00               	movlw	0
 49045  017DBC  6E36               	movwf	i2___flmul@a+2,c
 49046  017DBE  0E40               	movlw	64
 49047  017DC0  6E37               	movwf	i2___flmul@a+3,c
 49048  017DC2  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 49049  017DC6  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 49050  017DCA  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 49051  017DCE  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 49052  017DD2  EC8D  F0AD         	call	i2___flmul	;wreg free
 49053  017DD6  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 49054  017DDA  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 49055  017DDE  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 49056  017DE2  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 49057  017DE6  ECB0  F0D6         	call	i2___flneg	;wreg free
 49058  017DEA  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49059  017DEE  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49060  017DF2  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49061  017DF6  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49062  017DFA  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 49063  017DFE  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 49064  017E02  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 49065  017E06  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 49066  017E0A  ECD4  F0B0         	call	i2___fladd	;wreg free
 49067  017E0E  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 49068  017E12  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 49069  017E16  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 49070  017E1A  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 49071                           
 49072                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 49073  017E1E  0E00               	movlw	0
 49074  017E20  6E34               	movwf	i2___flmul@a,c
 49075  017E22  0E00               	movlw	0
 49076  017E24  6E35               	movwf	i2___flmul@a+1,c
 49077  017E26  0E00               	movlw	0
 49078  017E28  6E36               	movwf	i2___flmul@a+2,c
 49079  017E2A  0E40               	movlw	64
 49080  017E2C  6E37               	movwf	i2___flmul@a+3,c
 49081  017E2E  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 49082  017E32  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 49083  017E36  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 49084  017E3A  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 49085  017E3E  EC8D  F0AD         	call	i2___flmul	;wreg free
 49086  017E42  C030  F0B9         	movff	?i2___flmul,_peakToRMS$5419
 49087  017E46  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$5419+1
 49088  017E4A  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$5419+2
 49089  017E4E  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$5419+3
 49090                           
 49091                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 49092  017E52  C0B9  F088         	movff	_peakToRMS$5419,sin@f
 49093  017E56  C0BA  F089         	movff	_peakToRMS$5419+1,sin@f+1
 49094  017E5A  C0BB  F08A         	movff	_peakToRMS$5419+2,sin@f+2
 49095  017E5E  C0BC  F08B         	movff	_peakToRMS$5419+3,sin@f+3
 49096  017E62  ECF5  F0B3         	call	_sin	;wreg free
 49097  017E66  C088  F0BD         	movff	?_sin,_peakToRMS$5420
 49098  017E6A  C089  F0BE         	movff	?_sin+1,_peakToRMS$5420+1
 49099  017E6E  C08A  F0BF         	movff	?_sin+2,_peakToRMS$5420+2
 49100  017E72  C08B  F0C0         	movff	?_sin+3,_peakToRMS$5420+3
 49101                           
 49102                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 49103  017E76  C0BD  F056         	movff	_peakToRMS$5420,i2___fladd@b
 49104  017E7A  C0BE  F057         	movff	_peakToRMS$5420+1,i2___fladd@b+1
 49105  017E7E  C0BF  F058         	movff	_peakToRMS$5420+2,i2___fladd@b+2
 49106  017E82  C0C0  F059         	movff	_peakToRMS$5420+3,i2___fladd@b+3
 49107  017E86  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 49108  017E8A  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 49109  017E8E  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 49110  017E92  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 49111  017E96  ECD4  F0B0         	call	i2___fladd	;wreg free
 49112  017E9A  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 49113  017E9E  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 49114  017EA2  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 49115  017EA6  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 49116                           
 49117                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 49118  017EAA  0E00               	movlw	0
 49119  017EAC  0100               	movlb	0	; () banked
 49120  017EAE  6FA9               	movwf	acos@x& (0+255),b
 49121  017EB0  0E00               	movlw	0
 49122  017EB2  6FAA               	movwf	(acos@x+1)& (0+255),b
 49123  017EB4  0E80               	movlw	128
 49124  017EB6  6FAB               	movwf	(acos@x+2)& (0+255),b
 49125  017EB8  0EBF               	movlw	191
 49126  017EBA  6FAC               	movwf	(acos@x+3)& (0+255),b
 49127  017EBC  EC91  F0CF         	call	_acos	;wreg free
 49128  017EC0  C0A9  F0C1         	movff	?_acos,_peakToRMS$5418
 49129  017EC4  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5418+1
 49130  017EC8  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5418+2
 49131  017ECC  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5418+3
 49132                           
 49133                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 49134  017ED0  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 49135  017ED4  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 49136  017ED8  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 49137  017EDC  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 49138  017EE0  0E00               	movlw	0
 49139  017EE2  6E34               	movwf	i2___flmul@a,c
 49140  017EE4  0E00               	movlw	0
 49141  017EE6  6E35               	movwf	i2___flmul@a+1,c
 49142  017EE8  0E80               	movlw	128
 49143  017EEA  6E36               	movwf	i2___flmul@a+2,c
 49144  017EEC  0E40               	movlw	64
 49145  017EEE  6E37               	movwf	i2___flmul@a+3,c
 49146  017EF0  C0C1  F030         	movff	_peakToRMS$5418,i2___flmul@b
 49147  017EF4  C0C2  F031         	movff	_peakToRMS$5418+1,i2___flmul@b+1
 49148  017EF8  C0C3  F032         	movff	_peakToRMS$5418+2,i2___flmul@b+2
 49149  017EFC  C0C4  F033         	movff	_peakToRMS$5418+3,i2___flmul@b+3
 49150  017F00  EC8D  F0AD         	call	i2___flmul	;wreg free
 49151  017F04  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 49152  017F08  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 49153  017F0C  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 49154  017F10  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 49155  017F14  EC94  F0B9         	call	i2___fldiv	;wreg free
 49156  017F18  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 49157  017F1C  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 49158  017F20  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 49159  017F24  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 49160                           
 49161                           ;main.c: 135: RMS = sqrt(RMS);
 49162  017F28  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 49163  017F2C  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 49164  017F30  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 49165  017F34  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 49166  017F38  EC72  F0B5         	call	_sqrt	;wreg free
 49167  017F3C  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 49168  017F40  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 49169  017F44  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 49170  017F48  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 49171                           
 49172                           ;main.c: 136: RMS = Peak * RMS;
 49173  017F4C  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 49174  017F50  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 49175  017F54  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 49176  017F58  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 49177  017F5C  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 49178  017F60  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 49179  017F64  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 49180  017F68  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 49181  017F6C  EC8D  F0AD         	call	i2___flmul	;wreg free
 49182  017F70  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 49183  017F74  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 49184  017F78  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 49185  017F7C  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 49186                           
 49187                           ;main.c: 137: return RMS;
 49188  017F80  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 49189  017F84  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 49190  017F88  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 49191  017F8C  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 49192  017F90  0012               	return	
 49193  017F92                     __end_of_peakToRMS:
 49194                           	opt stack 0
 49195                           tosu	equ	0xFFF
 49196                           tosh	equ	0xFFE
 49197                           tosl	equ	0xFFD
 49198                           pclatu	equ	0xFFB
 49199                           pclath	equ	0xFFA
 49200                           tblptru	equ	0xFF8
 49201                           tblptrh	equ	0xFF7
 49202                           tblptrl	equ	0xFF6
 49203                           tablat	equ	0xFF5
 49204                           prodh	equ	0xFF4
 49205                           prodl	equ	0xFF3
 49206                           intcon	equ	0xFF2
 49207                           indf0	equ	0xFEF
 49208                           postinc0	equ	0xFEE
 49209                           fsr0h	equ	0xFEA
 49210                           fsr0l	equ	0xFE9
 49211                           wreg	equ	0xFE8
 49212                           indf1	equ	0xFE7
 49213                           postdec1	equ	0xFE5
 49214                           plusw1	equ	0xFE3
 49215                           fsr1h	equ	0xFE2
 49216                           fsr1l	equ	0xFE1
 49217                           bsr	equ	0xFE0
 49218                           indf2	equ	0xFDF
 49219                           postinc2	equ	0xFDE
 49220                           postdec2	equ	0xFDD
 49221                           plusw2	equ	0xFDB
 49222                           fsr2h	equ	0xFDA
 49223                           fsr2l	equ	0xFD9
 49224                           status	equ	0xFD8
 49225                           
 49226 ;; *************** function _acos *****************
 49227 ;; Defined at:
 49228 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 49229 ;; Parameters:    Size  Location     Type
 49230 ;;  x               4   73[BANK0 ] void 
 49231 ;; Auto vars:     Size  Location     Type
 49232 ;;		None
 49233 ;; Return value:  Size  Location     Type
 49234 ;;                  4   73[BANK0 ] void 
 49235 ;; Registers used:
 49236 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49237 ;; Tracked objects:
 49238 ;;		On entry : 0/0
 49239 ;;		On exit  : 0/0
 49240 ;;		Unchanged: 0/0
 49241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49243 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49245 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49246 ;;Total ram usage:        8 bytes
 49247 ;; Hardware stack levels used:    1
 49248 ;; Hardware stack levels required when called:    4
 49249 ;; This function calls:
 49250 ;;		_asin
 49251 ;;		i2___fladd
 49252 ;;		i2___flneg
 49253 ;; This function is called by:
 49254 ;;		_peakToRMS
 49255 ;; This function uses a non-reentrant model
 49256 ;;
 49257                           
 49258                           	psect	text151
 49259  019F22                     __ptext151:
 49260                           	opt stack 0
 49261  019F22                     _acos:
 49262                           	opt stack 10
 49263                           
 49264                           ;incstack = 0
 49265  019F22  C0A9  F091         	movff	acos@x,asin@x
 49266  019F26  C0AA  F092         	movff	acos@x+1,asin@x+1
 49267  019F2A  C0AB  F093         	movff	acos@x+2,asin@x+2
 49268  019F2E  C0AC  F094         	movff	acos@x+3,asin@x+3
 49269  019F32  EC73  F0B2         	call	_asin	;wreg free
 49270  019F36  C091  F0AD         	movff	?_asin,_acos$5426
 49271  019F3A  C092  F0AE         	movff	?_asin+1,_acos$5426+1
 49272  019F3E  C093  F0AF         	movff	?_asin+2,_acos$5426+2
 49273  019F42  C094  F0B0         	movff	?_asin+3,_acos$5426+3
 49274  019F46  C0AD  F02C         	movff	_acos$5426,i2___flneg@f1
 49275  019F4A  C0AE  F02D         	movff	_acos$5426+1,i2___flneg@f1+1
 49276  019F4E  C0AF  F02E         	movff	_acos$5426+2,i2___flneg@f1+2
 49277  019F52  C0B0  F02F         	movff	_acos$5426+3,i2___flneg@f1+3
 49278  019F56  ECB0  F0D6         	call	i2___flneg	;wreg free
 49279  019F5A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49280  019F5E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49281  019F62  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49282  019F66  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49283  019F6A  0EDB               	movlw	219
 49284  019F6C  6E5A               	movwf	i2___fladd@a,c
 49285  019F6E  0E0F               	movlw	15
 49286  019F70  6E5B               	movwf	i2___fladd@a+1,c
 49287  019F72  0EC9               	movlw	201
 49288  019F74  6E5C               	movwf	i2___fladd@a+2,c
 49289  019F76  0E3F               	movlw	63
 49290  019F78  6E5D               	movwf	i2___fladd@a+3,c
 49291  019F7A  ECD4  F0B0         	call	i2___fladd	;wreg free
 49292  019F7E  C056  F0A9         	movff	?i2___fladd,?_acos
 49293  019F82  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 49294  019F86  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 49295  019F8A  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 49296  019F8E  0012               	return	
 49297  019F90                     __end_of_acos:
 49298                           	opt stack 0
 49299                           tosu	equ	0xFFF
 49300                           tosh	equ	0xFFE
 49301                           tosl	equ	0xFFD
 49302                           pclatu	equ	0xFFB
 49303                           pclath	equ	0xFFA
 49304                           tblptru	equ	0xFF8
 49305                           tblptrh	equ	0xFF7
 49306                           tblptrl	equ	0xFF6
 49307                           tablat	equ	0xFF5
 49308                           prodh	equ	0xFF4
 49309                           prodl	equ	0xFF3
 49310                           intcon	equ	0xFF2
 49311                           indf0	equ	0xFEF
 49312                           postinc0	equ	0xFEE
 49313                           fsr0h	equ	0xFEA
 49314                           fsr0l	equ	0xFE9
 49315                           wreg	equ	0xFE8
 49316                           indf1	equ	0xFE7
 49317                           postdec1	equ	0xFE5
 49318                           plusw1	equ	0xFE3
 49319                           fsr1h	equ	0xFE2
 49320                           fsr1l	equ	0xFE1
 49321                           bsr	equ	0xFE0
 49322                           indf2	equ	0xFDF
 49323                           postinc2	equ	0xFDE
 49324                           postdec2	equ	0xFDD
 49325                           plusw2	equ	0xFDB
 49326                           fsr2h	equ	0xFDA
 49327                           fsr2l	equ	0xFD9
 49328                           status	equ	0xFD8
 49329                           
 49330 ;; *************** function _asin *****************
 49331 ;; Defined at:
 49332 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 49333 ;; Parameters:    Size  Location     Type
 49334 ;;  x               4   49[BANK0 ] void 
 49335 ;; Auto vars:     Size  Location     Type
 49336 ;;  y               4   65[BANK0 ] void 
 49337 ;;  sgn             4   53[BANK0 ] void 
 49338 ;; Return value:  Size  Location     Type
 49339 ;;                  4   49[BANK0 ] void 
 49340 ;; Registers used:
 49341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49342 ;; Tracked objects:
 49343 ;;		On entry : 0/0
 49344 ;;		On exit  : 0/0
 49345 ;;		Unchanged: 0/0
 49346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49348 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49350 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49351 ;;Total ram usage:       24 bytes
 49352 ;; Hardware stack levels used:    1
 49353 ;; Hardware stack levels required when called:    3
 49354 ;; This function calls:
 49355 ;;		_atan
 49356 ;;		_fabs
 49357 ;;		_sqrt
 49358 ;;		i2___fladd
 49359 ;;		i2___fldiv
 49360 ;;		i2___flge
 49361 ;;		i2___flmul
 49362 ;;		i2___flneg
 49363 ;; This function is called by:
 49364 ;;		_acos
 49365 ;; This function uses a non-reentrant model
 49366 ;;
 49367                           
 49368                           	psect	text152
 49369  0164E6                     __ptext152:
 49370                           	opt stack 0
 49371  0164E6                     _asin:
 49372                           	opt stack 10
 49373                           
 49374                           ;incstack = 0
 49375  0164E6  0E00               	movlw	0
 49376  0164E8  6E34               	movwf	i2___flge@ff1,c
 49377  0164EA  0E00               	movlw	0
 49378  0164EC  6E35               	movwf	i2___flge@ff1+1,c
 49379  0164EE  0E80               	movlw	128
 49380  0164F0  6E36               	movwf	i2___flge@ff1+2,c
 49381  0164F2  0E3F               	movlw	63
 49382  0164F4  6E37               	movwf	i2___flge@ff1+3,c
 49383  0164F6  C091  F030         	movff	asin@x,fabs@d
 49384  0164FA  C092  F031         	movff	asin@x+1,fabs@d+1
 49385  0164FE  C093  F032         	movff	asin@x+2,fabs@d+2
 49386  016502  C094  F033         	movff	asin@x+3,fabs@d+3
 49387  016506  EC20  F0D5         	call	_fabs	;wreg free
 49388  01650A  C030  F038         	movff	?_fabs,i2___flge@ff2
 49389  01650E  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 49390  016512  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 49391  016516  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 49392  01651A  ECE3  F0C6         	call	i2___flge	;wreg free
 49393  01651E  B0D8               	btfsc	status,0,c
 49394  016520  D00F               	goto	i2l2263
 49395  016522  0E00               	movlw	0
 49396  016524  0102               	movlb	2	; () banked
 49397  016526  6F5D               	movwf	(_errno+1)& (0+255),b
 49398  016528  0E21               	movlw	33
 49399  01652A  6F5C               	movwf	_errno& (0+255),b
 49400  01652C  0E00               	movlw	0
 49401  01652E  0100               	movlb	0	; () banked
 49402  016530  6F91               	movwf	?_asin& (0+255),b
 49403  016532  0E00               	movlw	0
 49404  016534  6F92               	movwf	(?_asin+1)& (0+255),b
 49405  016536  0E00               	movlw	0
 49406  016538  6F93               	movwf	(?_asin+2)& (0+255),b
 49407  01653A  0E00               	movlw	0
 49408  01653C  6F94               	movwf	(?_asin+3)& (0+255),b
 49409                           
 49410                           ; BSR set to: 0
 49411  01653E  0012               	return	
 49412  016540                     i2l2263:
 49413                           
 49414                           ; BSR set to: 0
 49415  016540  0E00               	movlw	0
 49416  016542  0100               	movlb	0	; () banked
 49417  016544  6F95               	movwf	asin@sgn& (0+255),b
 49418  016546  0E00               	movlw	0
 49419  016548  6F96               	movwf	(asin@sgn+1)& (0+255),b
 49420  01654A  0E80               	movlw	128
 49421  01654C  6F97               	movwf	(asin@sgn+2)& (0+255),b
 49422  01654E  0E3F               	movlw	63
 49423  016550  6F98               	movwf	(asin@sgn+3)& (0+255),b
 49424                           
 49425                           ; BSR set to: 0
 49426  016552  C091  F034         	movff	asin@x,i2___flmul@a
 49427  016556  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 49428  01655A  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 49429  01655E  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 49430  016562  C091  F030         	movff	asin@x,i2___flmul@b
 49431  016566  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 49432  01656A  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 49433  01656E  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 49434  016572  EC8D  F0AD         	call	i2___flmul	;wreg free
 49435  016576  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 49436  01657A  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 49437  01657E  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 49438  016582  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 49439  016586  ECB0  F0D6         	call	i2___flneg	;wreg free
 49440  01658A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49441  01658E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49442  016592  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49443  016596  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49444  01659A  0E00               	movlw	0
 49445  01659C  6E5A               	movwf	i2___fladd@a,c
 49446  01659E  0E00               	movlw	0
 49447  0165A0  6E5B               	movwf	i2___fladd@a+1,c
 49448  0165A2  0E80               	movlw	128
 49449  0165A4  6E5C               	movwf	i2___fladd@a+2,c
 49450  0165A6  0E3F               	movlw	63
 49451  0165A8  6E5D               	movwf	i2___fladd@a+3,c
 49452  0165AA  ECD4  F0B0         	call	i2___fladd	;wreg free
 49453  0165AE  C056  F06C         	movff	?i2___fladd,sqrt@a
 49454  0165B2  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 49455  0165B6  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 49456  0165BA  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 49457  0165BE  EC72  F0B5         	call	_sqrt	;wreg free
 49458  0165C2  C06C  F0A1         	movff	?_sqrt,asin@y
 49459  0165C6  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 49460  0165CA  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 49461  0165CE  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 49462  0165D2  C091  F030         	movff	asin@x,fabs@d
 49463  0165D6  C092  F031         	movff	asin@x+1,fabs@d+1
 49464  0165DA  C093  F032         	movff	asin@x+2,fabs@d+2
 49465  0165DE  C094  F033         	movff	asin@x+3,fabs@d+3
 49466  0165E2  EC20  F0D5         	call	_fabs	;wreg free
 49467  0165E6  C030  F034         	movff	?_fabs,i2___flge@ff1
 49468  0165EA  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 49469  0165EE  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 49470  0165F2  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 49471  0165F6  0E8F               	movlw	143
 49472  0165F8  6E38               	movwf	i2___flge@ff2,c
 49473  0165FA  0EC2               	movlw	194
 49474  0165FC  6E39               	movwf	i2___flge@ff2+1,c
 49475  0165FE  0E35               	movlw	53
 49476  016600  6E3A               	movwf	i2___flge@ff2+2,c
 49477  016602  0E3F               	movlw	63
 49478  016604  6E3B               	movwf	i2___flge@ff2+3,c
 49479  016606  ECE3  F0C6         	call	i2___flge	;wreg free
 49480  01660A  B0D8               	btfsc	status,0,c
 49481  01660C  D02D               	goto	i2l2265
 49482  01660E  C091  F013         	movff	asin@x,i2___fldiv@b
 49483  016612  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 49484  016616  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 49485  01661A  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 49486  01661E  C0A1  F017         	movff	asin@y,i2___fldiv@a
 49487  016622  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 49488  016626  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 49489  01662A  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 49490  01662E  EC94  F0B9         	call	i2___fldiv	;wreg free
 49491  016632  C013  F0A5         	movff	?i2___fldiv,_asin$5427
 49492  016636  C014  F0A6         	movff	?i2___fldiv+1,_asin$5427+1
 49493  01663A  C015  F0A7         	movff	?i2___fldiv+2,_asin$5427+2
 49494  01663E  C016  F0A8         	movff	?i2___fldiv+3,_asin$5427+3
 49495  016642  C0A5  F07C         	movff	_asin$5427,atan@f
 49496  016646  C0A6  F07D         	movff	_asin$5427+1,atan@f+1
 49497  01664A  C0A7  F07E         	movff	_asin$5427+2,atan@f+2
 49498  01664E  C0A8  F07F         	movff	_asin$5427+3,atan@f+3
 49499  016652  ECC9  F0BF         	call	_atan	;wreg free
 49500  016656  C07C  F091         	movff	?_atan,?_asin
 49501  01665A  C07D  F092         	movff	?_atan+1,?_asin+1
 49502  01665E  C07E  F093         	movff	?_atan+2,?_asin+2
 49503  016662  C07F  F094         	movff	?_atan+3,?_asin+3
 49504  016666  0012               	return	
 49505  016668                     i2l2265:
 49506  016668  0100               	movlb	0	; () banked
 49507  01666A  AF94               	btfss	(asin@x+3)& (0+255),7,b
 49508  01666C  D06D               	goto	i2l2266
 49509                           
 49510                           ; BSR set to: 0
 49511  01666E  C091  F017         	movff	asin@x,i2___fldiv@a
 49512  016672  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49513  016676  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49514  01667A  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49515  01667E  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 49516  016682  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 49517  016686  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 49518  01668A  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 49519  01668E  ECB0  F0D6         	call	i2___flneg	;wreg free
 49520  016692  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 49521  016696  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 49522  01669A  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 49523  01669E  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 49524  0166A2  EC94  F0B9         	call	i2___fldiv	;wreg free
 49525  0166A6  C013  F0A5         	movff	?i2___fldiv,_asin$5427
 49526  0166AA  C014  F0A6         	movff	?i2___fldiv+1,_asin$5427+1
 49527  0166AE  C015  F0A7         	movff	?i2___fldiv+2,_asin$5427+2
 49528  0166B2  C016  F0A8         	movff	?i2___fldiv+3,_asin$5427+3
 49529  0166B6  C0A5  F07C         	movff	_asin$5427,atan@f
 49530  0166BA  C0A6  F07D         	movff	_asin$5427+1,atan@f+1
 49531  0166BE  C0A7  F07E         	movff	_asin$5427+2,atan@f+2
 49532  0166C2  C0A8  F07F         	movff	_asin$5427+3,atan@f+3
 49533  0166C6  ECC9  F0BF         	call	_atan	;wreg free
 49534  0166CA  C07C  F09D         	movff	?_atan,_asin$5428
 49535  0166CE  C07D  F09E         	movff	?_atan+1,_asin$5428+1
 49536  0166D2  C07E  F09F         	movff	?_atan+2,_asin$5428+2
 49537  0166D6  C07F  F0A0         	movff	?_atan+3,_asin$5428+3
 49538  0166DA  0EDB               	movlw	219
 49539  0166DC  6E5A               	movwf	i2___fladd@a,c
 49540  0166DE  0E0F               	movlw	15
 49541  0166E0  6E5B               	movwf	i2___fladd@a+1,c
 49542  0166E2  0EC9               	movlw	201
 49543  0166E4  6E5C               	movwf	i2___fladd@a+2,c
 49544  0166E6  0E3F               	movlw	63
 49545  0166E8  6E5D               	movwf	i2___fladd@a+3,c
 49546  0166EA  C09D  F02C         	movff	_asin$5428,i2___flneg@f1
 49547  0166EE  C09E  F02D         	movff	_asin$5428+1,i2___flneg@f1+1
 49548  0166F2  C09F  F02E         	movff	_asin$5428+2,i2___flneg@f1+2
 49549  0166F6  C0A0  F02F         	movff	_asin$5428+3,i2___flneg@f1+3
 49550  0166FA  ECB0  F0D6         	call	i2___flneg	;wreg free
 49551  0166FE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49552  016702  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49553  016706  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49554  01670A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49555  01670E  ECD4  F0B0         	call	i2___fladd	;wreg free
 49556  016712  C056  F099         	movff	?i2___fladd,_asin$5429
 49557  016716  C057  F09A         	movff	?i2___fladd+1,_asin$5429+1
 49558  01671A  C058  F09B         	movff	?i2___fladd+2,_asin$5429+2
 49559  01671E  C059  F09C         	movff	?i2___fladd+3,_asin$5429+3
 49560  016722  C099  F02C         	movff	_asin$5429,i2___flneg@f1
 49561  016726  C09A  F02D         	movff	_asin$5429+1,i2___flneg@f1+1
 49562  01672A  C09B  F02E         	movff	_asin$5429+2,i2___flneg@f1+2
 49563  01672E  C09C  F02F         	movff	_asin$5429+3,i2___flneg@f1+3
 49564  016732  ECB0  F0D6         	call	i2___flneg	;wreg free
 49565  016736  C02C  F091         	movff	?i2___flneg,?_asin
 49566  01673A  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 49567  01673E  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 49568  016742  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 49569  016746  0012               	return	
 49570  016748                     i2l2266:
 49571  016748  C091  F017         	movff	asin@x,i2___fldiv@a
 49572  01674C  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 49573  016750  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 49574  016754  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 49575  016758  C0A1  F013         	movff	asin@y,i2___fldiv@b
 49576  01675C  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 49577  016760  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 49578  016764  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 49579  016768  EC94  F0B9         	call	i2___fldiv	;wreg free
 49580  01676C  C013  F0A5         	movff	?i2___fldiv,_asin$5427
 49581  016770  C014  F0A6         	movff	?i2___fldiv+1,_asin$5427+1
 49582  016774  C015  F0A7         	movff	?i2___fldiv+2,_asin$5427+2
 49583  016778  C016  F0A8         	movff	?i2___fldiv+3,_asin$5427+3
 49584  01677C  C0A5  F07C         	movff	_asin$5427,atan@f
 49585  016780  C0A6  F07D         	movff	_asin$5427+1,atan@f+1
 49586  016784  C0A7  F07E         	movff	_asin$5427+2,atan@f+2
 49587  016788  C0A8  F07F         	movff	_asin$5427+3,atan@f+3
 49588  01678C  ECC9  F0BF         	call	_atan	;wreg free
 49589  016790  C07C  F09D         	movff	?_atan,_asin$5428
 49590  016794  C07D  F09E         	movff	?_atan+1,_asin$5428+1
 49591  016798  C07E  F09F         	movff	?_atan+2,_asin$5428+2
 49592  01679C  C07F  F0A0         	movff	?_atan+3,_asin$5428+3
 49593  0167A0  C09D  F02C         	movff	_asin$5428,i2___flneg@f1
 49594  0167A4  C09E  F02D         	movff	_asin$5428+1,i2___flneg@f1+1
 49595  0167A8  C09F  F02E         	movff	_asin$5428+2,i2___flneg@f1+2
 49596  0167AC  C0A0  F02F         	movff	_asin$5428+3,i2___flneg@f1+3
 49597  0167B0  ECB0  F0D6         	call	i2___flneg	;wreg free
 49598  0167B4  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 49599  0167B8  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 49600  0167BC  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 49601  0167C0  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 49602  0167C4  0EDB               	movlw	219
 49603  0167C6  6E5A               	movwf	i2___fladd@a,c
 49604  0167C8  0E0F               	movlw	15
 49605  0167CA  6E5B               	movwf	i2___fladd@a+1,c
 49606  0167CC  0EC9               	movlw	201
 49607  0167CE  6E5C               	movwf	i2___fladd@a+2,c
 49608  0167D0  0E3F               	movlw	63
 49609  0167D2  6E5D               	movwf	i2___fladd@a+3,c
 49610  0167D4  ECD4  F0B0         	call	i2___fladd	;wreg free
 49611  0167D8  C056  F091         	movff	?i2___fladd,?_asin
 49612  0167DC  C057  F092         	movff	?i2___fladd+1,?_asin+1
 49613  0167E0  C058  F093         	movff	?i2___fladd+2,?_asin+2
 49614  0167E4  C059  F094         	movff	?i2___fladd+3,?_asin+3
 49615  0167E8  0012               	return	
 49616  0167EA                     __end_of_asin:
 49617                           	opt stack 0
 49618                           tosu	equ	0xFFF
 49619                           tosh	equ	0xFFE
 49620                           tosl	equ	0xFFD
 49621                           pclatu	equ	0xFFB
 49622                           pclath	equ	0xFFA
 49623                           tblptru	equ	0xFF8
 49624                           tblptrh	equ	0xFF7
 49625                           tblptrl	equ	0xFF6
 49626                           tablat	equ	0xFF5
 49627                           prodh	equ	0xFF4
 49628                           prodl	equ	0xFF3
 49629                           intcon	equ	0xFF2
 49630                           indf0	equ	0xFEF
 49631                           postinc0	equ	0xFEE
 49632                           fsr0h	equ	0xFEA
 49633                           fsr0l	equ	0xFE9
 49634                           wreg	equ	0xFE8
 49635                           indf1	equ	0xFE7
 49636                           postdec1	equ	0xFE5
 49637                           plusw1	equ	0xFE3
 49638                           fsr1h	equ	0xFE2
 49639                           fsr1l	equ	0xFE1
 49640                           bsr	equ	0xFE0
 49641                           indf2	equ	0xFDF
 49642                           postinc2	equ	0xFDE
 49643                           postdec2	equ	0xFDD
 49644                           plusw2	equ	0xFDB
 49645                           fsr2h	equ	0xFDA
 49646                           fsr2l	equ	0xFD9
 49647                           status	equ	0xFD8
 49648                           
 49649 ;; *************** function _sqrt *****************
 49650 ;; Defined at:
 49651 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 49652 ;; Parameters:    Size  Location     Type
 49653 ;;  a               4   12[BANK0 ] void 
 49654 ;; Auto vars:     Size  Location     Type
 49655 ;;  frac            4   37[BANK0 ] unsigned long 
 49656 ;;  root            4   33[BANK0 ] struct .
 49657 ;;  grs             4   27[BANK0 ] unsigned long 
 49658 ;;  tfrac           4   22[BANK0 ] unsigned long 
 49659 ;;  exp             2   31[BANK0 ] int 
 49660 ;;  p               1   26[BANK0 ] unsigned char 
 49661 ;;  i               1   21[BANK0 ] unsigned char 
 49662 ;;  sign            1   20[BANK0 ] unsigned char 
 49663 ;; Return value:  Size  Location     Type
 49664 ;;                  4   12[BANK0 ] unsigned char 
 49665 ;; Registers used:
 49666 ;;		wreg, status,2, status,0
 49667 ;; Tracked objects:
 49668 ;;		On entry : 0/0
 49669 ;;		On exit  : 0/0
 49670 ;;		Unchanged: 0/0
 49671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 49672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49673 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49674 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49675 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49676 ;;Total ram usage:       29 bytes
 49677 ;; Hardware stack levels used:    1
 49678 ;; This function calls:
 49679 ;;		Nothing
 49680 ;; This function is called by:
 49681 ;;		_peakToRMS
 49682 ;;		_asin
 49683 ;; This function uses a non-reentrant model
 49684 ;;
 49685                           
 49686                           	psect	text153
 49687  016AE4                     __ptext153:
 49688                           	opt stack 0
 49689  016AE4                     _sqrt:
 49690                           	opt stack 14
 49691                           
 49692                           ;incstack = 0
 49693  016AE4  0100               	movlb	0	; () banked
 49694  016AE6  516F               	movf	(sqrt@a+3)& (0+255),w,b
 49695  016AE8  0B80               	andlw	128
 49696  016AEA  6F74               	movwf	sqrt@sign& (0+255),b
 49697  016AEC  516F               	movf	(sqrt@a+3)& (0+255),w,b
 49698  016AEE  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 49699  016AF0  6F7A               	movwf	sqrt@p& (0+255),b
 49700                           
 49701                           ; BSR set to: 0
 49702  016AF2  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 49703                           
 49704                           ; BSR set to: 0
 49705  016AF4  817A               	bsf	sqrt@p& (0+255),0,b
 49706                           
 49707                           ; BSR set to: 0
 49708                           
 49709                           ; BSR set to: 0
 49710  016AF6  C07A  F07F         	movff	sqrt@p,sqrt@exp
 49711  016AFA  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 49712                           
 49713                           ; BSR set to: 0
 49714  016AFC  0EFF               	movlw	255
 49715  016AFE  156C               	andwf	sqrt@a& (0+255),w,b
 49716  016B00  6F85               	movwf	sqrt@frac& (0+255),b
 49717  016B02  0EFF               	movlw	255
 49718  016B04  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 49719  016B06  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49720  016B08  0E7F               	movlw	127
 49721  016B0A  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 49722  016B0C  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49723  016B0E  0E00               	movlw	0
 49724  016B10  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 49725  016B12  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49726                           
 49727                           ; BSR set to: 0
 49728  016B14  517F               	movf	sqrt@exp& (0+255),w,b
 49729  016B16  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49730  016B18  B4D8               	btfsc	status,2,c
 49731  016B1A  D005               	goto	i2l2833
 49732                           
 49733                           ; BSR set to: 0
 49734  016B1C  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 49735                           
 49736                           ; BSR set to: 0
 49737  016B1E  297F               	incf	sqrt@exp& (0+255),w,b
 49738  016B20  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49739  016B22  A4D8               	btfss	status,2,c
 49740  016B24  D008               	goto	i2l2835
 49741  016B26                     i2l2833:
 49742                           
 49743                           ; BSR set to: 0
 49744                           
 49745                           ; BSR set to: 0
 49746  016B26  0E00               	movlw	0
 49747  016B28  6F85               	movwf	sqrt@frac& (0+255),b
 49748  016B2A  0E00               	movlw	0
 49749  016B2C  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49750  016B2E  0E00               	movlw	0
 49751  016B30  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49752  016B32  0E00               	movlw	0
 49753  016B34  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49754  016B36                     i2l2835:
 49755                           
 49756                           ; BSR set to: 0
 49757                           
 49758                           ; BSR set to: 0
 49759  016B36  517F               	movf	sqrt@exp& (0+255),w,b
 49760  016B38  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49761  016B3A  A4D8               	btfss	status,2,c
 49762  016B3C  D009               	goto	i2l2836
 49763                           
 49764                           ; BSR set to: 0
 49765  016B3E  0E00               	movlw	0
 49766  016B40  6F6C               	movwf	?_sqrt& (0+255),b
 49767  016B42  0E00               	movlw	0
 49768  016B44  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 49769  016B46  0E00               	movlw	0
 49770  016B48  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 49771  016B4A  0E00               	movlw	0
 49772  016B4C  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 49773                           
 49774                           ; BSR set to: 0
 49775  016B4E  0012               	return	
 49776  016B50                     i2l2836:
 49777                           
 49778                           ; BSR set to: 0
 49779                           
 49780                           ; BSR set to: 0
 49781  016B50  5174               	movf	sqrt@sign& (0+255),w,b
 49782  016B52  B4D8               	btfsc	status,2,c
 49783  016B54  D01A               	goto	i2l2838
 49784                           
 49785                           ; BSR set to: 0
 49786  016B56  0E00               	movlw	0
 49787  016B58  6F81               	movwf	sqrt@root& (0+255),b
 49788  016B5A  0E00               	movlw	0
 49789  016B5C  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49790  016B5E  0E40               	movlw	64
 49791  016B60  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49792  016B62  0E00               	movlw	0
 49793  016B64  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49794                           
 49795                           ; BSR set to: 0
 49796  016B66  0E80               	movlw	128
 49797  016B68  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 49798  016B6A  0EFF               	movlw	255
 49799  016B6C  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 49800                           
 49801                           ; BSR set to: 0
 49802  016B6E  0E00               	movlw	0
 49803  016B70  0102               	movlb	2	; () banked
 49804  016B72  6F5D               	movwf	(_errno+1)& (0+255),b
 49805  016B74  0E21               	movlw	33
 49806  016B76  6F5C               	movwf	_errno& (0+255),b
 49807                           
 49808                           ; BSR set to: 2
 49809  016B78  C081  F06C         	movff	sqrt@root,?_sqrt
 49810  016B7C  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49811  016B80  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49812  016B84  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49813                           
 49814                           ; BSR set to: 2
 49815  016B88  0012               	return	
 49816  016B8A                     i2l2838:
 49817                           
 49818                           ; BSR set to: 2
 49819  016B8A  0100               	movlb	0	; () banked
 49820  016B8C  297F               	incf	sqrt@exp& (0+255),w,b
 49821  016B8E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 49822  016B90  A4D8               	btfss	status,2,c
 49823  016B92  D011               	goto	i2l2839
 49824                           
 49825                           ; BSR set to: 0
 49826  016B94  0E00               	movlw	0
 49827  016B96  6F81               	movwf	sqrt@root& (0+255),b
 49828  016B98  0E00               	movlw	0
 49829  016B9A  6F82               	movwf	(sqrt@root+1)& (0+255),b
 49830  016B9C  0E80               	movlw	128
 49831  016B9E  6F83               	movwf	(sqrt@root+2)& (0+255),b
 49832  016BA0  0E7F               	movlw	127
 49833  016BA2  6F84               	movwf	(sqrt@root+3)& (0+255),b
 49834                           
 49835                           ; BSR set to: 0
 49836  016BA4  C081  F06C         	movff	sqrt@root,?_sqrt
 49837  016BA8  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 49838  016BAC  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 49839  016BB0  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 49840                           
 49841                           ; BSR set to: 0
 49842  016BB4  0012               	return	
 49843  016BB6                     i2l2839:
 49844                           
 49845                           ; BSR set to: 0
 49846                           
 49847                           ; BSR set to: 0
 49848  016BB6  0E81               	movlw	129
 49849  016BB8  277F               	addwf	sqrt@exp& (0+255),f,b
 49850  016BBA  0EFF               	movlw	255
 49851  016BBC  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 49852  016BBE  517F               	movf	sqrt@exp& (0+255),w,b
 49853  016BC0  0B01               	andlw	1
 49854  016BC2  6F7A               	movwf	sqrt@p& (0+255),b
 49855  016BC4  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 49856  016BC6  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 49857  016BC8  337F               	rrcf	sqrt@exp& (0+255),f,b
 49858  016BCA  0E7F               	movlw	127
 49859  016BCC  277F               	addwf	sqrt@exp& (0+255),f,b
 49860  016BCE  0E00               	movlw	0
 49861  016BD0  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 49862  016BD2  90D8               	bcf	status,0,c
 49863  016BD4  3585               	rlcf	sqrt@frac& (0+255),w,b
 49864  016BD6  6F76               	movwf	sqrt@tfrac& (0+255),b
 49865  016BD8  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 49866  016BDA  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 49867  016BDC  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 49868  016BDE  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 49869  016BE0  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 49870  016BE2  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 49871                           
 49872                           ; BSR set to: 0
 49873  016BE4  0E00               	movlw	0
 49874  016BE6  6F85               	movwf	sqrt@frac& (0+255),b
 49875  016BE8  0E00               	movlw	0
 49876  016BEA  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 49877  016BEC  0E00               	movlw	0
 49878  016BEE  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 49879  016BF0  0E00               	movlw	0
 49880  016BF2  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 49881                           
 49882                           ; BSR set to: 0
 49883  016BF4  0E00               	movlw	0
 49884  016BF6  6F7B               	movwf	sqrt@grs& (0+255),b
 49885  016BF8  0E00               	movlw	0
 49886  016BFA  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 49887  016BFC  0E00               	movlw	0
 49888  016BFE  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 49889  016C00  0E01               	movlw	1
 49890  016C02  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 49891                           
 49892                           ; BSR set to: 0
 49893  016C04  517A               	movf	sqrt@p& (0+255),w,b
 49894  016C06  B4D8               	btfsc	status,2,c
 49895  016C08  D005               	goto	i2l2840
 49896                           
 49897                           ; BSR set to: 0
 49898  016C0A  90D8               	bcf	status,0,c
 49899  016C0C  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 49900  016C0E  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 49901  016C10  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 49902  016C12  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 49903  016C14                     i2l2840:
 49904                           
 49905                           ; BSR set to: 0
 49906                           
 49907                           ; BSR set to: 0
 49908  016C14  0E00               	movlw	0
 49909  016C16  6F75               	movwf	sqrt@i& (0+255),b
 49910  016C18  D052               	goto	i2l2841
 49911  016C1A                     
 49912                           ; BSR set to: 0
 49913                           
 49914                           ; BSR set to: 0
 49915  016C1A  517B               	movf	sqrt@grs& (0+255),w,b
 49916  016C1C  1385               	iorwf	sqrt@frac& (0+255),f,b
 49917  016C1E  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49918  016C20  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 49919  016C22  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49920  016C24  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 49921  016C26  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49922  016C28  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 49923  016C2A  5185               	movf	sqrt@frac& (0+255),w,b
 49924  016C2C  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 49925  016C2E  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 49926  016C30  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 49927  016C32  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 49928  016C34  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 49929  016C36  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 49930  016C38  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 49931  016C3A  A0D8               	btfss	status,0,c
 49932  016C3C  D011               	goto	i2l2843
 49933                           
 49934                           ; BSR set to: 0
 49935  016C3E  5185               	movf	sqrt@frac& (0+255),w,b
 49936  016C40  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 49937  016C42  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 49938  016C44  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 49939  016C46  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 49940  016C48  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 49941  016C4A  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 49942  016C4C  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 49943  016C4E  517B               	movf	sqrt@grs& (0+255),w,b
 49944  016C50  2785               	addwf	sqrt@frac& (0+255),f,b
 49945  016C52  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 49946  016C54  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 49947  016C56  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 49948  016C58  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 49949  016C5A  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 49950  016C5C  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 49951  016C5E  D014               	goto	i2l2844
 49952  016C60                     i2l2843:
 49953                           
 49954                           ; BSR set to: 0
 49955                           
 49956                           ; BSR set to: 0
 49957  016C60  C07B  F070         	movff	sqrt@grs,??_sqrt
 49958  016C64  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 49959  016C68  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 49960  016C6C  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 49961  016C70  1F70               	comf	??_sqrt& (0+255),f,b
 49962  016C72  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 49963  016C74  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 49964  016C76  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 49965  016C78  5170               	movf	??_sqrt& (0+255),w,b
 49966  016C7A  1785               	andwf	sqrt@frac& (0+255),f,b
 49967  016C7C  5171               	movf	(??_sqrt+1)& (0+255),w,b
 49968  016C7E  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 49969  016C80  5172               	movf	(??_sqrt+2)& (0+255),w,b
 49970  016C82  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 49971  016C84  5173               	movf	(??_sqrt+3)& (0+255),w,b
 49972  016C86  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 49973  016C88                     i2l2844:
 49974                           
 49975                           ; BSR set to: 0
 49976                           
 49977                           ; BSR set to: 0
 49978  016C88  C07B  F070         	movff	sqrt@grs,??_sqrt
 49979  016C8C  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 49980  016C90  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 49981  016C94  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 49982  016C98  90D8               	bcf	status,0,c
 49983  016C9A  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 49984  016C9C  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 49985  016C9E  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 49986  016CA0  3370               	rrcf	??_sqrt& (0+255),f,b
 49987  016CA2  C070  F07B         	movff	??_sqrt,sqrt@grs
 49988  016CA6  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 49989  016CAA  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 49990  016CAE  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 49991                           
 49992                           ; BSR set to: 0
 49993  016CB2  90D8               	bcf	status,0,c
 49994  016CB4  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 49995  016CB6  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 49996  016CB8  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 49997  016CBA  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 49998                           
 49999                           ; BSR set to: 0
 50000  016CBC  2B75               	incf	sqrt@i& (0+255),f,b
 50001  016CBE                     i2l2841:
 50002                           
 50003                           ; BSR set to: 0
 50004                           
 50005                           ; BSR set to: 0
 50006  016CBE  0E18               	movlw	24
 50007  016CC0  6575               	cpfsgt	sqrt@i& (0+255),b
 50008  016CC2  D7AB               	goto	i2l2842
 50009                           
 50010                           ; BSR set to: 0
 50011                           
 50012                           ; BSR set to: 0
 50013  016CC4  C085  F070         	movff	sqrt@frac,??_sqrt
 50014  016CC8  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 50015  016CCC  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 50016  016CD0  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 50017  016CD4  90D8               	bcf	status,0,c
 50018  016CD6  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50019  016CD8  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50020  016CDA  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50021  016CDC  3370               	rrcf	??_sqrt& (0+255),f,b
 50022  016CDE  C070  F085         	movff	??_sqrt,sqrt@frac
 50023  016CE2  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 50024  016CE6  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 50025  016CEA  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 50026                           
 50027                           ; BSR set to: 0
 50028  016CEE  0E01               	movlw	1
 50029  016CF0  1585               	andwf	sqrt@frac& (0+255),w,b
 50030  016CF2  6F7B               	movwf	sqrt@grs& (0+255),b
 50031  016CF4  0E00               	movlw	0
 50032  016CF6  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 50033  016CF8  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 50034  016CFA  0E00               	movlw	0
 50035  016CFC  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 50036  016CFE  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 50037  016D00  0E00               	movlw	0
 50038  016D02  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 50039  016D04  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 50040                           
 50041                           ; BSR set to: 0
 50042  016D06  C085  F070         	movff	sqrt@frac,??_sqrt
 50043  016D0A  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 50044  016D0E  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 50045  016D12  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 50046  016D16  90D8               	bcf	status,0,c
 50047  016D18  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50048  016D1A  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50049  016D1C  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50050  016D1E  3370               	rrcf	??_sqrt& (0+255),f,b
 50051  016D20  C070  F085         	movff	??_sqrt,sqrt@frac
 50052  016D24  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 50053  016D28  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 50054  016D2C  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 50055  016D30  517B               	movf	sqrt@grs& (0+255),w,b
 50056  016D32  2785               	addwf	sqrt@frac& (0+255),f,b
 50057  016D34  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 50058  016D36  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 50059  016D38  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 50060  016D3A  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 50061  016D3C  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 50062  016D3E  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 50063                           
 50064                           ; BSR set to: 0
 50065  016D40  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 50066  016D42  D017               	goto	i2l2846
 50067                           
 50068                           ; BSR set to: 0
 50069  016D44  C085  F070         	movff	sqrt@frac,??_sqrt
 50070  016D48  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 50071  016D4C  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 50072  016D50  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 50073  016D54  90D8               	bcf	status,0,c
 50074  016D56  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 50075  016D58  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 50076  016D5A  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 50077  016D5C  3370               	rrcf	??_sqrt& (0+255),f,b
 50078  016D5E  C070  F085         	movff	??_sqrt,sqrt@frac
 50079  016D62  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 50080  016D66  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 50081  016D6A  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 50082  016D6E  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 50083  016D70  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 50084  016D72                     i2l2846:
 50085                           
 50086                           ; BSR set to: 0
 50087                           
 50088                           ; BSR set to: 0
 50089  016D72  0EFF               	movlw	255
 50090  016D74  1585               	andwf	sqrt@frac& (0+255),w,b
 50091  016D76  6F81               	movwf	sqrt@root& (0+255),b
 50092  016D78  0EFF               	movlw	255
 50093  016D7A  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 50094  016D7C  6F82               	movwf	(sqrt@root+1)& (0+255),b
 50095  016D7E  0E7F               	movlw	127
 50096  016D80  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 50097  016D82  6F83               	movwf	(sqrt@root+2)& (0+255),b
 50098  016D84  0E00               	movlw	0
 50099  016D86  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 50100  016D88  6F84               	movwf	(sqrt@root+3)& (0+255),b
 50101                           
 50102                           ; BSR set to: 0
 50103  016D8A  C07F  F07A         	movff	sqrt@exp,sqrt@p
 50104                           
 50105                           ; BSR set to: 0
 50106  016D8E  B17A               	btfsc	sqrt@p& (0+255),0,b
 50107                           
 50108                           ; BSR set to: 0
 50109  016D90  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 50110                           
 50111                           ; BSR set to: 0
 50112                           
 50113                           ; BSR set to: 0
 50114  016D92  90D8               	bcf	status,0,c
 50115  016D94  317A               	rrcf	sqrt@p& (0+255),w,b
 50116  016D96  6F84               	movwf	(sqrt@root+3)& (0+255),b
 50117                           
 50118                           ; BSR set to: 0
 50119  016D98  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 50120                           
 50121                           ; BSR set to: 0
 50122  016D9A  C081  F06C         	movff	sqrt@root,?_sqrt
 50123  016D9E  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 50124  016DA2  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 50125  016DA6  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 50126  016DAA  0012               	return	
 50127  016DAC                     __end_of_sqrt:
 50128                           	opt stack 0
 50129                           tosu	equ	0xFFF
 50130                           tosh	equ	0xFFE
 50131                           tosl	equ	0xFFD
 50132                           pclatu	equ	0xFFB
 50133                           pclath	equ	0xFFA
 50134                           tblptru	equ	0xFF8
 50135                           tblptrh	equ	0xFF7
 50136                           tblptrl	equ	0xFF6
 50137                           tablat	equ	0xFF5
 50138                           prodh	equ	0xFF4
 50139                           prodl	equ	0xFF3
 50140                           intcon	equ	0xFF2
 50141                           indf0	equ	0xFEF
 50142                           postinc0	equ	0xFEE
 50143                           fsr0h	equ	0xFEA
 50144                           fsr0l	equ	0xFE9
 50145                           wreg	equ	0xFE8
 50146                           indf1	equ	0xFE7
 50147                           postdec1	equ	0xFE5
 50148                           plusw1	equ	0xFE3
 50149                           fsr1h	equ	0xFE2
 50150                           fsr1l	equ	0xFE1
 50151                           bsr	equ	0xFE0
 50152                           indf2	equ	0xFDF
 50153                           postinc2	equ	0xFDE
 50154                           postdec2	equ	0xFDD
 50155                           plusw2	equ	0xFDB
 50156                           fsr2h	equ	0xFDA
 50157                           fsr2l	equ	0xFD9
 50158                           status	equ	0xFD8
 50159                           
 50160 ;; *************** function _atan *****************
 50161 ;; Defined at:
 50162 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 50163 ;; Parameters:    Size  Location     Type
 50164 ;;  f               4   28[BANK0 ] unsigned char 
 50165 ;; Auto vars:     Size  Location     Type
 50166 ;;  val             4   45[BANK0 ] unsigned char 
 50167 ;;  val_squared     4   41[BANK0 ] unsigned char 
 50168 ;;  x               4   36[BANK0 ] unsigned char 
 50169 ;;  y               4   32[BANK0 ] unsigned char 
 50170 ;;  recip           1   40[BANK0 ] unsigned char 
 50171 ;; Return value:  Size  Location     Type
 50172 ;;                  4   28[BANK0 ] unsigned char 
 50173 ;; Registers used:
 50174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50175 ;; Tracked objects:
 50176 ;;		On entry : 0/0
 50177 ;;		On exit  : 0/0
 50178 ;;		Unchanged: 0/0
 50179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50181 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50183 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50184 ;;Total ram usage:       21 bytes
 50185 ;; Hardware stack levels used:    1
 50186 ;; Hardware stack levels required when called:    2
 50187 ;; This function calls:
 50188 ;;		_eval_poly
 50189 ;;		_fabs
 50190 ;;		i2___fladd
 50191 ;;		i2___fldiv
 50192 ;;		i2___flge
 50193 ;;		i2___flmul
 50194 ;;		i2___flneg
 50195 ;; This function is called by:
 50196 ;;		_asin
 50197 ;; This function uses a non-reentrant model
 50198 ;;
 50199                           
 50200                           	psect	text154
 50201  017F92                     __ptext154:
 50202                           	opt stack 0
 50203  017F92                     _atan:
 50204                           	opt stack 10
 50205                           
 50206                           ;incstack = 0
 50207  017F92  C07C  F030         	movff	atan@f,fabs@d
 50208  017F96  C07D  F031         	movff	atan@f+1,fabs@d+1
 50209  017F9A  C07E  F032         	movff	atan@f+2,fabs@d+2
 50210  017F9E  C07F  F033         	movff	atan@f+3,fabs@d+3
 50211  017FA2  EC20  F0D5         	call	_fabs	;wreg free
 50212  017FA6  C030  F08D         	movff	?_fabs,atan@val
 50213  017FAA  C031  F08E         	movff	?_fabs+1,atan@val+1
 50214  017FAE  C032  F08F         	movff	?_fabs+2,atan@val+2
 50215  017FB2  C033  F090         	movff	?_fabs+3,atan@val+3
 50216  017FB6  0100               	movlb	0	; () banked
 50217  017FB8  518D               	movf	atan@val& (0+255),w,b
 50218  017FBA  118E               	iorwf	(atan@val+1)& (0+255),w,b
 50219  017FBC  118F               	iorwf	(atan@val+2)& (0+255),w,b
 50220  017FBE  1190               	iorwf	(atan@val+3)& (0+255),w,b
 50221  017FC0  A4D8               	btfss	status,2,c
 50222  017FC2  D009               	goto	i2l2282
 50223                           
 50224                           ; BSR set to: 0
 50225  017FC4  0E00               	movlw	0
 50226  017FC6  6F7C               	movwf	?_atan& (0+255),b
 50227  017FC8  0E00               	movlw	0
 50228  017FCA  6F7D               	movwf	(?_atan+1)& (0+255),b
 50229  017FCC  0E00               	movlw	0
 50230  017FCE  6F7E               	movwf	(?_atan+2)& (0+255),b
 50231  017FD0  0E00               	movlw	0
 50232  017FD2  6F7F               	movwf	(?_atan+3)& (0+255),b
 50233                           
 50234                           ; BSR set to: 0
 50235  017FD4  0012               	return	
 50236  017FD6                     i2l2282:
 50237                           
 50238                           ; BSR set to: 0
 50239                           
 50240                           ; BSR set to: 0
 50241  017FD6  0E00               	movlw	0
 50242  017FD8  6E34               	movwf	i2___flge@ff1,c
 50243  017FDA  0E00               	movlw	0
 50244  017FDC  6E35               	movwf	i2___flge@ff1+1,c
 50245  017FDE  0E80               	movlw	128
 50246  017FE0  6E36               	movwf	i2___flge@ff1+2,c
 50247  017FE2  0E3F               	movlw	63
 50248  017FE4  6E37               	movwf	i2___flge@ff1+3,c
 50249  017FE6  C08D  F038         	movff	atan@val,i2___flge@ff2
 50250  017FEA  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 50251  017FEE  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 50252  017FF2  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 50253  017FF6  ECE3  F0C6         	call	i2___flge	;wreg free
 50254  017FFA  B0D8               	btfsc	status,0,c
 50255  017FFC  D002               	goto	i2u1963_40
 50256  017FFE  0E01               	movlw	1
 50257  018000  D001               	goto	i2u1964_40
 50258  018002                     i2u1963_40:
 50259  018002  0E00               	movlw	0
 50260  018004                     i2u1964_40:
 50261  018004  0100               	movlb	0	; () banked
 50262  018006  6F88               	movwf	atan@recip& (0+255),b
 50263  018008  5188               	movf	atan@recip& (0+255),w,b
 50264  01800A  B4D8               	btfsc	status,2,c
 50265  01800C  D01A               	goto	i2l2284
 50266                           
 50267                           ; BSR set to: 0
 50268  01800E  0E00               	movlw	0
 50269  018010  6E13               	movwf	i2___fldiv@b,c
 50270  018012  0E00               	movlw	0
 50271  018014  6E14               	movwf	i2___fldiv@b+1,c
 50272  018016  0E80               	movlw	128
 50273  018018  6E15               	movwf	i2___fldiv@b+2,c
 50274  01801A  0E3F               	movlw	63
 50275  01801C  6E16               	movwf	i2___fldiv@b+3,c
 50276  01801E  C08D  F017         	movff	atan@val,i2___fldiv@a
 50277  018022  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 50278  018026  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 50279  01802A  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 50280  01802E  EC94  F0B9         	call	i2___fldiv	;wreg free
 50281  018032  C013  F08D         	movff	?i2___fldiv,atan@val
 50282  018036  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 50283  01803A  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 50284  01803E  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 50285  018042                     i2l2284:
 50286  018042  C08D  F030         	movff	atan@val,i2___flmul@b
 50287  018046  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 50288  01804A  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 50289  01804E  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 50290  018052  C08D  F034         	movff	atan@val,i2___flmul@a
 50291  018056  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 50292  01805A  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 50293  01805E  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 50294  018062  EC8D  F0AD         	call	i2___flmul	;wreg free
 50295  018066  C030  F089         	movff	?i2___flmul,atan@val_squared
 50296  01806A  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 50297  01806E  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 50298  018072  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 50299  018076  C089  F06C         	movff	atan@val_squared,eval_poly@x
 50300  01807A  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 50301  01807E  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 50302  018082  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 50303  018086  0E8D               	movlw	low atan@coeff_b
 50304  018088  0100               	movlb	0	; () banked
 50305  01808A  6F70               	movwf	eval_poly@d& (0+255),b
 50306  01808C  0ED2               	movlw	high atan@coeff_b
 50307  01808E  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50308  018090  0E00               	movlw	0
 50309  018092  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50310  018094  0E04               	movlw	4
 50311  018096  6F72               	movwf	eval_poly@n& (0+255),b
 50312  018098  EC80  F0C8         	call	_eval_poly	;wreg free
 50313  01809C  C06C  F080         	movff	?_eval_poly,atan@y
 50314  0180A0  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 50315  0180A4  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 50316  0180A8  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 50317  0180AC  C089  F06C         	movff	atan@val_squared,eval_poly@x
 50318  0180B0  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 50319  0180B4  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 50320  0180B8  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 50321  0180BC  0E61               	movlw	low atan@coeff_a
 50322  0180BE  0100               	movlb	0	; () banked
 50323  0180C0  6F70               	movwf	eval_poly@d& (0+255),b
 50324  0180C2  0ED2               	movlw	high atan@coeff_a
 50325  0180C4  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50326  0180C6  0E00               	movlw	0
 50327  0180C8  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50328  0180CA  0E05               	movlw	5
 50329  0180CC  6F72               	movwf	eval_poly@n& (0+255),b
 50330  0180CE  EC80  F0C8         	call	_eval_poly	;wreg free
 50331  0180D2  C06C  F084         	movff	?_eval_poly,atan@x
 50332  0180D6  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 50333  0180DA  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 50334  0180DE  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 50335  0180E2  C08D  F030         	movff	atan@val,i2___flmul@b
 50336  0180E6  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 50337  0180EA  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 50338  0180EE  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 50339  0180F2  C080  F017         	movff	atan@y,i2___fldiv@a
 50340  0180F6  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 50341  0180FA  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 50342  0180FE  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 50343  018102  C084  F013         	movff	atan@x,i2___fldiv@b
 50344  018106  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 50345  01810A  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 50346  01810E  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 50347  018112  EC94  F0B9         	call	i2___fldiv	;wreg free
 50348  018116  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 50349  01811A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 50350  01811E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 50351  018122  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 50352  018126  EC8D  F0AD         	call	i2___flmul	;wreg free
 50353  01812A  C030  F08D         	movff	?i2___flmul,atan@val
 50354  01812E  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 50355  018132  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 50356  018136  C033  F090         	movff	?i2___flmul+3,atan@val+3
 50357  01813A  0100               	movlb	0	; () banked
 50358  01813C  5188               	movf	atan@recip& (0+255),w,b
 50359  01813E  B4D8               	btfsc	status,2,c
 50360  018140  D024               	goto	i2l2285
 50361                           
 50362                           ; BSR set to: 0
 50363  018142  C08D  F02C         	movff	atan@val,i2___flneg@f1
 50364  018146  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 50365  01814A  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 50366  01814E  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 50367  018152  ECB0  F0D6         	call	i2___flneg	;wreg free
 50368  018156  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 50369  01815A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 50370  01815E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 50371  018162  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 50372  018166  0EDB               	movlw	219
 50373  018168  6E5A               	movwf	i2___fladd@a,c
 50374  01816A  0E0F               	movlw	15
 50375  01816C  6E5B               	movwf	i2___fladd@a+1,c
 50376  01816E  0EC9               	movlw	201
 50377  018170  6E5C               	movwf	i2___fladd@a+2,c
 50378  018172  0E3F               	movlw	63
 50379  018174  6E5D               	movwf	i2___fladd@a+3,c
 50380  018176  ECD4  F0B0         	call	i2___fladd	;wreg free
 50381  01817A  C056  F08D         	movff	?i2___fladd,atan@val
 50382  01817E  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 50383  018182  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 50384  018186  C059  F090         	movff	?i2___fladd+3,atan@val+3
 50385  01818A                     i2l2285:
 50386  01818A  0100               	movlb	0	; () banked
 50387  01818C  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 50388  01818E  D009               	goto	i2l2287
 50389                           
 50390                           ; BSR set to: 0
 50391  018190  C08D  F07C         	movff	atan@val,?_atan
 50392  018194  C08E  F07D         	movff	atan@val+1,?_atan+1
 50393  018198  C08F  F07E         	movff	atan@val+2,?_atan+2
 50394  01819C  C090  F07F         	movff	atan@val+3,?_atan+3
 50395  0181A0  0012               	return	
 50396  0181A2                     i2l2287:
 50397                           
 50398                           ; BSR set to: 0
 50399                           
 50400                           ; BSR set to: 0
 50401  0181A2  C08D  F02C         	movff	atan@val,i2___flneg@f1
 50402  0181A6  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 50403  0181AA  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 50404  0181AE  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 50405  0181B2  ECB0  F0D6         	call	i2___flneg	;wreg free
 50406  0181B6  C02C  F07C         	movff	?i2___flneg,?_atan
 50407  0181BA  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 50408  0181BE  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 50409  0181C2  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 50410  0181C6  0012               	return	
 50411  0181C8                     __end_of_atan:
 50412                           	opt stack 0
 50413                           tosu	equ	0xFFF
 50414                           tosh	equ	0xFFE
 50415                           tosl	equ	0xFFD
 50416                           pclatu	equ	0xFFB
 50417                           pclath	equ	0xFFA
 50418                           tblptru	equ	0xFF8
 50419                           tblptrh	equ	0xFF7
 50420                           tblptrl	equ	0xFF6
 50421                           tablat	equ	0xFF5
 50422                           prodh	equ	0xFF4
 50423                           prodl	equ	0xFF3
 50424                           intcon	equ	0xFF2
 50425                           indf0	equ	0xFEF
 50426                           postinc0	equ	0xFEE
 50427                           fsr0h	equ	0xFEA
 50428                           fsr0l	equ	0xFE9
 50429                           wreg	equ	0xFE8
 50430                           indf1	equ	0xFE7
 50431                           postdec1	equ	0xFE5
 50432                           plusw1	equ	0xFE3
 50433                           fsr1h	equ	0xFE2
 50434                           fsr1l	equ	0xFE1
 50435                           bsr	equ	0xFE0
 50436                           indf2	equ	0xFDF
 50437                           postinc2	equ	0xFDE
 50438                           postdec2	equ	0xFDD
 50439                           plusw2	equ	0xFDB
 50440                           fsr2h	equ	0xFDA
 50441                           fsr2l	equ	0xFD9
 50442                           status	equ	0xFD8
 50443                           
 50444 ;; *************** function _fabs *****************
 50445 ;; Defined at:
 50446 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 50447 ;; Parameters:    Size  Location     Type
 50448 ;;  d               4   47[COMRAM] unsigned char 
 50449 ;; Auto vars:     Size  Location     Type
 50450 ;;		None
 50451 ;; Return value:  Size  Location     Type
 50452 ;;                  4   47[COMRAM] unsigned char 
 50453 ;; Registers used:
 50454 ;;		wreg, status,2, status,0, cstack
 50455 ;; Tracked objects:
 50456 ;;		On entry : 0/0
 50457 ;;		On exit  : 0/0
 50458 ;;		Unchanged: 0/0
 50459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50464 ;;Total ram usage:        4 bytes
 50465 ;; Hardware stack levels used:    1
 50466 ;; Hardware stack levels required when called:    1
 50467 ;; This function calls:
 50468 ;;		i2___flneg
 50469 ;; This function is called by:
 50470 ;;		_asin
 50471 ;;		_atan
 50472 ;; This function uses a non-reentrant model
 50473 ;;
 50474                           
 50475                           	psect	text155
 50476  01AA40                     __ptext155:
 50477                           	opt stack 0
 50478  01AA40                     _fabs:
 50479                           	opt stack 11
 50480                           
 50481                           ;incstack = 0
 50482  01AA40  AE33               	btfss	fabs@d+3,7,c
 50483  01AA42  D013               	goto	i2l2379
 50484  01AA44  C030  F02C         	movff	fabs@d,i2___flneg@f1
 50485  01AA48  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 50486  01AA4C  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 50487  01AA50  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 50488  01AA54  ECB0  F0D6         	call	i2___flneg	;wreg free
 50489  01AA58  C02C  F030         	movff	?i2___flneg,?_fabs
 50490  01AA5C  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 50491  01AA60  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 50492  01AA64  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 50493  01AA68  0012               	return	
 50494  01AA6A                     i2l2379:
 50495  01AA6A  C030  F030         	movff	fabs@d,?_fabs
 50496  01AA6E  C031  F031         	movff	fabs@d+1,?_fabs+1
 50497  01AA72  C032  F032         	movff	fabs@d+2,?_fabs+2
 50498  01AA76  C033  F033         	movff	fabs@d+3,?_fabs+3
 50499  01AA7A  0012               	return		;funcret
 50500  01AA7C                     __end_of_fabs:
 50501                           	opt stack 0
 50502                           tosu	equ	0xFFF
 50503                           tosh	equ	0xFFE
 50504                           tosl	equ	0xFFD
 50505                           pclatu	equ	0xFFB
 50506                           pclath	equ	0xFFA
 50507                           tblptru	equ	0xFF8
 50508                           tblptrh	equ	0xFF7
 50509                           tblptrl	equ	0xFF6
 50510                           tablat	equ	0xFF5
 50511                           prodh	equ	0xFF4
 50512                           prodl	equ	0xFF3
 50513                           intcon	equ	0xFF2
 50514                           indf0	equ	0xFEF
 50515                           postinc0	equ	0xFEE
 50516                           fsr0h	equ	0xFEA
 50517                           fsr0l	equ	0xFE9
 50518                           wreg	equ	0xFE8
 50519                           indf1	equ	0xFE7
 50520                           postdec1	equ	0xFE5
 50521                           plusw1	equ	0xFE3
 50522                           fsr1h	equ	0xFE2
 50523                           fsr1l	equ	0xFE1
 50524                           bsr	equ	0xFE0
 50525                           indf2	equ	0xFDF
 50526                           postinc2	equ	0xFDE
 50527                           postdec2	equ	0xFDD
 50528                           plusw2	equ	0xFDB
 50529                           fsr2h	equ	0xFDA
 50530                           fsr2l	equ	0xFD9
 50531                           status	equ	0xFD8
 50532                           
 50533 ;; *************** function _currentMeasuredToPeak *****************
 50534 ;; Defined at:
 50535 ;;		line 142 in file "main.c"
 50536 ;; Parameters:    Size  Location     Type
 50537 ;;  Measured        4   57[BANK0 ] unsigned char 
 50538 ;;  Angle           4   61[BANK0 ] unsigned char 
 50539 ;; Auto vars:     Size  Location     Type
 50540 ;;  Peak            4   65[BANK0 ] unsigned char 
 50541 ;; Return value:  Size  Location     Type
 50542 ;;                  4   57[BANK0 ] unsigned char 
 50543 ;; Registers used:
 50544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50545 ;; Tracked objects:
 50546 ;;		On entry : 0/0
 50547 ;;		On exit  : 0/0
 50548 ;;		Unchanged: 0/0
 50549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50550 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50551 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50553 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50554 ;;Total ram usage:       12 bytes
 50555 ;; Hardware stack levels used:    1
 50556 ;; Hardware stack levels required when called:    3
 50557 ;; This function calls:
 50558 ;;		_sin
 50559 ;;		i2___fldiv
 50560 ;; This function is called by:
 50561 ;;		_ADCPostProcessingCallback
 50562 ;; This function uses a non-reentrant model
 50563 ;;
 50564                           
 50565                           	psect	text156
 50566  019CDC                     __ptext156:
 50567                           	opt stack 0
 50568  019CDC                     _currentMeasuredToPeak:
 50569                           	opt stack 12
 50570                           
 50571                           ;main.c: 145: double Peak = 0.0;
 50572                           
 50573                           ;incstack = 0
 50574  019CDC  0E00               	movlw	0
 50575  019CDE  0100               	movlb	0	; () banked
 50576  019CE0  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 50577  019CE2  0E00               	movlw	0
 50578  019CE4  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 50579  019CE6  0E00               	movlw	0
 50580  019CE8  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 50581  019CEA  0E00               	movlw	0
 50582  019CEC  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 50583                           
 50584                           ; BSR set to: 0
 50585                           ;main.c: 148: Peak = sin(Angle);
 50586  019CEE  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 50587  019CF2  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 50588  019CF6  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 50589  019CFA  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 50590  019CFE  ECF5  F0B3         	call	_sin	;wreg free
 50591  019D02  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 50592  019D06  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 50593  019D0A  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 50594  019D0E  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 50595                           
 50596                           ;main.c: 149: Peak = Measured / Peak;
 50597  019D12  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 50598  019D16  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 50599  019D1A  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 50600  019D1E  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 50601  019D22  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 50602  019D26  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 50603  019D2A  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 50604  019D2E  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 50605  019D32  EC94  F0B9         	call	i2___fldiv	;wreg free
 50606  019D36  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 50607  019D3A  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 50608  019D3E  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 50609  019D42  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 50610                           
 50611                           ;main.c: 150: return Peak;
 50612  019D46  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 50613  019D4A  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 50614  019D4E  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 50615  019D52  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 50616  019D56  0012               	return	
 50617  019D58                     __end_of_currentMeasuredToPeak:
 50618                           	opt stack 0
 50619                           tosu	equ	0xFFF
 50620                           tosh	equ	0xFFE
 50621                           tosl	equ	0xFFD
 50622                           pclatu	equ	0xFFB
 50623                           pclath	equ	0xFFA
 50624                           tblptru	equ	0xFF8
 50625                           tblptrh	equ	0xFF7
 50626                           tblptrl	equ	0xFF6
 50627                           tablat	equ	0xFF5
 50628                           prodh	equ	0xFF4
 50629                           prodl	equ	0xFF3
 50630                           intcon	equ	0xFF2
 50631                           indf0	equ	0xFEF
 50632                           postinc0	equ	0xFEE
 50633                           fsr0h	equ	0xFEA
 50634                           fsr0l	equ	0xFE9
 50635                           wreg	equ	0xFE8
 50636                           indf1	equ	0xFE7
 50637                           postdec1	equ	0xFE5
 50638                           plusw1	equ	0xFE3
 50639                           fsr1h	equ	0xFE2
 50640                           fsr1l	equ	0xFE1
 50641                           bsr	equ	0xFE0
 50642                           indf2	equ	0xFDF
 50643                           postinc2	equ	0xFDE
 50644                           postdec2	equ	0xFDD
 50645                           plusw2	equ	0xFDB
 50646                           fsr2h	equ	0xFDA
 50647                           fsr2l	equ	0xFD9
 50648                           status	equ	0xFD8
 50649                           
 50650 ;; *************** function _sin *****************
 50651 ;; Defined at:
 50652 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 50653 ;; Parameters:    Size  Location     Type
 50654 ;;  f               4   40[BANK0 ] unsigned char 
 50655 ;; Auto vars:     Size  Location     Type
 50656 ;;  x2              4   52[BANK0 ] unsigned char 
 50657 ;;  y               4   44[BANK0 ] unsigned char 
 50658 ;;  sgn             1   56[BANK0 ] unsigned char 
 50659 ;; Return value:  Size  Location     Type
 50660 ;;                  4   40[BANK0 ] unsigned char 
 50661 ;; Registers used:
 50662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50663 ;; Tracked objects:
 50664 ;;		On entry : 0/0
 50665 ;;		On exit  : 0/0
 50666 ;;		Unchanged: 0/0
 50667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50669 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50671 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50672 ;;Total ram usage:       17 bytes
 50673 ;; Hardware stack levels used:    1
 50674 ;; Hardware stack levels required when called:    2
 50675 ;; This function calls:
 50676 ;;		_eval_poly
 50677 ;;		_floor
 50678 ;;		i2___fladd
 50679 ;;		i2___fldiv
 50680 ;;		i2___flge
 50681 ;;		i2___flmul
 50682 ;;		i2___flneg
 50683 ;;		i2___flsub
 50684 ;; This function is called by:
 50685 ;;		_peakToRMS
 50686 ;;		_currentMeasuredToPeak
 50687 ;; This function uses a non-reentrant model
 50688 ;;
 50689                           
 50690                           	psect	text157
 50691  0167EA                     __ptext157:
 50692                           	opt stack 0
 50693  0167EA                     _sin:
 50694                           	opt stack 12
 50695                           
 50696                           ;incstack = 0
 50697  0167EA  0E00               	movlw	0
 50698  0167EC  0100               	movlb	0	; () banked
 50699  0167EE  6F98               	movwf	sin@sgn& (0+255),b
 50700                           
 50701                           ; BSR set to: 0
 50702  0167F0  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 50703  0167F2  D015               	goto	i2l2703
 50704                           
 50705                           ; BSR set to: 0
 50706  0167F4  C088  F02C         	movff	sin@f,i2___flneg@f1
 50707  0167F8  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50708  0167FC  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50709  016800  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50710  016804  ECB0  F0D6         	call	i2___flneg	;wreg free
 50711  016808  C02C  F088         	movff	?i2___flneg,sin@f
 50712  01680C  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 50713  016810  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 50714  016814  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 50715  016818  0E01               	movlw	1
 50716  01681A  0100               	movlb	0	; () banked
 50717  01681C  6F98               	movwf	sin@sgn& (0+255),b
 50718  01681E                     i2l2703:
 50719                           
 50720                           ; BSR set to: 0
 50721                           
 50722                           ; BSR set to: 0
 50723  01681E  C088  F030         	movff	sin@f,i2___flmul@b
 50724  016822  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50725  016826  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50726  01682A  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50727  01682E  0E83               	movlw	131
 50728  016830  6E34               	movwf	i2___flmul@a,c
 50729  016832  0EF9               	movlw	249
 50730  016834  6E35               	movwf	i2___flmul@a+1,c
 50731  016836  0E22               	movlw	34
 50732  016838  6E36               	movwf	i2___flmul@a+2,c
 50733  01683A  0E3E               	movlw	62
 50734  01683C  6E37               	movwf	i2___flmul@a+3,c
 50735  01683E  EC8D  F0AD         	call	i2___flmul	;wreg free
 50736  016842  C030  F088         	movff	?i2___flmul,sin@f
 50737  016846  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50738  01684A  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50739  01684E  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50740  016852  C088  F080         	movff	sin@f,i2___flsub@b
 50741  016856  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 50742  01685A  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 50743  01685E  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 50744  016862  C088  F076         	movff	sin@f,floor@x
 50745  016866  C089  F077         	movff	sin@f+1,floor@x+1
 50746  01686A  C08A  F078         	movff	sin@f+2,floor@x+2
 50747  01686E  C08B  F079         	movff	sin@f+3,floor@x+3
 50748  016872  EC73  F0C7         	call	_floor	;wreg free
 50749  016876  C076  F084         	movff	?_floor,i2___flsub@a
 50750  01687A  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 50751  01687E  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 50752  016882  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 50753  016886  EC9F  F0D3         	call	i2___flsub	;wreg free
 50754  01688A  C080  F088         	movff	?i2___flsub,sin@f
 50755  01688E  C081  F089         	movff	?i2___flsub+1,sin@f+1
 50756  016892  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 50757  016896  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 50758  01689A  C088  F030         	movff	sin@f,i2___flmul@b
 50759  01689E  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50760  0168A2  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50761  0168A6  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50762  0168AA  0E00               	movlw	0
 50763  0168AC  6E34               	movwf	i2___flmul@a,c
 50764  0168AE  0E00               	movlw	0
 50765  0168B0  6E35               	movwf	i2___flmul@a+1,c
 50766  0168B2  0E80               	movlw	128
 50767  0168B4  6E36               	movwf	i2___flmul@a+2,c
 50768  0168B6  0E40               	movlw	64
 50769  0168B8  6E37               	movwf	i2___flmul@a+3,c
 50770  0168BA  EC8D  F0AD         	call	i2___flmul	;wreg free
 50771  0168BE  C030  F088         	movff	?i2___flmul,sin@f
 50772  0168C2  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50773  0168C6  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50774  0168CA  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50775  0168CE  0E00               	movlw	0
 50776  0168D0  6E34               	movwf	i2___flge@ff1,c
 50777  0168D2  0E00               	movlw	0
 50778  0168D4  6E35               	movwf	i2___flge@ff1+1,c
 50779  0168D6  0E00               	movlw	0
 50780  0168D8  6E36               	movwf	i2___flge@ff1+2,c
 50781  0168DA  0E40               	movlw	64
 50782  0168DC  6E37               	movwf	i2___flge@ff1+3,c
 50783  0168DE  C088  F038         	movff	sin@f,i2___flge@ff2
 50784  0168E2  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 50785  0168E6  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 50786  0168EA  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 50787  0168EE  ECE3  F0C6         	call	i2___flge	;wreg free
 50788  0168F2  B0D8               	btfsc	status,0,c
 50789  0168F4  D023               	goto	i2l2704
 50790  0168F6  C088  F080         	movff	sin@f,i2___flsub@b
 50791  0168FA  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 50792  0168FE  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 50793  016902  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 50794  016906  0E00               	movlw	0
 50795  016908  0100               	movlb	0	; () banked
 50796  01690A  6F84               	movwf	i2___flsub@a& (0+255),b
 50797  01690C  0E00               	movlw	0
 50798  01690E  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 50799  016910  0E00               	movlw	0
 50800  016912  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 50801  016914  0E40               	movlw	64
 50802  016916  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 50803  016918  EC9F  F0D3         	call	i2___flsub	;wreg free
 50804  01691C  C080  F088         	movff	?i2___flsub,sin@f
 50805  016920  C081  F089         	movff	?i2___flsub+1,sin@f+1
 50806  016924  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 50807  016928  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 50808  01692C  0100               	movlb	0	; () banked
 50809  01692E  5198               	movf	sin@sgn& (0+255),w,b
 50810  016930  A4D8               	btfss	status,2,c
 50811  016932  D002               	goto	i2u2020_40
 50812  016934  0E01               	movlw	1
 50813  016936  D001               	goto	i2u2021_40
 50814  016938                     i2u2020_40:
 50815  016938  0E00               	movlw	0
 50816  01693A                     i2u2021_40:
 50817  01693A  6F98               	movwf	sin@sgn& (0+255),b
 50818  01693C                     i2l2704:
 50819                           
 50820                           ; BSR set to: 0
 50821  01693C  0E00               	movlw	0
 50822  01693E  6E34               	movwf	i2___flge@ff1,c
 50823  016940  0E00               	movlw	0
 50824  016942  6E35               	movwf	i2___flge@ff1+1,c
 50825  016944  0E80               	movlw	128
 50826  016946  6E36               	movwf	i2___flge@ff1+2,c
 50827  016948  0E3F               	movlw	63
 50828  01694A  6E37               	movwf	i2___flge@ff1+3,c
 50829  01694C  C088  F038         	movff	sin@f,i2___flge@ff2
 50830  016950  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 50831  016954  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 50832  016958  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 50833  01695C  ECE3  F0C6         	call	i2___flge	;wreg free
 50834  016960  B0D8               	btfsc	status,0,c
 50835  016962  D024               	goto	i2l2705
 50836  016964  C088  F02C         	movff	sin@f,i2___flneg@f1
 50837  016968  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50838  01696C  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50839  016970  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50840  016974  ECB0  F0D6         	call	i2___flneg	;wreg free
 50841  016978  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 50842  01697C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 50843  016980  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 50844  016984  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 50845  016988  0E00               	movlw	0
 50846  01698A  6E5A               	movwf	i2___fladd@a,c
 50847  01698C  0E00               	movlw	0
 50848  01698E  6E5B               	movwf	i2___fladd@a+1,c
 50849  016990  0E00               	movlw	0
 50850  016992  6E5C               	movwf	i2___fladd@a+2,c
 50851  016994  0E40               	movlw	64
 50852  016996  6E5D               	movwf	i2___fladd@a+3,c
 50853  016998  ECD4  F0B0         	call	i2___fladd	;wreg free
 50854  01699C  C056  F088         	movff	?i2___fladd,sin@f
 50855  0169A0  C057  F089         	movff	?i2___fladd+1,sin@f+1
 50856  0169A4  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 50857  0169A8  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 50858  0169AC                     i2l2705:
 50859  0169AC  C088  F030         	movff	sin@f,i2___flmul@b
 50860  0169B0  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50861  0169B4  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50862  0169B8  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50863  0169BC  C088  F034         	movff	sin@f,i2___flmul@a
 50864  0169C0  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 50865  0169C4  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 50866  0169C8  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 50867  0169CC  EC8D  F0AD         	call	i2___flmul	;wreg free
 50868  0169D0  C030  F094         	movff	?i2___flmul,sin@x2
 50869  0169D4  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 50870  0169D8  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 50871  0169DC  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 50872  0169E0  C094  F06C         	movff	sin@x2,eval_poly@x
 50873  0169E4  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 50874  0169E8  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 50875  0169EC  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 50876  0169F0  0EA1               	movlw	low sin@coeff_b
 50877  0169F2  0100               	movlb	0	; () banked
 50878  0169F4  6F70               	movwf	eval_poly@d& (0+255),b
 50879  0169F6  0ED2               	movlw	high sin@coeff_b
 50880  0169F8  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50881  0169FA  0E00               	movlw	0
 50882  0169FC  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50883  0169FE  0E03               	movlw	3
 50884  016A00  6F72               	movwf	eval_poly@n& (0+255),b
 50885  016A02  EC80  F0C8         	call	_eval_poly	;wreg free
 50886  016A06  C06C  F08C         	movff	?_eval_poly,sin@y
 50887  016A0A  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 50888  016A0E  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 50889  016A12  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 50890  016A16  C08C  F017         	movff	sin@y,i2___fldiv@a
 50891  016A1A  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 50892  016A1E  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 50893  016A22  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 50894  016A26  0E00               	movlw	0
 50895  016A28  0100               	movlb	0	; () banked
 50896  016A2A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 50897  016A2C  0E04               	movlw	4
 50898  016A2E  6F72               	movwf	eval_poly@n& (0+255),b
 50899  016A30  0E79               	movlw	low sin@coeff_a
 50900  016A32  6F70               	movwf	eval_poly@d& (0+255),b
 50901  016A34  0ED2               	movlw	high sin@coeff_a
 50902  016A36  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 50903  016A38  C094  F06C         	movff	sin@x2,eval_poly@x
 50904  016A3C  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 50905  016A40  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 50906  016A44  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 50907  016A48  EC80  F0C8         	call	_eval_poly	;wreg free
 50908  016A4C  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 50909  016A50  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 50910  016A54  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 50911  016A58  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 50912  016A5C  EC94  F0B9         	call	i2___fldiv	;wreg free
 50913  016A60  C013  F090         	movff	?i2___fldiv,_sin$5430
 50914  016A64  C014  F091         	movff	?i2___fldiv+1,_sin$5430+1
 50915  016A68  C015  F092         	movff	?i2___fldiv+2,_sin$5430+2
 50916  016A6C  C016  F093         	movff	?i2___fldiv+3,_sin$5430+3
 50917  016A70  C088  F030         	movff	sin@f,i2___flmul@b
 50918  016A74  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 50919  016A78  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 50920  016A7C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 50921  016A80  C090  F034         	movff	_sin$5430,i2___flmul@a
 50922  016A84  C091  F035         	movff	_sin$5430+1,i2___flmul@a+1
 50923  016A88  C092  F036         	movff	_sin$5430+2,i2___flmul@a+2
 50924  016A8C  C093  F037         	movff	_sin$5430+3,i2___flmul@a+3
 50925  016A90  EC8D  F0AD         	call	i2___flmul	;wreg free
 50926  016A94  C030  F088         	movff	?i2___flmul,sin@f
 50927  016A98  C031  F089         	movff	?i2___flmul+1,sin@f+1
 50928  016A9C  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 50929  016AA0  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 50930  016AA4  0100               	movlb	0	; () banked
 50931  016AA6  5198               	movf	sin@sgn& (0+255),w,b
 50932  016AA8  B4D8               	btfsc	status,2,c
 50933  016AAA  D013               	goto	i2l2706
 50934                           
 50935                           ; BSR set to: 0
 50936  016AAC  C088  F02C         	movff	sin@f,i2___flneg@f1
 50937  016AB0  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 50938  016AB4  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 50939  016AB8  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 50940  016ABC  ECB0  F0D6         	call	i2___flneg	;wreg free
 50941  016AC0  C02C  F088         	movff	?i2___flneg,?_sin
 50942  016AC4  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 50943  016AC8  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 50944  016ACC  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 50945  016AD0  0012               	return	
 50946  016AD2                     i2l2706:
 50947                           
 50948                           ; BSR set to: 0
 50949  016AD2  C088  F088         	movff	sin@f,?_sin
 50950  016AD6  C089  F089         	movff	sin@f+1,?_sin+1
 50951  016ADA  C08A  F08A         	movff	sin@f+2,?_sin+2
 50952  016ADE  C08B  F08B         	movff	sin@f+3,?_sin+3
 50953  016AE2  0012               	return		;funcret
 50954  016AE4                     __end_of_sin:
 50955                           	opt stack 0
 50956                           tosu	equ	0xFFF
 50957                           tosh	equ	0xFFE
 50958                           tosl	equ	0xFFD
 50959                           pclatu	equ	0xFFB
 50960                           pclath	equ	0xFFA
 50961                           tblptru	equ	0xFF8
 50962                           tblptrh	equ	0xFF7
 50963                           tblptrl	equ	0xFF6
 50964                           tablat	equ	0xFF5
 50965                           prodh	equ	0xFF4
 50966                           prodl	equ	0xFF3
 50967                           intcon	equ	0xFF2
 50968                           indf0	equ	0xFEF
 50969                           postinc0	equ	0xFEE
 50970                           fsr0h	equ	0xFEA
 50971                           fsr0l	equ	0xFE9
 50972                           wreg	equ	0xFE8
 50973                           indf1	equ	0xFE7
 50974                           postdec1	equ	0xFE5
 50975                           plusw1	equ	0xFE3
 50976                           fsr1h	equ	0xFE2
 50977                           fsr1l	equ	0xFE1
 50978                           bsr	equ	0xFE0
 50979                           indf2	equ	0xFDF
 50980                           postinc2	equ	0xFDE
 50981                           postdec2	equ	0xFDD
 50982                           plusw2	equ	0xFDB
 50983                           fsr2h	equ	0xFDA
 50984                           fsr2l	equ	0xFD9
 50985                           status	equ	0xFD8
 50986                           
 50987 ;; *************** function i2___flsub *****************
 50988 ;; Defined at:
 50989 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 50990 ;; Parameters:    Size  Location     Type
 50991 ;;  b               4   32[BANK0 ] unsigned char 
 50992 ;;  a               4   36[BANK0 ] unsigned char 
 50993 ;; Auto vars:     Size  Location     Type
 50994 ;;		None
 50995 ;; Return value:  Size  Location     Type
 50996 ;;                  4   32[BANK0 ] unsigned char 
 50997 ;; Registers used:
 50998 ;;		wreg, status,2, status,0, cstack
 50999 ;; Tracked objects:
 51000 ;;		On entry : 0/0
 51001 ;;		On exit  : 0/0
 51002 ;;		Unchanged: 0/0
 51003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51007 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51008 ;;Total ram usage:        8 bytes
 51009 ;; Hardware stack levels used:    1
 51010 ;; Hardware stack levels required when called:    1
 51011 ;; This function calls:
 51012 ;;		i2___fladd
 51013 ;; This function is called by:
 51014 ;;		_sin
 51015 ;;		i2__doprnt
 51016 ;; This function uses a non-reentrant model
 51017 ;;
 51018                           
 51019                           	psect	text158
 51020  01A73E                     __ptext158:
 51021                           	opt stack 0
 51022  01A73E                     i2___flsub:
 51023                           	opt stack 13
 51024                           
 51025                           ;incstack = 0
 51026  01A73E  0E00               	movlw	0
 51027  01A740  0100               	movlb	0	; () banked
 51028  01A742  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 51029  01A744  0E00               	movlw	0
 51030  01A746  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 51031  01A748  0E00               	movlw	0
 51032  01A74A  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 51033  01A74C  0E80               	movlw	128
 51034  01A74E  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 51035                           
 51036                           ; BSR set to: 0
 51037  01A750  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 51038  01A754  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 51039  01A758  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 51040  01A75C  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 51041  01A760  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 51042  01A764  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 51043  01A768  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 51044  01A76C  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 51045  01A770  ECD4  F0B0         	call	i2___fladd	;wreg free
 51046  01A774  C056  F080         	movff	?i2___fladd,?i2___flsub
 51047  01A778  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 51048  01A77C  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 51049  01A780  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 51050  01A784  0012               	return	
 51051  01A786                     __end_ofi2___flsub:
 51052                           	opt stack 0
 51053                           tosu	equ	0xFFF
 51054                           tosh	equ	0xFFE
 51055                           tosl	equ	0xFFD
 51056                           pclatu	equ	0xFFB
 51057                           pclath	equ	0xFFA
 51058                           tblptru	equ	0xFF8
 51059                           tblptrh	equ	0xFF7
 51060                           tblptrl	equ	0xFF6
 51061                           tablat	equ	0xFF5
 51062                           prodh	equ	0xFF4
 51063                           prodl	equ	0xFF3
 51064                           intcon	equ	0xFF2
 51065                           indf0	equ	0xFEF
 51066                           postinc0	equ	0xFEE
 51067                           fsr0h	equ	0xFEA
 51068                           fsr0l	equ	0xFE9
 51069                           wreg	equ	0xFE8
 51070                           indf1	equ	0xFE7
 51071                           postdec1	equ	0xFE5
 51072                           plusw1	equ	0xFE3
 51073                           fsr1h	equ	0xFE2
 51074                           fsr1l	equ	0xFE1
 51075                           bsr	equ	0xFE0
 51076                           indf2	equ	0xFDF
 51077                           postinc2	equ	0xFDE
 51078                           postdec2	equ	0xFDD
 51079                           plusw2	equ	0xFDB
 51080                           fsr2h	equ	0xFDA
 51081                           fsr2l	equ	0xFD9
 51082                           status	equ	0xFD8
 51083                           
 51084 ;; *************** function i2___flneg *****************
 51085 ;; Defined at:
 51086 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 51087 ;; Parameters:    Size  Location     Type
 51088 ;;  f1              4   43[COMRAM] unsigned char 
 51089 ;; Auto vars:     Size  Location     Type
 51090 ;;		None
 51091 ;; Return value:  Size  Location     Type
 51092 ;;                  4   43[COMRAM] unsigned char 
 51093 ;; Registers used:
 51094 ;;		wreg, status,2, status,0
 51095 ;; Tracked objects:
 51096 ;;		On entry : 0/0
 51097 ;;		On exit  : 0/0
 51098 ;;		Unchanged: 0/0
 51099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51103 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51104 ;;Total ram usage:        4 bytes
 51105 ;; Hardware stack levels used:    1
 51106 ;; This function calls:
 51107 ;;		Nothing
 51108 ;; This function is called by:
 51109 ;;		_peakToRMS
 51110 ;;		_ADCPostProcessingCallback
 51111 ;;		_acos
 51112 ;;		_asin
 51113 ;;		_atan
 51114 ;;		_fabs
 51115 ;;		_sin
 51116 ;;		i2__doprnt
 51117 ;; This function uses a non-reentrant model
 51118 ;;
 51119                           
 51120                           	psect	text159
 51121  01AD60                     __ptext159:
 51122                           	opt stack 0
 51123  01AD60                     i2___flneg:
 51124                           	opt stack 14
 51125                           
 51126                           ;incstack = 0
 51127  01AD60  502C               	movf	i2___flneg@f1,w,c
 51128  01AD62  102D               	iorwf	i2___flneg@f1+1,w,c
 51129  01AD64  102E               	iorwf	i2___flneg@f1+2,w,c
 51130  01AD66  102F               	iorwf	i2___flneg@f1+3,w,c
 51131  01AD68  B4D8               	btfsc	status,2,c
 51132  01AD6A  D008               	goto	i2l2407
 51133  01AD6C  0E00               	movlw	0
 51134  01AD6E  1A2C               	xorwf	i2___flneg@f1,f,c
 51135  01AD70  0E00               	movlw	0
 51136  01AD72  1A2D               	xorwf	i2___flneg@f1+1,f,c
 51137  01AD74  0E00               	movlw	0
 51138  01AD76  1A2E               	xorwf	i2___flneg@f1+2,f,c
 51139  01AD78  0E80               	movlw	128
 51140  01AD7A  1A2F               	xorwf	i2___flneg@f1+3,f,c
 51141  01AD7C                     i2l2407:
 51142  01AD7C  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 51143  01AD80  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 51144  01AD84  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 51145  01AD88  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 51146  01AD8C  0012               	return	
 51147  01AD8E                     __end_ofi2___flneg:
 51148                           	opt stack 0
 51149                           tosu	equ	0xFFF
 51150                           tosh	equ	0xFFE
 51151                           tosl	equ	0xFFD
 51152                           pclatu	equ	0xFFB
 51153                           pclath	equ	0xFFA
 51154                           tblptru	equ	0xFF8
 51155                           tblptrh	equ	0xFF7
 51156                           tblptrl	equ	0xFF6
 51157                           tablat	equ	0xFF5
 51158                           prodh	equ	0xFF4
 51159                           prodl	equ	0xFF3
 51160                           intcon	equ	0xFF2
 51161                           indf0	equ	0xFEF
 51162                           postinc0	equ	0xFEE
 51163                           fsr0h	equ	0xFEA
 51164                           fsr0l	equ	0xFE9
 51165                           wreg	equ	0xFE8
 51166                           indf1	equ	0xFE7
 51167                           postdec1	equ	0xFE5
 51168                           plusw1	equ	0xFE3
 51169                           fsr1h	equ	0xFE2
 51170                           fsr1l	equ	0xFE1
 51171                           bsr	equ	0xFE0
 51172                           indf2	equ	0xFDF
 51173                           postinc2	equ	0xFDE
 51174                           postdec2	equ	0xFDD
 51175                           plusw2	equ	0xFDB
 51176                           fsr2h	equ	0xFDA
 51177                           fsr2l	equ	0xFD9
 51178                           status	equ	0xFD8
 51179                           
 51180 ;; *************** function i2___fldiv *****************
 51181 ;; Defined at:
 51182 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 51183 ;; Parameters:    Size  Location     Type
 51184 ;;  b               4   18[COMRAM] unsigned char 
 51185 ;;  a               4   22[COMRAM] unsigned char 
 51186 ;; Auto vars:     Size  Location     Type
 51187 ;;  __fldiv         4   37[COMRAM] unsigned long 
 51188 ;;  __fldiv         4   31[COMRAM] unsigned long 
 51189 ;;  __fldiv         2   35[COMRAM] int 
 51190 ;;  __fldiv         1   42[COMRAM] unsigned char 
 51191 ;;  __fldiv         1   41[COMRAM] unsigned char 
 51192 ;;  __fldiv         1   30[COMRAM] unsigned char 
 51193 ;; Return value:  Size  Location     Type
 51194 ;;                  4   18[COMRAM] unsigned char 
 51195 ;; Registers used:
 51196 ;;		wreg, status,2, status,0
 51197 ;; Tracked objects:
 51198 ;;		On entry : 0/0
 51199 ;;		On exit  : 0/0
 51200 ;;		Unchanged: 0/0
 51201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51202 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51203 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51205 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51206 ;;Total ram usage:       25 bytes
 51207 ;; Hardware stack levels used:    1
 51208 ;; This function calls:
 51209 ;;		Nothing
 51210 ;; This function is called by:
 51211 ;;		_peakToRMS
 51212 ;;		_currentMeasuredToPeak
 51213 ;;		_ADCPostProcessingCallback
 51214 ;;		_asin
 51215 ;;		_atan
 51216 ;;		_sin
 51217 ;; This function uses a non-reentrant model
 51218 ;;
 51219                           
 51220                           	psect	text160
 51221  017328                     __ptext160:
 51222                           	opt stack 0
 51223  017328                     i2___fldiv:
 51224                           	opt stack 15
 51225                           
 51226                           ;incstack = 0
 51227  017328  5016               	movf	i2___fldiv@b+3,w,c
 51228  01732A  0B80               	andlw	128
 51229  01732C  6E1F               	movwf	i2___fldiv@sign,c
 51230  01732E  5016               	movf	i2___fldiv@b+3,w,c
 51231  017330  2416               	addwf	i2___fldiv@b+3,w,c
 51232  017332  6E2A               	movwf	i2___fldiv@bexp,c
 51233  017334  BE15               	btfsc	i2___fldiv@b+2,7,c
 51234  017336  802A               	bsf	i2___fldiv@bexp,0,c
 51235  017338  502A               	movf	i2___fldiv@bexp,w,c
 51236  01733A  B4D8               	btfsc	status,2,c
 51237  01733C  D00D               	goto	i2l2768
 51238  01733E  282A               	incf	i2___fldiv@bexp,w,c
 51239  017340  A4D8               	btfss	status,2,c
 51240  017342  D008               	goto	i2l2769
 51241  017344  0E00               	movlw	0
 51242  017346  6E13               	movwf	i2___fldiv@b,c
 51243  017348  0E00               	movlw	0
 51244  01734A  6E14               	movwf	i2___fldiv@b+1,c
 51245  01734C  0E00               	movlw	0
 51246  01734E  6E15               	movwf	i2___fldiv@b+2,c
 51247  017350  0E00               	movlw	0
 51248  017352  6E16               	movwf	i2___fldiv@b+3,c
 51249  017354                     i2l2769:
 51250  017354  8E15               	bsf	i2___fldiv@b+2,7,c
 51251  017356  D006               	goto	L27
 51252  017358                     i2l2768:
 51253  017358  0E00               	movlw	0
 51254  01735A  6E13               	movwf	i2___fldiv@b,c
 51255  01735C  0E00               	movlw	0
 51256  01735E  6E14               	movwf	i2___fldiv@b+1,c
 51257  017360  0E00               	movlw	0
 51258  017362  6E15               	movwf	i2___fldiv@b+2,c
 51259  017364                     L27:
 51260  017364  0E00               	movlw	0
 51261  017366  6E16               	movwf	i2___fldiv@b+3,c
 51262  017368  501A               	movf	i2___fldiv@a+3,w,c
 51263  01736A  0B80               	andlw	128
 51264  01736C  1A1F               	xorwf	i2___fldiv@sign,f,c
 51265  01736E  501A               	movf	i2___fldiv@a+3,w,c
 51266  017370  241A               	addwf	i2___fldiv@a+3,w,c
 51267  017372  6E2B               	movwf	i2___fldiv@aexp,c
 51268  017374  BE19               	btfsc	i2___fldiv@a+2,7,c
 51269  017376  802B               	bsf	i2___fldiv@aexp,0,c
 51270  017378  502B               	movf	i2___fldiv@aexp,w,c
 51271  01737A  B4D8               	btfsc	status,2,c
 51272  01737C  D00D               	goto	i2l2772
 51273  01737E  282B               	incf	i2___fldiv@aexp,w,c
 51274  017380  A4D8               	btfss	status,2,c
 51275  017382  D008               	goto	i2l2773
 51276  017384  0E00               	movlw	0
 51277  017386  6E17               	movwf	i2___fldiv@a,c
 51278  017388  0E00               	movlw	0
 51279  01738A  6E18               	movwf	i2___fldiv@a+1,c
 51280  01738C  0E00               	movlw	0
 51281  01738E  6E19               	movwf	i2___fldiv@a+2,c
 51282  017390  0E00               	movlw	0
 51283  017392  6E1A               	movwf	i2___fldiv@a+3,c
 51284  017394                     i2l2773:
 51285  017394  8E19               	bsf	i2___fldiv@a+2,7,c
 51286  017396  D006               	goto	L28
 51287  017398                     i2l2772:
 51288  017398  0E00               	movlw	0
 51289  01739A  6E17               	movwf	i2___fldiv@a,c
 51290  01739C  0E00               	movlw	0
 51291  01739E  6E18               	movwf	i2___fldiv@a+1,c
 51292  0173A0  0E00               	movlw	0
 51293  0173A2  6E19               	movwf	i2___fldiv@a+2,c
 51294  0173A4                     L28:
 51295  0173A4  0E00               	movlw	0
 51296  0173A6  6E1A               	movwf	i2___fldiv@a+3,c
 51297  0173A8  5017               	movf	i2___fldiv@a,w,c
 51298  0173AA  1018               	iorwf	i2___fldiv@a+1,w,c
 51299  0173AC  1019               	iorwf	i2___fldiv@a+2,w,c
 51300  0173AE  101A               	iorwf	i2___fldiv@a+3,w,c
 51301  0173B0  A4D8               	btfss	status,2,c
 51302  0173B2  D015               	goto	i2l2775
 51303  0173B4  0E00               	movlw	0
 51304  0173B6  6E13               	movwf	i2___fldiv@b,c
 51305  0173B8  0E00               	movlw	0
 51306  0173BA  6E14               	movwf	i2___fldiv@b+1,c
 51307  0173BC  0E00               	movlw	0
 51308  0173BE  6E15               	movwf	i2___fldiv@b+2,c
 51309  0173C0  0E00               	movlw	0
 51310  0173C2  6E16               	movwf	i2___fldiv@b+3,c
 51311  0173C4  0E80               	movlw	128
 51312  0173C6  1215               	iorwf	i2___fldiv@b+2,f,c
 51313  0173C8  0E7F               	movlw	127
 51314  0173CA  1216               	iorwf	i2___fldiv@b+3,f,c
 51315  0173CC  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51316  0173D0  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51317  0173D4  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51318  0173D8  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51319  0173DC  0012               	return	
 51320  0173DE                     i2l2775:
 51321  0173DE  502A               	movf	i2___fldiv@bexp,w,c
 51322  0173E0  A4D8               	btfss	status,2,c
 51323  0173E2  D011               	goto	i2l2777
 51324  0173E4  0E00               	movlw	0
 51325  0173E6  6E13               	movwf	i2___fldiv@b,c
 51326  0173E8  0E00               	movlw	0
 51327  0173EA  6E14               	movwf	i2___fldiv@b+1,c
 51328  0173EC  0E00               	movlw	0
 51329  0173EE  6E15               	movwf	i2___fldiv@b+2,c
 51330  0173F0  0E00               	movlw	0
 51331  0173F2  6E16               	movwf	i2___fldiv@b+3,c
 51332  0173F4  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51333  0173F8  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51334  0173FC  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51335  017400  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51336  017404  0012               	return	
 51337  017406                     i2l2777:
 51338  017406  502B               	movf	i2___fldiv@aexp,w,c
 51339  017408  6E1B               	movwf	??i2___fldiv& (0+255),c
 51340  01740A  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 51341  01740C  1E1B               	comf	??i2___fldiv,f,c
 51342  01740E  1E1C               	comf	??i2___fldiv+1,f,c
 51343  017410  4A1B               	infsnz	??i2___fldiv,f,c
 51344  017412  2A1C               	incf	??i2___fldiv+1,f,c
 51345  017414  502A               	movf	i2___fldiv@bexp,w,c
 51346  017416  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 51347  017418  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 51348  01741A  501B               	movf	??i2___fldiv,w,c
 51349  01741C  261D               	addwf	??i2___fldiv+2,f,c
 51350  01741E  501C               	movf	??i2___fldiv+1,w,c
 51351  017420  221E               	addwfc	??i2___fldiv+3,f,c
 51352  017422  0E7F               	movlw	127
 51353  017424  241D               	addwf	??i2___fldiv+2,w,c
 51354  017426  6E24               	movwf	i2___fldiv@new_exp,c
 51355  017428  0E00               	movlw	0
 51356  01742A  201E               	addwfc	??i2___fldiv+3,w,c
 51357  01742C  6E25               	movwf	i2___fldiv@new_exp+1,c
 51358  01742E  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 51359  017432  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 51360  017436  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 51361  01743A  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 51362  01743E  0E00               	movlw	0
 51363  017440  6E13               	movwf	i2___fldiv@b,c
 51364  017442  0E00               	movlw	0
 51365  017444  6E14               	movwf	i2___fldiv@b+1,c
 51366  017446  0E00               	movlw	0
 51367  017448  6E15               	movwf	i2___fldiv@b+2,c
 51368  01744A  0E00               	movlw	0
 51369  01744C  6E16               	movwf	i2___fldiv@b+3,c
 51370  01744E  0E00               	movlw	0
 51371  017450  6E26               	movwf	i2___fldiv@grs,c
 51372  017452  0E00               	movlw	0
 51373  017454  6E27               	movwf	i2___fldiv@grs+1,c
 51374  017456  0E00               	movlw	0
 51375  017458  6E28               	movwf	i2___fldiv@grs+2,c
 51376  01745A  0E00               	movlw	0
 51377  01745C  6E29               	movwf	i2___fldiv@grs+3,c
 51378  01745E  0E00               	movlw	0
 51379  017460  6E2B               	movwf	i2___fldiv@aexp,c
 51380  017462  D028               	goto	i2l2778
 51381  017464  502B               	movf	i2___fldiv@aexp,w,c
 51382  017466  B4D8               	btfsc	status,2,c
 51383  017468  D011               	goto	i2l2780
 51384  01746A  90D8               	bcf	status,0,c
 51385  01746C  3620               	rlcf	i2___fldiv@rem,f,c
 51386  01746E  3621               	rlcf	i2___fldiv@rem+1,f,c
 51387  017470  3622               	rlcf	i2___fldiv@rem+2,f,c
 51388  017472  3623               	rlcf	i2___fldiv@rem+3,f,c
 51389  017474  90D8               	bcf	status,0,c
 51390  017476  3613               	rlcf	i2___fldiv@b,f,c
 51391  017478  3614               	rlcf	i2___fldiv@b+1,f,c
 51392  01747A  3615               	rlcf	i2___fldiv@b+2,f,c
 51393  01747C  3616               	rlcf	i2___fldiv@b+3,f,c
 51394  01747E  BE29               	btfsc	i2___fldiv@grs+3,7,c
 51395  017480  8013               	bsf	i2___fldiv@b,0,c
 51396  017482  90D8               	bcf	status,0,c
 51397  017484  3626               	rlcf	i2___fldiv@grs,f,c
 51398  017486  3627               	rlcf	i2___fldiv@grs+1,f,c
 51399  017488  3628               	rlcf	i2___fldiv@grs+2,f,c
 51400  01748A  3629               	rlcf	i2___fldiv@grs+3,f,c
 51401  01748C                     i2l2780:
 51402  01748C  5017               	movf	i2___fldiv@a,w,c
 51403  01748E  5C20               	subwf	i2___fldiv@rem,w,c
 51404  017490  5018               	movf	i2___fldiv@a+1,w,c
 51405  017492  5821               	subwfb	i2___fldiv@rem+1,w,c
 51406  017494  5019               	movf	i2___fldiv@a+2,w,c
 51407  017496  5822               	subwfb	i2___fldiv@rem+2,w,c
 51408  017498  501A               	movf	i2___fldiv@a+3,w,c
 51409  01749A  5823               	subwfb	i2___fldiv@rem+3,w,c
 51410  01749C  A0D8               	btfss	status,0,c
 51411  01749E  D009               	goto	i2l2782
 51412  0174A0  8C29               	bsf	i2___fldiv@grs+3,6,c
 51413  0174A2  5017               	movf	i2___fldiv@a,w,c
 51414  0174A4  5E20               	subwf	i2___fldiv@rem,f,c
 51415  0174A6  5018               	movf	i2___fldiv@a+1,w,c
 51416  0174A8  5A21               	subwfb	i2___fldiv@rem+1,f,c
 51417  0174AA  5019               	movf	i2___fldiv@a+2,w,c
 51418  0174AC  5A22               	subwfb	i2___fldiv@rem+2,f,c
 51419  0174AE  501A               	movf	i2___fldiv@a+3,w,c
 51420  0174B0  5A23               	subwfb	i2___fldiv@rem+3,f,c
 51421  0174B2                     i2l2782:
 51422  0174B2  2A2B               	incf	i2___fldiv@aexp,f,c
 51423  0174B4                     i2l2778:
 51424  0174B4  0E19               	movlw	25
 51425  0174B6  642B               	cpfsgt	i2___fldiv@aexp,c
 51426  0174B8  D7D5               	goto	i2l2779
 51427  0174BA  5020               	movf	i2___fldiv@rem,w,c
 51428  0174BC  1021               	iorwf	i2___fldiv@rem+1,w,c
 51429  0174BE  1022               	iorwf	i2___fldiv@rem+2,w,c
 51430  0174C0  1023               	iorwf	i2___fldiv@rem+3,w,c
 51431  0174C2  B4D8               	btfsc	status,2,c
 51432  0174C4  D011               	goto	i2l2785
 51433  0174C6  8026               	bsf	i2___fldiv@grs,0,c
 51434  0174C8  D00F               	goto	i2l2785
 51435  0174CA  90D8               	bcf	status,0,c
 51436  0174CC  3613               	rlcf	i2___fldiv@b,f,c
 51437  0174CE  3614               	rlcf	i2___fldiv@b+1,f,c
 51438  0174D0  3615               	rlcf	i2___fldiv@b+2,f,c
 51439  0174D2  3616               	rlcf	i2___fldiv@b+3,f,c
 51440  0174D4  BE29               	btfsc	i2___fldiv@grs+3,7,c
 51441  0174D6  8013               	bsf	i2___fldiv@b,0,c
 51442  0174D8  90D8               	bcf	status,0,c
 51443  0174DA  3626               	rlcf	i2___fldiv@grs,f,c
 51444  0174DC  3627               	rlcf	i2___fldiv@grs+1,f,c
 51445  0174DE  3628               	rlcf	i2___fldiv@grs+2,f,c
 51446  0174E0  3629               	rlcf	i2___fldiv@grs+3,f,c
 51447  0174E2  0624               	decf	i2___fldiv@new_exp,f,c
 51448  0174E4  A0D8               	btfss	status,0,c
 51449  0174E6  0625               	decf	i2___fldiv@new_exp+1,f,c
 51450  0174E8                     i2l2785:
 51451  0174E8  AE15               	btfss	i2___fldiv@b+2,7,c
 51452  0174EA  D7EF               	goto	i2l2786
 51453  0174EC  0E00               	movlw	0
 51454  0174EE  6E2B               	movwf	i2___fldiv@aexp,c
 51455  0174F0  AE29               	btfss	i2___fldiv@grs+3,7,c
 51456  0174F2  D016               	goto	i2l2792
 51457  0174F4  0EFF               	movlw	255
 51458  0174F6  1426               	andwf	i2___fldiv@grs,w,c
 51459  0174F8  6E1B               	movwf	??i2___fldiv& (0+255),c
 51460  0174FA  0EFF               	movlw	255
 51461  0174FC  1427               	andwf	i2___fldiv@grs+1,w,c
 51462  0174FE  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 51463  017500  0EFF               	movlw	255
 51464  017502  1428               	andwf	i2___fldiv@grs+2,w,c
 51465  017504  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 51466  017506  0E7F               	movlw	127
 51467  017508  1429               	andwf	i2___fldiv@grs+3,w,c
 51468  01750A  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 51469  01750C  501B               	movf	??i2___fldiv,w,c
 51470  01750E  101C               	iorwf	??i2___fldiv+1,w,c
 51471  017510  101D               	iorwf	??i2___fldiv+2,w,c
 51472  017512  101E               	iorwf	??i2___fldiv+3,w,c
 51473  017514  A4D8               	btfss	status,2,c
 51474  017516  D002               	goto	i2u1041_40
 51475  017518  A013               	btfss	i2___fldiv@b,0,c
 51476  01751A  D002               	goto	i2l2792
 51477  01751C                     i2u1041_40:
 51478  01751C  0E01               	movlw	1
 51479  01751E  6E2B               	movwf	i2___fldiv@aexp,c
 51480  017520                     i2l2792:
 51481  017520  502B               	movf	i2___fldiv@aexp,w,c
 51482  017522  B4D8               	btfsc	status,2,c
 51483  017524  D01F               	goto	i2l2794
 51484  017526  0E01               	movlw	1
 51485  017528  2613               	addwf	i2___fldiv@b,f,c
 51486  01752A  0E00               	movlw	0
 51487  01752C  2214               	addwfc	i2___fldiv@b+1,f,c
 51488  01752E  2215               	addwfc	i2___fldiv@b+2,f,c
 51489  017530  2216               	addwfc	i2___fldiv@b+3,f,c
 51490  017532  A016               	btfss	i2___fldiv@b+3,0,c
 51491  017534  D017               	goto	i2l2794
 51492  017536  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 51493  01753A  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 51494  01753E  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 51495  017542  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 51496  017546  341E               	rlcf	??i2___fldiv+3,w,c
 51497  017548  321E               	rrcf	??i2___fldiv+3,f,c
 51498  01754A  321D               	rrcf	??i2___fldiv+2,f,c
 51499  01754C  321C               	rrcf	??i2___fldiv+1,f,c
 51500  01754E  321B               	rrcf	??i2___fldiv,f,c
 51501  017550  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 51502  017554  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 51503  017558  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 51504  01755C  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 51505  017560  4A24               	infsnz	i2___fldiv@new_exp,f,c
 51506  017562  2A25               	incf	i2___fldiv@new_exp+1,f,c
 51507  017564                     i2l2794:
 51508  017564  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51509  017566  D010               	goto	i2l2795
 51510  017568  5025               	movf	i2___fldiv@new_exp+1,w,c
 51511  01756A  E103               	bnz	i2u1044_40
 51512  01756C  2824               	incf	i2___fldiv@new_exp,w,c
 51513  01756E  A0D8               	btfss	status,0,c
 51514  017570  D00B               	goto	i2l2795
 51515  017572                     i2u1044_40:
 51516  017572  0E00               	movlw	0
 51517  017574  6E25               	movwf	i2___fldiv@new_exp+1,c
 51518  017576  6824               	setf	i2___fldiv@new_exp,c
 51519  017578  0E00               	movlw	0
 51520  01757A  6E13               	movwf	i2___fldiv@b,c
 51521  01757C  0E00               	movlw	0
 51522  01757E  6E14               	movwf	i2___fldiv@b+1,c
 51523  017580  0E00               	movlw	0
 51524  017582  6E15               	movwf	i2___fldiv@b+2,c
 51525  017584  0E00               	movlw	0
 51526  017586  6E16               	movwf	i2___fldiv@b+3,c
 51527  017588                     i2l2795:
 51528  017588  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 51529  01758A  D005               	goto	i2u1045_40
 51530  01758C  5025               	movf	i2___fldiv@new_exp+1,w,c
 51531  01758E  E111               	bnz	i2l9757
 51532  017590  0424               	decf	i2___fldiv@new_exp,w,c
 51533  017592  B0D8               	btfsc	status,0,c
 51534  017594  D00E               	goto	i2l2796
 51535  017596                     i2u1045_40:
 51536  017596  0E00               	movlw	0
 51537  017598  6E25               	movwf	i2___fldiv@new_exp+1,c
 51538  01759A  0E00               	movlw	0
 51539  01759C  6E24               	movwf	i2___fldiv@new_exp,c
 51540  01759E  0E00               	movlw	0
 51541  0175A0  6E13               	movwf	i2___fldiv@b,c
 51542  0175A2  0E00               	movlw	0
 51543  0175A4  6E14               	movwf	i2___fldiv@b+1,c
 51544  0175A6  0E00               	movlw	0
 51545  0175A8  6E15               	movwf	i2___fldiv@b+2,c
 51546  0175AA  0E00               	movlw	0
 51547  0175AC  6E16               	movwf	i2___fldiv@b+3,c
 51548  0175AE  0E00               	movlw	0
 51549  0175B0  6E1F               	movwf	i2___fldiv@sign,c
 51550  0175B2                     i2l2796:
 51551  0175B2                     i2l9757:
 51552  0175B2  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 51553  0175B6  A02A               	btfss	i2___fldiv@bexp,0,c
 51554  0175B8  D002               	goto	i2l2797
 51555  0175BA  8E15               	bsf	i2___fldiv@b+2,7,c
 51556  0175BC  D001               	goto	i2l2798
 51557  0175BE                     i2l2797:
 51558  0175BE  9E15               	bcf	i2___fldiv@b+2,7,c
 51559  0175C0                     i2l2798:
 51560  0175C0  90D8               	bcf	status,0,c
 51561  0175C2  302A               	rrcf	i2___fldiv@bexp,w,c
 51562  0175C4  6E16               	movwf	i2___fldiv@b+3,c
 51563  0175C6  501F               	movf	i2___fldiv@sign,w,c
 51564  0175C8  1216               	iorwf	i2___fldiv@b+3,f,c
 51565  0175CA  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 51566  0175CE  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 51567  0175D2  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 51568  0175D6  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 51569  0175DA  0012               	return	
 51570  0175DC                     __end_ofi2___fldiv:
 51571                           	opt stack 0
 51572                           tosu	equ	0xFFF
 51573                           tosh	equ	0xFFE
 51574                           tosl	equ	0xFFD
 51575                           pclatu	equ	0xFFB
 51576                           pclath	equ	0xFFA
 51577                           tblptru	equ	0xFF8
 51578                           tblptrh	equ	0xFF7
 51579                           tblptrl	equ	0xFF6
 51580                           tablat	equ	0xFF5
 51581                           prodh	equ	0xFF4
 51582                           prodl	equ	0xFF3
 51583                           intcon	equ	0xFF2
 51584                           indf0	equ	0xFEF
 51585                           postinc0	equ	0xFEE
 51586                           fsr0h	equ	0xFEA
 51587                           fsr0l	equ	0xFE9
 51588                           wreg	equ	0xFE8
 51589                           indf1	equ	0xFE7
 51590                           postdec1	equ	0xFE5
 51591                           plusw1	equ	0xFE3
 51592                           fsr1h	equ	0xFE2
 51593                           fsr1l	equ	0xFE1
 51594                           bsr	equ	0xFE0
 51595                           indf2	equ	0xFDF
 51596                           postinc2	equ	0xFDE
 51597                           postdec2	equ	0xFDD
 51598                           plusw2	equ	0xFDB
 51599                           fsr2h	equ	0xFDA
 51600                           fsr2l	equ	0xFD9
 51601                           status	equ	0xFD8
 51602                           
 51603 ;; *************** function _floor *****************
 51604 ;; Defined at:
 51605 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 51606 ;; Parameters:    Size  Location     Type
 51607 ;;  x               4   22[BANK0 ] unsigned char 
 51608 ;; Auto vars:     Size  Location     Type
 51609 ;;  i               4   26[BANK0 ] unsigned char 
 51610 ;;  expon           2   30[BANK0 ] int 
 51611 ;; Return value:  Size  Location     Type
 51612 ;;                  4   22[BANK0 ] int 
 51613 ;; Registers used:
 51614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51615 ;; Tracked objects:
 51616 ;;		On entry : 0/0
 51617 ;;		On exit  : 0/0
 51618 ;;		Unchanged: 0/0
 51619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51621 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51623 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51624 ;;Total ram usage:       10 bytes
 51625 ;; Hardware stack levels used:    1
 51626 ;; Hardware stack levels required when called:    1
 51627 ;; This function calls:
 51628 ;;		_frexp
 51629 ;;		i2___fladd
 51630 ;;		i2___flge
 51631 ;;		i2___fltol
 51632 ;;		i2___xxtofl
 51633 ;; This function is called by:
 51634 ;;		_sin
 51635 ;; This function uses a non-reentrant model
 51636 ;;
 51637                           
 51638                           	psect	text161
 51639  018EE6                     __ptext161:
 51640                           	opt stack 0
 51641  018EE6                     _floor:
 51642                           	opt stack 12
 51643                           
 51644                           ;incstack = 0
 51645  018EE6  C076  F001         	movff	floor@x,frexp@value
 51646  018EEA  C077  F002         	movff	floor@x+1,frexp@value+1
 51647  018EEE  C078  F003         	movff	floor@x+2,frexp@value+2
 51648  018EF2  C079  F004         	movff	floor@x+3,frexp@value+3
 51649  018EF6  0E7E               	movlw	low floor@expon
 51650  018EF8  6E05               	movwf	frexp@eptr,c
 51651  018EFA  0E00               	movlw	high floor@expon
 51652  018EFC  6E06               	movwf	frexp@eptr+1,c
 51653  018EFE  ECAC  F0CE         	call	_frexp	;wreg free
 51654  018F02  0100               	movlb	0	; () banked
 51655  018F04  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 51656  018F06  D014               	goto	i2l2932
 51657                           
 51658                           ; BSR set to: 0
 51659  018F08  AF79               	btfss	(floor@x+3)& (0+255),7,b
 51660  018F0A  D009               	goto	i2l2933
 51661                           
 51662                           ; BSR set to: 0
 51663  018F0C  0E00               	movlw	0
 51664  018F0E  6F76               	movwf	?_floor& (0+255),b
 51665  018F10  0E00               	movlw	0
 51666  018F12  6F77               	movwf	(?_floor+1)& (0+255),b
 51667  018F14  0E80               	movlw	128
 51668  018F16  6F78               	movwf	(?_floor+2)& (0+255),b
 51669  018F18  0EBF               	movlw	191
 51670  018F1A  6F79               	movwf	(?_floor+3)& (0+255),b
 51671                           
 51672                           ; BSR set to: 0
 51673  018F1C  0012               	return	
 51674  018F1E                     i2l2933:
 51675                           
 51676                           ; BSR set to: 0
 51677                           
 51678                           ; BSR set to: 0
 51679  018F1E  0E00               	movlw	0
 51680  018F20  6F76               	movwf	?_floor& (0+255),b
 51681  018F22  0E00               	movlw	0
 51682  018F24  6F77               	movwf	(?_floor+1)& (0+255),b
 51683  018F26  0E00               	movlw	0
 51684  018F28  6F78               	movwf	(?_floor+2)& (0+255),b
 51685  018F2A  0E00               	movlw	0
 51686  018F2C  6F79               	movwf	(?_floor+3)& (0+255),b
 51687                           
 51688                           ; BSR set to: 0
 51689  018F2E  0012               	return	
 51690  018F30                     i2l2932:
 51691                           
 51692                           ; BSR set to: 0
 51693                           
 51694                           ; BSR set to: 0
 51695  018F30  517F               	movf	(floor@expon+1)& (0+255),w,b
 51696  018F32  E104               	bnz	i2u1999_40
 51697  018F34  0E1D               	movlw	29
 51698  018F36  5D7E               	subwf	floor@expon& (0+255),w,b
 51699  018F38  A0D8               	btfss	status,0,c
 51700  018F3A  D009               	goto	i2l2935
 51701  018F3C                     i2u1999_40:
 51702                           
 51703                           ; BSR set to: 0
 51704  018F3C  C076  F076         	movff	floor@x,?_floor
 51705  018F40  C077  F077         	movff	floor@x+1,?_floor+1
 51706  018F44  C078  F078         	movff	floor@x+2,?_floor+2
 51707  018F48  C079  F079         	movff	floor@x+3,?_floor+3
 51708  018F4C  0012               	return	
 51709  018F4E                     i2l2935:
 51710                           
 51711                           ; BSR set to: 0
 51712                           
 51713                           ; BSR set to: 0
 51714  018F4E  C076  F06C         	movff	floor@x,i2___fltol@f1
 51715  018F52  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 51716  018F56  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 51717  018F5A  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 51718  018F5E  EC6F  F0C9         	call	i2___fltol	;wreg free
 51719  018F62  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 51720  018F66  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 51721  018F6A  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 51722  018F6E  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 51723  018F72  0E01               	movlw	1
 51724  018F74  EC8E  F0C1         	call	i2___xxtofl
 51725  018F78  C005  F07A         	movff	?i2___xxtofl,floor@i
 51726  018F7C  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 51727  018F80  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 51728  018F84  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 51729  018F88  C076  F034         	movff	floor@x,i2___flge@ff1
 51730  018F8C  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 51731  018F90  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 51732  018F94  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 51733  018F98  C07A  F038         	movff	floor@i,i2___flge@ff2
 51734  018F9C  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 51735  018FA0  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 51736  018FA4  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 51737  018FA8  ECE3  F0C6         	call	i2___flge	;wreg free
 51738  018FAC  B0D8               	btfsc	status,0,c
 51739  018FAE  D01B               	goto	i2l2936
 51740  018FB0  C07A  F056         	movff	floor@i,i2___fladd@b
 51741  018FB4  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 51742  018FB8  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 51743  018FBC  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 51744  018FC0  0E00               	movlw	0
 51745  018FC2  6E5A               	movwf	i2___fladd@a,c
 51746  018FC4  0E00               	movlw	0
 51747  018FC6  6E5B               	movwf	i2___fladd@a+1,c
 51748  018FC8  0E80               	movlw	128
 51749  018FCA  6E5C               	movwf	i2___fladd@a+2,c
 51750  018FCC  0EBF               	movlw	191
 51751  018FCE  6E5D               	movwf	i2___fladd@a+3,c
 51752  018FD0  ECD4  F0B0         	call	i2___fladd	;wreg free
 51753  018FD4  C056  F076         	movff	?i2___fladd,?_floor
 51754  018FD8  C057  F077         	movff	?i2___fladd+1,?_floor+1
 51755  018FDC  C058  F078         	movff	?i2___fladd+2,?_floor+2
 51756  018FE0  C059  F079         	movff	?i2___fladd+3,?_floor+3
 51757  018FE4  0012               	return	
 51758  018FE6                     i2l2936:
 51759  018FE6  C07A  F076         	movff	floor@i,?_floor
 51760  018FEA  C07B  F077         	movff	floor@i+1,?_floor+1
 51761  018FEE  C07C  F078         	movff	floor@i+2,?_floor+2
 51762  018FF2  C07D  F079         	movff	floor@i+3,?_floor+3
 51763  018FF6  0012               	return		;funcret
 51764  018FF8                     __end_of_floor:
 51765                           	opt stack 0
 51766                           tosu	equ	0xFFF
 51767                           tosh	equ	0xFFE
 51768                           tosl	equ	0xFFD
 51769                           pclatu	equ	0xFFB
 51770                           pclath	equ	0xFFA
 51771                           tblptru	equ	0xFF8
 51772                           tblptrh	equ	0xFF7
 51773                           tblptrl	equ	0xFF6
 51774                           tablat	equ	0xFF5
 51775                           prodh	equ	0xFF4
 51776                           prodl	equ	0xFF3
 51777                           intcon	equ	0xFF2
 51778                           indf0	equ	0xFEF
 51779                           postinc0	equ	0xFEE
 51780                           fsr0h	equ	0xFEA
 51781                           fsr0l	equ	0xFE9
 51782                           wreg	equ	0xFE8
 51783                           indf1	equ	0xFE7
 51784                           postdec1	equ	0xFE5
 51785                           plusw1	equ	0xFE3
 51786                           fsr1h	equ	0xFE2
 51787                           fsr1l	equ	0xFE1
 51788                           bsr	equ	0xFE0
 51789                           indf2	equ	0xFDF
 51790                           postinc2	equ	0xFDE
 51791                           postdec2	equ	0xFDD
 51792                           plusw2	equ	0xFDB
 51793                           fsr2h	equ	0xFDA
 51794                           fsr2l	equ	0xFD9
 51795                           status	equ	0xFD8
 51796                           
 51797 ;; *************** function i2___xxtofl *****************
 51798 ;; Defined at:
 51799 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 51800 ;; Parameters:    Size  Location     Type
 51801 ;;  sign            1    wreg     unsigned char 
 51802 ;;  val             4    4[COMRAM] long 
 51803 ;; Auto vars:     Size  Location     Type
 51804 ;;  sign            1   12[COMRAM] unsigned char 
 51805 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 51806 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 51807 ;; Return value:  Size  Location     Type
 51808 ;;                  4    4[COMRAM] unsigned char 
 51809 ;; Registers used:
 51810 ;;		wreg, status,2, status,0
 51811 ;; Tracked objects:
 51812 ;;		On entry : 0/0
 51813 ;;		On exit  : 0/0
 51814 ;;		Unchanged: 0/0
 51815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51817 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51818 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51819 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51820 ;;Total ram usage:       14 bytes
 51821 ;; Hardware stack levels used:    1
 51822 ;; This function calls:
 51823 ;;		Nothing
 51824 ;; This function is called by:
 51825 ;;		_ADCPostProcessingCallback
 51826 ;;		_floor
 51827 ;;		i2__doprnt
 51828 ;; This function uses a non-reentrant model
 51829 ;;
 51830                           
 51831                           	psect	text162
 51832  01831C                     __ptext162:
 51833                           	opt stack 0
 51834  01831C                     i2___xxtofl:
 51835                           	opt stack 14
 51836                           
 51837                           ;incstack = 0
 51838                           ;i2___xxtofl@sign stored from wreg
 51839  01831C  6E0D               	movwf	i2___xxtofl@sign,c
 51840  01831E  500D               	movf	i2___xxtofl@sign,w,c
 51841  018320  A4D8               	btfss	status,2,c
 51842  018322  AE08               	btfss	i2___xxtofl@val+3,7,c
 51843  018324  D01A               	goto	i2l2911
 51844  018326  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 51845  01832A  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 51846  01832E  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 51847  018332  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 51848  018336  1E09               	comf	??i2___xxtofl,f,c
 51849  018338  1E0A               	comf	??i2___xxtofl+1,f,c
 51850  01833A  1E0B               	comf	??i2___xxtofl+2,f,c
 51851  01833C  1E0C               	comf	??i2___xxtofl+3,f,c
 51852  01833E  2A09               	incf	??i2___xxtofl,f,c
 51853  018340  0E00               	movlw	0
 51854  018342  220A               	addwfc	??i2___xxtofl+1,f,c
 51855  018344  220B               	addwfc	??i2___xxtofl+2,f,c
 51856  018346  220C               	addwfc	??i2___xxtofl+3,f,c
 51857  018348  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 51858  01834C  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 51859  018350  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 51860  018354  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 51861  018358  D008               	goto	i2l2912
 51862  01835A                     i2l2911:
 51863  01835A  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 51864  01835E  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 51865  018362  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 51866  018366  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 51867  01836A                     i2l2912:
 51868  01836A  5005               	movf	i2___xxtofl@val,w,c
 51869  01836C  1006               	iorwf	i2___xxtofl@val+1,w,c
 51870  01836E  1007               	iorwf	i2___xxtofl@val+2,w,c
 51871  018370  1008               	iorwf	i2___xxtofl@val+3,w,c
 51872  018372  A4D8               	btfss	status,2,c
 51873  018374  D009               	goto	i2l2913
 51874  018376  0E00               	movlw	0
 51875  018378  6E05               	movwf	?i2___xxtofl,c
 51876  01837A  0E00               	movlw	0
 51877  01837C  6E06               	movwf	?i2___xxtofl+1,c
 51878  01837E  0E00               	movlw	0
 51879  018380  6E07               	movwf	?i2___xxtofl+2,c
 51880  018382  0E00               	movlw	0
 51881  018384  6E08               	movwf	?i2___xxtofl+3,c
 51882  018386  0012               	return	
 51883  018388                     i2l2913:
 51884  018388  0E96               	movlw	150
 51885  01838A  6E0E               	movwf	i2___xxtofl@exp,c
 51886  01838C  D006               	goto	i2l2915
 51887  01838E  2A0E               	incf	i2___xxtofl@exp,f,c
 51888  018390  90D8               	bcf	status,0,c
 51889  018392  3212               	rrcf	i2___xxtofl@arg+3,f,c
 51890  018394  3211               	rrcf	i2___xxtofl@arg+2,f,c
 51891  018396  3210               	rrcf	i2___xxtofl@arg+1,f,c
 51892  018398  320F               	rrcf	i2___xxtofl@arg,f,c
 51893  01839A                     i2l2915:
 51894  01839A  0E00               	movlw	0
 51895  01839C  140F               	andwf	i2___xxtofl@arg,w,c
 51896  01839E  6E09               	movwf	??i2___xxtofl& (0+255),c
 51897  0183A0  0E00               	movlw	0
 51898  0183A2  1410               	andwf	i2___xxtofl@arg+1,w,c
 51899  0183A4  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 51900  0183A6  0E00               	movlw	0
 51901  0183A8  1411               	andwf	i2___xxtofl@arg+2,w,c
 51902  0183AA  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 51903  0183AC  0EFE               	movlw	254
 51904  0183AE  1412               	andwf	i2___xxtofl@arg+3,w,c
 51905  0183B0  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 51906  0183B2  5009               	movf	??i2___xxtofl,w,c
 51907  0183B4  100A               	iorwf	??i2___xxtofl+1,w,c
 51908  0183B6  100B               	iorwf	??i2___xxtofl+2,w,c
 51909  0183B8  100C               	iorwf	??i2___xxtofl+3,w,c
 51910  0183BA  B4D8               	btfsc	status,2,c
 51911  0183BC  D00D               	goto	i2l2918
 51912  0183BE  D7E7               	goto	i2l2916
 51913  0183C0  2A0E               	incf	i2___xxtofl@exp,f,c
 51914  0183C2  0E01               	movlw	1
 51915  0183C4  260F               	addwf	i2___xxtofl@arg,f,c
 51916  0183C6  0E00               	movlw	0
 51917  0183C8  2210               	addwfc	i2___xxtofl@arg+1,f,c
 51918  0183CA  2211               	addwfc	i2___xxtofl@arg+2,f,c
 51919  0183CC  2212               	addwfc	i2___xxtofl@arg+3,f,c
 51920  0183CE  90D8               	bcf	status,0,c
 51921  0183D0  3212               	rrcf	i2___xxtofl@arg+3,f,c
 51922  0183D2  3211               	rrcf	i2___xxtofl@arg+2,f,c
 51923  0183D4  3210               	rrcf	i2___xxtofl@arg+1,f,c
 51924  0183D6  320F               	rrcf	i2___xxtofl@arg,f,c
 51925  0183D8                     i2l2918:
 51926  0183D8  0E00               	movlw	0
 51927  0183DA  140F               	andwf	i2___xxtofl@arg,w,c
 51928  0183DC  6E09               	movwf	??i2___xxtofl& (0+255),c
 51929  0183DE  0E00               	movlw	0
 51930  0183E0  1410               	andwf	i2___xxtofl@arg+1,w,c
 51931  0183E2  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 51932  0183E4  0E00               	movlw	0
 51933  0183E6  1411               	andwf	i2___xxtofl@arg+2,w,c
 51934  0183E8  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 51935  0183EA  0EFF               	movlw	255
 51936  0183EC  1412               	andwf	i2___xxtofl@arg+3,w,c
 51937  0183EE  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 51938  0183F0  5009               	movf	??i2___xxtofl,w,c
 51939  0183F2  100A               	iorwf	??i2___xxtofl+1,w,c
 51940  0183F4  100B               	iorwf	??i2___xxtofl+2,w,c
 51941  0183F6  100C               	iorwf	??i2___xxtofl+3,w,c
 51942  0183F8  B4D8               	btfsc	status,2,c
 51943  0183FA  D007               	goto	i2l2921
 51944  0183FC  D7E1               	goto	i2l2919
 51945  0183FE  060E               	decf	i2___xxtofl@exp,f,c
 51946  018400  90D8               	bcf	status,0,c
 51947  018402  360F               	rlcf	i2___xxtofl@arg,f,c
 51948  018404  3610               	rlcf	i2___xxtofl@arg+1,f,c
 51949  018406  3611               	rlcf	i2___xxtofl@arg+2,f,c
 51950  018408  3612               	rlcf	i2___xxtofl@arg+3,f,c
 51951  01840A                     i2l2921:
 51952  01840A  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 51953  01840C  D003               	goto	i2u1981_40
 51954  01840E  0E02               	movlw	2
 51955  018410  600E               	cpfslt	i2___xxtofl@exp,c
 51956  018412  D7F5               	goto	i2l2922
 51957  018414                     i2u1981_40:
 51958  018414  B00E               	btfsc	i2___xxtofl@exp,0,c
 51959  018416  D008               	goto	i2l2926
 51960  018418  0EFF               	movlw	255
 51961  01841A  160F               	andwf	i2___xxtofl@arg,f,c
 51962  01841C  0EFF               	movlw	255
 51963  01841E  1610               	andwf	i2___xxtofl@arg+1,f,c
 51964  018420  0E7F               	movlw	127
 51965  018422  1611               	andwf	i2___xxtofl@arg+2,f,c
 51966  018424  0EFF               	movlw	255
 51967  018426  1612               	andwf	i2___xxtofl@arg+3,f,c
 51968  018428                     i2l2926:
 51969  018428  90D8               	bcf	status,0,c
 51970  01842A  320E               	rrcf	i2___xxtofl@exp,f,c
 51971  01842C  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 51972  018430  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 51973  018432  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 51974  018434  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 51975  018436  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 51976  01843A  6A0B               	clrf	??i2___xxtofl+2,c
 51977  01843C  6A0A               	clrf	??i2___xxtofl+1,c
 51978  01843E  6A09               	clrf	??i2___xxtofl,c
 51979  018440  5009               	movf	??i2___xxtofl,w,c
 51980  018442  120F               	iorwf	i2___xxtofl@arg,f,c
 51981  018444  500A               	movf	??i2___xxtofl+1,w,c
 51982  018446  1210               	iorwf	i2___xxtofl@arg+1,f,c
 51983  018448  500B               	movf	??i2___xxtofl+2,w,c
 51984  01844A  1211               	iorwf	i2___xxtofl@arg+2,f,c
 51985  01844C  500C               	movf	??i2___xxtofl+3,w,c
 51986  01844E  1212               	iorwf	i2___xxtofl@arg+3,f,c
 51987  018450  500D               	movf	i2___xxtofl@sign,w,c
 51988  018452  A4D8               	btfss	status,2,c
 51989  018454  AE08               	btfss	i2___xxtofl@val+3,7,c
 51990  018456  D001               	goto	i2l2927
 51991  018458  8E12               	bsf	i2___xxtofl@arg+3,7,c
 51992  01845A                     i2l2927:
 51993  01845A  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 51994  01845E  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 51995  018462  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 51996  018466  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 51997  01846A  0012               	return	
 51998  01846C                     __end_ofi2___xxtofl:
 51999                           	opt stack 0
 52000                           tosu	equ	0xFFF
 52001                           tosh	equ	0xFFE
 52002                           tosl	equ	0xFFD
 52003                           pclatu	equ	0xFFB
 52004                           pclath	equ	0xFFA
 52005                           tblptru	equ	0xFF8
 52006                           tblptrh	equ	0xFF7
 52007                           tblptrl	equ	0xFF6
 52008                           tablat	equ	0xFF5
 52009                           prodh	equ	0xFF4
 52010                           prodl	equ	0xFF3
 52011                           intcon	equ	0xFF2
 52012                           indf0	equ	0xFEF
 52013                           postinc0	equ	0xFEE
 52014                           fsr0h	equ	0xFEA
 52015                           fsr0l	equ	0xFE9
 52016                           wreg	equ	0xFE8
 52017                           indf1	equ	0xFE7
 52018                           postdec1	equ	0xFE5
 52019                           plusw1	equ	0xFE3
 52020                           fsr1h	equ	0xFE2
 52021                           fsr1l	equ	0xFE1
 52022                           bsr	equ	0xFE0
 52023                           indf2	equ	0xFDF
 52024                           postinc2	equ	0xFDE
 52025                           postdec2	equ	0xFDD
 52026                           plusw2	equ	0xFDB
 52027                           fsr2h	equ	0xFDA
 52028                           fsr2l	equ	0xFD9
 52029                           status	equ	0xFD8
 52030                           
 52031 ;; *************** function i2___fltol *****************
 52032 ;; Defined at:
 52033 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 52034 ;; Parameters:    Size  Location     Type
 52035 ;;  f1              4   12[BANK0 ] unsigned char 
 52036 ;; Auto vars:     Size  Location     Type
 52037 ;;  __fltol         1   21[BANK0 ] unsigned char 
 52038 ;;  __fltol         1   20[BANK0 ] unsigned char 
 52039 ;; Return value:  Size  Location     Type
 52040 ;;                  4   12[BANK0 ] long 
 52041 ;; Registers used:
 52042 ;;		wreg, status,2, status,0
 52043 ;; Tracked objects:
 52044 ;;		On entry : 0/0
 52045 ;;		On exit  : 0/0
 52046 ;;		Unchanged: 0/0
 52047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52051 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52052 ;;Total ram usage:       10 bytes
 52053 ;; Hardware stack levels used:    1
 52054 ;; This function calls:
 52055 ;;		Nothing
 52056 ;; This function is called by:
 52057 ;;		_ADCPostProcessingCallback
 52058 ;;		_floor
 52059 ;;		i2__doprnt
 52060 ;; This function uses a non-reentrant model
 52061 ;;
 52062                           
 52063                           	psect	text163
 52064  0192DE                     __ptext163:
 52065                           	opt stack 0
 52066  0192DE                     i2___fltol:
 52067                           	opt stack 14
 52068                           
 52069                           ;incstack = 0
 52070  0192DE  0100               	movlb	0	; () banked
 52071  0192E0  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 52072  0192E2  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 52073  0192E4  6F75               	movwf	i2___fltol@exp1& (0+255),b
 52074  0192E6  5175               	movf	i2___fltol@exp1& (0+255),w,b
 52075  0192E8  A4D8               	btfss	status,2,c
 52076  0192EA  D009               	goto	i2l2430
 52077                           
 52078                           ; BSR set to: 0
 52079  0192EC  0E00               	movlw	0
 52080  0192EE  6F6C               	movwf	?i2___fltol& (0+255),b
 52081  0192F0  0E00               	movlw	0
 52082  0192F2  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 52083  0192F4  0E00               	movlw	0
 52084  0192F6  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 52085  0192F8  0E00               	movlw	0
 52086  0192FA  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 52087                           
 52088                           ; BSR set to: 0
 52089  0192FC  0012               	return	
 52090  0192FE                     i2l2430:
 52091                           
 52092                           ; BSR set to: 0
 52093                           
 52094                           ; BSR set to: 0
 52095  0192FE  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 52096  019302  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 52097  019306  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 52098  01930A  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 52099  01930E  0E20               	movlw	32
 52100  019310  D005               	goto	i2u1969_40
 52101  019312                     i2u1969_45:
 52102  019312  90D8               	bcf	status,0,c
 52103  019314  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 52104  019316  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 52105  019318  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 52106  01931A  3370               	rrcf	??i2___fltol& (0+255),f,b
 52107  01931C                     i2u1969_40:
 52108  01931C  2EE8               	decfsz	wreg,f,c
 52109  01931E  D7F9               	goto	i2u1969_45
 52110  019320  5170               	movf	??i2___fltol& (0+255),w,b
 52111  019322  6F74               	movwf	i2___fltol@sign1& (0+255),b
 52112                           
 52113                           ; BSR set to: 0
 52114  019324  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 52115                           
 52116                           ; BSR set to: 0
 52117  019326  0EFF               	movlw	255
 52118  019328  176C               	andwf	i2___fltol@f1& (0+255),f,b
 52119  01932A  0EFF               	movlw	255
 52120  01932C  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 52121  01932E  0EFF               	movlw	255
 52122  019330  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 52123  019332  0E00               	movlw	0
 52124  019334  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 52125                           
 52126                           ; BSR set to: 0
 52127  019336  0E96               	movlw	150
 52128  019338  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 52129                           
 52130                           ; BSR set to: 0
 52131  01933A  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 52132  01933C  D016               	goto	i2l2432
 52133                           
 52134                           ; BSR set to: 0
 52135  01933E  5175               	movf	i2___fltol@exp1& (0+255),w,b
 52136  019340  0A80               	xorlw	128
 52137  019342  0F97               	addlw	151
 52138  019344  B0D8               	btfsc	status,0,c
 52139  019346  D009               	goto	i2l2433
 52140                           
 52141                           ; BSR set to: 0
 52142  019348  0E00               	movlw	0
 52143  01934A  6F6C               	movwf	?i2___fltol& (0+255),b
 52144  01934C  0E00               	movlw	0
 52145  01934E  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 52146  019350  0E00               	movlw	0
 52147  019352  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 52148  019354  0E00               	movlw	0
 52149  019356  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 52150                           
 52151                           ; BSR set to: 0
 52152  019358  0012               	return	
 52153  01935A                     i2l2433:
 52154                           
 52155                           ; BSR set to: 0
 52156                           
 52157                           ; BSR set to: 0
 52158                           
 52159                           ; BSR set to: 0
 52160  01935A  90D8               	bcf	status,0,c
 52161  01935C  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 52162  01935E  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 52163  019360  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 52164  019362  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 52165                           
 52166                           ; BSR set to: 0
 52167  019364  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 52168  019366  D7F9               	goto	i2l2433
 52169                           
 52170                           ; BSR set to: 0
 52171  019368  D015               	goto	i2u1973_40
 52172  01936A                     i2l2432:
 52173                           
 52174                           ; BSR set to: 0
 52175                           
 52176                           ; BSR set to: 0
 52177  01936A  0E1F               	movlw	31
 52178  01936C  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 52179  01936E  D00F               	goto	i2l2438
 52180                           
 52181                           ; BSR set to: 0
 52182  019370  0E00               	movlw	0
 52183  019372  6F6C               	movwf	?i2___fltol& (0+255),b
 52184  019374  0E00               	movlw	0
 52185  019376  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 52186  019378  0E00               	movlw	0
 52187  01937A  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 52188  01937C  0E00               	movlw	0
 52189  01937E  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 52190                           
 52191                           ; BSR set to: 0
 52192  019380  0012               	return	
 52193  019382                     
 52194                           ; BSR set to: 0
 52195                           
 52196                           ; BSR set to: 0
 52197  019382  90D8               	bcf	status,0,c
 52198  019384  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 52199  019386  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 52200  019388  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 52201  01938A  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 52202  01938C  0775               	decf	i2___fltol@exp1& (0+255),f,b
 52203  01938E                     i2l2438:
 52204                           
 52205                           ; BSR set to: 0
 52206                           
 52207                           ; BSR set to: 0
 52208  01938E  5175               	movf	i2___fltol@exp1& (0+255),w,b
 52209  019390  A4D8               	btfss	status,2,c
 52210  019392  D7F7               	goto	i2l2439
 52211  019394                     i2u1973_40:
 52212                           
 52213                           ; BSR set to: 0
 52214                           
 52215                           ; BSR set to: 0
 52216                           
 52217                           ; BSR set to: 0
 52218  019394  5174               	movf	i2___fltol@sign1& (0+255),w,b
 52219  019396  B4D8               	btfsc	status,2,c
 52220  019398  D008               	goto	i2l2441
 52221                           
 52222                           ; BSR set to: 0
 52223  01939A  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 52224  01939C  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 52225  01939E  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 52226  0193A0  6D6C               	negf	i2___fltol@f1& (0+255),b
 52227  0193A2  0E00               	movlw	0
 52228  0193A4  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 52229  0193A6  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 52230  0193A8  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 52231  0193AA                     i2l2441:
 52232                           
 52233                           ; BSR set to: 0
 52234                           
 52235                           ; BSR set to: 0
 52236  0193AA  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 52237  0193AE  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 52238  0193B2  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 52239  0193B6  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 52240  0193BA  0012               	return	
 52241  0193BC                     __end_ofi2___fltol:
 52242                           	opt stack 0
 52243                           tosu	equ	0xFFF
 52244                           tosh	equ	0xFFE
 52245                           tosl	equ	0xFFD
 52246                           pclatu	equ	0xFFB
 52247                           pclath	equ	0xFFA
 52248                           tblptru	equ	0xFF8
 52249                           tblptrh	equ	0xFF7
 52250                           tblptrl	equ	0xFF6
 52251                           tablat	equ	0xFF5
 52252                           prodh	equ	0xFF4
 52253                           prodl	equ	0xFF3
 52254                           intcon	equ	0xFF2
 52255                           indf0	equ	0xFEF
 52256                           postinc0	equ	0xFEE
 52257                           fsr0h	equ	0xFEA
 52258                           fsr0l	equ	0xFE9
 52259                           wreg	equ	0xFE8
 52260                           indf1	equ	0xFE7
 52261                           postdec1	equ	0xFE5
 52262                           plusw1	equ	0xFE3
 52263                           fsr1h	equ	0xFE2
 52264                           fsr1l	equ	0xFE1
 52265                           bsr	equ	0xFE0
 52266                           indf2	equ	0xFDF
 52267                           postinc2	equ	0xFDE
 52268                           postdec2	equ	0xFDD
 52269                           plusw2	equ	0xFDB
 52270                           fsr2h	equ	0xFDA
 52271                           fsr2l	equ	0xFD9
 52272                           status	equ	0xFD8
 52273                           
 52274 ;; *************** function i2___flge *****************
 52275 ;; Defined at:
 52276 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 52277 ;; Parameters:    Size  Location     Type
 52278 ;;  ff1             4   51[COMRAM] long 
 52279 ;;  ff2             4   55[COMRAM] long 
 52280 ;; Auto vars:     Size  Location     Type
 52281 ;;		None
 52282 ;; Return value:  Size  Location     Type
 52283 ;;		None               void
 52284 ;; Registers used:
 52285 ;;		wreg, status,2, status,0
 52286 ;; Tracked objects:
 52287 ;;		On entry : 0/0
 52288 ;;		On exit  : 0/0
 52289 ;;		Unchanged: 0/0
 52290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52291 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52294 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52295 ;;Total ram usage:       12 bytes
 52296 ;; Hardware stack levels used:    1
 52297 ;; This function calls:
 52298 ;;		Nothing
 52299 ;; This function is called by:
 52300 ;;		_ADCPostProcessingCallback
 52301 ;;		_writeEnergyToEEPROMCallback
 52302 ;;		_asin
 52303 ;;		_atan
 52304 ;;		_sin
 52305 ;;		_floor
 52306 ;;		i2__doprnt
 52307 ;; This function uses a non-reentrant model
 52308 ;;
 52309                           
 52310                           	psect	text164
 52311  018DC6                     __ptext164:
 52312                           	opt stack 0
 52313  018DC6                     i2___flge:
 52314                           	opt stack 14
 52315                           
 52316                           ; BSR set to: 0
 52317                           ;incstack = 0
 52318  018DC6  0E00               	movlw	0
 52319  018DC8  1434               	andwf	i2___flge@ff1,w,c
 52320  018DCA  6E3C               	movwf	??i2___flge& (0+255),c
 52321  018DCC  0E00               	movlw	0
 52322  018DCE  1435               	andwf	i2___flge@ff1+1,w,c
 52323  018DD0  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 52324  018DD2  0E80               	movlw	128
 52325  018DD4  1436               	andwf	i2___flge@ff1+2,w,c
 52326  018DD6  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 52327  018DD8  0E7F               	movlw	127
 52328  018DDA  1437               	andwf	i2___flge@ff1+3,w,c
 52329  018DDC  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 52330  018DDE  503C               	movf	??i2___flge,w,c
 52331  018DE0  103D               	iorwf	??i2___flge+1,w,c
 52332  018DE2  103E               	iorwf	??i2___flge+2,w,c
 52333  018DE4  103F               	iorwf	??i2___flge+3,w,c
 52334  018DE6  A4D8               	btfss	status,2,c
 52335  018DE8  D008               	goto	i2l2400
 52336  018DEA  0E00               	movlw	0
 52337  018DEC  6E34               	movwf	i2___flge@ff1,c
 52338  018DEE  0E00               	movlw	0
 52339  018DF0  6E35               	movwf	i2___flge@ff1+1,c
 52340  018DF2  0E00               	movlw	0
 52341  018DF4  6E36               	movwf	i2___flge@ff1+2,c
 52342  018DF6  0E00               	movlw	0
 52343  018DF8  6E37               	movwf	i2___flge@ff1+3,c
 52344  018DFA                     i2l2400:
 52345  018DFA  0E00               	movlw	0
 52346  018DFC  1438               	andwf	i2___flge@ff2,w,c
 52347  018DFE  6E3C               	movwf	??i2___flge& (0+255),c
 52348  018E00  0E00               	movlw	0
 52349  018E02  1439               	andwf	i2___flge@ff2+1,w,c
 52350  018E04  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 52351  018E06  0E80               	movlw	128
 52352  018E08  143A               	andwf	i2___flge@ff2+2,w,c
 52353  018E0A  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 52354  018E0C  0E7F               	movlw	127
 52355  018E0E  143B               	andwf	i2___flge@ff2+3,w,c
 52356  018E10  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 52357  018E12  503C               	movf	??i2___flge,w,c
 52358  018E14  103D               	iorwf	??i2___flge+1,w,c
 52359  018E16  103E               	iorwf	??i2___flge+2,w,c
 52360  018E18  103F               	iorwf	??i2___flge+3,w,c
 52361  018E1A  A4D8               	btfss	status,2,c
 52362  018E1C  D008               	goto	i2l2401
 52363  018E1E  0E00               	movlw	0
 52364  018E20  6E38               	movwf	i2___flge@ff2,c
 52365  018E22  0E00               	movlw	0
 52366  018E24  6E39               	movwf	i2___flge@ff2+1,c
 52367  018E26  0E00               	movlw	0
 52368  018E28  6E3A               	movwf	i2___flge@ff2+2,c
 52369  018E2A  0E00               	movlw	0
 52370  018E2C  6E3B               	movwf	i2___flge@ff2+3,c
 52371  018E2E                     i2l2401:
 52372  018E2E  AE37               	btfss	i2___flge@ff1+3,7,c
 52373  018E30  D01D               	goto	i2l2402
 52374  018E32  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 52375  018E36  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 52376  018E3A  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 52377  018E3E  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 52378  018E42  1E3C               	comf	??i2___flge,f,c
 52379  018E44  1E3D               	comf	??i2___flge+1,f,c
 52380  018E46  1E3E               	comf	??i2___flge+2,f,c
 52381  018E48  1E3F               	comf	??i2___flge+3,f,c
 52382  018E4A  2A3C               	incf	??i2___flge,f,c
 52383  018E4C  0E00               	movlw	0
 52384  018E4E  223D               	addwfc	??i2___flge+1,f,c
 52385  018E50  223E               	addwfc	??i2___flge+2,f,c
 52386  018E52  223F               	addwfc	??i2___flge+3,f,c
 52387  018E54  0E00               	movlw	0
 52388  018E56  243C               	addwf	??i2___flge,w,c
 52389  018E58  6E34               	movwf	i2___flge@ff1,c
 52390  018E5A  0E00               	movlw	0
 52391  018E5C  203D               	addwfc	??i2___flge+1,w,c
 52392  018E5E  6E35               	movwf	i2___flge@ff1+1,c
 52393  018E60  0E00               	movlw	0
 52394  018E62  203E               	addwfc	??i2___flge+2,w,c
 52395  018E64  6E36               	movwf	i2___flge@ff1+2,c
 52396  018E66  0E80               	movlw	128
 52397  018E68  203F               	addwfc	??i2___flge+3,w,c
 52398  018E6A  6E37               	movwf	i2___flge@ff1+3,c
 52399  018E6C                     i2l2402:
 52400  018E6C  AE3B               	btfss	i2___flge@ff2+3,7,c
 52401  018E6E  D01D               	goto	i2l2403
 52402  018E70  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 52403  018E74  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 52404  018E78  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 52405  018E7C  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 52406  018E80  1E3C               	comf	??i2___flge,f,c
 52407  018E82  1E3D               	comf	??i2___flge+1,f,c
 52408  018E84  1E3E               	comf	??i2___flge+2,f,c
 52409  018E86  1E3F               	comf	??i2___flge+3,f,c
 52410  018E88  2A3C               	incf	??i2___flge,f,c
 52411  018E8A  0E00               	movlw	0
 52412  018E8C  223D               	addwfc	??i2___flge+1,f,c
 52413  018E8E  223E               	addwfc	??i2___flge+2,f,c
 52414  018E90  223F               	addwfc	??i2___flge+3,f,c
 52415  018E92  0E00               	movlw	0
 52416  018E94  243C               	addwf	??i2___flge,w,c
 52417  018E96  6E38               	movwf	i2___flge@ff2,c
 52418  018E98  0E00               	movlw	0
 52419  018E9A  203D               	addwfc	??i2___flge+1,w,c
 52420  018E9C  6E39               	movwf	i2___flge@ff2+1,c
 52421  018E9E  0E00               	movlw	0
 52422  018EA0  203E               	addwfc	??i2___flge+2,w,c
 52423  018EA2  6E3A               	movwf	i2___flge@ff2+2,c
 52424  018EA4  0E80               	movlw	128
 52425  018EA6  203F               	addwfc	??i2___flge+3,w,c
 52426  018EA8  6E3B               	movwf	i2___flge@ff2+3,c
 52427  018EAA                     i2l2403:
 52428  018EAA  0E00               	movlw	0
 52429  018EAC  1A34               	xorwf	i2___flge@ff1,f,c
 52430  018EAE  0E00               	movlw	0
 52431  018EB0  1A35               	xorwf	i2___flge@ff1+1,f,c
 52432  018EB2  0E00               	movlw	0
 52433  018EB4  1A36               	xorwf	i2___flge@ff1+2,f,c
 52434  018EB6  0E80               	movlw	128
 52435  018EB8  1A37               	xorwf	i2___flge@ff1+3,f,c
 52436  018EBA  0E00               	movlw	0
 52437  018EBC  1A38               	xorwf	i2___flge@ff2,f,c
 52438  018EBE  0E00               	movlw	0
 52439  018EC0  1A39               	xorwf	i2___flge@ff2+1,f,c
 52440  018EC2  0E00               	movlw	0
 52441  018EC4  1A3A               	xorwf	i2___flge@ff2+2,f,c
 52442  018EC6  0E80               	movlw	128
 52443  018EC8  1A3B               	xorwf	i2___flge@ff2+3,f,c
 52444  018ECA  5038               	movf	i2___flge@ff2,w,c
 52445  018ECC  5C34               	subwf	i2___flge@ff1,w,c
 52446  018ECE  5039               	movf	i2___flge@ff2+1,w,c
 52447  018ED0  5835               	subwfb	i2___flge@ff1+1,w,c
 52448  018ED2  503A               	movf	i2___flge@ff2+2,w,c
 52449  018ED4  5836               	subwfb	i2___flge@ff1+2,w,c
 52450  018ED6  503B               	movf	i2___flge@ff2+3,w,c
 52451  018ED8  5837               	subwfb	i2___flge@ff1+3,w,c
 52452  018EDA  B0D8               	btfsc	status,0,c
 52453  018EDC  D002               	goto	i2l13653
 52454  018EDE  90D8               	bcf	status,0,c
 52455  018EE0  0012               	return	
 52456  018EE2                     i2l13653:
 52457  018EE2  80D8               	bsf	status,0,c
 52458  018EE4  0012               	return	
 52459  018EE6                     __end_ofi2___flge:
 52460                           	opt stack 0
 52461                           tosu	equ	0xFFF
 52462                           tosh	equ	0xFFE
 52463                           tosl	equ	0xFFD
 52464                           pclatu	equ	0xFFB
 52465                           pclath	equ	0xFFA
 52466                           tblptru	equ	0xFF8
 52467                           tblptrh	equ	0xFF7
 52468                           tblptrl	equ	0xFF6
 52469                           tablat	equ	0xFF5
 52470                           prodh	equ	0xFF4
 52471                           prodl	equ	0xFF3
 52472                           intcon	equ	0xFF2
 52473                           indf0	equ	0xFEF
 52474                           postinc0	equ	0xFEE
 52475                           fsr0h	equ	0xFEA
 52476                           fsr0l	equ	0xFE9
 52477                           wreg	equ	0xFE8
 52478                           indf1	equ	0xFE7
 52479                           postdec1	equ	0xFE5
 52480                           plusw1	equ	0xFE3
 52481                           fsr1h	equ	0xFE2
 52482                           fsr1l	equ	0xFE1
 52483                           bsr	equ	0xFE0
 52484                           indf2	equ	0xFDF
 52485                           postinc2	equ	0xFDE
 52486                           postdec2	equ	0xFDD
 52487                           plusw2	equ	0xFDB
 52488                           fsr2h	equ	0xFDA
 52489                           fsr2l	equ	0xFD9
 52490                           status	equ	0xFD8
 52491                           
 52492 ;; *************** function _frexp *****************
 52493 ;; Defined at:
 52494 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 52495 ;; Parameters:    Size  Location     Type
 52496 ;;  value           4    0[COMRAM] long 
 52497 ;;  eptr            2    4[COMRAM] PTR int 
 52498 ;;		 -> floor@expon(2), 
 52499 ;; Auto vars:     Size  Location     Type
 52500 ;;		None
 52501 ;; Return value:  Size  Location     Type
 52502 ;;                  4    0[COMRAM] PTR int 
 52503 ;; Registers used:
 52504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52505 ;; Tracked objects:
 52506 ;;		On entry : 0/0
 52507 ;;		On exit  : 0/0
 52508 ;;		Unchanged: 0/0
 52509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52510 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52513 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52514 ;;Total ram usage:        8 bytes
 52515 ;; Hardware stack levels used:    1
 52516 ;; This function calls:
 52517 ;;		Nothing
 52518 ;; This function is called by:
 52519 ;;		_floor
 52520 ;; This function uses a non-reentrant model
 52521 ;;
 52522                           
 52523                           	psect	text165
 52524  019D58                     __ptext165:
 52525                           	opt stack 0
 52526  019D58                     _frexp:
 52527                           	opt stack 12
 52528                           
 52529                           ;incstack = 0
 52530  019D58  5001               	movf	frexp@value,w,c
 52531  019D5A  1002               	iorwf	frexp@value+1,w,c
 52532  019D5C  1003               	iorwf	frexp@value+2,w,c
 52533  019D5E  1004               	iorwf	frexp@value+3,w,c
 52534  019D60  A4D8               	btfss	status,2,c
 52535  019D62  D009               	goto	i2l2941
 52536  019D64  C005  FFD9         	movff	frexp@eptr,fsr2l
 52537  019D68  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52538  019D6C  0E00               	movlw	0
 52539  019D6E  6EDE               	movwf	postinc2,c
 52540  019D70  0E00               	movlw	0
 52541  019D72  6EDD               	movwf	postdec2,c
 52542                           
 52543                           ;	Return value of _frexp is never used
 52544  019D74  0012               	return	
 52545  019D76                     i2l2941:
 52546  019D76  5004               	movf	frexp@value+3,w,c
 52547  019D78  0B7F               	andlw	127
 52548  019D7A  6E07               	movwf	??_frexp& (0+255),c
 52549  019D7C  6A08               	clrf	(??_frexp+1)& (0+255),c
 52550  019D7E  90D8               	bcf	status,0,c
 52551  019D80  3607               	rlcf	??_frexp,f,c
 52552  019D82  3608               	rlcf	??_frexp+1,f,c
 52553  019D84  C005  FFD9         	movff	frexp@eptr,fsr2l
 52554  019D88  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52555  019D8C  C007  FFDE         	movff	??_frexp,postinc2
 52556  019D90  C008  FFDD         	movff	??_frexp+1,postdec2
 52557  019D94  AE03               	btfss	frexp@value+2,7,c
 52558  019D96  D003               	goto	i2u1181_40
 52559  019D98  6A07               	clrf	??_frexp& (0+255),c
 52560  019D9A  2A07               	incf	??_frexp& (0+255),f,c
 52561  019D9C  D001               	goto	i2u1181_48
 52562  019D9E                     i2u1181_40:
 52563  019D9E  6A07               	clrf	??_frexp& (0+255),c
 52564  019DA0                     i2u1181_48:
 52565  019DA0  5007               	movf	??_frexp,w,c
 52566  019DA2  C005  FFD9         	movff	frexp@eptr,fsr2l
 52567  019DA6  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52568  019DAA  12DE               	iorwf	postinc2,f,c
 52569  019DAC  0E00               	movlw	0
 52570  019DAE  12DD               	iorwf	postdec2,f,c
 52571  019DB0  C005  FFD9         	movff	frexp@eptr,fsr2l
 52572  019DB4  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 52573  019DB8  0E82               	movlw	130
 52574  019DBA  26DE               	addwf	postinc2,f,c
 52575  019DBC  0EFF               	movlw	255
 52576  019DBE  22DD               	addwfc	postdec2,f,c
 52577  019DC0  8004               	bsf	frexp@value+3,0,c
 52578  019DC2  8204               	bsf	frexp@value+3,1,c
 52579  019DC4  8404               	bsf	frexp@value+3,2,c
 52580  019DC6  8604               	bsf	frexp@value+3,3,c
 52581  019DC8  8804               	bsf	frexp@value+3,4,c
 52582  019DCA  8A04               	bsf	frexp@value+3,5,c
 52583  019DCC  9C04               	bcf	frexp@value+3,6,c
 52584  019DCE  9E03               	bcf	frexp@value+2,7,c
 52585  019DD0  0012               	return	
 52586  019DD2                     __end_of_frexp:
 52587                           	opt stack 0
 52588                           tosu	equ	0xFFF
 52589                           tosh	equ	0xFFE
 52590                           tosl	equ	0xFFD
 52591                           pclatu	equ	0xFFB
 52592                           pclath	equ	0xFFA
 52593                           tblptru	equ	0xFF8
 52594                           tblptrh	equ	0xFF7
 52595                           tblptrl	equ	0xFF6
 52596                           tablat	equ	0xFF5
 52597                           prodh	equ	0xFF4
 52598                           prodl	equ	0xFF3
 52599                           intcon	equ	0xFF2
 52600                           indf0	equ	0xFEF
 52601                           postinc0	equ	0xFEE
 52602                           fsr0h	equ	0xFEA
 52603                           fsr0l	equ	0xFE9
 52604                           wreg	equ	0xFE8
 52605                           indf1	equ	0xFE7
 52606                           postdec1	equ	0xFE5
 52607                           plusw1	equ	0xFE3
 52608                           fsr1h	equ	0xFE2
 52609                           fsr1l	equ	0xFE1
 52610                           bsr	equ	0xFE0
 52611                           indf2	equ	0xFDF
 52612                           postinc2	equ	0xFDE
 52613                           postdec2	equ	0xFDD
 52614                           plusw2	equ	0xFDB
 52615                           fsr2h	equ	0xFDA
 52616                           fsr2l	equ	0xFD9
 52617                           status	equ	0xFD8
 52618                           
 52619 ;; *************** function _eval_poly *****************
 52620 ;; Defined at:
 52621 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 52622 ;; Parameters:    Size  Location     Type
 52623 ;;  x               4   12[BANK0 ] PTR int 
 52624 ;;  d               2   16[BANK0 ] PTR const 
 52625 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 52626 ;;  n               2   18[BANK0 ] int 
 52627 ;; Auto vars:     Size  Location     Type
 52628 ;;  res             4   24[BANK0 ] int 
 52629 ;; Return value:  Size  Location     Type
 52630 ;;                  4   12[BANK0 ] int 
 52631 ;; Registers used:
 52632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52633 ;; Tracked objects:
 52634 ;;		On entry : 0/0
 52635 ;;		On exit  : 0/0
 52636 ;;		Unchanged: 0/0
 52637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52638 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52639 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52640 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52641 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52642 ;;Total ram usage:       16 bytes
 52643 ;; Hardware stack levels used:    1
 52644 ;; Hardware stack levels required when called:    1
 52645 ;; This function calls:
 52646 ;;		i2___fladd
 52647 ;;		i2___flmul
 52648 ;; This function is called by:
 52649 ;;		_atan
 52650 ;;		_sin
 52651 ;; This function uses a non-reentrant model
 52652 ;;
 52653                           
 52654                           	psect	text166
 52655  019100                     __ptext166:
 52656                           	opt stack 0
 52657  019100                     _eval_poly:
 52658                           	opt stack 12
 52659                           
 52660                           ;incstack = 0
 52661  019100  C072  F074         	movff	eval_poly@n,??_eval_poly
 52662  019104  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52663  019108  0100               	movlb	0	; () banked
 52664  01910A  90D8               	bcf	status,0,c
 52665  01910C  3774               	rlcf	??_eval_poly& (0+255),f,b
 52666  01910E  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52667  019110  90D8               	bcf	status,0,c
 52668  019112  3774               	rlcf	??_eval_poly& (0+255),f,b
 52669  019114  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52670  019116  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52671  01911A  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52672  01911E  5174               	movf	??_eval_poly& (0+255),w,b
 52673  019120  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52674  019122  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52675  019124  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52676  019126  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52677  01912A  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52678  01912E                     	if	0	;tblptru may be non-zero
 52679  01912E                     	endif
 52680  01912E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52681  01912E  0E00               	movlw	low (__mediumconst shr (0+16))
 52682  019130  6EF8               	movwf	tblptru,c
 52683  019132                     	endif
 52684  019132  0009               	tblrd		*+
 52685  019134  CFF5 F078          	movff	tablat,eval_poly@res
 52686  019138  0009               	tblrd		*+
 52687  01913A  CFF5 F079          	movff	tablat,eval_poly@res+1
 52688  01913E  0009               	tblrd		*+
 52689  019140  CFF5 F07A          	movff	tablat,eval_poly@res+2
 52690  019144  000A               	tblrd		*-
 52691  019146  CFF5 F07B          	movff	tablat,eval_poly@res+3
 52692  01914A  D04C               	goto	i2l2373
 52693  01914C                     
 52694                           ; BSR set to: 0
 52695                           
 52696                           ; BSR set to: 0
 52697  01914C  C078  F034         	movff	eval_poly@res,i2___flmul@a
 52698  019150  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 52699  019154  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 52700  019158  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 52701  01915C  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 52702  019160  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 52703  019164  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 52704  019168  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 52705  01916C  EC8D  F0AD         	call	i2___flmul	;wreg free
 52706  019170  C030  F056         	movff	?i2___flmul,i2___fladd@b
 52707  019174  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 52708  019178  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 52709  01917C  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 52710  019180  0100               	movlb	0	; () banked
 52711  019182  0772               	decf	eval_poly@n& (0+255),f,b
 52712  019184  A0D8               	btfss	status,0,c
 52713  019186  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 52714  019188  C072  F074         	movff	eval_poly@n,??_eval_poly
 52715  01918C  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 52716  019190  90D8               	bcf	status,0,c
 52717  019192  3774               	rlcf	??_eval_poly& (0+255),f,b
 52718  019194  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52719  019196  90D8               	bcf	status,0,c
 52720  019198  3774               	rlcf	??_eval_poly& (0+255),f,b
 52721  01919A  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 52722  01919C  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 52723  0191A0  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 52724  0191A4  5174               	movf	??_eval_poly& (0+255),w,b
 52725  0191A6  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 52726  0191A8  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 52727  0191AA  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 52728  0191AC  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 52729  0191B0  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 52730  0191B4                     	if	0	;tblptru may be non-zero
 52731  0191B4                     	endif
 52732  0191B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 52733  0191B4  0E00               	movlw	low (__mediumconst shr (0+16))
 52734  0191B6  6EF8               	movwf	tblptru,c
 52735  0191B8                     	endif
 52736  0191B8  0009               	tblrd		*+
 52737  0191BA  CFF5 F05A          	movff	tablat,i2___fladd@a
 52738  0191BE  0009               	tblrd		*+
 52739  0191C0  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 52740  0191C4  0009               	tblrd		*+
 52741  0191C6  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 52742  0191CA  000A               	tblrd		*-
 52743  0191CC  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 52744  0191D0  ECD4  F0B0         	call	i2___fladd	;wreg free
 52745  0191D4  C056  F078         	movff	?i2___fladd,eval_poly@res
 52746  0191D8  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 52747  0191DC  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 52748  0191E0  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 52749  0191E4                     i2l2373:
 52750  0191E4  0100               	movlb	0	; () banked
 52751  0191E6  5172               	movf	eval_poly@n& (0+255),w,b
 52752  0191E8  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 52753  0191EA  A4D8               	btfss	status,2,c
 52754  0191EC  D7AF               	goto	i2l2374
 52755                           
 52756                           ; BSR set to: 0
 52757  0191EE  C078  F06C         	movff	eval_poly@res,?_eval_poly
 52758  0191F2  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 52759  0191F6  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 52760  0191FA  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 52761                           
 52762                           ; BSR set to: 0
 52763  0191FE  0012               	return		;funcret
 52764  019200                     __end_of_eval_poly:
 52765                           	opt stack 0
 52766                           tosu	equ	0xFFF
 52767                           tosh	equ	0xFFE
 52768                           tosl	equ	0xFFD
 52769                           pclatu	equ	0xFFB
 52770                           pclath	equ	0xFFA
 52771                           tblptru	equ	0xFF8
 52772                           tblptrh	equ	0xFF7
 52773                           tblptrl	equ	0xFF6
 52774                           tablat	equ	0xFF5
 52775                           prodh	equ	0xFF4
 52776                           prodl	equ	0xFF3
 52777                           intcon	equ	0xFF2
 52778                           indf0	equ	0xFEF
 52779                           postinc0	equ	0xFEE
 52780                           fsr0h	equ	0xFEA
 52781                           fsr0l	equ	0xFE9
 52782                           wreg	equ	0xFE8
 52783                           indf1	equ	0xFE7
 52784                           postdec1	equ	0xFE5
 52785                           plusw1	equ	0xFE3
 52786                           fsr1h	equ	0xFE2
 52787                           fsr1l	equ	0xFE1
 52788                           bsr	equ	0xFE0
 52789                           indf2	equ	0xFDF
 52790                           postinc2	equ	0xFDE
 52791                           postdec2	equ	0xFDD
 52792                           plusw2	equ	0xFDB
 52793                           fsr2h	equ	0xFDA
 52794                           fsr2l	equ	0xFD9
 52795                           status	equ	0xFD8
 52796                           
 52797 ;; *************** function i2___flmul *****************
 52798 ;; Defined at:
 52799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 52800 ;; Parameters:    Size  Location     Type
 52801 ;;  b               4   47[COMRAM] int 
 52802 ;;  a               4   51[COMRAM] int 
 52803 ;; Auto vars:     Size  Location     Type
 52804 ;;  __flmul         4   66[COMRAM] struct .
 52805 ;;  __flmul         4   61[COMRAM] unsigned long 
 52806 ;;  __flmul         2   70[COMRAM] struct .
 52807 ;;  __flmul         1   65[COMRAM] unsigned char 
 52808 ;;  __flmul         1   60[COMRAM] unsigned char 
 52809 ;;  __flmul         1   59[COMRAM] unsigned char 
 52810 ;; Return value:  Size  Location     Type
 52811 ;;                  4   47[COMRAM] unsigned char 
 52812 ;; Registers used:
 52813 ;;		wreg, status,2, status,0, prodl, prodh
 52814 ;; Tracked objects:
 52815 ;;		On entry : 0/0
 52816 ;;		On exit  : 0/0
 52817 ;;		Unchanged: 0/0
 52818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52819 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52820 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52822 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52823 ;;Total ram usage:       25 bytes
 52824 ;; Hardware stack levels used:    1
 52825 ;; This function calls:
 52826 ;;		Nothing
 52827 ;; This function is called by:
 52828 ;;		_peakToRMS
 52829 ;;		_ADCPostProcessingCallback
 52830 ;;		_asin
 52831 ;;		_atan
 52832 ;;		_eval_poly
 52833 ;;		_sin
 52834 ;;		i2_fround
 52835 ;;		i2_scale
 52836 ;;		i2__doprnt
 52837 ;; This function uses a non-reentrant model
 52838 ;;
 52839                           
 52840                           	psect	text167
 52841  015B1A                     __ptext167:
 52842                           	opt stack 0
 52843  015B1A                     i2___flmul:
 52844                           	opt stack 13
 52845                           
 52846                           ; BSR set to: 0
 52847                           ;incstack = 0
 52848  015B1A  5033               	movf	i2___flmul@b+3,w,c
 52849  015B1C  0B80               	andlw	128
 52850  015B1E  6E3C               	movwf	i2___flmul@sign,c
 52851  015B20  5033               	movf	i2___flmul@b+3,w,c
 52852  015B22  2433               	addwf	i2___flmul@b+3,w,c
 52853  015B24  6E42               	movwf	i2___flmul@bexp,c
 52854  015B26  BE32               	btfsc	i2___flmul@b+2,7,c
 52855  015B28  8042               	bsf	i2___flmul@bexp,0,c
 52856  015B2A  5042               	movf	i2___flmul@bexp,w,c
 52857  015B2C  B4D8               	btfsc	status,2,c
 52858  015B2E  D00D               	goto	i2l2802
 52859  015B30  2842               	incf	i2___flmul@bexp,w,c
 52860  015B32  A4D8               	btfss	status,2,c
 52861  015B34  D008               	goto	i2l2803
 52862  015B36  0E00               	movlw	0
 52863  015B38  6E30               	movwf	i2___flmul@b,c
 52864  015B3A  0E00               	movlw	0
 52865  015B3C  6E31               	movwf	i2___flmul@b+1,c
 52866  015B3E  0E00               	movlw	0
 52867  015B40  6E32               	movwf	i2___flmul@b+2,c
 52868  015B42  0E00               	movlw	0
 52869  015B44  6E33               	movwf	i2___flmul@b+3,c
 52870  015B46                     i2l2803:
 52871  015B46  8E32               	bsf	i2___flmul@b+2,7,c
 52872  015B48  D008               	goto	i2l2804
 52873  015B4A                     i2l2802:
 52874  015B4A  0E00               	movlw	0
 52875  015B4C  6E30               	movwf	i2___flmul@b,c
 52876  015B4E  0E00               	movlw	0
 52877  015B50  6E31               	movwf	i2___flmul@b+1,c
 52878  015B52  0E00               	movlw	0
 52879  015B54  6E32               	movwf	i2___flmul@b+2,c
 52880  015B56  0E00               	movlw	0
 52881  015B58  6E33               	movwf	i2___flmul@b+3,c
 52882  015B5A                     i2l2804:
 52883  015B5A  5037               	movf	i2___flmul@a+3,w,c
 52884  015B5C  0B80               	andlw	128
 52885  015B5E  1A3C               	xorwf	i2___flmul@sign,f,c
 52886  015B60  5037               	movf	i2___flmul@a+3,w,c
 52887  015B62  2437               	addwf	i2___flmul@a+3,w,c
 52888  015B64  6E3D               	movwf	i2___flmul@aexp,c
 52889  015B66  BE36               	btfsc	i2___flmul@a+2,7,c
 52890  015B68  803D               	bsf	i2___flmul@aexp,0,c
 52891  015B6A  503D               	movf	i2___flmul@aexp,w,c
 52892  015B6C  B4D8               	btfsc	status,2,c
 52893  015B6E  D00D               	goto	i2l2806
 52894  015B70  283D               	incf	i2___flmul@aexp,w,c
 52895  015B72  A4D8               	btfss	status,2,c
 52896  015B74  D008               	goto	i2l2807
 52897  015B76  0E00               	movlw	0
 52898  015B78  6E34               	movwf	i2___flmul@a,c
 52899  015B7A  0E00               	movlw	0
 52900  015B7C  6E35               	movwf	i2___flmul@a+1,c
 52901  015B7E  0E00               	movlw	0
 52902  015B80  6E36               	movwf	i2___flmul@a+2,c
 52903  015B82  0E00               	movlw	0
 52904  015B84  6E37               	movwf	i2___flmul@a+3,c
 52905  015B86                     i2l2807:
 52906  015B86  8E36               	bsf	i2___flmul@a+2,7,c
 52907  015B88  D008               	goto	i2l2808
 52908  015B8A                     i2l2806:
 52909  015B8A  0E00               	movlw	0
 52910  015B8C  6E34               	movwf	i2___flmul@a,c
 52911  015B8E  0E00               	movlw	0
 52912  015B90  6E35               	movwf	i2___flmul@a+1,c
 52913  015B92  0E00               	movlw	0
 52914  015B94  6E36               	movwf	i2___flmul@a+2,c
 52915  015B96  0E00               	movlw	0
 52916  015B98  6E37               	movwf	i2___flmul@a+3,c
 52917  015B9A                     i2l2808:
 52918  015B9A  503D               	movf	i2___flmul@aexp,w,c
 52919  015B9C  B4D8               	btfsc	status,2,c
 52920  015B9E  D003               	goto	i2u1773_40
 52921  015BA0  5042               	movf	i2___flmul@bexp,w,c
 52922  015BA2  A4D8               	btfss	status,2,c
 52923  015BA4  D009               	goto	i2l2809
 52924  015BA6                     i2u1773_40:
 52925  015BA6  0E00               	movlw	0
 52926  015BA8  6E30               	movwf	?i2___flmul,c
 52927  015BAA  0E00               	movlw	0
 52928  015BAC  6E31               	movwf	?i2___flmul+1,c
 52929  015BAE  0E00               	movlw	0
 52930  015BB0  6E32               	movwf	?i2___flmul+2,c
 52931  015BB2  0E00               	movlw	0
 52932  015BB4  6E33               	movwf	?i2___flmul+3,c
 52933  015BB6  0012               	return	
 52934  015BB8                     i2l2809:
 52935  015BB8  5036               	movf	i2___flmul@a+2,w,c
 52936  015BBA  0230               	mulwf	i2___flmul@b,c
 52937  015BBC  CFF3 F047          	movff	prodl,i2___flmul@temp
 52938  015BC0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52939  015BC4  5047               	movf	i2___flmul@temp,w,c
 52940  015BC6  6E3E               	movwf	i2___flmul@grs,c
 52941  015BC8  6A3F               	clrf	i2___flmul@grs+1,c
 52942  015BCA  6A40               	clrf	i2___flmul@grs+2,c
 52943  015BCC  6A41               	clrf	i2___flmul@grs+3,c
 52944  015BCE  5048               	movf	i2___flmul@temp+1,w,c
 52945  015BD0  6E43               	movwf	i2___flmul@prod,c
 52946  015BD2  6A44               	clrf	i2___flmul@prod+1,c
 52947  015BD4  6A45               	clrf	i2___flmul@prod+2,c
 52948  015BD6  6A46               	clrf	i2___flmul@prod+3,c
 52949  015BD8  5035               	movf	i2___flmul@a+1,w,c
 52950  015BDA  0231               	mulwf	i2___flmul@b+1,c
 52951  015BDC  CFF3 F047          	movff	prodl,i2___flmul@temp
 52952  015BE0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52953  015BE4  5047               	movf	i2___flmul@temp,w,c
 52954  015BE6  263E               	addwf	i2___flmul@grs,f,c
 52955  015BE8  0E00               	movlw	0
 52956  015BEA  223F               	addwfc	i2___flmul@grs+1,f,c
 52957  015BEC  2240               	addwfc	i2___flmul@grs+2,f,c
 52958  015BEE  2241               	addwfc	i2___flmul@grs+3,f,c
 52959  015BF0  5048               	movf	i2___flmul@temp+1,w,c
 52960  015BF2  2643               	addwf	i2___flmul@prod,f,c
 52961  015BF4  0E00               	movlw	0
 52962  015BF6  2244               	addwfc	i2___flmul@prod+1,f,c
 52963  015BF8  2245               	addwfc	i2___flmul@prod+2,f,c
 52964  015BFA  2246               	addwfc	i2___flmul@prod+3,f,c
 52965  015BFC  5034               	movf	i2___flmul@a,w,c
 52966  015BFE  0232               	mulwf	i2___flmul@b+2,c
 52967  015C00  CFF3 F047          	movff	prodl,i2___flmul@temp
 52968  015C04  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52969  015C08  5047               	movf	i2___flmul@temp,w,c
 52970  015C0A  263E               	addwf	i2___flmul@grs,f,c
 52971  015C0C  0E00               	movlw	0
 52972  015C0E  223F               	addwfc	i2___flmul@grs+1,f,c
 52973  015C10  2240               	addwfc	i2___flmul@grs+2,f,c
 52974  015C12  2241               	addwfc	i2___flmul@grs+3,f,c
 52975  015C14  5048               	movf	i2___flmul@temp+1,w,c
 52976  015C16  2643               	addwf	i2___flmul@prod,f,c
 52977  015C18  0E00               	movlw	0
 52978  015C1A  2244               	addwfc	i2___flmul@prod+1,f,c
 52979  015C1C  2245               	addwfc	i2___flmul@prod+2,f,c
 52980  015C1E  2246               	addwfc	i2___flmul@prod+3,f,c
 52981  015C20  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 52982  015C24  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 52983  015C28  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 52984  015C2C  6A3E               	clrf	i2___flmul@grs,c
 52985  015C2E  5034               	movf	i2___flmul@a,w,c
 52986  015C30  0231               	mulwf	i2___flmul@b+1,c
 52987  015C32  CFF3 F047          	movff	prodl,i2___flmul@temp
 52988  015C36  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 52989  015C3A  5047               	movf	i2___flmul@temp,w,c
 52990  015C3C  263E               	addwf	i2___flmul@grs,f,c
 52991  015C3E  5048               	movf	i2___flmul@temp+1,w,c
 52992  015C40  223F               	addwfc	i2___flmul@grs+1,f,c
 52993  015C42  0E00               	movlw	0
 52994  015C44  2240               	addwfc	i2___flmul@grs+2,f,c
 52995  015C46  0E00               	movlw	0
 52996  015C48  2241               	addwfc	i2___flmul@grs+3,f,c
 52997  015C4A  5035               	movf	i2___flmul@a+1,w,c
 52998  015C4C  0230               	mulwf	i2___flmul@b,c
 52999  015C4E  CFF3 F047          	movff	prodl,i2___flmul@temp
 53000  015C52  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53001  015C56  5047               	movf	i2___flmul@temp,w,c
 53002  015C58  263E               	addwf	i2___flmul@grs,f,c
 53003  015C5A  5048               	movf	i2___flmul@temp+1,w,c
 53004  015C5C  223F               	addwfc	i2___flmul@grs+1,f,c
 53005  015C5E  0E00               	movlw	0
 53006  015C60  2240               	addwfc	i2___flmul@grs+2,f,c
 53007  015C62  0E00               	movlw	0
 53008  015C64  2241               	addwfc	i2___flmul@grs+3,f,c
 53009  015C66  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 53010  015C6A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 53011  015C6E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 53012  015C72  6A3E               	clrf	i2___flmul@grs,c
 53013  015C74  5034               	movf	i2___flmul@a,w,c
 53014  015C76  0230               	mulwf	i2___flmul@b,c
 53015  015C78  CFF3 F047          	movff	prodl,i2___flmul@temp
 53016  015C7C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53017  015C80  5047               	movf	i2___flmul@temp,w,c
 53018  015C82  263E               	addwf	i2___flmul@grs,f,c
 53019  015C84  5048               	movf	i2___flmul@temp+1,w,c
 53020  015C86  223F               	addwfc	i2___flmul@grs+1,f,c
 53021  015C88  0E00               	movlw	0
 53022  015C8A  2240               	addwfc	i2___flmul@grs+2,f,c
 53023  015C8C  0E00               	movlw	0
 53024  015C8E  2241               	addwfc	i2___flmul@grs+3,f,c
 53025  015C90  5036               	movf	i2___flmul@a+2,w,c
 53026  015C92  0231               	mulwf	i2___flmul@b+1,c
 53027  015C94  CFF3 F047          	movff	prodl,i2___flmul@temp
 53028  015C98  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53029  015C9C  5047               	movf	i2___flmul@temp,w,c
 53030  015C9E  2643               	addwf	i2___flmul@prod,f,c
 53031  015CA0  5048               	movf	i2___flmul@temp+1,w,c
 53032  015CA2  2244               	addwfc	i2___flmul@prod+1,f,c
 53033  015CA4  0E00               	movlw	0
 53034  015CA6  2245               	addwfc	i2___flmul@prod+2,f,c
 53035  015CA8  0E00               	movlw	0
 53036  015CAA  2246               	addwfc	i2___flmul@prod+3,f,c
 53037  015CAC  5035               	movf	i2___flmul@a+1,w,c
 53038  015CAE  0232               	mulwf	i2___flmul@b+2,c
 53039  015CB0  CFF3 F047          	movff	prodl,i2___flmul@temp
 53040  015CB4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53041  015CB8  5047               	movf	i2___flmul@temp,w,c
 53042  015CBA  2643               	addwf	i2___flmul@prod,f,c
 53043  015CBC  5048               	movf	i2___flmul@temp+1,w,c
 53044  015CBE  2244               	addwfc	i2___flmul@prod+1,f,c
 53045  015CC0  0E00               	movlw	0
 53046  015CC2  2245               	addwfc	i2___flmul@prod+2,f,c
 53047  015CC4  0E00               	movlw	0
 53048  015CC6  2246               	addwfc	i2___flmul@prod+3,f,c
 53049  015CC8  5036               	movf	i2___flmul@a+2,w,c
 53050  015CCA  0232               	mulwf	i2___flmul@b+2,c
 53051  015CCC  CFF3 F047          	movff	prodl,i2___flmul@temp
 53052  015CD0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 53053  015CD4  5047               	movf	i2___flmul@temp,w,c
 53054  015CD6  6E38               	movwf	??i2___flmul& (0+255),c
 53055  015CD8  5048               	movf	i2___flmul@temp+1,w,c
 53056  015CDA  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 53057  015CDC  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 53058  015CDE  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 53059  015CE0  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 53060  015CE4  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 53061  015CE8  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 53062  015CEC  6A38               	clrf	??i2___flmul,c
 53063  015CEE  5038               	movf	??i2___flmul,w,c
 53064  015CF0  2643               	addwf	i2___flmul@prod,f,c
 53065  015CF2  5039               	movf	??i2___flmul+1,w,c
 53066  015CF4  2244               	addwfc	i2___flmul@prod+1,f,c
 53067  015CF6  503A               	movf	??i2___flmul+2,w,c
 53068  015CF8  2245               	addwfc	i2___flmul@prod+2,f,c
 53069  015CFA  503B               	movf	??i2___flmul+3,w,c
 53070  015CFC  2246               	addwfc	i2___flmul@prod+3,f,c
 53071  015CFE  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 53072  015D02  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 53073  015D06  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 53074  015D0A  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 53075  015D0E  0E19               	movlw	25
 53076  015D10  D005               	goto	i2u1774_40
 53077  015D12                     i2u1774_45:
 53078  015D12  90D8               	bcf	status,0,c
 53079  015D14  323B               	rrcf	??i2___flmul+3,f,c
 53080  015D16  323A               	rrcf	??i2___flmul+2,f,c
 53081  015D18  3239               	rrcf	??i2___flmul+1,f,c
 53082  015D1A  3238               	rrcf	??i2___flmul,f,c
 53083  015D1C                     i2u1774_40:
 53084  015D1C  2EE8               	decfsz	wreg,f,c
 53085  015D1E  D7F9               	goto	i2u1774_45
 53086  015D20  5038               	movf	??i2___flmul,w,c
 53087  015D22  2643               	addwf	i2___flmul@prod,f,c
 53088  015D24  5039               	movf	??i2___flmul+1,w,c
 53089  015D26  2244               	addwfc	i2___flmul@prod+1,f,c
 53090  015D28  503A               	movf	??i2___flmul+2,w,c
 53091  015D2A  2245               	addwfc	i2___flmul@prod+2,f,c
 53092  015D2C  503B               	movf	??i2___flmul+3,w,c
 53093  015D2E  2246               	addwfc	i2___flmul@prod+3,f,c
 53094  015D30  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 53095  015D34  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 53096  015D38  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 53097  015D3C  6A3E               	clrf	i2___flmul@grs,c
 53098  015D3E  503D               	movf	i2___flmul@aexp,w,c
 53099  015D40  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 53100  015D44  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 53101  015D46  2638               	addwf	??i2___flmul,f,c
 53102  015D48  0E00               	movlw	0
 53103  015D4A  2239               	addwfc	??i2___flmul+1,f,c
 53104  015D4C  0E82               	movlw	130
 53105  015D4E  2438               	addwf	??i2___flmul,w,c
 53106  015D50  6E47               	movwf	i2___flmul@temp,c
 53107  015D52  0EFF               	movlw	255
 53108  015D54  2039               	addwfc	??i2___flmul+1,w,c
 53109  015D56  6E48               	movwf	i2___flmul@temp+1,c
 53110  015D58  D00F               	goto	i2l2813
 53111  015D5A  90D8               	bcf	status,0,c
 53112  015D5C  3643               	rlcf	i2___flmul@prod,f,c
 53113  015D5E  3644               	rlcf	i2___flmul@prod+1,f,c
 53114  015D60  3645               	rlcf	i2___flmul@prod+2,f,c
 53115  015D62  3646               	rlcf	i2___flmul@prod+3,f,c
 53116  015D64  BE41               	btfsc	i2___flmul@grs+3,7,c
 53117  015D66  8043               	bsf	i2___flmul@prod,0,c
 53118  015D68  90D8               	bcf	status,0,c
 53119  015D6A  363E               	rlcf	i2___flmul@grs,f,c
 53120  015D6C  363F               	rlcf	i2___flmul@grs+1,f,c
 53121  015D6E  3640               	rlcf	i2___flmul@grs+2,f,c
 53122  015D70  3641               	rlcf	i2___flmul@grs+3,f,c
 53123  015D72  0647               	decf	i2___flmul@temp,f,c
 53124  015D74  A0D8               	btfss	status,0,c
 53125  015D76  0648               	decf	i2___flmul@temp+1,f,c
 53126  015D78                     i2l2813:
 53127  015D78  AE45               	btfss	i2___flmul@prod+2,7,c
 53128  015D7A  D7EF               	goto	i2l2814
 53129  015D7C  0E00               	movlw	0
 53130  015D7E  6E3D               	movwf	i2___flmul@aexp,c
 53131  015D80  AE41               	btfss	i2___flmul@grs+3,7,c
 53132  015D82  D016               	goto	i2l2820
 53133  015D84  0EFF               	movlw	255
 53134  015D86  143E               	andwf	i2___flmul@grs,w,c
 53135  015D88  6E38               	movwf	??i2___flmul& (0+255),c
 53136  015D8A  0EFF               	movlw	255
 53137  015D8C  143F               	andwf	i2___flmul@grs+1,w,c
 53138  015D8E  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 53139  015D90  0EFF               	movlw	255
 53140  015D92  1440               	andwf	i2___flmul@grs+2,w,c
 53141  015D94  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 53142  015D96  0E7F               	movlw	127
 53143  015D98  1441               	andwf	i2___flmul@grs+3,w,c
 53144  015D9A  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 53145  015D9C  5038               	movf	??i2___flmul,w,c
 53146  015D9E  1039               	iorwf	??i2___flmul+1,w,c
 53147  015DA0  103A               	iorwf	??i2___flmul+2,w,c
 53148  015DA2  103B               	iorwf	??i2___flmul+3,w,c
 53149  015DA4  A4D8               	btfss	status,2,c
 53150  015DA6  D002               	goto	i2u1779_40
 53151  015DA8  A043               	btfss	i2___flmul@prod,0,c
 53152  015DAA  D002               	goto	i2l2820
 53153  015DAC                     i2u1779_40:
 53154  015DAC  0E01               	movlw	1
 53155  015DAE  6E3D               	movwf	i2___flmul@aexp,c
 53156  015DB0                     i2l2820:
 53157  015DB0  503D               	movf	i2___flmul@aexp,w,c
 53158  015DB2  B4D8               	btfsc	status,2,c
 53159  015DB4  D01F               	goto	i2l2822
 53160  015DB6  0E01               	movlw	1
 53161  015DB8  2643               	addwf	i2___flmul@prod,f,c
 53162  015DBA  0E00               	movlw	0
 53163  015DBC  2244               	addwfc	i2___flmul@prod+1,f,c
 53164  015DBE  2245               	addwfc	i2___flmul@prod+2,f,c
 53165  015DC0  2246               	addwfc	i2___flmul@prod+3,f,c
 53166  015DC2  A046               	btfss	i2___flmul@prod+3,0,c
 53167  015DC4  D017               	goto	i2l2822
 53168  015DC6  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 53169  015DCA  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 53170  015DCE  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 53171  015DD2  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 53172  015DD6  343B               	rlcf	??i2___flmul+3,w,c
 53173  015DD8  323B               	rrcf	??i2___flmul+3,f,c
 53174  015DDA  323A               	rrcf	??i2___flmul+2,f,c
 53175  015DDC  3239               	rrcf	??i2___flmul+1,f,c
 53176  015DDE  3238               	rrcf	??i2___flmul,f,c
 53177  015DE0  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 53178  015DE4  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 53179  015DE8  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 53180  015DEC  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 53181  015DF0  4A47               	infsnz	i2___flmul@temp,f,c
 53182  015DF2  2A48               	incf	i2___flmul@temp+1,f,c
 53183  015DF4                     i2l2822:
 53184  015DF4  BE48               	btfsc	i2___flmul@temp+1,7,c
 53185  015DF6  D00D               	goto	i2l2823
 53186  015DF8  5048               	movf	i2___flmul@temp+1,w,c
 53187  015DFA  E103               	bnz	i2u1782_40
 53188  015DFC  2847               	incf	i2___flmul@temp,w,c
 53189  015DFE  A0D8               	btfss	status,0,c
 53190  015E00  D008               	goto	i2l2823
 53191  015E02                     i2u1782_40:
 53192  015E02  0E00               	movlw	0
 53193  015E04  6E43               	movwf	i2___flmul@prod,c
 53194  015E06  0E00               	movlw	0
 53195  015E08  6E44               	movwf	i2___flmul@prod+1,c
 53196  015E0A  0E80               	movlw	128
 53197  015E0C  6E45               	movwf	i2___flmul@prod+2,c
 53198  015E0E  0E7F               	movlw	127
 53199  015E10  D020               	goto	L29
 53200  015E12                     i2l2823:
 53201  015E12  BE48               	btfsc	i2___flmul@temp+1,7,c
 53202  015E14  D005               	goto	i2u1783_40
 53203  015E16  5048               	movf	i2___flmul@temp+1,w,c
 53204  015E18  E10E               	bnz	i2l2825
 53205  015E1A  0447               	decf	i2___flmul@temp,w,c
 53206  015E1C  B0D8               	btfsc	status,0,c
 53207  015E1E  D00B               	goto	i2l2825
 53208  015E20                     i2u1783_40:
 53209  015E20  0E00               	movlw	0
 53210  015E22  6E43               	movwf	i2___flmul@prod,c
 53211  015E24  0E00               	movlw	0
 53212  015E26  6E44               	movwf	i2___flmul@prod+1,c
 53213  015E28  0E00               	movlw	0
 53214  015E2A  6E45               	movwf	i2___flmul@prod+2,c
 53215  015E2C  0E00               	movlw	0
 53216  015E2E  6E46               	movwf	i2___flmul@prod+3,c
 53217  015E30  0E00               	movlw	0
 53218  015E32  6E3C               	movwf	i2___flmul@sign,c
 53219  015E34  D00F               	goto	i2l2826
 53220  015E36                     i2l2825:
 53221  015E36  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 53222  015E3A  0EFF               	movlw	255
 53223  015E3C  1643               	andwf	i2___flmul@prod,f,c
 53224  015E3E  0EFF               	movlw	255
 53225  015E40  1644               	andwf	i2___flmul@prod+1,f,c
 53226  015E42  0E7F               	movlw	127
 53227  015E44  1645               	andwf	i2___flmul@prod+2,f,c
 53228  015E46  0E00               	movlw	0
 53229  015E48  1646               	andwf	i2___flmul@prod+3,f,c
 53230  015E4A  B042               	btfsc	i2___flmul@bexp,0,c
 53231  015E4C  8E45               	bsf	i2___flmul@prod+2,7,c
 53232  015E4E  90D8               	bcf	status,0,c
 53233  015E50  3042               	rrcf	i2___flmul@bexp,w,c
 53234  015E52                     L29:
 53235  015E52  6E46               	movwf	i2___flmul@prod+3,c
 53236  015E54                     i2l2826:
 53237  015E54  503C               	movf	i2___flmul@sign,w,c
 53238  015E56  1246               	iorwf	i2___flmul@prod+3,f,c
 53239  015E58  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 53240  015E5C  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 53241  015E60  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 53242  015E64  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 53243  015E68  0012               	return	
 53244  015E6A                     __end_ofi2___flmul:
 53245                           	opt stack 0
 53246                           tosu	equ	0xFFF
 53247                           tosh	equ	0xFFE
 53248                           tosl	equ	0xFFD
 53249                           pclatu	equ	0xFFB
 53250                           pclath	equ	0xFFA
 53251                           tblptru	equ	0xFF8
 53252                           tblptrh	equ	0xFF7
 53253                           tblptrl	equ	0xFF6
 53254                           tablat	equ	0xFF5
 53255                           prodh	equ	0xFF4
 53256                           prodl	equ	0xFF3
 53257                           intcon	equ	0xFF2
 53258                           indf0	equ	0xFEF
 53259                           postinc0	equ	0xFEE
 53260                           fsr0h	equ	0xFEA
 53261                           fsr0l	equ	0xFE9
 53262                           wreg	equ	0xFE8
 53263                           indf1	equ	0xFE7
 53264                           postdec1	equ	0xFE5
 53265                           plusw1	equ	0xFE3
 53266                           fsr1h	equ	0xFE2
 53267                           fsr1l	equ	0xFE1
 53268                           bsr	equ	0xFE0
 53269                           indf2	equ	0xFDF
 53270                           postinc2	equ	0xFDE
 53271                           postdec2	equ	0xFDD
 53272                           plusw2	equ	0xFDB
 53273                           fsr2h	equ	0xFDA
 53274                           fsr2l	equ	0xFD9
 53275                           status	equ	0xFD8
 53276                           
 53277 ;; *************** function i2___fladd *****************
 53278 ;; Defined at:
 53279 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 53280 ;; Parameters:    Size  Location     Type
 53281 ;;  b               4   85[COMRAM] unsigned char 
 53282 ;;  a               4   89[COMRAM] unsigned char 
 53283 ;; Auto vars:     Size  Location     Type
 53284 ;;  __fladd         1   11[BANK0 ] unsigned char 
 53285 ;;  __fladd         1   10[BANK0 ] unsigned char 
 53286 ;;  __fladd         1    9[BANK0 ] unsigned char 
 53287 ;;  __fladd         1    8[BANK0 ] unsigned char 
 53288 ;; Return value:  Size  Location     Type
 53289 ;;                  4   85[COMRAM] unsigned char 
 53290 ;; Registers used:
 53291 ;;		wreg, status,2, status,0
 53292 ;; Tracked objects:
 53293 ;;		On entry : 0/0
 53294 ;;		On exit  : 0/0
 53295 ;;		Unchanged: 0/0
 53296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53297 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53299 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53300 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53301 ;;Total ram usage:       20 bytes
 53302 ;; Hardware stack levels used:    1
 53303 ;; This function calls:
 53304 ;;		Nothing
 53305 ;; This function is called by:
 53306 ;;		_peakToRMS
 53307 ;;		_ADCPostProcessingCallback
 53308 ;;		_acos
 53309 ;;		_asin
 53310 ;;		_atan
 53311 ;;		_eval_poly
 53312 ;;		_sin
 53313 ;;		_floor
 53314 ;;		i2__doprnt
 53315 ;;		i2___flsub
 53316 ;; This function uses a non-reentrant model
 53317 ;;
 53318                           
 53319                           	psect	text168
 53320  0161A8                     __ptext168:
 53321                           	opt stack 0
 53322  0161A8                     i2___fladd:
 53323                           	opt stack 13
 53324                           
 53325                           ;incstack = 0
 53326  0161A8  5059               	movf	i2___fladd@b+3,w,c
 53327  0161AA  0B80               	andlw	128
 53328  0161AC  0100               	movlb	0	; () banked
 53329  0161AE  6F68               	movwf	i2___fladd@signs& (0+255),b
 53330  0161B0  5059               	movf	i2___fladd@b+3,w,c
 53331  0161B2  2459               	addwf	i2___fladd@b+3,w,c
 53332  0161B4  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 53333                           
 53334                           ; BSR set to: 0
 53335  0161B6  BE58               	btfsc	i2___fladd@b+2,7,c
 53336                           
 53337                           ; BSR set to: 0
 53338  0161B8  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 53339                           
 53340                           ; BSR set to: 0
 53341                           
 53342                           ; BSR set to: 0
 53343  0161BA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53344  0161BC  B4D8               	btfsc	status,2,c
 53345  0161BE  D00D               	goto	i2l2711
 53346                           
 53347                           ; BSR set to: 0
 53348  0161C0  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53349  0161C2  A4D8               	btfss	status,2,c
 53350  0161C4  D008               	goto	i2l2712
 53351                           
 53352                           ; BSR set to: 0
 53353  0161C6  0E00               	movlw	0
 53354  0161C8  6E56               	movwf	i2___fladd@b,c
 53355  0161CA  0E00               	movlw	0
 53356  0161CC  6E57               	movwf	i2___fladd@b+1,c
 53357  0161CE  0E00               	movlw	0
 53358  0161D0  6E58               	movwf	i2___fladd@b+2,c
 53359  0161D2  0E00               	movlw	0
 53360  0161D4  6E59               	movwf	i2___fladd@b+3,c
 53361  0161D6                     i2l2712:
 53362                           
 53363                           ; BSR set to: 0
 53364                           
 53365                           ; BSR set to: 0
 53366  0161D6  8E58               	bsf	i2___fladd@b+2,7,c
 53367  0161D8  D006               	goto	L30
 53368  0161DA                     i2l2711:
 53369                           
 53370                           ; BSR set to: 0
 53371                           
 53372                           ; BSR set to: 0
 53373  0161DA  0E00               	movlw	0
 53374  0161DC  6E56               	movwf	i2___fladd@b,c
 53375  0161DE  0E00               	movlw	0
 53376  0161E0  6E57               	movwf	i2___fladd@b+1,c
 53377  0161E2  0E00               	movlw	0
 53378  0161E4  6E58               	movwf	i2___fladd@b+2,c
 53379  0161E6                     L30:
 53380  0161E6  0E00               	movlw	0
 53381  0161E8  6E59               	movwf	i2___fladd@b+3,c
 53382                           
 53383                           ; BSR set to: 0
 53384                           
 53385                           ; BSR set to: 0
 53386  0161EA  505D               	movf	i2___fladd@a+3,w,c
 53387  0161EC  0B80               	andlw	128
 53388  0161EE  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53389                           
 53390                           ; BSR set to: 0
 53391  0161F0  5168               	movf	i2___fladd@signs& (0+255),w,b
 53392  0161F2  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 53393  0161F4  A4D8               	btfss	status,2,c
 53394                           
 53395                           ; BSR set to: 0
 53396  0161F6  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 53397                           
 53398                           ; BSR set to: 0
 53399                           
 53400                           ; BSR set to: 0
 53401  0161F8  505D               	movf	i2___fladd@a+3,w,c
 53402  0161FA  245D               	addwf	i2___fladd@a+3,w,c
 53403  0161FC  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53404                           
 53405                           ; BSR set to: 0
 53406  0161FE  BE5C               	btfsc	i2___fladd@a+2,7,c
 53407                           
 53408                           ; BSR set to: 0
 53409  016200  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 53410                           
 53411                           ; BSR set to: 0
 53412                           
 53413                           ; BSR set to: 0
 53414  016202  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53415  016204  B4D8               	btfsc	status,2,c
 53416  016206  D00D               	goto	i2l2716
 53417                           
 53418                           ; BSR set to: 0
 53419  016208  2969               	incf	i2___fladd@aexp& (0+255),w,b
 53420  01620A  A4D8               	btfss	status,2,c
 53421  01620C  D008               	goto	i2l2717
 53422                           
 53423                           ; BSR set to: 0
 53424  01620E  0E00               	movlw	0
 53425  016210  6E5A               	movwf	i2___fladd@a,c
 53426  016212  0E00               	movlw	0
 53427  016214  6E5B               	movwf	i2___fladd@a+1,c
 53428  016216  0E00               	movlw	0
 53429  016218  6E5C               	movwf	i2___fladd@a+2,c
 53430  01621A  0E00               	movlw	0
 53431  01621C  6E5D               	movwf	i2___fladd@a+3,c
 53432  01621E                     i2l2717:
 53433                           
 53434                           ; BSR set to: 0
 53435                           
 53436                           ; BSR set to: 0
 53437  01621E  8E5C               	bsf	i2___fladd@a+2,7,c
 53438  016220  D006               	goto	L31
 53439  016222                     i2l2716:
 53440                           
 53441                           ; BSR set to: 0
 53442                           
 53443                           ; BSR set to: 0
 53444  016222  0E00               	movlw	0
 53445  016224  6E5A               	movwf	i2___fladd@a,c
 53446  016226  0E00               	movlw	0
 53447  016228  6E5B               	movwf	i2___fladd@a+1,c
 53448  01622A  0E00               	movlw	0
 53449  01622C  6E5C               	movwf	i2___fladd@a+2,c
 53450  01622E                     L31:
 53451  01622E  0E00               	movlw	0
 53452  016230  6E5D               	movwf	i2___fladd@a+3,c
 53453                           
 53454                           ; BSR set to: 0
 53455                           
 53456                           ; BSR set to: 0
 53457  016232  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53458  016234  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 53459  016236  B0D8               	btfsc	status,0,c
 53460  016238  D022               	goto	i2l2719
 53461                           
 53462                           ; BSR set to: 0
 53463  01623A  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 53464  01623C  D002               	goto	i2l2720
 53465                           
 53466                           ; BSR set to: 0
 53467  01623E  0E80               	movlw	128
 53468  016240  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 53469  016242                     i2l2720:
 53470                           
 53471                           ; BSR set to: 0
 53472                           
 53473                           ; BSR set to: 0
 53474  016242  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 53475                           
 53476                           ; BSR set to: 0
 53477  016246  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53478                           
 53479                           ; BSR set to: 0
 53480  01624A  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 53481                           
 53482                           ; BSR set to: 0
 53483  01624E  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 53484                           
 53485                           ; BSR set to: 0
 53486  016252  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 53487                           
 53488                           ; BSR set to: 0
 53489  016256  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 53490                           
 53491                           ; BSR set to: 0
 53492  01625A  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 53493                           
 53494                           ; BSR set to: 0
 53495  01625E  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 53496                           
 53497                           ; BSR set to: 0
 53498  016262  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 53499                           
 53500                           ; BSR set to: 0
 53501  016266  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 53502                           
 53503                           ; BSR set to: 0
 53504  01626A  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 53505                           
 53506                           ; BSR set to: 0
 53507  01626E  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 53508                           
 53509                           ; BSR set to: 0
 53510  016272  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 53511                           
 53512                           ; BSR set to: 0
 53513  016276  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 53514                           
 53515                           ; BSR set to: 0
 53516  01627A  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 53517  01627E                     i2l2719:
 53518                           
 53519                           ; BSR set to: 0
 53520                           
 53521                           ; BSR set to: 0
 53522  01627E  0E00               	movlw	0
 53523  016280  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53524                           
 53525                           ; BSR set to: 0
 53526  016282  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53527  016284  6F60               	movwf	??i2___fladd& (0+255),b
 53528  016286  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 53529  016288  1F60               	comf	??i2___fladd& (0+255),f,b
 53530  01628A  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53531  01628C  4B60               	infsnz	??i2___fladd& (0+255),f,b
 53532  01628E  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 53533  016290  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53534  016292  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 53535  016294  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 53536  016296  5160               	movf	??i2___fladd& (0+255),w,b
 53537  016298  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 53538  01629A  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 53539  01629C  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53540  01629E  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 53541  0162A0  D02C               	goto	i2l2723
 53542  0162A2  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 53543  0162A4  E104               	bnz	i2u1736_40
 53544  0162A6  0E1A               	movlw	26
 53545  0162A8  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 53546  0162AA  A0D8               	btfss	status,0,c
 53547  0162AC  D026               	goto	i2l2723
 53548  0162AE                     i2u1736_40:
 53549                           
 53550                           ; BSR set to: 0
 53551  0162AE  5056               	movf	i2___fladd@b,w,c
 53552  0162B0  1057               	iorwf	i2___fladd@b+1,w,c
 53553  0162B2  1058               	iorwf	i2___fladd@b+2,w,c
 53554  0162B4  1059               	iorwf	i2___fladd@b+3,w,c
 53555  0162B6  B4D8               	btfsc	status,2,c
 53556  0162B8  D002               	goto	i2u1737_40
 53557  0162BA  0E01               	movlw	1
 53558  0162BC  D001               	goto	i2u1738_40
 53559  0162BE                     i2u1737_40:
 53560  0162BE  0E00               	movlw	0
 53561  0162C0                     i2u1738_40:
 53562  0162C0  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53563                           
 53564                           ; BSR set to: 0
 53565  0162C2  0E00               	movlw	0
 53566  0162C4  6E56               	movwf	i2___fladd@b,c
 53567  0162C6  0E00               	movlw	0
 53568  0162C8  6E57               	movwf	i2___fladd@b+1,c
 53569  0162CA  0E00               	movlw	0
 53570  0162CC  6E58               	movwf	i2___fladd@b+2,c
 53571  0162CE  0E00               	movlw	0
 53572  0162D0  6E59               	movwf	i2___fladd@b+3,c
 53573                           
 53574                           ; BSR set to: 0
 53575  0162D2  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 53576  0162D6  D015               	goto	i2u1741_40
 53577  0162D8                     i2l2724:
 53578                           
 53579                           ; BSR set to: 0
 53580  0162D8  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53581  0162DA  D005               	goto	i2l2725
 53582                           
 53583                           ; BSR set to: 0
 53584  0162DC  90D8               	bcf	status,0,c
 53585  0162DE  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 53586  0162E0  0901               	iorlw	1
 53587  0162E2  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53588  0162E4  D002               	goto	i2l2726
 53589  0162E6                     i2l2725:
 53590                           
 53591                           ; BSR set to: 0
 53592                           
 53593                           ; BSR set to: 0
 53594  0162E6  90D8               	bcf	status,0,c
 53595  0162E8  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53596  0162EA                     i2l2726:
 53597                           
 53598                           ; BSR set to: 0
 53599                           
 53600                           ; BSR set to: 0
 53601  0162EA  B056               	btfsc	i2___fladd@b,0,c
 53602                           
 53603                           ; BSR set to: 0
 53604  0162EC  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53605                           
 53606                           ; BSR set to: 0
 53607                           
 53608                           ; BSR set to: 0
 53609  0162EE  3459               	rlcf	i2___fladd@b+3,w,c
 53610  0162F0  3259               	rrcf	i2___fladd@b+3,f,c
 53611  0162F2  3258               	rrcf	i2___fladd@b+2,f,c
 53612  0162F4  3257               	rrcf	i2___fladd@b+1,f,c
 53613  0162F6  3256               	rrcf	i2___fladd@b,f,c
 53614                           
 53615                           ; BSR set to: 0
 53616  0162F8  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53617  0162FA                     i2l2723:
 53618                           
 53619                           ; BSR set to: 0
 53620  0162FA  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53621  0162FC  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 53622  0162FE  A0D8               	btfss	status,0,c
 53623  016300  D7EB               	goto	i2l2724
 53624  016302                     i2u1741_40:
 53625                           
 53626                           ; BSR set to: 0
 53627                           
 53628                           ; BSR set to: 0
 53629  016302  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 53630  016304  D029               	goto	i2l2729
 53631                           
 53632                           ; BSR set to: 0
 53633  016306  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53634  016308  A4D8               	btfss	status,2,c
 53635  01630A  D009               	goto	i2l2730
 53636                           
 53637                           ; BSR set to: 0
 53638  01630C  0E00               	movlw	0
 53639  01630E  6E56               	movwf	?i2___fladd,c
 53640  016310  0E00               	movlw	0
 53641  016312  6E57               	movwf	?i2___fladd+1,c
 53642  016314  0E00               	movlw	0
 53643  016316  6E58               	movwf	?i2___fladd+2,c
 53644  016318  0E00               	movlw	0
 53645  01631A  6E59               	movwf	?i2___fladd+3,c
 53646                           
 53647                           ; BSR set to: 0
 53648  01631C  0012               	return	
 53649  01631E                     i2l2730:
 53650                           
 53651                           ; BSR set to: 0
 53652                           
 53653                           ; BSR set to: 0
 53654  01631E  505A               	movf	i2___fladd@a,w,c
 53655  016320  2656               	addwf	i2___fladd@b,f,c
 53656  016322  505B               	movf	i2___fladd@a+1,w,c
 53657  016324  2257               	addwfc	i2___fladd@b+1,f,c
 53658  016326  505C               	movf	i2___fladd@a+2,w,c
 53659  016328  2258               	addwfc	i2___fladd@b+2,f,c
 53660  01632A  505D               	movf	i2___fladd@a+3,w,c
 53661  01632C  2259               	addwfc	i2___fladd@b+3,f,c
 53662                           
 53663                           ; BSR set to: 0
 53664  01632E  A059               	btfss	i2___fladd@b+3,0,c
 53665  016330  D083               	goto	i2u1754_40
 53666                           
 53667                           ; BSR set to: 0
 53668  016332  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53669  016334  D006               	goto	i2l2733
 53670                           
 53671                           ; BSR set to: 0
 53672  016336  90D8               	bcf	status,0,c
 53673  016338  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53674  01633A  516B               	movf	i2___fladd@grs& (0+255),w,b
 53675  01633C  0901               	iorlw	1
 53676  01633E  6F6B               	movwf	i2___fladd@grs& (0+255),b
 53677  016340  D002               	goto	i2l2734
 53678  016342                     i2l2733:
 53679                           
 53680                           ; BSR set to: 0
 53681                           
 53682                           ; BSR set to: 0
 53683  016342  90D8               	bcf	status,0,c
 53684  016344  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 53685  016346                     i2l2734:
 53686                           
 53687                           ; BSR set to: 0
 53688                           
 53689                           ; BSR set to: 0
 53690  016346  B056               	btfsc	i2___fladd@b,0,c
 53691                           
 53692                           ; BSR set to: 0
 53693  016348  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 53694                           
 53695                           ; BSR set to: 0
 53696                           
 53697                           ; BSR set to: 0
 53698  01634A  3459               	rlcf	i2___fladd@b+3,w,c
 53699  01634C  3259               	rrcf	i2___fladd@b+3,f,c
 53700  01634E  3258               	rrcf	i2___fladd@b+2,f,c
 53701  016350  3257               	rrcf	i2___fladd@b+1,f,c
 53702  016352  3256               	rrcf	i2___fladd@b,f,c
 53703                           
 53704                           ; BSR set to: 0
 53705  016354  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53706                           
 53707                           ; BSR set to: 0
 53708  016356  D070               	goto	i2u1754_40
 53709  016358                     i2l2729:
 53710                           
 53711                           ; BSR set to: 0
 53712                           
 53713                           ; BSR set to: 0
 53714  016358  505A               	movf	i2___fladd@a,w,c
 53715  01635A  5C56               	subwf	i2___fladd@b,w,c
 53716  01635C  505B               	movf	i2___fladd@a+1,w,c
 53717  01635E  5857               	subwfb	i2___fladd@b+1,w,c
 53718  016360  505C               	movf	i2___fladd@a+2,w,c
 53719  016362  5858               	subwfb	i2___fladd@b+2,w,c
 53720  016364  5059               	movf	i2___fladd@b+3,w,c
 53721  016366  0A80               	xorlw	128
 53722  016368  6F60               	movwf	??i2___fladd& (0+255),b
 53723  01636A  505D               	movf	i2___fladd@a+3,w,c
 53724  01636C  0A80               	xorlw	128
 53725  01636E  5960               	subwfb	??i2___fladd& (0+255),w,b
 53726  016370  B0D8               	btfsc	status,0,c
 53727  016372  D036               	goto	i2l2737
 53728                           
 53729                           ; BSR set to: 0
 53730  016374  C056  F060         	movff	i2___fladd@b,??i2___fladd
 53731  016378  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 53732  01637C  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 53733  016380  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 53734  016384  1F60               	comf	??i2___fladd& (0+255),f,b
 53735  016386  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 53736  016388  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 53737  01638A  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 53738  01638C  2B60               	incf	??i2___fladd& (0+255),f,b
 53739  01638E  0E00               	movlw	0
 53740  016390  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 53741  016392  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 53742  016394  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 53743  016396  505A               	movf	i2___fladd@a,w,c
 53744  016398  2560               	addwf	??i2___fladd& (0+255),w,b
 53745  01639A  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 53746  01639C  505B               	movf	i2___fladd@a+1,w,c
 53747  01639E  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 53748  0163A0  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 53749  0163A2  505C               	movf	i2___fladd@a+2,w,c
 53750  0163A4  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 53751  0163A6  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 53752  0163A8  505D               	movf	i2___fladd@a+3,w,c
 53753  0163AA  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 53754  0163AC  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 53755  0163AE  0EFF               	movlw	255
 53756  0163B0  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 53757  0163B2  6E56               	movwf	i2___fladd@b,c
 53758  0163B4  0EFF               	movlw	255
 53759  0163B6  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 53760  0163B8  6E57               	movwf	i2___fladd@b+1,c
 53761  0163BA  0EFF               	movlw	255
 53762  0163BC  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 53763  0163BE  6E58               	movwf	i2___fladd@b+2,c
 53764  0163C0  0EFF               	movlw	255
 53765  0163C2  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 53766  0163C4  6E59               	movwf	i2___fladd@b+3,c
 53767  0163C6  0E80               	movlw	128
 53768  0163C8  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 53769                           
 53770                           ; BSR set to: 0
 53771  0163CA  6D6B               	negf	i2___fladd@grs& (0+255),b
 53772                           
 53773                           ; BSR set to: 0
 53774  0163CC  516B               	movf	i2___fladd@grs& (0+255),w,b
 53775  0163CE  A4D8               	btfss	status,2,c
 53776  0163D0  D00F               	goto	i2l2739
 53777                           
 53778                           ; BSR set to: 0
 53779  0163D2  0E01               	movlw	1
 53780  0163D4  2656               	addwf	i2___fladd@b,f,c
 53781  0163D6  0E00               	movlw	0
 53782  0163D8  2257               	addwfc	i2___fladd@b+1,f,c
 53783  0163DA  2258               	addwfc	i2___fladd@b+2,f,c
 53784  0163DC  2259               	addwfc	i2___fladd@b+3,f,c
 53785                           
 53786                           ; BSR set to: 0
 53787  0163DE  D008               	goto	i2l2739
 53788  0163E0                     i2l2737:
 53789                           
 53790                           ; BSR set to: 0
 53791                           
 53792                           ; BSR set to: 0
 53793  0163E0  505A               	movf	i2___fladd@a,w,c
 53794  0163E2  5E56               	subwf	i2___fladd@b,f,c
 53795  0163E4  505B               	movf	i2___fladd@a+1,w,c
 53796  0163E6  5A57               	subwfb	i2___fladd@b+1,f,c
 53797  0163E8  505C               	movf	i2___fladd@a+2,w,c
 53798  0163EA  5A58               	subwfb	i2___fladd@b+2,f,c
 53799  0163EC  505D               	movf	i2___fladd@a+3,w,c
 53800  0163EE  5A59               	subwfb	i2___fladd@b+3,f,c
 53801  0163F0                     i2l2739:
 53802                           
 53803                           ; BSR set to: 0
 53804  0163F0  5056               	movf	i2___fladd@b,w,c
 53805  0163F2  1057               	iorwf	i2___fladd@b+1,w,c
 53806  0163F4  1058               	iorwf	i2___fladd@b+2,w,c
 53807  0163F6  1059               	iorwf	i2___fladd@b+3,w,c
 53808  0163F8  A4D8               	btfss	status,2,c
 53809  0163FA  D01C               	goto	i2l2746
 53810                           
 53811                           ; BSR set to: 0
 53812  0163FC  516B               	movf	i2___fladd@grs& (0+255),w,b
 53813  0163FE  A4D8               	btfss	status,2,c
 53814  016400  D019               	goto	i2l2746
 53815                           
 53816                           ; BSR set to: 0
 53817  016402  0E00               	movlw	0
 53818  016404  6E56               	movwf	?i2___fladd,c
 53819  016406  0E00               	movlw	0
 53820  016408  6E57               	movwf	?i2___fladd+1,c
 53821  01640A  0E00               	movlw	0
 53822  01640C  6E58               	movwf	?i2___fladd+2,c
 53823  01640E  0E00               	movlw	0
 53824  016410  6E59               	movwf	?i2___fladd+3,c
 53825                           
 53826                           ; BSR set to: 0
 53827  016412  0012               	return	
 53828  016414                     
 53829                           ; BSR set to: 0
 53830                           
 53831                           ; BSR set to: 0
 53832  016414  90D8               	bcf	status,0,c
 53833  016416  3656               	rlcf	i2___fladd@b,f,c
 53834  016418  3657               	rlcf	i2___fladd@b+1,f,c
 53835  01641A  3658               	rlcf	i2___fladd@b+2,f,c
 53836  01641C  3659               	rlcf	i2___fladd@b+3,f,c
 53837                           
 53838                           ; BSR set to: 0
 53839  01641E  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 53840                           
 53841                           ; BSR set to: 0
 53842  016420  8056               	bsf	i2___fladd@b,0,c
 53843                           
 53844                           ; BSR set to: 0
 53845                           
 53846                           ; BSR set to: 0
 53847  016422  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 53848  016424  D002               	goto	i2l2744
 53849                           
 53850                           ; BSR set to: 0
 53851  016426  80D8               	bsf	status,0,c
 53852  016428  D001               	goto	L32
 53853  01642A                     i2l2744:
 53854                           
 53855                           ; BSR set to: 0
 53856                           
 53857                           ; BSR set to: 0
 53858  01642A  90D8               	bcf	status,0,c
 53859  01642C                     L32:
 53860  01642C  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 53861                           
 53862                           ; BSR set to: 0
 53863                           
 53864                           ; BSR set to: 0
 53865  01642E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53866  016430  A4D8               	btfss	status,2,c
 53867                           
 53868                           ; BSR set to: 0
 53869  016432  076A               	decf	i2___fladd@bexp& (0+255),f,b
 53870  016434                     i2l2746:
 53871                           
 53872                           ; BSR set to: 0
 53873                           
 53874                           ; BSR set to: 0
 53875                           
 53876                           ; BSR set to: 0
 53877  016434  AE58               	btfss	i2___fladd@b+2,7,c
 53878  016436  D7EE               	goto	i2l2742
 53879  016438                     i2u1754_40:
 53880                           
 53881                           ; BSR set to: 0
 53882                           
 53883                           ; BSR set to: 0
 53884                           
 53885                           ; BSR set to: 0
 53886  016438  0E00               	movlw	0
 53887  01643A  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53888                           
 53889                           ; BSR set to: 0
 53890  01643C  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 53891  01643E  D00A               	goto	i2l2751
 53892                           
 53893                           ; BSR set to: 0
 53894  016440  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 53895  016444  0E7F               	movlw	127
 53896  016446  1760               	andwf	??i2___fladd& (0+255),f,b
 53897  016448  A4D8               	btfss	status,2,c
 53898  01644A  D002               	goto	i2u1757_40
 53899                           
 53900                           ; BSR set to: 0
 53901                           
 53902                           ; BSR set to: 0
 53903  01644C  A056               	btfss	i2___fladd@b,0,c
 53904  01644E  D002               	goto	i2l2751
 53905  016450                     i2u1757_40:
 53906                           
 53907                           ; BSR set to: 0
 53908  016450  0E01               	movlw	1
 53909  016452  6F69               	movwf	i2___fladd@aexp& (0+255),b
 53910  016454                     i2l2751:
 53911                           
 53912                           ; BSR set to: 0
 53913                           
 53914                           ; BSR set to: 0
 53915                           
 53916                           ; BSR set to: 0
 53917  016454  5169               	movf	i2___fladd@aexp& (0+255),w,b
 53918  016456  B4D8               	btfsc	status,2,c
 53919  016458  D020               	goto	i2l2754
 53920                           
 53921                           ; BSR set to: 0
 53922  01645A  0E01               	movlw	1
 53923  01645C  2656               	addwf	i2___fladd@b,f,c
 53924  01645E  0E00               	movlw	0
 53925  016460  2257               	addwfc	i2___fladd@b+1,f,c
 53926  016462  2258               	addwfc	i2___fladd@b+2,f,c
 53927  016464  2259               	addwfc	i2___fladd@b+3,f,c
 53928                           
 53929                           ; BSR set to: 0
 53930  016466  A059               	btfss	i2___fladd@b+3,0,c
 53931  016468  D018               	goto	i2l2754
 53932                           
 53933                           ; BSR set to: 0
 53934  01646A  C056  F060         	movff	i2___fladd@b,??i2___fladd
 53935  01646E  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 53936  016472  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 53937  016476  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 53938  01647A  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 53939  01647C  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 53940  01647E  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 53941  016480  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 53942  016482  3360               	rrcf	??i2___fladd& (0+255),f,b
 53943  016484  C060  F056         	movff	??i2___fladd,i2___fladd@b
 53944  016488  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 53945  01648C  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 53946  016490  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 53947  016494  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53948  016496  A4D8               	btfss	status,2,c
 53949                           
 53950                           ; BSR set to: 0
 53951  016498  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 53952  01649A                     i2l2754:
 53953                           
 53954                           ; BSR set to: 0
 53955                           
 53956                           ; BSR set to: 0
 53957                           
 53958                           ; BSR set to: 0
 53959                           
 53960                           ; BSR set to: 0
 53961  01649A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 53962  01649C  B4D8               	btfsc	status,2,c
 53963  01649E  D003               	goto	i2u1762_40
 53964                           
 53965                           ; BSR set to: 0
 53966  0164A0  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53967  0164A2  A4D8               	btfss	status,2,c
 53968  0164A4  D00D               	goto	i2l2758
 53969  0164A6                     i2u1762_40:
 53970                           
 53971                           ; BSR set to: 0
 53972                           
 53973                           ; BSR set to: 0
 53974  0164A6  0E00               	movlw	0
 53975  0164A8  6E56               	movwf	i2___fladd@b,c
 53976  0164AA  0E00               	movlw	0
 53977  0164AC  6E57               	movwf	i2___fladd@b+1,c
 53978  0164AE  0E00               	movlw	0
 53979  0164B0  6E58               	movwf	i2___fladd@b+2,c
 53980  0164B2  0E00               	movlw	0
 53981  0164B4  6E59               	movwf	i2___fladd@b+3,c
 53982  0164B6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 53983  0164B8  A4D8               	btfss	status,2,c
 53984  0164BA  D002               	goto	i2l2758
 53985                           
 53986                           ; BSR set to: 0
 53987  0164BC  0E00               	movlw	0
 53988  0164BE  6F68               	movwf	i2___fladd@signs& (0+255),b
 53989  0164C0                     i2l2758:
 53990                           
 53991                           ; BSR set to: 0
 53992                           
 53993                           ; BSR set to: 0
 53994                           
 53995                           ; BSR set to: 0
 53996  0164C0  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 53997  0164C2  D002               	goto	i2l2759
 53998                           
 53999                           ; BSR set to: 0
 54000  0164C4  8E58               	bsf	i2___fladd@b+2,7,c
 54001  0164C6  D001               	goto	i2l2760
 54002  0164C8                     i2l2759:
 54003                           
 54004                           ; BSR set to: 0
 54005                           
 54006                           ; BSR set to: 0
 54007  0164C8  9E58               	bcf	i2___fladd@b+2,7,c
 54008  0164CA                     i2l2760:
 54009                           
 54010                           ; BSR set to: 0
 54011                           
 54012                           ; BSR set to: 0
 54013  0164CA  90D8               	bcf	status,0,c
 54014  0164CC  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 54015  0164CE  6E59               	movwf	i2___fladd@b+3,c
 54016                           
 54017                           ; BSR set to: 0
 54018  0164D0  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 54019                           
 54020                           ; BSR set to: 0
 54021  0164D2  8E59               	bsf	i2___fladd@b+3,7,c
 54022                           
 54023                           ; BSR set to: 0
 54024                           
 54025                           ; BSR set to: 0
 54026  0164D4  C056  F056         	movff	i2___fladd@b,?i2___fladd
 54027  0164D8  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 54028  0164DC  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 54029  0164E0  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 54030  0164E4  0012               	return	
 54031  0164E6                     __end_ofi2___fladd:
 54032                           	opt stack 0
 54033                           tosu	equ	0xFFF
 54034                           tosh	equ	0xFFE
 54035                           tosl	equ	0xFFD
 54036                           pclatu	equ	0xFFB
 54037                           pclath	equ	0xFFA
 54038                           tblptru	equ	0xFF8
 54039                           tblptrh	equ	0xFF7
 54040                           tblptrl	equ	0xFF6
 54041                           tablat	equ	0xFF5
 54042                           prodh	equ	0xFF4
 54043                           prodl	equ	0xFF3
 54044                           intcon	equ	0xFF2
 54045                           indf0	equ	0xFEF
 54046                           postinc0	equ	0xFEE
 54047                           fsr0h	equ	0xFEA
 54048                           fsr0l	equ	0xFE9
 54049                           wreg	equ	0xFE8
 54050                           indf1	equ	0xFE7
 54051                           postdec1	equ	0xFE5
 54052                           plusw1	equ	0xFE3
 54053                           fsr1h	equ	0xFE2
 54054                           fsr1l	equ	0xFE1
 54055                           bsr	equ	0xFE0
 54056                           indf2	equ	0xFDF
 54057                           postinc2	equ	0xFDE
 54058                           postdec2	equ	0xFDD
 54059                           plusw2	equ	0xFDB
 54060                           fsr2h	equ	0xFDA
 54061                           fsr2l	equ	0xFD9
 54062                           status	equ	0xFD8
 54063                           
 54064 ;; *************** function _abs *****************
 54065 ;; Defined at:
 54066 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 54067 ;; Parameters:    Size  Location     Type
 54068 ;;  a               2   22[BANK0 ] int 
 54069 ;; Auto vars:     Size  Location     Type
 54070 ;;		None
 54071 ;; Return value:  Size  Location     Type
 54072 ;;                  2   22[BANK0 ] int 
 54073 ;; Registers used:
 54074 ;;		wreg, status,2, status,0
 54075 ;; Tracked objects:
 54076 ;;		On entry : 0/0
 54077 ;;		On exit  : 0/0
 54078 ;;		Unchanged: 0/0
 54079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54084 ;;Total ram usage:        4 bytes
 54085 ;; Hardware stack levels used:    1
 54086 ;; This function calls:
 54087 ;;		Nothing
 54088 ;; This function is called by:
 54089 ;;		_ADCPostProcessingCallback
 54090 ;; This function uses a non-reentrant model
 54091 ;;
 54092                           
 54093                           	psect	text169
 54094  01AD8E                     __ptext169:
 54095                           	opt stack 0
 54096  01AD8E                     _abs:
 54097                           	opt stack 15
 54098                           
 54099                           ; BSR set to: 0
 54100                           ;incstack = 0
 54101  01AD8E  0100               	movlb	0	; () banked
 54102  01AD90  AF77               	btfss	(abs@a+1)& (0+255),7,b
 54103  01AD92  D00D               	goto	i2l2165
 54104                           
 54105                           ; BSR set to: 0
 54106  01AD94  C076  F078         	movff	abs@a,??_abs
 54107  01AD98  C077  F079         	movff	abs@a+1,??_abs+1
 54108  01AD9C  1F78               	comf	??_abs& (0+255),f,b
 54109  01AD9E  1F79               	comf	(??_abs+1)& (0+255),f,b
 54110  01ADA0  4B78               	infsnz	??_abs& (0+255),f,b
 54111  01ADA2  2B79               	incf	(??_abs+1)& (0+255),f,b
 54112  01ADA4  C078  F076         	movff	??_abs,?_abs
 54113  01ADA8  C079  F077         	movff	??_abs+1,?_abs+1
 54114  01ADAC  0012               	return	
 54115  01ADAE                     i2l2165:
 54116                           
 54117                           ; BSR set to: 0
 54118  01ADAE  C076  F076         	movff	abs@a,?_abs
 54119  01ADB2  C077  F077         	movff	abs@a+1,?_abs+1
 54120                           
 54121                           ; BSR set to: 0
 54122  01ADB6  0012               	return		;funcret
 54123  01ADB8                     __end_of_abs:
 54124                           	opt stack 0
 54125                           tosu	equ	0xFFF
 54126                           tosh	equ	0xFFE
 54127                           tosl	equ	0xFFD
 54128                           pclatu	equ	0xFFB
 54129                           pclath	equ	0xFFA
 54130                           tblptru	equ	0xFF8
 54131                           tblptrh	equ	0xFF7
 54132                           tblptrl	equ	0xFF6
 54133                           tablat	equ	0xFF5
 54134                           prodh	equ	0xFF4
 54135                           prodl	equ	0xFF3
 54136                           intcon	equ	0xFF2
 54137                           indf0	equ	0xFEF
 54138                           postinc0	equ	0xFEE
 54139                           fsr0h	equ	0xFEA
 54140                           fsr0l	equ	0xFE9
 54141                           wreg	equ	0xFE8
 54142                           indf1	equ	0xFE7
 54143                           postdec1	equ	0xFE5
 54144                           plusw1	equ	0xFE3
 54145                           fsr1h	equ	0xFE2
 54146                           fsr1l	equ	0xFE1
 54147                           bsr	equ	0xFE0
 54148                           indf2	equ	0xFDF
 54149                           postinc2	equ	0xFDE
 54150                           postdec2	equ	0xFDD
 54151                           plusw2	equ	0xFDB
 54152                           fsr2h	equ	0xFDA
 54153                           fsr2l	equ	0xFD9
 54154                           status	equ	0xFD8
 54155                           
 54156 ;; *************** function _ADCC_StopConversion *****************
 54157 ;; Defined at:
 54158 ;;		line 165 in file "mcc_generated_files/adcc.c"
 54159 ;; Parameters:    Size  Location     Type
 54160 ;;		None
 54161 ;; Auto vars:     Size  Location     Type
 54162 ;;		None
 54163 ;; Return value:  Size  Location     Type
 54164 ;;                  1    wreg      void 
 54165 ;; Registers used:
 54166 ;;		None
 54167 ;; Tracked objects:
 54168 ;;		On entry : 0/0
 54169 ;;		On exit  : 0/0
 54170 ;;		Unchanged: 0/0
 54171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54176 ;;Total ram usage:        0 bytes
 54177 ;; Hardware stack levels used:    1
 54178 ;; This function calls:
 54179 ;;		Nothing
 54180 ;; This function is called by:
 54181 ;;		_ADCPostProcessingCallback
 54182 ;; This function uses a non-reentrant model
 54183 ;;
 54184                           
 54185                           	psect	text170
 54186  01B282                     __ptext170:
 54187                           	opt stack 0
 54188  01B282                     _ADCC_StopConversion:
 54189                           	opt stack 15
 54190                           
 54191                           ;adcc.c: 168: ADCON0bits.ADGO = 0;
 54192                           
 54193                           ; BSR set to: 0
 54194                           ;incstack = 0
 54195  01B282  9060               	bcf	3936,0,c	;volatile
 54196  01B284  0012               	return		;funcret
 54197  01B286                     __end_of_ADCC_StopConversion:
 54198                           	opt stack 0
 54199                           tosu	equ	0xFFF
 54200                           tosh	equ	0xFFE
 54201                           tosl	equ	0xFFD
 54202                           pclatu	equ	0xFFB
 54203                           pclath	equ	0xFFA
 54204                           tblptru	equ	0xFF8
 54205                           tblptrh	equ	0xFF7
 54206                           tblptrl	equ	0xFF6
 54207                           tablat	equ	0xFF5
 54208                           prodh	equ	0xFF4
 54209                           prodl	equ	0xFF3
 54210                           intcon	equ	0xFF2
 54211                           indf0	equ	0xFEF
 54212                           postinc0	equ	0xFEE
 54213                           fsr0h	equ	0xFEA
 54214                           fsr0l	equ	0xFE9
 54215                           wreg	equ	0xFE8
 54216                           indf1	equ	0xFE7
 54217                           postdec1	equ	0xFE5
 54218                           plusw1	equ	0xFE3
 54219                           fsr1h	equ	0xFE2
 54220                           fsr1l	equ	0xFE1
 54221                           bsr	equ	0xFE0
 54222                           indf2	equ	0xFDF
 54223                           postinc2	equ	0xFDE
 54224                           postdec2	equ	0xFDD
 54225                           plusw2	equ	0xFDB
 54226                           fsr2h	equ	0xFDA
 54227                           fsr2l	equ	0xFD9
 54228                           status	equ	0xFD8
 54229                           
 54230 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 54231 ;; Defined at:
 54232 ;;		line 219 in file "mcc_generated_files/adcc.c"
 54233 ;; Parameters:    Size  Location     Type
 54234 ;;		None
 54235 ;; Auto vars:     Size  Location     Type
 54236 ;;		None
 54237 ;; Return value:  Size  Location     Type
 54238 ;;                  1    wreg      unsigned char 
 54239 ;; Registers used:
 54240 ;;		wreg
 54241 ;; Tracked objects:
 54242 ;;		On entry : 0/0
 54243 ;;		On exit  : 0/0
 54244 ;;		Unchanged: 0/0
 54245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54250 ;;Total ram usage:        0 bytes
 54251 ;; Hardware stack levels used:    1
 54252 ;; This function calls:
 54253 ;;		Nothing
 54254 ;; This function is called by:
 54255 ;;		_ADCPostProcessingCallback
 54256 ;; This function uses a non-reentrant model
 54257 ;;
 54258                           
 54259                           	psect	text171
 54260  01B22A                     __ptext171:
 54261                           	opt stack 0
 54262  01B22A                     _ADCC_HasAccumulatorOverflowed:
 54263                           	opt stack 15
 54264                           
 54265                           ;adcc.c: 222: return ADSTATbits.ADAOV;
 54266                           
 54267                           ;incstack = 0
 54268  01B22A  AE65               	btfss	3941,7,c	;volatile
 54269  01B22C  D002               	goto	i2u1289_40
 54270  01B22E  0E01               	movlw	1
 54271  01B230  0012               	return	
 54272  01B232                     i2u1289_40:
 54273  01B232  0E00               	movlw	0
 54274  01B234  0012               	return	
 54275  01B236                     __end_of_ADCC_HasAccumulatorOverflowed:
 54276                           	opt stack 0
 54277                           tosu	equ	0xFFF
 54278                           tosh	equ	0xFFE
 54279                           tosl	equ	0xFFD
 54280                           pclatu	equ	0xFFB
 54281                           pclath	equ	0xFFA
 54282                           tblptru	equ	0xFF8
 54283                           tblptrh	equ	0xFF7
 54284                           tblptrl	equ	0xFF6
 54285                           tablat	equ	0xFF5
 54286                           prodh	equ	0xFF4
 54287                           prodl	equ	0xFF3
 54288                           intcon	equ	0xFF2
 54289                           indf0	equ	0xFEF
 54290                           postinc0	equ	0xFEE
 54291                           fsr0h	equ	0xFEA
 54292                           fsr0l	equ	0xFE9
 54293                           wreg	equ	0xFE8
 54294                           indf1	equ	0xFE7
 54295                           postdec1	equ	0xFE5
 54296                           plusw1	equ	0xFE3
 54297                           fsr1h	equ	0xFE2
 54298                           fsr1l	equ	0xFE1
 54299                           bsr	equ	0xFE0
 54300                           indf2	equ	0xFDF
 54301                           postinc2	equ	0xFDE
 54302                           postdec2	equ	0xFDD
 54303                           plusw2	equ	0xFDB
 54304                           fsr2h	equ	0xFDA
 54305                           fsr2l	equ	0xFD9
 54306                           status	equ	0xFD8
 54307                           
 54308 ;; *************** function _ADCC_GetFilterValue *****************
 54309 ;; Defined at:
 54310 ;;		line 225 in file "mcc_generated_files/adcc.c"
 54311 ;; Parameters:    Size  Location     Type
 54312 ;;		None
 54313 ;; Auto vars:     Size  Location     Type
 54314 ;;		None
 54315 ;; Return value:  Size  Location     Type
 54316 ;;                  2    0[COMRAM] unsigned int 
 54317 ;; Registers used:
 54318 ;;		wreg, status,2, status,0
 54319 ;; Tracked objects:
 54320 ;;		On entry : 0/0
 54321 ;;		On exit  : 0/0
 54322 ;;		Unchanged: 0/0
 54323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54327 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54328 ;;Total ram usage:        4 bytes
 54329 ;; Hardware stack levels used:    1
 54330 ;; This function calls:
 54331 ;;		Nothing
 54332 ;; This function is called by:
 54333 ;;		_ADCPostProcessingCallback
 54334 ;; This function uses a non-reentrant model
 54335 ;;
 54336                           
 54337                           	psect	text172
 54338  01B106                     __ptext172:
 54339                           	opt stack 0
 54340  01B106                     _ADCC_GetFilterValue:
 54341                           	opt stack 15
 54342                           
 54343                           ;adcc.c: 228: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 54344                           
 54345                           ;incstack = 0
 54346  01B106  5073               	movf	3955,w,c	;volatile
 54347  01B108  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 54348  01B10A  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 54349  01B10C  5072               	movf	3954,w,c	;volatile
 54350  01B10E  2403               	addwf	??_ADCC_GetFilterValue,w,c
 54351  01B110  6E01               	movwf	?_ADCC_GetFilterValue,c
 54352  01B112  0E00               	movlw	0
 54353  01B114  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 54354  01B116  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 54355  01B118  0012               	return	
 54356  01B11A                     __end_of_ADCC_GetFilterValue:
 54357                           	opt stack 0
 54358                           tosu	equ	0xFFF
 54359                           tosh	equ	0xFFE
 54360                           tosl	equ	0xFFD
 54361                           pclatu	equ	0xFFB
 54362                           pclath	equ	0xFFA
 54363                           tblptru	equ	0xFF8
 54364                           tblptrh	equ	0xFF7
 54365                           tblptrl	equ	0xFF6
 54366                           tablat	equ	0xFF5
 54367                           prodh	equ	0xFF4
 54368                           prodl	equ	0xFF3
 54369                           intcon	equ	0xFF2
 54370                           indf0	equ	0xFEF
 54371                           postinc0	equ	0xFEE
 54372                           fsr0h	equ	0xFEA
 54373                           fsr0l	equ	0xFE9
 54374                           wreg	equ	0xFE8
 54375                           indf1	equ	0xFE7
 54376                           postdec1	equ	0xFE5
 54377                           plusw1	equ	0xFE3
 54378                           fsr1h	equ	0xFE2
 54379                           fsr1l	equ	0xFE1
 54380                           bsr	equ	0xFE0
 54381                           indf2	equ	0xFDF
 54382                           postinc2	equ	0xFDE
 54383                           postdec2	equ	0xFDD
 54384                           plusw2	equ	0xFDB
 54385                           fsr2h	equ	0xFDA
 54386                           fsr2l	equ	0xFD9
 54387                           status	equ	0xFD8
 54388                           
 54389 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 54390 ;; Defined at:
 54391 ;;		line 201 in file "mcc_generated_files/adcc.c"
 54392 ;; Parameters:    Size  Location     Type
 54393 ;;		None
 54394 ;; Auto vars:     Size  Location     Type
 54395 ;;		None
 54396 ;; Return value:  Size  Location     Type
 54397 ;;                  1    wreg      unsigned char 
 54398 ;; Registers used:
 54399 ;;		wreg, status,2
 54400 ;; Tracked objects:
 54401 ;;		On entry : 0/0
 54402 ;;		On exit  : 0/0
 54403 ;;		Unchanged: 0/0
 54404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54409 ;;Total ram usage:        0 bytes
 54410 ;; Hardware stack levels used:    1
 54411 ;; This function calls:
 54412 ;;		Nothing
 54413 ;; This function is called by:
 54414 ;;		_ADCPostProcessingCallback
 54415 ;; This function uses a non-reentrant model
 54416 ;;
 54417                           
 54418                           	psect	text173
 54419  01B286                     __ptext173:
 54420                           	opt stack 0
 54421  01B286                     _ADCC_GetCurrentCountofConversions:
 54422                           	opt stack 15
 54423                           
 54424                           ;adcc.c: 204: return ADCNT;
 54425                           
 54426                           ;incstack = 0
 54427  01B286  5067               	movf	3943,w,c	;volatile
 54428  01B288  0012               	return	
 54429  01B28A                     __end_of_ADCC_GetCurrentCountofConversions:
 54430                           	opt stack 0
 54431                           tosu	equ	0xFFF
 54432                           tosh	equ	0xFFE
 54433                           tosl	equ	0xFFD
 54434                           pclatu	equ	0xFFB
 54435                           pclath	equ	0xFFA
 54436                           tblptru	equ	0xFF8
 54437                           tblptrh	equ	0xFF7
 54438                           tblptrl	equ	0xFF6
 54439                           tablat	equ	0xFF5
 54440                           prodh	equ	0xFF4
 54441                           prodl	equ	0xFF3
 54442                           intcon	equ	0xFF2
 54443                           indf0	equ	0xFEF
 54444                           postinc0	equ	0xFEE
 54445                           fsr0h	equ	0xFEA
 54446                           fsr0l	equ	0xFE9
 54447                           wreg	equ	0xFE8
 54448                           indf1	equ	0xFE7
 54449                           postdec1	equ	0xFE5
 54450                           plusw1	equ	0xFE3
 54451                           fsr1h	equ	0xFE2
 54452                           fsr1l	equ	0xFE1
 54453                           bsr	equ	0xFE0
 54454                           indf2	equ	0xFDF
 54455                           postinc2	equ	0xFDE
 54456                           postdec2	equ	0xFDD
 54457                           plusw2	equ	0xFDB
 54458                           fsr2h	equ	0xFDA
 54459                           fsr2l	equ	0xFD9
 54460                           status	equ	0xFD8
 54461                           
 54462 ;; *************** function _ADCC_GetConversionResult *****************
 54463 ;; Defined at:
 54464 ;;		line 133 in file "mcc_generated_files/adcc.c"
 54465 ;; Parameters:    Size  Location     Type
 54466 ;;		None
 54467 ;; Auto vars:     Size  Location     Type
 54468 ;;		None
 54469 ;; Return value:  Size  Location     Type
 54470 ;;                  2    0[COMRAM] unsigned int 
 54471 ;; Registers used:
 54472 ;;		wreg, status,2, status,0
 54473 ;; Tracked objects:
 54474 ;;		On entry : 0/0
 54475 ;;		On exit  : 0/0
 54476 ;;		Unchanged: 0/0
 54477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54482 ;;Total ram usage:        4 bytes
 54483 ;; Hardware stack levels used:    1
 54484 ;; This function calls:
 54485 ;;		Nothing
 54486 ;; This function is called by:
 54487 ;;		_ADCPostProcessingCallback
 54488 ;; This function uses a non-reentrant model
 54489 ;;
 54490                           
 54491                           	psect	text174
 54492  01B11A                     __ptext174:
 54493                           	opt stack 0
 54494  01B11A                     _ADCC_GetConversionResult:
 54495                           	opt stack 15
 54496                           
 54497                           ;adcc.c: 136: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 54498                           
 54499                           ;incstack = 0
 54500  01B11A  5064               	movf	3940,w,c	;volatile
 54501  01B11C  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 54502  01B11E  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 54503  01B120  5063               	movf	3939,w,c	;volatile
 54504  01B122  2403               	addwf	??_ADCC_GetConversionResult,w,c
 54505  01B124  6E01               	movwf	?_ADCC_GetConversionResult,c
 54506  01B126  0E00               	movlw	0
 54507  01B128  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 54508  01B12A  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 54509  01B12C  0012               	return	
 54510  01B12E                     __end_of_ADCC_GetConversionResult:
 54511                           	opt stack 0
 54512                           tosu	equ	0xFFF
 54513                           tosh	equ	0xFFE
 54514                           tosl	equ	0xFFD
 54515                           pclatu	equ	0xFFB
 54516                           pclath	equ	0xFFA
 54517                           tblptru	equ	0xFF8
 54518                           tblptrh	equ	0xFF7
 54519                           tblptrl	equ	0xFF6
 54520                           tablat	equ	0xFF5
 54521                           prodh	equ	0xFF4
 54522                           prodl	equ	0xFF3
 54523                           intcon	equ	0xFF2
 54524                           indf0	equ	0xFEF
 54525                           postinc0	equ	0xFEE
 54526                           fsr0h	equ	0xFEA
 54527                           fsr0l	equ	0xFE9
 54528                           wreg	equ	0xFE8
 54529                           indf1	equ	0xFE7
 54530                           postdec1	equ	0xFE5
 54531                           plusw1	equ	0xFE3
 54532                           fsr1h	equ	0xFE2
 54533                           fsr1l	equ	0xFE1
 54534                           bsr	equ	0xFE0
 54535                           indf2	equ	0xFDF
 54536                           postinc2	equ	0xFDE
 54537                           postdec2	equ	0xFDD
 54538                           plusw2	equ	0xFDB
 54539                           fsr2h	equ	0xFDA
 54540                           fsr2l	equ	0xFD9
 54541                           status	equ	0xFD8
 54542                           tosu	equ	0xFFF
 54543                           tosh	equ	0xFFE
 54544                           tosl	equ	0xFFD
 54545                           pclatu	equ	0xFFB
 54546                           pclath	equ	0xFFA
 54547                           tblptru	equ	0xFF8
 54548                           tblptrh	equ	0xFF7
 54549                           tblptrl	equ	0xFF6
 54550                           tablat	equ	0xFF5
 54551                           prodh	equ	0xFF4
 54552                           prodl	equ	0xFF3
 54553                           intcon	equ	0xFF2
 54554                           indf0	equ	0xFEF
 54555                           postinc0	equ	0xFEE
 54556                           fsr0h	equ	0xFEA
 54557                           fsr0l	equ	0xFE9
 54558                           wreg	equ	0xFE8
 54559                           indf1	equ	0xFE7
 54560                           postdec1	equ	0xFE5
 54561                           plusw1	equ	0xFE3
 54562                           fsr1h	equ	0xFE2
 54563                           fsr1l	equ	0xFE1
 54564                           bsr	equ	0xFE0
 54565                           indf2	equ	0xFDF
 54566                           postinc2	equ	0xFDE
 54567                           postdec2	equ	0xFDD
 54568                           plusw2	equ	0xFDB
 54569                           fsr2h	equ	0xFDA
 54570                           fsr2l	equ	0xFD9
 54571                           status	equ	0xFD8
 54572                           
 54573                           	psect	text175
 54574  000000                     __ptext175:
 54575                           	opt stack 0
 54576                           tosu	equ	0xFFF
 54577                           tosh	equ	0xFFE
 54578                           tosl	equ	0xFFD
 54579                           pclatu	equ	0xFFB
 54580                           pclath	equ	0xFFA
 54581                           tblptru	equ	0xFF8
 54582                           tblptrh	equ	0xFF7
 54583                           tblptrl	equ	0xFF6
 54584                           tablat	equ	0xFF5
 54585                           prodh	equ	0xFF4
 54586                           prodl	equ	0xFF3
 54587                           intcon	equ	0xFF2
 54588                           indf0	equ	0xFEF
 54589                           postinc0	equ	0xFEE
 54590                           fsr0h	equ	0xFEA
 54591                           fsr0l	equ	0xFE9
 54592                           wreg	equ	0xFE8
 54593                           indf1	equ	0xFE7
 54594                           postdec1	equ	0xFE5
 54595                           plusw1	equ	0xFE3
 54596                           fsr1h	equ	0xFE2
 54597                           fsr1l	equ	0xFE1
 54598                           bsr	equ	0xFE0
 54599                           indf2	equ	0xFDF
 54600                           postinc2	equ	0xFDE
 54601                           postdec2	equ	0xFDD
 54602                           plusw2	equ	0xFDB
 54603                           fsr2h	equ	0xFDA
 54604                           fsr2l	equ	0xFD9
 54605                           status	equ	0xFD8
 54606                           
 54607                           	psect	rparam
 54608  0000                     tosu	equ	0xFFF
 54609                           tosh	equ	0xFFE
 54610                           tosl	equ	0xFFD
 54611                           pclatu	equ	0xFFB
 54612                           pclath	equ	0xFFA
 54613                           tblptru	equ	0xFF8
 54614                           tblptrh	equ	0xFF7
 54615                           tblptrl	equ	0xFF6
 54616                           tablat	equ	0xFF5
 54617                           prodh	equ	0xFF4
 54618                           prodl	equ	0xFF3
 54619                           intcon	equ	0xFF2
 54620                           indf0	equ	0xFEF
 54621                           postinc0	equ	0xFEE
 54622                           fsr0h	equ	0xFEA
 54623                           fsr0l	equ	0xFE9
 54624                           wreg	equ	0xFE8
 54625                           indf1	equ	0xFE7
 54626                           postdec1	equ	0xFE5
 54627                           plusw1	equ	0xFE3
 54628                           fsr1h	equ	0xFE2
 54629                           fsr1l	equ	0xFE1
 54630                           bsr	equ	0xFE0
 54631                           indf2	equ	0xFDF
 54632                           postinc2	equ	0xFDE
 54633                           postdec2	equ	0xFDD
 54634                           plusw2	equ	0xFDB
 54635                           fsr2h	equ	0xFDA
 54636                           fsr2l	equ	0xFD9
 54637                           status	equ	0xFD8
 54638                           
 54639                           	psect	temp
 54640  00005F                     btemp:
 54641                           	opt stack 0
 54642  00005F                     	ds	1
 54643  0000                     int$flags	set	btemp
 54644  0000                     wtemp6	set	btemp+1
 54645                           tosu	equ	0xFFF
 54646                           tosh	equ	0xFFE
 54647                           tosl	equ	0xFFD
 54648                           pclatu	equ	0xFFB
 54649                           pclath	equ	0xFFA
 54650                           tblptru	equ	0xFF8
 54651                           tblptrh	equ	0xFF7
 54652                           tblptrl	equ	0xFF6
 54653                           tablat	equ	0xFF5
 54654                           prodh	equ	0xFF4
 54655                           prodl	equ	0xFF3
 54656                           intcon	equ	0xFF2
 54657                           indf0	equ	0xFEF
 54658                           postinc0	equ	0xFEE
 54659                           fsr0h	equ	0xFEA
 54660                           fsr0l	equ	0xFE9
 54661                           wreg	equ	0xFE8
 54662                           indf1	equ	0xFE7
 54663                           postdec1	equ	0xFE5
 54664                           plusw1	equ	0xFE3
 54665                           fsr1h	equ	0xFE2
 54666                           fsr1l	equ	0xFE1
 54667                           bsr	equ	0xFE0
 54668                           indf2	equ	0xFDF
 54669                           postinc2	equ	0xFDE
 54670                           postdec2	equ	0xFDD
 54671                           plusw2	equ	0xFDB
 54672                           fsr2h	equ	0xFDA
 54673                           fsr2l	equ	0xFD9
 54674                           status	equ	0xFD8


Data Sizes:
    Strings     11597
    Constant    1038
    Data        43
    BSS         507
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    198     233
    BANK2           256     61     246
    BANK3           256      0     192
    BANK4           256      0     128
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E17311 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_128(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_128(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_128(CODE[25]), line(BANK3[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_128(CODE[25]), line(BANK3[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[10]), STR_2(CODE[15]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 64
		 -> OLED_RAM_Buffer(BANK3[64]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 64
		 -> OLED_RAM_Buffer(BANK3[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_170(CODE[11]), STR_163(CODE[5]), STR_161(CODE[9]), STR_159(CODE[29]), 
		 -> STR_157(CODE[34]), STR_155(CODE[33]), STR_153(CODE[29]), STR_151(CODE[17]), 
		 -> STR_149(CODE[17]), STR_147(CODE[14]), STR_145(CODE[19]), STR_143(CODE[20]), 
		 -> STR_141(CODE[11]), STR_139(CODE[17]), STR_137(CODE[14]), STR_135(CODE[16]), 
		 -> STR_126(CODE[13]), STR_122(CODE[17]), STR_119(CODE[14]), STR_117(CODE[12]), 
		 -> STR_115(CODE[16]), STR_113(CODE[17]), STR_108(CODE[15]), STR_106(CODE[13]), 
		 -> STR_104(CODE[16]), STR_102(CODE[15]), STR_100(CODE[21]), STR_98(CODE[21]), 
		 -> STR_96(CODE[26]), STR_94(CODE[14]), STR_92(CODE[13]), STR_90(CODE[18]), 
		 -> STR_88(CODE[15]), STR_86(CODE[16]), STR_84(CODE[18]), STR_78(CODE[13]), 
		 -> STR_76(CODE[17]), STR_64(CODE[12]), STR_61(CODE[10]), STR_59(CODE[13]), 
		 -> STR_57(CODE[11]), STR_54(CODE[4]), STR_53(CODE[6]), STR_51(CODE[16]), 
		 -> STR_48(CODE[6]), STR_45(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[2]), STR_42(CODE[3]), STR_41(CODE[3]), STR_40(CODE[3]), 
		 -> STR_39(CODE[3]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_175(CODE[13]), STR_174(CODE[31]), STR_173(CODE[26]), STR_172(CODE[28]), 
		 -> STR_171(CODE[426]), STR_169(CODE[30]), STR_168(CODE[46]), STR_167(CODE[39]), 
		 -> STR_166(CODE[62]), STR_165(CODE[55]), STR_164(CODE[470]), STR_162(CODE[3086]), 
		 -> STR_160(CODE[492]), STR_158(CODE[748]), STR_156(CODE[720]), STR_154(CODE[974]), 
		 -> STR_152(CODE[54]), STR_150(CODE[54]), STR_148(CODE[45]), STR_146(CODE[51]), 
		 -> STR_144(CODE[52]), STR_142(CODE[46]), STR_140(CODE[51]), STR_138(CODE[53]), 
		 -> STR_136(CODE[58]), STR_134(CODE[71]), STR_133(CODE[63]), STR_132(CODE[37]), 
		 -> STR_131(CODE[46]), STR_130(CODE[102]), STR_129(CODE[86]), STR_127(CODE[25]), 
		 -> STR_125(CODE[42]), STR_124(CODE[53]), STR_123(CODE[31]), STR_121(CODE[29]), 
		 -> STR_120(CODE[28]), STR_118(CODE[42]), STR_116(CODE[41]), STR_114(CODE[34]), 
		 -> STR_112(CODE[53]), STR_111(CODE[52]), STR_110(CODE[105]), STR_109(CODE[105]), 
		 -> STR_107(CODE[59]), STR_105(CODE[73]), STR_103(CODE[56]), STR_101(CODE[34]), 
		 -> STR_99(CODE[34]), STR_97(CODE[32]), STR_95(CODE[37]), STR_93(CODE[58]), 
		 -> STR_91(CODE[36]), STR_89(CODE[36]), STR_87(CODE[37]), STR_85(CODE[34]), 
		 -> STR_83(CODE[38]), STR_82(CODE[60]), STR_81(CODE[31]), STR_80(CODE[23]), 
		 -> STR_79(CODE[65]), STR_77(CODE[23]), STR_75(CODE[27]), STR_74(CODE[48]), 
		 -> STR_73(CODE[15]), STR_72(CODE[13]), STR_71(CODE[12]), STR_70(CODE[11]), 
		 -> STR_69(CODE[10]), STR_68(CODE[11]), STR_67(CODE[24]), STR_66(CODE[46]), 
		 -> STR_65(CODE[25]), STR_63(CODE[54]), STR_62(CODE[64]), STR_60(CODE[59]), 
		 -> STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), STR_52(CODE[52]), 
		 -> STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), STR_46(CODE[5]), 
		 -> STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(BANK1[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK1[2]), ftoa@buf(BANK2[17]), STR_191(CODE[7]), 
		 -> _doprnt@c(BANK1[1]), STR_188(CODE[16]), STR_187(CODE[22]), STR_186(CODE[21]), 
		 -> STR_185(CODE[27]), STR_184(CODE[41]), STR_183(CODE[32]), STR_182(CODE[19]), 
		 -> STR_181(CODE[16]), STR_180(CODE[15]), STR_179(CODE[16]), STR_178(CODE[10]), 
		 -> STR_177(CODE[13]), STR_176(CODE[12]), NULL(NULL[0]), TRIAC_Firing_Angle(BANK0[4]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_193(CODE[11]), STR_175(CODE[13]), STR_174(CODE[31]), STR_173(CODE[26]), 
		 -> STR_172(CODE[28]), STR_171(CODE[426]), STR_169(CODE[30]), STR_168(CODE[46]), 
		 -> STR_167(CODE[39]), STR_166(CODE[62]), STR_165(CODE[55]), STR_164(CODE[470]), 
		 -> STR_162(CODE[3086]), STR_160(CODE[492]), STR_158(CODE[748]), STR_156(CODE[720]), 
		 -> STR_154(CODE[974]), STR_152(CODE[54]), STR_150(CODE[54]), STR_148(CODE[45]), 
		 -> STR_146(CODE[51]), STR_144(CODE[52]), STR_142(CODE[46]), STR_140(CODE[51]), 
		 -> STR_138(CODE[53]), STR_136(CODE[58]), STR_134(CODE[71]), STR_133(CODE[63]), 
		 -> STR_132(CODE[37]), STR_131(CODE[46]), STR_130(CODE[102]), STR_129(CODE[86]), 
		 -> STR_127(CODE[25]), STR_125(CODE[42]), STR_124(CODE[53]), STR_123(CODE[31]), 
		 -> STR_121(CODE[29]), STR_120(CODE[28]), STR_118(CODE[42]), STR_116(CODE[41]), 
		 -> STR_114(CODE[34]), STR_112(CODE[53]), STR_111(CODE[52]), STR_110(CODE[105]), 
		 -> STR_109(CODE[105]), STR_107(CODE[59]), STR_105(CODE[73]), STR_103(CODE[56]), 
		 -> STR_101(CODE[34]), STR_99(CODE[34]), STR_97(CODE[32]), STR_95(CODE[37]), 
		 -> STR_93(CODE[58]), STR_91(CODE[36]), STR_89(CODE[36]), STR_87(CODE[37]), 
		 -> STR_85(CODE[34]), STR_83(CODE[38]), STR_82(CODE[60]), STR_81(CODE[31]), 
		 -> STR_80(CODE[23]), STR_79(CODE[65]), STR_77(CODE[23]), STR_75(CODE[27]), 
		 -> STR_74(CODE[48]), STR_73(CODE[15]), STR_72(CODE[13]), STR_71(CODE[12]), 
		 -> STR_70(CODE[11]), STR_69(CODE[10]), STR_68(CODE[11]), STR_67(CODE[24]), 
		 -> STR_66(CODE[46]), STR_65(CODE[25]), STR_63(CODE[54]), STR_62(CODE[64]), 
		 -> STR_60(CODE[59]), STR_58(CODE[85]), STR_56(CODE[47]), STR_55(CODE[17]), 
		 -> STR_52(CODE[52]), STR_50(CODE[4]), STR_49(CODE[5]), STR_47(CODE[4]), 
		 -> STR_46(CODE[5]), STR_44(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[3]), STR_8(CODE[372]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_1(CODE[4]), 

    S3972__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S3972__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(BANK1[5]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    F17426.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK1[2]), 

    F17421.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    S3577$pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S3589$pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    p_i2c1_current.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK1[2]), 

    S3589$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), NULL(NULL[0]), 

    S3600$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    S3600$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK2[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 64
		 -> ftoa@buf(BANK2[17]), STR_190(CODE[1]), STR_189(CODE[1]), OLED_WriteInteger@s(COMRAM[20]), 
		 -> OLED_RAM_Buffer(BANK3[64]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK1[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_187(CODE[22]), STR_186(CODE[21]), STR_185(CODE[27]), STR_184(CODE[41]), 
		 -> STR_183(CODE[32]), STR_182(CODE[19]), STR_181(CODE[16]), STR_180(CODE[15]), 
		 -> STR_179(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK3[64]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_178(CODE[10]), STR_177(CODE[13]), STR_176(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_188(CODE[16]), STR_187(CODE[22]), STR_186(CODE[21]), STR_185(CODE[27]), 
		 -> STR_184(CODE[41]), STR_183(CODE[32]), STR_182(CODE[19]), STR_181(CODE[16]), 
		 -> STR_180(CODE[15]), STR_179(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 64
		 -> OLED_RAM_Buffer(BANK3[64]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR4_CallBack->_writeEnergyToEEPROMCallback
    _writeEnergyToEEPROMCallback->i2___flge
    i2_readDoubleFromEEPROM->i2_DATAEE_ReadByte
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _I2C1_ISR->_I2C1_Stop
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->__doprnt
    __doprnt->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_UpdateFromRAMBuffer->_OLED_Clear
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar
    _OLED_PutChar->_I2C1_MasterWrite
    _OLED_Init->_OLED_Command
    _OLED_Command->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  818934
                                             59 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                          _OLED_Init
           _OLED_UpdateFromRAMBuffer
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
                             _strcpy
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      0     0      0       0
                        _getADCError
                       _getCOMMError
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  481989
                                            195 BANK1      3     3      0
                                             53 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       41    39      2  480967
                                            191 BANK1      4     2      2
                                             16 BANK2     37    37      0
                     _TMR5_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
                     _clearADCErrors
                    _clearCOMMErrors
                        _getADCError
                       _getCOMMError
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  121618
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  121618
                                            189 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    8413
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     223
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _getCOMMError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearCOMMErrors                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1881
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3755
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   95125
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              17     7     10   95125
                                            172 BANK1     17     7     10
                            __doprnt
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             43    37      6   78035
                                            130 BANK1     42    36      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                                9     5      4   13229
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13     9      4   12950
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8302
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          14     6      8     634
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1206
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1358
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     901
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6535
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5930
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1070
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     829
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    6705
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3279
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     307
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3426
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    1612
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1612
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     152
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1508
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_UpdateFromRAMBuffer                             0     0      0   10618
                         _OLED_Clear
                   _OLED_WriteString
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (2) _OLED_YX                                              3     2      1    2937
                                             43 BANK1      3     2      1
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (2) _OLED_WriteString                                     2     0      2    4165
                                             56 BANK1      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (2) _OLED_Clear                                           4     4      0    3516
                                             56 BANK1      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (3) _OLED_PutChar                                        17    17      0    3380
                                             39 BANK1     17    17      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    2484
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (3) _OLED_Command                                         4     4      0    2484
                                             39 BANK1      4     4      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     0      7    2327
                                             32 BANK1      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             23 BANK1      9     2      7
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             23 BANK1      6     2      4
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  210680
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _INT0_ISR
                           _TMR4_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0    2144
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0    2144
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _writeEnergyToEEPROMCallback *
 ---------------------------------------------------------------------------------
 (16) _writeEnergyToEEPROMCallback                         4     4      0    2144
                                             63 COMRAM     4     4      0
                           i2___flge
             i2_readDoubleFromEEPROM
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_readDoubleFromEEPROM                             10     6      4     252
                                              2 COMRAM    10     6      4
                  i2_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_ReadByte                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (16) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_ISR                                            2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (15) _I2C1_Stop                                           3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _I2C1_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _HLVD_ISR                                            0     0      0     402
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (17) i2_writeDoubleToEEPROM                              12     6      6     402
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (18) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   53853
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                            9     7      2   53853
                                             82 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (16) i2__doprnt                                          43    37      6   53469
                                             40 BANK0     42    36      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (17) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (18) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (17) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ThresholdISR                                   0     0      0  153627
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          21    21      0  153627
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          24    16      8   98612
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                8     4      4   46781
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               24    20      4   41537
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (19) _atan                                               21    17      4   25621
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                              12     4      8   39684
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                17    13      4   37484
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (17) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fldiv                                          25    17      8    1887
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                              10     6      4    8091
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (17) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___flge                                           12     4      8    1456
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (18) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) _abs                                                 4     2      2     294
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _OLED_Init
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _OLED_UpdateFromRAMBuffer
     _OLED_Clear
       _OLED_PutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         _memmove
     _OLED_WriteString
       _OLED_PutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         _memmove
     _OLED_YX
       _OLED_Command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _strcpy
   _terminal_clearTerminal
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _clearADCErrors
       _clearCOMMErrors
       _getADCError
       _getCOMMError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
       _terminal_textAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg *
                 ___xxtofl (ARG)
               ___flsub *
                 ___fladd
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___flneg (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
   _updateErrorLEDs
     _getADCError
     _getCOMMError

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flge *
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flsub *
           _floor (ARG)
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _writeEnergyToEEPROMCallback *
         i2___flge
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2_readDoubleFromEEPROM
           i2_DATAEE_ReadByte
         i2_writeDoubleToEEPROM
           i2_DATAEE_WriteByte
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      80      14       50.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     3D      F6      10       96.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C6      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     419       8        0.0%
DATA                 0      0     419       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 13 10:54:54 2018

               ringBufferLUT@max_voltage_print 02B2                       getDeviceIDString@strings 0128  
                                 ___fldiv@aexp 0155                                   ___fldiv@bexp 0154  
                 __end_of_readDoubleFromEEPROM A34E               __end_of_TMR5_SetInterruptHandler B1CA  
                ??_writeEnergyToEEPROMCallback 0040                                   ___fldiv@sign 0149  
                  __size_ofi2_DATAEE_WriteByte 003A                                    __CFG_CP$OFF 000000  
                                           l65 B008                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize B25C                                             bsr 000FE0  
                          ___wmul@multiplicand 0119                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                 __end_of_heartbeatTimerCallback A8D2  
                                  __CFG_LVP$ON 000000                            _saveSRAMMaxToEEPROM 788A  
                                          l430 A4EE                                            l431 A4E6  
                                          l423 A5D8                                            l424 A5D0  
                                          l433 A502                                            l434 A528  
                                          l426 A602                                            l435 A526  
                                          l837 A93C                                            _PR4 000FB6  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                   ??_INT0_SetInterruptHandler 011A                                            _Ipk 01CE  
                                          _Vpk 0238                                            _abs AD8E  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString A1F8                                            _sin 67EA  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 831C                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                        ?i2_readDoubleFromEEPROM 0003  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                _INT0_CallBack AF12                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0168                       __end_of_OLED_WriteString A2A8  
                             OLED_Command@temp 0127                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_ZCD$OFF 000000                               __end_of_I2C1_ISR 7D48  
                                 ___fltol@exp1 0181                                           l2000 1E24  
                                         l2003 1DBE                                           ?_abs 0076  
                                         l2020 1FA8                                           l2021 1FE6  
                                         l2013 1F0E                                           l2110 2A26  
                                         l2102 2984                                           l2022 2010  
                                         l2014 1F28                                           l2111 2AF2  
                                         l2031 20F6                                           l1311 552C  
                                         l2112 2B1C                                           l2040 2252  
                                         l1320 5646                                           l1312 5484  
                                         l2041 227C                                           l2025 2098  
                                         l2017 1F7C                                           l2009 1E9C  
                                         l1321 556E                                           l1313 5556  
                                         l1241 8B6E                                           l2106 2A9E  
                                         l2050 2450                                           l2034 2112  
                                         l2026 202A                                           l1322 567C  
                                         l1330 562E                                           l1314 549C  
                                         l2107 29A2                                           l2051 247E  
                                         l2043 22A8                                           l2035 21DC  
                                         l2027 2066                                           l2019 2018  
                                         l1331 576C                                           l1323 5586  
                                         l1315 54B4                                           l1172 78F0  
                                         l2060 25D2                                           l2044 22AC  
                                         l2036 220A                                           l2028 2090  
                                         l1340 573C                                           l1332 5694  
                                         l1324 559E                                           l1316 54CC  
                                         l1500 0552                                           l1173 7956  
                                         l2109 2AB6                                           l2053 254C  
                                         l1333 57A2                                           l1341 5754  
                                         l1325 55B6                                           l1317 54E4  
                                         l1174 79BC                                           l2054 24DE  
                                         l2046 22FA                                           l2038 2284  
                                         l1334 56AC                                           l1326 55CE  
                                         l1318 54FC                                           l1510 06EC  
                                         l1502 05A4                                           l1175 7A22  
                                         l2063 2622                                           l2055 251A  
                                         l2047 2324                                           l2039 2216  
                                         l1335 56C4                                           l1327 55E6  
                                         l1319 5514                                           l2400 8CDA  
                                         l1176 7A88                                           l2080 2768  
                                         l2072 270A                                           l2064 2656  
                                         l2056 2544                                           l2048 24D2  
                                         l2320 93C4                                           l1600 A1AC  
                                         l1336 56DC                                           l1328 55FE  
                                         l1520 0886                                           l1512 073E  
                                         l1504 05F6                                           l2401 8D0E  
                                         l2073 26B2                                           l2049 2386  
                                         l2321 93BE                                           l1337 56F4  
                                         l1329 5616                                           l2402 8D4C  
                                         l2082 278A                                           l2066 26F4  
                                         l2058 25EC                                           l1338 570C  
                                         l1530 0A96                                           l1522 090A  
                                         l1514 0790                                           l1506 0648  
                                         l1282 8BA0                                           l2403 8D8A  
                                         l2083 2792                                           l2067 2670  
                                         l2059 25A0                                           l2323 9406  
                                         l1603 A1B6                                           l1339 5724  
                                         l1620 A376                                           l1612 A356  
                                         l2500 86B2                                           l2340 9A70  
                                         l2092 2882                                           l2084 27B6  
                                         l1604 A1C0                                           l1532 0B00  
                                         l1524 09B6                                           l1516 07E2  
                                         l1508 069A                                           l1284 8BDE  
                                         l2093 28AC                                           l2085 27BE  
                                         l2077 2726                                           l1533 0ADC  
                                         l1285 8BC0                                           l1710 A252  
                                         l1622 A37E                                           l1614 A35E  
                                         l2430 9220                                           l2342 9A8E  
                                         l2086 28B6                                           l2326 9456  
                                         l1542 0BDA                                           l1526 0A00  
                                         l1518 0834                                           l2407 AD1E  
                                         l2343 9A86                                           l2079 2746  
                                         l2327 9418                                           l1631 ACF6  
                                         l1463 006C                                           l1287 8C2C  
                                         l1624 A386                                           l1616 A366  
                                         l2432 928C                                           l2600 9B42  
                                         l2360 9E2C                                           l2352 9DE8  
                                         l2088 2812                                           l1560 106C  
                                         l1552 0E9A                                           l1544 0E48  
                                         l1536 0B92                                           l1528 0A4E  
                                         l1288 8BFE                                           l2441 92CC  
                                         l2433 927C                                           l2361 9E3A  
                                         l2353 9DF4                                           l2089 283C  
                                         l2329 948A                                           l1545 0C14  
                                         l1537 0B48                                           l1481 0406  
                                         l1473 01CE                                           l1465 00A8  
                                         l1706 A890                                           l1618 A36E  
                                         l1642 A43E                                           l2610 A0B8  
                                         l2346 9AAE                                           l2098 28FA  
                                         l1570 13E6                                           l1562 10EC  
                                         l1554 0EEC                                           l1482 03E2  
                                         l2347 9AB8                                           l2339 9A60  
                                         l2355 9E0A                                           l2099 2924  
                                         l1547 0CD0                                           l1539 0B6E  
                                         l1483 033A                                           l1475 0232  
                                         l1467 00FA                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l2348 9AC6                                           l2356 9E02  
                                         l1580 15AE                                           l1572 1428  
                                         l1564 116C                                           l1556 0F6C  
                                         l1492 044E                                           l1484 0350  
                                         l1709 A27E                                           l1645 A30C  
                                         l2605 A082                                           l1485 0366  
                                         l1477 02CE                                           l1469 0168  
                                         l1646 A33C                                           l2438 92B0  
                                         l2606 A076                                           l2390 88E6  
                                         l1574 146A                                           l1566 11EC  
                                         l1558 0FEC                                           l1494 050A  
                                         l1486 037C                                           l1478 0288  
                                         l2711 5E9C                                           l2439 92A4  
                                         l2383 8828                                           l2359 9E22  
                                         l1495 04E6                                           l1487 0392  
                                         l2720 5F04                                           l2712 5E98  
                                         l1576 14AC                                           l1568 13A4  
                                         l1496 04AC                                           l1488 03A8  
                                         l1833 A4D2                                           l1673 A6DE  
                                         l2609 A0AA                                           l2385 8846  
                                         l1497 04C2                                           l1489 03BE  
                                         l2730 5FE0                                           l2386 8888  
                                         l2490 8636                                           l2802 57FA  
                                         l1930 4C9C                                           l1578 14EE  
                                         l1851 97E2                                           l2723 5FBC  
                                         l2395 891A                                           l2387 88B8  
                                         l2491 865E                                           l2803 57F6  
                                         l1923 6F2C                                           l2555 AF72  
                                         l1852 97CE                                           l1692 96D4  
                                         l2724 5F9A                                           l2716 5EE4  
                                         l2396 890E                                           l2820 5A60  
                                         l2804 580A                                           l1940 166A  
                                         l2733 6004                                           l2725 5FA8  
                                         l2717 5EE0                                           l2389 88F6  
                                         l2493 869A                                           l2813 5A28  
                                         l1933 4D62                                           l1941 16E0  
                                         l1854 97EE                                           l2742 60D6  
                                         l2734 6008                                           l2726 5FAC  
                                         l2494 868A                                           l2822 5AA4  
                                         l2814 5A0A                                           l2806 583A  
                                         l1926 701C                                           l1934 4EE8  
                                         l1942 16B2                                           l2902 9A28  
                         _ADCC_StartConversion B210                                           l2751 6116  
                                         l2719 5F40                                           l2911 820A  
                                         l2487 85D0                                           l2823 5AC2  
                                         l2807 5836                                           l1951 1758  
                                         l1599 A1CA                                           l2903 99C0  
                                         l2672 968C                                           l1696 974E  
                                         l2760 618C                                           l2744 60EC  
                                         l2912 821A                                           l2808 584A  
                                         l1936 4FAE                                           l2904 99FC  
                                         l2673 9656                                           l2737 60A2  
                                         l2729 601A                                           l2921 82BA  
                                         l2913 8238                                           l2489 85FC  
                                         l2825 5AE6                                           l2809 5868  
                                         l1929 4D94                                           l1953 18A0  
                                         l1945 16FC                                           l2754 615C  
                                         l2746 60F6                                           l2922 82AE  
                                         l2826 5B04                                           l1970 18F2  
                                         l1962 18AE                                           l1954 1874  
                                         l1946 16F4                                           l1882 AC32  
                                         l2739 60B2                                           l2595 9B00  
                                         l2915 824A                                           l2499 86BE  
                                         l1971 1902                                           l1963 18B2  
                                         l1955 1820                                           l2596 9AF4  
                                         l2916 823E                                           l1964 1B68  
                                         l1980 19B0                                           l1972 18FC  
                                         l2780 71D8                                           l2772 70E4  
                                         l2860 A5A6                                           l1981 19DA  
                                         l2773 70E0                                           l2861 A59C  
                                         l2758 6182                                           l2926 82D8  
                                         l2918 8288                                           l1990 1AEC  
                                         l2782 71FE                                           l2759 618A  
                                         l2599 9B34                                           l2927 830A  
                                         l2919 8270                                           l1991 2556  
                                         l1959 1AF2                                           l1975 1954  
                                         l1967 18B6                                           l2775 712A  
                                         l1992 1B7E                                           l1984 19EE  
                                         l1976 196A                                           l2792 726C  
                                         l2768 70A4                                           l2880 A208  
                                         l1993 1BDC                                           l1985 1A52  
                                         l1969 18BA                                           l2785 7234  
                                         l2777 7152                                           l2769 70A0  
                                         l1889 B0EE                                           l2881 A202  
                                         l2961 9916                                           l2857 A58C  
                                         l2874 AB74                                           l1986 1AA2  
                                         l2794 72B0                                           l2786 7216  
                                         l2778 7200                                           l2866 A3AC  
                                         l2962 98A4                                           l2858 A586  
                                         l2890 A050                                           l2875 AB6A  
                                         l1995 1C4A                                           l1979 1974  
                                         l2795 72D4                                           l2779 71B0  
                                         l2867 A3A2                                           l2963 990E  
                                         l2891 A040                                           l1996 1CCA  
                                         l1988 1AB6                                           l2796 72FE  
                                         l2956 AB0C                                           l1989 1ADA  
                                         l2797 730A                                           l1998 1CF8  
                                         l2798 730C                                           l1999 1D42  
                                         l2887 A004                                           l2888 A034  
                                         ?_sin 0088                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC7                                           STR_2 FE2C  
                                         STR_3 FF87                                           STR_4 FE81  
                                         STR_5 FE73                                           STR_6 FFB2  
                                         STR_7 FFBB                                           STR_8 EDB5  
                              __end_of_OLED_YX AA04                                    ?_OLED_Clear 0001  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                         _T4PR 000FB6                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR4 000FB5  
                                         _TMR6 000FAF                            _writeDoubleToEEPROM A3F0  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                                   __CFG_WRT0$ON 000000  
                                 __CFG_WRT1$ON 000000                                   i2___flge@ff1 0034  
                                 i2___flge@ff2 0038                                   __CFG_WRT2$ON 000000  
                                 __CFG_WRT3$ON 000000                                   __CFG_WRT4$ON 000000  
                                 __CFG_WRT5$ON 000000                                           _Irms 01CA  
                                 __CFG_WRT6$ON 000000                                   __CFG_WRT7$ON 000000  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write A4E0  
              ??_ADCC_HasAccumulatorOverflowed 0001                                   __CFG_WRTB$ON 000000  
                                         _Vrms 0230                                   __CFG_WRTC$ON 000000  
                                         abs@a 0076                                           _acos 9F22  
                                         _fabs AA40                 ringBufferLUT@max_current_print 02AA  
                                         _atan 7F92                                           _asin 64E6  
                                         _atoi 93BC                                           _main 8A5A  
                         ?_saveSRAMMaxToEEPROM 0001                                    i2__doprnt@c 00B1  
                                         _line 0380                                    i2__doprnt@f 008A  
                       OLED_Command@data_array 0129                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                         ??_I2C1_MasterTRBInsert 011B  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 6AE4                                   i2___flneg@f1 002C  
                              _OLED_RAM_Buffer 0340                  __end_of_ADCC_ClearAccumulator B270  
                                __CFG_BOREN$ON 000000                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              _timer5ReloadVal 0266                                   i2___fltol@f1 006C  
                               _clearADCErrors AF36                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 5460                   __end_of_EUSART2_Transmit_ISR AC02  
                              __end_ofi2_putch B254                     ??_TMR4_SetInterruptHandler 011A  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                      __end_of_updateErrorLEDs B0AC                          _dimmingOnTimeCallback B21E  
               I2C1_MasterWriteTRBBuild@length 011B              i2readDoubleFromEEPROM@output_data 0007  
              readDoubleFromEEPROM@output_data 011D                           __size_of_getADCError 0034  
                     __size_ofi2_EUSART2_Write 004C                                          ??_abs 0078  
                           __size_of_OLED_Init 009A                      __size_of_DATAEE_WriteByte 003E  
                              _timer7ReloadVal 0268                                          ??_sin 005E  
                         ?_writeDoubleToEEPROM 011B                                     _i2c1_state 026D  
                             __end_of_INT0_ISR B24A                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0128                               __end_of_HLVD_ISR AB60  
               __size_of_OSCILLATOR_Initialize 001C                      I2C1_MasterTRBInsert@count 011C  
                __end_of_OSCILLATOR_Initialize B00E                       ?_terminal_textAttributes 01BD  
                            ??_TMR7_WriteTimer 0102                      I2C1_MasterTRBInsert@pflag 0119  
                                        l22001 1FA8                                          l22013 202A  
                                        l22131 2674                                          l22047 2216  
                                        l23111 0C80                                          l22145 26B6  
                                        l23113 0CD0                                          l23105 0C4A  
                                        l22251 2B0E                                          l22243 2A9E  
                                        l16141 A40A                                          l23095 0C04  
                                        l13649 8DC2                                          l23363 8B90  
                                        l21941 1D42                                          l15445 A040  
                                        l22901 0278                                          l23373 8BB6  
                                        l23543 A1E4                                          l22911 02C8  
                                        l23545 A1EE                                          l15483 97CE  
                                        l21859 1974                                          l21949 1D90  
                                        l21869 19EE                                          l16373 9452  
                                        l16535 72FE                                          l15489 97EE  
                                        l21969 1EA0                                          ?_acos 00A9  
                                        l15857 98A4                                          ?_fabs 0030  
                                        l17743 A870                                          l17753 A88A  
                                        l17737 A85C                                  ___fltol@sign1 0180  
                                        ?_atan 007C                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 61A8                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 7328  
                                        _ADREF 000F58                                __end_of___awdiv 9AD0  
                            __end_of_I2C1_Stop A912                                __end_of___flneg AD30  
                                        _ADPRE 000F5E                                          STR_10 FFB2  
                                        STR_11 FFBB                                          STR_20 FFF0  
                                        STR_21 FFF8                                          STR_13 FFBF  
                                        STR_22 FFCC                                          STR_30 FFE9  
                                        STR_14 FFC3                                          STR_23 FFFA  
                                        STR_15 FFF5                                          STR_31 FFEF  
                                        STR_16 FFCC                                          STR_32 FFEF  
                                        STR_40 FFEC                                          STR_24 FFCB  
                                        STR_17 FFCF                                          STR_33 FFFA  
                                        STR_41 FFF2                                          STR_25 FFCE  
                                        STR_34 FF00                                          STR_18 FFE1  
                                        STR_42 FFF2                                          STR_50 FFBB  
                                        STR_26 FFD4                                          STR_19 FF8F  
                                        STR_43 FFFC                                          STR_27 FFDA  
                                        STR_35 FFD1                                          STR_51 FDB1  
                                        STR_44 E846                                          STR_28 FFE0  
                                        STR_36 FFD7                                          STR_52 F5A4  
                                        STR_60 F2D6                                __end_of___awmod 9E44  
                                        STR_29 FF8E                                          STR_45 FD7B  
                                        STR_37 FFDD                                          STR_53 FFA1  
                                        STR_61 FF7D                                          STR_46 FFB2  
                                        STR_38 FFE3                                          STR_54 FFB7  
                                        STR_70 FF32                                          STR_62 F1DD  
                                        STR_47 FFBB                                          STR_39 FFE6  
                                        STR_71 FF03                                          STR_55 FCFA  
                                        STR_63 F465                                          STR_48 FFA7  
                                        STR_64 FF0F                                          STR_72 FE9C  
                                        STR_80 FC08                                          STR_56 F6A2  
                                        _ADRPT 000F66                                          STR_49 FFB2  
                                        STR_57 FF48                                          STR_73 FDF0  
                                        STR_65 FBA5                                          STR_81 FA6A  
                                        STR_90 FCC5                                          STR_66 F6D1  
                                        STR_74 F672                                          STR_82 F29A  
                                        STR_58 F0B7                                          STR_59 FEB6  
                                        STR_67 FBF0                                          STR_75 FB70  
                                        STR_91 F918                                          STR_83 F883  
                                        STR_68 FF3D                                          STR_92 FEC3  
                                        STR_76 FD60                                          STR_84 FCD7  
                                        STR_69 FF73                                          STR_77 FC1F  
                                        STR_85 F982                                          STR_93 F386  
                                        STR_78 FED0                                          STR_94 FE3B  
                                        STR_86 FD91                                          STR_87 F8CE  
                                        STR_95 F8A9                                          STR_79 F19C  
                                        STR_88 FDFF                                          STR_96 FB8B  
                              __end_of___flmul 5B1A                                          STR_97 FA2B  
                                        STR_89 F93C                                          STR_98 FC76  
                                        STR_99 F9A4                                __end_of___flsub A73E  
                              __end_of___fltol 92DE                                __end_of___lldiv 9B54  
                                        ?_sqrt 006C                                ___awdiv@divisor 011F  
                                        u20240 A22A                                __end_of___llmod A0CA  
                                        u20330 98D6                                          u21220 72BE  
                                        u21230 72E2                                          u20175 A94C  
                                        u20247 A220                                          u20176 A94E  
                                        u31100 17A2                                          u20710 A33C  
                                        u31110 17DE                                          u21190 7268  
                                        u31200 1936                                          u31120 17E6  
                                        u31130 1808                                          u31107 1798  
                                        u32100 2934                                          u31300 1A8C  
                                        u20740 A3E4                                          u31117 17D4  
                                        u31150 1858                                          u31070 171E  
                                        _T5CLK 000FC6                                          u31400 1D08  
                                        u31320 1B22                                          u31160 1896  
                                        u31080 1746                                          u20840 AC2E  
                                        _T4CON 000FB7                                          u31137 17FE  
                                        u20761 A1A2                                          u31410 1D54  
                                        u31307 1A82                                          u17020 5856  
                                        u32028 27FC                                          u31068 169C  
                                        u20860 B0EA                                          u31157 184E  
                                        u31077 1714                                          u17110 5AB2  
                                        u17030 59CC                                          u32070 28BE  
                                        u31190 1930                                          u23335 A9EE  
                                        u31327 1B18                                          u31167 188C  
                                        u31087 173C                                          u20775 A97C  
                                        u23360 A88A                                          u17120 5AD0  
                                        u32160 2B2E                                          u31600 20A6  
                                        u31440 1D90                                          _T5CON 000FC3  
                                        u32170 2B5E                                          u32138 296E  
                                        u32058 286C                                          u31290 1A48  
                                        u31258 199A                                          u20890 9A40  
                                        u17035 59C2                                          u23380 A274  
                                        u18020 86C4                                          u32180 2B6A  
                                        u31700 22A2                                          u31197 1926  
                                        u20990 96D0                                          u23390 A2A0  
                                        u17230 9E0E                                          u32158 2ADC  
                                        _T7CLK 000F33                                          u17080 5A5C  
                                        u31480 1EDE                                          u31288 1A14  
                                        _T6CON 000FB1                                          u32177 2B54  
                                        u31297 1A3E                                          u31289 1A4A  
                                        u17170 9A92                                          u32098 28E4  
                                        u23387 A26A                                          u16700 5FC4  
                                        u31548 1F66                                          u33420 0138  
                                        u34220 8BB6                                          _T4HLT 000FB8  
                                        u23397 A296                                          u18230 92B6  
                                        u31638 20E0                                 __CFG_DEBUG$OFF 000000  
                                        u31568 1FD0                                          _T7CON 000F30  
                                        u16650 5F70                                          u18090 8920  
                                        u31738 22E4                                          u31690 2292  
                                        u31658 21C4                                          u16660 5F80  
                                        u18260 9B04                                          u16910 6168  
                                        u16830 60FA                                          u16670 5F82  
                                        u18190 923E                                          u31758 2438  
                                        u31598 2050                                          u33470 02C8  
                                        u31688 223C                                          u18290 A086  
                                        u18370 82C4                                          u18195 9234  
                                        u16860 6112                                          u31788 2504  
                                        _T6HLT 000FB2                                          u34517 8A6E  
                   _ADCC_ADTI_InterruptHandler 0250                 __end_ofi2_readDoubleFromEEPROM A57C  
                                        u17941 85B4                                          u33870 0C4A  
                                        u33880 0C72                                          u17961 85E0  
                                        u33890 0C80                                          i1l271 00A6  
                                        i1l267 007C                                          _T4TMR 000FB5  
                                        i1l445 ABFC                                          i1l269 009C  
                                        i1l446 ABF8                                          i2l250 9066  
                                        _T4RST 000FBA                                          i2l260 90B4  
                                        i2l252 9072                                          i2l430 A66C  
                                        i2l254 907E                                          i2l246 904E  
                                        i2l431 A664                                          i2l256 909E  
                                        i2l248 905A                                          i2l433 A680  
                                        i2l434 A6A6                                          i2l258 90AA  
                                        i2l435 A6A4                                          i2l451 9570  
                                        i2l452 9592                                          _T6TMR 000FAF  
                                        i2l453 95B4                                          i2l456 95B8  
                                        i1l688 AE6E                                          i2l458 9608  
                                        _T6RST 000FB4                                          i2l762 B03C  
                                        i2l837 AADE                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                       _OLED_UpdateFromRAMBuffer 9EB4  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 8932                                __end_of__doprnt 2B74  
                                        _TRISA 000F81                                          _TRISB 000F82  
                               ?_INT0_CallBack 0001                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a D28D  
                           __end_ofsin@coeff_b D2B1                   __end_of_I2C1_BusCollisionISR B276  
                              _TMR4_Initialize AD30                                          _Imeas 0234  
                                __CFG_PWRTE$ON 000000                                  i2___fladd@grs 006B  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                              ??_I2C1_Initialize 0117  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                               __end_of_TMR4_ISR AEA2  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR AC9E  
                             __end_of_TMR6_ISR AE08                               __end_of_TMR7_ISR AC6A  
                              _DATAEE_ReadByte B060                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01C3  
                              __end_of_dpowers CF33                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 8EE6          i2writeDoubleToEEPROM@starting_address 0009  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 9D58  
                                        _errno 025C                                   i2__doprnt@ap 008C  
                                 i2__doprnt@cp 0099                          ?_ADCC_StartConversion 0001  
                                 i2__doprnt@pb 0088                                          _scale 4B3C  
                              __end_of_isdigit AF7A                                          atan@f 007C  
                              __end_of_memmove 96BE                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch B0F2                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 8EE6                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address CF5B  
                _max_POS3P3_ADC_Result_address CF59                               __end_ofi2___wmul AEC8  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                         __end_of_clearADCErrors AF58  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 9932                                __end_of_strncpy A062  
                             __end_ofi2_fround 788A                 ?_INTERRUPT_InterruptManagerLow 0001  
                  ringBufferLUT@max_temp_print 02BA                             __size_ofi2___fladd 033E  
                           __size_ofi2___fldiv 02B4                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___flmul 0350  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf AA40  
              I2C1_MasterWriteTRBBuild@address 011C                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler B1F4  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler B1E6  
                              _TMR5_Initialize A440                                 __CFG_CSWEN$OFF 000000  
                           __size_ofi2__doprnt 1504                                __initialization 9932  
                           OLED_Command@length 0128                          I2C1_MasterWrite@pdata 0120  
                            i2___lldiv@divisor 0005                          I2C1_MasterWrite@pflag 0125  
                                 __end_of_acos 9F90                                   __end_of_fabs AA7C  
                                 __end_of_atan 81C8                                   __end_of_asin 67EA  
                                 __end_of_atoi 9494                                   __end_of_main 8B80  
                            i2___lldiv@counter 000D                               _max_Irms_address CF5D  
                                 __end_of_sqrt 6DAC                                     i2printf@ap 00B4  
                                   i2printf@pb 00B6                          ??_writeDoubleToEEPROM 0121  
                        __end_of_ringBufferLUT 1666                                 __CFG_SCANE$OFF 000000  
                        _max_POS3P3_ADC_Result 021C                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont D261                            __size_of_OLED_Clear 0040  
                                       ??_acos 005E                                         ??_fabs 0034  
                                  _i2c1_object 0209                                         ??_atan 005E  
                                       ??_asin 005E                                         ??_atoi 011F  
                                       ??_main 02CE               __end_of_recoverSRAMMaxFromEEPROM 85A2  
                     _TMR5_SetInterruptHandler B1BC                                         ??_sqrt 0070  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0124                                      ??_OLED_YX 012C  
                              _TMR6_Initialize AC9E                             _TRIAC_Firing_Angle 00F2  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize A132                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01DF  
                                       ?_floor 0076                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 016F                                         STR_100 FC61  
                                       _ADLTHL 000F6A                                         STR_101 F9C6  
                                       STR_102 FE0E                                         STR_110 EF92  
                                       STR_111 F570                                         STR_103 F3C0  
                                       STR_104 FDC1                                         STR_120 FB39  
                                       STR_112 F4D1                                         STR_113 FD3E  
                                       STR_121 FAC6                                         STR_105 F10C  
                                       STR_106 FEEA                                         STR_122 FD0B  
                                       STR_114 F960                                         STR_130 EFFB  
                                       _ADRESH 000F64                                         STR_115 FDD1  
                                       STR_123 FA4B                                         STR_131 F72D  
                                       STR_107 F311                                         STR_108 FE1D  
                                       STR_132 F8F3                                         STR_116 F833  
                                       STR_140 F60C                                         STR_124 F506  
                                       STR_141 FF53                                         STR_117 FF1B  
                                       STR_125 F7E0                                         STR_133 F21D  
                                       STR_109 EF29                                         STR_126 FEDD  
                                       STR_118 F7B6                                         STR_142 F75B  
                                       STR_150 F49B                                         STR_134 F155  
                                       _ADRESL 000F63                                         STR_119 FE49  
                                       STR_135 FDA1                                         STR_151 FD4F  
                                       STR_143 FC8B                                         STR_127 FBBE  
                                       STR_128 FBD7                                         STR_144 F5D8  
                                       STR_152 F42F                                         STR_136 F34C  
                                       STR_160 E849                                         STR_161 FF91  
                                       STR_137 FE57                                         STR_145 FCB2  
                                       STR_153 FAE3                                         STR_129 F061  
                                       STR_170 FF5E                                         STR_146 F63F  
                                       STR_138 F53B                                         STR_154 DEBF  
                                       STR_162 D2B1                                         STR_163 FFAD  
                                       STR_147 FE65                                         STR_139 FD2D  
                                       STR_155 FA0A                                         STR_171 EC0B  
                                       STR_172 FB1D                                         STR_148 F789  
                                       STR_164 EA35                                         STR_156 E579  
                                       STR_180 FDE1                                         STR_173 F6B7  
                                       STR_149 FD1C                                         STR_157 F9E8  
                                       STR_165 F3F8                                         STR_181 FD81  
                                       STR_174 FA89                                         STR_166 F25C  
                                       STR_158 E28D                                         STR_182 FC9F  
                                       STR_191 FF9A                                         STR_175 FEA9  
                                       STR_159 FB00                                         STR_167 F85C  
                                       STR_183 F813                                         STR_192 FCE9  
                                       STR_168 F6FF                                         STR_176 FEF7  
                                       STR_184 F80A                                         STR_193 FF27  
                                       STR_169 FAA8                                         STR_177 FE8F  
                                       STR_185 FB55                                         STR_178 FF69  
                                       STR_186 FC4C                                         STR_187 FC36  
                                       STR_179 FD71                                         STR_188 FD71  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                 __end_of_Total_Energy_address CF61                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM A2FC                              __end_of_OLED_Init 98A2  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       i1l1184 A8CE                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _RC6PPS 000E68                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       _RC7PPS 000E69                                         i2l1200 42D0  
                                       i2l2000 332E                                         i2l1210 481C  
                                       i2l1203 42D6                                         i2l2003 32C6  
                                       i2l1204 4648                                         i2l2020 34B2  
                                       i2l1221 4AE0                                         i2l1213 4820  
                                       i2l1205 451A                                         i2l2021 34F0  
                                       i2l2013 3418                                         i2l1222 4B2A  
                                       i2l1214 48FC                                         i2l1206 4432  
                                       i2l2110 3F2A                                         i2l2102 3E8A  
                                       i2l2022 351A                                         i2l2014 3432  
                                       i2l2111 3FF6                                         i2l2031 3600  
                                       i2l1208 4572                                         i2l2112 4020  
                                       i2l2040 375A                                         i2l1217 4900  
                                       i2l2041 3784                                         i2l2025 35A2  
                                       i2l2017 3486                                         i2l2009 33A6  
                                       i2l1218 4AD8                                         i2l2106 3FA2  
                                       i2l2050 3956                                         i2l2034 361C  
                                       i2l2026 3534                                         i2l2107 3EA8  
                                       i2l2051 3984                                         i2l2043 37B0  
                                       i2l2035 36E4                                         i2l2027 3570  
                                       i2l2019 3522                                         i2l2060 3AD8  
                                       i2l2044 37B4                                         i2l2036 3712  
                                       i2l2028 359A                                         i2l2109 3FBA  
                                       i2l2053 3A52                                         i2l1190 4108  
                                       i2l2054 39E4                                         i2l2046 3802  
                                       i2l2038 378C                                         i2l2063 3B28  
                                       i2l2055 3A20                                         i2l2047 382C  
                                       i2l2039 371E                                         i2l2400 8DFA  
                                       i2l2080 3C6E                                         i2l2072 3C10  
                                       i2l2064 3B5C                                         i2l2056 3A4A  
                                       i2l2048 39D8                                         i2l2401 8E2E  
                                       i2l2073 3BB8                                         i2l2049 388E  
                                       i2l2402 8E6C                                         i2l1194 4B1A  
                                       i2l2082 3C90                                         i2l2066 3BFA  
                                       i2l2058 3AF2                                         i2l2403 8EAA  
                                       i2l1195 410E                                         i2l2083 3C98  
                                       i2l2067 3B76                                         i2l2059 3AA6  
                                       i2l1188 4AE8                                         i2l1196 4212  
                                       i2l2500 87E4                                         i2l2340 9B78  
                                       i2l2092 3D88                                         i2l2084 3CBC  
                                       i2l2165 ADAE                                         i2l1189 4084  
                                       i2l2093 3DB2                                         i2l2085 3CC4  
                                       i2l2077 3C2C                                         i2l2430 92FE  
                                       i2l2342 9B96                                         i2l2086 3DBC  
                                       i2l2407 AD7C                                         i2l2263 6540  
                                       i2l1199 4218                                         i2l2343 9B8E  
                                       i2l2079 3C4C                                         i2l2432 936A  
                                       i2l2600 9CCA                                         i2l2360 9E9C  
                                       i2l2352 9E58                                         i2l2088 3D18  
                                       i2l2441 93AA                                         i2l2433 935A  
                                       i2l2265 6668                                         i2l2361 9EAA  
                                       i2l2353 9E64                                         i2l2089 3D42  
                                       i2l1801 7C52                                         i2l2282 7FD6  
                                       i2l2266 6748                                         i2l2610 A186  
                                       i2l2346 9BB6                                         i2l2098 3E00  
                                       i2l1642 A65E                                         i2l1810 7CA2  
                                       i2l2347 9BC0                                         i2l2339 9B68  
                                       i2l2355 9E7A                                         i2l2099 3E2A  
                                       i2l1811 7CB2                                         i2l1803 7C5A  
                                       i2l2284 8042                                         i2l2348 9BCE  
                                       i2l2356 9E72                                         i2l1804 7C6A  
                                       i2l2373 91E4                                         i2l2285 818A  
                                       i2l2605 A150                                         i2l1813 7CBA  
                                       i2l1645 A53C                                         i2l2374 914C  
                                       i2l2438 938E                                         i2l2606 A144  
                                       i2l2390 8A0E                                         i2l1822 B08E  
                                       i2l1814 7CC2                                         i2l1806 7C90  
                                       i2l1646 A56A                                         i2l2711 61DA  
                                       i2l2439 9382                                         i2l2703 681E  
                                       i2l2287 81A2                                         i2l2383 8950  
                                       i2l2359 9E92                                         i2l1815 7CE2  
                                       i2l1807 7C88                                         i2l2720 6242  
                                       i2l2712 61D6                                         i2l2704 693C  
                                       i2l1816 7CE8                                         i2l2705 69AC  
                                       i2l2609 A178                                         i2l2385 896E  
                                       i2l1817 7CEC                                         i2l2730 631E  
                                       i2l2802 5B4A                                         i2l2706 6AD2  
                                       i2l2386 89B0                                         i2l2490 8768  
                                       i2l1930 5134                                         i2l2723 62FA  
                                       i2l2803 5B46                                         i2l2379 AA6A  
                                       i2l2395 8A42                                         i2l2387 89E0  
                                       i2l2491 8790                                         i2l1923 774E  
                                       i2l2555 AFCE                                         i2l1827 A90C  
                                       i2l1819 7CF4                                         i2l2724 62D8  
                                       i2l2716 6222                                         i2l2820 5DB0  
                                       i2l2804 5B5A                                         i2l2396 8A36  
                                       i2l1940 2B78                                         i2l1780 7D00  
                                       i2l2733 6342                                         i2l2725 62E6  
                                       i2l2717 621E                                         i2l2813 5D78  
                                       i2l2389 8A1E                                         i2l2493 87CC  
                                       i2l1933 51F4                                         i2l1941 2BEE  
                                       i2l1781 7B2A                                         i2l2742 6414  
                                       i2l2734 6346                                         i2l2726 62EA  
                                       i2l2822 5DF4                                         i2l2814 5D5A  
                                       i2l2806 5B8A                                         i2l2494 87BC  
                                       i2l1926 7836                                         i2l1934 5370  
                                       i2l1942 2BC0                                         i2l1790 7BBE  
                                       i2l2751 6454                                         i2l2719 627E  
                                       i2l2823 5E12                                         i2l2807 5B86  
                                       i2l2911 835A                                         i2l2487 8702  
                                       i2l1951 2C66                                         i2l1783 7B74  
                                       i2l2760 64CA                                         i2l2744 642A  
                                       i2l2808 5B9A                                         i2l2912 836A  
                                       i2l2840 6C14                                         i2l1936 5430  
                                       i2l1792 7BC6                                         i2l1784 7B84  
                                       i2l2737 63E0                                         i2l2729 6358  
                                       i2l2825 5E36                                         i2l2809 5BB8  
                                       i2l2921 840A                                         i2l2913 8388  
                                       i2l2841 6CBE                                         i2l2833 6B26  
                                       i2l2489 872E                                         i2l1929 5224  
                                       i2l1953 2DAA                                         i2l1945 2C0A  
                                       i2l1793 7BD4                                         i2l2754 649A  
                                       i2l2746 6434                                         i2l2826 5E54  
                                       i2l2922 83FE                                         i2l2842 6C1A  
                                       i2l1970 2DFC                                         i2l1962 2DB8  
                                       i2l1954 2D7E                                         i2l1946 2C02  
                                       i2l1786 7B8C                                         i2l2739 63F0  
                                       i2l2915 839A                                         i2l2843 6C60  
                                       i2l2835 6B36                                         i2l2595 9C88  
                                       i2l2499 87F0                                         i2l1971 2E0C  
                                       i2l1963 2DBC                                         i2l1955 2D2C  
                                       i2l1795 7C06                                         i2l1787 7B94  
                                       i2l2916 838E                                         i2l2932 8F30  
                                       i2l2780 748C                                         i2l2772 7398  
                                       i2l2844 6C88                                         i2l2836 6B50  
                                       i2l2596 9C7C                                         i2l1964 3072  
                                       i2l1980 2EBA                                         i2l1972 2E06  
                                       i2l1788 7BA2                                         i2l2941 9D76  
                                       i2l2933 8F1E                                         i2l2773 7394  
                                       i2l1981 2EE4                                         i2l1797 7C40  
                                       i2l2758 64C0                                         i2l2926 8428  
                                       i2l2918 83D8                                         i2l2782 74B2  
                                       i2l2846 6D72                                         i2l2838 6B8A  
                                       i2l1990 2FF6                                         i2l2759 64C8  
                                       i2l2927 845A                                         i2l2919 83C0  
                                       i2l2935 8F4E                                         i2l2775 73DE  
                                       i2l2839 6BB6                                         i2l2599 9CBC  
                                       i2l1991 3A5C                                         i2l1959 2FFC  
                                       i2l1975 2E5E                                         i2l1967 2DC0  
                                       i2l2936 8FE6                                         i2l2792 7520  
                                       i2l2768 7358                                         i2l1992 3088  
                                       i2l1984 2EF8                                         i2l1976 2E74  
                                       i2l2785 74E8                                         i2l2777 7406  
                                       i2l2769 7354                                         i2l1993 30E6  
                                       i2l1985 2F5C                                         i2l1969 2DC4  
                                       i2l2794 7564                                         i2l2786 74CA  
                                       i2l2778 74B4                                         i2l1986 2FAC  
                                       i2l2795 7588                                         i2l2779 7464  
                                       i2l1995 3152                                         i2l1979 2E7E  
                                       i2l2796 75B2                                         i2l1996 31D0  
                                       i2l1988 2FC0                                         i2l2797 75BE  
                                       i2l1989 2FE4                                         i2l2798 75C0  
                                       i2l1998 31FE                                         i2l1999 324A  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                       i2l9757 75B2                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                          __size_of_getCOMMError 0016  
                                       _SBOREN 00725F                                         _OSCFRQ 000E49  
                                ?_OLED_Command 0001                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                              ?_clearADCErrors 0001                               __end_of___xxtofl 831C  
        __end_of_ADCC_DischargeSampleCapacitor B264         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor B25C                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                              ?_I2C1_MasterWrite 0120  
                              _clearCOMMErrors B192                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A                                  ?_OLED_PutChar 0001  
                       ?_dimmingOnTimeCallback 0001          __end_of_ADCC_HasAccumulatorOverflowed B236  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed B22A  
                               __CFG_XINST$OFF 000000                                   __doprnt$5190 018E  
                              _TMR7_Initialize A2A8                             ??_I2C1_MasterWrite 0127  
                                 i2_scale$5433 004D                               __end_of__powers_ CED7  
                               _p_i2c1_current 0260                __end_of_terminal_ringBufferPull 8CA4  
                                       ___flge 8CA4                               ?_updateErrorLEDs 0001  
                            _ADCC_ThresholdISR AE08                                      ??___fladd 0131  
                                       ___wmul ADB8                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                     ??_I2C1_MasterWriteTRBBuild 011E  
                                    ??__doprnt 0188                             ?_ADCC_ThresholdISR 0001  
     writeEnergyToEEPROMCallback@current_value 0040                        __end_of_TMR4_Initialize AD60  
                     ??_terminal_setCursorHome 01BD                                  i2__doprnt@idx 0098  
                                       _fround 6DAC                                  i2__doprnt@len 009B  
                                    ?_I2C1_ISR 0001                                  i2__doprnt@exp 009D  
                                i2__doprnt@val 00A7                                         clear_0 9978  
                                       clear_1 9984                                         clear_2 9990  
                                       clear_3 999C                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                   __doprnt@flag 01A7  
                              ___awmod@counter 011B                                         _printf A98C  
                                 __doprnt@fval 019D                                ??_INT0_CallBack 0003  
                                 __doprnt@prec 01A9                                         _strcat A57C  
                                       _strchr AAF0                        __end_of_DATAEE_ReadByte B07A  
                                       _strcmp A3A0                                         _strcpy AB60  
                                       _strlen A1F8                                 i2___awdiv@sign 000C  
                                       _strstr 99BE                                         floor@i 007A  
                                       floor@x 0076                   getCauseOfResetString@strings 02D0  
                             _background_color 026F                                _TMR5_StartTimer B27E  
                              _ADCC_Initialize 9F90                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 4078           __end_of_TMR4_DefaultInterruptHandler B292  
        __size_of_TMR4_DefaultInterruptHandler 0002                   _TMR4_DefaultInterruptHandler B290  
                               _PMD_Initialize AFD6                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 64E6                                      ??_isdigit 0117  
                                    ??_memmove 011D                              __end_ofi2___fldiv 75DC  
                            __end_ofi2___awdiv 9BD8                              __end_ofi2___flneg AD8E  
                            __end_ofi2___awmod 9EB4                              __end_ofi2___flmul 5E6A  
                            __end_ofi2___flsub A786                              __end_ofi2___fltol 93BC  
                      ??i2_writeDoubleToEEPROM 000B                              __end_ofi2___lldiv 9CDC  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod A198                                   __mediumconst CEA2  
                                 _getCOMMError B0DC                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion B282                           _EUSART2_Transmit_ISR ABCC  
                            __end_ofi2__doprnt 4078                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 0117  
     TMR4_SetInterruptHandler@InterruptHandler 0117       INT0_SetInterruptHandler@InterruptHandler 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 00B5                  I2C1_MasterWriteTRBBuild@pdata 0119  
                        ?_readDoubleFromEEPROM 0119                                 i2___flmul@aexp 003D  
                               i2___flmul@bexp 0042                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 01BD  
                               i2___flmul@sign 003C                                 i2___flmul@temp 0047  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 001C  
                              _eusart2RxBuffer 0300                                     ___flge@ff1 0117  
                                   ___flge@ff2 011B                                 ??_OLED_Command 0127  
                      __end_of_TMR5_Initialize A490                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit AFD6                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize AA7C                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler B28C          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler B28A                                _eusart2TxBuffer 0400  
                                   __accesstop 0060                        __end_of__initialization 99B4  
                               i2___fltol@exp1 0075                                      ?_INT0_ISR 0001  
                                   ___flneg@f1 0125                                      ?_HLVD_ISR 0001  
                           ?_SYSTEM_Initialize 0001                      __size_ofi2_TMR5_StopTimer 0004  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
    __end_of_ADCC_GetCurrentCountofConversions B28A     __size_of_ADCC_GetCurrentCountofConversions 0004  
          ??_ADCC_GetCurrentCountofConversions 0001             ?_ADCC_GetCurrentCountofConversions 0001  
            _ADCC_GetCurrentCountofConversions B286                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer B02A                                 ??_OLED_PutChar 0127  
                               _i2c1_trb_count 026C                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR AE30                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 02C8                            __size_ofi2___xxtofl 0150  
                        _I2C1_FunctionComplete B07A                           _I2C1_BusCollisionISR B270  
                   __end_of_getMajorRevisionID A98C                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01BD  
                        __end_of_TMR4_CallBack AF12                         I2C1_MasterWrite@length 0122  
                                 __pidataBANK0 B264                                   __pidataBANK2 AEC8  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR4_ISR 0001  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                               _DATAEE_WriteByte A912  
                                __end_of_floor 8FF8                                  __end_of_frexp 9DD2  
                                __end_of_scale 4FE0                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch B106                              ??_HLVD_Initialize 0117  
                                   ??_I2C1_ISR 0004                       ??_terminal_clearTerminal 01BD  
                      __end_of_TMR6_Initialize ACD0                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize AFF2                          _getCauseOfResetString ACD0  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read A614  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 86D6  
                  __size_of_EXT_INT_Initialize 001E                                     __div_to_l_ 8808  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                ?_TMR4_DefaultInterruptHandler 0001                                      ?i2_printf 00B2  
                            ?_OLED_WriteString 0138                    ADCC_StartConversion@channel 0100  
                                   __doprnt@ap 0186                                     __doprnt@cp 0193  
                                   __doprnt@pb 0182                                __div_to_l_@exp1 0124  
                                      ??_floor 005E                                __div_to_l_@cntr 0123  
                                      ??_frexp 0007                                        ??_scale 0173  
                    __end_of_SYSTEM_Initialize AAB6                                __div_to_l_@quot 011F  
                                      ??_putch 0118                                   peakToRMS@RMS 00C5  
                           i2___lldiv@quotient 0009                        __end_of_clearCOMMErrors B1A0  
                                 ??_OLED_Clear 0138                             ??_OLED_WriteString 013A  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E1  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01C6  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                   __pbssBANK4 0400                                  _eusart2RxTail 01DE  
                                _eusart2TxTail 01E0                             __size_of_eval_poly 0100  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize A2FC                             __size_of_peakToRMS 024A  
                        _INT0_InterruptHandler 0247                                     ??_INT0_ISR 0003  
                                   ??_HLVD_ISR 0011              __size_of_recoverSRAMMaxFromEEPROM 0136  
                    ?_recoverSRAMMaxFromEEPROM 0001                  ?_TMR7_DefaultInterruptHandler 0001  
                        _TMR4_InterruptHandler 0244                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer AE56                          ??_ADCC_StopConversion 0001  
                        ?_I2C1_BusCollisionISR 0001                               ??_FVR_Initialize 0117  
                   __end_ofi2_DATAEE_WriteByte AAF0                                  _error_handler 0200  
                               _peakToRMS$5420 00BD                          ringBufferLUT@arg_buff 02A3  
                               _peakToRMS$5418 00C1                                 _peakToRMS$5419 00B9  
                                  _Irms_offset 02E8                                        ?___flge 0117  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_2956 02CA  
                   ??_OLED_UpdateFromRAMBuffer 013C                                        ?___wmul 0117  
                        _currentMeasuredToPeak 9CDC                        __end_of_TMR5_StartTimer B282  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler B1BC  
                                   ??_TMR4_ISR 0044                        __end_of_ADCC_Initialize 9FFA  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                _I2C1_Initialize AB96  
               ?_ADCC_HasAccumulatorOverflowed 0001                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                   ringBufferLUT@max_Power_print 02AE  
                         _Total_Energy_address CF5F                                        ?_fround 016F  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler B210          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler B202                               ?_TMR4_Initialize 0001  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 01AC  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue B106  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                           __end_of_OLED_Clear A892                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte B046            ringBufferLUT@max_voltage_print_3305 02BE  
          ringBufferLUT@max_voltage_print_3299 02B6                                        ?_strstr 0126  
                             ?_DATAEE_ReadByte 0117                                     ??i2___wmul 0005  
                               _FLASH_ReadWord A810                                        u2051_41 86E6  
                                      u2053_41 8712                                        i2l11011 A62C  
                                      _INT0PPS 000DF0                                        i2l13061 7B74  
                                      i2l22421 2E7E                                        i2l22511 3298  
                                      i2l22503 324A                                        i2l22431 2EF8  
                                      i2l22531 33AA                                        i2l13653 8EE2  
                                      i2l22609 371E                                        i2l22707 3BBC  
                                      i2l22563 34B2                                        i2l22813 4012  
                                      i2l22805 3FA2                                        i2l22575 3534  
                                      i2l22693 3B7A              i2writeDoubleToEEPROM@input_double 0005  
              writeDoubleToEEPROM@input_double 011B                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OLED_YX A9C8  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 9610                                      _I2C1_Stop A8D2  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 005E  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                       ??_readDoubleFromEEPROM 011D                                        _SSP1ADD 000F92  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
                                      _SSP1BUF 000F91            __end_of_max_Temp_ADC_Result_address CF57  
                  _max_Temp_ADC_Result_address CF55                       _acquisitionTimerCallback B140  
                     __end_of_max_Irms_address CF5F                        __end_of_TMR5_WriteTimer B046  
             __size_of_terminal_textAttributes 0368                                        i2_scale 4FE0  
                             ?_TMR5_Initialize 0001                  I2C1_MasterTRBInsert@ptrb_list 0117  
                         DATAEE_WriteByte@bAdd 0117                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch B24A              __size_of_INT0_SetInterruptHandler 000E  
                        i2DATAEE_ReadByte@bAdd 0001                      ?_INT0_SetInterruptHandler 0117  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset B140  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset B12E  
                       ?_I2C1_FunctionComplete 0001                                  ??_getADCError 0117  
                            __end_of__npowers_ CF0B                                        __Hparam 0000  
                __size_of_I2C1_MasterTRBInsert 00A2            __end_of_writeEnergyToEEPROMCallback 9C5A  
                  _writeEnergyToEEPROMCallback 9BD8                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$5189 0173             __end_of_max_FVR_ADC_Result_address CF55  
                   _max_FVR_ADC_Result_address CF53                                        __Lparam 0000  
                            __end_of_getUserID A810                          _ADCC_ClearAccumulator B26A  
                   ??_TMR5_SetInterruptHandler 011A                             _p_i2c1_trb_current 0262  
                     ??_dimmingOffTimeCallback 0003                                __size_of___flge 0122  
                                      ___fladd 5E6A                                        ___fldiv 7072  
                                      ___awdiv 9A4A                                        ___flneg AD00  
                                      ___awmod 9DD2                                 i2__doprnt$5434 0094  
                                      ___flmul 57C8                                        ___flsub A6F6  
                                      ___fltol 9200                                        ___lldiv 9AD0  
                              __size_of___wmul 0028                                        ___llmod A062  
                       __end_of_FLASH_ReadByte B060                                        __doprnt 1666  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord A852  
                                      __pcinit 9932                              __end_of_eval_poly 9200  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                         __end_of_OLED_Command A6F6                                        __ptext0 8A5A  
             i2readDoubleFromEEPROM@byte_index 000B                 readDoubleFromEEPROM@byte_index 0121  
                                      __ptext1 B094                                        __ptext2 B152  
                                      __ptext3 8B80                                        __ptext4 0000  
                                      __ptext5 B12E                                        __ptext6 5460  
                                      __ptext7 9FFA                                        __ptext8 A57C  
                                      __ptext9 B162                              __end_of_peakToRMS 7F92  
                              __size_of_printf 003C                  currentMeasuredToPeak@Measured 0099  
                   ringBufferLUT@angle_degrees 02A6                  ?_ADCC_SetADTIInterruptHandler 0117  
                      __size_of_TMR5_StopTimer 0004                                __size_of_strcat 004C  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                                i2_fround$5431 0051                                  i2_fround$5432 004D  
                              __size_of_strcpy 0036                                __size_of_strlen 0058  
                            __end_of_hexpowers CF53                         getCauseOfResetString@r 0119  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers CF0B                          _OSCILLATOR_Initialize AFF2  
                       ??_EUSART2_Transmit_ISR 0100                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit AF58  
                              atan@val_squared 0089                                 i2__doprnt@flag 00AD  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                      _memmove 9610                                     ??___xxtofl 011B  
                               i2__doprnt@fval 00A3                               ___awmod@dividend 0117  
                               i2__doprnt@prec 00AF                                      _T4CONbits 000FB7  
                         __end_of_OLED_PutChar 9766                       ??_PIN_MANAGER_Initialize 0117  
            __size_of_TMR4_SetInterruptHandler 000E                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR4_SetInterruptHandler 0117  
                                   ?_I2C1_Stop 0001                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                                    _T4HLTbits 000FB8                    __end_of_saveSRAMMaxToEEPROM 7AF0  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 02C4  
                                    _T6HLTbits 000FB2                               ??_clearADCErrors 0117  
                   __size_of_SYSTEM_Initialize 003A                           I2C1_ISR@pi2c_buf_ptr 025E  
                                __doprnt@width 01A5                          i2EUSART2_Write@txData 0001  
                                      _strncmp 98A2                                 __pintcode_body 8FF8  
                                      _strncpy 9FFA                           end_of_initialization 99B4  
                      __end_of_TMR7_WriteTimer AE7C                                        ftoa@buf 0273  
                             ?_clearCOMMErrors 0001                 ??_TMR4_DefaultInterruptHandler 0001  
                      getDeviceIDString@F17550 02E2                         _terminal_setCursorHome B152  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                                    _T4RSTbits 000FBA                               ?_TMR7_Initialize 0001  
                         _max_POS12_ADC_Result 0218                        ??_dimmingOnTimeCallback 0001  
                                      int_func 8FF8                            i2___wmul@multiplier 0001  
                                    _T6RSTbits 000FB4                                      i1u1471_20 A89E  
                                    i1u1472_28 A8A2                                      i1u3412_28 ADF4  
                                    i1u3414_28 AC56                                      i2u1041_40 751C  
                                    i2u1044_40 7572                                      i2u2020_40 6938  
                                    i2u1045_40 7596                                      i2u2021_40 693A  
                                    i2u2013_40 9E7E                                      i2u2007_40 9B9A  
                                    i1u3447_28 0086                                      i2u2050_40 8A48  
                               i2___xxtofl@arg 000F                                      i2u1219_45 AAEC  
                                    i2u1219_46 AAEE                                      _OLED_Init 9808  
                             i2_TMR5_StopTimer B27A                                      i2u1181_40 9D9E  
                                    i2u1181_48 9DA0                                      i2u2063_40 9C8C  
                               i2___xxtofl@exp 000E                                      i2u1257_40 A56A  
                               i2___xxtofl@val 0005                                      i2u2066_40 A154  
                                    i2u2251_40 420A                                      i2u2059_40 87F6  
                                    i2u2260_40 48F4                                      i2u2253_40 42C8  
                                    i2u2262_40 4AD0                                      i2u3230_40 2D62  
                                    i2u3222_40 2C2C                                      i2u3221_48 2BAA  
                                    i2u3230_47 2D58                                      i2u3222_47 2C22  
                                    i2u3231_40 2DA0                                      i2u3223_40 2C54  
                                    i2u3231_47 2D96                                      i2u3223_47 2C4A  
                                    i2u2248_40 4100                                      i2u1289_40 B232  
                                    i2u3320_48 3D72                                      i2u3240_48 2EA4  
                                    i2u3225_40 2CAE                         ??_I2C1_BusCollisionISR 0001  
                                    i2u3225_47 2CA4                                      i2u2258_40 4814  
                                    i2u3322_40 3DC4                                      i2u3234_40 2E3A  
                                    i2u3226_40 2CEA                                      i2u3234_47 2E30  
                                    i2u3226_47 2CE0                                      i2u3410_48 AE1C  
                                    i2u3331_40 4032                                      i2u3330_48 3FE0  
                                    i2u3235_40 2E40                                      i2u3227_40 2CF2  
                                    i2u3332_40 4062                                      i2u3244_40 2F52  
                                    i2u3243_48 2F1E                                      i2u3228_40 2D14  
                                    i2u3243_49 2F54                                      i2u3332_47 4058  
                                    i2u3244_47 2F48                                      i2u3228_47 2D0A  
                                    i2u1741_40 6302                                      i2u3333_40 406E  
                                    i2u3325_40 3E3A                                      i2u3324_48 3DEA  
                                    i2u3245_40 2F96                                      i2u3245_47 2F8C  
                                    i2u3317_48 3D02                                      i2u3406_40 AE92  
                                    i2u3263_40 33E8                                      i2u3255_40 3210  
                                    i2u3247_40 302C                                      i2u3247_47 3022  
                                    i2u1736_40 62AE                                      i2u3271_48 34DA  
                                    i2u3256_40 325C                                      i2u3335_48 AF22  
                                    i2u1737_40 62BE                                      i2u3328_48 3E74  
                                    i2u3280_48 36CC                                      i2u3408_48 AC8A  
                                    i2u1762_40 64A6                                      i2u1754_40 6438  
                                    i2u1738_40 62C0                                      i2u3418_40 95A8  
                                    i2u3337_48 AEFE                                      i2u3290_48 393E  
                                    i2u3275_40 35B0                                      i2u3274_48 355A  
                                    i2u3259_40 3298                                      i2u3284_40 379A  
                                    i2u3283_48 3744                                      i2u1757_40 6450  
                                    i2u1773_40 5BA6                                      i2u3285_40 37AA  
                                    i2u1782_40 5E02                                      i2u1774_40 5D1C  
                                    i2u3293_48 3A0A                                      i2u3269_48 3470  
                                    i2u1774_45 5D12                                      i2u1783_40 5E20  
                                    i2u3278_48 35EA                                      i2u3438_48 9088  
                      __end_of_I2C1_Initialize ABCC                                      i2u3288_48 37EC  
                              ___lldiv@divisor 011B                                      i2u1779_40 5DAC  
                                    i2u1963_40 8002                                      i2u1964_40 8004  
                                    i2u1973_40 9394                                      i2u1981_40 8414  
                  __end_of_writeDoubleToEEPROM A440                                      i2u1969_40 931C  
                                    i2u1969_45 9312                                      i2u1999_40 8F3C  
                              ___lldiv@counter 0123                             _EUSART2_Initialize A0CA  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 0124                                i2_EUSART2_Write A660  
                                ??_getDeviceID 0124                                        printf@f 01AC  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 846C  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 004C  
                             ?_TMR5_StartTimer 0001                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$5421 00D6                 _ADCPostProcessingCallback$5422 00DA  
               _ADCPostProcessingCallback$5423 00C9                 _ADCPostProcessingCallback$5424 00CD  
               _ADCPostProcessingCallback$5425 00D1                                        sqrt@grs 007B  
                                      sqrt@exp 007F                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                            __end_of_getADCError AC36  
                                      strlen@s 0117                   terminal_ringBufferPull@index 02CC  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler B1AE                      __size_of_I2C1_MasterWrite 0050  
                            __size_of_I2C1_ISR 0258                          _TMR5_InterruptHandler 024A  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
               __size_ofi2_writeDoubleToEEPROM 004C                  __end_ofi2_writeDoubleToEEPROM A660  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 61A8  
                                    i2___fldiv 7328                                      i2___awdiv 9B54  
                                    i2___flneg AD60                                      i2___awmod 9E44  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 5B1A  
                                    i2___flsub A73E                                      i2___fltol 92DE  
                                    i2___lldiv 9C5A                                      i2___llmod A132  
                     __end_of_DATAEE_WriteByte A950              I2C1_ISR@i2c_10bit_address_restart 026A  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                                    i2__doprnt 2B74                         _terminal_clearTerminal B172  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 1666  
                            OLED_WriteString@s 0138                                    ___flmul@grs 0164  
                                 _EUSART2_Read A5C8                             i2___llmod@dividend 000E  
                                   ?_OLED_Init 0001                                _HLVD_Initialize B182  
                           i2___awdiv@dividend 0007                         ?_ADCC_ClearAccumulator 0001  
                                    i2_isdigit AFB8                        I2C1_MasterWrite@address 0123  
                            __size_of_INT0_ISR 000A                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0038                             _max_FVR_ADC_Result 0210  
              __size_of_dimmingOffTimeCallback 0018                                      _Avg_Power 01C6  
                 __end_of_INTERRUPT_Initialize B02A                       ??i2_readDoubleFromEEPROM 0007  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 8DC6           __end_of_INT0_DefaultInterruptHandler B294  
        __size_of_INT0_DefaultInterruptHandler 0002                   _INT0_DefaultInterruptHandler B292  
                __end_of_terminal_printNewline B172                                 __end_of___wmul ADE0  
                      I2C1_MasterWrite@trBlock 0289                       I2C1_Stop@completion_code 0003  
                            __size_of_TMR4_ISR 0026                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID AF9A                                 __end_of_fround 7072  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                       __size_of_updateErrorLEDs 0018  
                             i2___wmul@product 0005                                 __end_of_printf A9C8  
                        __end_of_INT0_CallBack AF36                             _getMajorRevisionID A950  
                               __end_of_strcat A5C8                                 __end_of_strchr AB28  
                               __end_of_strcmp A3F0                                 __end_of_strcpy AB96  
                               __end_of_strlen A250                                 __end_of_strstr 9A4A  
                            __size_ofi2___flge 0120                            start_initialization 9932  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026                                    ??_I2C1_Stop 0001  
         __end_of_TMR5_DefaultInterruptHandler B290          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler B28E                __size_of_PIN_MANAGER_Initialize 00CC  
                          __end_of__tdiv_to_l_ 86D6                                    __end_of_abs ADB8  
                                  __end_of_sin 6AE4                                      i2printf@f 00B2  
                      _terminal_textAttributes 5460                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E              __size_of_I2C1_MasterWriteTRBBuild 0046  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                    ?_I2C1_MasterWriteTRBBuild 0117                              __size_ofi2_printf 003C  
                        __end_of_EUSART2_Write A52E                               ?_TMR7_WriteTimer 0100  
                                   ?i2__doprnt 0088                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0294                        __end_ofi2_EUSART2_Write A6AC  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                          DATAEE_ReadByte@bAdd 0117                                     ?i2_isdigit 0001  
                             ?_I2C1_Initialize 0001                                 _FVR_ADC_Result 01E2  
                             __CFG_LPBOREN$OFF 000000                                    _getADCError AC02  
                    __size_of_OLED_WriteString 0058                                       ??___flge 011F  
                        __size_of_OLED_Command 004A                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                     OLED_YX@Row 012D  
                                  __doprnt@idx 0192                                    __doprnt@len 0195  
                                  __doprnt@exp 0197                                    __doprnt@val 01A1  
                                  __pdataBANK0 00F0                                    __pdataBANK2 02D0  
                                     ??_fround 0173                                  _ringBufferLUT 0000  
                   __end_of_EXT_INT_Initialize AFB8                 ??_terminal_textAttributesReset 01BF  
                        __size_of_OLED_PutChar 00A8                  ?_INT0_DefaultInterruptHandler 0001  
                                     ??_printf 01B6              getCauseOfReset@return_reset_cause 0117  
       i2readDoubleFromEEPROM@starting_address 0003           readDoubleFromEEPROM@starting_address 0119  
                            _POS3P3_ADC_Result 01DA                                 _TMR5_StopTimer B276  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                   I2C1_MasterWriteTRBBuild@ptrb 0117  
                   __end_of_getMinorRevisionID AE56                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02EC                                     fround@prec 017B  
                               _eusart2RxCount 0272                                  ?i2__div_to_l_ 0001  
                           i2_DATAEE_WriteByte AAB6                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$5426 00AD  
                        TMR4_ISR@CountCallBack 0264                                      ___flmul@a 015A  
                                    ___flmul@b 0156                                      ___flsub@a 0141  
                                    ___flsub@b 013D               __end_of_INT0_SetInterruptHandler B1E6  
                                     ?_OLED_YX 012B                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0293  
                       _dimmingOffTimeCallback B0C4                                  _i2c1_tr_queue 028E  
                            __size_of___xxtofl 0154                                   _isdigit$4329 0118  
                ?_TMR5_DefaultInterruptHandler 0001                        __end_of_HLVD_Initialize B192  
                          ?i2_DATAEE_WriteByte 0001                            EUSART2_Write@txData 0117  
                       __size_of_TMR4_CallBack 0024                                   _load_on_time 0228  
                  __end_of_ADCC_StopConversion B286                                       ?i2_scale 0049  
              ??_EUSART2_SetRxInterruptHandler 011A                        ??_I2C1_FunctionComplete 0001  
                                     ?i2_putch 0001                                      _asin$5427 00A5  
                                    _asin$5428 009D                                      _asin$5429 0099  
                                    __doprnt@c 01AB                                      __doprnt@f 0184  
                                 _OLED_Command A6AC                                     sin@coeff_a D279  
                                   sin@coeff_b D2A1                                    ??_OLED_Init 012B  
                        _TMR6_InterruptHandler 0253                                      __pnvBANK2 02F5  
                  getMinorRevisionID@REVID_RAW 0122                         _PIN_MANAGER_Initialize 9494  
                                 _OLED_PutChar 96BE                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID AF7A  
                                __pmediumconst CEA2                                       ?___fladd 0129  
             __end_of_TMR4_SetInterruptHandler B1D8                                       ?___fldiv 013D  
                                     ?___awdiv 011D                           ??i2_DATAEE_WriteByte 0004  
                                    __ptext100 B210                                      __ptext101 B25C  
                                    __ptext110 B28E                                      __ptext102 B26A  
                                     ?___flneg 0125                                      __ptext111 B21E  
                                    __ptext103 AE56                                      __ptext120 AF12  
                                    __ptext112 B27A                                      __ptext104 ADE0  
                                    __ptext121 B292                                      __ptext113 AE7C  
                                    __ptext105 B28C                                      __ptext130 A614  
                                    __ptext122 B0C4                                      __ptext114 AEEE  
                                    __ptext106 A892                                      __ptext131 AAB6  
                                    __ptext123 B02A                                      __ptext115 B290  
                                    __ptext107 ABCC                                      __ptext140 9E44  
                                    __ptext132 9560                                      __ptext124 B27E  
                                    __ptext116 9BD8                                      __ptext141 9B54  
                                    __ptext133 AA04                                      __ptext125 7AF0  
                                    __ptext117 A52E                                      __ptext109 AC6A  
                                    __ptext150 7D48                                      __ptext142 86D6  
                                    __ptext134 2B74                                      __ptext126 A8D2  
                                    __ptext118 B0AC                                      __ptext151 9F22  
                                    __ptext143 8932                                      __ptext135 4FE0  
                                    __ptext127 B07A                                      __ptext119 B240  
                                    __ptext160 7328                                      __ptext152 64E6  
                                    __ptext144 AEA2                                      __ptext136 B24A  
                                    __ptext128 B270                                      __ptext161 8EE6  
                                    __ptext153 6AE4                                      __ptext145 A132  
                                    __ptext137 A660                                      __ptext129 AB28  
                                    __ptext170 B282                                      __ptext162 831C  
                                    __ptext154 7F92                                      __ptext146 9C5A  
                                    __ptext138 AFB8                                      __ptext171 B22A  
                                    __ptext163 92DE                                      __ptext155 AA40  
                                    __ptext147 AE08                                      __ptext139 75DC  
                                    __ptext172 B106                                      __ptext164 8DC6  
                                    __ptext156 9CDC                                      __ptext148 B294  
                                    __ptext173 B286                                      __ptext165 9D58  
                                    __ptext157 67EA                                      __ptext149 4078  
                                    __ptext174 B11A                                      __ptext166 9100  
                                    __ptext158 A73E                                      __ptext175 0000  
                                    __ptext167 5B1A                                      __ptext159 AD60  
                                    __ptext168 61A8                                      __ptext169 AD8E  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler B1AE                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ CED7  
                              _getCauseOfReset A34E                                 ?_ringBufferLUT 01BF  
              __size_ofi2_readDoubleFromEEPROM 004E                                      _getUserID A7CC  
                       __end_of_TMR5_StopTimer B27A              _EUSART2_TxDefaultInterruptHandler 0259  
                                     ?__doprnt 0182                         OLED_PutChar@data_array 012B  
                                  __pintcodelo 0018                                       _I2C1_ISR 7AF0  
                                  __tdiv_to_l_ 85A2                               _I2C1_MasterWrite A490  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01D6                                       _BAUD2CON 000EF7  
                     __end_ofi2_TMR5_StopTimer B27E           __size_of_writeEnergyToEEPROMCallback 0082  
                 __end_of_I2C1_MasterTRBInsert 9808                                       ?_isdigit 0001  
                                     ?_memmove 0117                                    _dev_on_time 022C  
                                    _eval_poly 9100                      ??_terminal_textAttributes 01BF  
                i2DATAEE_WriteByte@GIEBitValue 0004                                      _max_Power 0220  
                                    _attribute 0271                                      _peakToRMS 7D48  
                             __CFG_WDTE$NSLEEP 000000                       __size_of_TMR4_Initialize 0030  
                      ?_terminal_setCursorHome 0001                                      _hexpowers CF33  
            __size_of_OLED_UpdateFromRAMBuffer 006E                         _heartbeatTimerCallback A892  
                               _dimming_period 00F0                      ?_OLED_UpdateFromRAMBuffer 0001  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                            ??_updateErrorLEDs 0117                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                     __size_of_DATAEE_ReadByte 001A                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                       _T4CLKCON 000FB9  
                __size_of_readDoubleFromEEPROM 0052                       _recoverSRAMMaxFromEEPROM 846C  
                               __size_of_putch 0014                           _INTERRUPT_Initialize B00E  
                                     _T6CLKCON 000FB3                                    ??i2__doprnt 008E  
       terminal_textAttributes@input_attribute 01BE       __end_of_I2C1_WaitForLastPacketToComplete B240  
    __size_of_I2C1_WaitForLastPacketToComplete 000A              ?_I2C1_WaitForLastPacketToComplete 0001  
           ??_I2C1_WaitForLastPacketToComplete 0117               _I2C1_WaitForLastPacketToComplete B236  
                       I2C1_MasterRead@trBlock 0284                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00B0  
                                     _INT0_ISR B240                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               i2__doprnt@tmpval 009F  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR AB28  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR0bits 000E1F  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _PIE0bits 000E29                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                 __size_of_dimmingOnTimeCallback 000C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                __end_of_dimmingOnTimeCallback B22A                            _max_Temp_ADC_Result 0214  
                                     _PIR0bits 000E33                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 8932                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _SSP1CON1 000F95                                       _SSP1CON3 000F97  
                                     _TMR4_ISR AE7C                                  _TMR4_CallBack AEEE  
                                     _TMR5_ISR AC6A                                       _TMR6_ISR ADE0  
                                     _TMR7_ISR AC36                                       _SSP1STAT 000F94  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                ?_TMR5_StopTimer 0001  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 8DC6  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul AEA2                        __size_of_FVR_Initialize 0008  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome B162  
                                ?_getCOMMError 0001                              i2___awdiv@divisor 0009  
                                     i2_fround 75DC                 ??_INT0_DefaultInterruptHandler 0001  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
              i2writeDoubleToEEPROM@byte_index 000F                  writeDoubleToEEPROM@byte_index 0125  
                            i2___awdiv@counter 000B                    __end_of_ADCC_GetFilterValue B11A  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                        DATAEE_WriteByte@bData 0119                                       i2_printf AA04  
                          __end_ofatan@coeff_a D279                            __end_ofatan@coeff_b D2A1  
                             __size_of_OLED_YX 003C                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address CF5B  
                       i2_readDoubleFromEEPROM A52E                                      copy_data0 9946  
                                    copy_data1 9966                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 026E  
                     _INT0_SetInterruptHandler B1D8                              i2_DATAEE_ReadByte B0AC  
                           i2___awmod@dividend 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100                             ?i2_DATAEE_ReadByte 0001  
             __size_of_terminal_ringBufferPull 0124                               __size_ofi2_scale 0480  
                                     _OledFont CF61                 ??_TMR5_DefaultInterruptHandler 0001  
                 __size_of_saveSRAMMaxToEEPROM 0266                             ??_DATAEE_WriteByte 011A  
                                 _next_channel 02F4                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                        __end_of_getCauseOfReset A3A0  
              __end_of_terminal_textAttributes 57C8                i2writeDoubleToEEPROM@input_data 000B  
                writeDoubleToEEPROM@input_data 0121                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult B12E           __end_of_max_POS12_ADC_Result_address CF59  
                 _max_POS12_ADC_Result_address CF57                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler B202         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler B1F4                         OLED_PutChar@input_base 0134  
                     __size_of_clearCOMMErrors 000E                               _OLED_WriteString A250  
                __size_of_I2C1_BusCollisionISR 0006                                       __Lrparam 0000  
                          ??i2_DATAEE_ReadByte 0003                                ??_ringBufferLUT 01C1  
                     __size_of_TMR7_Initialize 0054                                 ?_TMR4_CallBack 0001  
                       I2C1_ISR@i2c_bytes_left 026B                               _foreground_color 0270  
                      ??_OSCILLATOR_Initialize 0117                                      memmove@d1 0117  
                                    memmove@s1 0119                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F0  
             __end_of_acquisitionTimerCallback B152               __end_of_I2C1_MasterWriteTRBBuild A7CC  
                             __size_of__doprnt 150E                                    _fround$5187 0177  
                                  _fround$5188 0173                          __end_ofi2__tdiv_to_l_ 8808  
                     _TMR4_SetInterruptHandler B1CA                                _putch$intlevel0 B0F8  
                     _TMR7_SetInterruptHandler B1A0                          _TMR7_InterruptHandler 024D  
                           _ADC_Result_Scaling 023C                                 ??_getCOMMError 0117  
      terminal_textAttributes@foreground_color 0293                                       ___xxtofl 81C8  
                     __size_of_TMR5_StartTimer 0004                       __size_of_ADCC_Initialize 006A  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal B182                               __size_of_isdigit 0022  
                    __end_of_max_Power_address CF5D                               __size_of_memmove 00AE  
                          I2C1_ISR@i2c_address 01E6                      __end_ofi2_DATAEE_ReadByte B0C4  
                                     __ptext10 99BE                                       __ptext11 98A2  
                                     __ptext20 A810                                       __ptext12 A1F8  
                                     __ptext21 B046                                       __ptext13 AAF0  
                                     __ptext30 A5C8                                       __ptext22 ACD0  
                                     __ptext14 A3A0                                       __ptext31 B172  
                                     __ptext23 B0DC                                       __ptext15 A7CC  
                                     __ptext40 9DD2                                       __ptext32 A98C  
                                     __ptext24 AC02                                       __ptext16 AE30  
                                     __ptext41 9A4A                                       __ptext33 1666  
                                     __ptext25 B192                                       __ptext17 A950  
                                     __ptext50 5E6A                                       __ptext42 85A2  
                                     __ptext34 4B3C                                       __ptext26 AF36  
                                     __ptext18 A198                                       __ptext51 AD00  
                                     __ptext43 8808                                       __ptext35 B0F2  
                                     __ptext27 93BC                                       __ptext19 AF7A  
                                     __ptext60 A34E                                       __ptext52 AB60  
                                     __ptext44 81C8                                       __ptext36 A4E0  
                                     __ptext28 7072                                       __ptext61 AA7C  
                                     __ptext53 788A                                       __ptext45 ADB8  
                                     __ptext37 AF58                                       __ptext29 B276  
                                     __ptext70 AFD6                                       __ptext62 A2A8  
                                     __ptext54 A3F0                                       __ptext46 A062  
                                     __ptext38 6DAC                                       __ptext71 9494  
                                     __ptext63 B1A0                                       __ptext55 A912  
                                     __ptext47 9AD0                                       __ptext39 57C8  
                                     __ptext80 B1E6                                       __ptext72 AFF2  
                                     __ptext64 AC9E                                       __ptext56 8CA4  
                                     __ptext48 9200                                       __ptext81 B1F4  
                                     __ptext73 B00E                                       __ptext65 B1AE  
                                     __ptext57 846C                                       __ptext49 A6F6  
                                     __ptext90 9808                                       __ptext82 9F90  
                                     __ptext74 AB96                                       __ptext66 A440  
                                     __ptext58 A2FC                                       __ptext91 A6AC  
                                     __ptext83 B202                                       __ptext75 B182  
                                     __ptext67 B1BC                                       __ptext59 B060  
                                     __ptext92 A490                                       __ptext84 9EB4  
                                     __ptext76 B254                                       __ptext68 AD30  
                                     __ptext93 A786                                       __ptext85 A9C8  
                                     __ptext77 AF9A                                       __ptext69 B1CA  
                                     __ptext94 9766                                       __ptext86 A250  
                                     __ptext78 B1D8                                       __ptext95 B236  
                                     __ptext87 A852                                       __ptext79 A0CA  
                                     __ptext88 96BE                                       __ptext97 AC36  
                                     __ptext89 9610                                       __ptext98 B28A  
                                     __ptext99 B140                                       _sin$5430 0090  
                                 _SSP1CON1bits 000F95                                   _SSP1CON2bits 000F96  
                                     __powers_ CEA3                            ringBufferLUT@userID 02C6  
                              _Temp_ADC_Offset 02F0                          i2_writeDoubleToEEPROM A614  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0068  
                                   strcpy@from 0119                                       _max_Irms 0224  
                               i2_isdigit$4329 0002                                _Temp_ADC_Result 01D2  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                            ??_TMR4_Initialize 011A                                  __size_of_atan 0236  
                                __size_of_asin 0304                                  __size_of_atoi 00D8  
                                __size_of_main 0126                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 02C8             __size_of_ADCPostProcessingCallback 0AC4  
                                OLED_Clear@col 013A                           __end_ofi2__div_to_l_ 8A5A  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                                OLED_Clear@row 0138                                i2__doprnt@width 00AB  
                            ??_DATAEE_ReadByte 0119                                  OLED_YX@Column 012B  
                         __CFG_WDTCWS$WDTCWS_7 000000                             OLED_PutChar@length 0136  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                         _I2C1_MasterTRBInsert 9766                                   ?_getADCError 0001  
                      __size_of_clearADCErrors 0022                       __size_of_TMR5_WriteTimer 001C  
                               OLED_PutChar@ch 0137                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion B21E                                       int$flags 005F  
                                     atoi@sign 0121                                    ??_getUserID 0124  
                               __doprnt@tmpval 0199                                    atan@coeff_a D261  
                                  atan@coeff_b D28D                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline B162                              i2___awmod@divisor 0003  
                      ?_dimmingOffTimeCallback 0001                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                _OLED_I2C_Status 01E8  
                                     memmove@d 011F                                       memmove@n 011B  
                                     memmove@s 0121                                       scale@scl 0177  
                                    sqrt@tfrac 0076                             _EXT_INT_Initialize AF9A  
         __end_of_TMR6_DefaultInterruptHandler B28E          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler B28C           __end_of_ADCC_DefaultInterruptHandler B296  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler B294  
                                     intlevel1 0000                                       intlevel2 0000  
                                   _OLED_Clear A852                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID AE30  
                             __tdiv_to_l_@quot 0120                                i2___xxtofl@sign 000D  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 02C2                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                     __end_of_I2C1_MasterWrite A4E0                              __CFG_CLKOUTEN$OFF 000000  
               __size_of_I2C1_FunctionComplete 001A                            ?_EXT_INT_Initialize 0001  
                __end_of_I2C1_FunctionComplete B094                          ?_I2C1_MasterTRBInsert 0117  
                                  _reset_cause 02F5                                      strncmp@s1 011D  
                                    strncmp@s2 011F                               ?_getCauseOfReset 0001  
                              _AVSS_ADC_Result 0240              __end_of_ADCPostProcessingCallback 4B3C  
                              ??_TMR4_CallBack 0044                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                       __size_of_INT0_CallBack 0024                       __size_of_TMR7_WriteTimer 0026  
                 ?_writeEnergyToEEPROMCallback 0001                                   ?_getDeviceID 0122  
                                     printf@ap 01B6                                       printf@pb 01B8  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString AD00  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult B11A  
               ?_EUSART2_SetRxInterruptHandler 0117               __end_of_OLED_UpdateFromRAMBuffer 9F22  
                            ??_clearCOMMErrors 0117                       __size_of_I2C1_Initialize 0036  
                                 ?__tdiv_to_l_ 0117                 __end_of_dimmingOffTimeCallback B0DC  
                       __size_of_EUSART2_Write 004E                            _EUSART2_Receive_ISR 9560  
                              _updateErrorLEDs B094                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 9100        __size_of_INTERRUPT_InterruptManagerHigh 90F8  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 0125                                       sqrt@root 0081  
                            ??_TMR7_Initialize 011A                                 _FVR_Initialize B254  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                                   _SSP1DATPPS 000E1A                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                                   _SSP1CLKPPS 000E19                              ringBufferLUT@line 01BF  
                             ___lldiv@quotient 011F                        i2DATAEE_WriteByte@bData 0003  
                            ?i2_TMR5_StopTimer 0001                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                       _I2C1_MasterWriteTRBBuild A786  
                            _getDeviceIDString A198                             ??i2_TMR5_StopTimer 0001  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                 _Total_Energy 00F6                     __size_ofi2_DATAEE_ReadByte 0018  
                       ?i2_writeDoubleToEEPROM 0005                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                              ??_TMR5_StartTimer 0001  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 9560  
                            ??_ADCC_Initialize 011A                         i2DATAEE_WriteByte@bAdd 0001  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 8B80                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                           __size_of_I2C1_Stop 0040                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                            ??_getDeviceIDString 0126  
            _EUSART2_RxDefaultInterruptHandler 0256                 __size_of_currentMeasuredToPeak 007C  
                         __end_of_getCOMMError B0F2                               ??_TMR5_StopTimer 0117  
                __end_of_currentMeasuredToPeak 9D58                   __size_of_ADCC_StopConversion 0004  
